// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
type AppImageConfigFileSystemConfig struct {
	// The default POSIX group ID (GID). If not specified, defaults to 100.
	DefaultGid *int `pulumi:"defaultGid"`
	// The default POSIX user ID (UID). If not specified, defaults to 1000.
	DefaultUid *int `pulumi:"defaultUid"`
	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
	MountPath *string `pulumi:"mountPath"`
}

// AppImageConfigFileSystemConfigInput is an input type that accepts AppImageConfigFileSystemConfigArgs and AppImageConfigFileSystemConfigOutput values.
// You can construct a concrete instance of `AppImageConfigFileSystemConfigInput` via:
//
//	AppImageConfigFileSystemConfigArgs{...}
type AppImageConfigFileSystemConfigInput interface {
	pulumi.Input

	ToAppImageConfigFileSystemConfigOutput() AppImageConfigFileSystemConfigOutput
	ToAppImageConfigFileSystemConfigOutputWithContext(context.Context) AppImageConfigFileSystemConfigOutput
}

// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
type AppImageConfigFileSystemConfigArgs struct {
	// The default POSIX group ID (GID). If not specified, defaults to 100.
	DefaultGid pulumi.IntPtrInput `pulumi:"defaultGid"`
	// The default POSIX user ID (UID). If not specified, defaults to 1000.
	DefaultUid pulumi.IntPtrInput `pulumi:"defaultUid"`
	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
}

func (AppImageConfigFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigFileSystemConfig)(nil)).Elem()
}

func (i AppImageConfigFileSystemConfigArgs) ToAppImageConfigFileSystemConfigOutput() AppImageConfigFileSystemConfigOutput {
	return i.ToAppImageConfigFileSystemConfigOutputWithContext(context.Background())
}

func (i AppImageConfigFileSystemConfigArgs) ToAppImageConfigFileSystemConfigOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigFileSystemConfigOutput)
}

func (i AppImageConfigFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigFileSystemConfig] {
	return pulumix.Output[AppImageConfigFileSystemConfig]{
		OutputState: i.ToAppImageConfigFileSystemConfigOutputWithContext(ctx).OutputState,
	}
}

func (i AppImageConfigFileSystemConfigArgs) ToAppImageConfigFileSystemConfigPtrOutput() AppImageConfigFileSystemConfigPtrOutput {
	return i.ToAppImageConfigFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i AppImageConfigFileSystemConfigArgs) ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigFileSystemConfigOutput).ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx)
}

// AppImageConfigFileSystemConfigPtrInput is an input type that accepts AppImageConfigFileSystemConfigArgs, AppImageConfigFileSystemConfigPtr and AppImageConfigFileSystemConfigPtrOutput values.
// You can construct a concrete instance of `AppImageConfigFileSystemConfigPtrInput` via:
//
//	        AppImageConfigFileSystemConfigArgs{...}
//
//	or:
//
//	        nil
type AppImageConfigFileSystemConfigPtrInput interface {
	pulumi.Input

	ToAppImageConfigFileSystemConfigPtrOutput() AppImageConfigFileSystemConfigPtrOutput
	ToAppImageConfigFileSystemConfigPtrOutputWithContext(context.Context) AppImageConfigFileSystemConfigPtrOutput
}

type appImageConfigFileSystemConfigPtrType AppImageConfigFileSystemConfigArgs

func AppImageConfigFileSystemConfigPtr(v *AppImageConfigFileSystemConfigArgs) AppImageConfigFileSystemConfigPtrInput {
	return (*appImageConfigFileSystemConfigPtrType)(v)
}

func (*appImageConfigFileSystemConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppImageConfigFileSystemConfig)(nil)).Elem()
}

func (i *appImageConfigFileSystemConfigPtrType) ToAppImageConfigFileSystemConfigPtrOutput() AppImageConfigFileSystemConfigPtrOutput {
	return i.ToAppImageConfigFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i *appImageConfigFileSystemConfigPtrType) ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigFileSystemConfigPtrOutput)
}

func (i *appImageConfigFileSystemConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigFileSystemConfig] {
	return pulumix.Output[*AppImageConfigFileSystemConfig]{
		OutputState: i.ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
type AppImageConfigFileSystemConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigFileSystemConfig)(nil)).Elem()
}

func (o AppImageConfigFileSystemConfigOutput) ToAppImageConfigFileSystemConfigOutput() AppImageConfigFileSystemConfigOutput {
	return o
}

func (o AppImageConfigFileSystemConfigOutput) ToAppImageConfigFileSystemConfigOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigOutput {
	return o
}

func (o AppImageConfigFileSystemConfigOutput) ToAppImageConfigFileSystemConfigPtrOutput() AppImageConfigFileSystemConfigPtrOutput {
	return o.ToAppImageConfigFileSystemConfigPtrOutputWithContext(context.Background())
}

func (o AppImageConfigFileSystemConfigOutput) ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppImageConfigFileSystemConfig) *AppImageConfigFileSystemConfig {
		return &v
	}).(AppImageConfigFileSystemConfigPtrOutput)
}

func (o AppImageConfigFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigFileSystemConfig] {
	return pulumix.Output[AppImageConfigFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

// The default POSIX group ID (GID). If not specified, defaults to 100.
func (o AppImageConfigFileSystemConfigOutput) DefaultGid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppImageConfigFileSystemConfig) *int { return v.DefaultGid }).(pulumi.IntPtrOutput)
}

// The default POSIX user ID (UID). If not specified, defaults to 1000.
func (o AppImageConfigFileSystemConfigOutput) DefaultUid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppImageConfigFileSystemConfig) *int { return v.DefaultUid }).(pulumi.IntPtrOutput)
}

// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
func (o AppImageConfigFileSystemConfigOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppImageConfigFileSystemConfig) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

type AppImageConfigFileSystemConfigPtrOutput struct{ *pulumi.OutputState }

func (AppImageConfigFileSystemConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppImageConfigFileSystemConfig)(nil)).Elem()
}

func (o AppImageConfigFileSystemConfigPtrOutput) ToAppImageConfigFileSystemConfigPtrOutput() AppImageConfigFileSystemConfigPtrOutput {
	return o
}

func (o AppImageConfigFileSystemConfigPtrOutput) ToAppImageConfigFileSystemConfigPtrOutputWithContext(ctx context.Context) AppImageConfigFileSystemConfigPtrOutput {
	return o
}

func (o AppImageConfigFileSystemConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigFileSystemConfig] {
	return pulumix.Output[*AppImageConfigFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o AppImageConfigFileSystemConfigPtrOutput) Elem() AppImageConfigFileSystemConfigOutput {
	return o.ApplyT(func(v *AppImageConfigFileSystemConfig) AppImageConfigFileSystemConfig {
		if v != nil {
			return *v
		}
		var ret AppImageConfigFileSystemConfig
		return ret
	}).(AppImageConfigFileSystemConfigOutput)
}

// The default POSIX group ID (GID). If not specified, defaults to 100.
func (o AppImageConfigFileSystemConfigPtrOutput) DefaultGid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppImageConfigFileSystemConfig) *int {
		if v == nil {
			return nil
		}
		return v.DefaultGid
	}).(pulumi.IntPtrOutput)
}

// The default POSIX user ID (UID). If not specified, defaults to 1000.
func (o AppImageConfigFileSystemConfigPtrOutput) DefaultUid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppImageConfigFileSystemConfig) *int {
		if v == nil {
			return nil
		}
		return v.DefaultUid
	}).(pulumi.IntPtrOutput)
}

// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
func (o AppImageConfigFileSystemConfigPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppImageConfigFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
type AppImageConfigKernelGatewayImageConfig struct {
	// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
	FileSystemConfig *AppImageConfigFileSystemConfig `pulumi:"fileSystemConfig"`
	// The specification of the Jupyter kernels in the image.
	KernelSpecs []AppImageConfigKernelSpec `pulumi:"kernelSpecs"`
}

// AppImageConfigKernelGatewayImageConfigInput is an input type that accepts AppImageConfigKernelGatewayImageConfigArgs and AppImageConfigKernelGatewayImageConfigOutput values.
// You can construct a concrete instance of `AppImageConfigKernelGatewayImageConfigInput` via:
//
//	AppImageConfigKernelGatewayImageConfigArgs{...}
type AppImageConfigKernelGatewayImageConfigInput interface {
	pulumi.Input

	ToAppImageConfigKernelGatewayImageConfigOutput() AppImageConfigKernelGatewayImageConfigOutput
	ToAppImageConfigKernelGatewayImageConfigOutputWithContext(context.Context) AppImageConfigKernelGatewayImageConfigOutput
}

// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
type AppImageConfigKernelGatewayImageConfigArgs struct {
	// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
	FileSystemConfig AppImageConfigFileSystemConfigPtrInput `pulumi:"fileSystemConfig"`
	// The specification of the Jupyter kernels in the image.
	KernelSpecs AppImageConfigKernelSpecArrayInput `pulumi:"kernelSpecs"`
}

func (AppImageConfigKernelGatewayImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigOutput() AppImageConfigKernelGatewayImageConfigOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigOutputWithContext(context.Background())
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigOutput)
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelGatewayImageConfig] {
	return pulumix.Output[AppImageConfigKernelGatewayImageConfig]{
		OutputState: i.ToAppImageConfigKernelGatewayImageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigPtrOutput() AppImageConfigKernelGatewayImageConfigPtrOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(context.Background())
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigOutput).ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx)
}

// AppImageConfigKernelGatewayImageConfigPtrInput is an input type that accepts AppImageConfigKernelGatewayImageConfigArgs, AppImageConfigKernelGatewayImageConfigPtr and AppImageConfigKernelGatewayImageConfigPtrOutput values.
// You can construct a concrete instance of `AppImageConfigKernelGatewayImageConfigPtrInput` via:
//
//	        AppImageConfigKernelGatewayImageConfigArgs{...}
//
//	or:
//
//	        nil
type AppImageConfigKernelGatewayImageConfigPtrInput interface {
	pulumi.Input

	ToAppImageConfigKernelGatewayImageConfigPtrOutput() AppImageConfigKernelGatewayImageConfigPtrOutput
	ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(context.Context) AppImageConfigKernelGatewayImageConfigPtrOutput
}

type appImageConfigKernelGatewayImageConfigPtrType AppImageConfigKernelGatewayImageConfigArgs

func AppImageConfigKernelGatewayImageConfigPtr(v *AppImageConfigKernelGatewayImageConfigArgs) AppImageConfigKernelGatewayImageConfigPtrInput {
	return (*appImageConfigKernelGatewayImageConfigPtrType)(v)
}

func (*appImageConfigKernelGatewayImageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (i *appImageConfigKernelGatewayImageConfigPtrType) ToAppImageConfigKernelGatewayImageConfigPtrOutput() AppImageConfigKernelGatewayImageConfigPtrOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(context.Background())
}

func (i *appImageConfigKernelGatewayImageConfigPtrType) ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigPtrOutput)
}

func (i *appImageConfigKernelGatewayImageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigKernelGatewayImageConfig] {
	return pulumix.Output[*AppImageConfigKernelGatewayImageConfig]{
		OutputState: i.ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
type AppImageConfigKernelGatewayImageConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelGatewayImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigOutput() AppImageConfigKernelGatewayImageConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigPtrOutput() AppImageConfigKernelGatewayImageConfigPtrOutput {
	return o.ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(context.Background())
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppImageConfigKernelGatewayImageConfig) *AppImageConfigKernelGatewayImageConfig {
		return &v
	}).(AppImageConfigKernelGatewayImageConfigPtrOutput)
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelGatewayImageConfig] {
	return pulumix.Output[AppImageConfigKernelGatewayImageConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
func (o AppImageConfigKernelGatewayImageConfigOutput) FileSystemConfig() AppImageConfigFileSystemConfigPtrOutput {
	return o.ApplyT(func(v AppImageConfigKernelGatewayImageConfig) *AppImageConfigFileSystemConfig {
		return v.FileSystemConfig
	}).(AppImageConfigFileSystemConfigPtrOutput)
}

// The specification of the Jupyter kernels in the image.
func (o AppImageConfigKernelGatewayImageConfigOutput) KernelSpecs() AppImageConfigKernelSpecArrayOutput {
	return o.ApplyT(func(v AppImageConfigKernelGatewayImageConfig) []AppImageConfigKernelSpec { return v.KernelSpecs }).(AppImageConfigKernelSpecArrayOutput)
}

type AppImageConfigKernelGatewayImageConfigPtrOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelGatewayImageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (o AppImageConfigKernelGatewayImageConfigPtrOutput) ToAppImageConfigKernelGatewayImageConfigPtrOutput() AppImageConfigKernelGatewayImageConfigPtrOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigPtrOutput) ToAppImageConfigKernelGatewayImageConfigPtrOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigPtrOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigKernelGatewayImageConfig] {
	return pulumix.Output[*AppImageConfigKernelGatewayImageConfig]{
		OutputState: o.OutputState,
	}
}

func (o AppImageConfigKernelGatewayImageConfigPtrOutput) Elem() AppImageConfigKernelGatewayImageConfigOutput {
	return o.ApplyT(func(v *AppImageConfigKernelGatewayImageConfig) AppImageConfigKernelGatewayImageConfig {
		if v != nil {
			return *v
		}
		var ret AppImageConfigKernelGatewayImageConfig
		return ret
	}).(AppImageConfigKernelGatewayImageConfigOutput)
}

// The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
func (o AppImageConfigKernelGatewayImageConfigPtrOutput) FileSystemConfig() AppImageConfigFileSystemConfigPtrOutput {
	return o.ApplyT(func(v *AppImageConfigKernelGatewayImageConfig) *AppImageConfigFileSystemConfig {
		if v == nil {
			return nil
		}
		return v.FileSystemConfig
	}).(AppImageConfigFileSystemConfigPtrOutput)
}

// The specification of the Jupyter kernels in the image.
func (o AppImageConfigKernelGatewayImageConfigPtrOutput) KernelSpecs() AppImageConfigKernelSpecArrayOutput {
	return o.ApplyT(func(v *AppImageConfigKernelGatewayImageConfig) []AppImageConfigKernelSpec {
		if v == nil {
			return nil
		}
		return v.KernelSpecs
	}).(AppImageConfigKernelSpecArrayOutput)
}

type AppImageConfigKernelSpec struct {
	// The display name of the kernel.
	DisplayName *string `pulumi:"displayName"`
	// The name of the kernel.
	Name string `pulumi:"name"`
}

// AppImageConfigKernelSpecInput is an input type that accepts AppImageConfigKernelSpecArgs and AppImageConfigKernelSpecOutput values.
// You can construct a concrete instance of `AppImageConfigKernelSpecInput` via:
//
//	AppImageConfigKernelSpecArgs{...}
type AppImageConfigKernelSpecInput interface {
	pulumi.Input

	ToAppImageConfigKernelSpecOutput() AppImageConfigKernelSpecOutput
	ToAppImageConfigKernelSpecOutputWithContext(context.Context) AppImageConfigKernelSpecOutput
}

type AppImageConfigKernelSpecArgs struct {
	// The display name of the kernel.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name of the kernel.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AppImageConfigKernelSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelSpec)(nil)).Elem()
}

func (i AppImageConfigKernelSpecArgs) ToAppImageConfigKernelSpecOutput() AppImageConfigKernelSpecOutput {
	return i.ToAppImageConfigKernelSpecOutputWithContext(context.Background())
}

func (i AppImageConfigKernelSpecArgs) ToAppImageConfigKernelSpecOutputWithContext(ctx context.Context) AppImageConfigKernelSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelSpecOutput)
}

func (i AppImageConfigKernelSpecArgs) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelSpec] {
	return pulumix.Output[AppImageConfigKernelSpec]{
		OutputState: i.ToAppImageConfigKernelSpecOutputWithContext(ctx).OutputState,
	}
}

// AppImageConfigKernelSpecArrayInput is an input type that accepts AppImageConfigKernelSpecArray and AppImageConfigKernelSpecArrayOutput values.
// You can construct a concrete instance of `AppImageConfigKernelSpecArrayInput` via:
//
//	AppImageConfigKernelSpecArray{ AppImageConfigKernelSpecArgs{...} }
type AppImageConfigKernelSpecArrayInput interface {
	pulumi.Input

	ToAppImageConfigKernelSpecArrayOutput() AppImageConfigKernelSpecArrayOutput
	ToAppImageConfigKernelSpecArrayOutputWithContext(context.Context) AppImageConfigKernelSpecArrayOutput
}

type AppImageConfigKernelSpecArray []AppImageConfigKernelSpecInput

func (AppImageConfigKernelSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppImageConfigKernelSpec)(nil)).Elem()
}

func (i AppImageConfigKernelSpecArray) ToAppImageConfigKernelSpecArrayOutput() AppImageConfigKernelSpecArrayOutput {
	return i.ToAppImageConfigKernelSpecArrayOutputWithContext(context.Background())
}

func (i AppImageConfigKernelSpecArray) ToAppImageConfigKernelSpecArrayOutputWithContext(ctx context.Context) AppImageConfigKernelSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelSpecArrayOutput)
}

func (i AppImageConfigKernelSpecArray) ToOutput(ctx context.Context) pulumix.Output[[]AppImageConfigKernelSpec] {
	return pulumix.Output[[]AppImageConfigKernelSpec]{
		OutputState: i.ToAppImageConfigKernelSpecArrayOutputWithContext(ctx).OutputState,
	}
}

type AppImageConfigKernelSpecOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelSpec)(nil)).Elem()
}

func (o AppImageConfigKernelSpecOutput) ToAppImageConfigKernelSpecOutput() AppImageConfigKernelSpecOutput {
	return o
}

func (o AppImageConfigKernelSpecOutput) ToAppImageConfigKernelSpecOutputWithContext(ctx context.Context) AppImageConfigKernelSpecOutput {
	return o
}

func (o AppImageConfigKernelSpecOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelSpec] {
	return pulumix.Output[AppImageConfigKernelSpec]{
		OutputState: o.OutputState,
	}
}

// The display name of the kernel.
func (o AppImageConfigKernelSpecOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppImageConfigKernelSpec) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of the kernel.
func (o AppImageConfigKernelSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppImageConfigKernelSpec) string { return v.Name }).(pulumi.StringOutput)
}

type AppImageConfigKernelSpecArrayOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppImageConfigKernelSpec)(nil)).Elem()
}

func (o AppImageConfigKernelSpecArrayOutput) ToAppImageConfigKernelSpecArrayOutput() AppImageConfigKernelSpecArrayOutput {
	return o
}

func (o AppImageConfigKernelSpecArrayOutput) ToAppImageConfigKernelSpecArrayOutputWithContext(ctx context.Context) AppImageConfigKernelSpecArrayOutput {
	return o
}

func (o AppImageConfigKernelSpecArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AppImageConfigKernelSpec] {
	return pulumix.Output[[]AppImageConfigKernelSpec]{
		OutputState: o.OutputState,
	}
}

func (o AppImageConfigKernelSpecArrayOutput) Index(i pulumi.IntInput) AppImageConfigKernelSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppImageConfigKernelSpec {
		return vs[0].([]AppImageConfigKernelSpec)[vs[1].(int)]
	}).(AppImageConfigKernelSpecOutput)
}

type AppImageConfigTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AppImageConfigTagInput is an input type that accepts AppImageConfigTagArgs and AppImageConfigTagOutput values.
// You can construct a concrete instance of `AppImageConfigTagInput` via:
//
//	AppImageConfigTagArgs{...}
type AppImageConfigTagInput interface {
	pulumi.Input

	ToAppImageConfigTagOutput() AppImageConfigTagOutput
	ToAppImageConfigTagOutputWithContext(context.Context) AppImageConfigTagOutput
}

type AppImageConfigTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppImageConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigTag)(nil)).Elem()
}

func (i AppImageConfigTagArgs) ToAppImageConfigTagOutput() AppImageConfigTagOutput {
	return i.ToAppImageConfigTagOutputWithContext(context.Background())
}

func (i AppImageConfigTagArgs) ToAppImageConfigTagOutputWithContext(ctx context.Context) AppImageConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigTagOutput)
}

func (i AppImageConfigTagArgs) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigTag] {
	return pulumix.Output[AppImageConfigTag]{
		OutputState: i.ToAppImageConfigTagOutputWithContext(ctx).OutputState,
	}
}

// AppImageConfigTagArrayInput is an input type that accepts AppImageConfigTagArray and AppImageConfigTagArrayOutput values.
// You can construct a concrete instance of `AppImageConfigTagArrayInput` via:
//
//	AppImageConfigTagArray{ AppImageConfigTagArgs{...} }
type AppImageConfigTagArrayInput interface {
	pulumi.Input

	ToAppImageConfigTagArrayOutput() AppImageConfigTagArrayOutput
	ToAppImageConfigTagArrayOutputWithContext(context.Context) AppImageConfigTagArrayOutput
}

type AppImageConfigTagArray []AppImageConfigTagInput

func (AppImageConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppImageConfigTag)(nil)).Elem()
}

func (i AppImageConfigTagArray) ToAppImageConfigTagArrayOutput() AppImageConfigTagArrayOutput {
	return i.ToAppImageConfigTagArrayOutputWithContext(context.Background())
}

func (i AppImageConfigTagArray) ToAppImageConfigTagArrayOutputWithContext(ctx context.Context) AppImageConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigTagArrayOutput)
}

func (i AppImageConfigTagArray) ToOutput(ctx context.Context) pulumix.Output[[]AppImageConfigTag] {
	return pulumix.Output[[]AppImageConfigTag]{
		OutputState: i.ToAppImageConfigTagArrayOutputWithContext(ctx).OutputState,
	}
}

type AppImageConfigTagOutput struct{ *pulumi.OutputState }

func (AppImageConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigTag)(nil)).Elem()
}

func (o AppImageConfigTagOutput) ToAppImageConfigTagOutput() AppImageConfigTagOutput {
	return o
}

func (o AppImageConfigTagOutput) ToAppImageConfigTagOutputWithContext(ctx context.Context) AppImageConfigTagOutput {
	return o
}

func (o AppImageConfigTagOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigTag] {
	return pulumix.Output[AppImageConfigTag]{
		OutputState: o.OutputState,
	}
}

func (o AppImageConfigTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppImageConfigTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AppImageConfigTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppImageConfigTag) string { return v.Value }).(pulumi.StringOutput)
}

type AppImageConfigTagArrayOutput struct{ *pulumi.OutputState }

func (AppImageConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppImageConfigTag)(nil)).Elem()
}

func (o AppImageConfigTagArrayOutput) ToAppImageConfigTagArrayOutput() AppImageConfigTagArrayOutput {
	return o
}

func (o AppImageConfigTagArrayOutput) ToAppImageConfigTagArrayOutputWithContext(ctx context.Context) AppImageConfigTagArrayOutput {
	return o
}

func (o AppImageConfigTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AppImageConfigTag] {
	return pulumix.Output[[]AppImageConfigTag]{
		OutputState: o.OutputState,
	}
}

func (o AppImageConfigTagArrayOutput) Index(i pulumi.IntInput) AppImageConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppImageConfigTag {
		return vs[0].([]AppImageConfigTag)[vs[1].(int)]
	}).(AppImageConfigTagOutput)
}

type AppResourceSpec struct {
	// The instance type that the image version runs on.
	InstanceType *AppResourceSpecInstanceType `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// AppResourceSpecInput is an input type that accepts AppResourceSpecArgs and AppResourceSpecOutput values.
// You can construct a concrete instance of `AppResourceSpecInput` via:
//
//	AppResourceSpecArgs{...}
type AppResourceSpecInput interface {
	pulumi.Input

	ToAppResourceSpecOutput() AppResourceSpecOutput
	ToAppResourceSpecOutputWithContext(context.Context) AppResourceSpecOutput
}

type AppResourceSpecArgs struct {
	// The instance type that the image version runs on.
	InstanceType AppResourceSpecInstanceTypePtrInput `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn pulumi.StringPtrInput `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn pulumi.StringPtrInput `pulumi:"sageMakerImageVersionArn"`
}

func (AppResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceSpec)(nil)).Elem()
}

func (i AppResourceSpecArgs) ToAppResourceSpecOutput() AppResourceSpecOutput {
	return i.ToAppResourceSpecOutputWithContext(context.Background())
}

func (i AppResourceSpecArgs) ToAppResourceSpecOutputWithContext(ctx context.Context) AppResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourceSpecOutput)
}

func (i AppResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[AppResourceSpec] {
	return pulumix.Output[AppResourceSpec]{
		OutputState: i.ToAppResourceSpecOutputWithContext(ctx).OutputState,
	}
}

func (i AppResourceSpecArgs) ToAppResourceSpecPtrOutput() AppResourceSpecPtrOutput {
	return i.ToAppResourceSpecPtrOutputWithContext(context.Background())
}

func (i AppResourceSpecArgs) ToAppResourceSpecPtrOutputWithContext(ctx context.Context) AppResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourceSpecOutput).ToAppResourceSpecPtrOutputWithContext(ctx)
}

// AppResourceSpecPtrInput is an input type that accepts AppResourceSpecArgs, AppResourceSpecPtr and AppResourceSpecPtrOutput values.
// You can construct a concrete instance of `AppResourceSpecPtrInput` via:
//
//	        AppResourceSpecArgs{...}
//
//	or:
//
//	        nil
type AppResourceSpecPtrInput interface {
	pulumi.Input

	ToAppResourceSpecPtrOutput() AppResourceSpecPtrOutput
	ToAppResourceSpecPtrOutputWithContext(context.Context) AppResourceSpecPtrOutput
}

type appResourceSpecPtrType AppResourceSpecArgs

func AppResourceSpecPtr(v *AppResourceSpecArgs) AppResourceSpecPtrInput {
	return (*appResourceSpecPtrType)(v)
}

func (*appResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppResourceSpec)(nil)).Elem()
}

func (i *appResourceSpecPtrType) ToAppResourceSpecPtrOutput() AppResourceSpecPtrOutput {
	return i.ToAppResourceSpecPtrOutputWithContext(context.Background())
}

func (i *appResourceSpecPtrType) ToAppResourceSpecPtrOutputWithContext(ctx context.Context) AppResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourceSpecPtrOutput)
}

func (i *appResourceSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*AppResourceSpec] {
	return pulumix.Output[*AppResourceSpec]{
		OutputState: i.ToAppResourceSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type AppResourceSpecOutput struct{ *pulumi.OutputState }

func (AppResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceSpec)(nil)).Elem()
}

func (o AppResourceSpecOutput) ToAppResourceSpecOutput() AppResourceSpecOutput {
	return o
}

func (o AppResourceSpecOutput) ToAppResourceSpecOutputWithContext(ctx context.Context) AppResourceSpecOutput {
	return o
}

func (o AppResourceSpecOutput) ToAppResourceSpecPtrOutput() AppResourceSpecPtrOutput {
	return o.ToAppResourceSpecPtrOutputWithContext(context.Background())
}

func (o AppResourceSpecOutput) ToAppResourceSpecPtrOutputWithContext(ctx context.Context) AppResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppResourceSpec) *AppResourceSpec {
		return &v
	}).(AppResourceSpecPtrOutput)
}

func (o AppResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[AppResourceSpec] {
	return pulumix.Output[AppResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.
func (o AppResourceSpecOutput) InstanceType() AppResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v AppResourceSpec) *AppResourceSpecInstanceType { return v.InstanceType }).(AppResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o AppResourceSpecOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourceSpec) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o AppResourceSpecOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppResourceSpec) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type AppResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (AppResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppResourceSpec)(nil)).Elem()
}

func (o AppResourceSpecPtrOutput) ToAppResourceSpecPtrOutput() AppResourceSpecPtrOutput {
	return o
}

func (o AppResourceSpecPtrOutput) ToAppResourceSpecPtrOutputWithContext(ctx context.Context) AppResourceSpecPtrOutput {
	return o
}

func (o AppResourceSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppResourceSpec] {
	return pulumix.Output[*AppResourceSpec]{
		OutputState: o.OutputState,
	}
}

func (o AppResourceSpecPtrOutput) Elem() AppResourceSpecOutput {
	return o.ApplyT(func(v *AppResourceSpec) AppResourceSpec {
		if v != nil {
			return *v
		}
		var ret AppResourceSpec
		return ret
	}).(AppResourceSpecOutput)
}

// The instance type that the image version runs on.
func (o AppResourceSpecPtrOutput) InstanceType() AppResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v *AppResourceSpec) *AppResourceSpecInstanceType {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(AppResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o AppResourceSpecPtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o AppResourceSpecPtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

type AppTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AppTagInput is an input type that accepts AppTagArgs and AppTagOutput values.
// You can construct a concrete instance of `AppTagInput` via:
//
//	AppTagArgs{...}
type AppTagInput interface {
	pulumi.Input

	ToAppTagOutput() AppTagOutput
	ToAppTagOutputWithContext(context.Context) AppTagOutput
}

type AppTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTag)(nil)).Elem()
}

func (i AppTagArgs) ToAppTagOutput() AppTagOutput {
	return i.ToAppTagOutputWithContext(context.Background())
}

func (i AppTagArgs) ToAppTagOutputWithContext(ctx context.Context) AppTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTagOutput)
}

func (i AppTagArgs) ToOutput(ctx context.Context) pulumix.Output[AppTag] {
	return pulumix.Output[AppTag]{
		OutputState: i.ToAppTagOutputWithContext(ctx).OutputState,
	}
}

// AppTagArrayInput is an input type that accepts AppTagArray and AppTagArrayOutput values.
// You can construct a concrete instance of `AppTagArrayInput` via:
//
//	AppTagArray{ AppTagArgs{...} }
type AppTagArrayInput interface {
	pulumi.Input

	ToAppTagArrayOutput() AppTagArrayOutput
	ToAppTagArrayOutputWithContext(context.Context) AppTagArrayOutput
}

type AppTagArray []AppTagInput

func (AppTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTag)(nil)).Elem()
}

func (i AppTagArray) ToAppTagArrayOutput() AppTagArrayOutput {
	return i.ToAppTagArrayOutputWithContext(context.Background())
}

func (i AppTagArray) ToAppTagArrayOutputWithContext(ctx context.Context) AppTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTagArrayOutput)
}

func (i AppTagArray) ToOutput(ctx context.Context) pulumix.Output[[]AppTag] {
	return pulumix.Output[[]AppTag]{
		OutputState: i.ToAppTagArrayOutputWithContext(ctx).OutputState,
	}
}

type AppTagOutput struct{ *pulumi.OutputState }

func (AppTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTag)(nil)).Elem()
}

func (o AppTagOutput) ToAppTagOutput() AppTagOutput {
	return o
}

func (o AppTagOutput) ToAppTagOutputWithContext(ctx context.Context) AppTagOutput {
	return o
}

func (o AppTagOutput) ToOutput(ctx context.Context) pulumix.Output[AppTag] {
	return pulumix.Output[AppTag]{
		OutputState: o.OutputState,
	}
}

func (o AppTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o AppTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppTag) string { return v.Value }).(pulumi.StringOutput)
}

type AppTagArrayOutput struct{ *pulumi.OutputState }

func (AppTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTag)(nil)).Elem()
}

func (o AppTagArrayOutput) ToAppTagArrayOutput() AppTagArrayOutput {
	return o
}

func (o AppTagArrayOutput) ToAppTagArrayOutputWithContext(ctx context.Context) AppTagArrayOutput {
	return o
}

func (o AppTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AppTag] {
	return pulumix.Output[[]AppTag]{
		OutputState: o.OutputState,
	}
}

func (o AppTagArrayOutput) Index(i pulumi.IntInput) AppTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTag {
		return vs[0].([]AppTag)[vs[1].(int)]
	}).(AppTagOutput)
}

type CodeRepositoryGitConfig struct {
	Branch        *string `pulumi:"branch"`
	RepositoryUrl string  `pulumi:"repositoryUrl"`
	SecretArn     *string `pulumi:"secretArn"`
}

// CodeRepositoryGitConfigInput is an input type that accepts CodeRepositoryGitConfigArgs and CodeRepositoryGitConfigOutput values.
// You can construct a concrete instance of `CodeRepositoryGitConfigInput` via:
//
//	CodeRepositoryGitConfigArgs{...}
type CodeRepositoryGitConfigInput interface {
	pulumi.Input

	ToCodeRepositoryGitConfigOutput() CodeRepositoryGitConfigOutput
	ToCodeRepositoryGitConfigOutputWithContext(context.Context) CodeRepositoryGitConfigOutput
}

type CodeRepositoryGitConfigArgs struct {
	Branch        pulumi.StringPtrInput `pulumi:"branch"`
	RepositoryUrl pulumi.StringInput    `pulumi:"repositoryUrl"`
	SecretArn     pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (CodeRepositoryGitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryGitConfig)(nil)).Elem()
}

func (i CodeRepositoryGitConfigArgs) ToCodeRepositoryGitConfigOutput() CodeRepositoryGitConfigOutput {
	return i.ToCodeRepositoryGitConfigOutputWithContext(context.Background())
}

func (i CodeRepositoryGitConfigArgs) ToCodeRepositoryGitConfigOutputWithContext(ctx context.Context) CodeRepositoryGitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeRepositoryGitConfigOutput)
}

func (i CodeRepositoryGitConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CodeRepositoryGitConfig] {
	return pulumix.Output[CodeRepositoryGitConfig]{
		OutputState: i.ToCodeRepositoryGitConfigOutputWithContext(ctx).OutputState,
	}
}

type CodeRepositoryGitConfigOutput struct{ *pulumi.OutputState }

func (CodeRepositoryGitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryGitConfig)(nil)).Elem()
}

func (o CodeRepositoryGitConfigOutput) ToCodeRepositoryGitConfigOutput() CodeRepositoryGitConfigOutput {
	return o
}

func (o CodeRepositoryGitConfigOutput) ToCodeRepositoryGitConfigOutputWithContext(ctx context.Context) CodeRepositoryGitConfigOutput {
	return o
}

func (o CodeRepositoryGitConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CodeRepositoryGitConfig] {
	return pulumix.Output[CodeRepositoryGitConfig]{
		OutputState: o.OutputState,
	}
}

func (o CodeRepositoryGitConfigOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeRepositoryGitConfig) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o CodeRepositoryGitConfigOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v CodeRepositoryGitConfig) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

func (o CodeRepositoryGitConfigOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeRepositoryGitConfig) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type CodeRepositoryGitConfigPtrOutput struct{ *pulumi.OutputState }

func (CodeRepositoryGitConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeRepositoryGitConfig)(nil)).Elem()
}

func (o CodeRepositoryGitConfigPtrOutput) ToCodeRepositoryGitConfigPtrOutput() CodeRepositoryGitConfigPtrOutput {
	return o
}

func (o CodeRepositoryGitConfigPtrOutput) ToCodeRepositoryGitConfigPtrOutputWithContext(ctx context.Context) CodeRepositoryGitConfigPtrOutput {
	return o
}

func (o CodeRepositoryGitConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CodeRepositoryGitConfig] {
	return pulumix.Output[*CodeRepositoryGitConfig]{
		OutputState: o.OutputState,
	}
}

func (o CodeRepositoryGitConfigPtrOutput) Elem() CodeRepositoryGitConfigOutput {
	return o.ApplyT(func(v *CodeRepositoryGitConfig) CodeRepositoryGitConfig {
		if v != nil {
			return *v
		}
		var ret CodeRepositoryGitConfig
		return ret
	}).(CodeRepositoryGitConfigOutput)
}

func (o CodeRepositoryGitConfigPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeRepositoryGitConfig) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o CodeRepositoryGitConfigPtrOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeRepositoryGitConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryUrl
	}).(pulumi.StringPtrOutput)
}

func (o CodeRepositoryGitConfigPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeRepositoryGitConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

type CodeRepositoryTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// CodeRepositoryTagInput is an input type that accepts CodeRepositoryTagArgs and CodeRepositoryTagOutput values.
// You can construct a concrete instance of `CodeRepositoryTagInput` via:
//
//	CodeRepositoryTagArgs{...}
type CodeRepositoryTagInput interface {
	pulumi.Input

	ToCodeRepositoryTagOutput() CodeRepositoryTagOutput
	ToCodeRepositoryTagOutputWithContext(context.Context) CodeRepositoryTagOutput
}

type CodeRepositoryTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CodeRepositoryTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryTag)(nil)).Elem()
}

func (i CodeRepositoryTagArgs) ToCodeRepositoryTagOutput() CodeRepositoryTagOutput {
	return i.ToCodeRepositoryTagOutputWithContext(context.Background())
}

func (i CodeRepositoryTagArgs) ToCodeRepositoryTagOutputWithContext(ctx context.Context) CodeRepositoryTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeRepositoryTagOutput)
}

func (i CodeRepositoryTagArgs) ToOutput(ctx context.Context) pulumix.Output[CodeRepositoryTag] {
	return pulumix.Output[CodeRepositoryTag]{
		OutputState: i.ToCodeRepositoryTagOutputWithContext(ctx).OutputState,
	}
}

// CodeRepositoryTagArrayInput is an input type that accepts CodeRepositoryTagArray and CodeRepositoryTagArrayOutput values.
// You can construct a concrete instance of `CodeRepositoryTagArrayInput` via:
//
//	CodeRepositoryTagArray{ CodeRepositoryTagArgs{...} }
type CodeRepositoryTagArrayInput interface {
	pulumi.Input

	ToCodeRepositoryTagArrayOutput() CodeRepositoryTagArrayOutput
	ToCodeRepositoryTagArrayOutputWithContext(context.Context) CodeRepositoryTagArrayOutput
}

type CodeRepositoryTagArray []CodeRepositoryTagInput

func (CodeRepositoryTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodeRepositoryTag)(nil)).Elem()
}

func (i CodeRepositoryTagArray) ToCodeRepositoryTagArrayOutput() CodeRepositoryTagArrayOutput {
	return i.ToCodeRepositoryTagArrayOutputWithContext(context.Background())
}

func (i CodeRepositoryTagArray) ToCodeRepositoryTagArrayOutputWithContext(ctx context.Context) CodeRepositoryTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeRepositoryTagArrayOutput)
}

func (i CodeRepositoryTagArray) ToOutput(ctx context.Context) pulumix.Output[[]CodeRepositoryTag] {
	return pulumix.Output[[]CodeRepositoryTag]{
		OutputState: i.ToCodeRepositoryTagArrayOutputWithContext(ctx).OutputState,
	}
}

type CodeRepositoryTagOutput struct{ *pulumi.OutputState }

func (CodeRepositoryTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryTag)(nil)).Elem()
}

func (o CodeRepositoryTagOutput) ToCodeRepositoryTagOutput() CodeRepositoryTagOutput {
	return o
}

func (o CodeRepositoryTagOutput) ToCodeRepositoryTagOutputWithContext(ctx context.Context) CodeRepositoryTagOutput {
	return o
}

func (o CodeRepositoryTagOutput) ToOutput(ctx context.Context) pulumix.Output[CodeRepositoryTag] {
	return pulumix.Output[CodeRepositoryTag]{
		OutputState: o.OutputState,
	}
}

func (o CodeRepositoryTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CodeRepositoryTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o CodeRepositoryTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CodeRepositoryTag) string { return v.Value }).(pulumi.StringOutput)
}

type CodeRepositoryTagArrayOutput struct{ *pulumi.OutputState }

func (CodeRepositoryTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CodeRepositoryTag)(nil)).Elem()
}

func (o CodeRepositoryTagArrayOutput) ToCodeRepositoryTagArrayOutput() CodeRepositoryTagArrayOutput {
	return o
}

func (o CodeRepositoryTagArrayOutput) ToCodeRepositoryTagArrayOutputWithContext(ctx context.Context) CodeRepositoryTagArrayOutput {
	return o
}

func (o CodeRepositoryTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CodeRepositoryTag] {
	return pulumix.Output[[]CodeRepositoryTag]{
		OutputState: o.OutputState,
	}
}

func (o CodeRepositoryTagArrayOutput) Index(i pulumi.IntInput) CodeRepositoryTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CodeRepositoryTag {
		return vs[0].([]CodeRepositoryTag)[vs[1].(int)]
	}).(CodeRepositoryTagOutput)
}

// The batch transform input for a monitoring job.
type DataQualityJobDefinitionBatchTransformInput struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri string                                `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                DataQualityJobDefinitionDatasetFormat `pulumi:"datasetFormat"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute *string `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *DataQualityJobDefinitionBatchTransformInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *DataQualityJobDefinitionBatchTransformInputS3InputMode `pulumi:"s3InputMode"`
}

// DataQualityJobDefinitionBatchTransformInputInput is an input type that accepts DataQualityJobDefinitionBatchTransformInputArgs and DataQualityJobDefinitionBatchTransformInputOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionBatchTransformInputInput` via:
//
//	DataQualityJobDefinitionBatchTransformInputArgs{...}
type DataQualityJobDefinitionBatchTransformInputInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionBatchTransformInputOutput() DataQualityJobDefinitionBatchTransformInputOutput
	ToDataQualityJobDefinitionBatchTransformInputOutputWithContext(context.Context) DataQualityJobDefinitionBatchTransformInputOutput
}

// The batch transform input for a monitoring job.
type DataQualityJobDefinitionBatchTransformInputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri pulumi.StringInput                         `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                DataQualityJobDefinitionDatasetFormatInput `pulumi:"datasetFormat"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute pulumi.StringPtrInput `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType DataQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode DataQualityJobDefinitionBatchTransformInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (DataQualityJobDefinitionBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionBatchTransformInputArgs) ToDataQualityJobDefinitionBatchTransformInputOutput() DataQualityJobDefinitionBatchTransformInputOutput {
	return i.ToDataQualityJobDefinitionBatchTransformInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionBatchTransformInputArgs) ToDataQualityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionBatchTransformInputOutput)
}

func (i DataQualityJobDefinitionBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[DataQualityJobDefinitionBatchTransformInput]{
		OutputState: i.ToDataQualityJobDefinitionBatchTransformInputOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionBatchTransformInputArgs) ToDataQualityJobDefinitionBatchTransformInputPtrOutput() DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionBatchTransformInputArgs) ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionBatchTransformInputOutput).ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionBatchTransformInputPtrInput is an input type that accepts DataQualityJobDefinitionBatchTransformInputArgs, DataQualityJobDefinitionBatchTransformInputPtr and DataQualityJobDefinitionBatchTransformInputPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionBatchTransformInputPtrInput` via:
//
//	        DataQualityJobDefinitionBatchTransformInputArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionBatchTransformInputPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionBatchTransformInputPtrOutput() DataQualityJobDefinitionBatchTransformInputPtrOutput
	ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Context) DataQualityJobDefinitionBatchTransformInputPtrOutput
}

type dataQualityJobDefinitionBatchTransformInputPtrType DataQualityJobDefinitionBatchTransformInputArgs

func DataQualityJobDefinitionBatchTransformInputPtr(v *DataQualityJobDefinitionBatchTransformInputArgs) DataQualityJobDefinitionBatchTransformInputPtrInput {
	return (*dataQualityJobDefinitionBatchTransformInputPtrType)(v)
}

func (*dataQualityJobDefinitionBatchTransformInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i *dataQualityJobDefinitionBatchTransformInputPtrType) ToDataQualityJobDefinitionBatchTransformInputPtrOutput() DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionBatchTransformInputPtrType) ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (i *dataQualityJobDefinitionBatchTransformInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*DataQualityJobDefinitionBatchTransformInput]{
		OutputState: i.ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The batch transform input for a monitoring job.
type DataQualityJobDefinitionBatchTransformInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) ToDataQualityJobDefinitionBatchTransformInputOutput() DataQualityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) ToDataQualityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) ToDataQualityJobDefinitionBatchTransformInputPtrOutput() DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionBatchTransformInput {
		return &v
	}).(DataQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[DataQualityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o DataQualityJobDefinitionBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) string { return v.DataCapturedDestinationS3Uri }).(pulumi.StringOutput)
}

func (o DataQualityJobDefinitionBatchTransformInputOutput) DatasetFormat() DataQualityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) DataQualityJobDefinitionDatasetFormat {
		return v.DatasetFormat
	}).(DataQualityJobDefinitionDatasetFormatOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o DataQualityJobDefinitionBatchTransformInputOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) *string { return v.ExcludeFeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o DataQualityJobDefinitionBatchTransformInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o DataQualityJobDefinitionBatchTransformInputOutput) S3DataDistributionType() DataQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionBatchTransformInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(DataQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o DataQualityJobDefinitionBatchTransformInputOutput) S3InputMode() DataQualityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionBatchTransformInputS3InputMode {
		return v.S3InputMode
	}).(DataQualityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

type DataQualityJobDefinitionBatchTransformInputPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionBatchTransformInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) ToDataQualityJobDefinitionBatchTransformInputPtrOutput() DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) ToDataQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*DataQualityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) Elem() DataQualityJobDefinitionBatchTransformInputOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) DataQualityJobDefinitionBatchTransformInput {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionBatchTransformInput
		return ret
	}).(DataQualityJobDefinitionBatchTransformInputOutput)
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) DataCapturedDestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.DataCapturedDestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) DatasetFormat() DataQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionDatasetFormat {
		if v == nil {
			return nil
		}
		return &v.DatasetFormat
	}).(DataQualityJobDefinitionDatasetFormatPtrOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeFeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) S3DataDistributionType() DataQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionBatchTransformInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(DataQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o DataQualityJobDefinitionBatchTransformInputPtrOutput) S3InputMode() DataQualityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionBatchTransformInput) *DataQualityJobDefinitionBatchTransformInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(DataQualityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Configuration for the cluster used to run model monitoring jobs.
type DataQualityJobDefinitionClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// DataQualityJobDefinitionClusterConfigInput is an input type that accepts DataQualityJobDefinitionClusterConfigArgs and DataQualityJobDefinitionClusterConfigOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionClusterConfigInput` via:
//
//	DataQualityJobDefinitionClusterConfigArgs{...}
type DataQualityJobDefinitionClusterConfigInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionClusterConfigOutput() DataQualityJobDefinitionClusterConfigOutput
	ToDataQualityJobDefinitionClusterConfigOutputWithContext(context.Context) DataQualityJobDefinitionClusterConfigOutput
}

// Configuration for the cluster used to run model monitoring jobs.
type DataQualityJobDefinitionClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (DataQualityJobDefinitionClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionClusterConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionClusterConfigArgs) ToDataQualityJobDefinitionClusterConfigOutput() DataQualityJobDefinitionClusterConfigOutput {
	return i.ToDataQualityJobDefinitionClusterConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionClusterConfigArgs) ToDataQualityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionClusterConfigOutput)
}

func (i DataQualityJobDefinitionClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionClusterConfig] {
	return pulumix.Output[DataQualityJobDefinitionClusterConfig]{
		OutputState: i.ToDataQualityJobDefinitionClusterConfigOutputWithContext(ctx).OutputState,
	}
}

// Configuration for the cluster used to run model monitoring jobs.
type DataQualityJobDefinitionClusterConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionClusterConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionClusterConfigOutput) ToDataQualityJobDefinitionClusterConfigOutput() DataQualityJobDefinitionClusterConfigOutput {
	return o
}

func (o DataQualityJobDefinitionClusterConfigOutput) ToDataQualityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionClusterConfigOutput {
	return o
}

func (o DataQualityJobDefinitionClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionClusterConfig] {
	return pulumix.Output[DataQualityJobDefinitionClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o DataQualityJobDefinitionClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the processing job.
func (o DataQualityJobDefinitionClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o DataQualityJobDefinitionClusterConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionClusterConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o DataQualityJobDefinitionClusterConfigOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionClusterConfig) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

// The baseline constraints resource for a monitoring job.
type DataQualityJobDefinitionConstraintsResource struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// DataQualityJobDefinitionConstraintsResourceInput is an input type that accepts DataQualityJobDefinitionConstraintsResourceArgs and DataQualityJobDefinitionConstraintsResourceOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionConstraintsResourceInput` via:
//
//	DataQualityJobDefinitionConstraintsResourceArgs{...}
type DataQualityJobDefinitionConstraintsResourceInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionConstraintsResourceOutput() DataQualityJobDefinitionConstraintsResourceOutput
	ToDataQualityJobDefinitionConstraintsResourceOutputWithContext(context.Context) DataQualityJobDefinitionConstraintsResourceOutput
}

// The baseline constraints resource for a monitoring job.
type DataQualityJobDefinitionConstraintsResourceArgs struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i DataQualityJobDefinitionConstraintsResourceArgs) ToDataQualityJobDefinitionConstraintsResourceOutput() DataQualityJobDefinitionConstraintsResourceOutput {
	return i.ToDataQualityJobDefinitionConstraintsResourceOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionConstraintsResourceArgs) ToDataQualityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionConstraintsResourceOutput)
}

func (i DataQualityJobDefinitionConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[DataQualityJobDefinitionConstraintsResource]{
		OutputState: i.ToDataQualityJobDefinitionConstraintsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionConstraintsResourceArgs) ToDataQualityJobDefinitionConstraintsResourcePtrOutput() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionConstraintsResourceArgs) ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionConstraintsResourceOutput).ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionConstraintsResourcePtrInput is an input type that accepts DataQualityJobDefinitionConstraintsResourceArgs, DataQualityJobDefinitionConstraintsResourcePtr and DataQualityJobDefinitionConstraintsResourcePtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionConstraintsResourcePtrInput` via:
//
//	        DataQualityJobDefinitionConstraintsResourceArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionConstraintsResourcePtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionConstraintsResourcePtrOutput() DataQualityJobDefinitionConstraintsResourcePtrOutput
	ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Context) DataQualityJobDefinitionConstraintsResourcePtrOutput
}

type dataQualityJobDefinitionConstraintsResourcePtrType DataQualityJobDefinitionConstraintsResourceArgs

func DataQualityJobDefinitionConstraintsResourcePtr(v *DataQualityJobDefinitionConstraintsResourceArgs) DataQualityJobDefinitionConstraintsResourcePtrInput {
	return (*dataQualityJobDefinitionConstraintsResourcePtrType)(v)
}

func (*dataQualityJobDefinitionConstraintsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i *dataQualityJobDefinitionConstraintsResourcePtrType) ToDataQualityJobDefinitionConstraintsResourcePtrOutput() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionConstraintsResourcePtrType) ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (i *dataQualityJobDefinitionConstraintsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[*DataQualityJobDefinitionConstraintsResource]{
		OutputState: i.ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline constraints resource for a monitoring job.
type DataQualityJobDefinitionConstraintsResourceOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionConstraintsResourceOutput) ToDataQualityJobDefinitionConstraintsResourceOutput() DataQualityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionConstraintsResourceOutput) ToDataQualityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionConstraintsResourceOutput) ToDataQualityJobDefinitionConstraintsResourcePtrOutput() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionConstraintsResourceOutput) ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionConstraintsResource) *DataQualityJobDefinitionConstraintsResource {
		return &v
	}).(DataQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (o DataQualityJobDefinitionConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[DataQualityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o DataQualityJobDefinitionConstraintsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionConstraintsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type DataQualityJobDefinitionConstraintsResourcePtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionConstraintsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionConstraintsResourcePtrOutput) ToDataQualityJobDefinitionConstraintsResourcePtrOutput() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o DataQualityJobDefinitionConstraintsResourcePtrOutput) ToDataQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o DataQualityJobDefinitionConstraintsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[*DataQualityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionConstraintsResourcePtrOutput) Elem() DataQualityJobDefinitionConstraintsResourceOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionConstraintsResource) DataQualityJobDefinitionConstraintsResource {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionConstraintsResource
		return ret
	}).(DataQualityJobDefinitionConstraintsResourceOutput)
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o DataQualityJobDefinitionConstraintsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionConstraintsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// The CSV format
type DataQualityJobDefinitionCsv struct {
	// A boolean flag indicating if given CSV has header
	Header *bool `pulumi:"header"`
}

// DataQualityJobDefinitionCsvInput is an input type that accepts DataQualityJobDefinitionCsvArgs and DataQualityJobDefinitionCsvOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionCsvInput` via:
//
//	DataQualityJobDefinitionCsvArgs{...}
type DataQualityJobDefinitionCsvInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionCsvOutput() DataQualityJobDefinitionCsvOutput
	ToDataQualityJobDefinitionCsvOutputWithContext(context.Context) DataQualityJobDefinitionCsvOutput
}

// The CSV format
type DataQualityJobDefinitionCsvArgs struct {
	// A boolean flag indicating if given CSV has header
	Header pulumi.BoolPtrInput `pulumi:"header"`
}

func (DataQualityJobDefinitionCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionCsv)(nil)).Elem()
}

func (i DataQualityJobDefinitionCsvArgs) ToDataQualityJobDefinitionCsvOutput() DataQualityJobDefinitionCsvOutput {
	return i.ToDataQualityJobDefinitionCsvOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionCsvArgs) ToDataQualityJobDefinitionCsvOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionCsvOutput)
}

func (i DataQualityJobDefinitionCsvArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionCsv] {
	return pulumix.Output[DataQualityJobDefinitionCsv]{
		OutputState: i.ToDataQualityJobDefinitionCsvOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionCsvArgs) ToDataQualityJobDefinitionCsvPtrOutput() DataQualityJobDefinitionCsvPtrOutput {
	return i.ToDataQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionCsvArgs) ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionCsvOutput).ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionCsvPtrInput is an input type that accepts DataQualityJobDefinitionCsvArgs, DataQualityJobDefinitionCsvPtr and DataQualityJobDefinitionCsvPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionCsvPtrInput` via:
//
//	        DataQualityJobDefinitionCsvArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionCsvPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionCsvPtrOutput() DataQualityJobDefinitionCsvPtrOutput
	ToDataQualityJobDefinitionCsvPtrOutputWithContext(context.Context) DataQualityJobDefinitionCsvPtrOutput
}

type dataQualityJobDefinitionCsvPtrType DataQualityJobDefinitionCsvArgs

func DataQualityJobDefinitionCsvPtr(v *DataQualityJobDefinitionCsvArgs) DataQualityJobDefinitionCsvPtrInput {
	return (*dataQualityJobDefinitionCsvPtrType)(v)
}

func (*dataQualityJobDefinitionCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionCsv)(nil)).Elem()
}

func (i *dataQualityJobDefinitionCsvPtrType) ToDataQualityJobDefinitionCsvPtrOutput() DataQualityJobDefinitionCsvPtrOutput {
	return i.ToDataQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionCsvPtrType) ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionCsvPtrOutput)
}

func (i *dataQualityJobDefinitionCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionCsv] {
	return pulumix.Output[*DataQualityJobDefinitionCsv]{
		OutputState: i.ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx).OutputState,
	}
}

// The CSV format
type DataQualityJobDefinitionCsvOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionCsv)(nil)).Elem()
}

func (o DataQualityJobDefinitionCsvOutput) ToDataQualityJobDefinitionCsvOutput() DataQualityJobDefinitionCsvOutput {
	return o
}

func (o DataQualityJobDefinitionCsvOutput) ToDataQualityJobDefinitionCsvOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvOutput {
	return o
}

func (o DataQualityJobDefinitionCsvOutput) ToDataQualityJobDefinitionCsvPtrOutput() DataQualityJobDefinitionCsvPtrOutput {
	return o.ToDataQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionCsvOutput) ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionCsv) *DataQualityJobDefinitionCsv {
		return &v
	}).(DataQualityJobDefinitionCsvPtrOutput)
}

func (o DataQualityJobDefinitionCsvOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionCsv] {
	return pulumix.Output[DataQualityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if given CSV has header
func (o DataQualityJobDefinitionCsvOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionCsv) *bool { return v.Header }).(pulumi.BoolPtrOutput)
}

type DataQualityJobDefinitionCsvPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionCsv)(nil)).Elem()
}

func (o DataQualityJobDefinitionCsvPtrOutput) ToDataQualityJobDefinitionCsvPtrOutput() DataQualityJobDefinitionCsvPtrOutput {
	return o
}

func (o DataQualityJobDefinitionCsvPtrOutput) ToDataQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionCsvPtrOutput {
	return o
}

func (o DataQualityJobDefinitionCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionCsv] {
	return pulumix.Output[*DataQualityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionCsvPtrOutput) Elem() DataQualityJobDefinitionCsvOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionCsv) DataQualityJobDefinitionCsv {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionCsv
		return ret
	}).(DataQualityJobDefinitionCsvOutput)
}

// A boolean flag indicating if given CSV has header
func (o DataQualityJobDefinitionCsvPtrOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionCsv) *bool {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.BoolPtrOutput)
}

// Container image configuration object for the monitoring job.
type DataQualityJobDefinitionDataQualityAppSpecification struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments []string `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint []string `pulumi:"containerEntrypoint"`
	// Sets the environment variables in the Docker container
	Environment interface{} `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri string `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri *string `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri *string `pulumi:"recordPreprocessorSourceUri"`
}

// DataQualityJobDefinitionDataQualityAppSpecificationInput is an input type that accepts DataQualityJobDefinitionDataQualityAppSpecificationArgs and DataQualityJobDefinitionDataQualityAppSpecificationOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDataQualityAppSpecificationInput` via:
//
//	DataQualityJobDefinitionDataQualityAppSpecificationArgs{...}
type DataQualityJobDefinitionDataQualityAppSpecificationInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDataQualityAppSpecificationOutput() DataQualityJobDefinitionDataQualityAppSpecificationOutput
	ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(context.Context) DataQualityJobDefinitionDataQualityAppSpecificationOutput
}

// Container image configuration object for the monitoring job.
type DataQualityJobDefinitionDataQualityAppSpecificationArgs struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments pulumi.StringArrayInput `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint pulumi.StringArrayInput `pulumi:"containerEntrypoint"`
	// Sets the environment variables in the Docker container
	Environment pulumi.Input `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri pulumi.StringPtrInput `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri pulumi.StringPtrInput `pulumi:"recordPreprocessorSourceUri"`
}

func (DataQualityJobDefinitionDataQualityAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityAppSpecification)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToDataQualityJobDefinitionDataQualityAppSpecificationOutput() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return i.ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityAppSpecificationOutput)
}

func (i DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification]{
		OutputState: i.ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(ctx).OutputState,
	}
}

// Container image configuration object for the monitoring job.
type DataQualityJobDefinitionDataQualityAppSpecificationOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityAppSpecification)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToDataQualityJobDefinitionDataQualityAppSpecificationOutput() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification]{
		OutputState: o.OutputState,
	}
}

// An array of arguments for the container used to run the monitoring job.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ContainerArguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) []string { return v.ContainerArguments }).(pulumi.StringArrayOutput)
}

// Specifies the entrypoint for a container used to run the monitoring job.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ContainerEntrypoint() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) []string { return v.ContainerEntrypoint }).(pulumi.StringArrayOutput)
}

// Sets the environment variables in the Docker container
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) interface{} { return v.Environment }).(pulumi.AnyOutput)
}

// The container image to be run by the monitoring job.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) string { return v.ImageUri }).(pulumi.StringOutput)
}

// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) PostAnalyticsProcessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) *string {
		return v.PostAnalyticsProcessorSourceUri
	}).(pulumi.StringPtrOutput)
}

// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) RecordPreprocessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityAppSpecification) *string {
		return v.RecordPreprocessorSourceUri
	}).(pulumi.StringPtrOutput)
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type DataQualityJobDefinitionDataQualityBaselineConfig struct {
	BaseliningJobName   *string                                      `pulumi:"baseliningJobName"`
	ConstraintsResource *DataQualityJobDefinitionConstraintsResource `pulumi:"constraintsResource"`
	StatisticsResource  *DataQualityJobDefinitionStatisticsResource  `pulumi:"statisticsResource"`
}

// DataQualityJobDefinitionDataQualityBaselineConfigInput is an input type that accepts DataQualityJobDefinitionDataQualityBaselineConfigArgs and DataQualityJobDefinitionDataQualityBaselineConfigOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDataQualityBaselineConfigInput` via:
//
//	DataQualityJobDefinitionDataQualityBaselineConfigArgs{...}
type DataQualityJobDefinitionDataQualityBaselineConfigInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDataQualityBaselineConfigOutput() DataQualityJobDefinitionDataQualityBaselineConfigOutput
	ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(context.Context) DataQualityJobDefinitionDataQualityBaselineConfigOutput
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type DataQualityJobDefinitionDataQualityBaselineConfigArgs struct {
	BaseliningJobName   pulumi.StringPtrInput                               `pulumi:"baseliningJobName"`
	ConstraintsResource DataQualityJobDefinitionConstraintsResourcePtrInput `pulumi:"constraintsResource"`
	StatisticsResource  DataQualityJobDefinitionStatisticsResourcePtrInput  `pulumi:"statisticsResource"`
}

func (DataQualityJobDefinitionDataQualityBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigOutput() DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigOutput)
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig]{
		OutputState: i.ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutput() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigOutput).ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionDataQualityBaselineConfigPtrInput is an input type that accepts DataQualityJobDefinitionDataQualityBaselineConfigArgs, DataQualityJobDefinitionDataQualityBaselineConfigPtr and DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDataQualityBaselineConfigPtrInput` via:
//
//	        DataQualityJobDefinitionDataQualityBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionDataQualityBaselineConfigPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutput() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput
	ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(context.Context) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput
}

type dataQualityJobDefinitionDataQualityBaselineConfigPtrType DataQualityJobDefinitionDataQualityBaselineConfigArgs

func DataQualityJobDefinitionDataQualityBaselineConfigPtr(v *DataQualityJobDefinitionDataQualityBaselineConfigArgs) DataQualityJobDefinitionDataQualityBaselineConfigPtrInput {
	return (*dataQualityJobDefinitionDataQualityBaselineConfigPtrType)(v)
}

func (*dataQualityJobDefinitionDataQualityBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (i *dataQualityJobDefinitionDataQualityBaselineConfigPtrType) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutput() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionDataQualityBaselineConfigPtrType) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput)
}

func (i *dataQualityJobDefinitionDataQualityBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfig] {
	return pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfig]{
		OutputState: i.ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type DataQualityJobDefinitionDataQualityBaselineConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigOutput() DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutput() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o.ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionDataQualityBaselineConfig {
		return &v
	}).(DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityBaselineConfig) *string { return v.BaseliningJobName }).(pulumi.StringPtrOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ConstraintsResource() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionConstraintsResource {
		return v.ConstraintsResource
	}).(DataQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) StatisticsResource() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionStatisticsResource {
		return v.StatisticsResource
	}).(DataQualityJobDefinitionStatisticsResourcePtrOutput)
}

type DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutput() DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfig] {
	return pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) Elem() DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDataQualityBaselineConfig) DataQualityJobDefinitionDataQualityBaselineConfig {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionDataQualityBaselineConfig
		return ret
	}).(DataQualityJobDefinitionDataQualityBaselineConfigOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDataQualityBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaseliningJobName
	}).(pulumi.StringPtrOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) ConstraintsResource() DataQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionConstraintsResource {
		if v == nil {
			return nil
		}
		return v.ConstraintsResource
	}).(DataQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput) StatisticsResource() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionStatisticsResource {
		if v == nil {
			return nil
		}
		return v.StatisticsResource
	}).(DataQualityJobDefinitionStatisticsResourcePtrOutput)
}

// The inputs for a monitoring job.
type DataQualityJobDefinitionDataQualityJobInput struct {
	BatchTransformInput *DataQualityJobDefinitionBatchTransformInput `pulumi:"batchTransformInput"`
	EndpointInput       *DataQualityJobDefinitionEndpointInput       `pulumi:"endpointInput"`
}

// DataQualityJobDefinitionDataQualityJobInputInput is an input type that accepts DataQualityJobDefinitionDataQualityJobInputArgs and DataQualityJobDefinitionDataQualityJobInputOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDataQualityJobInputInput` via:
//
//	DataQualityJobDefinitionDataQualityJobInputArgs{...}
type DataQualityJobDefinitionDataQualityJobInputInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDataQualityJobInputOutput() DataQualityJobDefinitionDataQualityJobInputOutput
	ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(context.Context) DataQualityJobDefinitionDataQualityJobInputOutput
}

// The inputs for a monitoring job.
type DataQualityJobDefinitionDataQualityJobInputArgs struct {
	BatchTransformInput DataQualityJobDefinitionBatchTransformInputPtrInput `pulumi:"batchTransformInput"`
	EndpointInput       DataQualityJobDefinitionEndpointInputPtrInput       `pulumi:"endpointInput"`
}

func (DataQualityJobDefinitionDataQualityJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputArgs) ToDataQualityJobDefinitionDataQualityJobInputOutput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputArgs) ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputOutput)
}

func (i DataQualityJobDefinitionDataQualityJobInputArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInput] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInput]{
		OutputState: i.ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(ctx).OutputState,
	}
}

// The inputs for a monitoring job.
type DataQualityJobDefinitionDataQualityJobInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToDataQualityJobDefinitionDataQualityJobInputOutput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInput] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) BatchTransformInput() DataQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityJobInput) *DataQualityJobDefinitionBatchTransformInput {
		return v.BatchTransformInput
	}).(DataQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) EndpointInput() DataQualityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDataQualityJobInput) *DataQualityJobDefinitionEndpointInput {
		return v.EndpointInput
	}).(DataQualityJobDefinitionEndpointInputPtrOutput)
}

// The dataset format of the data to monitor
type DataQualityJobDefinitionDatasetFormat struct {
	Csv     *DataQualityJobDefinitionCsv  `pulumi:"csv"`
	Json    *DataQualityJobDefinitionJson `pulumi:"json"`
	Parquet *bool                         `pulumi:"parquet"`
}

// DataQualityJobDefinitionDatasetFormatInput is an input type that accepts DataQualityJobDefinitionDatasetFormatArgs and DataQualityJobDefinitionDatasetFormatOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDatasetFormatInput` via:
//
//	DataQualityJobDefinitionDatasetFormatArgs{...}
type DataQualityJobDefinitionDatasetFormatInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDatasetFormatOutput() DataQualityJobDefinitionDatasetFormatOutput
	ToDataQualityJobDefinitionDatasetFormatOutputWithContext(context.Context) DataQualityJobDefinitionDatasetFormatOutput
}

// The dataset format of the data to monitor
type DataQualityJobDefinitionDatasetFormatArgs struct {
	Csv     DataQualityJobDefinitionCsvPtrInput  `pulumi:"csv"`
	Json    DataQualityJobDefinitionJsonPtrInput `pulumi:"json"`
	Parquet pulumi.BoolPtrInput                  `pulumi:"parquet"`
}

func (DataQualityJobDefinitionDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i DataQualityJobDefinitionDatasetFormatArgs) ToDataQualityJobDefinitionDatasetFormatOutput() DataQualityJobDefinitionDatasetFormatOutput {
	return i.ToDataQualityJobDefinitionDatasetFormatOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDatasetFormatArgs) ToDataQualityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDatasetFormatOutput)
}

func (i DataQualityJobDefinitionDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[DataQualityJobDefinitionDatasetFormat]{
		OutputState: i.ToDataQualityJobDefinitionDatasetFormatOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionDatasetFormatArgs) ToDataQualityJobDefinitionDatasetFormatPtrOutput() DataQualityJobDefinitionDatasetFormatPtrOutput {
	return i.ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDatasetFormatArgs) ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDatasetFormatOutput).ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionDatasetFormatPtrInput is an input type that accepts DataQualityJobDefinitionDatasetFormatArgs, DataQualityJobDefinitionDatasetFormatPtr and DataQualityJobDefinitionDatasetFormatPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionDatasetFormatPtrInput` via:
//
//	        DataQualityJobDefinitionDatasetFormatArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionDatasetFormatPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionDatasetFormatPtrOutput() DataQualityJobDefinitionDatasetFormatPtrOutput
	ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Context) DataQualityJobDefinitionDatasetFormatPtrOutput
}

type dataQualityJobDefinitionDatasetFormatPtrType DataQualityJobDefinitionDatasetFormatArgs

func DataQualityJobDefinitionDatasetFormatPtr(v *DataQualityJobDefinitionDatasetFormatArgs) DataQualityJobDefinitionDatasetFormatPtrInput {
	return (*dataQualityJobDefinitionDatasetFormatPtrType)(v)
}

func (*dataQualityJobDefinitionDatasetFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i *dataQualityJobDefinitionDatasetFormatPtrType) ToDataQualityJobDefinitionDatasetFormatPtrOutput() DataQualityJobDefinitionDatasetFormatPtrOutput {
	return i.ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionDatasetFormatPtrType) ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDatasetFormatPtrOutput)
}

func (i *dataQualityJobDefinitionDatasetFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[*DataQualityJobDefinitionDatasetFormat]{
		OutputState: i.ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The dataset format of the data to monitor
type DataQualityJobDefinitionDatasetFormatOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o DataQualityJobDefinitionDatasetFormatOutput) ToDataQualityJobDefinitionDatasetFormatOutput() DataQualityJobDefinitionDatasetFormatOutput {
	return o
}

func (o DataQualityJobDefinitionDatasetFormatOutput) ToDataQualityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatOutput {
	return o
}

func (o DataQualityJobDefinitionDatasetFormatOutput) ToDataQualityJobDefinitionDatasetFormatPtrOutput() DataQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionDatasetFormatOutput) ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionDatasetFormat) *DataQualityJobDefinitionDatasetFormat {
		return &v
	}).(DataQualityJobDefinitionDatasetFormatPtrOutput)
}

func (o DataQualityJobDefinitionDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[DataQualityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionDatasetFormatOutput) Csv() DataQualityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDatasetFormat) *DataQualityJobDefinitionCsv { return v.Csv }).(DataQualityJobDefinitionCsvPtrOutput)
}

func (o DataQualityJobDefinitionDatasetFormatOutput) Json() DataQualityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDatasetFormat) *DataQualityJobDefinitionJson { return v.Json }).(DataQualityJobDefinitionJsonPtrOutput)
}

func (o DataQualityJobDefinitionDatasetFormatOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionDatasetFormat) *bool { return v.Parquet }).(pulumi.BoolPtrOutput)
}

type DataQualityJobDefinitionDatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) ToDataQualityJobDefinitionDatasetFormatPtrOutput() DataQualityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) ToDataQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[*DataQualityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) Elem() DataQualityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDatasetFormat) DataQualityJobDefinitionDatasetFormat {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionDatasetFormat
		return ret
	}).(DataQualityJobDefinitionDatasetFormatOutput)
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) Csv() DataQualityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDatasetFormat) *DataQualityJobDefinitionCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(DataQualityJobDefinitionCsvPtrOutput)
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) Json() DataQualityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDatasetFormat) *DataQualityJobDefinitionJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(DataQualityJobDefinitionJsonPtrOutput)
}

func (o DataQualityJobDefinitionDatasetFormatPtrOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionDatasetFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Parquet
	}).(pulumi.BoolPtrOutput)
}

// The endpoint for a monitoring job.
type DataQualityJobDefinitionEndpointInput struct {
	EndpointName string `pulumi:"endpointName"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute *string `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *DataQualityJobDefinitionEndpointInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *DataQualityJobDefinitionEndpointInputS3InputMode `pulumi:"s3InputMode"`
}

// DataQualityJobDefinitionEndpointInputInput is an input type that accepts DataQualityJobDefinitionEndpointInputArgs and DataQualityJobDefinitionEndpointInputOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionEndpointInputInput` via:
//
//	DataQualityJobDefinitionEndpointInputArgs{...}
type DataQualityJobDefinitionEndpointInputInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionEndpointInputOutput() DataQualityJobDefinitionEndpointInputOutput
	ToDataQualityJobDefinitionEndpointInputOutputWithContext(context.Context) DataQualityJobDefinitionEndpointInputOutput
}

// The endpoint for a monitoring job.
type DataQualityJobDefinitionEndpointInputArgs struct {
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute pulumi.StringPtrInput `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType DataQualityJobDefinitionEndpointInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode DataQualityJobDefinitionEndpointInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (DataQualityJobDefinitionEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionEndpointInputArgs) ToDataQualityJobDefinitionEndpointInputOutput() DataQualityJobDefinitionEndpointInputOutput {
	return i.ToDataQualityJobDefinitionEndpointInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionEndpointInputArgs) ToDataQualityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionEndpointInputOutput)
}

func (i DataQualityJobDefinitionEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionEndpointInput] {
	return pulumix.Output[DataQualityJobDefinitionEndpointInput]{
		OutputState: i.ToDataQualityJobDefinitionEndpointInputOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionEndpointInputArgs) ToDataQualityJobDefinitionEndpointInputPtrOutput() DataQualityJobDefinitionEndpointInputPtrOutput {
	return i.ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionEndpointInputArgs) ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionEndpointInputOutput).ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionEndpointInputPtrInput is an input type that accepts DataQualityJobDefinitionEndpointInputArgs, DataQualityJobDefinitionEndpointInputPtr and DataQualityJobDefinitionEndpointInputPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionEndpointInputPtrInput` via:
//
//	        DataQualityJobDefinitionEndpointInputArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionEndpointInputPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionEndpointInputPtrOutput() DataQualityJobDefinitionEndpointInputPtrOutput
	ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Context) DataQualityJobDefinitionEndpointInputPtrOutput
}

type dataQualityJobDefinitionEndpointInputPtrType DataQualityJobDefinitionEndpointInputArgs

func DataQualityJobDefinitionEndpointInputPtr(v *DataQualityJobDefinitionEndpointInputArgs) DataQualityJobDefinitionEndpointInputPtrInput {
	return (*dataQualityJobDefinitionEndpointInputPtrType)(v)
}

func (*dataQualityJobDefinitionEndpointInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i *dataQualityJobDefinitionEndpointInputPtrType) ToDataQualityJobDefinitionEndpointInputPtrOutput() DataQualityJobDefinitionEndpointInputPtrOutput {
	return i.ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionEndpointInputPtrType) ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionEndpointInputPtrOutput)
}

func (i *dataQualityJobDefinitionEndpointInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionEndpointInput] {
	return pulumix.Output[*DataQualityJobDefinitionEndpointInput]{
		OutputState: i.ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The endpoint for a monitoring job.
type DataQualityJobDefinitionEndpointInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionEndpointInputOutput) ToDataQualityJobDefinitionEndpointInputOutput() DataQualityJobDefinitionEndpointInputOutput {
	return o
}

func (o DataQualityJobDefinitionEndpointInputOutput) ToDataQualityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputOutput {
	return o
}

func (o DataQualityJobDefinitionEndpointInputOutput) ToDataQualityJobDefinitionEndpointInputPtrOutput() DataQualityJobDefinitionEndpointInputPtrOutput {
	return o.ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionEndpointInputOutput) ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionEndpointInput) *DataQualityJobDefinitionEndpointInput {
		return &v
	}).(DataQualityJobDefinitionEndpointInputPtrOutput)
}

func (o DataQualityJobDefinitionEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionEndpointInput] {
	return pulumix.Output[DataQualityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionEndpointInputOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionEndpointInput) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o DataQualityJobDefinitionEndpointInputOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionEndpointInput) *string { return v.ExcludeFeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o DataQualityJobDefinitionEndpointInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionEndpointInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o DataQualityJobDefinitionEndpointInputOutput) S3DataDistributionType() DataQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionEndpointInput) *DataQualityJobDefinitionEndpointInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(DataQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o DataQualityJobDefinitionEndpointInputOutput) S3InputMode() DataQualityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionEndpointInput) *DataQualityJobDefinitionEndpointInputS3InputMode {
		return v.S3InputMode
	}).(DataQualityJobDefinitionEndpointInputS3InputModePtrOutput)
}

type DataQualityJobDefinitionEndpointInputPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionEndpointInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionEndpointInputPtrOutput) ToDataQualityJobDefinitionEndpointInputPtrOutput() DataQualityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o DataQualityJobDefinitionEndpointInputPtrOutput) ToDataQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o DataQualityJobDefinitionEndpointInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionEndpointInput] {
	return pulumix.Output[*DataQualityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionEndpointInputPtrOutput) Elem() DataQualityJobDefinitionEndpointInputOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) DataQualityJobDefinitionEndpointInput {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionEndpointInput
		return ret
	}).(DataQualityJobDefinitionEndpointInputOutput)
}

func (o DataQualityJobDefinitionEndpointInputPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o DataQualityJobDefinitionEndpointInputPtrOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeFeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o DataQualityJobDefinitionEndpointInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o DataQualityJobDefinitionEndpointInputPtrOutput) S3DataDistributionType() DataQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) *DataQualityJobDefinitionEndpointInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(DataQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o DataQualityJobDefinitionEndpointInputPtrOutput) S3InputMode() DataQualityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionEndpointInput) *DataQualityJobDefinitionEndpointInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(DataQualityJobDefinitionEndpointInputS3InputModePtrOutput)
}

// The Json format
type DataQualityJobDefinitionJson struct {
	// A boolean flag indicating if it is JSON line format
	Line *bool `pulumi:"line"`
}

// DataQualityJobDefinitionJsonInput is an input type that accepts DataQualityJobDefinitionJsonArgs and DataQualityJobDefinitionJsonOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionJsonInput` via:
//
//	DataQualityJobDefinitionJsonArgs{...}
type DataQualityJobDefinitionJsonInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionJsonOutput() DataQualityJobDefinitionJsonOutput
	ToDataQualityJobDefinitionJsonOutputWithContext(context.Context) DataQualityJobDefinitionJsonOutput
}

// The Json format
type DataQualityJobDefinitionJsonArgs struct {
	// A boolean flag indicating if it is JSON line format
	Line pulumi.BoolPtrInput `pulumi:"line"`
}

func (DataQualityJobDefinitionJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJson)(nil)).Elem()
}

func (i DataQualityJobDefinitionJsonArgs) ToDataQualityJobDefinitionJsonOutput() DataQualityJobDefinitionJsonOutput {
	return i.ToDataQualityJobDefinitionJsonOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionJsonArgs) ToDataQualityJobDefinitionJsonOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionJsonOutput)
}

func (i DataQualityJobDefinitionJsonArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionJson] {
	return pulumix.Output[DataQualityJobDefinitionJson]{
		OutputState: i.ToDataQualityJobDefinitionJsonOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionJsonArgs) ToDataQualityJobDefinitionJsonPtrOutput() DataQualityJobDefinitionJsonPtrOutput {
	return i.ToDataQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionJsonArgs) ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionJsonOutput).ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionJsonPtrInput is an input type that accepts DataQualityJobDefinitionJsonArgs, DataQualityJobDefinitionJsonPtr and DataQualityJobDefinitionJsonPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionJsonPtrInput` via:
//
//	        DataQualityJobDefinitionJsonArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionJsonPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionJsonPtrOutput() DataQualityJobDefinitionJsonPtrOutput
	ToDataQualityJobDefinitionJsonPtrOutputWithContext(context.Context) DataQualityJobDefinitionJsonPtrOutput
}

type dataQualityJobDefinitionJsonPtrType DataQualityJobDefinitionJsonArgs

func DataQualityJobDefinitionJsonPtr(v *DataQualityJobDefinitionJsonArgs) DataQualityJobDefinitionJsonPtrInput {
	return (*dataQualityJobDefinitionJsonPtrType)(v)
}

func (*dataQualityJobDefinitionJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionJson)(nil)).Elem()
}

func (i *dataQualityJobDefinitionJsonPtrType) ToDataQualityJobDefinitionJsonPtrOutput() DataQualityJobDefinitionJsonPtrOutput {
	return i.ToDataQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionJsonPtrType) ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionJsonPtrOutput)
}

func (i *dataQualityJobDefinitionJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionJson] {
	return pulumix.Output[*DataQualityJobDefinitionJson]{
		OutputState: i.ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx).OutputState,
	}
}

// The Json format
type DataQualityJobDefinitionJsonOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJson)(nil)).Elem()
}

func (o DataQualityJobDefinitionJsonOutput) ToDataQualityJobDefinitionJsonOutput() DataQualityJobDefinitionJsonOutput {
	return o
}

func (o DataQualityJobDefinitionJsonOutput) ToDataQualityJobDefinitionJsonOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonOutput {
	return o
}

func (o DataQualityJobDefinitionJsonOutput) ToDataQualityJobDefinitionJsonPtrOutput() DataQualityJobDefinitionJsonPtrOutput {
	return o.ToDataQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionJsonOutput) ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionJson) *DataQualityJobDefinitionJson {
		return &v
	}).(DataQualityJobDefinitionJsonPtrOutput)
}

func (o DataQualityJobDefinitionJsonOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionJson] {
	return pulumix.Output[DataQualityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if it is JSON line format
func (o DataQualityJobDefinitionJsonOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionJson) *bool { return v.Line }).(pulumi.BoolPtrOutput)
}

type DataQualityJobDefinitionJsonPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionJson)(nil)).Elem()
}

func (o DataQualityJobDefinitionJsonPtrOutput) ToDataQualityJobDefinitionJsonPtrOutput() DataQualityJobDefinitionJsonPtrOutput {
	return o
}

func (o DataQualityJobDefinitionJsonPtrOutput) ToDataQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionJsonPtrOutput {
	return o
}

func (o DataQualityJobDefinitionJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionJson] {
	return pulumix.Output[*DataQualityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionJsonPtrOutput) Elem() DataQualityJobDefinitionJsonOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionJson) DataQualityJobDefinitionJson {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionJson
		return ret
	}).(DataQualityJobDefinitionJsonOutput)
}

// A boolean flag indicating if it is JSON line format
func (o DataQualityJobDefinitionJsonPtrOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionJson) *bool {
		if v == nil {
			return nil
		}
		return v.Line
	}).(pulumi.BoolPtrOutput)
}

// The output object for a monitoring job.
type DataQualityJobDefinitionMonitoringOutput struct {
	S3Output DataQualityJobDefinitionS3Output `pulumi:"s3Output"`
}

// DataQualityJobDefinitionMonitoringOutputInput is an input type that accepts DataQualityJobDefinitionMonitoringOutputArgs and DataQualityJobDefinitionMonitoringOutputOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionMonitoringOutputInput` via:
//
//	DataQualityJobDefinitionMonitoringOutputArgs{...}
type DataQualityJobDefinitionMonitoringOutputInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionMonitoringOutputOutput() DataQualityJobDefinitionMonitoringOutputOutput
	ToDataQualityJobDefinitionMonitoringOutputOutputWithContext(context.Context) DataQualityJobDefinitionMonitoringOutputOutput
}

// The output object for a monitoring job.
type DataQualityJobDefinitionMonitoringOutputArgs struct {
	S3Output DataQualityJobDefinitionS3OutputInput `pulumi:"s3Output"`
}

func (DataQualityJobDefinitionMonitoringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i DataQualityJobDefinitionMonitoringOutputArgs) ToDataQualityJobDefinitionMonitoringOutputOutput() DataQualityJobDefinitionMonitoringOutputOutput {
	return i.ToDataQualityJobDefinitionMonitoringOutputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionMonitoringOutputArgs) ToDataQualityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionMonitoringOutputOutput)
}

func (i DataQualityJobDefinitionMonitoringOutputArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringOutput]{
		OutputState: i.ToDataQualityJobDefinitionMonitoringOutputOutputWithContext(ctx).OutputState,
	}
}

// DataQualityJobDefinitionMonitoringOutputArrayInput is an input type that accepts DataQualityJobDefinitionMonitoringOutputArray and DataQualityJobDefinitionMonitoringOutputArrayOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionMonitoringOutputArrayInput` via:
//
//	DataQualityJobDefinitionMonitoringOutputArray{ DataQualityJobDefinitionMonitoringOutputArgs{...} }
type DataQualityJobDefinitionMonitoringOutputArrayInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionMonitoringOutputArrayOutput() DataQualityJobDefinitionMonitoringOutputArrayOutput
	ToDataQualityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Context) DataQualityJobDefinitionMonitoringOutputArrayOutput
}

type DataQualityJobDefinitionMonitoringOutputArray []DataQualityJobDefinitionMonitoringOutputInput

func (DataQualityJobDefinitionMonitoringOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i DataQualityJobDefinitionMonitoringOutputArray) ToDataQualityJobDefinitionMonitoringOutputArrayOutput() DataQualityJobDefinitionMonitoringOutputArrayOutput {
	return i.ToDataQualityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionMonitoringOutputArray) ToDataQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionMonitoringOutputArrayOutput)
}

func (i DataQualityJobDefinitionMonitoringOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]DataQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]DataQualityJobDefinitionMonitoringOutput]{
		OutputState: i.ToDataQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx).OutputState,
	}
}

// The output object for a monitoring job.
type DataQualityJobDefinitionMonitoringOutputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionMonitoringOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o DataQualityJobDefinitionMonitoringOutputOutput) ToDataQualityJobDefinitionMonitoringOutputOutput() DataQualityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputOutput) ToDataQualityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionMonitoringOutputOutput) S3Output() DataQualityJobDefinitionS3OutputOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionMonitoringOutput) DataQualityJobDefinitionS3Output { return v.S3Output }).(DataQualityJobDefinitionS3OutputOutput)
}

type DataQualityJobDefinitionMonitoringOutputArrayOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionMonitoringOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o DataQualityJobDefinitionMonitoringOutputArrayOutput) ToDataQualityJobDefinitionMonitoringOutputArrayOutput() DataQualityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputArrayOutput) ToDataQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]DataQualityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionMonitoringOutputArrayOutput) Index(i pulumi.IntInput) DataQualityJobDefinitionMonitoringOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataQualityJobDefinitionMonitoringOutput {
		return vs[0].([]DataQualityJobDefinitionMonitoringOutput)[vs[1].(int)]
	}).(DataQualityJobDefinitionMonitoringOutputOutput)
}

// The output configuration for monitoring jobs.
type DataQualityJobDefinitionMonitoringOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs []DataQualityJobDefinitionMonitoringOutput `pulumi:"monitoringOutputs"`
}

// DataQualityJobDefinitionMonitoringOutputConfigInput is an input type that accepts DataQualityJobDefinitionMonitoringOutputConfigArgs and DataQualityJobDefinitionMonitoringOutputConfigOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionMonitoringOutputConfigInput` via:
//
//	DataQualityJobDefinitionMonitoringOutputConfigArgs{...}
type DataQualityJobDefinitionMonitoringOutputConfigInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionMonitoringOutputConfigOutput() DataQualityJobDefinitionMonitoringOutputConfigOutput
	ToDataQualityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Context) DataQualityJobDefinitionMonitoringOutputConfigOutput
}

// The output configuration for monitoring jobs.
type DataQualityJobDefinitionMonitoringOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs DataQualityJobDefinitionMonitoringOutputArrayInput `pulumi:"monitoringOutputs"`
}

func (DataQualityJobDefinitionMonitoringOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionMonitoringOutputConfigArgs) ToDataQualityJobDefinitionMonitoringOutputConfigOutput() DataQualityJobDefinitionMonitoringOutputConfigOutput {
	return i.ToDataQualityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionMonitoringOutputConfigArgs) ToDataQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionMonitoringOutputConfigOutput)
}

func (i DataQualityJobDefinitionMonitoringOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringOutputConfig]{
		OutputState: i.ToDataQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx).OutputState,
	}
}

// The output configuration for monitoring jobs.
type DataQualityJobDefinitionMonitoringOutputConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionMonitoringOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionMonitoringOutputConfigOutput) ToDataQualityJobDefinitionMonitoringOutputConfigOutput() DataQualityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputConfigOutput) ToDataQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o DataQualityJobDefinitionMonitoringOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionMonitoringOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o DataQualityJobDefinitionMonitoringOutputConfigOutput) MonitoringOutputs() DataQualityJobDefinitionMonitoringOutputArrayOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionMonitoringOutputConfig) []DataQualityJobDefinitionMonitoringOutput {
		return v.MonitoringOutputs
	}).(DataQualityJobDefinitionMonitoringOutputArrayOutput)
}

// Identifies the resources to deploy for a monitoring job.
type DataQualityJobDefinitionMonitoringResources struct {
	ClusterConfig DataQualityJobDefinitionClusterConfig `pulumi:"clusterConfig"`
}

// DataQualityJobDefinitionMonitoringResourcesInput is an input type that accepts DataQualityJobDefinitionMonitoringResourcesArgs and DataQualityJobDefinitionMonitoringResourcesOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionMonitoringResourcesInput` via:
//
//	DataQualityJobDefinitionMonitoringResourcesArgs{...}
type DataQualityJobDefinitionMonitoringResourcesInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionMonitoringResourcesOutput() DataQualityJobDefinitionMonitoringResourcesOutput
	ToDataQualityJobDefinitionMonitoringResourcesOutputWithContext(context.Context) DataQualityJobDefinitionMonitoringResourcesOutput
}

// Identifies the resources to deploy for a monitoring job.
type DataQualityJobDefinitionMonitoringResourcesArgs struct {
	ClusterConfig DataQualityJobDefinitionClusterConfigInput `pulumi:"clusterConfig"`
}

func (DataQualityJobDefinitionMonitoringResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (i DataQualityJobDefinitionMonitoringResourcesArgs) ToDataQualityJobDefinitionMonitoringResourcesOutput() DataQualityJobDefinitionMonitoringResourcesOutput {
	return i.ToDataQualityJobDefinitionMonitoringResourcesOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionMonitoringResourcesArgs) ToDataQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionMonitoringResourcesOutput)
}

func (i DataQualityJobDefinitionMonitoringResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringResources] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringResources]{
		OutputState: i.ToDataQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx).OutputState,
	}
}

// Identifies the resources to deploy for a monitoring job.
type DataQualityJobDefinitionMonitoringResourcesOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionMonitoringResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (o DataQualityJobDefinitionMonitoringResourcesOutput) ToDataQualityJobDefinitionMonitoringResourcesOutput() DataQualityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringResourcesOutput) ToDataQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) DataQualityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o DataQualityJobDefinitionMonitoringResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionMonitoringResources] {
	return pulumix.Output[DataQualityJobDefinitionMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionMonitoringResourcesOutput) ClusterConfig() DataQualityJobDefinitionClusterConfigOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionMonitoringResources) DataQualityJobDefinitionClusterConfig {
		return v.ClusterConfig
	}).(DataQualityJobDefinitionClusterConfigOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type DataQualityJobDefinitionNetworkConfig struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation *bool                              `pulumi:"enableNetworkIsolation"`
	VpcConfig              *DataQualityJobDefinitionVpcConfig `pulumi:"vpcConfig"`
}

// DataQualityJobDefinitionNetworkConfigInput is an input type that accepts DataQualityJobDefinitionNetworkConfigArgs and DataQualityJobDefinitionNetworkConfigOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionNetworkConfigInput` via:
//
//	DataQualityJobDefinitionNetworkConfigArgs{...}
type DataQualityJobDefinitionNetworkConfigInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionNetworkConfigOutput() DataQualityJobDefinitionNetworkConfigOutput
	ToDataQualityJobDefinitionNetworkConfigOutputWithContext(context.Context) DataQualityJobDefinitionNetworkConfigOutput
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type DataQualityJobDefinitionNetworkConfigArgs struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumi.BoolPtrInput `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation pulumi.BoolPtrInput                       `pulumi:"enableNetworkIsolation"`
	VpcConfig              DataQualityJobDefinitionVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (DataQualityJobDefinitionNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigOutput() DataQualityJobDefinitionNetworkConfigOutput {
	return i.ToDataQualityJobDefinitionNetworkConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionNetworkConfigOutput)
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[DataQualityJobDefinitionNetworkConfig]{
		OutputState: i.ToDataQualityJobDefinitionNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigPtrOutput() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return i.ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionNetworkConfigOutput).ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionNetworkConfigPtrInput is an input type that accepts DataQualityJobDefinitionNetworkConfigArgs, DataQualityJobDefinitionNetworkConfigPtr and DataQualityJobDefinitionNetworkConfigPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionNetworkConfigPtrInput` via:
//
//	        DataQualityJobDefinitionNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionNetworkConfigPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionNetworkConfigPtrOutput() DataQualityJobDefinitionNetworkConfigPtrOutput
	ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Context) DataQualityJobDefinitionNetworkConfigPtrOutput
}

type dataQualityJobDefinitionNetworkConfigPtrType DataQualityJobDefinitionNetworkConfigArgs

func DataQualityJobDefinitionNetworkConfigPtr(v *DataQualityJobDefinitionNetworkConfigArgs) DataQualityJobDefinitionNetworkConfigPtrInput {
	return (*dataQualityJobDefinitionNetworkConfigPtrType)(v)
}

func (*dataQualityJobDefinitionNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i *dataQualityJobDefinitionNetworkConfigPtrType) ToDataQualityJobDefinitionNetworkConfigPtrOutput() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return i.ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionNetworkConfigPtrType) ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionNetworkConfigPtrOutput)
}

func (i *dataQualityJobDefinitionNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[*DataQualityJobDefinitionNetworkConfig]{
		OutputState: i.ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type DataQualityJobDefinitionNetworkConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigOutput() DataQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigPtrOutput() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionNetworkConfig) *DataQualityJobDefinitionNetworkConfig {
		return &v
	}).(DataQualityJobDefinitionNetworkConfigPtrOutput)
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[DataQualityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o DataQualityJobDefinitionNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionNetworkConfig) *bool { return v.EnableInterContainerTrafficEncryption }).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o DataQualityJobDefinitionNetworkConfigOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionNetworkConfig) *bool { return v.EnableNetworkIsolation }).(pulumi.BoolPtrOutput)
}

func (o DataQualityJobDefinitionNetworkConfigOutput) VpcConfig() DataQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionNetworkConfig) *DataQualityJobDefinitionVpcConfig { return v.VpcConfig }).(DataQualityJobDefinitionVpcConfigPtrOutput)
}

type DataQualityJobDefinitionNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionNetworkConfigPtrOutput) ToDataQualityJobDefinitionNetworkConfigPtrOutput() DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigPtrOutput) ToDataQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[*DataQualityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionNetworkConfigPtrOutput) Elem() DataQualityJobDefinitionNetworkConfigOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionNetworkConfig) DataQualityJobDefinitionNetworkConfig {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionNetworkConfig
		return ret
	}).(DataQualityJobDefinitionNetworkConfigOutput)
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o DataQualityJobDefinitionNetworkConfigPtrOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o DataQualityJobDefinitionNetworkConfigPtrOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkIsolation
	}).(pulumi.BoolPtrOutput)
}

func (o DataQualityJobDefinitionNetworkConfigPtrOutput) VpcConfig() DataQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionNetworkConfig) *DataQualityJobDefinitionVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(DataQualityJobDefinitionVpcConfigPtrOutput)
}

// Information about where and how to store the results of a monitoring job.
type DataQualityJobDefinitionS3Output struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode *DataQualityJobDefinitionS3OutputS3UploadMode `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// DataQualityJobDefinitionS3OutputInput is an input type that accepts DataQualityJobDefinitionS3OutputArgs and DataQualityJobDefinitionS3OutputOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionS3OutputInput` via:
//
//	DataQualityJobDefinitionS3OutputArgs{...}
type DataQualityJobDefinitionS3OutputInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionS3OutputOutput() DataQualityJobDefinitionS3OutputOutput
	ToDataQualityJobDefinitionS3OutputOutputWithContext(context.Context) DataQualityJobDefinitionS3OutputOutput
}

// Information about where and how to store the results of a monitoring job.
type DataQualityJobDefinitionS3OutputArgs struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode DataQualityJobDefinitionS3OutputS3UploadModePtrInput `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionS3Output)(nil)).Elem()
}

func (i DataQualityJobDefinitionS3OutputArgs) ToDataQualityJobDefinitionS3OutputOutput() DataQualityJobDefinitionS3OutputOutput {
	return i.ToDataQualityJobDefinitionS3OutputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionS3OutputArgs) ToDataQualityJobDefinitionS3OutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionS3OutputOutput)
}

func (i DataQualityJobDefinitionS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionS3Output] {
	return pulumix.Output[DataQualityJobDefinitionS3Output]{
		OutputState: i.ToDataQualityJobDefinitionS3OutputOutputWithContext(ctx).OutputState,
	}
}

// Information about where and how to store the results of a monitoring job.
type DataQualityJobDefinitionS3OutputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionS3Output)(nil)).Elem()
}

func (o DataQualityJobDefinitionS3OutputOutput) ToDataQualityJobDefinitionS3OutputOutput() DataQualityJobDefinitionS3OutputOutput {
	return o
}

func (o DataQualityJobDefinitionS3OutputOutput) ToDataQualityJobDefinitionS3OutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionS3OutputOutput {
	return o
}

func (o DataQualityJobDefinitionS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionS3Output] {
	return pulumix.Output[DataQualityJobDefinitionS3Output]{
		OutputState: o.OutputState,
	}
}

// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
func (o DataQualityJobDefinitionS3OutputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionS3Output) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether to upload the results of the monitoring job continuously or after the job completes.
func (o DataQualityJobDefinitionS3OutputOutput) S3UploadMode() DataQualityJobDefinitionS3OutputS3UploadModePtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionS3Output) *DataQualityJobDefinitionS3OutputS3UploadMode {
		return v.S3UploadMode
	}).(DataQualityJobDefinitionS3OutputS3UploadModePtrOutput)
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o DataQualityJobDefinitionS3OutputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionS3Output) string { return v.S3Uri }).(pulumi.StringOutput)
}

// The baseline statistics resource for a monitoring job.
type DataQualityJobDefinitionStatisticsResource struct {
	// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// DataQualityJobDefinitionStatisticsResourceInput is an input type that accepts DataQualityJobDefinitionStatisticsResourceArgs and DataQualityJobDefinitionStatisticsResourceOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionStatisticsResourceInput` via:
//
//	DataQualityJobDefinitionStatisticsResourceArgs{...}
type DataQualityJobDefinitionStatisticsResourceInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionStatisticsResourceOutput() DataQualityJobDefinitionStatisticsResourceOutput
	ToDataQualityJobDefinitionStatisticsResourceOutputWithContext(context.Context) DataQualityJobDefinitionStatisticsResourceOutput
}

// The baseline statistics resource for a monitoring job.
type DataQualityJobDefinitionStatisticsResourceArgs struct {
	// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionStatisticsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStatisticsResource)(nil)).Elem()
}

func (i DataQualityJobDefinitionStatisticsResourceArgs) ToDataQualityJobDefinitionStatisticsResourceOutput() DataQualityJobDefinitionStatisticsResourceOutput {
	return i.ToDataQualityJobDefinitionStatisticsResourceOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionStatisticsResourceArgs) ToDataQualityJobDefinitionStatisticsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStatisticsResourceOutput)
}

func (i DataQualityJobDefinitionStatisticsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionStatisticsResource] {
	return pulumix.Output[DataQualityJobDefinitionStatisticsResource]{
		OutputState: i.ToDataQualityJobDefinitionStatisticsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionStatisticsResourceArgs) ToDataQualityJobDefinitionStatisticsResourcePtrOutput() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return i.ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionStatisticsResourceArgs) ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStatisticsResourceOutput).ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionStatisticsResourcePtrInput is an input type that accepts DataQualityJobDefinitionStatisticsResourceArgs, DataQualityJobDefinitionStatisticsResourcePtr and DataQualityJobDefinitionStatisticsResourcePtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionStatisticsResourcePtrInput` via:
//
//	        DataQualityJobDefinitionStatisticsResourceArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionStatisticsResourcePtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionStatisticsResourcePtrOutput() DataQualityJobDefinitionStatisticsResourcePtrOutput
	ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(context.Context) DataQualityJobDefinitionStatisticsResourcePtrOutput
}

type dataQualityJobDefinitionStatisticsResourcePtrType DataQualityJobDefinitionStatisticsResourceArgs

func DataQualityJobDefinitionStatisticsResourcePtr(v *DataQualityJobDefinitionStatisticsResourceArgs) DataQualityJobDefinitionStatisticsResourcePtrInput {
	return (*dataQualityJobDefinitionStatisticsResourcePtrType)(v)
}

func (*dataQualityJobDefinitionStatisticsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionStatisticsResource)(nil)).Elem()
}

func (i *dataQualityJobDefinitionStatisticsResourcePtrType) ToDataQualityJobDefinitionStatisticsResourcePtrOutput() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return i.ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionStatisticsResourcePtrType) ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStatisticsResourcePtrOutput)
}

func (i *dataQualityJobDefinitionStatisticsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionStatisticsResource] {
	return pulumix.Output[*DataQualityJobDefinitionStatisticsResource]{
		OutputState: i.ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline statistics resource for a monitoring job.
type DataQualityJobDefinitionStatisticsResourceOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionStatisticsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStatisticsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionStatisticsResourceOutput) ToDataQualityJobDefinitionStatisticsResourceOutput() DataQualityJobDefinitionStatisticsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionStatisticsResourceOutput) ToDataQualityJobDefinitionStatisticsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionStatisticsResourceOutput) ToDataQualityJobDefinitionStatisticsResourcePtrOutput() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o.ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionStatisticsResourceOutput) ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionStatisticsResource) *DataQualityJobDefinitionStatisticsResource {
		return &v
	}).(DataQualityJobDefinitionStatisticsResourcePtrOutput)
}

func (o DataQualityJobDefinitionStatisticsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionStatisticsResource] {
	return pulumix.Output[DataQualityJobDefinitionStatisticsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
func (o DataQualityJobDefinitionStatisticsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionStatisticsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type DataQualityJobDefinitionStatisticsResourcePtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionStatisticsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionStatisticsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionStatisticsResourcePtrOutput) ToDataQualityJobDefinitionStatisticsResourcePtrOutput() DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o
}

func (o DataQualityJobDefinitionStatisticsResourcePtrOutput) ToDataQualityJobDefinitionStatisticsResourcePtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStatisticsResourcePtrOutput {
	return o
}

func (o DataQualityJobDefinitionStatisticsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionStatisticsResource] {
	return pulumix.Output[*DataQualityJobDefinitionStatisticsResource]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionStatisticsResourcePtrOutput) Elem() DataQualityJobDefinitionStatisticsResourceOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionStatisticsResource) DataQualityJobDefinitionStatisticsResource {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionStatisticsResource
		return ret
	}).(DataQualityJobDefinitionStatisticsResourceOutput)
}

// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
func (o DataQualityJobDefinitionStatisticsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionStatisticsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type DataQualityJobDefinitionStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds int `pulumi:"maxRuntimeInSeconds"`
}

// DataQualityJobDefinitionStoppingConditionInput is an input type that accepts DataQualityJobDefinitionStoppingConditionArgs and DataQualityJobDefinitionStoppingConditionOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionStoppingConditionInput` via:
//
//	DataQualityJobDefinitionStoppingConditionArgs{...}
type DataQualityJobDefinitionStoppingConditionInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionStoppingConditionOutput() DataQualityJobDefinitionStoppingConditionOutput
	ToDataQualityJobDefinitionStoppingConditionOutputWithContext(context.Context) DataQualityJobDefinitionStoppingConditionOutput
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type DataQualityJobDefinitionStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumi.IntInput `pulumi:"maxRuntimeInSeconds"`
}

func (DataQualityJobDefinitionStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionOutput() DataQualityJobDefinitionStoppingConditionOutput {
	return i.ToDataQualityJobDefinitionStoppingConditionOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStoppingConditionOutput)
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[DataQualityJobDefinitionStoppingCondition]{
		OutputState: i.ToDataQualityJobDefinitionStoppingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionPtrOutput() DataQualityJobDefinitionStoppingConditionPtrOutput {
	return i.ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStoppingConditionOutput).ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionStoppingConditionPtrInput is an input type that accepts DataQualityJobDefinitionStoppingConditionArgs, DataQualityJobDefinitionStoppingConditionPtr and DataQualityJobDefinitionStoppingConditionPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionStoppingConditionPtrInput` via:
//
//	        DataQualityJobDefinitionStoppingConditionArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionStoppingConditionPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionStoppingConditionPtrOutput() DataQualityJobDefinitionStoppingConditionPtrOutput
	ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Context) DataQualityJobDefinitionStoppingConditionPtrOutput
}

type dataQualityJobDefinitionStoppingConditionPtrType DataQualityJobDefinitionStoppingConditionArgs

func DataQualityJobDefinitionStoppingConditionPtr(v *DataQualityJobDefinitionStoppingConditionArgs) DataQualityJobDefinitionStoppingConditionPtrInput {
	return (*dataQualityJobDefinitionStoppingConditionPtrType)(v)
}

func (*dataQualityJobDefinitionStoppingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i *dataQualityJobDefinitionStoppingConditionPtrType) ToDataQualityJobDefinitionStoppingConditionPtrOutput() DataQualityJobDefinitionStoppingConditionPtrOutput {
	return i.ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionStoppingConditionPtrType) ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStoppingConditionPtrOutput)
}

func (i *dataQualityJobDefinitionStoppingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[*DataQualityJobDefinitionStoppingCondition]{
		OutputState: i.ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type DataQualityJobDefinitionStoppingConditionOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionOutput() DataQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionPtrOutput() DataQualityJobDefinitionStoppingConditionPtrOutput {
	return o.ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionStoppingCondition) *DataQualityJobDefinitionStoppingCondition {
		return &v
	}).(DataQualityJobDefinitionStoppingConditionPtrOutput)
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[DataQualityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o DataQualityJobDefinitionStoppingConditionOutput) MaxRuntimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionStoppingCondition) int { return v.MaxRuntimeInSeconds }).(pulumi.IntOutput)
}

type DataQualityJobDefinitionStoppingConditionPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionStoppingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o DataQualityJobDefinitionStoppingConditionPtrOutput) ToDataQualityJobDefinitionStoppingConditionPtrOutput() DataQualityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionPtrOutput) ToDataQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[*DataQualityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionStoppingConditionPtrOutput) Elem() DataQualityJobDefinitionStoppingConditionOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionStoppingCondition) DataQualityJobDefinitionStoppingCondition {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionStoppingCondition
		return ret
	}).(DataQualityJobDefinitionStoppingConditionOutput)
}

// The maximum runtime allowed in seconds.
func (o DataQualityJobDefinitionStoppingConditionPtrOutput) MaxRuntimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionStoppingCondition) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRuntimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type DataQualityJobDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// DataQualityJobDefinitionTagInput is an input type that accepts DataQualityJobDefinitionTagArgs and DataQualityJobDefinitionTagOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionTagInput` via:
//
//	DataQualityJobDefinitionTagArgs{...}
type DataQualityJobDefinitionTagInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionTagOutput() DataQualityJobDefinitionTagOutput
	ToDataQualityJobDefinitionTagOutputWithContext(context.Context) DataQualityJobDefinitionTagOutput
}

// A key-value pair to associate with a resource.
type DataQualityJobDefinitionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DataQualityJobDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionTag)(nil)).Elem()
}

func (i DataQualityJobDefinitionTagArgs) ToDataQualityJobDefinitionTagOutput() DataQualityJobDefinitionTagOutput {
	return i.ToDataQualityJobDefinitionTagOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionTagArgs) ToDataQualityJobDefinitionTagOutputWithContext(ctx context.Context) DataQualityJobDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionTagOutput)
}

func (i DataQualityJobDefinitionTagArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionTag] {
	return pulumix.Output[DataQualityJobDefinitionTag]{
		OutputState: i.ToDataQualityJobDefinitionTagOutputWithContext(ctx).OutputState,
	}
}

// DataQualityJobDefinitionTagArrayInput is an input type that accepts DataQualityJobDefinitionTagArray and DataQualityJobDefinitionTagArrayOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionTagArrayInput` via:
//
//	DataQualityJobDefinitionTagArray{ DataQualityJobDefinitionTagArgs{...} }
type DataQualityJobDefinitionTagArrayInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionTagArrayOutput() DataQualityJobDefinitionTagArrayOutput
	ToDataQualityJobDefinitionTagArrayOutputWithContext(context.Context) DataQualityJobDefinitionTagArrayOutput
}

type DataQualityJobDefinitionTagArray []DataQualityJobDefinitionTagInput

func (DataQualityJobDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataQualityJobDefinitionTag)(nil)).Elem()
}

func (i DataQualityJobDefinitionTagArray) ToDataQualityJobDefinitionTagArrayOutput() DataQualityJobDefinitionTagArrayOutput {
	return i.ToDataQualityJobDefinitionTagArrayOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionTagArray) ToDataQualityJobDefinitionTagArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionTagArrayOutput)
}

func (i DataQualityJobDefinitionTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DataQualityJobDefinitionTag] {
	return pulumix.Output[[]DataQualityJobDefinitionTag]{
		OutputState: i.ToDataQualityJobDefinitionTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type DataQualityJobDefinitionTagOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionTag)(nil)).Elem()
}

func (o DataQualityJobDefinitionTagOutput) ToDataQualityJobDefinitionTagOutput() DataQualityJobDefinitionTagOutput {
	return o
}

func (o DataQualityJobDefinitionTagOutput) ToDataQualityJobDefinitionTagOutputWithContext(ctx context.Context) DataQualityJobDefinitionTagOutput {
	return o
}

func (o DataQualityJobDefinitionTagOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionTag] {
	return pulumix.Output[DataQualityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DataQualityJobDefinitionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DataQualityJobDefinitionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionTag) string { return v.Value }).(pulumi.StringOutput)
}

type DataQualityJobDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataQualityJobDefinitionTag)(nil)).Elem()
}

func (o DataQualityJobDefinitionTagArrayOutput) ToDataQualityJobDefinitionTagArrayOutput() DataQualityJobDefinitionTagArrayOutput {
	return o
}

func (o DataQualityJobDefinitionTagArrayOutput) ToDataQualityJobDefinitionTagArrayOutputWithContext(ctx context.Context) DataQualityJobDefinitionTagArrayOutput {
	return o
}

func (o DataQualityJobDefinitionTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DataQualityJobDefinitionTag] {
	return pulumix.Output[[]DataQualityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionTagArrayOutput) Index(i pulumi.IntInput) DataQualityJobDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataQualityJobDefinitionTag {
		return vs[0].([]DataQualityJobDefinitionTag)[vs[1].(int)]
	}).(DataQualityJobDefinitionTagOutput)
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type DataQualityJobDefinitionVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets []string `pulumi:"subnets"`
}

// DataQualityJobDefinitionVpcConfigInput is an input type that accepts DataQualityJobDefinitionVpcConfigArgs and DataQualityJobDefinitionVpcConfigOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionVpcConfigInput` via:
//
//	DataQualityJobDefinitionVpcConfigArgs{...}
type DataQualityJobDefinitionVpcConfigInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionVpcConfigOutput() DataQualityJobDefinitionVpcConfigOutput
	ToDataQualityJobDefinitionVpcConfigOutputWithContext(context.Context) DataQualityJobDefinitionVpcConfigOutput
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type DataQualityJobDefinitionVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (DataQualityJobDefinitionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionVpcConfigArgs) ToDataQualityJobDefinitionVpcConfigOutput() DataQualityJobDefinitionVpcConfigOutput {
	return i.ToDataQualityJobDefinitionVpcConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionVpcConfigArgs) ToDataQualityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionVpcConfigOutput)
}

func (i DataQualityJobDefinitionVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionVpcConfig] {
	return pulumix.Output[DataQualityJobDefinitionVpcConfig]{
		OutputState: i.ToDataQualityJobDefinitionVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DataQualityJobDefinitionVpcConfigArgs) ToDataQualityJobDefinitionVpcConfigPtrOutput() DataQualityJobDefinitionVpcConfigPtrOutput {
	return i.ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionVpcConfigArgs) ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionVpcConfigOutput).ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx)
}

// DataQualityJobDefinitionVpcConfigPtrInput is an input type that accepts DataQualityJobDefinitionVpcConfigArgs, DataQualityJobDefinitionVpcConfigPtr and DataQualityJobDefinitionVpcConfigPtrOutput values.
// You can construct a concrete instance of `DataQualityJobDefinitionVpcConfigPtrInput` via:
//
//	        DataQualityJobDefinitionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type DataQualityJobDefinitionVpcConfigPtrInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionVpcConfigPtrOutput() DataQualityJobDefinitionVpcConfigPtrOutput
	ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Context) DataQualityJobDefinitionVpcConfigPtrOutput
}

type dataQualityJobDefinitionVpcConfigPtrType DataQualityJobDefinitionVpcConfigArgs

func DataQualityJobDefinitionVpcConfigPtr(v *DataQualityJobDefinitionVpcConfigArgs) DataQualityJobDefinitionVpcConfigPtrInput {
	return (*dataQualityJobDefinitionVpcConfigPtrType)(v)
}

func (*dataQualityJobDefinitionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i *dataQualityJobDefinitionVpcConfigPtrType) ToDataQualityJobDefinitionVpcConfigPtrOutput() DataQualityJobDefinitionVpcConfigPtrOutput {
	return i.ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *dataQualityJobDefinitionVpcConfigPtrType) ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionVpcConfigPtrOutput)
}

func (i *dataQualityJobDefinitionVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionVpcConfig] {
	return pulumix.Output[*DataQualityJobDefinitionVpcConfig]{
		OutputState: i.ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type DataQualityJobDefinitionVpcConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionVpcConfigOutput) ToDataQualityJobDefinitionVpcConfigOutput() DataQualityJobDefinitionVpcConfigOutput {
	return o
}

func (o DataQualityJobDefinitionVpcConfigOutput) ToDataQualityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigOutput {
	return o
}

func (o DataQualityJobDefinitionVpcConfigOutput) ToDataQualityJobDefinitionVpcConfigPtrOutput() DataQualityJobDefinitionVpcConfigPtrOutput {
	return o.ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (o DataQualityJobDefinitionVpcConfigOutput) ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataQualityJobDefinitionVpcConfig) *DataQualityJobDefinitionVpcConfig {
		return &v
	}).(DataQualityJobDefinitionVpcConfigPtrOutput)
}

func (o DataQualityJobDefinitionVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionVpcConfig] {
	return pulumix.Output[DataQualityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o DataQualityJobDefinitionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o DataQualityJobDefinitionVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataQualityJobDefinitionVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type DataQualityJobDefinitionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionVpcConfigPtrOutput) ToDataQualityJobDefinitionVpcConfigPtrOutput() DataQualityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionVpcConfigPtrOutput) ToDataQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) DataQualityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o DataQualityJobDefinitionVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionVpcConfig] {
	return pulumix.Output[*DataQualityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o DataQualityJobDefinitionVpcConfigPtrOutput) Elem() DataQualityJobDefinitionVpcConfigOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionVpcConfig) DataQualityJobDefinitionVpcConfig {
		if v != nil {
			return *v
		}
		var ret DataQualityJobDefinitionVpcConfig
		return ret
	}).(DataQualityJobDefinitionVpcConfigOutput)
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o DataQualityJobDefinitionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o DataQualityJobDefinitionVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataQualityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// Edge device you want to create
type DeviceType struct {
	// Description of the device
	Description *string `pulumi:"description"`
	// The name of the device
	DeviceName string `pulumi:"deviceName"`
	// AWS Internet of Things (IoT) object name.
	IotThingName *string `pulumi:"iotThingName"`
}

// DeviceTypeInput is an input type that accepts DeviceTypeArgs and DeviceTypeOutput values.
// You can construct a concrete instance of `DeviceTypeInput` via:
//
//	DeviceTypeArgs{...}
type DeviceTypeInput interface {
	pulumi.Input

	ToDeviceTypeOutput() DeviceTypeOutput
	ToDeviceTypeOutputWithContext(context.Context) DeviceTypeOutput
}

// Edge device you want to create
type DeviceTypeArgs struct {
	// Description of the device
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the device
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// AWS Internet of Things (IoT) object name.
	IotThingName pulumi.StringPtrInput `pulumi:"iotThingName"`
}

func (DeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (i DeviceTypeArgs) ToDeviceTypeOutput() DeviceTypeOutput {
	return i.ToDeviceTypeOutputWithContext(context.Background())
}

func (i DeviceTypeArgs) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypeOutput)
}

func (i DeviceTypeArgs) ToOutput(ctx context.Context) pulumix.Output[DeviceType] {
	return pulumix.Output[DeviceType]{
		OutputState: i.ToDeviceTypeOutputWithContext(ctx).OutputState,
	}
}

func (i DeviceTypeArgs) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return i.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (i DeviceTypeArgs) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypeOutput).ToDeviceTypePtrOutputWithContext(ctx)
}

// DeviceTypePtrInput is an input type that accepts DeviceTypeArgs, DeviceTypePtr and DeviceTypePtrOutput values.
// You can construct a concrete instance of `DeviceTypePtrInput` via:
//
//	        DeviceTypeArgs{...}
//
//	or:
//
//	        nil
type DeviceTypePtrInput interface {
	pulumi.Input

	ToDeviceTypePtrOutput() DeviceTypePtrOutput
	ToDeviceTypePtrOutputWithContext(context.Context) DeviceTypePtrOutput
}

type deviceTypePtrType DeviceTypeArgs

func DeviceTypePtr(v *DeviceTypeArgs) DeviceTypePtrInput {
	return (*deviceTypePtrType)(v)
}

func (*deviceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceType)(nil)).Elem()
}

func (i *deviceTypePtrType) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return i.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (i *deviceTypePtrType) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypePtrOutput)
}

func (i *deviceTypePtrType) ToOutput(ctx context.Context) pulumix.Output[*DeviceType] {
	return pulumix.Output[*DeviceType]{
		OutputState: i.ToDeviceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Edge device you want to create
type DeviceTypeOutput struct{ *pulumi.OutputState }

func (DeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (o DeviceTypeOutput) ToDeviceTypeOutput() DeviceTypeOutput {
	return o
}

func (o DeviceTypeOutput) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return o
}

func (o DeviceTypeOutput) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return o.ToDeviceTypePtrOutputWithContext(context.Background())
}

func (o DeviceTypeOutput) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceType) *DeviceType {
		return &v
	}).(DeviceTypePtrOutput)
}

func (o DeviceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceType] {
	return pulumix.Output[DeviceType]{
		OutputState: o.OutputState,
	}
}

// Description of the device
func (o DeviceTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the device
func (o DeviceTypeOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceType) string { return v.DeviceName }).(pulumi.StringOutput)
}

// AWS Internet of Things (IoT) object name.
func (o DeviceTypeOutput) IotThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.IotThingName }).(pulumi.StringPtrOutput)
}

type DeviceTypePtrOutput struct{ *pulumi.OutputState }

func (DeviceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceType)(nil)).Elem()
}

func (o DeviceTypePtrOutput) ToDeviceTypePtrOutput() DeviceTypePtrOutput {
	return o
}

func (o DeviceTypePtrOutput) ToDeviceTypePtrOutputWithContext(ctx context.Context) DeviceTypePtrOutput {
	return o
}

func (o DeviceTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeviceType] {
	return pulumix.Output[*DeviceType]{
		OutputState: o.OutputState,
	}
}

func (o DeviceTypePtrOutput) Elem() DeviceTypeOutput {
	return o.ApplyT(func(v *DeviceType) DeviceType {
		if v != nil {
			return *v
		}
		var ret DeviceType
		return ret
	}).(DeviceTypeOutput)
}

// Description of the device
func (o DeviceTypePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name of the device
func (o DeviceTypePtrOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceName
	}).(pulumi.StringPtrOutput)
}

// AWS Internet of Things (IoT) object name.
func (o DeviceTypePtrOutput) IotThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceType) *string {
		if v == nil {
			return nil
		}
		return v.IotThingName
	}).(pulumi.StringPtrOutput)
}

type DeviceFleetEdgeOutputConfig struct {
	// The KMS key id used for encryption on the S3 bucket
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Simple Storage (S3) bucket URI
	S3OutputLocation string `pulumi:"s3OutputLocation"`
}

// DeviceFleetEdgeOutputConfigInput is an input type that accepts DeviceFleetEdgeOutputConfigArgs and DeviceFleetEdgeOutputConfigOutput values.
// You can construct a concrete instance of `DeviceFleetEdgeOutputConfigInput` via:
//
//	DeviceFleetEdgeOutputConfigArgs{...}
type DeviceFleetEdgeOutputConfigInput interface {
	pulumi.Input

	ToDeviceFleetEdgeOutputConfigOutput() DeviceFleetEdgeOutputConfigOutput
	ToDeviceFleetEdgeOutputConfigOutputWithContext(context.Context) DeviceFleetEdgeOutputConfigOutput
}

type DeviceFleetEdgeOutputConfigArgs struct {
	// The KMS key id used for encryption on the S3 bucket
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon Simple Storage (S3) bucket URI
	S3OutputLocation pulumi.StringInput `pulumi:"s3OutputLocation"`
}

func (DeviceFleetEdgeOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetEdgeOutputConfig)(nil)).Elem()
}

func (i DeviceFleetEdgeOutputConfigArgs) ToDeviceFleetEdgeOutputConfigOutput() DeviceFleetEdgeOutputConfigOutput {
	return i.ToDeviceFleetEdgeOutputConfigOutputWithContext(context.Background())
}

func (i DeviceFleetEdgeOutputConfigArgs) ToDeviceFleetEdgeOutputConfigOutputWithContext(ctx context.Context) DeviceFleetEdgeOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceFleetEdgeOutputConfigOutput)
}

func (i DeviceFleetEdgeOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeviceFleetEdgeOutputConfig] {
	return pulumix.Output[DeviceFleetEdgeOutputConfig]{
		OutputState: i.ToDeviceFleetEdgeOutputConfigOutputWithContext(ctx).OutputState,
	}
}

type DeviceFleetEdgeOutputConfigOutput struct{ *pulumi.OutputState }

func (DeviceFleetEdgeOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetEdgeOutputConfig)(nil)).Elem()
}

func (o DeviceFleetEdgeOutputConfigOutput) ToDeviceFleetEdgeOutputConfigOutput() DeviceFleetEdgeOutputConfigOutput {
	return o
}

func (o DeviceFleetEdgeOutputConfigOutput) ToDeviceFleetEdgeOutputConfigOutputWithContext(ctx context.Context) DeviceFleetEdgeOutputConfigOutput {
	return o
}

func (o DeviceFleetEdgeOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceFleetEdgeOutputConfig] {
	return pulumix.Output[DeviceFleetEdgeOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The KMS key id used for encryption on the S3 bucket
func (o DeviceFleetEdgeOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceFleetEdgeOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Simple Storage (S3) bucket URI
func (o DeviceFleetEdgeOutputConfigOutput) S3OutputLocation() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceFleetEdgeOutputConfig) string { return v.S3OutputLocation }).(pulumi.StringOutput)
}

type DeviceFleetEdgeOutputConfigPtrOutput struct{ *pulumi.OutputState }

func (DeviceFleetEdgeOutputConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceFleetEdgeOutputConfig)(nil)).Elem()
}

func (o DeviceFleetEdgeOutputConfigPtrOutput) ToDeviceFleetEdgeOutputConfigPtrOutput() DeviceFleetEdgeOutputConfigPtrOutput {
	return o
}

func (o DeviceFleetEdgeOutputConfigPtrOutput) ToDeviceFleetEdgeOutputConfigPtrOutputWithContext(ctx context.Context) DeviceFleetEdgeOutputConfigPtrOutput {
	return o
}

func (o DeviceFleetEdgeOutputConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeviceFleetEdgeOutputConfig] {
	return pulumix.Output[*DeviceFleetEdgeOutputConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeviceFleetEdgeOutputConfigPtrOutput) Elem() DeviceFleetEdgeOutputConfigOutput {
	return o.ApplyT(func(v *DeviceFleetEdgeOutputConfig) DeviceFleetEdgeOutputConfig {
		if v != nil {
			return *v
		}
		var ret DeviceFleetEdgeOutputConfig
		return ret
	}).(DeviceFleetEdgeOutputConfigOutput)
}

// The KMS key id used for encryption on the S3 bucket
func (o DeviceFleetEdgeOutputConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceFleetEdgeOutputConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Simple Storage (S3) bucket URI
func (o DeviceFleetEdgeOutputConfigPtrOutput) S3OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceFleetEdgeOutputConfig) *string {
		if v == nil {
			return nil
		}
		return &v.S3OutputLocation
	}).(pulumi.StringPtrOutput)
}

// Key-value pair to associate as a tag for the resource
type DeviceFleetTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// DeviceFleetTagInput is an input type that accepts DeviceFleetTagArgs and DeviceFleetTagOutput values.
// You can construct a concrete instance of `DeviceFleetTagInput` via:
//
//	DeviceFleetTagArgs{...}
type DeviceFleetTagInput interface {
	pulumi.Input

	ToDeviceFleetTagOutput() DeviceFleetTagOutput
	ToDeviceFleetTagOutputWithContext(context.Context) DeviceFleetTagOutput
}

// Key-value pair to associate as a tag for the resource
type DeviceFleetTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DeviceFleetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetTag)(nil)).Elem()
}

func (i DeviceFleetTagArgs) ToDeviceFleetTagOutput() DeviceFleetTagOutput {
	return i.ToDeviceFleetTagOutputWithContext(context.Background())
}

func (i DeviceFleetTagArgs) ToDeviceFleetTagOutputWithContext(ctx context.Context) DeviceFleetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceFleetTagOutput)
}

func (i DeviceFleetTagArgs) ToOutput(ctx context.Context) pulumix.Output[DeviceFleetTag] {
	return pulumix.Output[DeviceFleetTag]{
		OutputState: i.ToDeviceFleetTagOutputWithContext(ctx).OutputState,
	}
}

// DeviceFleetTagArrayInput is an input type that accepts DeviceFleetTagArray and DeviceFleetTagArrayOutput values.
// You can construct a concrete instance of `DeviceFleetTagArrayInput` via:
//
//	DeviceFleetTagArray{ DeviceFleetTagArgs{...} }
type DeviceFleetTagArrayInput interface {
	pulumi.Input

	ToDeviceFleetTagArrayOutput() DeviceFleetTagArrayOutput
	ToDeviceFleetTagArrayOutputWithContext(context.Context) DeviceFleetTagArrayOutput
}

type DeviceFleetTagArray []DeviceFleetTagInput

func (DeviceFleetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceFleetTag)(nil)).Elem()
}

func (i DeviceFleetTagArray) ToDeviceFleetTagArrayOutput() DeviceFleetTagArrayOutput {
	return i.ToDeviceFleetTagArrayOutputWithContext(context.Background())
}

func (i DeviceFleetTagArray) ToDeviceFleetTagArrayOutputWithContext(ctx context.Context) DeviceFleetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceFleetTagArrayOutput)
}

func (i DeviceFleetTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DeviceFleetTag] {
	return pulumix.Output[[]DeviceFleetTag]{
		OutputState: i.ToDeviceFleetTagArrayOutputWithContext(ctx).OutputState,
	}
}

// Key-value pair to associate as a tag for the resource
type DeviceFleetTagOutput struct{ *pulumi.OutputState }

func (DeviceFleetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetTag)(nil)).Elem()
}

func (o DeviceFleetTagOutput) ToDeviceFleetTagOutput() DeviceFleetTagOutput {
	return o
}

func (o DeviceFleetTagOutput) ToDeviceFleetTagOutputWithContext(ctx context.Context) DeviceFleetTagOutput {
	return o
}

func (o DeviceFleetTagOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceFleetTag] {
	return pulumix.Output[DeviceFleetTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DeviceFleetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceFleetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DeviceFleetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceFleetTag) string { return v.Value }).(pulumi.StringOutput)
}

type DeviceFleetTagArrayOutput struct{ *pulumi.OutputState }

func (DeviceFleetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceFleetTag)(nil)).Elem()
}

func (o DeviceFleetTagArrayOutput) ToDeviceFleetTagArrayOutput() DeviceFleetTagArrayOutput {
	return o
}

func (o DeviceFleetTagArrayOutput) ToDeviceFleetTagArrayOutputWithContext(ctx context.Context) DeviceFleetTagArrayOutput {
	return o
}

func (o DeviceFleetTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeviceFleetTag] {
	return pulumix.Output[[]DeviceFleetTag]{
		OutputState: o.OutputState,
	}
}

func (o DeviceFleetTagArrayOutput) Index(i pulumi.IntInput) DeviceFleetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceFleetTag {
		return vs[0].([]DeviceFleetTag)[vs[1].(int)]
	}).(DeviceFleetTagOutput)
}

type DeviceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// DeviceTagInput is an input type that accepts DeviceTagArgs and DeviceTagOutput values.
// You can construct a concrete instance of `DeviceTagInput` via:
//
//	DeviceTagArgs{...}
type DeviceTagInput interface {
	pulumi.Input

	ToDeviceTagOutput() DeviceTagOutput
	ToDeviceTagOutputWithContext(context.Context) DeviceTagOutput
}

type DeviceTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DeviceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceTag)(nil)).Elem()
}

func (i DeviceTagArgs) ToDeviceTagOutput() DeviceTagOutput {
	return i.ToDeviceTagOutputWithContext(context.Background())
}

func (i DeviceTagArgs) ToDeviceTagOutputWithContext(ctx context.Context) DeviceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTagOutput)
}

func (i DeviceTagArgs) ToOutput(ctx context.Context) pulumix.Output[DeviceTag] {
	return pulumix.Output[DeviceTag]{
		OutputState: i.ToDeviceTagOutputWithContext(ctx).OutputState,
	}
}

// DeviceTagArrayInput is an input type that accepts DeviceTagArray and DeviceTagArrayOutput values.
// You can construct a concrete instance of `DeviceTagArrayInput` via:
//
//	DeviceTagArray{ DeviceTagArgs{...} }
type DeviceTagArrayInput interface {
	pulumi.Input

	ToDeviceTagArrayOutput() DeviceTagArrayOutput
	ToDeviceTagArrayOutputWithContext(context.Context) DeviceTagArrayOutput
}

type DeviceTagArray []DeviceTagInput

func (DeviceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceTag)(nil)).Elem()
}

func (i DeviceTagArray) ToDeviceTagArrayOutput() DeviceTagArrayOutput {
	return i.ToDeviceTagArrayOutputWithContext(context.Background())
}

func (i DeviceTagArray) ToDeviceTagArrayOutputWithContext(ctx context.Context) DeviceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTagArrayOutput)
}

func (i DeviceTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DeviceTag] {
	return pulumix.Output[[]DeviceTag]{
		OutputState: i.ToDeviceTagArrayOutputWithContext(ctx).OutputState,
	}
}

type DeviceTagOutput struct{ *pulumi.OutputState }

func (DeviceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceTag)(nil)).Elem()
}

func (o DeviceTagOutput) ToDeviceTagOutput() DeviceTagOutput {
	return o
}

func (o DeviceTagOutput) ToDeviceTagOutputWithContext(ctx context.Context) DeviceTagOutput {
	return o
}

func (o DeviceTagOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceTag] {
	return pulumix.Output[DeviceTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DeviceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The key value of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DeviceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceTag) string { return v.Value }).(pulumi.StringOutput)
}

type DeviceTagArrayOutput struct{ *pulumi.OutputState }

func (DeviceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceTag)(nil)).Elem()
}

func (o DeviceTagArrayOutput) ToDeviceTagArrayOutput() DeviceTagArrayOutput {
	return o
}

func (o DeviceTagArrayOutput) ToDeviceTagArrayOutputWithContext(ctx context.Context) DeviceTagArrayOutput {
	return o
}

func (o DeviceTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeviceTag] {
	return pulumix.Output[[]DeviceTag]{
		OutputState: o.OutputState,
	}
}

func (o DeviceTagArrayOutput) Index(i pulumi.IntInput) DeviceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceTag {
		return vs[0].([]DeviceTag)[vs[1].(int)]
	}).(DeviceTagOutput)
}

// The CodeEditor app settings.
type DomainCodeEditorAppSettings struct {
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with CodeEditor apps.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

// DomainCodeEditorAppSettingsInput is an input type that accepts DomainCodeEditorAppSettingsArgs and DomainCodeEditorAppSettingsOutput values.
// You can construct a concrete instance of `DomainCodeEditorAppSettingsInput` via:
//
//	DomainCodeEditorAppSettingsArgs{...}
type DomainCodeEditorAppSettingsInput interface {
	pulumi.Input

	ToDomainCodeEditorAppSettingsOutput() DomainCodeEditorAppSettingsOutput
	ToDomainCodeEditorAppSettingsOutputWithContext(context.Context) DomainCodeEditorAppSettingsOutput
}

// The CodeEditor app settings.
type DomainCodeEditorAppSettingsArgs struct {
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
	DefaultResourceSpec DomainResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with CodeEditor apps.
	LifecycleConfigArns pulumi.StringArrayInput `pulumi:"lifecycleConfigArns"`
}

func (DomainCodeEditorAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCodeEditorAppSettings)(nil)).Elem()
}

func (i DomainCodeEditorAppSettingsArgs) ToDomainCodeEditorAppSettingsOutput() DomainCodeEditorAppSettingsOutput {
	return i.ToDomainCodeEditorAppSettingsOutputWithContext(context.Background())
}

func (i DomainCodeEditorAppSettingsArgs) ToDomainCodeEditorAppSettingsOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCodeEditorAppSettingsOutput)
}

func (i DomainCodeEditorAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCodeEditorAppSettings] {
	return pulumix.Output[DomainCodeEditorAppSettings]{
		OutputState: i.ToDomainCodeEditorAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainCodeEditorAppSettingsArgs) ToDomainCodeEditorAppSettingsPtrOutput() DomainCodeEditorAppSettingsPtrOutput {
	return i.ToDomainCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainCodeEditorAppSettingsArgs) ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCodeEditorAppSettingsOutput).ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx)
}

// DomainCodeEditorAppSettingsPtrInput is an input type that accepts DomainCodeEditorAppSettingsArgs, DomainCodeEditorAppSettingsPtr and DomainCodeEditorAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainCodeEditorAppSettingsPtrInput` via:
//
//	        DomainCodeEditorAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainCodeEditorAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainCodeEditorAppSettingsPtrOutput() DomainCodeEditorAppSettingsPtrOutput
	ToDomainCodeEditorAppSettingsPtrOutputWithContext(context.Context) DomainCodeEditorAppSettingsPtrOutput
}

type domainCodeEditorAppSettingsPtrType DomainCodeEditorAppSettingsArgs

func DomainCodeEditorAppSettingsPtr(v *DomainCodeEditorAppSettingsArgs) DomainCodeEditorAppSettingsPtrInput {
	return (*domainCodeEditorAppSettingsPtrType)(v)
}

func (*domainCodeEditorAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCodeEditorAppSettings)(nil)).Elem()
}

func (i *domainCodeEditorAppSettingsPtrType) ToDomainCodeEditorAppSettingsPtrOutput() DomainCodeEditorAppSettingsPtrOutput {
	return i.ToDomainCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainCodeEditorAppSettingsPtrType) ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCodeEditorAppSettingsPtrOutput)
}

func (i *domainCodeEditorAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainCodeEditorAppSettings] {
	return pulumix.Output[*DomainCodeEditorAppSettings]{
		OutputState: i.ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The CodeEditor app settings.
type DomainCodeEditorAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainCodeEditorAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCodeEditorAppSettings)(nil)).Elem()
}

func (o DomainCodeEditorAppSettingsOutput) ToDomainCodeEditorAppSettingsOutput() DomainCodeEditorAppSettingsOutput {
	return o
}

func (o DomainCodeEditorAppSettingsOutput) ToDomainCodeEditorAppSettingsOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsOutput {
	return o
}

func (o DomainCodeEditorAppSettingsOutput) ToDomainCodeEditorAppSettingsPtrOutput() DomainCodeEditorAppSettingsPtrOutput {
	return o.ToDomainCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainCodeEditorAppSettingsOutput) ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCodeEditorAppSettings) *DomainCodeEditorAppSettings {
		return &v
	}).(DomainCodeEditorAppSettingsPtrOutput)
}

func (o DomainCodeEditorAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCodeEditorAppSettings] {
	return pulumix.Output[DomainCodeEditorAppSettings]{
		OutputState: o.OutputState,
	}
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
func (o DomainCodeEditorAppSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainCodeEditorAppSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with CodeEditor apps.
func (o DomainCodeEditorAppSettingsOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainCodeEditorAppSettings) []string { return v.LifecycleConfigArns }).(pulumi.StringArrayOutput)
}

type DomainCodeEditorAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainCodeEditorAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCodeEditorAppSettings)(nil)).Elem()
}

func (o DomainCodeEditorAppSettingsPtrOutput) ToDomainCodeEditorAppSettingsPtrOutput() DomainCodeEditorAppSettingsPtrOutput {
	return o
}

func (o DomainCodeEditorAppSettingsPtrOutput) ToDomainCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) DomainCodeEditorAppSettingsPtrOutput {
	return o
}

func (o DomainCodeEditorAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainCodeEditorAppSettings] {
	return pulumix.Output[*DomainCodeEditorAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainCodeEditorAppSettingsPtrOutput) Elem() DomainCodeEditorAppSettingsOutput {
	return o.ApplyT(func(v *DomainCodeEditorAppSettings) DomainCodeEditorAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainCodeEditorAppSettings
		return ret
	}).(DomainCodeEditorAppSettingsOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
func (o DomainCodeEditorAppSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainCodeEditorAppSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with CodeEditor apps.
func (o DomainCodeEditorAppSettingsPtrOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainCodeEditorAppSettings) []string {
		if v == nil {
			return nil
		}
		return v.LifecycleConfigArns
	}).(pulumi.StringArrayOutput)
}

type DomainCodeRepository struct {
	// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

// DomainCodeRepositoryInput is an input type that accepts DomainCodeRepositoryArgs and DomainCodeRepositoryOutput values.
// You can construct a concrete instance of `DomainCodeRepositoryInput` via:
//
//	DomainCodeRepositoryArgs{...}
type DomainCodeRepositoryInput interface {
	pulumi.Input

	ToDomainCodeRepositoryOutput() DomainCodeRepositoryOutput
	ToDomainCodeRepositoryOutputWithContext(context.Context) DomainCodeRepositoryOutput
}

type DomainCodeRepositoryArgs struct {
	// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
}

func (DomainCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCodeRepository)(nil)).Elem()
}

func (i DomainCodeRepositoryArgs) ToDomainCodeRepositoryOutput() DomainCodeRepositoryOutput {
	return i.ToDomainCodeRepositoryOutputWithContext(context.Background())
}

func (i DomainCodeRepositoryArgs) ToDomainCodeRepositoryOutputWithContext(ctx context.Context) DomainCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCodeRepositoryOutput)
}

func (i DomainCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCodeRepository] {
	return pulumix.Output[DomainCodeRepository]{
		OutputState: i.ToDomainCodeRepositoryOutputWithContext(ctx).OutputState,
	}
}

// DomainCodeRepositoryArrayInput is an input type that accepts DomainCodeRepositoryArray and DomainCodeRepositoryArrayOutput values.
// You can construct a concrete instance of `DomainCodeRepositoryArrayInput` via:
//
//	DomainCodeRepositoryArray{ DomainCodeRepositoryArgs{...} }
type DomainCodeRepositoryArrayInput interface {
	pulumi.Input

	ToDomainCodeRepositoryArrayOutput() DomainCodeRepositoryArrayOutput
	ToDomainCodeRepositoryArrayOutputWithContext(context.Context) DomainCodeRepositoryArrayOutput
}

type DomainCodeRepositoryArray []DomainCodeRepositoryInput

func (DomainCodeRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCodeRepository)(nil)).Elem()
}

func (i DomainCodeRepositoryArray) ToDomainCodeRepositoryArrayOutput() DomainCodeRepositoryArrayOutput {
	return i.ToDomainCodeRepositoryArrayOutputWithContext(context.Background())
}

func (i DomainCodeRepositoryArray) ToDomainCodeRepositoryArrayOutputWithContext(ctx context.Context) DomainCodeRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCodeRepositoryArrayOutput)
}

func (i DomainCodeRepositoryArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainCodeRepository] {
	return pulumix.Output[[]DomainCodeRepository]{
		OutputState: i.ToDomainCodeRepositoryArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainCodeRepositoryOutput struct{ *pulumi.OutputState }

func (DomainCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCodeRepository)(nil)).Elem()
}

func (o DomainCodeRepositoryOutput) ToDomainCodeRepositoryOutput() DomainCodeRepositoryOutput {
	return o
}

func (o DomainCodeRepositoryOutput) ToDomainCodeRepositoryOutputWithContext(ctx context.Context) DomainCodeRepositoryOutput {
	return o
}

func (o DomainCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCodeRepository] {
	return pulumix.Output[DomainCodeRepository]{
		OutputState: o.OutputState,
	}
}

// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
func (o DomainCodeRepositoryOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCodeRepository) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

type DomainCodeRepositoryArrayOutput struct{ *pulumi.OutputState }

func (DomainCodeRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCodeRepository)(nil)).Elem()
}

func (o DomainCodeRepositoryArrayOutput) ToDomainCodeRepositoryArrayOutput() DomainCodeRepositoryArrayOutput {
	return o
}

func (o DomainCodeRepositoryArrayOutput) ToDomainCodeRepositoryArrayOutputWithContext(ctx context.Context) DomainCodeRepositoryArrayOutput {
	return o
}

func (o DomainCodeRepositoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainCodeRepository] {
	return pulumix.Output[[]DomainCodeRepository]{
		OutputState: o.OutputState,
	}
}

func (o DomainCodeRepositoryArrayOutput) Index(i pulumi.IntInput) DomainCodeRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainCodeRepository {
		return vs[0].([]DomainCodeRepository)[vs[1].(int)]
	}).(DomainCodeRepositoryOutput)
}

type DomainCustomFileSystemConfig struct {
	EfsFileSystemConfig *DomainEfsFileSystemConfig `pulumi:"efsFileSystemConfig"`
}

// DomainCustomFileSystemConfigInput is an input type that accepts DomainCustomFileSystemConfigArgs and DomainCustomFileSystemConfigOutput values.
// You can construct a concrete instance of `DomainCustomFileSystemConfigInput` via:
//
//	DomainCustomFileSystemConfigArgs{...}
type DomainCustomFileSystemConfigInput interface {
	pulumi.Input

	ToDomainCustomFileSystemConfigOutput() DomainCustomFileSystemConfigOutput
	ToDomainCustomFileSystemConfigOutputWithContext(context.Context) DomainCustomFileSystemConfigOutput
}

type DomainCustomFileSystemConfigArgs struct {
	EfsFileSystemConfig DomainEfsFileSystemConfigPtrInput `pulumi:"efsFileSystemConfig"`
}

func (DomainCustomFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomFileSystemConfig)(nil)).Elem()
}

func (i DomainCustomFileSystemConfigArgs) ToDomainCustomFileSystemConfigOutput() DomainCustomFileSystemConfigOutput {
	return i.ToDomainCustomFileSystemConfigOutputWithContext(context.Background())
}

func (i DomainCustomFileSystemConfigArgs) ToDomainCustomFileSystemConfigOutputWithContext(ctx context.Context) DomainCustomFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomFileSystemConfigOutput)
}

func (i DomainCustomFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCustomFileSystemConfig] {
	return pulumix.Output[DomainCustomFileSystemConfig]{
		OutputState: i.ToDomainCustomFileSystemConfigOutputWithContext(ctx).OutputState,
	}
}

// DomainCustomFileSystemConfigArrayInput is an input type that accepts DomainCustomFileSystemConfigArray and DomainCustomFileSystemConfigArrayOutput values.
// You can construct a concrete instance of `DomainCustomFileSystemConfigArrayInput` via:
//
//	DomainCustomFileSystemConfigArray{ DomainCustomFileSystemConfigArgs{...} }
type DomainCustomFileSystemConfigArrayInput interface {
	pulumi.Input

	ToDomainCustomFileSystemConfigArrayOutput() DomainCustomFileSystemConfigArrayOutput
	ToDomainCustomFileSystemConfigArrayOutputWithContext(context.Context) DomainCustomFileSystemConfigArrayOutput
}

type DomainCustomFileSystemConfigArray []DomainCustomFileSystemConfigInput

func (DomainCustomFileSystemConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCustomFileSystemConfig)(nil)).Elem()
}

func (i DomainCustomFileSystemConfigArray) ToDomainCustomFileSystemConfigArrayOutput() DomainCustomFileSystemConfigArrayOutput {
	return i.ToDomainCustomFileSystemConfigArrayOutputWithContext(context.Background())
}

func (i DomainCustomFileSystemConfigArray) ToDomainCustomFileSystemConfigArrayOutputWithContext(ctx context.Context) DomainCustomFileSystemConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomFileSystemConfigArrayOutput)
}

func (i DomainCustomFileSystemConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainCustomFileSystemConfig] {
	return pulumix.Output[[]DomainCustomFileSystemConfig]{
		OutputState: i.ToDomainCustomFileSystemConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainCustomFileSystemConfigOutput struct{ *pulumi.OutputState }

func (DomainCustomFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomFileSystemConfig)(nil)).Elem()
}

func (o DomainCustomFileSystemConfigOutput) ToDomainCustomFileSystemConfigOutput() DomainCustomFileSystemConfigOutput {
	return o
}

func (o DomainCustomFileSystemConfigOutput) ToDomainCustomFileSystemConfigOutputWithContext(ctx context.Context) DomainCustomFileSystemConfigOutput {
	return o
}

func (o DomainCustomFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCustomFileSystemConfig] {
	return pulumix.Output[DomainCustomFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainCustomFileSystemConfigOutput) EfsFileSystemConfig() DomainEfsFileSystemConfigPtrOutput {
	return o.ApplyT(func(v DomainCustomFileSystemConfig) *DomainEfsFileSystemConfig { return v.EfsFileSystemConfig }).(DomainEfsFileSystemConfigPtrOutput)
}

type DomainCustomFileSystemConfigArrayOutput struct{ *pulumi.OutputState }

func (DomainCustomFileSystemConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCustomFileSystemConfig)(nil)).Elem()
}

func (o DomainCustomFileSystemConfigArrayOutput) ToDomainCustomFileSystemConfigArrayOutput() DomainCustomFileSystemConfigArrayOutput {
	return o
}

func (o DomainCustomFileSystemConfigArrayOutput) ToDomainCustomFileSystemConfigArrayOutputWithContext(ctx context.Context) DomainCustomFileSystemConfigArrayOutput {
	return o
}

func (o DomainCustomFileSystemConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainCustomFileSystemConfig] {
	return pulumix.Output[[]DomainCustomFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainCustomFileSystemConfigArrayOutput) Index(i pulumi.IntInput) DomainCustomFileSystemConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainCustomFileSystemConfig {
		return vs[0].([]DomainCustomFileSystemConfig)[vs[1].(int)]
	}).(DomainCustomFileSystemConfigOutput)
}

// A custom SageMaker image.
type DomainCustomImage struct {
	// The Name of the AppImageConfig.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName string `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

// DomainCustomImageInput is an input type that accepts DomainCustomImageArgs and DomainCustomImageOutput values.
// You can construct a concrete instance of `DomainCustomImageInput` via:
//
//	DomainCustomImageArgs{...}
type DomainCustomImageInput interface {
	pulumi.Input

	ToDomainCustomImageOutput() DomainCustomImageOutput
	ToDomainCustomImageOutputWithContext(context.Context) DomainCustomImageOutput
}

// A custom SageMaker image.
type DomainCustomImageArgs struct {
	// The Name of the AppImageConfig.
	AppImageConfigName pulumi.StringInput `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber pulumi.IntPtrInput `pulumi:"imageVersionNumber"`
}

func (DomainCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomImage)(nil)).Elem()
}

func (i DomainCustomImageArgs) ToDomainCustomImageOutput() DomainCustomImageOutput {
	return i.ToDomainCustomImageOutputWithContext(context.Background())
}

func (i DomainCustomImageArgs) ToDomainCustomImageOutputWithContext(ctx context.Context) DomainCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomImageOutput)
}

func (i DomainCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCustomImage] {
	return pulumix.Output[DomainCustomImage]{
		OutputState: i.ToDomainCustomImageOutputWithContext(ctx).OutputState,
	}
}

// DomainCustomImageArrayInput is an input type that accepts DomainCustomImageArray and DomainCustomImageArrayOutput values.
// You can construct a concrete instance of `DomainCustomImageArrayInput` via:
//
//	DomainCustomImageArray{ DomainCustomImageArgs{...} }
type DomainCustomImageArrayInput interface {
	pulumi.Input

	ToDomainCustomImageArrayOutput() DomainCustomImageArrayOutput
	ToDomainCustomImageArrayOutputWithContext(context.Context) DomainCustomImageArrayOutput
}

type DomainCustomImageArray []DomainCustomImageInput

func (DomainCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCustomImage)(nil)).Elem()
}

func (i DomainCustomImageArray) ToDomainCustomImageArrayOutput() DomainCustomImageArrayOutput {
	return i.ToDomainCustomImageArrayOutputWithContext(context.Background())
}

func (i DomainCustomImageArray) ToDomainCustomImageArrayOutputWithContext(ctx context.Context) DomainCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomImageArrayOutput)
}

func (i DomainCustomImageArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainCustomImage] {
	return pulumix.Output[[]DomainCustomImage]{
		OutputState: i.ToDomainCustomImageArrayOutputWithContext(ctx).OutputState,
	}
}

// A custom SageMaker image.
type DomainCustomImageOutput struct{ *pulumi.OutputState }

func (DomainCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomImage)(nil)).Elem()
}

func (o DomainCustomImageOutput) ToDomainCustomImageOutput() DomainCustomImageOutput {
	return o
}

func (o DomainCustomImageOutput) ToDomainCustomImageOutputWithContext(ctx context.Context) DomainCustomImageOutput {
	return o
}

func (o DomainCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCustomImage] {
	return pulumix.Output[DomainCustomImage]{
		OutputState: o.OutputState,
	}
}

// The Name of the AppImageConfig.
func (o DomainCustomImageOutput) AppImageConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCustomImage) string { return v.AppImageConfigName }).(pulumi.StringOutput)
}

// The name of the CustomImage. Must be unique to your account.
func (o DomainCustomImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCustomImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The version number of the CustomImage.
func (o DomainCustomImageOutput) ImageVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainCustomImage) *int { return v.ImageVersionNumber }).(pulumi.IntPtrOutput)
}

type DomainCustomImageArrayOutput struct{ *pulumi.OutputState }

func (DomainCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainCustomImage)(nil)).Elem()
}

func (o DomainCustomImageArrayOutput) ToDomainCustomImageArrayOutput() DomainCustomImageArrayOutput {
	return o
}

func (o DomainCustomImageArrayOutput) ToDomainCustomImageArrayOutputWithContext(ctx context.Context) DomainCustomImageArrayOutput {
	return o
}

func (o DomainCustomImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainCustomImage] {
	return pulumix.Output[[]DomainCustomImage]{
		OutputState: o.OutputState,
	}
}

func (o DomainCustomImageArrayOutput) Index(i pulumi.IntInput) DomainCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainCustomImage {
		return vs[0].([]DomainCustomImage)[vs[1].(int)]
	}).(DomainCustomImageOutput)
}

type DomainCustomPosixUserConfig struct {
	Gid int `pulumi:"gid"`
	Uid int `pulumi:"uid"`
}

// DomainCustomPosixUserConfigInput is an input type that accepts DomainCustomPosixUserConfigArgs and DomainCustomPosixUserConfigOutput values.
// You can construct a concrete instance of `DomainCustomPosixUserConfigInput` via:
//
//	DomainCustomPosixUserConfigArgs{...}
type DomainCustomPosixUserConfigInput interface {
	pulumi.Input

	ToDomainCustomPosixUserConfigOutput() DomainCustomPosixUserConfigOutput
	ToDomainCustomPosixUserConfigOutputWithContext(context.Context) DomainCustomPosixUserConfigOutput
}

type DomainCustomPosixUserConfigArgs struct {
	Gid pulumi.IntInput `pulumi:"gid"`
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (DomainCustomPosixUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomPosixUserConfig)(nil)).Elem()
}

func (i DomainCustomPosixUserConfigArgs) ToDomainCustomPosixUserConfigOutput() DomainCustomPosixUserConfigOutput {
	return i.ToDomainCustomPosixUserConfigOutputWithContext(context.Background())
}

func (i DomainCustomPosixUserConfigArgs) ToDomainCustomPosixUserConfigOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPosixUserConfigOutput)
}

func (i DomainCustomPosixUserConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCustomPosixUserConfig] {
	return pulumix.Output[DomainCustomPosixUserConfig]{
		OutputState: i.ToDomainCustomPosixUserConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainCustomPosixUserConfigArgs) ToDomainCustomPosixUserConfigPtrOutput() DomainCustomPosixUserConfigPtrOutput {
	return i.ToDomainCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (i DomainCustomPosixUserConfigArgs) ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPosixUserConfigOutput).ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx)
}

// DomainCustomPosixUserConfigPtrInput is an input type that accepts DomainCustomPosixUserConfigArgs, DomainCustomPosixUserConfigPtr and DomainCustomPosixUserConfigPtrOutput values.
// You can construct a concrete instance of `DomainCustomPosixUserConfigPtrInput` via:
//
//	        DomainCustomPosixUserConfigArgs{...}
//
//	or:
//
//	        nil
type DomainCustomPosixUserConfigPtrInput interface {
	pulumi.Input

	ToDomainCustomPosixUserConfigPtrOutput() DomainCustomPosixUserConfigPtrOutput
	ToDomainCustomPosixUserConfigPtrOutputWithContext(context.Context) DomainCustomPosixUserConfigPtrOutput
}

type domainCustomPosixUserConfigPtrType DomainCustomPosixUserConfigArgs

func DomainCustomPosixUserConfigPtr(v *DomainCustomPosixUserConfigArgs) DomainCustomPosixUserConfigPtrInput {
	return (*domainCustomPosixUserConfigPtrType)(v)
}

func (*domainCustomPosixUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCustomPosixUserConfig)(nil)).Elem()
}

func (i *domainCustomPosixUserConfigPtrType) ToDomainCustomPosixUserConfigPtrOutput() DomainCustomPosixUserConfigPtrOutput {
	return i.ToDomainCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (i *domainCustomPosixUserConfigPtrType) ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPosixUserConfigPtrOutput)
}

func (i *domainCustomPosixUserConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainCustomPosixUserConfig] {
	return pulumix.Output[*DomainCustomPosixUserConfig]{
		OutputState: i.ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainCustomPosixUserConfigOutput struct{ *pulumi.OutputState }

func (DomainCustomPosixUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomPosixUserConfig)(nil)).Elem()
}

func (o DomainCustomPosixUserConfigOutput) ToDomainCustomPosixUserConfigOutput() DomainCustomPosixUserConfigOutput {
	return o
}

func (o DomainCustomPosixUserConfigOutput) ToDomainCustomPosixUserConfigOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigOutput {
	return o
}

func (o DomainCustomPosixUserConfigOutput) ToDomainCustomPosixUserConfigPtrOutput() DomainCustomPosixUserConfigPtrOutput {
	return o.ToDomainCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (o DomainCustomPosixUserConfigOutput) ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCustomPosixUserConfig) *DomainCustomPosixUserConfig {
		return &v
	}).(DomainCustomPosixUserConfigPtrOutput)
}

func (o DomainCustomPosixUserConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCustomPosixUserConfig] {
	return pulumix.Output[DomainCustomPosixUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainCustomPosixUserConfigOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v DomainCustomPosixUserConfig) int { return v.Gid }).(pulumi.IntOutput)
}

func (o DomainCustomPosixUserConfigOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v DomainCustomPosixUserConfig) int { return v.Uid }).(pulumi.IntOutput)
}

type DomainCustomPosixUserConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainCustomPosixUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCustomPosixUserConfig)(nil)).Elem()
}

func (o DomainCustomPosixUserConfigPtrOutput) ToDomainCustomPosixUserConfigPtrOutput() DomainCustomPosixUserConfigPtrOutput {
	return o
}

func (o DomainCustomPosixUserConfigPtrOutput) ToDomainCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) DomainCustomPosixUserConfigPtrOutput {
	return o
}

func (o DomainCustomPosixUserConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainCustomPosixUserConfig] {
	return pulumix.Output[*DomainCustomPosixUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainCustomPosixUserConfigPtrOutput) Elem() DomainCustomPosixUserConfigOutput {
	return o.ApplyT(func(v *DomainCustomPosixUserConfig) DomainCustomPosixUserConfig {
		if v != nil {
			return *v
		}
		var ret DomainCustomPosixUserConfig
		return ret
	}).(DomainCustomPosixUserConfigOutput)
}

func (o DomainCustomPosixUserConfigPtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainCustomPosixUserConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.IntPtrOutput)
}

func (o DomainCustomPosixUserConfigPtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainCustomPosixUserConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.IntPtrOutput)
}

// Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS
type DomainDefaultEbsStorageSettings struct {
	// Default size of the Amazon EBS volume in Gb
	DefaultEbsVolumeSizeInGb int `pulumi:"defaultEbsVolumeSizeInGb"`
	// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
	MaximumEbsVolumeSizeInGb int `pulumi:"maximumEbsVolumeSizeInGb"`
}

// DomainDefaultEbsStorageSettingsInput is an input type that accepts DomainDefaultEbsStorageSettingsArgs and DomainDefaultEbsStorageSettingsOutput values.
// You can construct a concrete instance of `DomainDefaultEbsStorageSettingsInput` via:
//
//	DomainDefaultEbsStorageSettingsArgs{...}
type DomainDefaultEbsStorageSettingsInput interface {
	pulumi.Input

	ToDomainDefaultEbsStorageSettingsOutput() DomainDefaultEbsStorageSettingsOutput
	ToDomainDefaultEbsStorageSettingsOutputWithContext(context.Context) DomainDefaultEbsStorageSettingsOutput
}

// Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS
type DomainDefaultEbsStorageSettingsArgs struct {
	// Default size of the Amazon EBS volume in Gb
	DefaultEbsVolumeSizeInGb pulumi.IntInput `pulumi:"defaultEbsVolumeSizeInGb"`
	// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
	MaximumEbsVolumeSizeInGb pulumi.IntInput `pulumi:"maximumEbsVolumeSizeInGb"`
}

func (DomainDefaultEbsStorageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultEbsStorageSettings)(nil)).Elem()
}

func (i DomainDefaultEbsStorageSettingsArgs) ToDomainDefaultEbsStorageSettingsOutput() DomainDefaultEbsStorageSettingsOutput {
	return i.ToDomainDefaultEbsStorageSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultEbsStorageSettingsArgs) ToDomainDefaultEbsStorageSettingsOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultEbsStorageSettingsOutput)
}

func (i DomainDefaultEbsStorageSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultEbsStorageSettings] {
	return pulumix.Output[DomainDefaultEbsStorageSettings]{
		OutputState: i.ToDomainDefaultEbsStorageSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainDefaultEbsStorageSettingsArgs) ToDomainDefaultEbsStorageSettingsPtrOutput() DomainDefaultEbsStorageSettingsPtrOutput {
	return i.ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (i DomainDefaultEbsStorageSettingsArgs) ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultEbsStorageSettingsOutput).ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx)
}

// DomainDefaultEbsStorageSettingsPtrInput is an input type that accepts DomainDefaultEbsStorageSettingsArgs, DomainDefaultEbsStorageSettingsPtr and DomainDefaultEbsStorageSettingsPtrOutput values.
// You can construct a concrete instance of `DomainDefaultEbsStorageSettingsPtrInput` via:
//
//	        DomainDefaultEbsStorageSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainDefaultEbsStorageSettingsPtrInput interface {
	pulumi.Input

	ToDomainDefaultEbsStorageSettingsPtrOutput() DomainDefaultEbsStorageSettingsPtrOutput
	ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(context.Context) DomainDefaultEbsStorageSettingsPtrOutput
}

type domainDefaultEbsStorageSettingsPtrType DomainDefaultEbsStorageSettingsArgs

func DomainDefaultEbsStorageSettingsPtr(v *DomainDefaultEbsStorageSettingsArgs) DomainDefaultEbsStorageSettingsPtrInput {
	return (*domainDefaultEbsStorageSettingsPtrType)(v)
}

func (*domainDefaultEbsStorageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultEbsStorageSettings)(nil)).Elem()
}

func (i *domainDefaultEbsStorageSettingsPtrType) ToDomainDefaultEbsStorageSettingsPtrOutput() DomainDefaultEbsStorageSettingsPtrOutput {
	return i.ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (i *domainDefaultEbsStorageSettingsPtrType) ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultEbsStorageSettingsPtrOutput)
}

func (i *domainDefaultEbsStorageSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultEbsStorageSettings] {
	return pulumix.Output[*DomainDefaultEbsStorageSettings]{
		OutputState: i.ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS
type DomainDefaultEbsStorageSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultEbsStorageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultEbsStorageSettings)(nil)).Elem()
}

func (o DomainDefaultEbsStorageSettingsOutput) ToDomainDefaultEbsStorageSettingsOutput() DomainDefaultEbsStorageSettingsOutput {
	return o
}

func (o DomainDefaultEbsStorageSettingsOutput) ToDomainDefaultEbsStorageSettingsOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsOutput {
	return o
}

func (o DomainDefaultEbsStorageSettingsOutput) ToDomainDefaultEbsStorageSettingsPtrOutput() DomainDefaultEbsStorageSettingsPtrOutput {
	return o.ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (o DomainDefaultEbsStorageSettingsOutput) ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainDefaultEbsStorageSettings) *DomainDefaultEbsStorageSettings {
		return &v
	}).(DomainDefaultEbsStorageSettingsPtrOutput)
}

func (o DomainDefaultEbsStorageSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultEbsStorageSettings] {
	return pulumix.Output[DomainDefaultEbsStorageSettings]{
		OutputState: o.OutputState,
	}
}

// Default size of the Amazon EBS volume in Gb
func (o DomainDefaultEbsStorageSettingsOutput) DefaultEbsVolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v DomainDefaultEbsStorageSettings) int { return v.DefaultEbsVolumeSizeInGb }).(pulumi.IntOutput)
}

// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
func (o DomainDefaultEbsStorageSettingsOutput) MaximumEbsVolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v DomainDefaultEbsStorageSettings) int { return v.MaximumEbsVolumeSizeInGb }).(pulumi.IntOutput)
}

type DomainDefaultEbsStorageSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainDefaultEbsStorageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultEbsStorageSettings)(nil)).Elem()
}

func (o DomainDefaultEbsStorageSettingsPtrOutput) ToDomainDefaultEbsStorageSettingsPtrOutput() DomainDefaultEbsStorageSettingsPtrOutput {
	return o
}

func (o DomainDefaultEbsStorageSettingsPtrOutput) ToDomainDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultEbsStorageSettingsPtrOutput {
	return o
}

func (o DomainDefaultEbsStorageSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultEbsStorageSettings] {
	return pulumix.Output[*DomainDefaultEbsStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainDefaultEbsStorageSettingsPtrOutput) Elem() DomainDefaultEbsStorageSettingsOutput {
	return o.ApplyT(func(v *DomainDefaultEbsStorageSettings) DomainDefaultEbsStorageSettings {
		if v != nil {
			return *v
		}
		var ret DomainDefaultEbsStorageSettings
		return ret
	}).(DomainDefaultEbsStorageSettingsOutput)
}

// Default size of the Amazon EBS volume in Gb
func (o DomainDefaultEbsStorageSettingsPtrOutput) DefaultEbsVolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainDefaultEbsStorageSettings) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultEbsVolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
func (o DomainDefaultEbsStorageSettingsPtrOutput) MaximumEbsVolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainDefaultEbsStorageSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumEbsVolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
type DomainDefaultSpaceSettings struct {
	// The execution role for the space.
	ExecutionRole string `pulumi:"executionRole"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings *DomainJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings *DomainKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups []string `pulumi:"securityGroups"`
}

// DomainDefaultSpaceSettingsInput is an input type that accepts DomainDefaultSpaceSettingsArgs and DomainDefaultSpaceSettingsOutput values.
// You can construct a concrete instance of `DomainDefaultSpaceSettingsInput` via:
//
//	DomainDefaultSpaceSettingsArgs{...}
type DomainDefaultSpaceSettingsInput interface {
	pulumi.Input

	ToDomainDefaultSpaceSettingsOutput() DomainDefaultSpaceSettingsOutput
	ToDomainDefaultSpaceSettingsOutputWithContext(context.Context) DomainDefaultSpaceSettingsOutput
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
type DomainDefaultSpaceSettingsArgs struct {
	// The execution role for the space.
	ExecutionRole pulumi.StringInput `pulumi:"executionRole"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings DomainJupyterServerAppSettingsPtrInput `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings DomainKernelGatewayAppSettingsPtrInput `pulumi:"kernelGatewayAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
}

func (DomainDefaultSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettings)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsOutput() DomainDefaultSpaceSettingsOutput {
	return i.ToDomainDefaultSpaceSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsOutput)
}

func (i DomainDefaultSpaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettings] {
	return pulumix.Output[DomainDefaultSpaceSettings]{
		OutputState: i.ToDomainDefaultSpaceSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsPtrOutput() DomainDefaultSpaceSettingsPtrOutput {
	return i.ToDomainDefaultSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsOutput).ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx)
}

// DomainDefaultSpaceSettingsPtrInput is an input type that accepts DomainDefaultSpaceSettingsArgs, DomainDefaultSpaceSettingsPtr and DomainDefaultSpaceSettingsPtrOutput values.
// You can construct a concrete instance of `DomainDefaultSpaceSettingsPtrInput` via:
//
//	        DomainDefaultSpaceSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainDefaultSpaceSettingsPtrInput interface {
	pulumi.Input

	ToDomainDefaultSpaceSettingsPtrOutput() DomainDefaultSpaceSettingsPtrOutput
	ToDomainDefaultSpaceSettingsPtrOutputWithContext(context.Context) DomainDefaultSpaceSettingsPtrOutput
}

type domainDefaultSpaceSettingsPtrType DomainDefaultSpaceSettingsArgs

func DomainDefaultSpaceSettingsPtr(v *DomainDefaultSpaceSettingsArgs) DomainDefaultSpaceSettingsPtrInput {
	return (*domainDefaultSpaceSettingsPtrType)(v)
}

func (*domainDefaultSpaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultSpaceSettings)(nil)).Elem()
}

func (i *domainDefaultSpaceSettingsPtrType) ToDomainDefaultSpaceSettingsPtrOutput() DomainDefaultSpaceSettingsPtrOutput {
	return i.ToDomainDefaultSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i *domainDefaultSpaceSettingsPtrType) ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsPtrOutput)
}

func (i *domainDefaultSpaceSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettings] {
	return pulumix.Output[*DomainDefaultSpaceSettings]{
		OutputState: i.ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
type DomainDefaultSpaceSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsOutput() DomainDefaultSpaceSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsPtrOutput() DomainDefaultSpaceSettingsPtrOutput {
	return o.ToDomainDefaultSpaceSettingsPtrOutputWithContext(context.Background())
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainDefaultSpaceSettings) *DomainDefaultSpaceSettings {
		return &v
	}).(DomainDefaultSpaceSettingsPtrOutput)
}

func (o DomainDefaultSpaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettings] {
	return pulumix.Output[DomainDefaultSpaceSettings]{
		OutputState: o.OutputState,
	}
}

// The execution role for the space.
func (o DomainDefaultSpaceSettingsOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v DomainDefaultSpaceSettings) string { return v.ExecutionRole }).(pulumi.StringOutput)
}

// The Jupyter server's app settings.
func (o DomainDefaultSpaceSettingsOutput) JupyterServerAppSettings() DomainJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainDefaultSpaceSettings) *DomainJupyterServerAppSettings { return v.JupyterServerAppSettings }).(DomainJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o DomainDefaultSpaceSettingsOutput) KernelGatewayAppSettings() DomainKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainDefaultSpaceSettings) *DomainKernelGatewayAppSettings { return v.KernelGatewayAppSettings }).(DomainKernelGatewayAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o DomainDefaultSpaceSettingsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainDefaultSpaceSettings) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

type DomainDefaultSpaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultSpaceSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsPtrOutput) ToDomainDefaultSpaceSettingsPtrOutput() DomainDefaultSpaceSettingsPtrOutput {
	return o
}

func (o DomainDefaultSpaceSettingsPtrOutput) ToDomainDefaultSpaceSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsPtrOutput {
	return o
}

func (o DomainDefaultSpaceSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettings] {
	return pulumix.Output[*DomainDefaultSpaceSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainDefaultSpaceSettingsPtrOutput) Elem() DomainDefaultSpaceSettingsOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceSettings) DomainDefaultSpaceSettings {
		if v != nil {
			return *v
		}
		var ret DomainDefaultSpaceSettings
		return ret
	}).(DomainDefaultSpaceSettingsOutput)
}

// The execution role for the space.
func (o DomainDefaultSpaceSettingsPtrOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionRole
	}).(pulumi.StringPtrOutput)
}

// The Jupyter server's app settings.
func (o DomainDefaultSpaceSettingsPtrOutput) JupyterServerAppSettings() DomainJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceSettings) *DomainJupyterServerAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterServerAppSettings
	}).(DomainJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o DomainDefaultSpaceSettingsPtrOutput) KernelGatewayAppSettings() DomainKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceSettings) *DomainKernelGatewayAppSettings {
		if v == nil {
			return nil
		}
		return v.KernelGatewayAppSettings
	}).(DomainKernelGatewayAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o DomainDefaultSpaceSettingsPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceSettings) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// Default storage settings for a space.
type DomainDefaultSpaceStorageSettings struct {
	DefaultEbsStorageSettings *DomainDefaultEbsStorageSettings `pulumi:"defaultEbsStorageSettings"`
}

// DomainDefaultSpaceStorageSettingsInput is an input type that accepts DomainDefaultSpaceStorageSettingsArgs and DomainDefaultSpaceStorageSettingsOutput values.
// You can construct a concrete instance of `DomainDefaultSpaceStorageSettingsInput` via:
//
//	DomainDefaultSpaceStorageSettingsArgs{...}
type DomainDefaultSpaceStorageSettingsInput interface {
	pulumi.Input

	ToDomainDefaultSpaceStorageSettingsOutput() DomainDefaultSpaceStorageSettingsOutput
	ToDomainDefaultSpaceStorageSettingsOutputWithContext(context.Context) DomainDefaultSpaceStorageSettingsOutput
}

// Default storage settings for a space.
type DomainDefaultSpaceStorageSettingsArgs struct {
	DefaultEbsStorageSettings DomainDefaultEbsStorageSettingsPtrInput `pulumi:"defaultEbsStorageSettings"`
}

func (DomainDefaultSpaceStorageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceStorageSettings)(nil)).Elem()
}

func (i DomainDefaultSpaceStorageSettingsArgs) ToDomainDefaultSpaceStorageSettingsOutput() DomainDefaultSpaceStorageSettingsOutput {
	return i.ToDomainDefaultSpaceStorageSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceStorageSettingsArgs) ToDomainDefaultSpaceStorageSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceStorageSettingsOutput)
}

func (i DomainDefaultSpaceStorageSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceStorageSettings] {
	return pulumix.Output[DomainDefaultSpaceStorageSettings]{
		OutputState: i.ToDomainDefaultSpaceStorageSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainDefaultSpaceStorageSettingsArgs) ToDomainDefaultSpaceStorageSettingsPtrOutput() DomainDefaultSpaceStorageSettingsPtrOutput {
	return i.ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceStorageSettingsArgs) ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceStorageSettingsOutput).ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx)
}

// DomainDefaultSpaceStorageSettingsPtrInput is an input type that accepts DomainDefaultSpaceStorageSettingsArgs, DomainDefaultSpaceStorageSettingsPtr and DomainDefaultSpaceStorageSettingsPtrOutput values.
// You can construct a concrete instance of `DomainDefaultSpaceStorageSettingsPtrInput` via:
//
//	        DomainDefaultSpaceStorageSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainDefaultSpaceStorageSettingsPtrInput interface {
	pulumi.Input

	ToDomainDefaultSpaceStorageSettingsPtrOutput() DomainDefaultSpaceStorageSettingsPtrOutput
	ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(context.Context) DomainDefaultSpaceStorageSettingsPtrOutput
}

type domainDefaultSpaceStorageSettingsPtrType DomainDefaultSpaceStorageSettingsArgs

func DomainDefaultSpaceStorageSettingsPtr(v *DomainDefaultSpaceStorageSettingsArgs) DomainDefaultSpaceStorageSettingsPtrInput {
	return (*domainDefaultSpaceStorageSettingsPtrType)(v)
}

func (*domainDefaultSpaceStorageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultSpaceStorageSettings)(nil)).Elem()
}

func (i *domainDefaultSpaceStorageSettingsPtrType) ToDomainDefaultSpaceStorageSettingsPtrOutput() DomainDefaultSpaceStorageSettingsPtrOutput {
	return i.ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (i *domainDefaultSpaceStorageSettingsPtrType) ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceStorageSettingsPtrOutput)
}

func (i *domainDefaultSpaceStorageSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceStorageSettings] {
	return pulumix.Output[*DomainDefaultSpaceStorageSettings]{
		OutputState: i.ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Default storage settings for a space.
type DomainDefaultSpaceStorageSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceStorageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceStorageSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceStorageSettingsOutput) ToDomainDefaultSpaceStorageSettingsOutput() DomainDefaultSpaceStorageSettingsOutput {
	return o
}

func (o DomainDefaultSpaceStorageSettingsOutput) ToDomainDefaultSpaceStorageSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsOutput {
	return o
}

func (o DomainDefaultSpaceStorageSettingsOutput) ToDomainDefaultSpaceStorageSettingsPtrOutput() DomainDefaultSpaceStorageSettingsPtrOutput {
	return o.ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (o DomainDefaultSpaceStorageSettingsOutput) ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainDefaultSpaceStorageSettings) *DomainDefaultSpaceStorageSettings {
		return &v
	}).(DomainDefaultSpaceStorageSettingsPtrOutput)
}

func (o DomainDefaultSpaceStorageSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceStorageSettings] {
	return pulumix.Output[DomainDefaultSpaceStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainDefaultSpaceStorageSettingsOutput) DefaultEbsStorageSettings() DomainDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyT(func(v DomainDefaultSpaceStorageSettings) *DomainDefaultEbsStorageSettings {
		return v.DefaultEbsStorageSettings
	}).(DomainDefaultEbsStorageSettingsPtrOutput)
}

type DomainDefaultSpaceStorageSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceStorageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDefaultSpaceStorageSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceStorageSettingsPtrOutput) ToDomainDefaultSpaceStorageSettingsPtrOutput() DomainDefaultSpaceStorageSettingsPtrOutput {
	return o
}

func (o DomainDefaultSpaceStorageSettingsPtrOutput) ToDomainDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) DomainDefaultSpaceStorageSettingsPtrOutput {
	return o
}

func (o DomainDefaultSpaceStorageSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceStorageSettings] {
	return pulumix.Output[*DomainDefaultSpaceStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainDefaultSpaceStorageSettingsPtrOutput) Elem() DomainDefaultSpaceStorageSettingsOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceStorageSettings) DomainDefaultSpaceStorageSettings {
		if v != nil {
			return *v
		}
		var ret DomainDefaultSpaceStorageSettings
		return ret
	}).(DomainDefaultSpaceStorageSettingsOutput)
}

func (o DomainDefaultSpaceStorageSettingsPtrOutput) DefaultEbsStorageSettings() DomainDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyT(func(v *DomainDefaultSpaceStorageSettings) *DomainDefaultEbsStorageSettings {
		if v == nil {
			return nil
		}
		return v.DefaultEbsStorageSettings
	}).(DomainDefaultEbsStorageSettingsPtrOutput)
}

type DomainEfsFileSystemConfig struct {
	FileSystemId   string  `pulumi:"fileSystemId"`
	FileSystemPath *string `pulumi:"fileSystemPath"`
}

// DomainEfsFileSystemConfigInput is an input type that accepts DomainEfsFileSystemConfigArgs and DomainEfsFileSystemConfigOutput values.
// You can construct a concrete instance of `DomainEfsFileSystemConfigInput` via:
//
//	DomainEfsFileSystemConfigArgs{...}
type DomainEfsFileSystemConfigInput interface {
	pulumi.Input

	ToDomainEfsFileSystemConfigOutput() DomainEfsFileSystemConfigOutput
	ToDomainEfsFileSystemConfigOutputWithContext(context.Context) DomainEfsFileSystemConfigOutput
}

type DomainEfsFileSystemConfigArgs struct {
	FileSystemId   pulumi.StringInput    `pulumi:"fileSystemId"`
	FileSystemPath pulumi.StringPtrInput `pulumi:"fileSystemPath"`
}

func (DomainEfsFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEfsFileSystemConfig)(nil)).Elem()
}

func (i DomainEfsFileSystemConfigArgs) ToDomainEfsFileSystemConfigOutput() DomainEfsFileSystemConfigOutput {
	return i.ToDomainEfsFileSystemConfigOutputWithContext(context.Background())
}

func (i DomainEfsFileSystemConfigArgs) ToDomainEfsFileSystemConfigOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEfsFileSystemConfigOutput)
}

func (i DomainEfsFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEfsFileSystemConfig] {
	return pulumix.Output[DomainEfsFileSystemConfig]{
		OutputState: i.ToDomainEfsFileSystemConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEfsFileSystemConfigArgs) ToDomainEfsFileSystemConfigPtrOutput() DomainEfsFileSystemConfigPtrOutput {
	return i.ToDomainEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i DomainEfsFileSystemConfigArgs) ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEfsFileSystemConfigOutput).ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx)
}

// DomainEfsFileSystemConfigPtrInput is an input type that accepts DomainEfsFileSystemConfigArgs, DomainEfsFileSystemConfigPtr and DomainEfsFileSystemConfigPtrOutput values.
// You can construct a concrete instance of `DomainEfsFileSystemConfigPtrInput` via:
//
//	        DomainEfsFileSystemConfigArgs{...}
//
//	or:
//
//	        nil
type DomainEfsFileSystemConfigPtrInput interface {
	pulumi.Input

	ToDomainEfsFileSystemConfigPtrOutput() DomainEfsFileSystemConfigPtrOutput
	ToDomainEfsFileSystemConfigPtrOutputWithContext(context.Context) DomainEfsFileSystemConfigPtrOutput
}

type domainEfsFileSystemConfigPtrType DomainEfsFileSystemConfigArgs

func DomainEfsFileSystemConfigPtr(v *DomainEfsFileSystemConfigArgs) DomainEfsFileSystemConfigPtrInput {
	return (*domainEfsFileSystemConfigPtrType)(v)
}

func (*domainEfsFileSystemConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEfsFileSystemConfig)(nil)).Elem()
}

func (i *domainEfsFileSystemConfigPtrType) ToDomainEfsFileSystemConfigPtrOutput() DomainEfsFileSystemConfigPtrOutput {
	return i.ToDomainEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i *domainEfsFileSystemConfigPtrType) ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEfsFileSystemConfigPtrOutput)
}

func (i *domainEfsFileSystemConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEfsFileSystemConfig] {
	return pulumix.Output[*DomainEfsFileSystemConfig]{
		OutputState: i.ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEfsFileSystemConfigOutput struct{ *pulumi.OutputState }

func (DomainEfsFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEfsFileSystemConfig)(nil)).Elem()
}

func (o DomainEfsFileSystemConfigOutput) ToDomainEfsFileSystemConfigOutput() DomainEfsFileSystemConfigOutput {
	return o
}

func (o DomainEfsFileSystemConfigOutput) ToDomainEfsFileSystemConfigOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigOutput {
	return o
}

func (o DomainEfsFileSystemConfigOutput) ToDomainEfsFileSystemConfigPtrOutput() DomainEfsFileSystemConfigPtrOutput {
	return o.ToDomainEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (o DomainEfsFileSystemConfigOutput) ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEfsFileSystemConfig) *DomainEfsFileSystemConfig {
		return &v
	}).(DomainEfsFileSystemConfigPtrOutput)
}

func (o DomainEfsFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEfsFileSystemConfig] {
	return pulumix.Output[DomainEfsFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainEfsFileSystemConfigOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainEfsFileSystemConfig) string { return v.FileSystemId }).(pulumi.StringOutput)
}

func (o DomainEfsFileSystemConfigOutput) FileSystemPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEfsFileSystemConfig) *string { return v.FileSystemPath }).(pulumi.StringPtrOutput)
}

type DomainEfsFileSystemConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainEfsFileSystemConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEfsFileSystemConfig)(nil)).Elem()
}

func (o DomainEfsFileSystemConfigPtrOutput) ToDomainEfsFileSystemConfigPtrOutput() DomainEfsFileSystemConfigPtrOutput {
	return o
}

func (o DomainEfsFileSystemConfigPtrOutput) ToDomainEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) DomainEfsFileSystemConfigPtrOutput {
	return o
}

func (o DomainEfsFileSystemConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEfsFileSystemConfig] {
	return pulumix.Output[*DomainEfsFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainEfsFileSystemConfigPtrOutput) Elem() DomainEfsFileSystemConfigOutput {
	return o.ApplyT(func(v *DomainEfsFileSystemConfig) DomainEfsFileSystemConfig {
		if v != nil {
			return *v
		}
		var ret DomainEfsFileSystemConfig
		return ret
	}).(DomainEfsFileSystemConfigOutput)
}

func (o DomainEfsFileSystemConfigPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEfsFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

func (o DomainEfsFileSystemConfigPtrOutput) FileSystemPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEfsFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemPath
	}).(pulumi.StringPtrOutput)
}

// The JupyterLab app settings.
type DomainJupyterLabAppSettings struct {
	// A list of CodeRepositories available for use with JupyterLab apps.
	CodeRepositories []DomainCodeRepository `pulumi:"codeRepositories"`
	// A list of custom images for use for JupyterLab apps.
	CustomImages []DomainCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with JupyterLab apps.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

// DomainJupyterLabAppSettingsInput is an input type that accepts DomainJupyterLabAppSettingsArgs and DomainJupyterLabAppSettingsOutput values.
// You can construct a concrete instance of `DomainJupyterLabAppSettingsInput` via:
//
//	DomainJupyterLabAppSettingsArgs{...}
type DomainJupyterLabAppSettingsInput interface {
	pulumi.Input

	ToDomainJupyterLabAppSettingsOutput() DomainJupyterLabAppSettingsOutput
	ToDomainJupyterLabAppSettingsOutputWithContext(context.Context) DomainJupyterLabAppSettingsOutput
}

// The JupyterLab app settings.
type DomainJupyterLabAppSettingsArgs struct {
	// A list of CodeRepositories available for use with JupyterLab apps.
	CodeRepositories DomainCodeRepositoryArrayInput `pulumi:"codeRepositories"`
	// A list of custom images for use for JupyterLab apps.
	CustomImages DomainCustomImageArrayInput `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
	DefaultResourceSpec DomainResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with JupyterLab apps.
	LifecycleConfigArns pulumi.StringArrayInput `pulumi:"lifecycleConfigArns"`
}

func (DomainJupyterLabAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJupyterLabAppSettings)(nil)).Elem()
}

func (i DomainJupyterLabAppSettingsArgs) ToDomainJupyterLabAppSettingsOutput() DomainJupyterLabAppSettingsOutput {
	return i.ToDomainJupyterLabAppSettingsOutputWithContext(context.Background())
}

func (i DomainJupyterLabAppSettingsArgs) ToDomainJupyterLabAppSettingsOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterLabAppSettingsOutput)
}

func (i DomainJupyterLabAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainJupyterLabAppSettings] {
	return pulumix.Output[DomainJupyterLabAppSettings]{
		OutputState: i.ToDomainJupyterLabAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainJupyterLabAppSettingsArgs) ToDomainJupyterLabAppSettingsPtrOutput() DomainJupyterLabAppSettingsPtrOutput {
	return i.ToDomainJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainJupyterLabAppSettingsArgs) ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterLabAppSettingsOutput).ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx)
}

// DomainJupyterLabAppSettingsPtrInput is an input type that accepts DomainJupyterLabAppSettingsArgs, DomainJupyterLabAppSettingsPtr and DomainJupyterLabAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainJupyterLabAppSettingsPtrInput` via:
//
//	        DomainJupyterLabAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainJupyterLabAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainJupyterLabAppSettingsPtrOutput() DomainJupyterLabAppSettingsPtrOutput
	ToDomainJupyterLabAppSettingsPtrOutputWithContext(context.Context) DomainJupyterLabAppSettingsPtrOutput
}

type domainJupyterLabAppSettingsPtrType DomainJupyterLabAppSettingsArgs

func DomainJupyterLabAppSettingsPtr(v *DomainJupyterLabAppSettingsArgs) DomainJupyterLabAppSettingsPtrInput {
	return (*domainJupyterLabAppSettingsPtrType)(v)
}

func (*domainJupyterLabAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJupyterLabAppSettings)(nil)).Elem()
}

func (i *domainJupyterLabAppSettingsPtrType) ToDomainJupyterLabAppSettingsPtrOutput() DomainJupyterLabAppSettingsPtrOutput {
	return i.ToDomainJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainJupyterLabAppSettingsPtrType) ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterLabAppSettingsPtrOutput)
}

func (i *domainJupyterLabAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainJupyterLabAppSettings] {
	return pulumix.Output[*DomainJupyterLabAppSettings]{
		OutputState: i.ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The JupyterLab app settings.
type DomainJupyterLabAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainJupyterLabAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJupyterLabAppSettings)(nil)).Elem()
}

func (o DomainJupyterLabAppSettingsOutput) ToDomainJupyterLabAppSettingsOutput() DomainJupyterLabAppSettingsOutput {
	return o
}

func (o DomainJupyterLabAppSettingsOutput) ToDomainJupyterLabAppSettingsOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsOutput {
	return o
}

func (o DomainJupyterLabAppSettingsOutput) ToDomainJupyterLabAppSettingsPtrOutput() DomainJupyterLabAppSettingsPtrOutput {
	return o.ToDomainJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainJupyterLabAppSettingsOutput) ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainJupyterLabAppSettings) *DomainJupyterLabAppSettings {
		return &v
	}).(DomainJupyterLabAppSettingsPtrOutput)
}

func (o DomainJupyterLabAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainJupyterLabAppSettings] {
	return pulumix.Output[DomainJupyterLabAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of CodeRepositories available for use with JupyterLab apps.
func (o DomainJupyterLabAppSettingsOutput) CodeRepositories() DomainCodeRepositoryArrayOutput {
	return o.ApplyT(func(v DomainJupyterLabAppSettings) []DomainCodeRepository { return v.CodeRepositories }).(DomainCodeRepositoryArrayOutput)
}

// A list of custom images for use for JupyterLab apps.
func (o DomainJupyterLabAppSettingsOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v DomainJupyterLabAppSettings) []DomainCustomImage { return v.CustomImages }).(DomainCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
func (o DomainJupyterLabAppSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainJupyterLabAppSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with JupyterLab apps.
func (o DomainJupyterLabAppSettingsOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainJupyterLabAppSettings) []string { return v.LifecycleConfigArns }).(pulumi.StringArrayOutput)
}

type DomainJupyterLabAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainJupyterLabAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJupyterLabAppSettings)(nil)).Elem()
}

func (o DomainJupyterLabAppSettingsPtrOutput) ToDomainJupyterLabAppSettingsPtrOutput() DomainJupyterLabAppSettingsPtrOutput {
	return o
}

func (o DomainJupyterLabAppSettingsPtrOutput) ToDomainJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterLabAppSettingsPtrOutput {
	return o
}

func (o DomainJupyterLabAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainJupyterLabAppSettings] {
	return pulumix.Output[*DomainJupyterLabAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainJupyterLabAppSettingsPtrOutput) Elem() DomainJupyterLabAppSettingsOutput {
	return o.ApplyT(func(v *DomainJupyterLabAppSettings) DomainJupyterLabAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainJupyterLabAppSettings
		return ret
	}).(DomainJupyterLabAppSettingsOutput)
}

// A list of CodeRepositories available for use with JupyterLab apps.
func (o DomainJupyterLabAppSettingsPtrOutput) CodeRepositories() DomainCodeRepositoryArrayOutput {
	return o.ApplyT(func(v *DomainJupyterLabAppSettings) []DomainCodeRepository {
		if v == nil {
			return nil
		}
		return v.CodeRepositories
	}).(DomainCodeRepositoryArrayOutput)
}

// A list of custom images for use for JupyterLab apps.
func (o DomainJupyterLabAppSettingsPtrOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v *DomainJupyterLabAppSettings) []DomainCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(DomainCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
func (o DomainJupyterLabAppSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainJupyterLabAppSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with JupyterLab apps.
func (o DomainJupyterLabAppSettingsPtrOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainJupyterLabAppSettings) []string {
		if v == nil {
			return nil
		}
		return v.LifecycleConfigArns
	}).(pulumi.StringArrayOutput)
}

// The JupyterServer app settings.
type DomainJupyterServerAppSettings struct {
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
}

// DomainJupyterServerAppSettingsInput is an input type that accepts DomainJupyterServerAppSettingsArgs and DomainJupyterServerAppSettingsOutput values.
// You can construct a concrete instance of `DomainJupyterServerAppSettingsInput` via:
//
//	DomainJupyterServerAppSettingsArgs{...}
type DomainJupyterServerAppSettingsInput interface {
	pulumi.Input

	ToDomainJupyterServerAppSettingsOutput() DomainJupyterServerAppSettingsOutput
	ToDomainJupyterServerAppSettingsOutputWithContext(context.Context) DomainJupyterServerAppSettingsOutput
}

// The JupyterServer app settings.
type DomainJupyterServerAppSettingsArgs struct {
	DefaultResourceSpec DomainResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (DomainJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJupyterServerAppSettings)(nil)).Elem()
}

func (i DomainJupyterServerAppSettingsArgs) ToDomainJupyterServerAppSettingsOutput() DomainJupyterServerAppSettingsOutput {
	return i.ToDomainJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i DomainJupyterServerAppSettingsArgs) ToDomainJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterServerAppSettingsOutput)
}

func (i DomainJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainJupyterServerAppSettings] {
	return pulumix.Output[DomainJupyterServerAppSettings]{
		OutputState: i.ToDomainJupyterServerAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainJupyterServerAppSettingsArgs) ToDomainJupyterServerAppSettingsPtrOutput() DomainJupyterServerAppSettingsPtrOutput {
	return i.ToDomainJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainJupyterServerAppSettingsArgs) ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterServerAppSettingsOutput).ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx)
}

// DomainJupyterServerAppSettingsPtrInput is an input type that accepts DomainJupyterServerAppSettingsArgs, DomainJupyterServerAppSettingsPtr and DomainJupyterServerAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainJupyterServerAppSettingsPtrInput` via:
//
//	        DomainJupyterServerAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainJupyterServerAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainJupyterServerAppSettingsPtrOutput() DomainJupyterServerAppSettingsPtrOutput
	ToDomainJupyterServerAppSettingsPtrOutputWithContext(context.Context) DomainJupyterServerAppSettingsPtrOutput
}

type domainJupyterServerAppSettingsPtrType DomainJupyterServerAppSettingsArgs

func DomainJupyterServerAppSettingsPtr(v *DomainJupyterServerAppSettingsArgs) DomainJupyterServerAppSettingsPtrInput {
	return (*domainJupyterServerAppSettingsPtrType)(v)
}

func (*domainJupyterServerAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJupyterServerAppSettings)(nil)).Elem()
}

func (i *domainJupyterServerAppSettingsPtrType) ToDomainJupyterServerAppSettingsPtrOutput() DomainJupyterServerAppSettingsPtrOutput {
	return i.ToDomainJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainJupyterServerAppSettingsPtrType) ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJupyterServerAppSettingsPtrOutput)
}

func (i *domainJupyterServerAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainJupyterServerAppSettings] {
	return pulumix.Output[*DomainJupyterServerAppSettings]{
		OutputState: i.ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The JupyterServer app settings.
type DomainJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJupyterServerAppSettings)(nil)).Elem()
}

func (o DomainJupyterServerAppSettingsOutput) ToDomainJupyterServerAppSettingsOutput() DomainJupyterServerAppSettingsOutput {
	return o
}

func (o DomainJupyterServerAppSettingsOutput) ToDomainJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsOutput {
	return o
}

func (o DomainJupyterServerAppSettingsOutput) ToDomainJupyterServerAppSettingsPtrOutput() DomainJupyterServerAppSettingsPtrOutput {
	return o.ToDomainJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainJupyterServerAppSettingsOutput) ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainJupyterServerAppSettings) *DomainJupyterServerAppSettings {
		return &v
	}).(DomainJupyterServerAppSettingsPtrOutput)
}

func (o DomainJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainJupyterServerAppSettings] {
	return pulumix.Output[DomainJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainJupyterServerAppSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainJupyterServerAppSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

type DomainJupyterServerAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainJupyterServerAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJupyterServerAppSettings)(nil)).Elem()
}

func (o DomainJupyterServerAppSettingsPtrOutput) ToDomainJupyterServerAppSettingsPtrOutput() DomainJupyterServerAppSettingsPtrOutput {
	return o
}

func (o DomainJupyterServerAppSettingsPtrOutput) ToDomainJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) DomainJupyterServerAppSettingsPtrOutput {
	return o
}

func (o DomainJupyterServerAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainJupyterServerAppSettings] {
	return pulumix.Output[*DomainJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainJupyterServerAppSettingsPtrOutput) Elem() DomainJupyterServerAppSettingsOutput {
	return o.ApplyT(func(v *DomainJupyterServerAppSettings) DomainJupyterServerAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainJupyterServerAppSettings
		return ret
	}).(DomainJupyterServerAppSettingsOutput)
}

func (o DomainJupyterServerAppSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainJupyterServerAppSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// The kernel gateway app settings.
type DomainKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages []DomainCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
}

// DomainKernelGatewayAppSettingsInput is an input type that accepts DomainKernelGatewayAppSettingsArgs and DomainKernelGatewayAppSettingsOutput values.
// You can construct a concrete instance of `DomainKernelGatewayAppSettingsInput` via:
//
//	DomainKernelGatewayAppSettingsArgs{...}
type DomainKernelGatewayAppSettingsInput interface {
	pulumi.Input

	ToDomainKernelGatewayAppSettingsOutput() DomainKernelGatewayAppSettingsOutput
	ToDomainKernelGatewayAppSettingsOutputWithContext(context.Context) DomainKernelGatewayAppSettingsOutput
}

// The kernel gateway app settings.
type DomainKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages DomainCustomImageArrayInput `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec DomainResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (DomainKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainKernelGatewayAppSettings)(nil)).Elem()
}

func (i DomainKernelGatewayAppSettingsArgs) ToDomainKernelGatewayAppSettingsOutput() DomainKernelGatewayAppSettingsOutput {
	return i.ToDomainKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i DomainKernelGatewayAppSettingsArgs) ToDomainKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainKernelGatewayAppSettingsOutput)
}

func (i DomainKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainKernelGatewayAppSettings] {
	return pulumix.Output[DomainKernelGatewayAppSettings]{
		OutputState: i.ToDomainKernelGatewayAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainKernelGatewayAppSettingsArgs) ToDomainKernelGatewayAppSettingsPtrOutput() DomainKernelGatewayAppSettingsPtrOutput {
	return i.ToDomainKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainKernelGatewayAppSettingsArgs) ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainKernelGatewayAppSettingsOutput).ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx)
}

// DomainKernelGatewayAppSettingsPtrInput is an input type that accepts DomainKernelGatewayAppSettingsArgs, DomainKernelGatewayAppSettingsPtr and DomainKernelGatewayAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainKernelGatewayAppSettingsPtrInput` via:
//
//	        DomainKernelGatewayAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainKernelGatewayAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainKernelGatewayAppSettingsPtrOutput() DomainKernelGatewayAppSettingsPtrOutput
	ToDomainKernelGatewayAppSettingsPtrOutputWithContext(context.Context) DomainKernelGatewayAppSettingsPtrOutput
}

type domainKernelGatewayAppSettingsPtrType DomainKernelGatewayAppSettingsArgs

func DomainKernelGatewayAppSettingsPtr(v *DomainKernelGatewayAppSettingsArgs) DomainKernelGatewayAppSettingsPtrInput {
	return (*domainKernelGatewayAppSettingsPtrType)(v)
}

func (*domainKernelGatewayAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainKernelGatewayAppSettings)(nil)).Elem()
}

func (i *domainKernelGatewayAppSettingsPtrType) ToDomainKernelGatewayAppSettingsPtrOutput() DomainKernelGatewayAppSettingsPtrOutput {
	return i.ToDomainKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainKernelGatewayAppSettingsPtrType) ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainKernelGatewayAppSettingsPtrOutput)
}

func (i *domainKernelGatewayAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainKernelGatewayAppSettings] {
	return pulumix.Output[*DomainKernelGatewayAppSettings]{
		OutputState: i.ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The kernel gateway app settings.
type DomainKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainKernelGatewayAppSettings)(nil)).Elem()
}

func (o DomainKernelGatewayAppSettingsOutput) ToDomainKernelGatewayAppSettingsOutput() DomainKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainKernelGatewayAppSettingsOutput) ToDomainKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainKernelGatewayAppSettingsOutput) ToDomainKernelGatewayAppSettingsPtrOutput() DomainKernelGatewayAppSettingsPtrOutput {
	return o.ToDomainKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainKernelGatewayAppSettingsOutput) ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainKernelGatewayAppSettings) *DomainKernelGatewayAppSettings {
		return &v
	}).(DomainKernelGatewayAppSettingsPtrOutput)
}

func (o DomainKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainKernelGatewayAppSettings] {
	return pulumix.Output[DomainKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o DomainKernelGatewayAppSettingsOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v DomainKernelGatewayAppSettings) []DomainCustomImage { return v.CustomImages }).(DomainCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o DomainKernelGatewayAppSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainKernelGatewayAppSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

type DomainKernelGatewayAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainKernelGatewayAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainKernelGatewayAppSettings)(nil)).Elem()
}

func (o DomainKernelGatewayAppSettingsPtrOutput) ToDomainKernelGatewayAppSettingsPtrOutput() DomainKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o DomainKernelGatewayAppSettingsPtrOutput) ToDomainKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) DomainKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o DomainKernelGatewayAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainKernelGatewayAppSettings] {
	return pulumix.Output[*DomainKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainKernelGatewayAppSettingsPtrOutput) Elem() DomainKernelGatewayAppSettingsOutput {
	return o.ApplyT(func(v *DomainKernelGatewayAppSettings) DomainKernelGatewayAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainKernelGatewayAppSettings
		return ret
	}).(DomainKernelGatewayAppSettingsOutput)
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o DomainKernelGatewayAppSettingsPtrOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v *DomainKernelGatewayAppSettings) []DomainCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(DomainCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o DomainKernelGatewayAppSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainKernelGatewayAppSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// A collection of settings that apply to an RSessionGateway app.
type DomainRSessionAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages        []DomainCustomImage `pulumi:"customImages"`
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
}

// DomainRSessionAppSettingsInput is an input type that accepts DomainRSessionAppSettingsArgs and DomainRSessionAppSettingsOutput values.
// You can construct a concrete instance of `DomainRSessionAppSettingsInput` via:
//
//	DomainRSessionAppSettingsArgs{...}
type DomainRSessionAppSettingsInput interface {
	pulumi.Input

	ToDomainRSessionAppSettingsOutput() DomainRSessionAppSettingsOutput
	ToDomainRSessionAppSettingsOutputWithContext(context.Context) DomainRSessionAppSettingsOutput
}

// A collection of settings that apply to an RSessionGateway app.
type DomainRSessionAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages        DomainCustomImageArrayInput `pulumi:"customImages"`
	DefaultResourceSpec DomainResourceSpecPtrInput  `pulumi:"defaultResourceSpec"`
}

func (DomainRSessionAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRSessionAppSettings)(nil)).Elem()
}

func (i DomainRSessionAppSettingsArgs) ToDomainRSessionAppSettingsOutput() DomainRSessionAppSettingsOutput {
	return i.ToDomainRSessionAppSettingsOutputWithContext(context.Background())
}

func (i DomainRSessionAppSettingsArgs) ToDomainRSessionAppSettingsOutputWithContext(ctx context.Context) DomainRSessionAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRSessionAppSettingsOutput)
}

func (i DomainRSessionAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainRSessionAppSettings] {
	return pulumix.Output[DomainRSessionAppSettings]{
		OutputState: i.ToDomainRSessionAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainRSessionAppSettingsArgs) ToDomainRSessionAppSettingsPtrOutput() DomainRSessionAppSettingsPtrOutput {
	return i.ToDomainRSessionAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainRSessionAppSettingsArgs) ToDomainRSessionAppSettingsPtrOutputWithContext(ctx context.Context) DomainRSessionAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRSessionAppSettingsOutput).ToDomainRSessionAppSettingsPtrOutputWithContext(ctx)
}

// DomainRSessionAppSettingsPtrInput is an input type that accepts DomainRSessionAppSettingsArgs, DomainRSessionAppSettingsPtr and DomainRSessionAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainRSessionAppSettingsPtrInput` via:
//
//	        DomainRSessionAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainRSessionAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainRSessionAppSettingsPtrOutput() DomainRSessionAppSettingsPtrOutput
	ToDomainRSessionAppSettingsPtrOutputWithContext(context.Context) DomainRSessionAppSettingsPtrOutput
}

type domainRSessionAppSettingsPtrType DomainRSessionAppSettingsArgs

func DomainRSessionAppSettingsPtr(v *DomainRSessionAppSettingsArgs) DomainRSessionAppSettingsPtrInput {
	return (*domainRSessionAppSettingsPtrType)(v)
}

func (*domainRSessionAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRSessionAppSettings)(nil)).Elem()
}

func (i *domainRSessionAppSettingsPtrType) ToDomainRSessionAppSettingsPtrOutput() DomainRSessionAppSettingsPtrOutput {
	return i.ToDomainRSessionAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainRSessionAppSettingsPtrType) ToDomainRSessionAppSettingsPtrOutputWithContext(ctx context.Context) DomainRSessionAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRSessionAppSettingsPtrOutput)
}

func (i *domainRSessionAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainRSessionAppSettings] {
	return pulumix.Output[*DomainRSessionAppSettings]{
		OutputState: i.ToDomainRSessionAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that apply to an RSessionGateway app.
type DomainRSessionAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainRSessionAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRSessionAppSettings)(nil)).Elem()
}

func (o DomainRSessionAppSettingsOutput) ToDomainRSessionAppSettingsOutput() DomainRSessionAppSettingsOutput {
	return o
}

func (o DomainRSessionAppSettingsOutput) ToDomainRSessionAppSettingsOutputWithContext(ctx context.Context) DomainRSessionAppSettingsOutput {
	return o
}

func (o DomainRSessionAppSettingsOutput) ToDomainRSessionAppSettingsPtrOutput() DomainRSessionAppSettingsPtrOutput {
	return o.ToDomainRSessionAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainRSessionAppSettingsOutput) ToDomainRSessionAppSettingsPtrOutputWithContext(ctx context.Context) DomainRSessionAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRSessionAppSettings) *DomainRSessionAppSettings {
		return &v
	}).(DomainRSessionAppSettingsPtrOutput)
}

func (o DomainRSessionAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRSessionAppSettings] {
	return pulumix.Output[DomainRSessionAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o DomainRSessionAppSettingsOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v DomainRSessionAppSettings) []DomainCustomImage { return v.CustomImages }).(DomainCustomImageArrayOutput)
}

func (o DomainRSessionAppSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainRSessionAppSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

type DomainRSessionAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainRSessionAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRSessionAppSettings)(nil)).Elem()
}

func (o DomainRSessionAppSettingsPtrOutput) ToDomainRSessionAppSettingsPtrOutput() DomainRSessionAppSettingsPtrOutput {
	return o
}

func (o DomainRSessionAppSettingsPtrOutput) ToDomainRSessionAppSettingsPtrOutputWithContext(ctx context.Context) DomainRSessionAppSettingsPtrOutput {
	return o
}

func (o DomainRSessionAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainRSessionAppSettings] {
	return pulumix.Output[*DomainRSessionAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainRSessionAppSettingsPtrOutput) Elem() DomainRSessionAppSettingsOutput {
	return o.ApplyT(func(v *DomainRSessionAppSettings) DomainRSessionAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainRSessionAppSettings
		return ret
	}).(DomainRSessionAppSettingsOutput)
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o DomainRSessionAppSettingsPtrOutput) CustomImages() DomainCustomImageArrayOutput {
	return o.ApplyT(func(v *DomainRSessionAppSettings) []DomainCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(DomainCustomImageArrayOutput)
}

func (o DomainRSessionAppSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainRSessionAppSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type DomainRStudioServerProAppSettings struct {
	// Indicates whether the current user has access to the RStudioServerPro app.
	AccessStatus *DomainRStudioServerProAppSettingsAccessStatus `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
	UserGroup *DomainRStudioServerProAppSettingsUserGroup `pulumi:"userGroup"`
}

// DomainRStudioServerProAppSettingsInput is an input type that accepts DomainRStudioServerProAppSettingsArgs and DomainRStudioServerProAppSettingsOutput values.
// You can construct a concrete instance of `DomainRStudioServerProAppSettingsInput` via:
//
//	DomainRStudioServerProAppSettingsArgs{...}
type DomainRStudioServerProAppSettingsInput interface {
	pulumi.Input

	ToDomainRStudioServerProAppSettingsOutput() DomainRStudioServerProAppSettingsOutput
	ToDomainRStudioServerProAppSettingsOutputWithContext(context.Context) DomainRStudioServerProAppSettingsOutput
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type DomainRStudioServerProAppSettingsArgs struct {
	// Indicates whether the current user has access to the RStudioServerPro app.
	AccessStatus DomainRStudioServerProAppSettingsAccessStatusPtrInput `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
	UserGroup DomainRStudioServerProAppSettingsUserGroupPtrInput `pulumi:"userGroup"`
}

func (DomainRStudioServerProAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRStudioServerProAppSettings)(nil)).Elem()
}

func (i DomainRStudioServerProAppSettingsArgs) ToDomainRStudioServerProAppSettingsOutput() DomainRStudioServerProAppSettingsOutput {
	return i.ToDomainRStudioServerProAppSettingsOutputWithContext(context.Background())
}

func (i DomainRStudioServerProAppSettingsArgs) ToDomainRStudioServerProAppSettingsOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProAppSettingsOutput)
}

func (i DomainRStudioServerProAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainRStudioServerProAppSettings] {
	return pulumix.Output[DomainRStudioServerProAppSettings]{
		OutputState: i.ToDomainRStudioServerProAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainRStudioServerProAppSettingsArgs) ToDomainRStudioServerProAppSettingsPtrOutput() DomainRStudioServerProAppSettingsPtrOutput {
	return i.ToDomainRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (i DomainRStudioServerProAppSettingsArgs) ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProAppSettingsOutput).ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx)
}

// DomainRStudioServerProAppSettingsPtrInput is an input type that accepts DomainRStudioServerProAppSettingsArgs, DomainRStudioServerProAppSettingsPtr and DomainRStudioServerProAppSettingsPtrOutput values.
// You can construct a concrete instance of `DomainRStudioServerProAppSettingsPtrInput` via:
//
//	        DomainRStudioServerProAppSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainRStudioServerProAppSettingsPtrInput interface {
	pulumi.Input

	ToDomainRStudioServerProAppSettingsPtrOutput() DomainRStudioServerProAppSettingsPtrOutput
	ToDomainRStudioServerProAppSettingsPtrOutputWithContext(context.Context) DomainRStudioServerProAppSettingsPtrOutput
}

type domainRStudioServerProAppSettingsPtrType DomainRStudioServerProAppSettingsArgs

func DomainRStudioServerProAppSettingsPtr(v *DomainRStudioServerProAppSettingsArgs) DomainRStudioServerProAppSettingsPtrInput {
	return (*domainRStudioServerProAppSettingsPtrType)(v)
}

func (*domainRStudioServerProAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRStudioServerProAppSettings)(nil)).Elem()
}

func (i *domainRStudioServerProAppSettingsPtrType) ToDomainRStudioServerProAppSettingsPtrOutput() DomainRStudioServerProAppSettingsPtrOutput {
	return i.ToDomainRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (i *domainRStudioServerProAppSettingsPtrType) ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProAppSettingsPtrOutput)
}

func (i *domainRStudioServerProAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainRStudioServerProAppSettings] {
	return pulumix.Output[*DomainRStudioServerProAppSettings]{
		OutputState: i.ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type DomainRStudioServerProAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainRStudioServerProAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRStudioServerProAppSettings)(nil)).Elem()
}

func (o DomainRStudioServerProAppSettingsOutput) ToDomainRStudioServerProAppSettingsOutput() DomainRStudioServerProAppSettingsOutput {
	return o
}

func (o DomainRStudioServerProAppSettingsOutput) ToDomainRStudioServerProAppSettingsOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsOutput {
	return o
}

func (o DomainRStudioServerProAppSettingsOutput) ToDomainRStudioServerProAppSettingsPtrOutput() DomainRStudioServerProAppSettingsPtrOutput {
	return o.ToDomainRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (o DomainRStudioServerProAppSettingsOutput) ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRStudioServerProAppSettings) *DomainRStudioServerProAppSettings {
		return &v
	}).(DomainRStudioServerProAppSettingsPtrOutput)
}

func (o DomainRStudioServerProAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRStudioServerProAppSettings] {
	return pulumix.Output[DomainRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the current user has access to the RStudioServerPro app.
func (o DomainRStudioServerProAppSettingsOutput) AccessStatus() DomainRStudioServerProAppSettingsAccessStatusPtrOutput {
	return o.ApplyT(func(v DomainRStudioServerProAppSettings) *DomainRStudioServerProAppSettingsAccessStatus {
		return v.AccessStatus
	}).(DomainRStudioServerProAppSettingsAccessStatusPtrOutput)
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
func (o DomainRStudioServerProAppSettingsOutput) UserGroup() DomainRStudioServerProAppSettingsUserGroupPtrOutput {
	return o.ApplyT(func(v DomainRStudioServerProAppSettings) *DomainRStudioServerProAppSettingsUserGroup {
		return v.UserGroup
	}).(DomainRStudioServerProAppSettingsUserGroupPtrOutput)
}

type DomainRStudioServerProAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainRStudioServerProAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRStudioServerProAppSettings)(nil)).Elem()
}

func (o DomainRStudioServerProAppSettingsPtrOutput) ToDomainRStudioServerProAppSettingsPtrOutput() DomainRStudioServerProAppSettingsPtrOutput {
	return o
}

func (o DomainRStudioServerProAppSettingsPtrOutput) ToDomainRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProAppSettingsPtrOutput {
	return o
}

func (o DomainRStudioServerProAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainRStudioServerProAppSettings] {
	return pulumix.Output[*DomainRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainRStudioServerProAppSettingsPtrOutput) Elem() DomainRStudioServerProAppSettingsOutput {
	return o.ApplyT(func(v *DomainRStudioServerProAppSettings) DomainRStudioServerProAppSettings {
		if v != nil {
			return *v
		}
		var ret DomainRStudioServerProAppSettings
		return ret
	}).(DomainRStudioServerProAppSettingsOutput)
}

// Indicates whether the current user has access to the RStudioServerPro app.
func (o DomainRStudioServerProAppSettingsPtrOutput) AccessStatus() DomainRStudioServerProAppSettingsAccessStatusPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProAppSettings) *DomainRStudioServerProAppSettingsAccessStatus {
		if v == nil {
			return nil
		}
		return v.AccessStatus
	}).(DomainRStudioServerProAppSettingsAccessStatusPtrOutput)
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
func (o DomainRStudioServerProAppSettingsPtrOutput) UserGroup() DomainRStudioServerProAppSettingsUserGroupPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProAppSettings) *DomainRStudioServerProAppSettingsUserGroup {
		if v == nil {
			return nil
		}
		return v.UserGroup
	}).(DomainRStudioServerProAppSettingsUserGroupPtrOutput)
}

// A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
type DomainRStudioServerProDomainSettings struct {
	DefaultResourceSpec *DomainResourceSpec `pulumi:"defaultResourceSpec"`
	// The ARN of the execution role for the RStudioServerPro Domain-level app.
	DomainExecutionRoleArn string `pulumi:"domainExecutionRoleArn"`
	// A URL pointing to an RStudio Connect server.
	RStudioConnectUrl *string `pulumi:"rStudioConnectUrl"`
	// A URL pointing to an RStudio Package Manager server.
	RStudioPackageManagerUrl *string `pulumi:"rStudioPackageManagerUrl"`
}

// DomainRStudioServerProDomainSettingsInput is an input type that accepts DomainRStudioServerProDomainSettingsArgs and DomainRStudioServerProDomainSettingsOutput values.
// You can construct a concrete instance of `DomainRStudioServerProDomainSettingsInput` via:
//
//	DomainRStudioServerProDomainSettingsArgs{...}
type DomainRStudioServerProDomainSettingsInput interface {
	pulumi.Input

	ToDomainRStudioServerProDomainSettingsOutput() DomainRStudioServerProDomainSettingsOutput
	ToDomainRStudioServerProDomainSettingsOutputWithContext(context.Context) DomainRStudioServerProDomainSettingsOutput
}

// A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
type DomainRStudioServerProDomainSettingsArgs struct {
	DefaultResourceSpec DomainResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
	// The ARN of the execution role for the RStudioServerPro Domain-level app.
	DomainExecutionRoleArn pulumi.StringInput `pulumi:"domainExecutionRoleArn"`
	// A URL pointing to an RStudio Connect server.
	RStudioConnectUrl pulumi.StringPtrInput `pulumi:"rStudioConnectUrl"`
	// A URL pointing to an RStudio Package Manager server.
	RStudioPackageManagerUrl pulumi.StringPtrInput `pulumi:"rStudioPackageManagerUrl"`
}

func (DomainRStudioServerProDomainSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRStudioServerProDomainSettings)(nil)).Elem()
}

func (i DomainRStudioServerProDomainSettingsArgs) ToDomainRStudioServerProDomainSettingsOutput() DomainRStudioServerProDomainSettingsOutput {
	return i.ToDomainRStudioServerProDomainSettingsOutputWithContext(context.Background())
}

func (i DomainRStudioServerProDomainSettingsArgs) ToDomainRStudioServerProDomainSettingsOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProDomainSettingsOutput)
}

func (i DomainRStudioServerProDomainSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainRStudioServerProDomainSettings] {
	return pulumix.Output[DomainRStudioServerProDomainSettings]{
		OutputState: i.ToDomainRStudioServerProDomainSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainRStudioServerProDomainSettingsArgs) ToDomainRStudioServerProDomainSettingsPtrOutput() DomainRStudioServerProDomainSettingsPtrOutput {
	return i.ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(context.Background())
}

func (i DomainRStudioServerProDomainSettingsArgs) ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProDomainSettingsOutput).ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx)
}

// DomainRStudioServerProDomainSettingsPtrInput is an input type that accepts DomainRStudioServerProDomainSettingsArgs, DomainRStudioServerProDomainSettingsPtr and DomainRStudioServerProDomainSettingsPtrOutput values.
// You can construct a concrete instance of `DomainRStudioServerProDomainSettingsPtrInput` via:
//
//	        DomainRStudioServerProDomainSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainRStudioServerProDomainSettingsPtrInput interface {
	pulumi.Input

	ToDomainRStudioServerProDomainSettingsPtrOutput() DomainRStudioServerProDomainSettingsPtrOutput
	ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(context.Context) DomainRStudioServerProDomainSettingsPtrOutput
}

type domainRStudioServerProDomainSettingsPtrType DomainRStudioServerProDomainSettingsArgs

func DomainRStudioServerProDomainSettingsPtr(v *DomainRStudioServerProDomainSettingsArgs) DomainRStudioServerProDomainSettingsPtrInput {
	return (*domainRStudioServerProDomainSettingsPtrType)(v)
}

func (*domainRStudioServerProDomainSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRStudioServerProDomainSettings)(nil)).Elem()
}

func (i *domainRStudioServerProDomainSettingsPtrType) ToDomainRStudioServerProDomainSettingsPtrOutput() DomainRStudioServerProDomainSettingsPtrOutput {
	return i.ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(context.Background())
}

func (i *domainRStudioServerProDomainSettingsPtrType) ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRStudioServerProDomainSettingsPtrOutput)
}

func (i *domainRStudioServerProDomainSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainRStudioServerProDomainSettings] {
	return pulumix.Output[*DomainRStudioServerProDomainSettings]{
		OutputState: i.ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
type DomainRStudioServerProDomainSettingsOutput struct{ *pulumi.OutputState }

func (DomainRStudioServerProDomainSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRStudioServerProDomainSettings)(nil)).Elem()
}

func (o DomainRStudioServerProDomainSettingsOutput) ToDomainRStudioServerProDomainSettingsOutput() DomainRStudioServerProDomainSettingsOutput {
	return o
}

func (o DomainRStudioServerProDomainSettingsOutput) ToDomainRStudioServerProDomainSettingsOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsOutput {
	return o
}

func (o DomainRStudioServerProDomainSettingsOutput) ToDomainRStudioServerProDomainSettingsPtrOutput() DomainRStudioServerProDomainSettingsPtrOutput {
	return o.ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(context.Background())
}

func (o DomainRStudioServerProDomainSettingsOutput) ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRStudioServerProDomainSettings) *DomainRStudioServerProDomainSettings {
		return &v
	}).(DomainRStudioServerProDomainSettingsPtrOutput)
}

func (o DomainRStudioServerProDomainSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRStudioServerProDomainSettings] {
	return pulumix.Output[DomainRStudioServerProDomainSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainRStudioServerProDomainSettingsOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v DomainRStudioServerProDomainSettings) *DomainResourceSpec { return v.DefaultResourceSpec }).(DomainResourceSpecPtrOutput)
}

// The ARN of the execution role for the RStudioServerPro Domain-level app.
func (o DomainRStudioServerProDomainSettingsOutput) DomainExecutionRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRStudioServerProDomainSettings) string { return v.DomainExecutionRoleArn }).(pulumi.StringOutput)
}

// A URL pointing to an RStudio Connect server.
func (o DomainRStudioServerProDomainSettingsOutput) RStudioConnectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRStudioServerProDomainSettings) *string { return v.RStudioConnectUrl }).(pulumi.StringPtrOutput)
}

// A URL pointing to an RStudio Package Manager server.
func (o DomainRStudioServerProDomainSettingsOutput) RStudioPackageManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRStudioServerProDomainSettings) *string { return v.RStudioPackageManagerUrl }).(pulumi.StringPtrOutput)
}

type DomainRStudioServerProDomainSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainRStudioServerProDomainSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRStudioServerProDomainSettings)(nil)).Elem()
}

func (o DomainRStudioServerProDomainSettingsPtrOutput) ToDomainRStudioServerProDomainSettingsPtrOutput() DomainRStudioServerProDomainSettingsPtrOutput {
	return o
}

func (o DomainRStudioServerProDomainSettingsPtrOutput) ToDomainRStudioServerProDomainSettingsPtrOutputWithContext(ctx context.Context) DomainRStudioServerProDomainSettingsPtrOutput {
	return o
}

func (o DomainRStudioServerProDomainSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainRStudioServerProDomainSettings] {
	return pulumix.Output[*DomainRStudioServerProDomainSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainRStudioServerProDomainSettingsPtrOutput) Elem() DomainRStudioServerProDomainSettingsOutput {
	return o.ApplyT(func(v *DomainRStudioServerProDomainSettings) DomainRStudioServerProDomainSettings {
		if v != nil {
			return *v
		}
		var ret DomainRStudioServerProDomainSettings
		return ret
	}).(DomainRStudioServerProDomainSettingsOutput)
}

func (o DomainRStudioServerProDomainSettingsPtrOutput) DefaultResourceSpec() DomainResourceSpecPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProDomainSettings) *DomainResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(DomainResourceSpecPtrOutput)
}

// The ARN of the execution role for the RStudioServerPro Domain-level app.
func (o DomainRStudioServerProDomainSettingsPtrOutput) DomainExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProDomainSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DomainExecutionRoleArn
	}).(pulumi.StringPtrOutput)
}

// A URL pointing to an RStudio Connect server.
func (o DomainRStudioServerProDomainSettingsPtrOutput) RStudioConnectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProDomainSettings) *string {
		if v == nil {
			return nil
		}
		return v.RStudioConnectUrl
	}).(pulumi.StringPtrOutput)
}

// A URL pointing to an RStudio Package Manager server.
func (o DomainRStudioServerProDomainSettingsPtrOutput) RStudioPackageManagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRStudioServerProDomainSettings) *string {
		if v == nil {
			return nil
		}
		return v.RStudioPackageManagerUrl
	}).(pulumi.StringPtrOutput)
}

type DomainResourceSpec struct {
	// The instance type that the image version runs on.
	InstanceType *DomainResourceSpecInstanceType `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The Amazon Resource Name (ARN) of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// DomainResourceSpecInput is an input type that accepts DomainResourceSpecArgs and DomainResourceSpecOutput values.
// You can construct a concrete instance of `DomainResourceSpecInput` via:
//
//	DomainResourceSpecArgs{...}
type DomainResourceSpecInput interface {
	pulumi.Input

	ToDomainResourceSpecOutput() DomainResourceSpecOutput
	ToDomainResourceSpecOutputWithContext(context.Context) DomainResourceSpecOutput
}

type DomainResourceSpecArgs struct {
	// The instance type that the image version runs on.
	InstanceType DomainResourceSpecInstanceTypePtrInput `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
	LifecycleConfigArn pulumi.StringPtrInput `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.
	SageMakerImageArn pulumi.StringPtrInput `pulumi:"sageMakerImageArn"`
	// The Amazon Resource Name (ARN) of the image version created on the instance.
	SageMakerImageVersionArn pulumi.StringPtrInput `pulumi:"sageMakerImageVersionArn"`
}

func (DomainResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResourceSpec)(nil)).Elem()
}

func (i DomainResourceSpecArgs) ToDomainResourceSpecOutput() DomainResourceSpecOutput {
	return i.ToDomainResourceSpecOutputWithContext(context.Background())
}

func (i DomainResourceSpecArgs) ToDomainResourceSpecOutputWithContext(ctx context.Context) DomainResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceSpecOutput)
}

func (i DomainResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[DomainResourceSpec] {
	return pulumix.Output[DomainResourceSpec]{
		OutputState: i.ToDomainResourceSpecOutputWithContext(ctx).OutputState,
	}
}

func (i DomainResourceSpecArgs) ToDomainResourceSpecPtrOutput() DomainResourceSpecPtrOutput {
	return i.ToDomainResourceSpecPtrOutputWithContext(context.Background())
}

func (i DomainResourceSpecArgs) ToDomainResourceSpecPtrOutputWithContext(ctx context.Context) DomainResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceSpecOutput).ToDomainResourceSpecPtrOutputWithContext(ctx)
}

// DomainResourceSpecPtrInput is an input type that accepts DomainResourceSpecArgs, DomainResourceSpecPtr and DomainResourceSpecPtrOutput values.
// You can construct a concrete instance of `DomainResourceSpecPtrInput` via:
//
//	        DomainResourceSpecArgs{...}
//
//	or:
//
//	        nil
type DomainResourceSpecPtrInput interface {
	pulumi.Input

	ToDomainResourceSpecPtrOutput() DomainResourceSpecPtrOutput
	ToDomainResourceSpecPtrOutputWithContext(context.Context) DomainResourceSpecPtrOutput
}

type domainResourceSpecPtrType DomainResourceSpecArgs

func DomainResourceSpecPtr(v *DomainResourceSpecArgs) DomainResourceSpecPtrInput {
	return (*domainResourceSpecPtrType)(v)
}

func (*domainResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResourceSpec)(nil)).Elem()
}

func (i *domainResourceSpecPtrType) ToDomainResourceSpecPtrOutput() DomainResourceSpecPtrOutput {
	return i.ToDomainResourceSpecPtrOutputWithContext(context.Background())
}

func (i *domainResourceSpecPtrType) ToDomainResourceSpecPtrOutputWithContext(ctx context.Context) DomainResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainResourceSpecPtrOutput)
}

func (i *domainResourceSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainResourceSpec] {
	return pulumix.Output[*DomainResourceSpec]{
		OutputState: i.ToDomainResourceSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainResourceSpec)(nil)).Elem()
}

func (o DomainResourceSpecOutput) ToDomainResourceSpecOutput() DomainResourceSpecOutput {
	return o
}

func (o DomainResourceSpecOutput) ToDomainResourceSpecOutputWithContext(ctx context.Context) DomainResourceSpecOutput {
	return o
}

func (o DomainResourceSpecOutput) ToDomainResourceSpecPtrOutput() DomainResourceSpecPtrOutput {
	return o.ToDomainResourceSpecPtrOutputWithContext(context.Background())
}

func (o DomainResourceSpecOutput) ToDomainResourceSpecPtrOutputWithContext(ctx context.Context) DomainResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainResourceSpec) *DomainResourceSpec {
		return &v
	}).(DomainResourceSpecPtrOutput)
}

func (o DomainResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainResourceSpec] {
	return pulumix.Output[DomainResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.
func (o DomainResourceSpecOutput) InstanceType() DomainResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v DomainResourceSpec) *DomainResourceSpecInstanceType { return v.InstanceType }).(DomainResourceSpecInstanceTypePtrOutput)
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
func (o DomainResourceSpecOutput) LifecycleConfigArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainResourceSpec) *string { return v.LifecycleConfigArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.
func (o DomainResourceSpecOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainResourceSpec) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the image version created on the instance.
func (o DomainResourceSpecOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainResourceSpec) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type DomainResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (DomainResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainResourceSpec)(nil)).Elem()
}

func (o DomainResourceSpecPtrOutput) ToDomainResourceSpecPtrOutput() DomainResourceSpecPtrOutput {
	return o
}

func (o DomainResourceSpecPtrOutput) ToDomainResourceSpecPtrOutputWithContext(ctx context.Context) DomainResourceSpecPtrOutput {
	return o
}

func (o DomainResourceSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainResourceSpec] {
	return pulumix.Output[*DomainResourceSpec]{
		OutputState: o.OutputState,
	}
}

func (o DomainResourceSpecPtrOutput) Elem() DomainResourceSpecOutput {
	return o.ApplyT(func(v *DomainResourceSpec) DomainResourceSpec {
		if v != nil {
			return *v
		}
		var ret DomainResourceSpec
		return ret
	}).(DomainResourceSpecOutput)
}

// The instance type that the image version runs on.
func (o DomainResourceSpecPtrOutput) InstanceType() DomainResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v *DomainResourceSpec) *DomainResourceSpecInstanceType {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(DomainResourceSpecInstanceTypePtrOutput)
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
func (o DomainResourceSpecPtrOutput) LifecycleConfigArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LifecycleConfigArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.
func (o DomainResourceSpecPtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the image version created on the instance.
func (o DomainResourceSpecPtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

// A collection of Domain settings.
type DomainSettings struct {
	RStudioServerProDomainSettings *DomainRStudioServerProDomainSettings `pulumi:"rStudioServerProDomainSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

// DomainSettingsInput is an input type that accepts DomainSettingsArgs and DomainSettingsOutput values.
// You can construct a concrete instance of `DomainSettingsInput` via:
//
//	DomainSettingsArgs{...}
type DomainSettingsInput interface {
	pulumi.Input

	ToDomainSettingsOutput() DomainSettingsOutput
	ToDomainSettingsOutputWithContext(context.Context) DomainSettingsOutput
}

// A collection of Domain settings.
type DomainSettingsArgs struct {
	RStudioServerProDomainSettings DomainRStudioServerProDomainSettingsPtrInput `pulumi:"rStudioServerProDomainSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
}

func (DomainSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSettings)(nil)).Elem()
}

func (i DomainSettingsArgs) ToDomainSettingsOutput() DomainSettingsOutput {
	return i.ToDomainSettingsOutputWithContext(context.Background())
}

func (i DomainSettingsArgs) ToDomainSettingsOutputWithContext(ctx context.Context) DomainSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSettingsOutput)
}

func (i DomainSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSettings] {
	return pulumix.Output[DomainSettings]{
		OutputState: i.ToDomainSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSettingsArgs) ToDomainSettingsPtrOutput() DomainSettingsPtrOutput {
	return i.ToDomainSettingsPtrOutputWithContext(context.Background())
}

func (i DomainSettingsArgs) ToDomainSettingsPtrOutputWithContext(ctx context.Context) DomainSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSettingsOutput).ToDomainSettingsPtrOutputWithContext(ctx)
}

// DomainSettingsPtrInput is an input type that accepts DomainSettingsArgs, DomainSettingsPtr and DomainSettingsPtrOutput values.
// You can construct a concrete instance of `DomainSettingsPtrInput` via:
//
//	        DomainSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainSettingsPtrInput interface {
	pulumi.Input

	ToDomainSettingsPtrOutput() DomainSettingsPtrOutput
	ToDomainSettingsPtrOutputWithContext(context.Context) DomainSettingsPtrOutput
}

type domainSettingsPtrType DomainSettingsArgs

func DomainSettingsPtr(v *DomainSettingsArgs) DomainSettingsPtrInput {
	return (*domainSettingsPtrType)(v)
}

func (*domainSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSettings)(nil)).Elem()
}

func (i *domainSettingsPtrType) ToDomainSettingsPtrOutput() DomainSettingsPtrOutput {
	return i.ToDomainSettingsPtrOutputWithContext(context.Background())
}

func (i *domainSettingsPtrType) ToDomainSettingsPtrOutputWithContext(ctx context.Context) DomainSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSettingsPtrOutput)
}

func (i *domainSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSettings] {
	return pulumix.Output[*DomainSettings]{
		OutputState: i.ToDomainSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of Domain settings.
type DomainSettingsOutput struct{ *pulumi.OutputState }

func (DomainSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSettings)(nil)).Elem()
}

func (o DomainSettingsOutput) ToDomainSettingsOutput() DomainSettingsOutput {
	return o
}

func (o DomainSettingsOutput) ToDomainSettingsOutputWithContext(ctx context.Context) DomainSettingsOutput {
	return o
}

func (o DomainSettingsOutput) ToDomainSettingsPtrOutput() DomainSettingsPtrOutput {
	return o.ToDomainSettingsPtrOutputWithContext(context.Background())
}

func (o DomainSettingsOutput) ToDomainSettingsPtrOutputWithContext(ctx context.Context) DomainSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSettings) *DomainSettings {
		return &v
	}).(DomainSettingsPtrOutput)
}

func (o DomainSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSettings] {
	return pulumix.Output[DomainSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainSettingsOutput) RStudioServerProDomainSettings() DomainRStudioServerProDomainSettingsPtrOutput {
	return o.ApplyT(func(v DomainSettings) *DomainRStudioServerProDomainSettings { return v.RStudioServerProDomainSettings }).(DomainRStudioServerProDomainSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
func (o DomainSettingsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainSettings) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

type DomainSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSettings)(nil)).Elem()
}

func (o DomainSettingsPtrOutput) ToDomainSettingsPtrOutput() DomainSettingsPtrOutput {
	return o
}

func (o DomainSettingsPtrOutput) ToDomainSettingsPtrOutputWithContext(ctx context.Context) DomainSettingsPtrOutput {
	return o
}

func (o DomainSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSettings] {
	return pulumix.Output[*DomainSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainSettingsPtrOutput) Elem() DomainSettingsOutput {
	return o.ApplyT(func(v *DomainSettings) DomainSettings {
		if v != nil {
			return *v
		}
		var ret DomainSettings
		return ret
	}).(DomainSettingsOutput)
}

func (o DomainSettingsPtrOutput) RStudioServerProDomainSettings() DomainRStudioServerProDomainSettingsPtrOutput {
	return o.ApplyT(func(v *DomainSettings) *DomainRStudioServerProDomainSettings {
		if v == nil {
			return nil
		}
		return v.RStudioServerProDomainSettings
	}).(DomainRStudioServerProDomainSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
func (o DomainSettingsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainSettings) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type DomainSharingSettings struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
	NotebookOutputOption *DomainSharingSettingsNotebookOutputOption `pulumi:"notebookOutputOption"`
	// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
	// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
	S3OutputPath *string `pulumi:"s3OutputPath"`
}

// DomainSharingSettingsInput is an input type that accepts DomainSharingSettingsArgs and DomainSharingSettingsOutput values.
// You can construct a concrete instance of `DomainSharingSettingsInput` via:
//
//	DomainSharingSettingsArgs{...}
type DomainSharingSettingsInput interface {
	pulumi.Input

	ToDomainSharingSettingsOutput() DomainSharingSettingsOutput
	ToDomainSharingSettingsOutputWithContext(context.Context) DomainSharingSettingsOutput
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type DomainSharingSettingsArgs struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
	NotebookOutputOption DomainSharingSettingsNotebookOutputOptionPtrInput `pulumi:"notebookOutputOption"`
	// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId pulumi.StringPtrInput `pulumi:"s3KmsKeyId"`
	// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
	S3OutputPath pulumi.StringPtrInput `pulumi:"s3OutputPath"`
}

func (DomainSharingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSharingSettings)(nil)).Elem()
}

func (i DomainSharingSettingsArgs) ToDomainSharingSettingsOutput() DomainSharingSettingsOutput {
	return i.ToDomainSharingSettingsOutputWithContext(context.Background())
}

func (i DomainSharingSettingsArgs) ToDomainSharingSettingsOutputWithContext(ctx context.Context) DomainSharingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSharingSettingsOutput)
}

func (i DomainSharingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSharingSettings] {
	return pulumix.Output[DomainSharingSettings]{
		OutputState: i.ToDomainSharingSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSharingSettingsArgs) ToDomainSharingSettingsPtrOutput() DomainSharingSettingsPtrOutput {
	return i.ToDomainSharingSettingsPtrOutputWithContext(context.Background())
}

func (i DomainSharingSettingsArgs) ToDomainSharingSettingsPtrOutputWithContext(ctx context.Context) DomainSharingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSharingSettingsOutput).ToDomainSharingSettingsPtrOutputWithContext(ctx)
}

// DomainSharingSettingsPtrInput is an input type that accepts DomainSharingSettingsArgs, DomainSharingSettingsPtr and DomainSharingSettingsPtrOutput values.
// You can construct a concrete instance of `DomainSharingSettingsPtrInput` via:
//
//	        DomainSharingSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainSharingSettingsPtrInput interface {
	pulumi.Input

	ToDomainSharingSettingsPtrOutput() DomainSharingSettingsPtrOutput
	ToDomainSharingSettingsPtrOutputWithContext(context.Context) DomainSharingSettingsPtrOutput
}

type domainSharingSettingsPtrType DomainSharingSettingsArgs

func DomainSharingSettingsPtr(v *DomainSharingSettingsArgs) DomainSharingSettingsPtrInput {
	return (*domainSharingSettingsPtrType)(v)
}

func (*domainSharingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSharingSettings)(nil)).Elem()
}

func (i *domainSharingSettingsPtrType) ToDomainSharingSettingsPtrOutput() DomainSharingSettingsPtrOutput {
	return i.ToDomainSharingSettingsPtrOutputWithContext(context.Background())
}

func (i *domainSharingSettingsPtrType) ToDomainSharingSettingsPtrOutputWithContext(ctx context.Context) DomainSharingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSharingSettingsPtrOutput)
}

func (i *domainSharingSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSharingSettings] {
	return pulumix.Output[*DomainSharingSettings]{
		OutputState: i.ToDomainSharingSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type DomainSharingSettingsOutput struct{ *pulumi.OutputState }

func (DomainSharingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSharingSettings)(nil)).Elem()
}

func (o DomainSharingSettingsOutput) ToDomainSharingSettingsOutput() DomainSharingSettingsOutput {
	return o
}

func (o DomainSharingSettingsOutput) ToDomainSharingSettingsOutputWithContext(ctx context.Context) DomainSharingSettingsOutput {
	return o
}

func (o DomainSharingSettingsOutput) ToDomainSharingSettingsPtrOutput() DomainSharingSettingsPtrOutput {
	return o.ToDomainSharingSettingsPtrOutputWithContext(context.Background())
}

func (o DomainSharingSettingsOutput) ToDomainSharingSettingsPtrOutputWithContext(ctx context.Context) DomainSharingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSharingSettings) *DomainSharingSettings {
		return &v
	}).(DomainSharingSettingsPtrOutput)
}

func (o DomainSharingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSharingSettings] {
	return pulumix.Output[DomainSharingSettings]{
		OutputState: o.OutputState,
	}
}

// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
func (o DomainSharingSettingsOutput) NotebookOutputOption() DomainSharingSettingsNotebookOutputOptionPtrOutput {
	return o.ApplyT(func(v DomainSharingSettings) *DomainSharingSettingsNotebookOutputOption {
		return v.NotebookOutputOption
	}).(DomainSharingSettingsNotebookOutputOptionPtrOutput)
}

// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o DomainSharingSettingsOutput) S3KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSharingSettings) *string { return v.S3KmsKeyId }).(pulumi.StringPtrOutput)
}

// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
func (o DomainSharingSettingsOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSharingSettings) *string { return v.S3OutputPath }).(pulumi.StringPtrOutput)
}

type DomainSharingSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainSharingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSharingSettings)(nil)).Elem()
}

func (o DomainSharingSettingsPtrOutput) ToDomainSharingSettingsPtrOutput() DomainSharingSettingsPtrOutput {
	return o
}

func (o DomainSharingSettingsPtrOutput) ToDomainSharingSettingsPtrOutputWithContext(ctx context.Context) DomainSharingSettingsPtrOutput {
	return o
}

func (o DomainSharingSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSharingSettings] {
	return pulumix.Output[*DomainSharingSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainSharingSettingsPtrOutput) Elem() DomainSharingSettingsOutput {
	return o.ApplyT(func(v *DomainSharingSettings) DomainSharingSettings {
		if v != nil {
			return *v
		}
		var ret DomainSharingSettings
		return ret
	}).(DomainSharingSettingsOutput)
}

// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
func (o DomainSharingSettingsPtrOutput) NotebookOutputOption() DomainSharingSettingsNotebookOutputOptionPtrOutput {
	return o.ApplyT(func(v *DomainSharingSettings) *DomainSharingSettingsNotebookOutputOption {
		if v == nil {
			return nil
		}
		return v.NotebookOutputOption
	}).(DomainSharingSettingsNotebookOutputOptionPtrOutput)
}

// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o DomainSharingSettingsPtrOutput) S3KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSharingSettings) *string {
		if v == nil {
			return nil
		}
		return v.S3KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
func (o DomainSharingSettingsPtrOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSharingSettings) *string {
		if v == nil {
			return nil
		}
		return v.S3OutputPath
	}).(pulumi.StringPtrOutput)
}

type DomainTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DomainTagInput is an input type that accepts DomainTagArgs and DomainTagOutput values.
// You can construct a concrete instance of `DomainTagInput` via:
//
//	DomainTagArgs{...}
type DomainTagInput interface {
	pulumi.Input

	ToDomainTagOutput() DomainTagOutput
	ToDomainTagOutputWithContext(context.Context) DomainTagOutput
}

type DomainTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DomainTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (i DomainTagArgs) ToDomainTagOutput() DomainTagOutput {
	return i.ToDomainTagOutputWithContext(context.Background())
}

func (i DomainTagArgs) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagOutput)
}

func (i DomainTagArgs) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: i.ToDomainTagOutputWithContext(ctx).OutputState,
	}
}

// DomainTagArrayInput is an input type that accepts DomainTagArray and DomainTagArrayOutput values.
// You can construct a concrete instance of `DomainTagArrayInput` via:
//
//	DomainTagArray{ DomainTagArgs{...} }
type DomainTagArrayInput interface {
	pulumi.Input

	ToDomainTagArrayOutput() DomainTagArrayOutput
	ToDomainTagArrayOutputWithContext(context.Context) DomainTagArrayOutput
}

type DomainTagArray []DomainTagInput

func (DomainTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (i DomainTagArray) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return i.ToDomainTagArrayOutputWithContext(context.Background())
}

func (i DomainTagArray) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagArrayOutput)
}

func (i DomainTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: i.ToDomainTagArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainTagOutput struct{ *pulumi.OutputState }

func (DomainTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (o DomainTagOutput) ToDomainTagOutput() DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: o.OutputState,
	}
}

func (o DomainTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DomainTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Value }).(pulumi.StringOutput)
}

type DomainTagArrayOutput struct{ *pulumi.OutputState }

func (DomainTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: o.OutputState,
	}
}

func (o DomainTagArrayOutput) Index(i pulumi.IntInput) DomainTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainTag {
		return vs[0].([]DomainTag)[vs[1].(int)]
	}).(DomainTagOutput)
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type DomainUserSettings struct {
	CodeEditorAppSettings   *DomainCodeEditorAppSettings   `pulumi:"codeEditorAppSettings"`
	CustomFileSystemConfigs []DomainCustomFileSystemConfig `pulumi:"customFileSystemConfigs"`
	CustomPosixUserConfig   *DomainCustomPosixUserConfig   `pulumi:"customPosixUserConfig"`
	// Defines which Amazon SageMaker application users are directed to by default.
	DefaultLandingUri *string `pulumi:"defaultLandingUri"`
	// The execution role for the user.
	ExecutionRole         string                       `pulumi:"executionRole"`
	JupyterLabAppSettings *DomainJupyterLabAppSettings `pulumi:"jupyterLabAppSettings"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings *DomainJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings    *DomainKernelGatewayAppSettings    `pulumi:"kernelGatewayAppSettings"`
	RSessionAppSettings         *DomainRSessionAppSettings         `pulumi:"rSessionAppSettings"`
	RStudioServerProAppSettings *DomainRStudioServerProAppSettings `pulumi:"rStudioServerProAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The sharing settings.
	SharingSettings      *DomainSharingSettings             `pulumi:"sharingSettings"`
	SpaceStorageSettings *DomainDefaultSpaceStorageSettings `pulumi:"spaceStorageSettings"`
	// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
	StudioWebPortal *DomainUserSettingsStudioWebPortal `pulumi:"studioWebPortal"`
}

// DomainUserSettingsInput is an input type that accepts DomainUserSettingsArgs and DomainUserSettingsOutput values.
// You can construct a concrete instance of `DomainUserSettingsInput` via:
//
//	DomainUserSettingsArgs{...}
type DomainUserSettingsInput interface {
	pulumi.Input

	ToDomainUserSettingsOutput() DomainUserSettingsOutput
	ToDomainUserSettingsOutputWithContext(context.Context) DomainUserSettingsOutput
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type DomainUserSettingsArgs struct {
	CodeEditorAppSettings   DomainCodeEditorAppSettingsPtrInput    `pulumi:"codeEditorAppSettings"`
	CustomFileSystemConfigs DomainCustomFileSystemConfigArrayInput `pulumi:"customFileSystemConfigs"`
	CustomPosixUserConfig   DomainCustomPosixUserConfigPtrInput    `pulumi:"customPosixUserConfig"`
	// Defines which Amazon SageMaker application users are directed to by default.
	DefaultLandingUri pulumi.StringPtrInput `pulumi:"defaultLandingUri"`
	// The execution role for the user.
	ExecutionRole         pulumi.StringInput                  `pulumi:"executionRole"`
	JupyterLabAppSettings DomainJupyterLabAppSettingsPtrInput `pulumi:"jupyterLabAppSettings"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings DomainJupyterServerAppSettingsPtrInput `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings    DomainKernelGatewayAppSettingsPtrInput    `pulumi:"kernelGatewayAppSettings"`
	RSessionAppSettings         DomainRSessionAppSettingsPtrInput         `pulumi:"rSessionAppSettings"`
	RStudioServerProAppSettings DomainRStudioServerProAppSettingsPtrInput `pulumi:"rStudioServerProAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The sharing settings.
	SharingSettings      DomainSharingSettingsPtrInput             `pulumi:"sharingSettings"`
	SpaceStorageSettings DomainDefaultSpaceStorageSettingsPtrInput `pulumi:"spaceStorageSettings"`
	// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
	StudioWebPortal DomainUserSettingsStudioWebPortalPtrInput `pulumi:"studioWebPortal"`
}

func (DomainUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainUserSettings)(nil)).Elem()
}

func (i DomainUserSettingsArgs) ToDomainUserSettingsOutput() DomainUserSettingsOutput {
	return i.ToDomainUserSettingsOutputWithContext(context.Background())
}

func (i DomainUserSettingsArgs) ToDomainUserSettingsOutputWithContext(ctx context.Context) DomainUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainUserSettingsOutput)
}

func (i DomainUserSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainUserSettings] {
	return pulumix.Output[DomainUserSettings]{
		OutputState: i.ToDomainUserSettingsOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type DomainUserSettingsOutput struct{ *pulumi.OutputState }

func (DomainUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainUserSettings)(nil)).Elem()
}

func (o DomainUserSettingsOutput) ToDomainUserSettingsOutput() DomainUserSettingsOutput {
	return o
}

func (o DomainUserSettingsOutput) ToDomainUserSettingsOutputWithContext(ctx context.Context) DomainUserSettingsOutput {
	return o
}

func (o DomainUserSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainUserSettings] {
	return pulumix.Output[DomainUserSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainUserSettingsOutput) CodeEditorAppSettings() DomainCodeEditorAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainCodeEditorAppSettings { return v.CodeEditorAppSettings }).(DomainCodeEditorAppSettingsPtrOutput)
}

func (o DomainUserSettingsOutput) CustomFileSystemConfigs() DomainCustomFileSystemConfigArrayOutput {
	return o.ApplyT(func(v DomainUserSettings) []DomainCustomFileSystemConfig { return v.CustomFileSystemConfigs }).(DomainCustomFileSystemConfigArrayOutput)
}

func (o DomainUserSettingsOutput) CustomPosixUserConfig() DomainCustomPosixUserConfigPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainCustomPosixUserConfig { return v.CustomPosixUserConfig }).(DomainCustomPosixUserConfigPtrOutput)
}

// Defines which Amazon SageMaker application users are directed to by default.
func (o DomainUserSettingsOutput) DefaultLandingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *string { return v.DefaultLandingUri }).(pulumi.StringPtrOutput)
}

// The execution role for the user.
func (o DomainUserSettingsOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v DomainUserSettings) string { return v.ExecutionRole }).(pulumi.StringOutput)
}

func (o DomainUserSettingsOutput) JupyterLabAppSettings() DomainJupyterLabAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainJupyterLabAppSettings { return v.JupyterLabAppSettings }).(DomainJupyterLabAppSettingsPtrOutput)
}

// The Jupyter server's app settings.
func (o DomainUserSettingsOutput) JupyterServerAppSettings() DomainJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainJupyterServerAppSettings { return v.JupyterServerAppSettings }).(DomainJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o DomainUserSettingsOutput) KernelGatewayAppSettings() DomainKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainKernelGatewayAppSettings { return v.KernelGatewayAppSettings }).(DomainKernelGatewayAppSettingsPtrOutput)
}

func (o DomainUserSettingsOutput) RSessionAppSettings() DomainRSessionAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainRSessionAppSettings { return v.RSessionAppSettings }).(DomainRSessionAppSettingsPtrOutput)
}

func (o DomainUserSettingsOutput) RStudioServerProAppSettings() DomainRStudioServerProAppSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainRStudioServerProAppSettings { return v.RStudioServerProAppSettings }).(DomainRStudioServerProAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o DomainUserSettingsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainUserSettings) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The sharing settings.
func (o DomainUserSettingsOutput) SharingSettings() DomainSharingSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainSharingSettings { return v.SharingSettings }).(DomainSharingSettingsPtrOutput)
}

func (o DomainUserSettingsOutput) SpaceStorageSettings() DomainDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainDefaultSpaceStorageSettings { return v.SpaceStorageSettings }).(DomainDefaultSpaceStorageSettingsPtrOutput)
}

// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
func (o DomainUserSettingsOutput) StudioWebPortal() DomainUserSettingsStudioWebPortalPtrOutput {
	return o.ApplyT(func(v DomainUserSettings) *DomainUserSettingsStudioWebPortal { return v.StudioWebPortal }).(DomainUserSettingsStudioWebPortalPtrOutput)
}

type DomainUserSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainUserSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainUserSettings)(nil)).Elem()
}

func (o DomainUserSettingsPtrOutput) ToDomainUserSettingsPtrOutput() DomainUserSettingsPtrOutput {
	return o
}

func (o DomainUserSettingsPtrOutput) ToDomainUserSettingsPtrOutputWithContext(ctx context.Context) DomainUserSettingsPtrOutput {
	return o
}

func (o DomainUserSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainUserSettings] {
	return pulumix.Output[*DomainUserSettings]{
		OutputState: o.OutputState,
	}
}

func (o DomainUserSettingsPtrOutput) Elem() DomainUserSettingsOutput {
	return o.ApplyT(func(v *DomainUserSettings) DomainUserSettings {
		if v != nil {
			return *v
		}
		var ret DomainUserSettings
		return ret
	}).(DomainUserSettingsOutput)
}

func (o DomainUserSettingsPtrOutput) CodeEditorAppSettings() DomainCodeEditorAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainCodeEditorAppSettings {
		if v == nil {
			return nil
		}
		return v.CodeEditorAppSettings
	}).(DomainCodeEditorAppSettingsPtrOutput)
}

func (o DomainUserSettingsPtrOutput) CustomFileSystemConfigs() DomainCustomFileSystemConfigArrayOutput {
	return o.ApplyT(func(v *DomainUserSettings) []DomainCustomFileSystemConfig {
		if v == nil {
			return nil
		}
		return v.CustomFileSystemConfigs
	}).(DomainCustomFileSystemConfigArrayOutput)
}

func (o DomainUserSettingsPtrOutput) CustomPosixUserConfig() DomainCustomPosixUserConfigPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainCustomPosixUserConfig {
		if v == nil {
			return nil
		}
		return v.CustomPosixUserConfig
	}).(DomainCustomPosixUserConfigPtrOutput)
}

// Defines which Amazon SageMaker application users are directed to by default.
func (o DomainUserSettingsPtrOutput) DefaultLandingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLandingUri
	}).(pulumi.StringPtrOutput)
}

// The execution role for the user.
func (o DomainUserSettingsPtrOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionRole
	}).(pulumi.StringPtrOutput)
}

func (o DomainUserSettingsPtrOutput) JupyterLabAppSettings() DomainJupyterLabAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainJupyterLabAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterLabAppSettings
	}).(DomainJupyterLabAppSettingsPtrOutput)
}

// The Jupyter server's app settings.
func (o DomainUserSettingsPtrOutput) JupyterServerAppSettings() DomainJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainJupyterServerAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterServerAppSettings
	}).(DomainJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o DomainUserSettingsPtrOutput) KernelGatewayAppSettings() DomainKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainKernelGatewayAppSettings {
		if v == nil {
			return nil
		}
		return v.KernelGatewayAppSettings
	}).(DomainKernelGatewayAppSettingsPtrOutput)
}

func (o DomainUserSettingsPtrOutput) RSessionAppSettings() DomainRSessionAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainRSessionAppSettings {
		if v == nil {
			return nil
		}
		return v.RSessionAppSettings
	}).(DomainRSessionAppSettingsPtrOutput)
}

func (o DomainUserSettingsPtrOutput) RStudioServerProAppSettings() DomainRStudioServerProAppSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainRStudioServerProAppSettings {
		if v == nil {
			return nil
		}
		return v.RStudioServerProAppSettings
	}).(DomainRStudioServerProAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o DomainUserSettingsPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainUserSettings) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The sharing settings.
func (o DomainUserSettingsPtrOutput) SharingSettings() DomainSharingSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainSharingSettings {
		if v == nil {
			return nil
		}
		return v.SharingSettings
	}).(DomainSharingSettingsPtrOutput)
}

func (o DomainUserSettingsPtrOutput) SpaceStorageSettings() DomainDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainDefaultSpaceStorageSettings {
		if v == nil {
			return nil
		}
		return v.SpaceStorageSettings
	}).(DomainDefaultSpaceStorageSettingsPtrOutput)
}

// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
func (o DomainUserSettingsPtrOutput) StudioWebPortal() DomainUserSettingsStudioWebPortalPtrOutput {
	return o.ApplyT(func(v *DomainUserSettings) *DomainUserSettingsStudioWebPortal {
		if v == nil {
			return nil
		}
		return v.StudioWebPortal
	}).(DomainUserSettingsStudioWebPortalPtrOutput)
}

type EndpointAlarm struct {
	AlarmName string `pulumi:"alarmName"`
}

// EndpointAlarmInput is an input type that accepts EndpointAlarmArgs and EndpointAlarmOutput values.
// You can construct a concrete instance of `EndpointAlarmInput` via:
//
//	EndpointAlarmArgs{...}
type EndpointAlarmInput interface {
	pulumi.Input

	ToEndpointAlarmOutput() EndpointAlarmOutput
	ToEndpointAlarmOutputWithContext(context.Context) EndpointAlarmOutput
}

type EndpointAlarmArgs struct {
	AlarmName pulumi.StringInput `pulumi:"alarmName"`
}

func (EndpointAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAlarm)(nil)).Elem()
}

func (i EndpointAlarmArgs) ToEndpointAlarmOutput() EndpointAlarmOutput {
	return i.ToEndpointAlarmOutputWithContext(context.Background())
}

func (i EndpointAlarmArgs) ToEndpointAlarmOutputWithContext(ctx context.Context) EndpointAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAlarmOutput)
}

func (i EndpointAlarmArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointAlarm] {
	return pulumix.Output[EndpointAlarm]{
		OutputState: i.ToEndpointAlarmOutputWithContext(ctx).OutputState,
	}
}

// EndpointAlarmArrayInput is an input type that accepts EndpointAlarmArray and EndpointAlarmArrayOutput values.
// You can construct a concrete instance of `EndpointAlarmArrayInput` via:
//
//	EndpointAlarmArray{ EndpointAlarmArgs{...} }
type EndpointAlarmArrayInput interface {
	pulumi.Input

	ToEndpointAlarmArrayOutput() EndpointAlarmArrayOutput
	ToEndpointAlarmArrayOutputWithContext(context.Context) EndpointAlarmArrayOutput
}

type EndpointAlarmArray []EndpointAlarmInput

func (EndpointAlarmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAlarm)(nil)).Elem()
}

func (i EndpointAlarmArray) ToEndpointAlarmArrayOutput() EndpointAlarmArrayOutput {
	return i.ToEndpointAlarmArrayOutputWithContext(context.Background())
}

func (i EndpointAlarmArray) ToEndpointAlarmArrayOutputWithContext(ctx context.Context) EndpointAlarmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAlarmArrayOutput)
}

func (i EndpointAlarmArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointAlarm] {
	return pulumix.Output[[]EndpointAlarm]{
		OutputState: i.ToEndpointAlarmArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointAlarmOutput struct{ *pulumi.OutputState }

func (EndpointAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAlarm)(nil)).Elem()
}

func (o EndpointAlarmOutput) ToEndpointAlarmOutput() EndpointAlarmOutput {
	return o
}

func (o EndpointAlarmOutput) ToEndpointAlarmOutputWithContext(ctx context.Context) EndpointAlarmOutput {
	return o
}

func (o EndpointAlarmOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointAlarm] {
	return pulumix.Output[EndpointAlarm]{
		OutputState: o.OutputState,
	}
}

func (o EndpointAlarmOutput) AlarmName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointAlarm) string { return v.AlarmName }).(pulumi.StringOutput)
}

type EndpointAlarmArrayOutput struct{ *pulumi.OutputState }

func (EndpointAlarmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAlarm)(nil)).Elem()
}

func (o EndpointAlarmArrayOutput) ToEndpointAlarmArrayOutput() EndpointAlarmArrayOutput {
	return o
}

func (o EndpointAlarmArrayOutput) ToEndpointAlarmArrayOutputWithContext(ctx context.Context) EndpointAlarmArrayOutput {
	return o
}

func (o EndpointAlarmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointAlarm] {
	return pulumix.Output[[]EndpointAlarm]{
		OutputState: o.OutputState,
	}
}

func (o EndpointAlarmArrayOutput) Index(i pulumi.IntInput) EndpointAlarmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointAlarm {
		return vs[0].([]EndpointAlarm)[vs[1].(int)]
	}).(EndpointAlarmOutput)
}

type EndpointAutoRollbackConfig struct {
	Alarms []EndpointAlarm `pulumi:"alarms"`
}

// EndpointAutoRollbackConfigInput is an input type that accepts EndpointAutoRollbackConfigArgs and EndpointAutoRollbackConfigOutput values.
// You can construct a concrete instance of `EndpointAutoRollbackConfigInput` via:
//
//	EndpointAutoRollbackConfigArgs{...}
type EndpointAutoRollbackConfigInput interface {
	pulumi.Input

	ToEndpointAutoRollbackConfigOutput() EndpointAutoRollbackConfigOutput
	ToEndpointAutoRollbackConfigOutputWithContext(context.Context) EndpointAutoRollbackConfigOutput
}

type EndpointAutoRollbackConfigArgs struct {
	Alarms EndpointAlarmArrayInput `pulumi:"alarms"`
}

func (EndpointAutoRollbackConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAutoRollbackConfig)(nil)).Elem()
}

func (i EndpointAutoRollbackConfigArgs) ToEndpointAutoRollbackConfigOutput() EndpointAutoRollbackConfigOutput {
	return i.ToEndpointAutoRollbackConfigOutputWithContext(context.Background())
}

func (i EndpointAutoRollbackConfigArgs) ToEndpointAutoRollbackConfigOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAutoRollbackConfigOutput)
}

func (i EndpointAutoRollbackConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointAutoRollbackConfig] {
	return pulumix.Output[EndpointAutoRollbackConfig]{
		OutputState: i.ToEndpointAutoRollbackConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointAutoRollbackConfigArgs) ToEndpointAutoRollbackConfigPtrOutput() EndpointAutoRollbackConfigPtrOutput {
	return i.ToEndpointAutoRollbackConfigPtrOutputWithContext(context.Background())
}

func (i EndpointAutoRollbackConfigArgs) ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAutoRollbackConfigOutput).ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx)
}

// EndpointAutoRollbackConfigPtrInput is an input type that accepts EndpointAutoRollbackConfigArgs, EndpointAutoRollbackConfigPtr and EndpointAutoRollbackConfigPtrOutput values.
// You can construct a concrete instance of `EndpointAutoRollbackConfigPtrInput` via:
//
//	        EndpointAutoRollbackConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointAutoRollbackConfigPtrInput interface {
	pulumi.Input

	ToEndpointAutoRollbackConfigPtrOutput() EndpointAutoRollbackConfigPtrOutput
	ToEndpointAutoRollbackConfigPtrOutputWithContext(context.Context) EndpointAutoRollbackConfigPtrOutput
}

type endpointAutoRollbackConfigPtrType EndpointAutoRollbackConfigArgs

func EndpointAutoRollbackConfigPtr(v *EndpointAutoRollbackConfigArgs) EndpointAutoRollbackConfigPtrInput {
	return (*endpointAutoRollbackConfigPtrType)(v)
}

func (*endpointAutoRollbackConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAutoRollbackConfig)(nil)).Elem()
}

func (i *endpointAutoRollbackConfigPtrType) ToEndpointAutoRollbackConfigPtrOutput() EndpointAutoRollbackConfigPtrOutput {
	return i.ToEndpointAutoRollbackConfigPtrOutputWithContext(context.Background())
}

func (i *endpointAutoRollbackConfigPtrType) ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAutoRollbackConfigPtrOutput)
}

func (i *endpointAutoRollbackConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointAutoRollbackConfig] {
	return pulumix.Output[*EndpointAutoRollbackConfig]{
		OutputState: i.ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointAutoRollbackConfigOutput struct{ *pulumi.OutputState }

func (EndpointAutoRollbackConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAutoRollbackConfig)(nil)).Elem()
}

func (o EndpointAutoRollbackConfigOutput) ToEndpointAutoRollbackConfigOutput() EndpointAutoRollbackConfigOutput {
	return o
}

func (o EndpointAutoRollbackConfigOutput) ToEndpointAutoRollbackConfigOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigOutput {
	return o
}

func (o EndpointAutoRollbackConfigOutput) ToEndpointAutoRollbackConfigPtrOutput() EndpointAutoRollbackConfigPtrOutput {
	return o.ToEndpointAutoRollbackConfigPtrOutputWithContext(context.Background())
}

func (o EndpointAutoRollbackConfigOutput) ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointAutoRollbackConfig) *EndpointAutoRollbackConfig {
		return &v
	}).(EndpointAutoRollbackConfigPtrOutput)
}

func (o EndpointAutoRollbackConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointAutoRollbackConfig] {
	return pulumix.Output[EndpointAutoRollbackConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointAutoRollbackConfigOutput) Alarms() EndpointAlarmArrayOutput {
	return o.ApplyT(func(v EndpointAutoRollbackConfig) []EndpointAlarm { return v.Alarms }).(EndpointAlarmArrayOutput)
}

type EndpointAutoRollbackConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointAutoRollbackConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAutoRollbackConfig)(nil)).Elem()
}

func (o EndpointAutoRollbackConfigPtrOutput) ToEndpointAutoRollbackConfigPtrOutput() EndpointAutoRollbackConfigPtrOutput {
	return o
}

func (o EndpointAutoRollbackConfigPtrOutput) ToEndpointAutoRollbackConfigPtrOutputWithContext(ctx context.Context) EndpointAutoRollbackConfigPtrOutput {
	return o
}

func (o EndpointAutoRollbackConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointAutoRollbackConfig] {
	return pulumix.Output[*EndpointAutoRollbackConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointAutoRollbackConfigPtrOutput) Elem() EndpointAutoRollbackConfigOutput {
	return o.ApplyT(func(v *EndpointAutoRollbackConfig) EndpointAutoRollbackConfig {
		if v != nil {
			return *v
		}
		var ret EndpointAutoRollbackConfig
		return ret
	}).(EndpointAutoRollbackConfigOutput)
}

func (o EndpointAutoRollbackConfigPtrOutput) Alarms() EndpointAlarmArrayOutput {
	return o.ApplyT(func(v *EndpointAutoRollbackConfig) []EndpointAlarm {
		if v == nil {
			return nil
		}
		return v.Alarms
	}).(EndpointAlarmArrayOutput)
}

type EndpointBlueGreenUpdatePolicy struct {
	MaximumExecutionTimeoutInSeconds *int                         `pulumi:"maximumExecutionTimeoutInSeconds"`
	TerminationWaitInSeconds         *int                         `pulumi:"terminationWaitInSeconds"`
	TrafficRoutingConfiguration      EndpointTrafficRoutingConfig `pulumi:"trafficRoutingConfiguration"`
}

// EndpointBlueGreenUpdatePolicyInput is an input type that accepts EndpointBlueGreenUpdatePolicyArgs and EndpointBlueGreenUpdatePolicyOutput values.
// You can construct a concrete instance of `EndpointBlueGreenUpdatePolicyInput` via:
//
//	EndpointBlueGreenUpdatePolicyArgs{...}
type EndpointBlueGreenUpdatePolicyInput interface {
	pulumi.Input

	ToEndpointBlueGreenUpdatePolicyOutput() EndpointBlueGreenUpdatePolicyOutput
	ToEndpointBlueGreenUpdatePolicyOutputWithContext(context.Context) EndpointBlueGreenUpdatePolicyOutput
}

type EndpointBlueGreenUpdatePolicyArgs struct {
	MaximumExecutionTimeoutInSeconds pulumi.IntPtrInput                `pulumi:"maximumExecutionTimeoutInSeconds"`
	TerminationWaitInSeconds         pulumi.IntPtrInput                `pulumi:"terminationWaitInSeconds"`
	TrafficRoutingConfiguration      EndpointTrafficRoutingConfigInput `pulumi:"trafficRoutingConfiguration"`
}

func (EndpointBlueGreenUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointBlueGreenUpdatePolicy)(nil)).Elem()
}

func (i EndpointBlueGreenUpdatePolicyArgs) ToEndpointBlueGreenUpdatePolicyOutput() EndpointBlueGreenUpdatePolicyOutput {
	return i.ToEndpointBlueGreenUpdatePolicyOutputWithContext(context.Background())
}

func (i EndpointBlueGreenUpdatePolicyArgs) ToEndpointBlueGreenUpdatePolicyOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointBlueGreenUpdatePolicyOutput)
}

func (i EndpointBlueGreenUpdatePolicyArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointBlueGreenUpdatePolicy] {
	return pulumix.Output[EndpointBlueGreenUpdatePolicy]{
		OutputState: i.ToEndpointBlueGreenUpdatePolicyOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointBlueGreenUpdatePolicyArgs) ToEndpointBlueGreenUpdatePolicyPtrOutput() EndpointBlueGreenUpdatePolicyPtrOutput {
	return i.ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i EndpointBlueGreenUpdatePolicyArgs) ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointBlueGreenUpdatePolicyOutput).ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx)
}

// EndpointBlueGreenUpdatePolicyPtrInput is an input type that accepts EndpointBlueGreenUpdatePolicyArgs, EndpointBlueGreenUpdatePolicyPtr and EndpointBlueGreenUpdatePolicyPtrOutput values.
// You can construct a concrete instance of `EndpointBlueGreenUpdatePolicyPtrInput` via:
//
//	        EndpointBlueGreenUpdatePolicyArgs{...}
//
//	or:
//
//	        nil
type EndpointBlueGreenUpdatePolicyPtrInput interface {
	pulumi.Input

	ToEndpointBlueGreenUpdatePolicyPtrOutput() EndpointBlueGreenUpdatePolicyPtrOutput
	ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(context.Context) EndpointBlueGreenUpdatePolicyPtrOutput
}

type endpointBlueGreenUpdatePolicyPtrType EndpointBlueGreenUpdatePolicyArgs

func EndpointBlueGreenUpdatePolicyPtr(v *EndpointBlueGreenUpdatePolicyArgs) EndpointBlueGreenUpdatePolicyPtrInput {
	return (*endpointBlueGreenUpdatePolicyPtrType)(v)
}

func (*endpointBlueGreenUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointBlueGreenUpdatePolicy)(nil)).Elem()
}

func (i *endpointBlueGreenUpdatePolicyPtrType) ToEndpointBlueGreenUpdatePolicyPtrOutput() EndpointBlueGreenUpdatePolicyPtrOutput {
	return i.ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *endpointBlueGreenUpdatePolicyPtrType) ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointBlueGreenUpdatePolicyPtrOutput)
}

func (i *endpointBlueGreenUpdatePolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointBlueGreenUpdatePolicy] {
	return pulumix.Output[*EndpointBlueGreenUpdatePolicy]{
		OutputState: i.ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointBlueGreenUpdatePolicyOutput struct{ *pulumi.OutputState }

func (EndpointBlueGreenUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointBlueGreenUpdatePolicy)(nil)).Elem()
}

func (o EndpointBlueGreenUpdatePolicyOutput) ToEndpointBlueGreenUpdatePolicyOutput() EndpointBlueGreenUpdatePolicyOutput {
	return o
}

func (o EndpointBlueGreenUpdatePolicyOutput) ToEndpointBlueGreenUpdatePolicyOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyOutput {
	return o
}

func (o EndpointBlueGreenUpdatePolicyOutput) ToEndpointBlueGreenUpdatePolicyPtrOutput() EndpointBlueGreenUpdatePolicyPtrOutput {
	return o.ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o EndpointBlueGreenUpdatePolicyOutput) ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointBlueGreenUpdatePolicy) *EndpointBlueGreenUpdatePolicy {
		return &v
	}).(EndpointBlueGreenUpdatePolicyPtrOutput)
}

func (o EndpointBlueGreenUpdatePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointBlueGreenUpdatePolicy] {
	return pulumix.Output[EndpointBlueGreenUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

func (o EndpointBlueGreenUpdatePolicyOutput) MaximumExecutionTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointBlueGreenUpdatePolicy) *int { return v.MaximumExecutionTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o EndpointBlueGreenUpdatePolicyOutput) TerminationWaitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointBlueGreenUpdatePolicy) *int { return v.TerminationWaitInSeconds }).(pulumi.IntPtrOutput)
}

func (o EndpointBlueGreenUpdatePolicyOutput) TrafficRoutingConfiguration() EndpointTrafficRoutingConfigOutput {
	return o.ApplyT(func(v EndpointBlueGreenUpdatePolicy) EndpointTrafficRoutingConfig {
		return v.TrafficRoutingConfiguration
	}).(EndpointTrafficRoutingConfigOutput)
}

type EndpointBlueGreenUpdatePolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointBlueGreenUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointBlueGreenUpdatePolicy)(nil)).Elem()
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) ToEndpointBlueGreenUpdatePolicyPtrOutput() EndpointBlueGreenUpdatePolicyPtrOutput {
	return o
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) ToEndpointBlueGreenUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointBlueGreenUpdatePolicyPtrOutput {
	return o
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointBlueGreenUpdatePolicy] {
	return pulumix.Output[*EndpointBlueGreenUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) Elem() EndpointBlueGreenUpdatePolicyOutput {
	return o.ApplyT(func(v *EndpointBlueGreenUpdatePolicy) EndpointBlueGreenUpdatePolicy {
		if v != nil {
			return *v
		}
		var ret EndpointBlueGreenUpdatePolicy
		return ret
	}).(EndpointBlueGreenUpdatePolicyOutput)
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) MaximumExecutionTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointBlueGreenUpdatePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumExecutionTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) TerminationWaitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointBlueGreenUpdatePolicy) *int {
		if v == nil {
			return nil
		}
		return v.TerminationWaitInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o EndpointBlueGreenUpdatePolicyPtrOutput) TrafficRoutingConfiguration() EndpointTrafficRoutingConfigPtrOutput {
	return o.ApplyT(func(v *EndpointBlueGreenUpdatePolicy) *EndpointTrafficRoutingConfig {
		if v == nil {
			return nil
		}
		return &v.TrafficRoutingConfiguration
	}).(EndpointTrafficRoutingConfigPtrOutput)
}

type EndpointCapacitySize struct {
	Type  string `pulumi:"type"`
	Value int    `pulumi:"value"`
}

// EndpointCapacitySizeInput is an input type that accepts EndpointCapacitySizeArgs and EndpointCapacitySizeOutput values.
// You can construct a concrete instance of `EndpointCapacitySizeInput` via:
//
//	EndpointCapacitySizeArgs{...}
type EndpointCapacitySizeInput interface {
	pulumi.Input

	ToEndpointCapacitySizeOutput() EndpointCapacitySizeOutput
	ToEndpointCapacitySizeOutputWithContext(context.Context) EndpointCapacitySizeOutput
}

type EndpointCapacitySizeArgs struct {
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (EndpointCapacitySizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointCapacitySize)(nil)).Elem()
}

func (i EndpointCapacitySizeArgs) ToEndpointCapacitySizeOutput() EndpointCapacitySizeOutput {
	return i.ToEndpointCapacitySizeOutputWithContext(context.Background())
}

func (i EndpointCapacitySizeArgs) ToEndpointCapacitySizeOutputWithContext(ctx context.Context) EndpointCapacitySizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCapacitySizeOutput)
}

func (i EndpointCapacitySizeArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointCapacitySize] {
	return pulumix.Output[EndpointCapacitySize]{
		OutputState: i.ToEndpointCapacitySizeOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointCapacitySizeArgs) ToEndpointCapacitySizePtrOutput() EndpointCapacitySizePtrOutput {
	return i.ToEndpointCapacitySizePtrOutputWithContext(context.Background())
}

func (i EndpointCapacitySizeArgs) ToEndpointCapacitySizePtrOutputWithContext(ctx context.Context) EndpointCapacitySizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCapacitySizeOutput).ToEndpointCapacitySizePtrOutputWithContext(ctx)
}

// EndpointCapacitySizePtrInput is an input type that accepts EndpointCapacitySizeArgs, EndpointCapacitySizePtr and EndpointCapacitySizePtrOutput values.
// You can construct a concrete instance of `EndpointCapacitySizePtrInput` via:
//
//	        EndpointCapacitySizeArgs{...}
//
//	or:
//
//	        nil
type EndpointCapacitySizePtrInput interface {
	pulumi.Input

	ToEndpointCapacitySizePtrOutput() EndpointCapacitySizePtrOutput
	ToEndpointCapacitySizePtrOutputWithContext(context.Context) EndpointCapacitySizePtrOutput
}

type endpointCapacitySizePtrType EndpointCapacitySizeArgs

func EndpointCapacitySizePtr(v *EndpointCapacitySizeArgs) EndpointCapacitySizePtrInput {
	return (*endpointCapacitySizePtrType)(v)
}

func (*endpointCapacitySizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCapacitySize)(nil)).Elem()
}

func (i *endpointCapacitySizePtrType) ToEndpointCapacitySizePtrOutput() EndpointCapacitySizePtrOutput {
	return i.ToEndpointCapacitySizePtrOutputWithContext(context.Background())
}

func (i *endpointCapacitySizePtrType) ToEndpointCapacitySizePtrOutputWithContext(ctx context.Context) EndpointCapacitySizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCapacitySizePtrOutput)
}

func (i *endpointCapacitySizePtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointCapacitySize] {
	return pulumix.Output[*EndpointCapacitySize]{
		OutputState: i.ToEndpointCapacitySizePtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointCapacitySizeOutput struct{ *pulumi.OutputState }

func (EndpointCapacitySizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointCapacitySize)(nil)).Elem()
}

func (o EndpointCapacitySizeOutput) ToEndpointCapacitySizeOutput() EndpointCapacitySizeOutput {
	return o
}

func (o EndpointCapacitySizeOutput) ToEndpointCapacitySizeOutputWithContext(ctx context.Context) EndpointCapacitySizeOutput {
	return o
}

func (o EndpointCapacitySizeOutput) ToEndpointCapacitySizePtrOutput() EndpointCapacitySizePtrOutput {
	return o.ToEndpointCapacitySizePtrOutputWithContext(context.Background())
}

func (o EndpointCapacitySizeOutput) ToEndpointCapacitySizePtrOutputWithContext(ctx context.Context) EndpointCapacitySizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointCapacitySize) *EndpointCapacitySize {
		return &v
	}).(EndpointCapacitySizePtrOutput)
}

func (o EndpointCapacitySizeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointCapacitySize] {
	return pulumix.Output[EndpointCapacitySize]{
		OutputState: o.OutputState,
	}
}

func (o EndpointCapacitySizeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointCapacitySize) string { return v.Type }).(pulumi.StringOutput)
}

func (o EndpointCapacitySizeOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointCapacitySize) int { return v.Value }).(pulumi.IntOutput)
}

type EndpointCapacitySizePtrOutput struct{ *pulumi.OutputState }

func (EndpointCapacitySizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCapacitySize)(nil)).Elem()
}

func (o EndpointCapacitySizePtrOutput) ToEndpointCapacitySizePtrOutput() EndpointCapacitySizePtrOutput {
	return o
}

func (o EndpointCapacitySizePtrOutput) ToEndpointCapacitySizePtrOutputWithContext(ctx context.Context) EndpointCapacitySizePtrOutput {
	return o
}

func (o EndpointCapacitySizePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointCapacitySize] {
	return pulumix.Output[*EndpointCapacitySize]{
		OutputState: o.OutputState,
	}
}

func (o EndpointCapacitySizePtrOutput) Elem() EndpointCapacitySizeOutput {
	return o.ApplyT(func(v *EndpointCapacitySize) EndpointCapacitySize {
		if v != nil {
			return *v
		}
		var ret EndpointCapacitySize
		return ret
	}).(EndpointCapacitySizeOutput)
}

func (o EndpointCapacitySizePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCapacitySize) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o EndpointCapacitySizePtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointCapacitySize) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type EndpointConfigAsyncInferenceClientConfig struct {
	MaxConcurrentInvocationsPerInstance *int `pulumi:"maxConcurrentInvocationsPerInstance"`
}

// EndpointConfigAsyncInferenceClientConfigInput is an input type that accepts EndpointConfigAsyncInferenceClientConfigArgs and EndpointConfigAsyncInferenceClientConfigOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceClientConfigInput` via:
//
//	EndpointConfigAsyncInferenceClientConfigArgs{...}
type EndpointConfigAsyncInferenceClientConfigInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceClientConfigOutput() EndpointConfigAsyncInferenceClientConfigOutput
	ToEndpointConfigAsyncInferenceClientConfigOutputWithContext(context.Context) EndpointConfigAsyncInferenceClientConfigOutput
}

type EndpointConfigAsyncInferenceClientConfigArgs struct {
	MaxConcurrentInvocationsPerInstance pulumi.IntPtrInput `pulumi:"maxConcurrentInvocationsPerInstance"`
}

func (EndpointConfigAsyncInferenceClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceClientConfig)(nil)).Elem()
}

func (i EndpointConfigAsyncInferenceClientConfigArgs) ToEndpointConfigAsyncInferenceClientConfigOutput() EndpointConfigAsyncInferenceClientConfigOutput {
	return i.ToEndpointConfigAsyncInferenceClientConfigOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceClientConfigArgs) ToEndpointConfigAsyncInferenceClientConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceClientConfigOutput)
}

func (i EndpointConfigAsyncInferenceClientConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceClientConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceClientConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceClientConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigAsyncInferenceClientConfigArgs) ToEndpointConfigAsyncInferenceClientConfigPtrOutput() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceClientConfigArgs) ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceClientConfigOutput).ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx)
}

// EndpointConfigAsyncInferenceClientConfigPtrInput is an input type that accepts EndpointConfigAsyncInferenceClientConfigArgs, EndpointConfigAsyncInferenceClientConfigPtr and EndpointConfigAsyncInferenceClientConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceClientConfigPtrInput` via:
//
//	        EndpointConfigAsyncInferenceClientConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigAsyncInferenceClientConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceClientConfigPtrOutput() EndpointConfigAsyncInferenceClientConfigPtrOutput
	ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(context.Context) EndpointConfigAsyncInferenceClientConfigPtrOutput
}

type endpointConfigAsyncInferenceClientConfigPtrType EndpointConfigAsyncInferenceClientConfigArgs

func EndpointConfigAsyncInferenceClientConfigPtr(v *EndpointConfigAsyncInferenceClientConfigArgs) EndpointConfigAsyncInferenceClientConfigPtrInput {
	return (*endpointConfigAsyncInferenceClientConfigPtrType)(v)
}

func (*endpointConfigAsyncInferenceClientConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceClientConfig)(nil)).Elem()
}

func (i *endpointConfigAsyncInferenceClientConfigPtrType) ToEndpointConfigAsyncInferenceClientConfigPtrOutput() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigAsyncInferenceClientConfigPtrType) ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceClientConfigPtrOutput)
}

func (i *endpointConfigAsyncInferenceClientConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceClientConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceClientConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigAsyncInferenceClientConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceClientConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) ToEndpointConfigAsyncInferenceClientConfigOutput() EndpointConfigAsyncInferenceClientConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) ToEndpointConfigAsyncInferenceClientConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) ToEndpointConfigAsyncInferenceClientConfigPtrOutput() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o.ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigAsyncInferenceClientConfig) *EndpointConfigAsyncInferenceClientConfig {
		return &v
	}).(EndpointConfigAsyncInferenceClientConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceClientConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceClientConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceClientConfigOutput) MaxConcurrentInvocationsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceClientConfig) *int { return v.MaxConcurrentInvocationsPerInstance }).(pulumi.IntPtrOutput)
}

type EndpointConfigAsyncInferenceClientConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceClientConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceClientConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceClientConfigPtrOutput) ToEndpointConfigAsyncInferenceClientConfigPtrOutput() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceClientConfigPtrOutput) ToEndpointConfigAsyncInferenceClientConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceClientConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceClientConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceClientConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceClientConfigPtrOutput) Elem() EndpointConfigAsyncInferenceClientConfigOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceClientConfig) EndpointConfigAsyncInferenceClientConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigAsyncInferenceClientConfig
		return ret
	}).(EndpointConfigAsyncInferenceClientConfigOutput)
}

func (o EndpointConfigAsyncInferenceClientConfigPtrOutput) MaxConcurrentInvocationsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceClientConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentInvocationsPerInstance
	}).(pulumi.IntPtrOutput)
}

type EndpointConfigAsyncInferenceConfig struct {
	ClientConfig *EndpointConfigAsyncInferenceClientConfig `pulumi:"clientConfig"`
	OutputConfig EndpointConfigAsyncInferenceOutputConfig  `pulumi:"outputConfig"`
}

// EndpointConfigAsyncInferenceConfigInput is an input type that accepts EndpointConfigAsyncInferenceConfigArgs and EndpointConfigAsyncInferenceConfigOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceConfigInput` via:
//
//	EndpointConfigAsyncInferenceConfigArgs{...}
type EndpointConfigAsyncInferenceConfigInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceConfigOutput() EndpointConfigAsyncInferenceConfigOutput
	ToEndpointConfigAsyncInferenceConfigOutputWithContext(context.Context) EndpointConfigAsyncInferenceConfigOutput
}

type EndpointConfigAsyncInferenceConfigArgs struct {
	ClientConfig EndpointConfigAsyncInferenceClientConfigPtrInput `pulumi:"clientConfig"`
	OutputConfig EndpointConfigAsyncInferenceOutputConfigInput    `pulumi:"outputConfig"`
}

func (EndpointConfigAsyncInferenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceConfig)(nil)).Elem()
}

func (i EndpointConfigAsyncInferenceConfigArgs) ToEndpointConfigAsyncInferenceConfigOutput() EndpointConfigAsyncInferenceConfigOutput {
	return i.ToEndpointConfigAsyncInferenceConfigOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceConfigArgs) ToEndpointConfigAsyncInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceConfigOutput)
}

func (i EndpointConfigAsyncInferenceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigAsyncInferenceConfigArgs) ToEndpointConfigAsyncInferenceConfigPtrOutput() EndpointConfigAsyncInferenceConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceConfigArgs) ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceConfigOutput).ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx)
}

// EndpointConfigAsyncInferenceConfigPtrInput is an input type that accepts EndpointConfigAsyncInferenceConfigArgs, EndpointConfigAsyncInferenceConfigPtr and EndpointConfigAsyncInferenceConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceConfigPtrInput` via:
//
//	        EndpointConfigAsyncInferenceConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigAsyncInferenceConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceConfigPtrOutput() EndpointConfigAsyncInferenceConfigPtrOutput
	ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(context.Context) EndpointConfigAsyncInferenceConfigPtrOutput
}

type endpointConfigAsyncInferenceConfigPtrType EndpointConfigAsyncInferenceConfigArgs

func EndpointConfigAsyncInferenceConfigPtr(v *EndpointConfigAsyncInferenceConfigArgs) EndpointConfigAsyncInferenceConfigPtrInput {
	return (*endpointConfigAsyncInferenceConfigPtrType)(v)
}

func (*endpointConfigAsyncInferenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceConfig)(nil)).Elem()
}

func (i *endpointConfigAsyncInferenceConfigPtrType) ToEndpointConfigAsyncInferenceConfigPtrOutput() EndpointConfigAsyncInferenceConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigAsyncInferenceConfigPtrType) ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceConfigPtrOutput)
}

func (i *endpointConfigAsyncInferenceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigAsyncInferenceConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceConfigOutput) ToEndpointConfigAsyncInferenceConfigOutput() EndpointConfigAsyncInferenceConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceConfigOutput) ToEndpointConfigAsyncInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceConfigOutput) ToEndpointConfigAsyncInferenceConfigPtrOutput() EndpointConfigAsyncInferenceConfigPtrOutput {
	return o.ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigAsyncInferenceConfigOutput) ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigAsyncInferenceConfig) *EndpointConfigAsyncInferenceConfig {
		return &v
	}).(EndpointConfigAsyncInferenceConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceConfigOutput) ClientConfig() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceConfig) *EndpointConfigAsyncInferenceClientConfig {
		return v.ClientConfig
	}).(EndpointConfigAsyncInferenceClientConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceConfigOutput) OutputConfig() EndpointConfigAsyncInferenceOutputConfigOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceConfig) EndpointConfigAsyncInferenceOutputConfig {
		return v.OutputConfig
	}).(EndpointConfigAsyncInferenceOutputConfigOutput)
}

type EndpointConfigAsyncInferenceConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) ToEndpointConfigAsyncInferenceConfigPtrOutput() EndpointConfigAsyncInferenceConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) ToEndpointConfigAsyncInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) Elem() EndpointConfigAsyncInferenceConfigOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceConfig) EndpointConfigAsyncInferenceConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigAsyncInferenceConfig
		return ret
	}).(EndpointConfigAsyncInferenceConfigOutput)
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) ClientConfig() EndpointConfigAsyncInferenceClientConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceConfig) *EndpointConfigAsyncInferenceClientConfig {
		if v == nil {
			return nil
		}
		return v.ClientConfig
	}).(EndpointConfigAsyncInferenceClientConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceConfigPtrOutput) OutputConfig() EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceConfig) *EndpointConfigAsyncInferenceOutputConfig {
		if v == nil {
			return nil
		}
		return &v.OutputConfig
	}).(EndpointConfigAsyncInferenceOutputConfigPtrOutput)
}

type EndpointConfigAsyncInferenceNotificationConfig struct {
	ErrorTopic                 *string  `pulumi:"errorTopic"`
	IncludeInferenceResponseIn []string `pulumi:"includeInferenceResponseIn"`
	SuccessTopic               *string  `pulumi:"successTopic"`
}

// EndpointConfigAsyncInferenceNotificationConfigInput is an input type that accepts EndpointConfigAsyncInferenceNotificationConfigArgs and EndpointConfigAsyncInferenceNotificationConfigOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceNotificationConfigInput` via:
//
//	EndpointConfigAsyncInferenceNotificationConfigArgs{...}
type EndpointConfigAsyncInferenceNotificationConfigInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceNotificationConfigOutput() EndpointConfigAsyncInferenceNotificationConfigOutput
	ToEndpointConfigAsyncInferenceNotificationConfigOutputWithContext(context.Context) EndpointConfigAsyncInferenceNotificationConfigOutput
}

type EndpointConfigAsyncInferenceNotificationConfigArgs struct {
	ErrorTopic                 pulumi.StringPtrInput   `pulumi:"errorTopic"`
	IncludeInferenceResponseIn pulumi.StringArrayInput `pulumi:"includeInferenceResponseIn"`
	SuccessTopic               pulumi.StringPtrInput   `pulumi:"successTopic"`
}

func (EndpointConfigAsyncInferenceNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceNotificationConfig)(nil)).Elem()
}

func (i EndpointConfigAsyncInferenceNotificationConfigArgs) ToEndpointConfigAsyncInferenceNotificationConfigOutput() EndpointConfigAsyncInferenceNotificationConfigOutput {
	return i.ToEndpointConfigAsyncInferenceNotificationConfigOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceNotificationConfigArgs) ToEndpointConfigAsyncInferenceNotificationConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceNotificationConfigOutput)
}

func (i EndpointConfigAsyncInferenceNotificationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceNotificationConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceNotificationConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceNotificationConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigAsyncInferenceNotificationConfigArgs) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutput() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceNotificationConfigArgs) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceNotificationConfigOutput).ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx)
}

// EndpointConfigAsyncInferenceNotificationConfigPtrInput is an input type that accepts EndpointConfigAsyncInferenceNotificationConfigArgs, EndpointConfigAsyncInferenceNotificationConfigPtr and EndpointConfigAsyncInferenceNotificationConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceNotificationConfigPtrInput` via:
//
//	        EndpointConfigAsyncInferenceNotificationConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigAsyncInferenceNotificationConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceNotificationConfigPtrOutput() EndpointConfigAsyncInferenceNotificationConfigPtrOutput
	ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(context.Context) EndpointConfigAsyncInferenceNotificationConfigPtrOutput
}

type endpointConfigAsyncInferenceNotificationConfigPtrType EndpointConfigAsyncInferenceNotificationConfigArgs

func EndpointConfigAsyncInferenceNotificationConfigPtr(v *EndpointConfigAsyncInferenceNotificationConfigArgs) EndpointConfigAsyncInferenceNotificationConfigPtrInput {
	return (*endpointConfigAsyncInferenceNotificationConfigPtrType)(v)
}

func (*endpointConfigAsyncInferenceNotificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceNotificationConfig)(nil)).Elem()
}

func (i *endpointConfigAsyncInferenceNotificationConfigPtrType) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutput() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigAsyncInferenceNotificationConfigPtrType) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceNotificationConfigPtrOutput)
}

func (i *endpointConfigAsyncInferenceNotificationConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceNotificationConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceNotificationConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigAsyncInferenceNotificationConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceNotificationConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ToEndpointConfigAsyncInferenceNotificationConfigOutput() EndpointConfigAsyncInferenceNotificationConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ToEndpointConfigAsyncInferenceNotificationConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutput() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o.ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigAsyncInferenceNotificationConfig) *EndpointConfigAsyncInferenceNotificationConfig {
		return &v
	}).(EndpointConfigAsyncInferenceNotificationConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceNotificationConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceNotificationConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) ErrorTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceNotificationConfig) *string { return v.ErrorTopic }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) IncludeInferenceResponseIn() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceNotificationConfig) []string { return v.IncludeInferenceResponseIn }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigOutput) SuccessTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceNotificationConfig) *string { return v.SuccessTopic }).(pulumi.StringPtrOutput)
}

type EndpointConfigAsyncInferenceNotificationConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceNotificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceNotificationConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutput() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) ToEndpointConfigAsyncInferenceNotificationConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceNotificationConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceNotificationConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) Elem() EndpointConfigAsyncInferenceNotificationConfigOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceNotificationConfig) EndpointConfigAsyncInferenceNotificationConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigAsyncInferenceNotificationConfig
		return ret
	}).(EndpointConfigAsyncInferenceNotificationConfigOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) ErrorTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceNotificationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ErrorTopic
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) IncludeInferenceResponseIn() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceNotificationConfig) []string {
		if v == nil {
			return nil
		}
		return v.IncludeInferenceResponseIn
	}).(pulumi.StringArrayOutput)
}

func (o EndpointConfigAsyncInferenceNotificationConfigPtrOutput) SuccessTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceNotificationConfig) *string {
		if v == nil {
			return nil
		}
		return v.SuccessTopic
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigAsyncInferenceOutputConfig struct {
	KmsKeyId           *string                                         `pulumi:"kmsKeyId"`
	NotificationConfig *EndpointConfigAsyncInferenceNotificationConfig `pulumi:"notificationConfig"`
	S3FailurePath      *string                                         `pulumi:"s3FailurePath"`
	S3OutputPath       *string                                         `pulumi:"s3OutputPath"`
}

// EndpointConfigAsyncInferenceOutputConfigInput is an input type that accepts EndpointConfigAsyncInferenceOutputConfigArgs and EndpointConfigAsyncInferenceOutputConfigOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceOutputConfigInput` via:
//
//	EndpointConfigAsyncInferenceOutputConfigArgs{...}
type EndpointConfigAsyncInferenceOutputConfigInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceOutputConfigOutput() EndpointConfigAsyncInferenceOutputConfigOutput
	ToEndpointConfigAsyncInferenceOutputConfigOutputWithContext(context.Context) EndpointConfigAsyncInferenceOutputConfigOutput
}

type EndpointConfigAsyncInferenceOutputConfigArgs struct {
	KmsKeyId           pulumi.StringPtrInput                                  `pulumi:"kmsKeyId"`
	NotificationConfig EndpointConfigAsyncInferenceNotificationConfigPtrInput `pulumi:"notificationConfig"`
	S3FailurePath      pulumi.StringPtrInput                                  `pulumi:"s3FailurePath"`
	S3OutputPath       pulumi.StringPtrInput                                  `pulumi:"s3OutputPath"`
}

func (EndpointConfigAsyncInferenceOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceOutputConfig)(nil)).Elem()
}

func (i EndpointConfigAsyncInferenceOutputConfigArgs) ToEndpointConfigAsyncInferenceOutputConfigOutput() EndpointConfigAsyncInferenceOutputConfigOutput {
	return i.ToEndpointConfigAsyncInferenceOutputConfigOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceOutputConfigArgs) ToEndpointConfigAsyncInferenceOutputConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceOutputConfigOutput)
}

func (i EndpointConfigAsyncInferenceOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceOutputConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceOutputConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceOutputConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigAsyncInferenceOutputConfigArgs) ToEndpointConfigAsyncInferenceOutputConfigPtrOutput() EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigAsyncInferenceOutputConfigArgs) ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceOutputConfigOutput).ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx)
}

// EndpointConfigAsyncInferenceOutputConfigPtrInput is an input type that accepts EndpointConfigAsyncInferenceOutputConfigArgs, EndpointConfigAsyncInferenceOutputConfigPtr and EndpointConfigAsyncInferenceOutputConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigAsyncInferenceOutputConfigPtrInput` via:
//
//	        EndpointConfigAsyncInferenceOutputConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigAsyncInferenceOutputConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigAsyncInferenceOutputConfigPtrOutput() EndpointConfigAsyncInferenceOutputConfigPtrOutput
	ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(context.Context) EndpointConfigAsyncInferenceOutputConfigPtrOutput
}

type endpointConfigAsyncInferenceOutputConfigPtrType EndpointConfigAsyncInferenceOutputConfigArgs

func EndpointConfigAsyncInferenceOutputConfigPtr(v *EndpointConfigAsyncInferenceOutputConfigArgs) EndpointConfigAsyncInferenceOutputConfigPtrInput {
	return (*endpointConfigAsyncInferenceOutputConfigPtrType)(v)
}

func (*endpointConfigAsyncInferenceOutputConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceOutputConfig)(nil)).Elem()
}

func (i *endpointConfigAsyncInferenceOutputConfigPtrType) ToEndpointConfigAsyncInferenceOutputConfigPtrOutput() EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return i.ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigAsyncInferenceOutputConfigPtrType) ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigAsyncInferenceOutputConfigPtrOutput)
}

func (i *endpointConfigAsyncInferenceOutputConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceOutputConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceOutputConfig]{
		OutputState: i.ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigAsyncInferenceOutputConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigAsyncInferenceOutputConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) ToEndpointConfigAsyncInferenceOutputConfigOutput() EndpointConfigAsyncInferenceOutputConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) ToEndpointConfigAsyncInferenceOutputConfigOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigOutput {
	return o
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) ToEndpointConfigAsyncInferenceOutputConfigPtrOutput() EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return o.ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigAsyncInferenceOutputConfig) *EndpointConfigAsyncInferenceOutputConfig {
		return &v
	}).(EndpointConfigAsyncInferenceOutputConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigAsyncInferenceOutputConfig] {
	return pulumix.Output[EndpointConfigAsyncInferenceOutputConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) NotificationConfig() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceOutputConfig) *EndpointConfigAsyncInferenceNotificationConfig {
		return v.NotificationConfig
	}).(EndpointConfigAsyncInferenceNotificationConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) S3FailurePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceOutputConfig) *string { return v.S3FailurePath }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigAsyncInferenceOutputConfig) *string { return v.S3OutputPath }).(pulumi.StringPtrOutput)
}

type EndpointConfigAsyncInferenceOutputConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigAsyncInferenceOutputConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigAsyncInferenceOutputConfig)(nil)).Elem()
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) ToEndpointConfigAsyncInferenceOutputConfigPtrOutput() EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) ToEndpointConfigAsyncInferenceOutputConfigPtrOutputWithContext(ctx context.Context) EndpointConfigAsyncInferenceOutputConfigPtrOutput {
	return o
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigAsyncInferenceOutputConfig] {
	return pulumix.Output[*EndpointConfigAsyncInferenceOutputConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) Elem() EndpointConfigAsyncInferenceOutputConfigOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceOutputConfig) EndpointConfigAsyncInferenceOutputConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigAsyncInferenceOutputConfig
		return ret
	}).(EndpointConfigAsyncInferenceOutputConfigOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceOutputConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) NotificationConfig() EndpointConfigAsyncInferenceNotificationConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceOutputConfig) *EndpointConfigAsyncInferenceNotificationConfig {
		if v == nil {
			return nil
		}
		return v.NotificationConfig
	}).(EndpointConfigAsyncInferenceNotificationConfigPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) S3FailurePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceOutputConfig) *string {
		if v == nil {
			return nil
		}
		return v.S3FailurePath
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigAsyncInferenceOutputConfigPtrOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigAsyncInferenceOutputConfig) *string {
		if v == nil {
			return nil
		}
		return v.S3OutputPath
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigCaptureContentTypeHeader struct {
	CsvContentTypes  []string `pulumi:"csvContentTypes"`
	JsonContentTypes []string `pulumi:"jsonContentTypes"`
}

// EndpointConfigCaptureContentTypeHeaderInput is an input type that accepts EndpointConfigCaptureContentTypeHeaderArgs and EndpointConfigCaptureContentTypeHeaderOutput values.
// You can construct a concrete instance of `EndpointConfigCaptureContentTypeHeaderInput` via:
//
//	EndpointConfigCaptureContentTypeHeaderArgs{...}
type EndpointConfigCaptureContentTypeHeaderInput interface {
	pulumi.Input

	ToEndpointConfigCaptureContentTypeHeaderOutput() EndpointConfigCaptureContentTypeHeaderOutput
	ToEndpointConfigCaptureContentTypeHeaderOutputWithContext(context.Context) EndpointConfigCaptureContentTypeHeaderOutput
}

type EndpointConfigCaptureContentTypeHeaderArgs struct {
	CsvContentTypes  pulumi.StringArrayInput `pulumi:"csvContentTypes"`
	JsonContentTypes pulumi.StringArrayInput `pulumi:"jsonContentTypes"`
}

func (EndpointConfigCaptureContentTypeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (i EndpointConfigCaptureContentTypeHeaderArgs) ToEndpointConfigCaptureContentTypeHeaderOutput() EndpointConfigCaptureContentTypeHeaderOutput {
	return i.ToEndpointConfigCaptureContentTypeHeaderOutputWithContext(context.Background())
}

func (i EndpointConfigCaptureContentTypeHeaderArgs) ToEndpointConfigCaptureContentTypeHeaderOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigCaptureContentTypeHeaderOutput)
}

func (i EndpointConfigCaptureContentTypeHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigCaptureContentTypeHeader] {
	return pulumix.Output[EndpointConfigCaptureContentTypeHeader]{
		OutputState: i.ToEndpointConfigCaptureContentTypeHeaderOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigCaptureContentTypeHeaderArgs) ToEndpointConfigCaptureContentTypeHeaderPtrOutput() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return i.ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (i EndpointConfigCaptureContentTypeHeaderArgs) ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigCaptureContentTypeHeaderOutput).ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx)
}

// EndpointConfigCaptureContentTypeHeaderPtrInput is an input type that accepts EndpointConfigCaptureContentTypeHeaderArgs, EndpointConfigCaptureContentTypeHeaderPtr and EndpointConfigCaptureContentTypeHeaderPtrOutput values.
// You can construct a concrete instance of `EndpointConfigCaptureContentTypeHeaderPtrInput` via:
//
//	        EndpointConfigCaptureContentTypeHeaderArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigCaptureContentTypeHeaderPtrInput interface {
	pulumi.Input

	ToEndpointConfigCaptureContentTypeHeaderPtrOutput() EndpointConfigCaptureContentTypeHeaderPtrOutput
	ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(context.Context) EndpointConfigCaptureContentTypeHeaderPtrOutput
}

type endpointConfigCaptureContentTypeHeaderPtrType EndpointConfigCaptureContentTypeHeaderArgs

func EndpointConfigCaptureContentTypeHeaderPtr(v *EndpointConfigCaptureContentTypeHeaderArgs) EndpointConfigCaptureContentTypeHeaderPtrInput {
	return (*endpointConfigCaptureContentTypeHeaderPtrType)(v)
}

func (*endpointConfigCaptureContentTypeHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (i *endpointConfigCaptureContentTypeHeaderPtrType) ToEndpointConfigCaptureContentTypeHeaderPtrOutput() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return i.ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (i *endpointConfigCaptureContentTypeHeaderPtrType) ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigCaptureContentTypeHeaderPtrOutput)
}

func (i *endpointConfigCaptureContentTypeHeaderPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigCaptureContentTypeHeader] {
	return pulumix.Output[*EndpointConfigCaptureContentTypeHeader]{
		OutputState: i.ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigCaptureContentTypeHeaderOutput struct{ *pulumi.OutputState }

func (EndpointConfigCaptureContentTypeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) ToEndpointConfigCaptureContentTypeHeaderOutput() EndpointConfigCaptureContentTypeHeaderOutput {
	return o
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) ToEndpointConfigCaptureContentTypeHeaderOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderOutput {
	return o
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) ToEndpointConfigCaptureContentTypeHeaderPtrOutput() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o.ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigCaptureContentTypeHeader) *EndpointConfigCaptureContentTypeHeader {
		return &v
	}).(EndpointConfigCaptureContentTypeHeaderPtrOutput)
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigCaptureContentTypeHeader] {
	return pulumix.Output[EndpointConfigCaptureContentTypeHeader]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) CsvContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigCaptureContentTypeHeader) []string { return v.CsvContentTypes }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigCaptureContentTypeHeaderOutput) JsonContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigCaptureContentTypeHeader) []string { return v.JsonContentTypes }).(pulumi.StringArrayOutput)
}

type EndpointConfigCaptureContentTypeHeaderPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigCaptureContentTypeHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) ToEndpointConfigCaptureContentTypeHeaderPtrOutput() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) ToEndpointConfigCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigCaptureContentTypeHeader] {
	return pulumix.Output[*EndpointConfigCaptureContentTypeHeader]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) Elem() EndpointConfigCaptureContentTypeHeaderOutput {
	return o.ApplyT(func(v *EndpointConfigCaptureContentTypeHeader) EndpointConfigCaptureContentTypeHeader {
		if v != nil {
			return *v
		}
		var ret EndpointConfigCaptureContentTypeHeader
		return ret
	}).(EndpointConfigCaptureContentTypeHeaderOutput)
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) CsvContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointConfigCaptureContentTypeHeader) []string {
		if v == nil {
			return nil
		}
		return v.CsvContentTypes
	}).(pulumi.StringArrayOutput)
}

func (o EndpointConfigCaptureContentTypeHeaderPtrOutput) JsonContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointConfigCaptureContentTypeHeader) []string {
		if v == nil {
			return nil
		}
		return v.JsonContentTypes
	}).(pulumi.StringArrayOutput)
}

type EndpointConfigCaptureOption struct {
	CaptureMode string `pulumi:"captureMode"`
}

// EndpointConfigCaptureOptionInput is an input type that accepts EndpointConfigCaptureOptionArgs and EndpointConfigCaptureOptionOutput values.
// You can construct a concrete instance of `EndpointConfigCaptureOptionInput` via:
//
//	EndpointConfigCaptureOptionArgs{...}
type EndpointConfigCaptureOptionInput interface {
	pulumi.Input

	ToEndpointConfigCaptureOptionOutput() EndpointConfigCaptureOptionOutput
	ToEndpointConfigCaptureOptionOutputWithContext(context.Context) EndpointConfigCaptureOptionOutput
}

type EndpointConfigCaptureOptionArgs struct {
	CaptureMode pulumi.StringInput `pulumi:"captureMode"`
}

func (EndpointConfigCaptureOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigCaptureOption)(nil)).Elem()
}

func (i EndpointConfigCaptureOptionArgs) ToEndpointConfigCaptureOptionOutput() EndpointConfigCaptureOptionOutput {
	return i.ToEndpointConfigCaptureOptionOutputWithContext(context.Background())
}

func (i EndpointConfigCaptureOptionArgs) ToEndpointConfigCaptureOptionOutputWithContext(ctx context.Context) EndpointConfigCaptureOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigCaptureOptionOutput)
}

func (i EndpointConfigCaptureOptionArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigCaptureOption] {
	return pulumix.Output[EndpointConfigCaptureOption]{
		OutputState: i.ToEndpointConfigCaptureOptionOutputWithContext(ctx).OutputState,
	}
}

// EndpointConfigCaptureOptionArrayInput is an input type that accepts EndpointConfigCaptureOptionArray and EndpointConfigCaptureOptionArrayOutput values.
// You can construct a concrete instance of `EndpointConfigCaptureOptionArrayInput` via:
//
//	EndpointConfigCaptureOptionArray{ EndpointConfigCaptureOptionArgs{...} }
type EndpointConfigCaptureOptionArrayInput interface {
	pulumi.Input

	ToEndpointConfigCaptureOptionArrayOutput() EndpointConfigCaptureOptionArrayOutput
	ToEndpointConfigCaptureOptionArrayOutputWithContext(context.Context) EndpointConfigCaptureOptionArrayOutput
}

type EndpointConfigCaptureOptionArray []EndpointConfigCaptureOptionInput

func (EndpointConfigCaptureOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigCaptureOption)(nil)).Elem()
}

func (i EndpointConfigCaptureOptionArray) ToEndpointConfigCaptureOptionArrayOutput() EndpointConfigCaptureOptionArrayOutput {
	return i.ToEndpointConfigCaptureOptionArrayOutputWithContext(context.Background())
}

func (i EndpointConfigCaptureOptionArray) ToEndpointConfigCaptureOptionArrayOutputWithContext(ctx context.Context) EndpointConfigCaptureOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigCaptureOptionArrayOutput)
}

func (i EndpointConfigCaptureOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigCaptureOption] {
	return pulumix.Output[[]EndpointConfigCaptureOption]{
		OutputState: i.ToEndpointConfigCaptureOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigCaptureOptionOutput struct{ *pulumi.OutputState }

func (EndpointConfigCaptureOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigCaptureOption)(nil)).Elem()
}

func (o EndpointConfigCaptureOptionOutput) ToEndpointConfigCaptureOptionOutput() EndpointConfigCaptureOptionOutput {
	return o
}

func (o EndpointConfigCaptureOptionOutput) ToEndpointConfigCaptureOptionOutputWithContext(ctx context.Context) EndpointConfigCaptureOptionOutput {
	return o
}

func (o EndpointConfigCaptureOptionOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigCaptureOption] {
	return pulumix.Output[EndpointConfigCaptureOption]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigCaptureOptionOutput) CaptureMode() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigCaptureOption) string { return v.CaptureMode }).(pulumi.StringOutput)
}

type EndpointConfigCaptureOptionArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigCaptureOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigCaptureOption)(nil)).Elem()
}

func (o EndpointConfigCaptureOptionArrayOutput) ToEndpointConfigCaptureOptionArrayOutput() EndpointConfigCaptureOptionArrayOutput {
	return o
}

func (o EndpointConfigCaptureOptionArrayOutput) ToEndpointConfigCaptureOptionArrayOutputWithContext(ctx context.Context) EndpointConfigCaptureOptionArrayOutput {
	return o
}

func (o EndpointConfigCaptureOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigCaptureOption] {
	return pulumix.Output[[]EndpointConfigCaptureOption]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigCaptureOptionArrayOutput) Index(i pulumi.IntInput) EndpointConfigCaptureOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigCaptureOption {
		return vs[0].([]EndpointConfigCaptureOption)[vs[1].(int)]
	}).(EndpointConfigCaptureOptionOutput)
}

type EndpointConfigClarifyExplainerConfig struct {
	EnableExplanations *string                               `pulumi:"enableExplanations"`
	InferenceConfig    *EndpointConfigClarifyInferenceConfig `pulumi:"inferenceConfig"`
	ShapConfig         EndpointConfigClarifyShapConfig       `pulumi:"shapConfig"`
}

// EndpointConfigClarifyExplainerConfigInput is an input type that accepts EndpointConfigClarifyExplainerConfigArgs and EndpointConfigClarifyExplainerConfigOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyExplainerConfigInput` via:
//
//	EndpointConfigClarifyExplainerConfigArgs{...}
type EndpointConfigClarifyExplainerConfigInput interface {
	pulumi.Input

	ToEndpointConfigClarifyExplainerConfigOutput() EndpointConfigClarifyExplainerConfigOutput
	ToEndpointConfigClarifyExplainerConfigOutputWithContext(context.Context) EndpointConfigClarifyExplainerConfigOutput
}

type EndpointConfigClarifyExplainerConfigArgs struct {
	EnableExplanations pulumi.StringPtrInput                        `pulumi:"enableExplanations"`
	InferenceConfig    EndpointConfigClarifyInferenceConfigPtrInput `pulumi:"inferenceConfig"`
	ShapConfig         EndpointConfigClarifyShapConfigInput         `pulumi:"shapConfig"`
}

func (EndpointConfigClarifyExplainerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyExplainerConfig)(nil)).Elem()
}

func (i EndpointConfigClarifyExplainerConfigArgs) ToEndpointConfigClarifyExplainerConfigOutput() EndpointConfigClarifyExplainerConfigOutput {
	return i.ToEndpointConfigClarifyExplainerConfigOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyExplainerConfigArgs) ToEndpointConfigClarifyExplainerConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyExplainerConfigOutput)
}

func (i EndpointConfigClarifyExplainerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyExplainerConfig] {
	return pulumix.Output[EndpointConfigClarifyExplainerConfig]{
		OutputState: i.ToEndpointConfigClarifyExplainerConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigClarifyExplainerConfigArgs) ToEndpointConfigClarifyExplainerConfigPtrOutput() EndpointConfigClarifyExplainerConfigPtrOutput {
	return i.ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyExplainerConfigArgs) ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyExplainerConfigOutput).ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx)
}

// EndpointConfigClarifyExplainerConfigPtrInput is an input type that accepts EndpointConfigClarifyExplainerConfigArgs, EndpointConfigClarifyExplainerConfigPtr and EndpointConfigClarifyExplainerConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyExplainerConfigPtrInput` via:
//
//	        EndpointConfigClarifyExplainerConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigClarifyExplainerConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigClarifyExplainerConfigPtrOutput() EndpointConfigClarifyExplainerConfigPtrOutput
	ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(context.Context) EndpointConfigClarifyExplainerConfigPtrOutput
}

type endpointConfigClarifyExplainerConfigPtrType EndpointConfigClarifyExplainerConfigArgs

func EndpointConfigClarifyExplainerConfigPtr(v *EndpointConfigClarifyExplainerConfigArgs) EndpointConfigClarifyExplainerConfigPtrInput {
	return (*endpointConfigClarifyExplainerConfigPtrType)(v)
}

func (*endpointConfigClarifyExplainerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyExplainerConfig)(nil)).Elem()
}

func (i *endpointConfigClarifyExplainerConfigPtrType) ToEndpointConfigClarifyExplainerConfigPtrOutput() EndpointConfigClarifyExplainerConfigPtrOutput {
	return i.ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigClarifyExplainerConfigPtrType) ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyExplainerConfigPtrOutput)
}

func (i *endpointConfigClarifyExplainerConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyExplainerConfig] {
	return pulumix.Output[*EndpointConfigClarifyExplainerConfig]{
		OutputState: i.ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyExplainerConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyExplainerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyExplainerConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyExplainerConfigOutput) ToEndpointConfigClarifyExplainerConfigOutput() EndpointConfigClarifyExplainerConfigOutput {
	return o
}

func (o EndpointConfigClarifyExplainerConfigOutput) ToEndpointConfigClarifyExplainerConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigOutput {
	return o
}

func (o EndpointConfigClarifyExplainerConfigOutput) ToEndpointConfigClarifyExplainerConfigPtrOutput() EndpointConfigClarifyExplainerConfigPtrOutput {
	return o.ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigClarifyExplainerConfigOutput) ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigClarifyExplainerConfig) *EndpointConfigClarifyExplainerConfig {
		return &v
	}).(EndpointConfigClarifyExplainerConfigPtrOutput)
}

func (o EndpointConfigClarifyExplainerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyExplainerConfig] {
	return pulumix.Output[EndpointConfigClarifyExplainerConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyExplainerConfigOutput) EnableExplanations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyExplainerConfig) *string { return v.EnableExplanations }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyExplainerConfigOutput) InferenceConfig() EndpointConfigClarifyInferenceConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyExplainerConfig) *EndpointConfigClarifyInferenceConfig {
		return v.InferenceConfig
	}).(EndpointConfigClarifyInferenceConfigPtrOutput)
}

func (o EndpointConfigClarifyExplainerConfigOutput) ShapConfig() EndpointConfigClarifyShapConfigOutput {
	return o.ApplyT(func(v EndpointConfigClarifyExplainerConfig) EndpointConfigClarifyShapConfig { return v.ShapConfig }).(EndpointConfigClarifyShapConfigOutput)
}

type EndpointConfigClarifyExplainerConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyExplainerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyExplainerConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) ToEndpointConfigClarifyExplainerConfigPtrOutput() EndpointConfigClarifyExplainerConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) ToEndpointConfigClarifyExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyExplainerConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyExplainerConfig] {
	return pulumix.Output[*EndpointConfigClarifyExplainerConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) Elem() EndpointConfigClarifyExplainerConfigOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyExplainerConfig) EndpointConfigClarifyExplainerConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigClarifyExplainerConfig
		return ret
	}).(EndpointConfigClarifyExplainerConfigOutput)
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) EnableExplanations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyExplainerConfig) *string {
		if v == nil {
			return nil
		}
		return v.EnableExplanations
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) InferenceConfig() EndpointConfigClarifyInferenceConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyExplainerConfig) *EndpointConfigClarifyInferenceConfig {
		if v == nil {
			return nil
		}
		return v.InferenceConfig
	}).(EndpointConfigClarifyInferenceConfigPtrOutput)
}

func (o EndpointConfigClarifyExplainerConfigPtrOutput) ShapConfig() EndpointConfigClarifyShapConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyExplainerConfig) *EndpointConfigClarifyShapConfig {
		if v == nil {
			return nil
		}
		return &v.ShapConfig
	}).(EndpointConfigClarifyShapConfigPtrOutput)
}

type EndpointConfigClarifyFeatureType struct {
}

// EndpointConfigClarifyFeatureTypeInput is an input type that accepts EndpointConfigClarifyFeatureTypeArgs and EndpointConfigClarifyFeatureTypeOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyFeatureTypeInput` via:
//
//	EndpointConfigClarifyFeatureTypeArgs{...}
type EndpointConfigClarifyFeatureTypeInput interface {
	pulumi.Input

	ToEndpointConfigClarifyFeatureTypeOutput() EndpointConfigClarifyFeatureTypeOutput
	ToEndpointConfigClarifyFeatureTypeOutputWithContext(context.Context) EndpointConfigClarifyFeatureTypeOutput
}

type EndpointConfigClarifyFeatureTypeArgs struct {
}

func (EndpointConfigClarifyFeatureTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyFeatureType)(nil)).Elem()
}

func (i EndpointConfigClarifyFeatureTypeArgs) ToEndpointConfigClarifyFeatureTypeOutput() EndpointConfigClarifyFeatureTypeOutput {
	return i.ToEndpointConfigClarifyFeatureTypeOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyFeatureTypeArgs) ToEndpointConfigClarifyFeatureTypeOutputWithContext(ctx context.Context) EndpointConfigClarifyFeatureTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyFeatureTypeOutput)
}

func (i EndpointConfigClarifyFeatureTypeArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyFeatureType] {
	return pulumix.Output[EndpointConfigClarifyFeatureType]{
		OutputState: i.ToEndpointConfigClarifyFeatureTypeOutputWithContext(ctx).OutputState,
	}
}

// EndpointConfigClarifyFeatureTypeArrayInput is an input type that accepts EndpointConfigClarifyFeatureTypeArray and EndpointConfigClarifyFeatureTypeArrayOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyFeatureTypeArrayInput` via:
//
//	EndpointConfigClarifyFeatureTypeArray{ EndpointConfigClarifyFeatureTypeArgs{...} }
type EndpointConfigClarifyFeatureTypeArrayInput interface {
	pulumi.Input

	ToEndpointConfigClarifyFeatureTypeArrayOutput() EndpointConfigClarifyFeatureTypeArrayOutput
	ToEndpointConfigClarifyFeatureTypeArrayOutputWithContext(context.Context) EndpointConfigClarifyFeatureTypeArrayOutput
}

type EndpointConfigClarifyFeatureTypeArray []EndpointConfigClarifyFeatureTypeInput

func (EndpointConfigClarifyFeatureTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigClarifyFeatureType)(nil)).Elem()
}

func (i EndpointConfigClarifyFeatureTypeArray) ToEndpointConfigClarifyFeatureTypeArrayOutput() EndpointConfigClarifyFeatureTypeArrayOutput {
	return i.ToEndpointConfigClarifyFeatureTypeArrayOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyFeatureTypeArray) ToEndpointConfigClarifyFeatureTypeArrayOutputWithContext(ctx context.Context) EndpointConfigClarifyFeatureTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyFeatureTypeArrayOutput)
}

func (i EndpointConfigClarifyFeatureTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigClarifyFeatureType] {
	return pulumix.Output[[]EndpointConfigClarifyFeatureType]{
		OutputState: i.ToEndpointConfigClarifyFeatureTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyFeatureTypeOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyFeatureTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyFeatureType)(nil)).Elem()
}

func (o EndpointConfigClarifyFeatureTypeOutput) ToEndpointConfigClarifyFeatureTypeOutput() EndpointConfigClarifyFeatureTypeOutput {
	return o
}

func (o EndpointConfigClarifyFeatureTypeOutput) ToEndpointConfigClarifyFeatureTypeOutputWithContext(ctx context.Context) EndpointConfigClarifyFeatureTypeOutput {
	return o
}

func (o EndpointConfigClarifyFeatureTypeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyFeatureType] {
	return pulumix.Output[EndpointConfigClarifyFeatureType]{
		OutputState: o.OutputState,
	}
}

type EndpointConfigClarifyFeatureTypeArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyFeatureTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigClarifyFeatureType)(nil)).Elem()
}

func (o EndpointConfigClarifyFeatureTypeArrayOutput) ToEndpointConfigClarifyFeatureTypeArrayOutput() EndpointConfigClarifyFeatureTypeArrayOutput {
	return o
}

func (o EndpointConfigClarifyFeatureTypeArrayOutput) ToEndpointConfigClarifyFeatureTypeArrayOutputWithContext(ctx context.Context) EndpointConfigClarifyFeatureTypeArrayOutput {
	return o
}

func (o EndpointConfigClarifyFeatureTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigClarifyFeatureType] {
	return pulumix.Output[[]EndpointConfigClarifyFeatureType]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyFeatureTypeArrayOutput) Index(i pulumi.IntInput) EndpointConfigClarifyFeatureTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigClarifyFeatureType {
		return vs[0].([]EndpointConfigClarifyFeatureType)[vs[1].(int)]
	}).(EndpointConfigClarifyFeatureTypeOutput)
}

type EndpointConfigClarifyHeader struct {
}

// EndpointConfigClarifyHeaderInput is an input type that accepts EndpointConfigClarifyHeaderArgs and EndpointConfigClarifyHeaderOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyHeaderInput` via:
//
//	EndpointConfigClarifyHeaderArgs{...}
type EndpointConfigClarifyHeaderInput interface {
	pulumi.Input

	ToEndpointConfigClarifyHeaderOutput() EndpointConfigClarifyHeaderOutput
	ToEndpointConfigClarifyHeaderOutputWithContext(context.Context) EndpointConfigClarifyHeaderOutput
}

type EndpointConfigClarifyHeaderArgs struct {
}

func (EndpointConfigClarifyHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyHeader)(nil)).Elem()
}

func (i EndpointConfigClarifyHeaderArgs) ToEndpointConfigClarifyHeaderOutput() EndpointConfigClarifyHeaderOutput {
	return i.ToEndpointConfigClarifyHeaderOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyHeaderArgs) ToEndpointConfigClarifyHeaderOutputWithContext(ctx context.Context) EndpointConfigClarifyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyHeaderOutput)
}

func (i EndpointConfigClarifyHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyHeader] {
	return pulumix.Output[EndpointConfigClarifyHeader]{
		OutputState: i.ToEndpointConfigClarifyHeaderOutputWithContext(ctx).OutputState,
	}
}

// EndpointConfigClarifyHeaderArrayInput is an input type that accepts EndpointConfigClarifyHeaderArray and EndpointConfigClarifyHeaderArrayOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyHeaderArrayInput` via:
//
//	EndpointConfigClarifyHeaderArray{ EndpointConfigClarifyHeaderArgs{...} }
type EndpointConfigClarifyHeaderArrayInput interface {
	pulumi.Input

	ToEndpointConfigClarifyHeaderArrayOutput() EndpointConfigClarifyHeaderArrayOutput
	ToEndpointConfigClarifyHeaderArrayOutputWithContext(context.Context) EndpointConfigClarifyHeaderArrayOutput
}

type EndpointConfigClarifyHeaderArray []EndpointConfigClarifyHeaderInput

func (EndpointConfigClarifyHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigClarifyHeader)(nil)).Elem()
}

func (i EndpointConfigClarifyHeaderArray) ToEndpointConfigClarifyHeaderArrayOutput() EndpointConfigClarifyHeaderArrayOutput {
	return i.ToEndpointConfigClarifyHeaderArrayOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyHeaderArray) ToEndpointConfigClarifyHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigClarifyHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyHeaderArrayOutput)
}

func (i EndpointConfigClarifyHeaderArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigClarifyHeader] {
	return pulumix.Output[[]EndpointConfigClarifyHeader]{
		OutputState: i.ToEndpointConfigClarifyHeaderArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyHeaderOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyHeader)(nil)).Elem()
}

func (o EndpointConfigClarifyHeaderOutput) ToEndpointConfigClarifyHeaderOutput() EndpointConfigClarifyHeaderOutput {
	return o
}

func (o EndpointConfigClarifyHeaderOutput) ToEndpointConfigClarifyHeaderOutputWithContext(ctx context.Context) EndpointConfigClarifyHeaderOutput {
	return o
}

func (o EndpointConfigClarifyHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyHeader] {
	return pulumix.Output[EndpointConfigClarifyHeader]{
		OutputState: o.OutputState,
	}
}

type EndpointConfigClarifyHeaderArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigClarifyHeader)(nil)).Elem()
}

func (o EndpointConfigClarifyHeaderArrayOutput) ToEndpointConfigClarifyHeaderArrayOutput() EndpointConfigClarifyHeaderArrayOutput {
	return o
}

func (o EndpointConfigClarifyHeaderArrayOutput) ToEndpointConfigClarifyHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigClarifyHeaderArrayOutput {
	return o
}

func (o EndpointConfigClarifyHeaderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigClarifyHeader] {
	return pulumix.Output[[]EndpointConfigClarifyHeader]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyHeaderArrayOutput) Index(i pulumi.IntInput) EndpointConfigClarifyHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigClarifyHeader {
		return vs[0].([]EndpointConfigClarifyHeader)[vs[1].(int)]
	}).(EndpointConfigClarifyHeaderOutput)
}

type EndpointConfigClarifyInferenceConfig struct {
	ContentTemplate      *string                            `pulumi:"contentTemplate"`
	FeatureHeaders       []EndpointConfigClarifyHeader      `pulumi:"featureHeaders"`
	FeatureTypes         []EndpointConfigClarifyFeatureType `pulumi:"featureTypes"`
	FeaturesAttribute    *string                            `pulumi:"featuresAttribute"`
	LabelAttribute       *string                            `pulumi:"labelAttribute"`
	LabelHeaders         []EndpointConfigClarifyHeader      `pulumi:"labelHeaders"`
	LabelIndex           *int                               `pulumi:"labelIndex"`
	MaxPayloadInMb       *int                               `pulumi:"maxPayloadInMb"`
	MaxRecordCount       *int                               `pulumi:"maxRecordCount"`
	ProbabilityAttribute *string                            `pulumi:"probabilityAttribute"`
	ProbabilityIndex     *int                               `pulumi:"probabilityIndex"`
}

// EndpointConfigClarifyInferenceConfigInput is an input type that accepts EndpointConfigClarifyInferenceConfigArgs and EndpointConfigClarifyInferenceConfigOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyInferenceConfigInput` via:
//
//	EndpointConfigClarifyInferenceConfigArgs{...}
type EndpointConfigClarifyInferenceConfigInput interface {
	pulumi.Input

	ToEndpointConfigClarifyInferenceConfigOutput() EndpointConfigClarifyInferenceConfigOutput
	ToEndpointConfigClarifyInferenceConfigOutputWithContext(context.Context) EndpointConfigClarifyInferenceConfigOutput
}

type EndpointConfigClarifyInferenceConfigArgs struct {
	ContentTemplate      pulumi.StringPtrInput                      `pulumi:"contentTemplate"`
	FeatureHeaders       EndpointConfigClarifyHeaderArrayInput      `pulumi:"featureHeaders"`
	FeatureTypes         EndpointConfigClarifyFeatureTypeArrayInput `pulumi:"featureTypes"`
	FeaturesAttribute    pulumi.StringPtrInput                      `pulumi:"featuresAttribute"`
	LabelAttribute       pulumi.StringPtrInput                      `pulumi:"labelAttribute"`
	LabelHeaders         EndpointConfigClarifyHeaderArrayInput      `pulumi:"labelHeaders"`
	LabelIndex           pulumi.IntPtrInput                         `pulumi:"labelIndex"`
	MaxPayloadInMb       pulumi.IntPtrInput                         `pulumi:"maxPayloadInMb"`
	MaxRecordCount       pulumi.IntPtrInput                         `pulumi:"maxRecordCount"`
	ProbabilityAttribute pulumi.StringPtrInput                      `pulumi:"probabilityAttribute"`
	ProbabilityIndex     pulumi.IntPtrInput                         `pulumi:"probabilityIndex"`
}

func (EndpointConfigClarifyInferenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyInferenceConfig)(nil)).Elem()
}

func (i EndpointConfigClarifyInferenceConfigArgs) ToEndpointConfigClarifyInferenceConfigOutput() EndpointConfigClarifyInferenceConfigOutput {
	return i.ToEndpointConfigClarifyInferenceConfigOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyInferenceConfigArgs) ToEndpointConfigClarifyInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyInferenceConfigOutput)
}

func (i EndpointConfigClarifyInferenceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyInferenceConfig] {
	return pulumix.Output[EndpointConfigClarifyInferenceConfig]{
		OutputState: i.ToEndpointConfigClarifyInferenceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigClarifyInferenceConfigArgs) ToEndpointConfigClarifyInferenceConfigPtrOutput() EndpointConfigClarifyInferenceConfigPtrOutput {
	return i.ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyInferenceConfigArgs) ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyInferenceConfigOutput).ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx)
}

// EndpointConfigClarifyInferenceConfigPtrInput is an input type that accepts EndpointConfigClarifyInferenceConfigArgs, EndpointConfigClarifyInferenceConfigPtr and EndpointConfigClarifyInferenceConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyInferenceConfigPtrInput` via:
//
//	        EndpointConfigClarifyInferenceConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigClarifyInferenceConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigClarifyInferenceConfigPtrOutput() EndpointConfigClarifyInferenceConfigPtrOutput
	ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(context.Context) EndpointConfigClarifyInferenceConfigPtrOutput
}

type endpointConfigClarifyInferenceConfigPtrType EndpointConfigClarifyInferenceConfigArgs

func EndpointConfigClarifyInferenceConfigPtr(v *EndpointConfigClarifyInferenceConfigArgs) EndpointConfigClarifyInferenceConfigPtrInput {
	return (*endpointConfigClarifyInferenceConfigPtrType)(v)
}

func (*endpointConfigClarifyInferenceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyInferenceConfig)(nil)).Elem()
}

func (i *endpointConfigClarifyInferenceConfigPtrType) ToEndpointConfigClarifyInferenceConfigPtrOutput() EndpointConfigClarifyInferenceConfigPtrOutput {
	return i.ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigClarifyInferenceConfigPtrType) ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyInferenceConfigPtrOutput)
}

func (i *endpointConfigClarifyInferenceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyInferenceConfig] {
	return pulumix.Output[*EndpointConfigClarifyInferenceConfig]{
		OutputState: i.ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyInferenceConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyInferenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyInferenceConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyInferenceConfigOutput) ToEndpointConfigClarifyInferenceConfigOutput() EndpointConfigClarifyInferenceConfigOutput {
	return o
}

func (o EndpointConfigClarifyInferenceConfigOutput) ToEndpointConfigClarifyInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigOutput {
	return o
}

func (o EndpointConfigClarifyInferenceConfigOutput) ToEndpointConfigClarifyInferenceConfigPtrOutput() EndpointConfigClarifyInferenceConfigPtrOutput {
	return o.ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigClarifyInferenceConfigOutput) ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigClarifyInferenceConfig) *EndpointConfigClarifyInferenceConfig {
		return &v
	}).(EndpointConfigClarifyInferenceConfigPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyInferenceConfig] {
	return pulumix.Output[EndpointConfigClarifyInferenceConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyInferenceConfigOutput) ContentTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *string { return v.ContentTemplate }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) FeatureHeaders() EndpointConfigClarifyHeaderArrayOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyHeader { return v.FeatureHeaders }).(EndpointConfigClarifyHeaderArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) FeatureTypes() EndpointConfigClarifyFeatureTypeArrayOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyFeatureType { return v.FeatureTypes }).(EndpointConfigClarifyFeatureTypeArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *string { return v.FeaturesAttribute }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) LabelAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *string { return v.LabelAttribute }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) LabelHeaders() EndpointConfigClarifyHeaderArrayOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyHeader { return v.LabelHeaders }).(EndpointConfigClarifyHeaderArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) LabelIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *int { return v.LabelIndex }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) MaxPayloadInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *int { return v.MaxPayloadInMb }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) MaxRecordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *int { return v.MaxRecordCount }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigOutput) ProbabilityIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyInferenceConfig) *int { return v.ProbabilityIndex }).(pulumi.IntPtrOutput)
}

type EndpointConfigClarifyInferenceConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyInferenceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyInferenceConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ToEndpointConfigClarifyInferenceConfigPtrOutput() EndpointConfigClarifyInferenceConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ToEndpointConfigClarifyInferenceConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyInferenceConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyInferenceConfig] {
	return pulumix.Output[*EndpointConfigClarifyInferenceConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) Elem() EndpointConfigClarifyInferenceConfigOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) EndpointConfigClarifyInferenceConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigClarifyInferenceConfig
		return ret
	}).(EndpointConfigClarifyInferenceConfigOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ContentTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContentTemplate
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) FeatureHeaders() EndpointConfigClarifyHeaderArrayOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyHeader {
		if v == nil {
			return nil
		}
		return v.FeatureHeaders
	}).(EndpointConfigClarifyHeaderArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) FeatureTypes() EndpointConfigClarifyFeatureTypeArrayOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyFeatureType {
		if v == nil {
			return nil
		}
		return v.FeatureTypes
	}).(EndpointConfigClarifyFeatureTypeArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.FeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) LabelAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.LabelAttribute
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) LabelHeaders() EndpointConfigClarifyHeaderArrayOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) []EndpointConfigClarifyHeader {
		if v == nil {
			return nil
		}
		return v.LabelHeaders
	}).(EndpointConfigClarifyHeaderArrayOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) LabelIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *int {
		if v == nil {
			return nil
		}
		return v.LabelIndex
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) MaxPayloadInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPayloadInMb
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) MaxRecordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxRecordCount
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyInferenceConfigPtrOutput) ProbabilityIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyInferenceConfig) *int {
		if v == nil {
			return nil
		}
		return v.ProbabilityIndex
	}).(pulumi.IntPtrOutput)
}

type EndpointConfigClarifyShapBaselineConfig struct {
	MimeType        *string `pulumi:"mimeType"`
	ShapBaseline    *string `pulumi:"shapBaseline"`
	ShapBaselineUri *string `pulumi:"shapBaselineUri"`
}

// EndpointConfigClarifyShapBaselineConfigInput is an input type that accepts EndpointConfigClarifyShapBaselineConfigArgs and EndpointConfigClarifyShapBaselineConfigOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyShapBaselineConfigInput` via:
//
//	EndpointConfigClarifyShapBaselineConfigArgs{...}
type EndpointConfigClarifyShapBaselineConfigInput interface {
	pulumi.Input

	ToEndpointConfigClarifyShapBaselineConfigOutput() EndpointConfigClarifyShapBaselineConfigOutput
	ToEndpointConfigClarifyShapBaselineConfigOutputWithContext(context.Context) EndpointConfigClarifyShapBaselineConfigOutput
}

type EndpointConfigClarifyShapBaselineConfigArgs struct {
	MimeType        pulumi.StringPtrInput `pulumi:"mimeType"`
	ShapBaseline    pulumi.StringPtrInput `pulumi:"shapBaseline"`
	ShapBaselineUri pulumi.StringPtrInput `pulumi:"shapBaselineUri"`
}

func (EndpointConfigClarifyShapBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyShapBaselineConfig)(nil)).Elem()
}

func (i EndpointConfigClarifyShapBaselineConfigArgs) ToEndpointConfigClarifyShapBaselineConfigOutput() EndpointConfigClarifyShapBaselineConfigOutput {
	return i.ToEndpointConfigClarifyShapBaselineConfigOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyShapBaselineConfigArgs) ToEndpointConfigClarifyShapBaselineConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapBaselineConfigOutput)
}

func (i EndpointConfigClarifyShapBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyShapBaselineConfig] {
	return pulumix.Output[EndpointConfigClarifyShapBaselineConfig]{
		OutputState: i.ToEndpointConfigClarifyShapBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigClarifyShapBaselineConfigArgs) ToEndpointConfigClarifyShapBaselineConfigPtrOutput() EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return i.ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyShapBaselineConfigArgs) ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapBaselineConfigOutput).ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx)
}

// EndpointConfigClarifyShapBaselineConfigPtrInput is an input type that accepts EndpointConfigClarifyShapBaselineConfigArgs, EndpointConfigClarifyShapBaselineConfigPtr and EndpointConfigClarifyShapBaselineConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyShapBaselineConfigPtrInput` via:
//
//	        EndpointConfigClarifyShapBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigClarifyShapBaselineConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigClarifyShapBaselineConfigPtrOutput() EndpointConfigClarifyShapBaselineConfigPtrOutput
	ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(context.Context) EndpointConfigClarifyShapBaselineConfigPtrOutput
}

type endpointConfigClarifyShapBaselineConfigPtrType EndpointConfigClarifyShapBaselineConfigArgs

func EndpointConfigClarifyShapBaselineConfigPtr(v *EndpointConfigClarifyShapBaselineConfigArgs) EndpointConfigClarifyShapBaselineConfigPtrInput {
	return (*endpointConfigClarifyShapBaselineConfigPtrType)(v)
}

func (*endpointConfigClarifyShapBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyShapBaselineConfig)(nil)).Elem()
}

func (i *endpointConfigClarifyShapBaselineConfigPtrType) ToEndpointConfigClarifyShapBaselineConfigPtrOutput() EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return i.ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigClarifyShapBaselineConfigPtrType) ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapBaselineConfigPtrOutput)
}

func (i *endpointConfigClarifyShapBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyShapBaselineConfig] {
	return pulumix.Output[*EndpointConfigClarifyShapBaselineConfig]{
		OutputState: i.ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyShapBaselineConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyShapBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyShapBaselineConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ToEndpointConfigClarifyShapBaselineConfigOutput() EndpointConfigClarifyShapBaselineConfigOutput {
	return o
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ToEndpointConfigClarifyShapBaselineConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigOutput {
	return o
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ToEndpointConfigClarifyShapBaselineConfigPtrOutput() EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return o.ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigClarifyShapBaselineConfig) *EndpointConfigClarifyShapBaselineConfig {
		return &v
	}).(EndpointConfigClarifyShapBaselineConfigPtrOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyShapBaselineConfig] {
	return pulumix.Output[EndpointConfigClarifyShapBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapBaselineConfig) *string { return v.MimeType }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ShapBaseline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapBaselineConfig) *string { return v.ShapBaseline }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigOutput) ShapBaselineUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapBaselineConfig) *string { return v.ShapBaselineUri }).(pulumi.StringPtrOutput)
}

type EndpointConfigClarifyShapBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyShapBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyShapBaselineConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) ToEndpointConfigClarifyShapBaselineConfigPtrOutput() EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) ToEndpointConfigClarifyShapBaselineConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyShapBaselineConfig] {
	return pulumix.Output[*EndpointConfigClarifyShapBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) Elem() EndpointConfigClarifyShapBaselineConfigOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapBaselineConfig) EndpointConfigClarifyShapBaselineConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigClarifyShapBaselineConfig
		return ret
	}).(EndpointConfigClarifyShapBaselineConfigOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) MimeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.MimeType
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) ShapBaseline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.ShapBaseline
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyShapBaselineConfigPtrOutput) ShapBaselineUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.ShapBaselineUri
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigClarifyShapConfig struct {
	NumberOfSamples    *int                                    `pulumi:"numberOfSamples"`
	Seed               *int                                    `pulumi:"seed"`
	ShapBaselineConfig EndpointConfigClarifyShapBaselineConfig `pulumi:"shapBaselineConfig"`
	TextConfig         *EndpointConfigClarifyTextConfig        `pulumi:"textConfig"`
	UseLogit           *bool                                   `pulumi:"useLogit"`
}

// EndpointConfigClarifyShapConfigInput is an input type that accepts EndpointConfigClarifyShapConfigArgs and EndpointConfigClarifyShapConfigOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyShapConfigInput` via:
//
//	EndpointConfigClarifyShapConfigArgs{...}
type EndpointConfigClarifyShapConfigInput interface {
	pulumi.Input

	ToEndpointConfigClarifyShapConfigOutput() EndpointConfigClarifyShapConfigOutput
	ToEndpointConfigClarifyShapConfigOutputWithContext(context.Context) EndpointConfigClarifyShapConfigOutput
}

type EndpointConfigClarifyShapConfigArgs struct {
	NumberOfSamples    pulumi.IntPtrInput                           `pulumi:"numberOfSamples"`
	Seed               pulumi.IntPtrInput                           `pulumi:"seed"`
	ShapBaselineConfig EndpointConfigClarifyShapBaselineConfigInput `pulumi:"shapBaselineConfig"`
	TextConfig         EndpointConfigClarifyTextConfigPtrInput      `pulumi:"textConfig"`
	UseLogit           pulumi.BoolPtrInput                          `pulumi:"useLogit"`
}

func (EndpointConfigClarifyShapConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyShapConfig)(nil)).Elem()
}

func (i EndpointConfigClarifyShapConfigArgs) ToEndpointConfigClarifyShapConfigOutput() EndpointConfigClarifyShapConfigOutput {
	return i.ToEndpointConfigClarifyShapConfigOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyShapConfigArgs) ToEndpointConfigClarifyShapConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapConfigOutput)
}

func (i EndpointConfigClarifyShapConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyShapConfig] {
	return pulumix.Output[EndpointConfigClarifyShapConfig]{
		OutputState: i.ToEndpointConfigClarifyShapConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigClarifyShapConfigArgs) ToEndpointConfigClarifyShapConfigPtrOutput() EndpointConfigClarifyShapConfigPtrOutput {
	return i.ToEndpointConfigClarifyShapConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyShapConfigArgs) ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapConfigOutput).ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx)
}

// EndpointConfigClarifyShapConfigPtrInput is an input type that accepts EndpointConfigClarifyShapConfigArgs, EndpointConfigClarifyShapConfigPtr and EndpointConfigClarifyShapConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyShapConfigPtrInput` via:
//
//	        EndpointConfigClarifyShapConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigClarifyShapConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigClarifyShapConfigPtrOutput() EndpointConfigClarifyShapConfigPtrOutput
	ToEndpointConfigClarifyShapConfigPtrOutputWithContext(context.Context) EndpointConfigClarifyShapConfigPtrOutput
}

type endpointConfigClarifyShapConfigPtrType EndpointConfigClarifyShapConfigArgs

func EndpointConfigClarifyShapConfigPtr(v *EndpointConfigClarifyShapConfigArgs) EndpointConfigClarifyShapConfigPtrInput {
	return (*endpointConfigClarifyShapConfigPtrType)(v)
}

func (*endpointConfigClarifyShapConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyShapConfig)(nil)).Elem()
}

func (i *endpointConfigClarifyShapConfigPtrType) ToEndpointConfigClarifyShapConfigPtrOutput() EndpointConfigClarifyShapConfigPtrOutput {
	return i.ToEndpointConfigClarifyShapConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigClarifyShapConfigPtrType) ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyShapConfigPtrOutput)
}

func (i *endpointConfigClarifyShapConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyShapConfig] {
	return pulumix.Output[*EndpointConfigClarifyShapConfig]{
		OutputState: i.ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyShapConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyShapConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyShapConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyShapConfigOutput) ToEndpointConfigClarifyShapConfigOutput() EndpointConfigClarifyShapConfigOutput {
	return o
}

func (o EndpointConfigClarifyShapConfigOutput) ToEndpointConfigClarifyShapConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigOutput {
	return o
}

func (o EndpointConfigClarifyShapConfigOutput) ToEndpointConfigClarifyShapConfigPtrOutput() EndpointConfigClarifyShapConfigPtrOutput {
	return o.ToEndpointConfigClarifyShapConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigClarifyShapConfigOutput) ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigClarifyShapConfig) *EndpointConfigClarifyShapConfig {
		return &v
	}).(EndpointConfigClarifyShapConfigPtrOutput)
}

func (o EndpointConfigClarifyShapConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyShapConfig] {
	return pulumix.Output[EndpointConfigClarifyShapConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyShapConfigOutput) NumberOfSamples() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapConfig) *int { return v.NumberOfSamples }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyShapConfigOutput) Seed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapConfig) *int { return v.Seed }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyShapConfigOutput) ShapBaselineConfig() EndpointConfigClarifyShapBaselineConfigOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapConfig) EndpointConfigClarifyShapBaselineConfig {
		return v.ShapBaselineConfig
	}).(EndpointConfigClarifyShapBaselineConfigOutput)
}

func (o EndpointConfigClarifyShapConfigOutput) TextConfig() EndpointConfigClarifyTextConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapConfig) *EndpointConfigClarifyTextConfig { return v.TextConfig }).(EndpointConfigClarifyTextConfigPtrOutput)
}

func (o EndpointConfigClarifyShapConfigOutput) UseLogit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigClarifyShapConfig) *bool { return v.UseLogit }).(pulumi.BoolPtrOutput)
}

type EndpointConfigClarifyShapConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyShapConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyShapConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyShapConfigPtrOutput) ToEndpointConfigClarifyShapConfigPtrOutput() EndpointConfigClarifyShapConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyShapConfigPtrOutput) ToEndpointConfigClarifyShapConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyShapConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyShapConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyShapConfig] {
	return pulumix.Output[*EndpointConfigClarifyShapConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyShapConfigPtrOutput) Elem() EndpointConfigClarifyShapConfigOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) EndpointConfigClarifyShapConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigClarifyShapConfig
		return ret
	}).(EndpointConfigClarifyShapConfigOutput)
}

func (o EndpointConfigClarifyShapConfigPtrOutput) NumberOfSamples() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfSamples
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyShapConfigPtrOutput) Seed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) *int {
		if v == nil {
			return nil
		}
		return v.Seed
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigClarifyShapConfigPtrOutput) ShapBaselineConfig() EndpointConfigClarifyShapBaselineConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) *EndpointConfigClarifyShapBaselineConfig {
		if v == nil {
			return nil
		}
		return &v.ShapBaselineConfig
	}).(EndpointConfigClarifyShapBaselineConfigPtrOutput)
}

func (o EndpointConfigClarifyShapConfigPtrOutput) TextConfig() EndpointConfigClarifyTextConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) *EndpointConfigClarifyTextConfig {
		if v == nil {
			return nil
		}
		return v.TextConfig
	}).(EndpointConfigClarifyTextConfigPtrOutput)
}

func (o EndpointConfigClarifyShapConfigPtrOutput) UseLogit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyShapConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseLogit
	}).(pulumi.BoolPtrOutput)
}

type EndpointConfigClarifyTextConfig struct {
	Granularity string `pulumi:"granularity"`
	Language    string `pulumi:"language"`
}

// EndpointConfigClarifyTextConfigInput is an input type that accepts EndpointConfigClarifyTextConfigArgs and EndpointConfigClarifyTextConfigOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyTextConfigInput` via:
//
//	EndpointConfigClarifyTextConfigArgs{...}
type EndpointConfigClarifyTextConfigInput interface {
	pulumi.Input

	ToEndpointConfigClarifyTextConfigOutput() EndpointConfigClarifyTextConfigOutput
	ToEndpointConfigClarifyTextConfigOutputWithContext(context.Context) EndpointConfigClarifyTextConfigOutput
}

type EndpointConfigClarifyTextConfigArgs struct {
	Granularity pulumi.StringInput `pulumi:"granularity"`
	Language    pulumi.StringInput `pulumi:"language"`
}

func (EndpointConfigClarifyTextConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyTextConfig)(nil)).Elem()
}

func (i EndpointConfigClarifyTextConfigArgs) ToEndpointConfigClarifyTextConfigOutput() EndpointConfigClarifyTextConfigOutput {
	return i.ToEndpointConfigClarifyTextConfigOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyTextConfigArgs) ToEndpointConfigClarifyTextConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyTextConfigOutput)
}

func (i EndpointConfigClarifyTextConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyTextConfig] {
	return pulumix.Output[EndpointConfigClarifyTextConfig]{
		OutputState: i.ToEndpointConfigClarifyTextConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigClarifyTextConfigArgs) ToEndpointConfigClarifyTextConfigPtrOutput() EndpointConfigClarifyTextConfigPtrOutput {
	return i.ToEndpointConfigClarifyTextConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigClarifyTextConfigArgs) ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyTextConfigOutput).ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx)
}

// EndpointConfigClarifyTextConfigPtrInput is an input type that accepts EndpointConfigClarifyTextConfigArgs, EndpointConfigClarifyTextConfigPtr and EndpointConfigClarifyTextConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigClarifyTextConfigPtrInput` via:
//
//	        EndpointConfigClarifyTextConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigClarifyTextConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigClarifyTextConfigPtrOutput() EndpointConfigClarifyTextConfigPtrOutput
	ToEndpointConfigClarifyTextConfigPtrOutputWithContext(context.Context) EndpointConfigClarifyTextConfigPtrOutput
}

type endpointConfigClarifyTextConfigPtrType EndpointConfigClarifyTextConfigArgs

func EndpointConfigClarifyTextConfigPtr(v *EndpointConfigClarifyTextConfigArgs) EndpointConfigClarifyTextConfigPtrInput {
	return (*endpointConfigClarifyTextConfigPtrType)(v)
}

func (*endpointConfigClarifyTextConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyTextConfig)(nil)).Elem()
}

func (i *endpointConfigClarifyTextConfigPtrType) ToEndpointConfigClarifyTextConfigPtrOutput() EndpointConfigClarifyTextConfigPtrOutput {
	return i.ToEndpointConfigClarifyTextConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigClarifyTextConfigPtrType) ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigClarifyTextConfigPtrOutput)
}

func (i *endpointConfigClarifyTextConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyTextConfig] {
	return pulumix.Output[*EndpointConfigClarifyTextConfig]{
		OutputState: i.ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigClarifyTextConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyTextConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigClarifyTextConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyTextConfigOutput) ToEndpointConfigClarifyTextConfigOutput() EndpointConfigClarifyTextConfigOutput {
	return o
}

func (o EndpointConfigClarifyTextConfigOutput) ToEndpointConfigClarifyTextConfigOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigOutput {
	return o
}

func (o EndpointConfigClarifyTextConfigOutput) ToEndpointConfigClarifyTextConfigPtrOutput() EndpointConfigClarifyTextConfigPtrOutput {
	return o.ToEndpointConfigClarifyTextConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigClarifyTextConfigOutput) ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigClarifyTextConfig) *EndpointConfigClarifyTextConfig {
		return &v
	}).(EndpointConfigClarifyTextConfigPtrOutput)
}

func (o EndpointConfigClarifyTextConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigClarifyTextConfig] {
	return pulumix.Output[EndpointConfigClarifyTextConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyTextConfigOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigClarifyTextConfig) string { return v.Granularity }).(pulumi.StringOutput)
}

func (o EndpointConfigClarifyTextConfigOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigClarifyTextConfig) string { return v.Language }).(pulumi.StringOutput)
}

type EndpointConfigClarifyTextConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigClarifyTextConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigClarifyTextConfig)(nil)).Elem()
}

func (o EndpointConfigClarifyTextConfigPtrOutput) ToEndpointConfigClarifyTextConfigPtrOutput() EndpointConfigClarifyTextConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyTextConfigPtrOutput) ToEndpointConfigClarifyTextConfigPtrOutputWithContext(ctx context.Context) EndpointConfigClarifyTextConfigPtrOutput {
	return o
}

func (o EndpointConfigClarifyTextConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigClarifyTextConfig] {
	return pulumix.Output[*EndpointConfigClarifyTextConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigClarifyTextConfigPtrOutput) Elem() EndpointConfigClarifyTextConfigOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyTextConfig) EndpointConfigClarifyTextConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigClarifyTextConfig
		return ret
	}).(EndpointConfigClarifyTextConfigOutput)
}

func (o EndpointConfigClarifyTextConfigPtrOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyTextConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigClarifyTextConfigPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigClarifyTextConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Language
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigDataCaptureConfig struct {
	CaptureContentTypeHeader  *EndpointConfigCaptureContentTypeHeader `pulumi:"captureContentTypeHeader"`
	CaptureOptions            []EndpointConfigCaptureOption           `pulumi:"captureOptions"`
	DestinationS3Uri          string                                  `pulumi:"destinationS3Uri"`
	EnableCapture             *bool                                   `pulumi:"enableCapture"`
	InitialSamplingPercentage int                                     `pulumi:"initialSamplingPercentage"`
	KmsKeyId                  *string                                 `pulumi:"kmsKeyId"`
}

// EndpointConfigDataCaptureConfigInput is an input type that accepts EndpointConfigDataCaptureConfigArgs and EndpointConfigDataCaptureConfigOutput values.
// You can construct a concrete instance of `EndpointConfigDataCaptureConfigInput` via:
//
//	EndpointConfigDataCaptureConfigArgs{...}
type EndpointConfigDataCaptureConfigInput interface {
	pulumi.Input

	ToEndpointConfigDataCaptureConfigOutput() EndpointConfigDataCaptureConfigOutput
	ToEndpointConfigDataCaptureConfigOutputWithContext(context.Context) EndpointConfigDataCaptureConfigOutput
}

type EndpointConfigDataCaptureConfigArgs struct {
	CaptureContentTypeHeader  EndpointConfigCaptureContentTypeHeaderPtrInput `pulumi:"captureContentTypeHeader"`
	CaptureOptions            EndpointConfigCaptureOptionArrayInput          `pulumi:"captureOptions"`
	DestinationS3Uri          pulumi.StringInput                             `pulumi:"destinationS3Uri"`
	EnableCapture             pulumi.BoolPtrInput                            `pulumi:"enableCapture"`
	InitialSamplingPercentage pulumi.IntInput                                `pulumi:"initialSamplingPercentage"`
	KmsKeyId                  pulumi.StringPtrInput                          `pulumi:"kmsKeyId"`
}

func (EndpointConfigDataCaptureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigDataCaptureConfig)(nil)).Elem()
}

func (i EndpointConfigDataCaptureConfigArgs) ToEndpointConfigDataCaptureConfigOutput() EndpointConfigDataCaptureConfigOutput {
	return i.ToEndpointConfigDataCaptureConfigOutputWithContext(context.Background())
}

func (i EndpointConfigDataCaptureConfigArgs) ToEndpointConfigDataCaptureConfigOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigDataCaptureConfigOutput)
}

func (i EndpointConfigDataCaptureConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigDataCaptureConfig] {
	return pulumix.Output[EndpointConfigDataCaptureConfig]{
		OutputState: i.ToEndpointConfigDataCaptureConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigDataCaptureConfigArgs) ToEndpointConfigDataCaptureConfigPtrOutput() EndpointConfigDataCaptureConfigPtrOutput {
	return i.ToEndpointConfigDataCaptureConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigDataCaptureConfigArgs) ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigDataCaptureConfigOutput).ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx)
}

// EndpointConfigDataCaptureConfigPtrInput is an input type that accepts EndpointConfigDataCaptureConfigArgs, EndpointConfigDataCaptureConfigPtr and EndpointConfigDataCaptureConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigDataCaptureConfigPtrInput` via:
//
//	        EndpointConfigDataCaptureConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigDataCaptureConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigDataCaptureConfigPtrOutput() EndpointConfigDataCaptureConfigPtrOutput
	ToEndpointConfigDataCaptureConfigPtrOutputWithContext(context.Context) EndpointConfigDataCaptureConfigPtrOutput
}

type endpointConfigDataCaptureConfigPtrType EndpointConfigDataCaptureConfigArgs

func EndpointConfigDataCaptureConfigPtr(v *EndpointConfigDataCaptureConfigArgs) EndpointConfigDataCaptureConfigPtrInput {
	return (*endpointConfigDataCaptureConfigPtrType)(v)
}

func (*endpointConfigDataCaptureConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigDataCaptureConfig)(nil)).Elem()
}

func (i *endpointConfigDataCaptureConfigPtrType) ToEndpointConfigDataCaptureConfigPtrOutput() EndpointConfigDataCaptureConfigPtrOutput {
	return i.ToEndpointConfigDataCaptureConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigDataCaptureConfigPtrType) ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigDataCaptureConfigPtrOutput)
}

func (i *endpointConfigDataCaptureConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigDataCaptureConfig] {
	return pulumix.Output[*EndpointConfigDataCaptureConfig]{
		OutputState: i.ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigDataCaptureConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigDataCaptureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigDataCaptureConfig)(nil)).Elem()
}

func (o EndpointConfigDataCaptureConfigOutput) ToEndpointConfigDataCaptureConfigOutput() EndpointConfigDataCaptureConfigOutput {
	return o
}

func (o EndpointConfigDataCaptureConfigOutput) ToEndpointConfigDataCaptureConfigOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigOutput {
	return o
}

func (o EndpointConfigDataCaptureConfigOutput) ToEndpointConfigDataCaptureConfigPtrOutput() EndpointConfigDataCaptureConfigPtrOutput {
	return o.ToEndpointConfigDataCaptureConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigDataCaptureConfigOutput) ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigDataCaptureConfig) *EndpointConfigDataCaptureConfig {
		return &v
	}).(EndpointConfigDataCaptureConfigPtrOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigDataCaptureConfig] {
	return pulumix.Output[EndpointConfigDataCaptureConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigDataCaptureConfigOutput) CaptureContentTypeHeader() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) *EndpointConfigCaptureContentTypeHeader {
		return v.CaptureContentTypeHeader
	}).(EndpointConfigCaptureContentTypeHeaderPtrOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) CaptureOptions() EndpointConfigCaptureOptionArrayOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) []EndpointConfigCaptureOption { return v.CaptureOptions }).(EndpointConfigCaptureOptionArrayOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) DestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) string { return v.DestinationS3Uri }).(pulumi.StringOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) EnableCapture() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) *bool { return v.EnableCapture }).(pulumi.BoolPtrOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) InitialSamplingPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) int { return v.InitialSamplingPercentage }).(pulumi.IntOutput)
}

func (o EndpointConfigDataCaptureConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigDataCaptureConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type EndpointConfigDataCaptureConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigDataCaptureConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigDataCaptureConfig)(nil)).Elem()
}

func (o EndpointConfigDataCaptureConfigPtrOutput) ToEndpointConfigDataCaptureConfigPtrOutput() EndpointConfigDataCaptureConfigPtrOutput {
	return o
}

func (o EndpointConfigDataCaptureConfigPtrOutput) ToEndpointConfigDataCaptureConfigPtrOutputWithContext(ctx context.Context) EndpointConfigDataCaptureConfigPtrOutput {
	return o
}

func (o EndpointConfigDataCaptureConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigDataCaptureConfig] {
	return pulumix.Output[*EndpointConfigDataCaptureConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigDataCaptureConfigPtrOutput) Elem() EndpointConfigDataCaptureConfigOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) EndpointConfigDataCaptureConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigDataCaptureConfig
		return ret
	}).(EndpointConfigDataCaptureConfigOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) CaptureContentTypeHeader() EndpointConfigCaptureContentTypeHeaderPtrOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) *EndpointConfigCaptureContentTypeHeader {
		if v == nil {
			return nil
		}
		return v.CaptureContentTypeHeader
	}).(EndpointConfigCaptureContentTypeHeaderPtrOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) CaptureOptions() EndpointConfigCaptureOptionArrayOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) []EndpointConfigCaptureOption {
		if v == nil {
			return nil
		}
		return v.CaptureOptions
	}).(EndpointConfigCaptureOptionArrayOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) DestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) EnableCapture() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCapture
	}).(pulumi.BoolPtrOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) InitialSamplingPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) *int {
		if v == nil {
			return nil
		}
		return &v.InitialSamplingPercentage
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigDataCaptureConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigDataCaptureConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigExplainerConfig struct {
	ClarifyExplainerConfig *EndpointConfigClarifyExplainerConfig `pulumi:"clarifyExplainerConfig"`
}

// EndpointConfigExplainerConfigInput is an input type that accepts EndpointConfigExplainerConfigArgs and EndpointConfigExplainerConfigOutput values.
// You can construct a concrete instance of `EndpointConfigExplainerConfigInput` via:
//
//	EndpointConfigExplainerConfigArgs{...}
type EndpointConfigExplainerConfigInput interface {
	pulumi.Input

	ToEndpointConfigExplainerConfigOutput() EndpointConfigExplainerConfigOutput
	ToEndpointConfigExplainerConfigOutputWithContext(context.Context) EndpointConfigExplainerConfigOutput
}

type EndpointConfigExplainerConfigArgs struct {
	ClarifyExplainerConfig EndpointConfigClarifyExplainerConfigPtrInput `pulumi:"clarifyExplainerConfig"`
}

func (EndpointConfigExplainerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigExplainerConfig)(nil)).Elem()
}

func (i EndpointConfigExplainerConfigArgs) ToEndpointConfigExplainerConfigOutput() EndpointConfigExplainerConfigOutput {
	return i.ToEndpointConfigExplainerConfigOutputWithContext(context.Background())
}

func (i EndpointConfigExplainerConfigArgs) ToEndpointConfigExplainerConfigOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigExplainerConfigOutput)
}

func (i EndpointConfigExplainerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigExplainerConfig] {
	return pulumix.Output[EndpointConfigExplainerConfig]{
		OutputState: i.ToEndpointConfigExplainerConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigExplainerConfigArgs) ToEndpointConfigExplainerConfigPtrOutput() EndpointConfigExplainerConfigPtrOutput {
	return i.ToEndpointConfigExplainerConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigExplainerConfigArgs) ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigExplainerConfigOutput).ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx)
}

// EndpointConfigExplainerConfigPtrInput is an input type that accepts EndpointConfigExplainerConfigArgs, EndpointConfigExplainerConfigPtr and EndpointConfigExplainerConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigExplainerConfigPtrInput` via:
//
//	        EndpointConfigExplainerConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigExplainerConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigExplainerConfigPtrOutput() EndpointConfigExplainerConfigPtrOutput
	ToEndpointConfigExplainerConfigPtrOutputWithContext(context.Context) EndpointConfigExplainerConfigPtrOutput
}

type endpointConfigExplainerConfigPtrType EndpointConfigExplainerConfigArgs

func EndpointConfigExplainerConfigPtr(v *EndpointConfigExplainerConfigArgs) EndpointConfigExplainerConfigPtrInput {
	return (*endpointConfigExplainerConfigPtrType)(v)
}

func (*endpointConfigExplainerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigExplainerConfig)(nil)).Elem()
}

func (i *endpointConfigExplainerConfigPtrType) ToEndpointConfigExplainerConfigPtrOutput() EndpointConfigExplainerConfigPtrOutput {
	return i.ToEndpointConfigExplainerConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigExplainerConfigPtrType) ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigExplainerConfigPtrOutput)
}

func (i *endpointConfigExplainerConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigExplainerConfig] {
	return pulumix.Output[*EndpointConfigExplainerConfig]{
		OutputState: i.ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigExplainerConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigExplainerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigExplainerConfig)(nil)).Elem()
}

func (o EndpointConfigExplainerConfigOutput) ToEndpointConfigExplainerConfigOutput() EndpointConfigExplainerConfigOutput {
	return o
}

func (o EndpointConfigExplainerConfigOutput) ToEndpointConfigExplainerConfigOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigOutput {
	return o
}

func (o EndpointConfigExplainerConfigOutput) ToEndpointConfigExplainerConfigPtrOutput() EndpointConfigExplainerConfigPtrOutput {
	return o.ToEndpointConfigExplainerConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigExplainerConfigOutput) ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigExplainerConfig) *EndpointConfigExplainerConfig {
		return &v
	}).(EndpointConfigExplainerConfigPtrOutput)
}

func (o EndpointConfigExplainerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigExplainerConfig] {
	return pulumix.Output[EndpointConfigExplainerConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigExplainerConfigOutput) ClarifyExplainerConfig() EndpointConfigClarifyExplainerConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigExplainerConfig) *EndpointConfigClarifyExplainerConfig {
		return v.ClarifyExplainerConfig
	}).(EndpointConfigClarifyExplainerConfigPtrOutput)
}

type EndpointConfigExplainerConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigExplainerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigExplainerConfig)(nil)).Elem()
}

func (o EndpointConfigExplainerConfigPtrOutput) ToEndpointConfigExplainerConfigPtrOutput() EndpointConfigExplainerConfigPtrOutput {
	return o
}

func (o EndpointConfigExplainerConfigPtrOutput) ToEndpointConfigExplainerConfigPtrOutputWithContext(ctx context.Context) EndpointConfigExplainerConfigPtrOutput {
	return o
}

func (o EndpointConfigExplainerConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigExplainerConfig] {
	return pulumix.Output[*EndpointConfigExplainerConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigExplainerConfigPtrOutput) Elem() EndpointConfigExplainerConfigOutput {
	return o.ApplyT(func(v *EndpointConfigExplainerConfig) EndpointConfigExplainerConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigExplainerConfig
		return ret
	}).(EndpointConfigExplainerConfigOutput)
}

func (o EndpointConfigExplainerConfigPtrOutput) ClarifyExplainerConfig() EndpointConfigClarifyExplainerConfigPtrOutput {
	return o.ApplyT(func(v *EndpointConfigExplainerConfig) *EndpointConfigClarifyExplainerConfig {
		if v == nil {
			return nil
		}
		return v.ClarifyExplainerConfig
	}).(EndpointConfigClarifyExplainerConfigPtrOutput)
}

type EndpointConfigManagedInstanceScaling struct {
	MaxInstanceCount *int    `pulumi:"maxInstanceCount"`
	MinInstanceCount *int    `pulumi:"minInstanceCount"`
	Status           *string `pulumi:"status"`
}

// EndpointConfigManagedInstanceScalingInput is an input type that accepts EndpointConfigManagedInstanceScalingArgs and EndpointConfigManagedInstanceScalingOutput values.
// You can construct a concrete instance of `EndpointConfigManagedInstanceScalingInput` via:
//
//	EndpointConfigManagedInstanceScalingArgs{...}
type EndpointConfigManagedInstanceScalingInput interface {
	pulumi.Input

	ToEndpointConfigManagedInstanceScalingOutput() EndpointConfigManagedInstanceScalingOutput
	ToEndpointConfigManagedInstanceScalingOutputWithContext(context.Context) EndpointConfigManagedInstanceScalingOutput
}

type EndpointConfigManagedInstanceScalingArgs struct {
	MaxInstanceCount pulumi.IntPtrInput    `pulumi:"maxInstanceCount"`
	MinInstanceCount pulumi.IntPtrInput    `pulumi:"minInstanceCount"`
	Status           pulumi.StringPtrInput `pulumi:"status"`
}

func (EndpointConfigManagedInstanceScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigManagedInstanceScaling)(nil)).Elem()
}

func (i EndpointConfigManagedInstanceScalingArgs) ToEndpointConfigManagedInstanceScalingOutput() EndpointConfigManagedInstanceScalingOutput {
	return i.ToEndpointConfigManagedInstanceScalingOutputWithContext(context.Background())
}

func (i EndpointConfigManagedInstanceScalingArgs) ToEndpointConfigManagedInstanceScalingOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigManagedInstanceScalingOutput)
}

func (i EndpointConfigManagedInstanceScalingArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigManagedInstanceScaling] {
	return pulumix.Output[EndpointConfigManagedInstanceScaling]{
		OutputState: i.ToEndpointConfigManagedInstanceScalingOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigManagedInstanceScalingArgs) ToEndpointConfigManagedInstanceScalingPtrOutput() EndpointConfigManagedInstanceScalingPtrOutput {
	return i.ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(context.Background())
}

func (i EndpointConfigManagedInstanceScalingArgs) ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigManagedInstanceScalingOutput).ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx)
}

// EndpointConfigManagedInstanceScalingPtrInput is an input type that accepts EndpointConfigManagedInstanceScalingArgs, EndpointConfigManagedInstanceScalingPtr and EndpointConfigManagedInstanceScalingPtrOutput values.
// You can construct a concrete instance of `EndpointConfigManagedInstanceScalingPtrInput` via:
//
//	        EndpointConfigManagedInstanceScalingArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigManagedInstanceScalingPtrInput interface {
	pulumi.Input

	ToEndpointConfigManagedInstanceScalingPtrOutput() EndpointConfigManagedInstanceScalingPtrOutput
	ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(context.Context) EndpointConfigManagedInstanceScalingPtrOutput
}

type endpointConfigManagedInstanceScalingPtrType EndpointConfigManagedInstanceScalingArgs

func EndpointConfigManagedInstanceScalingPtr(v *EndpointConfigManagedInstanceScalingArgs) EndpointConfigManagedInstanceScalingPtrInput {
	return (*endpointConfigManagedInstanceScalingPtrType)(v)
}

func (*endpointConfigManagedInstanceScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigManagedInstanceScaling)(nil)).Elem()
}

func (i *endpointConfigManagedInstanceScalingPtrType) ToEndpointConfigManagedInstanceScalingPtrOutput() EndpointConfigManagedInstanceScalingPtrOutput {
	return i.ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(context.Background())
}

func (i *endpointConfigManagedInstanceScalingPtrType) ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigManagedInstanceScalingPtrOutput)
}

func (i *endpointConfigManagedInstanceScalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigManagedInstanceScaling] {
	return pulumix.Output[*EndpointConfigManagedInstanceScaling]{
		OutputState: i.ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigManagedInstanceScalingOutput struct{ *pulumi.OutputState }

func (EndpointConfigManagedInstanceScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigManagedInstanceScaling)(nil)).Elem()
}

func (o EndpointConfigManagedInstanceScalingOutput) ToEndpointConfigManagedInstanceScalingOutput() EndpointConfigManagedInstanceScalingOutput {
	return o
}

func (o EndpointConfigManagedInstanceScalingOutput) ToEndpointConfigManagedInstanceScalingOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingOutput {
	return o
}

func (o EndpointConfigManagedInstanceScalingOutput) ToEndpointConfigManagedInstanceScalingPtrOutput() EndpointConfigManagedInstanceScalingPtrOutput {
	return o.ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(context.Background())
}

func (o EndpointConfigManagedInstanceScalingOutput) ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigManagedInstanceScaling) *EndpointConfigManagedInstanceScaling {
		return &v
	}).(EndpointConfigManagedInstanceScalingPtrOutput)
}

func (o EndpointConfigManagedInstanceScalingOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigManagedInstanceScaling] {
	return pulumix.Output[EndpointConfigManagedInstanceScaling]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigManagedInstanceScalingOutput) MaxInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigManagedInstanceScaling) *int { return v.MaxInstanceCount }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigManagedInstanceScalingOutput) MinInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigManagedInstanceScaling) *int { return v.MinInstanceCount }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigManagedInstanceScalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigManagedInstanceScaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EndpointConfigManagedInstanceScalingPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigManagedInstanceScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigManagedInstanceScaling)(nil)).Elem()
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) ToEndpointConfigManagedInstanceScalingPtrOutput() EndpointConfigManagedInstanceScalingPtrOutput {
	return o
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) ToEndpointConfigManagedInstanceScalingPtrOutputWithContext(ctx context.Context) EndpointConfigManagedInstanceScalingPtrOutput {
	return o
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigManagedInstanceScaling] {
	return pulumix.Output[*EndpointConfigManagedInstanceScaling]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) Elem() EndpointConfigManagedInstanceScalingOutput {
	return o.ApplyT(func(v *EndpointConfigManagedInstanceScaling) EndpointConfigManagedInstanceScaling {
		if v != nil {
			return *v
		}
		var ret EndpointConfigManagedInstanceScaling
		return ret
	}).(EndpointConfigManagedInstanceScalingOutput)
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) MaxInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigManagedInstanceScaling) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstanceCount
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) MinInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigManagedInstanceScaling) *int {
		if v == nil {
			return nil
		}
		return v.MinInstanceCount
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigManagedInstanceScalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigManagedInstanceScaling) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigProductionVariant struct {
	AcceleratorType                             *string                               `pulumi:"acceleratorType"`
	ContainerStartupHealthCheckTimeoutInSeconds *int                                  `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	EnableSsmAccess                             *bool                                 `pulumi:"enableSsmAccess"`
	InitialInstanceCount                        *int                                  `pulumi:"initialInstanceCount"`
	InitialVariantWeight                        *float64                              `pulumi:"initialVariantWeight"`
	InstanceType                                *string                               `pulumi:"instanceType"`
	ManagedInstanceScaling                      *EndpointConfigManagedInstanceScaling `pulumi:"managedInstanceScaling"`
	ModelDataDownloadTimeoutInSeconds           *int                                  `pulumi:"modelDataDownloadTimeoutInSeconds"`
	ModelName                                   *string                               `pulumi:"modelName"`
	RoutingConfig                               *EndpointConfigRoutingConfig          `pulumi:"routingConfig"`
	ServerlessConfig                            *EndpointConfigServerlessConfig       `pulumi:"serverlessConfig"`
	VariantName                                 string                                `pulumi:"variantName"`
	VolumeSizeInGb                              *int                                  `pulumi:"volumeSizeInGb"`
}

// EndpointConfigProductionVariantInput is an input type that accepts EndpointConfigProductionVariantArgs and EndpointConfigProductionVariantOutput values.
// You can construct a concrete instance of `EndpointConfigProductionVariantInput` via:
//
//	EndpointConfigProductionVariantArgs{...}
type EndpointConfigProductionVariantInput interface {
	pulumi.Input

	ToEndpointConfigProductionVariantOutput() EndpointConfigProductionVariantOutput
	ToEndpointConfigProductionVariantOutputWithContext(context.Context) EndpointConfigProductionVariantOutput
}

type EndpointConfigProductionVariantArgs struct {
	AcceleratorType                             pulumi.StringPtrInput                        `pulumi:"acceleratorType"`
	ContainerStartupHealthCheckTimeoutInSeconds pulumi.IntPtrInput                           `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	EnableSsmAccess                             pulumi.BoolPtrInput                          `pulumi:"enableSsmAccess"`
	InitialInstanceCount                        pulumi.IntPtrInput                           `pulumi:"initialInstanceCount"`
	InitialVariantWeight                        pulumi.Float64PtrInput                       `pulumi:"initialVariantWeight"`
	InstanceType                                pulumi.StringPtrInput                        `pulumi:"instanceType"`
	ManagedInstanceScaling                      EndpointConfigManagedInstanceScalingPtrInput `pulumi:"managedInstanceScaling"`
	ModelDataDownloadTimeoutInSeconds           pulumi.IntPtrInput                           `pulumi:"modelDataDownloadTimeoutInSeconds"`
	ModelName                                   pulumi.StringPtrInput                        `pulumi:"modelName"`
	RoutingConfig                               EndpointConfigRoutingConfigPtrInput          `pulumi:"routingConfig"`
	ServerlessConfig                            EndpointConfigServerlessConfigPtrInput       `pulumi:"serverlessConfig"`
	VariantName                                 pulumi.StringInput                           `pulumi:"variantName"`
	VolumeSizeInGb                              pulumi.IntPtrInput                           `pulumi:"volumeSizeInGb"`
}

func (EndpointConfigProductionVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigProductionVariant)(nil)).Elem()
}

func (i EndpointConfigProductionVariantArgs) ToEndpointConfigProductionVariantOutput() EndpointConfigProductionVariantOutput {
	return i.ToEndpointConfigProductionVariantOutputWithContext(context.Background())
}

func (i EndpointConfigProductionVariantArgs) ToEndpointConfigProductionVariantOutputWithContext(ctx context.Context) EndpointConfigProductionVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigProductionVariantOutput)
}

func (i EndpointConfigProductionVariantArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigProductionVariant] {
	return pulumix.Output[EndpointConfigProductionVariant]{
		OutputState: i.ToEndpointConfigProductionVariantOutputWithContext(ctx).OutputState,
	}
}

// EndpointConfigProductionVariantArrayInput is an input type that accepts EndpointConfigProductionVariantArray and EndpointConfigProductionVariantArrayOutput values.
// You can construct a concrete instance of `EndpointConfigProductionVariantArrayInput` via:
//
//	EndpointConfigProductionVariantArray{ EndpointConfigProductionVariantArgs{...} }
type EndpointConfigProductionVariantArrayInput interface {
	pulumi.Input

	ToEndpointConfigProductionVariantArrayOutput() EndpointConfigProductionVariantArrayOutput
	ToEndpointConfigProductionVariantArrayOutputWithContext(context.Context) EndpointConfigProductionVariantArrayOutput
}

type EndpointConfigProductionVariantArray []EndpointConfigProductionVariantInput

func (EndpointConfigProductionVariantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigProductionVariant)(nil)).Elem()
}

func (i EndpointConfigProductionVariantArray) ToEndpointConfigProductionVariantArrayOutput() EndpointConfigProductionVariantArrayOutput {
	return i.ToEndpointConfigProductionVariantArrayOutputWithContext(context.Background())
}

func (i EndpointConfigProductionVariantArray) ToEndpointConfigProductionVariantArrayOutputWithContext(ctx context.Context) EndpointConfigProductionVariantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigProductionVariantArrayOutput)
}

func (i EndpointConfigProductionVariantArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigProductionVariant] {
	return pulumix.Output[[]EndpointConfigProductionVariant]{
		OutputState: i.ToEndpointConfigProductionVariantArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigProductionVariantOutput struct{ *pulumi.OutputState }

func (EndpointConfigProductionVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigProductionVariant)(nil)).Elem()
}

func (o EndpointConfigProductionVariantOutput) ToEndpointConfigProductionVariantOutput() EndpointConfigProductionVariantOutput {
	return o
}

func (o EndpointConfigProductionVariantOutput) ToEndpointConfigProductionVariantOutputWithContext(ctx context.Context) EndpointConfigProductionVariantOutput {
	return o
}

func (o EndpointConfigProductionVariantOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigProductionVariant] {
	return pulumix.Output[EndpointConfigProductionVariant]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigProductionVariantOutput) AcceleratorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *string { return v.AcceleratorType }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) ContainerStartupHealthCheckTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *int { return v.ContainerStartupHealthCheckTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) EnableSsmAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *bool { return v.EnableSsmAccess }).(pulumi.BoolPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) InitialInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *int { return v.InitialInstanceCount }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) InitialVariantWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *float64 { return v.InitialVariantWeight }).(pulumi.Float64PtrOutput)
}

func (o EndpointConfigProductionVariantOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) ManagedInstanceScaling() EndpointConfigManagedInstanceScalingPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *EndpointConfigManagedInstanceScaling {
		return v.ManagedInstanceScaling
	}).(EndpointConfigManagedInstanceScalingPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) ModelDataDownloadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *int { return v.ModelDataDownloadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *string { return v.ModelName }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) RoutingConfig() EndpointConfigRoutingConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *EndpointConfigRoutingConfig { return v.RoutingConfig }).(EndpointConfigRoutingConfigPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) ServerlessConfig() EndpointConfigServerlessConfigPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *EndpointConfigServerlessConfig { return v.ServerlessConfig }).(EndpointConfigServerlessConfigPtrOutput)
}

func (o EndpointConfigProductionVariantOutput) VariantName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) string { return v.VariantName }).(pulumi.StringOutput)
}

func (o EndpointConfigProductionVariantOutput) VolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigProductionVariant) *int { return v.VolumeSizeInGb }).(pulumi.IntPtrOutput)
}

type EndpointConfigProductionVariantArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigProductionVariantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigProductionVariant)(nil)).Elem()
}

func (o EndpointConfigProductionVariantArrayOutput) ToEndpointConfigProductionVariantArrayOutput() EndpointConfigProductionVariantArrayOutput {
	return o
}

func (o EndpointConfigProductionVariantArrayOutput) ToEndpointConfigProductionVariantArrayOutputWithContext(ctx context.Context) EndpointConfigProductionVariantArrayOutput {
	return o
}

func (o EndpointConfigProductionVariantArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigProductionVariant] {
	return pulumix.Output[[]EndpointConfigProductionVariant]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigProductionVariantArrayOutput) Index(i pulumi.IntInput) EndpointConfigProductionVariantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigProductionVariant {
		return vs[0].([]EndpointConfigProductionVariant)[vs[1].(int)]
	}).(EndpointConfigProductionVariantOutput)
}

type EndpointConfigRoutingConfig struct {
	RoutingStrategy *string `pulumi:"routingStrategy"`
}

// EndpointConfigRoutingConfigInput is an input type that accepts EndpointConfigRoutingConfigArgs and EndpointConfigRoutingConfigOutput values.
// You can construct a concrete instance of `EndpointConfigRoutingConfigInput` via:
//
//	EndpointConfigRoutingConfigArgs{...}
type EndpointConfigRoutingConfigInput interface {
	pulumi.Input

	ToEndpointConfigRoutingConfigOutput() EndpointConfigRoutingConfigOutput
	ToEndpointConfigRoutingConfigOutputWithContext(context.Context) EndpointConfigRoutingConfigOutput
}

type EndpointConfigRoutingConfigArgs struct {
	RoutingStrategy pulumi.StringPtrInput `pulumi:"routingStrategy"`
}

func (EndpointConfigRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigRoutingConfig)(nil)).Elem()
}

func (i EndpointConfigRoutingConfigArgs) ToEndpointConfigRoutingConfigOutput() EndpointConfigRoutingConfigOutput {
	return i.ToEndpointConfigRoutingConfigOutputWithContext(context.Background())
}

func (i EndpointConfigRoutingConfigArgs) ToEndpointConfigRoutingConfigOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigRoutingConfigOutput)
}

func (i EndpointConfigRoutingConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigRoutingConfig] {
	return pulumix.Output[EndpointConfigRoutingConfig]{
		OutputState: i.ToEndpointConfigRoutingConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigRoutingConfigArgs) ToEndpointConfigRoutingConfigPtrOutput() EndpointConfigRoutingConfigPtrOutput {
	return i.ToEndpointConfigRoutingConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigRoutingConfigArgs) ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigRoutingConfigOutput).ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx)
}

// EndpointConfigRoutingConfigPtrInput is an input type that accepts EndpointConfigRoutingConfigArgs, EndpointConfigRoutingConfigPtr and EndpointConfigRoutingConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigRoutingConfigPtrInput` via:
//
//	        EndpointConfigRoutingConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigRoutingConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigRoutingConfigPtrOutput() EndpointConfigRoutingConfigPtrOutput
	ToEndpointConfigRoutingConfigPtrOutputWithContext(context.Context) EndpointConfigRoutingConfigPtrOutput
}

type endpointConfigRoutingConfigPtrType EndpointConfigRoutingConfigArgs

func EndpointConfigRoutingConfigPtr(v *EndpointConfigRoutingConfigArgs) EndpointConfigRoutingConfigPtrInput {
	return (*endpointConfigRoutingConfigPtrType)(v)
}

func (*endpointConfigRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigRoutingConfig)(nil)).Elem()
}

func (i *endpointConfigRoutingConfigPtrType) ToEndpointConfigRoutingConfigPtrOutput() EndpointConfigRoutingConfigPtrOutput {
	return i.ToEndpointConfigRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigRoutingConfigPtrType) ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigRoutingConfigPtrOutput)
}

func (i *endpointConfigRoutingConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigRoutingConfig] {
	return pulumix.Output[*EndpointConfigRoutingConfig]{
		OutputState: i.ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigRoutingConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigRoutingConfig)(nil)).Elem()
}

func (o EndpointConfigRoutingConfigOutput) ToEndpointConfigRoutingConfigOutput() EndpointConfigRoutingConfigOutput {
	return o
}

func (o EndpointConfigRoutingConfigOutput) ToEndpointConfigRoutingConfigOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigOutput {
	return o
}

func (o EndpointConfigRoutingConfigOutput) ToEndpointConfigRoutingConfigPtrOutput() EndpointConfigRoutingConfigPtrOutput {
	return o.ToEndpointConfigRoutingConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigRoutingConfigOutput) ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigRoutingConfig) *EndpointConfigRoutingConfig {
		return &v
	}).(EndpointConfigRoutingConfigPtrOutput)
}

func (o EndpointConfigRoutingConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigRoutingConfig] {
	return pulumix.Output[EndpointConfigRoutingConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigRoutingConfigOutput) RoutingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigRoutingConfig) *string { return v.RoutingStrategy }).(pulumi.StringPtrOutput)
}

type EndpointConfigRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigRoutingConfig)(nil)).Elem()
}

func (o EndpointConfigRoutingConfigPtrOutput) ToEndpointConfigRoutingConfigPtrOutput() EndpointConfigRoutingConfigPtrOutput {
	return o
}

func (o EndpointConfigRoutingConfigPtrOutput) ToEndpointConfigRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointConfigRoutingConfigPtrOutput {
	return o
}

func (o EndpointConfigRoutingConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigRoutingConfig] {
	return pulumix.Output[*EndpointConfigRoutingConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigRoutingConfigPtrOutput) Elem() EndpointConfigRoutingConfigOutput {
	return o.ApplyT(func(v *EndpointConfigRoutingConfig) EndpointConfigRoutingConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigRoutingConfig
		return ret
	}).(EndpointConfigRoutingConfigOutput)
}

func (o EndpointConfigRoutingConfigPtrOutput) RoutingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointConfigRoutingConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingStrategy
	}).(pulumi.StringPtrOutput)
}

type EndpointConfigServerlessConfig struct {
	MaxConcurrency         int  `pulumi:"maxConcurrency"`
	MemorySizeInMb         int  `pulumi:"memorySizeInMb"`
	ProvisionedConcurrency *int `pulumi:"provisionedConcurrency"`
}

// EndpointConfigServerlessConfigInput is an input type that accepts EndpointConfigServerlessConfigArgs and EndpointConfigServerlessConfigOutput values.
// You can construct a concrete instance of `EndpointConfigServerlessConfigInput` via:
//
//	EndpointConfigServerlessConfigArgs{...}
type EndpointConfigServerlessConfigInput interface {
	pulumi.Input

	ToEndpointConfigServerlessConfigOutput() EndpointConfigServerlessConfigOutput
	ToEndpointConfigServerlessConfigOutputWithContext(context.Context) EndpointConfigServerlessConfigOutput
}

type EndpointConfigServerlessConfigArgs struct {
	MaxConcurrency         pulumi.IntInput    `pulumi:"maxConcurrency"`
	MemorySizeInMb         pulumi.IntInput    `pulumi:"memorySizeInMb"`
	ProvisionedConcurrency pulumi.IntPtrInput `pulumi:"provisionedConcurrency"`
}

func (EndpointConfigServerlessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigServerlessConfig)(nil)).Elem()
}

func (i EndpointConfigServerlessConfigArgs) ToEndpointConfigServerlessConfigOutput() EndpointConfigServerlessConfigOutput {
	return i.ToEndpointConfigServerlessConfigOutputWithContext(context.Background())
}

func (i EndpointConfigServerlessConfigArgs) ToEndpointConfigServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigServerlessConfigOutput)
}

func (i EndpointConfigServerlessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigServerlessConfig] {
	return pulumix.Output[EndpointConfigServerlessConfig]{
		OutputState: i.ToEndpointConfigServerlessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigServerlessConfigArgs) ToEndpointConfigServerlessConfigPtrOutput() EndpointConfigServerlessConfigPtrOutput {
	return i.ToEndpointConfigServerlessConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigServerlessConfigArgs) ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigServerlessConfigOutput).ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx)
}

// EndpointConfigServerlessConfigPtrInput is an input type that accepts EndpointConfigServerlessConfigArgs, EndpointConfigServerlessConfigPtr and EndpointConfigServerlessConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigServerlessConfigPtrInput` via:
//
//	        EndpointConfigServerlessConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigServerlessConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigServerlessConfigPtrOutput() EndpointConfigServerlessConfigPtrOutput
	ToEndpointConfigServerlessConfigPtrOutputWithContext(context.Context) EndpointConfigServerlessConfigPtrOutput
}

type endpointConfigServerlessConfigPtrType EndpointConfigServerlessConfigArgs

func EndpointConfigServerlessConfigPtr(v *EndpointConfigServerlessConfigArgs) EndpointConfigServerlessConfigPtrInput {
	return (*endpointConfigServerlessConfigPtrType)(v)
}

func (*endpointConfigServerlessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigServerlessConfig)(nil)).Elem()
}

func (i *endpointConfigServerlessConfigPtrType) ToEndpointConfigServerlessConfigPtrOutput() EndpointConfigServerlessConfigPtrOutput {
	return i.ToEndpointConfigServerlessConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigServerlessConfigPtrType) ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigServerlessConfigPtrOutput)
}

func (i *endpointConfigServerlessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigServerlessConfig] {
	return pulumix.Output[*EndpointConfigServerlessConfig]{
		OutputState: i.ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigServerlessConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigServerlessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigServerlessConfig)(nil)).Elem()
}

func (o EndpointConfigServerlessConfigOutput) ToEndpointConfigServerlessConfigOutput() EndpointConfigServerlessConfigOutput {
	return o
}

func (o EndpointConfigServerlessConfigOutput) ToEndpointConfigServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigOutput {
	return o
}

func (o EndpointConfigServerlessConfigOutput) ToEndpointConfigServerlessConfigPtrOutput() EndpointConfigServerlessConfigPtrOutput {
	return o.ToEndpointConfigServerlessConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigServerlessConfigOutput) ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigServerlessConfig) *EndpointConfigServerlessConfig {
		return &v
	}).(EndpointConfigServerlessConfigPtrOutput)
}

func (o EndpointConfigServerlessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigServerlessConfig] {
	return pulumix.Output[EndpointConfigServerlessConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigServerlessConfigOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointConfigServerlessConfig) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

func (o EndpointConfigServerlessConfigOutput) MemorySizeInMb() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointConfigServerlessConfig) int { return v.MemorySizeInMb }).(pulumi.IntOutput)
}

func (o EndpointConfigServerlessConfigOutput) ProvisionedConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigServerlessConfig) *int { return v.ProvisionedConcurrency }).(pulumi.IntPtrOutput)
}

type EndpointConfigServerlessConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigServerlessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigServerlessConfig)(nil)).Elem()
}

func (o EndpointConfigServerlessConfigPtrOutput) ToEndpointConfigServerlessConfigPtrOutput() EndpointConfigServerlessConfigPtrOutput {
	return o
}

func (o EndpointConfigServerlessConfigPtrOutput) ToEndpointConfigServerlessConfigPtrOutputWithContext(ctx context.Context) EndpointConfigServerlessConfigPtrOutput {
	return o
}

func (o EndpointConfigServerlessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigServerlessConfig] {
	return pulumix.Output[*EndpointConfigServerlessConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigServerlessConfigPtrOutput) Elem() EndpointConfigServerlessConfigOutput {
	return o.ApplyT(func(v *EndpointConfigServerlessConfig) EndpointConfigServerlessConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigServerlessConfig
		return ret
	}).(EndpointConfigServerlessConfigOutput)
}

func (o EndpointConfigServerlessConfigPtrOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigServerlessConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxConcurrency
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigServerlessConfigPtrOutput) MemorySizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigServerlessConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MemorySizeInMb
	}).(pulumi.IntPtrOutput)
}

func (o EndpointConfigServerlessConfigPtrOutput) ProvisionedConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointConfigServerlessConfig) *int {
		if v == nil {
			return nil
		}
		return v.ProvisionedConcurrency
	}).(pulumi.IntPtrOutput)
}

type EndpointConfigTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// EndpointConfigTagInput is an input type that accepts EndpointConfigTagArgs and EndpointConfigTagOutput values.
// You can construct a concrete instance of `EndpointConfigTagInput` via:
//
//	EndpointConfigTagArgs{...}
type EndpointConfigTagInput interface {
	pulumi.Input

	ToEndpointConfigTagOutput() EndpointConfigTagOutput
	ToEndpointConfigTagOutputWithContext(context.Context) EndpointConfigTagOutput
}

type EndpointConfigTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (EndpointConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigTag)(nil)).Elem()
}

func (i EndpointConfigTagArgs) ToEndpointConfigTagOutput() EndpointConfigTagOutput {
	return i.ToEndpointConfigTagOutputWithContext(context.Background())
}

func (i EndpointConfigTagArgs) ToEndpointConfigTagOutputWithContext(ctx context.Context) EndpointConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigTagOutput)
}

func (i EndpointConfigTagArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigTag] {
	return pulumix.Output[EndpointConfigTag]{
		OutputState: i.ToEndpointConfigTagOutputWithContext(ctx).OutputState,
	}
}

// EndpointConfigTagArrayInput is an input type that accepts EndpointConfigTagArray and EndpointConfigTagArrayOutput values.
// You can construct a concrete instance of `EndpointConfigTagArrayInput` via:
//
//	EndpointConfigTagArray{ EndpointConfigTagArgs{...} }
type EndpointConfigTagArrayInput interface {
	pulumi.Input

	ToEndpointConfigTagArrayOutput() EndpointConfigTagArrayOutput
	ToEndpointConfigTagArrayOutputWithContext(context.Context) EndpointConfigTagArrayOutput
}

type EndpointConfigTagArray []EndpointConfigTagInput

func (EndpointConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigTag)(nil)).Elem()
}

func (i EndpointConfigTagArray) ToEndpointConfigTagArrayOutput() EndpointConfigTagArrayOutput {
	return i.ToEndpointConfigTagArrayOutputWithContext(context.Background())
}

func (i EndpointConfigTagArray) ToEndpointConfigTagArrayOutputWithContext(ctx context.Context) EndpointConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigTagArrayOutput)
}

func (i EndpointConfigTagArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigTag] {
	return pulumix.Output[[]EndpointConfigTag]{
		OutputState: i.ToEndpointConfigTagArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigTagOutput struct{ *pulumi.OutputState }

func (EndpointConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigTag)(nil)).Elem()
}

func (o EndpointConfigTagOutput) ToEndpointConfigTagOutput() EndpointConfigTagOutput {
	return o
}

func (o EndpointConfigTagOutput) ToEndpointConfigTagOutputWithContext(ctx context.Context) EndpointConfigTagOutput {
	return o
}

func (o EndpointConfigTagOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigTag] {
	return pulumix.Output[EndpointConfigTag]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o EndpointConfigTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointConfigTag) string { return v.Value }).(pulumi.StringOutput)
}

type EndpointConfigTagArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigTag)(nil)).Elem()
}

func (o EndpointConfigTagArrayOutput) ToEndpointConfigTagArrayOutput() EndpointConfigTagArrayOutput {
	return o
}

func (o EndpointConfigTagArrayOutput) ToEndpointConfigTagArrayOutputWithContext(ctx context.Context) EndpointConfigTagArrayOutput {
	return o
}

func (o EndpointConfigTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointConfigTag] {
	return pulumix.Output[[]EndpointConfigTag]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigTagArrayOutput) Index(i pulumi.IntInput) EndpointConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigTag {
		return vs[0].([]EndpointConfigTag)[vs[1].(int)]
	}).(EndpointConfigTagOutput)
}

type EndpointConfigVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
}

// EndpointConfigVpcConfigInput is an input type that accepts EndpointConfigVpcConfigArgs and EndpointConfigVpcConfigOutput values.
// You can construct a concrete instance of `EndpointConfigVpcConfigInput` via:
//
//	EndpointConfigVpcConfigArgs{...}
type EndpointConfigVpcConfigInput interface {
	pulumi.Input

	ToEndpointConfigVpcConfigOutput() EndpointConfigVpcConfigOutput
	ToEndpointConfigVpcConfigOutputWithContext(context.Context) EndpointConfigVpcConfigOutput
}

type EndpointConfigVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Subnets          pulumi.StringArrayInput `pulumi:"subnets"`
}

func (EndpointConfigVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigVpcConfig)(nil)).Elem()
}

func (i EndpointConfigVpcConfigArgs) ToEndpointConfigVpcConfigOutput() EndpointConfigVpcConfigOutput {
	return i.ToEndpointConfigVpcConfigOutputWithContext(context.Background())
}

func (i EndpointConfigVpcConfigArgs) ToEndpointConfigVpcConfigOutputWithContext(ctx context.Context) EndpointConfigVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigVpcConfigOutput)
}

func (i EndpointConfigVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigVpcConfig] {
	return pulumix.Output[EndpointConfigVpcConfig]{
		OutputState: i.ToEndpointConfigVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointConfigVpcConfigArgs) ToEndpointConfigVpcConfigPtrOutput() EndpointConfigVpcConfigPtrOutput {
	return i.ToEndpointConfigVpcConfigPtrOutputWithContext(context.Background())
}

func (i EndpointConfigVpcConfigArgs) ToEndpointConfigVpcConfigPtrOutputWithContext(ctx context.Context) EndpointConfigVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigVpcConfigOutput).ToEndpointConfigVpcConfigPtrOutputWithContext(ctx)
}

// EndpointConfigVpcConfigPtrInput is an input type that accepts EndpointConfigVpcConfigArgs, EndpointConfigVpcConfigPtr and EndpointConfigVpcConfigPtrOutput values.
// You can construct a concrete instance of `EndpointConfigVpcConfigPtrInput` via:
//
//	        EndpointConfigVpcConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointConfigVpcConfigPtrInput interface {
	pulumi.Input

	ToEndpointConfigVpcConfigPtrOutput() EndpointConfigVpcConfigPtrOutput
	ToEndpointConfigVpcConfigPtrOutputWithContext(context.Context) EndpointConfigVpcConfigPtrOutput
}

type endpointConfigVpcConfigPtrType EndpointConfigVpcConfigArgs

func EndpointConfigVpcConfigPtr(v *EndpointConfigVpcConfigArgs) EndpointConfigVpcConfigPtrInput {
	return (*endpointConfigVpcConfigPtrType)(v)
}

func (*endpointConfigVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigVpcConfig)(nil)).Elem()
}

func (i *endpointConfigVpcConfigPtrType) ToEndpointConfigVpcConfigPtrOutput() EndpointConfigVpcConfigPtrOutput {
	return i.ToEndpointConfigVpcConfigPtrOutputWithContext(context.Background())
}

func (i *endpointConfigVpcConfigPtrType) ToEndpointConfigVpcConfigPtrOutputWithContext(ctx context.Context) EndpointConfigVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigVpcConfigPtrOutput)
}

func (i *endpointConfigVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigVpcConfig] {
	return pulumix.Output[*EndpointConfigVpcConfig]{
		OutputState: i.ToEndpointConfigVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointConfigVpcConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigVpcConfig)(nil)).Elem()
}

func (o EndpointConfigVpcConfigOutput) ToEndpointConfigVpcConfigOutput() EndpointConfigVpcConfigOutput {
	return o
}

func (o EndpointConfigVpcConfigOutput) ToEndpointConfigVpcConfigOutputWithContext(ctx context.Context) EndpointConfigVpcConfigOutput {
	return o
}

func (o EndpointConfigVpcConfigOutput) ToEndpointConfigVpcConfigPtrOutput() EndpointConfigVpcConfigPtrOutput {
	return o.ToEndpointConfigVpcConfigPtrOutputWithContext(context.Background())
}

func (o EndpointConfigVpcConfigOutput) ToEndpointConfigVpcConfigPtrOutputWithContext(ctx context.Context) EndpointConfigVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointConfigVpcConfig) *EndpointConfigVpcConfig {
		return &v
	}).(EndpointConfigVpcConfigPtrOutput)
}

func (o EndpointConfigVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigVpcConfig] {
	return pulumix.Output[EndpointConfigVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type EndpointConfigVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointConfigVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConfigVpcConfig)(nil)).Elem()
}

func (o EndpointConfigVpcConfigPtrOutput) ToEndpointConfigVpcConfigPtrOutput() EndpointConfigVpcConfigPtrOutput {
	return o
}

func (o EndpointConfigVpcConfigPtrOutput) ToEndpointConfigVpcConfigPtrOutputWithContext(ctx context.Context) EndpointConfigVpcConfigPtrOutput {
	return o
}

func (o EndpointConfigVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigVpcConfig] {
	return pulumix.Output[*EndpointConfigVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointConfigVpcConfigPtrOutput) Elem() EndpointConfigVpcConfigOutput {
	return o.ApplyT(func(v *EndpointConfigVpcConfig) EndpointConfigVpcConfig {
		if v != nil {
			return *v
		}
		var ret EndpointConfigVpcConfig
		return ret
	}).(EndpointConfigVpcConfigOutput)
}

func (o EndpointConfigVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointConfigVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o EndpointConfigVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointConfigVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type EndpointDeploymentConfig struct {
	AutoRollbackConfiguration *EndpointAutoRollbackConfig    `pulumi:"autoRollbackConfiguration"`
	BlueGreenUpdatePolicy     *EndpointBlueGreenUpdatePolicy `pulumi:"blueGreenUpdatePolicy"`
	RollingUpdatePolicy       *EndpointRollingUpdatePolicy   `pulumi:"rollingUpdatePolicy"`
}

// EndpointDeploymentConfigInput is an input type that accepts EndpointDeploymentConfigArgs and EndpointDeploymentConfigOutput values.
// You can construct a concrete instance of `EndpointDeploymentConfigInput` via:
//
//	EndpointDeploymentConfigArgs{...}
type EndpointDeploymentConfigInput interface {
	pulumi.Input

	ToEndpointDeploymentConfigOutput() EndpointDeploymentConfigOutput
	ToEndpointDeploymentConfigOutputWithContext(context.Context) EndpointDeploymentConfigOutput
}

type EndpointDeploymentConfigArgs struct {
	AutoRollbackConfiguration EndpointAutoRollbackConfigPtrInput    `pulumi:"autoRollbackConfiguration"`
	BlueGreenUpdatePolicy     EndpointBlueGreenUpdatePolicyPtrInput `pulumi:"blueGreenUpdatePolicy"`
	RollingUpdatePolicy       EndpointRollingUpdatePolicyPtrInput   `pulumi:"rollingUpdatePolicy"`
}

func (EndpointDeploymentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfig)(nil)).Elem()
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigOutput() EndpointDeploymentConfigOutput {
	return i.ToEndpointDeploymentConfigOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigOutputWithContext(ctx context.Context) EndpointDeploymentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigOutput)
}

func (i EndpointDeploymentConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfig] {
	return pulumix.Output[EndpointDeploymentConfig]{
		OutputState: i.ToEndpointDeploymentConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigPtrOutput() EndpointDeploymentConfigPtrOutput {
	return i.ToEndpointDeploymentConfigPtrOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigPtrOutputWithContext(ctx context.Context) EndpointDeploymentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigOutput).ToEndpointDeploymentConfigPtrOutputWithContext(ctx)
}

// EndpointDeploymentConfigPtrInput is an input type that accepts EndpointDeploymentConfigArgs, EndpointDeploymentConfigPtr and EndpointDeploymentConfigPtrOutput values.
// You can construct a concrete instance of `EndpointDeploymentConfigPtrInput` via:
//
//	        EndpointDeploymentConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointDeploymentConfigPtrInput interface {
	pulumi.Input

	ToEndpointDeploymentConfigPtrOutput() EndpointDeploymentConfigPtrOutput
	ToEndpointDeploymentConfigPtrOutputWithContext(context.Context) EndpointDeploymentConfigPtrOutput
}

type endpointDeploymentConfigPtrType EndpointDeploymentConfigArgs

func EndpointDeploymentConfigPtr(v *EndpointDeploymentConfigArgs) EndpointDeploymentConfigPtrInput {
	return (*endpointDeploymentConfigPtrType)(v)
}

func (*endpointDeploymentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDeploymentConfig)(nil)).Elem()
}

func (i *endpointDeploymentConfigPtrType) ToEndpointDeploymentConfigPtrOutput() EndpointDeploymentConfigPtrOutput {
	return i.ToEndpointDeploymentConfigPtrOutputWithContext(context.Background())
}

func (i *endpointDeploymentConfigPtrType) ToEndpointDeploymentConfigPtrOutputWithContext(ctx context.Context) EndpointDeploymentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigPtrOutput)
}

func (i *endpointDeploymentConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfig] {
	return pulumix.Output[*EndpointDeploymentConfig]{
		OutputState: i.ToEndpointDeploymentConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointDeploymentConfigOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfig)(nil)).Elem()
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigOutput() EndpointDeploymentConfigOutput {
	return o
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigOutputWithContext(ctx context.Context) EndpointDeploymentConfigOutput {
	return o
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigPtrOutput() EndpointDeploymentConfigPtrOutput {
	return o.ToEndpointDeploymentConfigPtrOutputWithContext(context.Background())
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigPtrOutputWithContext(ctx context.Context) EndpointDeploymentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointDeploymentConfig) *EndpointDeploymentConfig {
		return &v
	}).(EndpointDeploymentConfigPtrOutput)
}

func (o EndpointDeploymentConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfig] {
	return pulumix.Output[EndpointDeploymentConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointDeploymentConfigOutput) AutoRollbackConfiguration() EndpointAutoRollbackConfigPtrOutput {
	return o.ApplyT(func(v EndpointDeploymentConfig) *EndpointAutoRollbackConfig { return v.AutoRollbackConfiguration }).(EndpointAutoRollbackConfigPtrOutput)
}

func (o EndpointDeploymentConfigOutput) BlueGreenUpdatePolicy() EndpointBlueGreenUpdatePolicyPtrOutput {
	return o.ApplyT(func(v EndpointDeploymentConfig) *EndpointBlueGreenUpdatePolicy { return v.BlueGreenUpdatePolicy }).(EndpointBlueGreenUpdatePolicyPtrOutput)
}

func (o EndpointDeploymentConfigOutput) RollingUpdatePolicy() EndpointRollingUpdatePolicyPtrOutput {
	return o.ApplyT(func(v EndpointDeploymentConfig) *EndpointRollingUpdatePolicy { return v.RollingUpdatePolicy }).(EndpointRollingUpdatePolicyPtrOutput)
}

type EndpointDeploymentConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDeploymentConfig)(nil)).Elem()
}

func (o EndpointDeploymentConfigPtrOutput) ToEndpointDeploymentConfigPtrOutput() EndpointDeploymentConfigPtrOutput {
	return o
}

func (o EndpointDeploymentConfigPtrOutput) ToEndpointDeploymentConfigPtrOutputWithContext(ctx context.Context) EndpointDeploymentConfigPtrOutput {
	return o
}

func (o EndpointDeploymentConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfig] {
	return pulumix.Output[*EndpointDeploymentConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointDeploymentConfigPtrOutput) Elem() EndpointDeploymentConfigOutput {
	return o.ApplyT(func(v *EndpointDeploymentConfig) EndpointDeploymentConfig {
		if v != nil {
			return *v
		}
		var ret EndpointDeploymentConfig
		return ret
	}).(EndpointDeploymentConfigOutput)
}

func (o EndpointDeploymentConfigPtrOutput) AutoRollbackConfiguration() EndpointAutoRollbackConfigPtrOutput {
	return o.ApplyT(func(v *EndpointDeploymentConfig) *EndpointAutoRollbackConfig {
		if v == nil {
			return nil
		}
		return v.AutoRollbackConfiguration
	}).(EndpointAutoRollbackConfigPtrOutput)
}

func (o EndpointDeploymentConfigPtrOutput) BlueGreenUpdatePolicy() EndpointBlueGreenUpdatePolicyPtrOutput {
	return o.ApplyT(func(v *EndpointDeploymentConfig) *EndpointBlueGreenUpdatePolicy {
		if v == nil {
			return nil
		}
		return v.BlueGreenUpdatePolicy
	}).(EndpointBlueGreenUpdatePolicyPtrOutput)
}

func (o EndpointDeploymentConfigPtrOutput) RollingUpdatePolicy() EndpointRollingUpdatePolicyPtrOutput {
	return o.ApplyT(func(v *EndpointDeploymentConfig) *EndpointRollingUpdatePolicy {
		if v == nil {
			return nil
		}
		return v.RollingUpdatePolicy
	}).(EndpointRollingUpdatePolicyPtrOutput)
}

type EndpointRollingUpdatePolicy struct {
	MaximumBatchSize                 EndpointCapacitySize  `pulumi:"maximumBatchSize"`
	MaximumExecutionTimeoutInSeconds *int                  `pulumi:"maximumExecutionTimeoutInSeconds"`
	RollbackMaximumBatchSize         *EndpointCapacitySize `pulumi:"rollbackMaximumBatchSize"`
	WaitIntervalInSeconds            int                   `pulumi:"waitIntervalInSeconds"`
}

// EndpointRollingUpdatePolicyInput is an input type that accepts EndpointRollingUpdatePolicyArgs and EndpointRollingUpdatePolicyOutput values.
// You can construct a concrete instance of `EndpointRollingUpdatePolicyInput` via:
//
//	EndpointRollingUpdatePolicyArgs{...}
type EndpointRollingUpdatePolicyInput interface {
	pulumi.Input

	ToEndpointRollingUpdatePolicyOutput() EndpointRollingUpdatePolicyOutput
	ToEndpointRollingUpdatePolicyOutputWithContext(context.Context) EndpointRollingUpdatePolicyOutput
}

type EndpointRollingUpdatePolicyArgs struct {
	MaximumBatchSize                 EndpointCapacitySizeInput    `pulumi:"maximumBatchSize"`
	MaximumExecutionTimeoutInSeconds pulumi.IntPtrInput           `pulumi:"maximumExecutionTimeoutInSeconds"`
	RollbackMaximumBatchSize         EndpointCapacitySizePtrInput `pulumi:"rollbackMaximumBatchSize"`
	WaitIntervalInSeconds            pulumi.IntInput              `pulumi:"waitIntervalInSeconds"`
}

func (EndpointRollingUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRollingUpdatePolicy)(nil)).Elem()
}

func (i EndpointRollingUpdatePolicyArgs) ToEndpointRollingUpdatePolicyOutput() EndpointRollingUpdatePolicyOutput {
	return i.ToEndpointRollingUpdatePolicyOutputWithContext(context.Background())
}

func (i EndpointRollingUpdatePolicyArgs) ToEndpointRollingUpdatePolicyOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRollingUpdatePolicyOutput)
}

func (i EndpointRollingUpdatePolicyArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointRollingUpdatePolicy] {
	return pulumix.Output[EndpointRollingUpdatePolicy]{
		OutputState: i.ToEndpointRollingUpdatePolicyOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointRollingUpdatePolicyArgs) ToEndpointRollingUpdatePolicyPtrOutput() EndpointRollingUpdatePolicyPtrOutput {
	return i.ToEndpointRollingUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i EndpointRollingUpdatePolicyArgs) ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRollingUpdatePolicyOutput).ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx)
}

// EndpointRollingUpdatePolicyPtrInput is an input type that accepts EndpointRollingUpdatePolicyArgs, EndpointRollingUpdatePolicyPtr and EndpointRollingUpdatePolicyPtrOutput values.
// You can construct a concrete instance of `EndpointRollingUpdatePolicyPtrInput` via:
//
//	        EndpointRollingUpdatePolicyArgs{...}
//
//	or:
//
//	        nil
type EndpointRollingUpdatePolicyPtrInput interface {
	pulumi.Input

	ToEndpointRollingUpdatePolicyPtrOutput() EndpointRollingUpdatePolicyPtrOutput
	ToEndpointRollingUpdatePolicyPtrOutputWithContext(context.Context) EndpointRollingUpdatePolicyPtrOutput
}

type endpointRollingUpdatePolicyPtrType EndpointRollingUpdatePolicyArgs

func EndpointRollingUpdatePolicyPtr(v *EndpointRollingUpdatePolicyArgs) EndpointRollingUpdatePolicyPtrInput {
	return (*endpointRollingUpdatePolicyPtrType)(v)
}

func (*endpointRollingUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRollingUpdatePolicy)(nil)).Elem()
}

func (i *endpointRollingUpdatePolicyPtrType) ToEndpointRollingUpdatePolicyPtrOutput() EndpointRollingUpdatePolicyPtrOutput {
	return i.ToEndpointRollingUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *endpointRollingUpdatePolicyPtrType) ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRollingUpdatePolicyPtrOutput)
}

func (i *endpointRollingUpdatePolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointRollingUpdatePolicy] {
	return pulumix.Output[*EndpointRollingUpdatePolicy]{
		OutputState: i.ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointRollingUpdatePolicyOutput struct{ *pulumi.OutputState }

func (EndpointRollingUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRollingUpdatePolicy)(nil)).Elem()
}

func (o EndpointRollingUpdatePolicyOutput) ToEndpointRollingUpdatePolicyOutput() EndpointRollingUpdatePolicyOutput {
	return o
}

func (o EndpointRollingUpdatePolicyOutput) ToEndpointRollingUpdatePolicyOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyOutput {
	return o
}

func (o EndpointRollingUpdatePolicyOutput) ToEndpointRollingUpdatePolicyPtrOutput() EndpointRollingUpdatePolicyPtrOutput {
	return o.ToEndpointRollingUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o EndpointRollingUpdatePolicyOutput) ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointRollingUpdatePolicy) *EndpointRollingUpdatePolicy {
		return &v
	}).(EndpointRollingUpdatePolicyPtrOutput)
}

func (o EndpointRollingUpdatePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointRollingUpdatePolicy] {
	return pulumix.Output[EndpointRollingUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

func (o EndpointRollingUpdatePolicyOutput) MaximumBatchSize() EndpointCapacitySizeOutput {
	return o.ApplyT(func(v EndpointRollingUpdatePolicy) EndpointCapacitySize { return v.MaximumBatchSize }).(EndpointCapacitySizeOutput)
}

func (o EndpointRollingUpdatePolicyOutput) MaximumExecutionTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointRollingUpdatePolicy) *int { return v.MaximumExecutionTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o EndpointRollingUpdatePolicyOutput) RollbackMaximumBatchSize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v EndpointRollingUpdatePolicy) *EndpointCapacitySize { return v.RollbackMaximumBatchSize }).(EndpointCapacitySizePtrOutput)
}

func (o EndpointRollingUpdatePolicyOutput) WaitIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointRollingUpdatePolicy) int { return v.WaitIntervalInSeconds }).(pulumi.IntOutput)
}

type EndpointRollingUpdatePolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointRollingUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRollingUpdatePolicy)(nil)).Elem()
}

func (o EndpointRollingUpdatePolicyPtrOutput) ToEndpointRollingUpdatePolicyPtrOutput() EndpointRollingUpdatePolicyPtrOutput {
	return o
}

func (o EndpointRollingUpdatePolicyPtrOutput) ToEndpointRollingUpdatePolicyPtrOutputWithContext(ctx context.Context) EndpointRollingUpdatePolicyPtrOutput {
	return o
}

func (o EndpointRollingUpdatePolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointRollingUpdatePolicy] {
	return pulumix.Output[*EndpointRollingUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

func (o EndpointRollingUpdatePolicyPtrOutput) Elem() EndpointRollingUpdatePolicyOutput {
	return o.ApplyT(func(v *EndpointRollingUpdatePolicy) EndpointRollingUpdatePolicy {
		if v != nil {
			return *v
		}
		var ret EndpointRollingUpdatePolicy
		return ret
	}).(EndpointRollingUpdatePolicyOutput)
}

func (o EndpointRollingUpdatePolicyPtrOutput) MaximumBatchSize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v *EndpointRollingUpdatePolicy) *EndpointCapacitySize {
		if v == nil {
			return nil
		}
		return &v.MaximumBatchSize
	}).(EndpointCapacitySizePtrOutput)
}

func (o EndpointRollingUpdatePolicyPtrOutput) MaximumExecutionTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointRollingUpdatePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumExecutionTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o EndpointRollingUpdatePolicyPtrOutput) RollbackMaximumBatchSize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v *EndpointRollingUpdatePolicy) *EndpointCapacitySize {
		if v == nil {
			return nil
		}
		return v.RollbackMaximumBatchSize
	}).(EndpointCapacitySizePtrOutput)
}

func (o EndpointRollingUpdatePolicyPtrOutput) WaitIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointRollingUpdatePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.WaitIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

type EndpointTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// EndpointTagInput is an input type that accepts EndpointTagArgs and EndpointTagOutput values.
// You can construct a concrete instance of `EndpointTagInput` via:
//
//	EndpointTagArgs{...}
type EndpointTagInput interface {
	pulumi.Input

	ToEndpointTagOutput() EndpointTagOutput
	ToEndpointTagOutputWithContext(context.Context) EndpointTagOutput
}

type EndpointTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (EndpointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTag)(nil)).Elem()
}

func (i EndpointTagArgs) ToEndpointTagOutput() EndpointTagOutput {
	return i.ToEndpointTagOutputWithContext(context.Background())
}

func (i EndpointTagArgs) ToEndpointTagOutputWithContext(ctx context.Context) EndpointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTagOutput)
}

func (i EndpointTagArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointTag] {
	return pulumix.Output[EndpointTag]{
		OutputState: i.ToEndpointTagOutputWithContext(ctx).OutputState,
	}
}

// EndpointTagArrayInput is an input type that accepts EndpointTagArray and EndpointTagArrayOutput values.
// You can construct a concrete instance of `EndpointTagArrayInput` via:
//
//	EndpointTagArray{ EndpointTagArgs{...} }
type EndpointTagArrayInput interface {
	pulumi.Input

	ToEndpointTagArrayOutput() EndpointTagArrayOutput
	ToEndpointTagArrayOutputWithContext(context.Context) EndpointTagArrayOutput
}

type EndpointTagArray []EndpointTagInput

func (EndpointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointTag)(nil)).Elem()
}

func (i EndpointTagArray) ToEndpointTagArrayOutput() EndpointTagArrayOutput {
	return i.ToEndpointTagArrayOutputWithContext(context.Background())
}

func (i EndpointTagArray) ToEndpointTagArrayOutputWithContext(ctx context.Context) EndpointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTagArrayOutput)
}

func (i EndpointTagArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointTag] {
	return pulumix.Output[[]EndpointTag]{
		OutputState: i.ToEndpointTagArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointTagOutput struct{ *pulumi.OutputState }

func (EndpointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTag)(nil)).Elem()
}

func (o EndpointTagOutput) ToEndpointTagOutput() EndpointTagOutput {
	return o
}

func (o EndpointTagOutput) ToEndpointTagOutputWithContext(ctx context.Context) EndpointTagOutput {
	return o
}

func (o EndpointTagOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointTag] {
	return pulumix.Output[EndpointTag]{
		OutputState: o.OutputState,
	}
}

func (o EndpointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o EndpointTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointTag) string { return v.Value }).(pulumi.StringOutput)
}

type EndpointTagArrayOutput struct{ *pulumi.OutputState }

func (EndpointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointTag)(nil)).Elem()
}

func (o EndpointTagArrayOutput) ToEndpointTagArrayOutput() EndpointTagArrayOutput {
	return o
}

func (o EndpointTagArrayOutput) ToEndpointTagArrayOutputWithContext(ctx context.Context) EndpointTagArrayOutput {
	return o
}

func (o EndpointTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointTag] {
	return pulumix.Output[[]EndpointTag]{
		OutputState: o.OutputState,
	}
}

func (o EndpointTagArrayOutput) Index(i pulumi.IntInput) EndpointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointTag {
		return vs[0].([]EndpointTag)[vs[1].(int)]
	}).(EndpointTagOutput)
}

type EndpointTrafficRoutingConfig struct {
	CanarySize            *EndpointCapacitySize `pulumi:"canarySize"`
	LinearStepSize        *EndpointCapacitySize `pulumi:"linearStepSize"`
	Type                  string                `pulumi:"type"`
	WaitIntervalInSeconds *int                  `pulumi:"waitIntervalInSeconds"`
}

// EndpointTrafficRoutingConfigInput is an input type that accepts EndpointTrafficRoutingConfigArgs and EndpointTrafficRoutingConfigOutput values.
// You can construct a concrete instance of `EndpointTrafficRoutingConfigInput` via:
//
//	EndpointTrafficRoutingConfigArgs{...}
type EndpointTrafficRoutingConfigInput interface {
	pulumi.Input

	ToEndpointTrafficRoutingConfigOutput() EndpointTrafficRoutingConfigOutput
	ToEndpointTrafficRoutingConfigOutputWithContext(context.Context) EndpointTrafficRoutingConfigOutput
}

type EndpointTrafficRoutingConfigArgs struct {
	CanarySize            EndpointCapacitySizePtrInput `pulumi:"canarySize"`
	LinearStepSize        EndpointCapacitySizePtrInput `pulumi:"linearStepSize"`
	Type                  pulumi.StringInput           `pulumi:"type"`
	WaitIntervalInSeconds pulumi.IntPtrInput           `pulumi:"waitIntervalInSeconds"`
}

func (EndpointTrafficRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTrafficRoutingConfig)(nil)).Elem()
}

func (i EndpointTrafficRoutingConfigArgs) ToEndpointTrafficRoutingConfigOutput() EndpointTrafficRoutingConfigOutput {
	return i.ToEndpointTrafficRoutingConfigOutputWithContext(context.Background())
}

func (i EndpointTrafficRoutingConfigArgs) ToEndpointTrafficRoutingConfigOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTrafficRoutingConfigOutput)
}

func (i EndpointTrafficRoutingConfigArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointTrafficRoutingConfig] {
	return pulumix.Output[EndpointTrafficRoutingConfig]{
		OutputState: i.ToEndpointTrafficRoutingConfigOutputWithContext(ctx).OutputState,
	}
}

func (i EndpointTrafficRoutingConfigArgs) ToEndpointTrafficRoutingConfigPtrOutput() EndpointTrafficRoutingConfigPtrOutput {
	return i.ToEndpointTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (i EndpointTrafficRoutingConfigArgs) ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTrafficRoutingConfigOutput).ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx)
}

// EndpointTrafficRoutingConfigPtrInput is an input type that accepts EndpointTrafficRoutingConfigArgs, EndpointTrafficRoutingConfigPtr and EndpointTrafficRoutingConfigPtrOutput values.
// You can construct a concrete instance of `EndpointTrafficRoutingConfigPtrInput` via:
//
//	        EndpointTrafficRoutingConfigArgs{...}
//
//	or:
//
//	        nil
type EndpointTrafficRoutingConfigPtrInput interface {
	pulumi.Input

	ToEndpointTrafficRoutingConfigPtrOutput() EndpointTrafficRoutingConfigPtrOutput
	ToEndpointTrafficRoutingConfigPtrOutputWithContext(context.Context) EndpointTrafficRoutingConfigPtrOutput
}

type endpointTrafficRoutingConfigPtrType EndpointTrafficRoutingConfigArgs

func EndpointTrafficRoutingConfigPtr(v *EndpointTrafficRoutingConfigArgs) EndpointTrafficRoutingConfigPtrInput {
	return (*endpointTrafficRoutingConfigPtrType)(v)
}

func (*endpointTrafficRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointTrafficRoutingConfig)(nil)).Elem()
}

func (i *endpointTrafficRoutingConfigPtrType) ToEndpointTrafficRoutingConfigPtrOutput() EndpointTrafficRoutingConfigPtrOutput {
	return i.ToEndpointTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *endpointTrafficRoutingConfigPtrType) ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTrafficRoutingConfigPtrOutput)
}

func (i *endpointTrafficRoutingConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*EndpointTrafficRoutingConfig] {
	return pulumix.Output[*EndpointTrafficRoutingConfig]{
		OutputState: i.ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type EndpointTrafficRoutingConfigOutput struct{ *pulumi.OutputState }

func (EndpointTrafficRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTrafficRoutingConfig)(nil)).Elem()
}

func (o EndpointTrafficRoutingConfigOutput) ToEndpointTrafficRoutingConfigOutput() EndpointTrafficRoutingConfigOutput {
	return o
}

func (o EndpointTrafficRoutingConfigOutput) ToEndpointTrafficRoutingConfigOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigOutput {
	return o
}

func (o EndpointTrafficRoutingConfigOutput) ToEndpointTrafficRoutingConfigPtrOutput() EndpointTrafficRoutingConfigPtrOutput {
	return o.ToEndpointTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (o EndpointTrafficRoutingConfigOutput) ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointTrafficRoutingConfig) *EndpointTrafficRoutingConfig {
		return &v
	}).(EndpointTrafficRoutingConfigPtrOutput)
}

func (o EndpointTrafficRoutingConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointTrafficRoutingConfig] {
	return pulumix.Output[EndpointTrafficRoutingConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointTrafficRoutingConfigOutput) CanarySize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v EndpointTrafficRoutingConfig) *EndpointCapacitySize { return v.CanarySize }).(EndpointCapacitySizePtrOutput)
}

func (o EndpointTrafficRoutingConfigOutput) LinearStepSize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v EndpointTrafficRoutingConfig) *EndpointCapacitySize { return v.LinearStepSize }).(EndpointCapacitySizePtrOutput)
}

func (o EndpointTrafficRoutingConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointTrafficRoutingConfig) string { return v.Type }).(pulumi.StringOutput)
}

func (o EndpointTrafficRoutingConfigOutput) WaitIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointTrafficRoutingConfig) *int { return v.WaitIntervalInSeconds }).(pulumi.IntPtrOutput)
}

type EndpointTrafficRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (EndpointTrafficRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointTrafficRoutingConfig)(nil)).Elem()
}

func (o EndpointTrafficRoutingConfigPtrOutput) ToEndpointTrafficRoutingConfigPtrOutput() EndpointTrafficRoutingConfigPtrOutput {
	return o
}

func (o EndpointTrafficRoutingConfigPtrOutput) ToEndpointTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) EndpointTrafficRoutingConfigPtrOutput {
	return o
}

func (o EndpointTrafficRoutingConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EndpointTrafficRoutingConfig] {
	return pulumix.Output[*EndpointTrafficRoutingConfig]{
		OutputState: o.OutputState,
	}
}

func (o EndpointTrafficRoutingConfigPtrOutput) Elem() EndpointTrafficRoutingConfigOutput {
	return o.ApplyT(func(v *EndpointTrafficRoutingConfig) EndpointTrafficRoutingConfig {
		if v != nil {
			return *v
		}
		var ret EndpointTrafficRoutingConfig
		return ret
	}).(EndpointTrafficRoutingConfigOutput)
}

func (o EndpointTrafficRoutingConfigPtrOutput) CanarySize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v *EndpointTrafficRoutingConfig) *EndpointCapacitySize {
		if v == nil {
			return nil
		}
		return v.CanarySize
	}).(EndpointCapacitySizePtrOutput)
}

func (o EndpointTrafficRoutingConfigPtrOutput) LinearStepSize() EndpointCapacitySizePtrOutput {
	return o.ApplyT(func(v *EndpointTrafficRoutingConfig) *EndpointCapacitySize {
		if v == nil {
			return nil
		}
		return v.LinearStepSize
	}).(EndpointCapacitySizePtrOutput)
}

func (o EndpointTrafficRoutingConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficRoutingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o EndpointTrafficRoutingConfigPtrOutput) WaitIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointTrafficRoutingConfig) *int {
		if v == nil {
			return nil
		}
		return v.WaitIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

type EndpointVariantProperty struct {
	VariantPropertyType *string `pulumi:"variantPropertyType"`
}

// EndpointVariantPropertyInput is an input type that accepts EndpointVariantPropertyArgs and EndpointVariantPropertyOutput values.
// You can construct a concrete instance of `EndpointVariantPropertyInput` via:
//
//	EndpointVariantPropertyArgs{...}
type EndpointVariantPropertyInput interface {
	pulumi.Input

	ToEndpointVariantPropertyOutput() EndpointVariantPropertyOutput
	ToEndpointVariantPropertyOutputWithContext(context.Context) EndpointVariantPropertyOutput
}

type EndpointVariantPropertyArgs struct {
	VariantPropertyType pulumi.StringPtrInput `pulumi:"variantPropertyType"`
}

func (EndpointVariantPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointVariantProperty)(nil)).Elem()
}

func (i EndpointVariantPropertyArgs) ToEndpointVariantPropertyOutput() EndpointVariantPropertyOutput {
	return i.ToEndpointVariantPropertyOutputWithContext(context.Background())
}

func (i EndpointVariantPropertyArgs) ToEndpointVariantPropertyOutputWithContext(ctx context.Context) EndpointVariantPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointVariantPropertyOutput)
}

func (i EndpointVariantPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[EndpointVariantProperty] {
	return pulumix.Output[EndpointVariantProperty]{
		OutputState: i.ToEndpointVariantPropertyOutputWithContext(ctx).OutputState,
	}
}

// EndpointVariantPropertyArrayInput is an input type that accepts EndpointVariantPropertyArray and EndpointVariantPropertyArrayOutput values.
// You can construct a concrete instance of `EndpointVariantPropertyArrayInput` via:
//
//	EndpointVariantPropertyArray{ EndpointVariantPropertyArgs{...} }
type EndpointVariantPropertyArrayInput interface {
	pulumi.Input

	ToEndpointVariantPropertyArrayOutput() EndpointVariantPropertyArrayOutput
	ToEndpointVariantPropertyArrayOutputWithContext(context.Context) EndpointVariantPropertyArrayOutput
}

type EndpointVariantPropertyArray []EndpointVariantPropertyInput

func (EndpointVariantPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointVariantProperty)(nil)).Elem()
}

func (i EndpointVariantPropertyArray) ToEndpointVariantPropertyArrayOutput() EndpointVariantPropertyArrayOutput {
	return i.ToEndpointVariantPropertyArrayOutputWithContext(context.Background())
}

func (i EndpointVariantPropertyArray) ToEndpointVariantPropertyArrayOutputWithContext(ctx context.Context) EndpointVariantPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointVariantPropertyArrayOutput)
}

func (i EndpointVariantPropertyArray) ToOutput(ctx context.Context) pulumix.Output[[]EndpointVariantProperty] {
	return pulumix.Output[[]EndpointVariantProperty]{
		OutputState: i.ToEndpointVariantPropertyArrayOutputWithContext(ctx).OutputState,
	}
}

type EndpointVariantPropertyOutput struct{ *pulumi.OutputState }

func (EndpointVariantPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointVariantProperty)(nil)).Elem()
}

func (o EndpointVariantPropertyOutput) ToEndpointVariantPropertyOutput() EndpointVariantPropertyOutput {
	return o
}

func (o EndpointVariantPropertyOutput) ToEndpointVariantPropertyOutputWithContext(ctx context.Context) EndpointVariantPropertyOutput {
	return o
}

func (o EndpointVariantPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointVariantProperty] {
	return pulumix.Output[EndpointVariantProperty]{
		OutputState: o.OutputState,
	}
}

func (o EndpointVariantPropertyOutput) VariantPropertyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointVariantProperty) *string { return v.VariantPropertyType }).(pulumi.StringPtrOutput)
}

type EndpointVariantPropertyArrayOutput struct{ *pulumi.OutputState }

func (EndpointVariantPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointVariantProperty)(nil)).Elem()
}

func (o EndpointVariantPropertyArrayOutput) ToEndpointVariantPropertyArrayOutput() EndpointVariantPropertyArrayOutput {
	return o
}

func (o EndpointVariantPropertyArrayOutput) ToEndpointVariantPropertyArrayOutputWithContext(ctx context.Context) EndpointVariantPropertyArrayOutput {
	return o
}

func (o EndpointVariantPropertyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EndpointVariantProperty] {
	return pulumix.Output[[]EndpointVariantProperty]{
		OutputState: o.OutputState,
	}
}

func (o EndpointVariantPropertyArrayOutput) Index(i pulumi.IntInput) EndpointVariantPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointVariantProperty {
		return vs[0].([]EndpointVariantProperty)[vs[1].(int)]
	}).(EndpointVariantPropertyOutput)
}

type FeatureGroupDataCatalogConfig struct {
	Catalog   string `pulumi:"catalog"`
	Database  string `pulumi:"database"`
	TableName string `pulumi:"tableName"`
}

// FeatureGroupDataCatalogConfigInput is an input type that accepts FeatureGroupDataCatalogConfigArgs and FeatureGroupDataCatalogConfigOutput values.
// You can construct a concrete instance of `FeatureGroupDataCatalogConfigInput` via:
//
//	FeatureGroupDataCatalogConfigArgs{...}
type FeatureGroupDataCatalogConfigInput interface {
	pulumi.Input

	ToFeatureGroupDataCatalogConfigOutput() FeatureGroupDataCatalogConfigOutput
	ToFeatureGroupDataCatalogConfigOutputWithContext(context.Context) FeatureGroupDataCatalogConfigOutput
}

type FeatureGroupDataCatalogConfigArgs struct {
	Catalog   pulumi.StringInput `pulumi:"catalog"`
	Database  pulumi.StringInput `pulumi:"database"`
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (FeatureGroupDataCatalogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupDataCatalogConfig)(nil)).Elem()
}

func (i FeatureGroupDataCatalogConfigArgs) ToFeatureGroupDataCatalogConfigOutput() FeatureGroupDataCatalogConfigOutput {
	return i.ToFeatureGroupDataCatalogConfigOutputWithContext(context.Background())
}

func (i FeatureGroupDataCatalogConfigArgs) ToFeatureGroupDataCatalogConfigOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupDataCatalogConfigOutput)
}

func (i FeatureGroupDataCatalogConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupDataCatalogConfig] {
	return pulumix.Output[FeatureGroupDataCatalogConfig]{
		OutputState: i.ToFeatureGroupDataCatalogConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FeatureGroupDataCatalogConfigArgs) ToFeatureGroupDataCatalogConfigPtrOutput() FeatureGroupDataCatalogConfigPtrOutput {
	return i.ToFeatureGroupDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (i FeatureGroupDataCatalogConfigArgs) ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupDataCatalogConfigOutput).ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx)
}

// FeatureGroupDataCatalogConfigPtrInput is an input type that accepts FeatureGroupDataCatalogConfigArgs, FeatureGroupDataCatalogConfigPtr and FeatureGroupDataCatalogConfigPtrOutput values.
// You can construct a concrete instance of `FeatureGroupDataCatalogConfigPtrInput` via:
//
//	        FeatureGroupDataCatalogConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureGroupDataCatalogConfigPtrInput interface {
	pulumi.Input

	ToFeatureGroupDataCatalogConfigPtrOutput() FeatureGroupDataCatalogConfigPtrOutput
	ToFeatureGroupDataCatalogConfigPtrOutputWithContext(context.Context) FeatureGroupDataCatalogConfigPtrOutput
}

type featureGroupDataCatalogConfigPtrType FeatureGroupDataCatalogConfigArgs

func FeatureGroupDataCatalogConfigPtr(v *FeatureGroupDataCatalogConfigArgs) FeatureGroupDataCatalogConfigPtrInput {
	return (*featureGroupDataCatalogConfigPtrType)(v)
}

func (*featureGroupDataCatalogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupDataCatalogConfig)(nil)).Elem()
}

func (i *featureGroupDataCatalogConfigPtrType) ToFeatureGroupDataCatalogConfigPtrOutput() FeatureGroupDataCatalogConfigPtrOutput {
	return i.ToFeatureGroupDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (i *featureGroupDataCatalogConfigPtrType) ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupDataCatalogConfigPtrOutput)
}

func (i *featureGroupDataCatalogConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupDataCatalogConfig] {
	return pulumix.Output[*FeatureGroupDataCatalogConfig]{
		OutputState: i.ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FeatureGroupDataCatalogConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupDataCatalogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupDataCatalogConfig)(nil)).Elem()
}

func (o FeatureGroupDataCatalogConfigOutput) ToFeatureGroupDataCatalogConfigOutput() FeatureGroupDataCatalogConfigOutput {
	return o
}

func (o FeatureGroupDataCatalogConfigOutput) ToFeatureGroupDataCatalogConfigOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigOutput {
	return o
}

func (o FeatureGroupDataCatalogConfigOutput) ToFeatureGroupDataCatalogConfigPtrOutput() FeatureGroupDataCatalogConfigPtrOutput {
	return o.ToFeatureGroupDataCatalogConfigPtrOutputWithContext(context.Background())
}

func (o FeatureGroupDataCatalogConfigOutput) ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureGroupDataCatalogConfig) *FeatureGroupDataCatalogConfig {
		return &v
	}).(FeatureGroupDataCatalogConfigPtrOutput)
}

func (o FeatureGroupDataCatalogConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupDataCatalogConfig] {
	return pulumix.Output[FeatureGroupDataCatalogConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupDataCatalogConfigOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupDataCatalogConfig) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o FeatureGroupDataCatalogConfigOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupDataCatalogConfig) string { return v.Database }).(pulumi.StringOutput)
}

func (o FeatureGroupDataCatalogConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupDataCatalogConfig) string { return v.TableName }).(pulumi.StringOutput)
}

type FeatureGroupDataCatalogConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureGroupDataCatalogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupDataCatalogConfig)(nil)).Elem()
}

func (o FeatureGroupDataCatalogConfigPtrOutput) ToFeatureGroupDataCatalogConfigPtrOutput() FeatureGroupDataCatalogConfigPtrOutput {
	return o
}

func (o FeatureGroupDataCatalogConfigPtrOutput) ToFeatureGroupDataCatalogConfigPtrOutputWithContext(ctx context.Context) FeatureGroupDataCatalogConfigPtrOutput {
	return o
}

func (o FeatureGroupDataCatalogConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupDataCatalogConfig] {
	return pulumix.Output[*FeatureGroupDataCatalogConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupDataCatalogConfigPtrOutput) Elem() FeatureGroupDataCatalogConfigOutput {
	return o.ApplyT(func(v *FeatureGroupDataCatalogConfig) FeatureGroupDataCatalogConfig {
		if v != nil {
			return *v
		}
		var ret FeatureGroupDataCatalogConfig
		return ret
	}).(FeatureGroupDataCatalogConfigOutput)
}

func (o FeatureGroupDataCatalogConfigPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupDataCatalogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

func (o FeatureGroupDataCatalogConfigPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupDataCatalogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

func (o FeatureGroupDataCatalogConfigPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupDataCatalogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type FeatureGroupFeatureDefinition struct {
	FeatureName string                                   `pulumi:"featureName"`
	FeatureType FeatureGroupFeatureDefinitionFeatureType `pulumi:"featureType"`
}

// FeatureGroupFeatureDefinitionInput is an input type that accepts FeatureGroupFeatureDefinitionArgs and FeatureGroupFeatureDefinitionOutput values.
// You can construct a concrete instance of `FeatureGroupFeatureDefinitionInput` via:
//
//	FeatureGroupFeatureDefinitionArgs{...}
type FeatureGroupFeatureDefinitionInput interface {
	pulumi.Input

	ToFeatureGroupFeatureDefinitionOutput() FeatureGroupFeatureDefinitionOutput
	ToFeatureGroupFeatureDefinitionOutputWithContext(context.Context) FeatureGroupFeatureDefinitionOutput
}

type FeatureGroupFeatureDefinitionArgs struct {
	FeatureName pulumi.StringInput                            `pulumi:"featureName"`
	FeatureType FeatureGroupFeatureDefinitionFeatureTypeInput `pulumi:"featureType"`
}

func (FeatureGroupFeatureDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (i FeatureGroupFeatureDefinitionArgs) ToFeatureGroupFeatureDefinitionOutput() FeatureGroupFeatureDefinitionOutput {
	return i.ToFeatureGroupFeatureDefinitionOutputWithContext(context.Background())
}

func (i FeatureGroupFeatureDefinitionArgs) ToFeatureGroupFeatureDefinitionOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupFeatureDefinitionOutput)
}

func (i FeatureGroupFeatureDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupFeatureDefinition] {
	return pulumix.Output[FeatureGroupFeatureDefinition]{
		OutputState: i.ToFeatureGroupFeatureDefinitionOutputWithContext(ctx).OutputState,
	}
}

// FeatureGroupFeatureDefinitionArrayInput is an input type that accepts FeatureGroupFeatureDefinitionArray and FeatureGroupFeatureDefinitionArrayOutput values.
// You can construct a concrete instance of `FeatureGroupFeatureDefinitionArrayInput` via:
//
//	FeatureGroupFeatureDefinitionArray{ FeatureGroupFeatureDefinitionArgs{...} }
type FeatureGroupFeatureDefinitionArrayInput interface {
	pulumi.Input

	ToFeatureGroupFeatureDefinitionArrayOutput() FeatureGroupFeatureDefinitionArrayOutput
	ToFeatureGroupFeatureDefinitionArrayOutputWithContext(context.Context) FeatureGroupFeatureDefinitionArrayOutput
}

type FeatureGroupFeatureDefinitionArray []FeatureGroupFeatureDefinitionInput

func (FeatureGroupFeatureDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (i FeatureGroupFeatureDefinitionArray) ToFeatureGroupFeatureDefinitionArrayOutput() FeatureGroupFeatureDefinitionArrayOutput {
	return i.ToFeatureGroupFeatureDefinitionArrayOutputWithContext(context.Background())
}

func (i FeatureGroupFeatureDefinitionArray) ToFeatureGroupFeatureDefinitionArrayOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupFeatureDefinitionArrayOutput)
}

func (i FeatureGroupFeatureDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]FeatureGroupFeatureDefinition] {
	return pulumix.Output[[]FeatureGroupFeatureDefinition]{
		OutputState: i.ToFeatureGroupFeatureDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

type FeatureGroupFeatureDefinitionOutput struct{ *pulumi.OutputState }

func (FeatureGroupFeatureDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (o FeatureGroupFeatureDefinitionOutput) ToFeatureGroupFeatureDefinitionOutput() FeatureGroupFeatureDefinitionOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionOutput) ToFeatureGroupFeatureDefinitionOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupFeatureDefinition] {
	return pulumix.Output[FeatureGroupFeatureDefinition]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupFeatureDefinitionOutput) FeatureName() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupFeatureDefinition) string { return v.FeatureName }).(pulumi.StringOutput)
}

func (o FeatureGroupFeatureDefinitionOutput) FeatureType() FeatureGroupFeatureDefinitionFeatureTypeOutput {
	return o.ApplyT(func(v FeatureGroupFeatureDefinition) FeatureGroupFeatureDefinitionFeatureType { return v.FeatureType }).(FeatureGroupFeatureDefinitionFeatureTypeOutput)
}

type FeatureGroupFeatureDefinitionArrayOutput struct{ *pulumi.OutputState }

func (FeatureGroupFeatureDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (o FeatureGroupFeatureDefinitionArrayOutput) ToFeatureGroupFeatureDefinitionArrayOutput() FeatureGroupFeatureDefinitionArrayOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionArrayOutput) ToFeatureGroupFeatureDefinitionArrayOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionArrayOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FeatureGroupFeatureDefinition] {
	return pulumix.Output[[]FeatureGroupFeatureDefinition]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupFeatureDefinitionArrayOutput) Index(i pulumi.IntInput) FeatureGroupFeatureDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureGroupFeatureDefinition {
		return vs[0].([]FeatureGroupFeatureDefinition)[vs[1].(int)]
	}).(FeatureGroupFeatureDefinitionOutput)
}

type FeatureGroupOnlineStoreSecurityConfig struct {
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// FeatureGroupOnlineStoreSecurityConfigInput is an input type that accepts FeatureGroupOnlineStoreSecurityConfigArgs and FeatureGroupOnlineStoreSecurityConfigOutput values.
// You can construct a concrete instance of `FeatureGroupOnlineStoreSecurityConfigInput` via:
//
//	FeatureGroupOnlineStoreSecurityConfigArgs{...}
type FeatureGroupOnlineStoreSecurityConfigInput interface {
	pulumi.Input

	ToFeatureGroupOnlineStoreSecurityConfigOutput() FeatureGroupOnlineStoreSecurityConfigOutput
	ToFeatureGroupOnlineStoreSecurityConfigOutputWithContext(context.Context) FeatureGroupOnlineStoreSecurityConfigOutput
}

type FeatureGroupOnlineStoreSecurityConfigArgs struct {
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (FeatureGroupOnlineStoreSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreSecurityConfig)(nil)).Elem()
}

func (i FeatureGroupOnlineStoreSecurityConfigArgs) ToFeatureGroupOnlineStoreSecurityConfigOutput() FeatureGroupOnlineStoreSecurityConfigOutput {
	return i.ToFeatureGroupOnlineStoreSecurityConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOnlineStoreSecurityConfigArgs) ToFeatureGroupOnlineStoreSecurityConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOnlineStoreSecurityConfigOutput)
}

func (i FeatureGroupOnlineStoreSecurityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOnlineStoreSecurityConfig] {
	return pulumix.Output[FeatureGroupOnlineStoreSecurityConfig]{
		OutputState: i.ToFeatureGroupOnlineStoreSecurityConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FeatureGroupOnlineStoreSecurityConfigArgs) ToFeatureGroupOnlineStoreSecurityConfigPtrOutput() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return i.ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(context.Background())
}

func (i FeatureGroupOnlineStoreSecurityConfigArgs) ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOnlineStoreSecurityConfigOutput).ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx)
}

// FeatureGroupOnlineStoreSecurityConfigPtrInput is an input type that accepts FeatureGroupOnlineStoreSecurityConfigArgs, FeatureGroupOnlineStoreSecurityConfigPtr and FeatureGroupOnlineStoreSecurityConfigPtrOutput values.
// You can construct a concrete instance of `FeatureGroupOnlineStoreSecurityConfigPtrInput` via:
//
//	        FeatureGroupOnlineStoreSecurityConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureGroupOnlineStoreSecurityConfigPtrInput interface {
	pulumi.Input

	ToFeatureGroupOnlineStoreSecurityConfigPtrOutput() FeatureGroupOnlineStoreSecurityConfigPtrOutput
	ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(context.Context) FeatureGroupOnlineStoreSecurityConfigPtrOutput
}

type featureGroupOnlineStoreSecurityConfigPtrType FeatureGroupOnlineStoreSecurityConfigArgs

func FeatureGroupOnlineStoreSecurityConfigPtr(v *FeatureGroupOnlineStoreSecurityConfigArgs) FeatureGroupOnlineStoreSecurityConfigPtrInput {
	return (*featureGroupOnlineStoreSecurityConfigPtrType)(v)
}

func (*featureGroupOnlineStoreSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupOnlineStoreSecurityConfig)(nil)).Elem()
}

func (i *featureGroupOnlineStoreSecurityConfigPtrType) ToFeatureGroupOnlineStoreSecurityConfigPtrOutput() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return i.ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *featureGroupOnlineStoreSecurityConfigPtrType) ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOnlineStoreSecurityConfigPtrOutput)
}

func (i *featureGroupOnlineStoreSecurityConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOnlineStoreSecurityConfig] {
	return pulumix.Output[*FeatureGroupOnlineStoreSecurityConfig]{
		OutputState: i.ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FeatureGroupOnlineStoreSecurityConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOnlineStoreSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreSecurityConfig)(nil)).Elem()
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) ToFeatureGroupOnlineStoreSecurityConfigOutput() FeatureGroupOnlineStoreSecurityConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) ToFeatureGroupOnlineStoreSecurityConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) ToFeatureGroupOnlineStoreSecurityConfigPtrOutput() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o.ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(context.Background())
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureGroupOnlineStoreSecurityConfig) *FeatureGroupOnlineStoreSecurityConfig {
		return &v
	}).(FeatureGroupOnlineStoreSecurityConfigPtrOutput)
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOnlineStoreSecurityConfig] {
	return pulumix.Output[FeatureGroupOnlineStoreSecurityConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupOnlineStoreSecurityConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureGroupOnlineStoreSecurityConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type FeatureGroupOnlineStoreSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureGroupOnlineStoreSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupOnlineStoreSecurityConfig)(nil)).Elem()
}

func (o FeatureGroupOnlineStoreSecurityConfigPtrOutput) ToFeatureGroupOnlineStoreSecurityConfigPtrOutput() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o
}

func (o FeatureGroupOnlineStoreSecurityConfigPtrOutput) ToFeatureGroupOnlineStoreSecurityConfigPtrOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o
}

func (o FeatureGroupOnlineStoreSecurityConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOnlineStoreSecurityConfig] {
	return pulumix.Output[*FeatureGroupOnlineStoreSecurityConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupOnlineStoreSecurityConfigPtrOutput) Elem() FeatureGroupOnlineStoreSecurityConfigOutput {
	return o.ApplyT(func(v *FeatureGroupOnlineStoreSecurityConfig) FeatureGroupOnlineStoreSecurityConfig {
		if v != nil {
			return *v
		}
		var ret FeatureGroupOnlineStoreSecurityConfig
		return ret
	}).(FeatureGroupOnlineStoreSecurityConfigOutput)
}

func (o FeatureGroupOnlineStoreSecurityConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupOnlineStoreSecurityConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type FeatureGroupS3StorageConfig struct {
	KmsKeyId *string `pulumi:"kmsKeyId"`
	S3Uri    string  `pulumi:"s3Uri"`
}

// FeatureGroupS3StorageConfigInput is an input type that accepts FeatureGroupS3StorageConfigArgs and FeatureGroupS3StorageConfigOutput values.
// You can construct a concrete instance of `FeatureGroupS3StorageConfigInput` via:
//
//	FeatureGroupS3StorageConfigArgs{...}
type FeatureGroupS3StorageConfigInput interface {
	pulumi.Input

	ToFeatureGroupS3StorageConfigOutput() FeatureGroupS3StorageConfigOutput
	ToFeatureGroupS3StorageConfigOutputWithContext(context.Context) FeatureGroupS3StorageConfigOutput
}

type FeatureGroupS3StorageConfigArgs struct {
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	S3Uri    pulumi.StringInput    `pulumi:"s3Uri"`
}

func (FeatureGroupS3StorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupS3StorageConfig)(nil)).Elem()
}

func (i FeatureGroupS3StorageConfigArgs) ToFeatureGroupS3StorageConfigOutput() FeatureGroupS3StorageConfigOutput {
	return i.ToFeatureGroupS3StorageConfigOutputWithContext(context.Background())
}

func (i FeatureGroupS3StorageConfigArgs) ToFeatureGroupS3StorageConfigOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupS3StorageConfigOutput)
}

func (i FeatureGroupS3StorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupS3StorageConfig] {
	return pulumix.Output[FeatureGroupS3StorageConfig]{
		OutputState: i.ToFeatureGroupS3StorageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FeatureGroupS3StorageConfigArgs) ToFeatureGroupS3StorageConfigPtrOutput() FeatureGroupS3StorageConfigPtrOutput {
	return i.ToFeatureGroupS3StorageConfigPtrOutputWithContext(context.Background())
}

func (i FeatureGroupS3StorageConfigArgs) ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupS3StorageConfigOutput).ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx)
}

// FeatureGroupS3StorageConfigPtrInput is an input type that accepts FeatureGroupS3StorageConfigArgs, FeatureGroupS3StorageConfigPtr and FeatureGroupS3StorageConfigPtrOutput values.
// You can construct a concrete instance of `FeatureGroupS3StorageConfigPtrInput` via:
//
//	        FeatureGroupS3StorageConfigArgs{...}
//
//	or:
//
//	        nil
type FeatureGroupS3StorageConfigPtrInput interface {
	pulumi.Input

	ToFeatureGroupS3StorageConfigPtrOutput() FeatureGroupS3StorageConfigPtrOutput
	ToFeatureGroupS3StorageConfigPtrOutputWithContext(context.Context) FeatureGroupS3StorageConfigPtrOutput
}

type featureGroupS3StorageConfigPtrType FeatureGroupS3StorageConfigArgs

func FeatureGroupS3StorageConfigPtr(v *FeatureGroupS3StorageConfigArgs) FeatureGroupS3StorageConfigPtrInput {
	return (*featureGroupS3StorageConfigPtrType)(v)
}

func (*featureGroupS3StorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupS3StorageConfig)(nil)).Elem()
}

func (i *featureGroupS3StorageConfigPtrType) ToFeatureGroupS3StorageConfigPtrOutput() FeatureGroupS3StorageConfigPtrOutput {
	return i.ToFeatureGroupS3StorageConfigPtrOutputWithContext(context.Background())
}

func (i *featureGroupS3StorageConfigPtrType) ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupS3StorageConfigPtrOutput)
}

func (i *featureGroupS3StorageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupS3StorageConfig] {
	return pulumix.Output[*FeatureGroupS3StorageConfig]{
		OutputState: i.ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FeatureGroupS3StorageConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupS3StorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupS3StorageConfig)(nil)).Elem()
}

func (o FeatureGroupS3StorageConfigOutput) ToFeatureGroupS3StorageConfigOutput() FeatureGroupS3StorageConfigOutput {
	return o
}

func (o FeatureGroupS3StorageConfigOutput) ToFeatureGroupS3StorageConfigOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigOutput {
	return o
}

func (o FeatureGroupS3StorageConfigOutput) ToFeatureGroupS3StorageConfigPtrOutput() FeatureGroupS3StorageConfigPtrOutput {
	return o.ToFeatureGroupS3StorageConfigPtrOutputWithContext(context.Background())
}

func (o FeatureGroupS3StorageConfigOutput) ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureGroupS3StorageConfig) *FeatureGroupS3StorageConfig {
		return &v
	}).(FeatureGroupS3StorageConfigPtrOutput)
}

func (o FeatureGroupS3StorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupS3StorageConfig] {
	return pulumix.Output[FeatureGroupS3StorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupS3StorageConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeatureGroupS3StorageConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o FeatureGroupS3StorageConfigOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupS3StorageConfig) string { return v.S3Uri }).(pulumi.StringOutput)
}

type FeatureGroupS3StorageConfigPtrOutput struct{ *pulumi.OutputState }

func (FeatureGroupS3StorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureGroupS3StorageConfig)(nil)).Elem()
}

func (o FeatureGroupS3StorageConfigPtrOutput) ToFeatureGroupS3StorageConfigPtrOutput() FeatureGroupS3StorageConfigPtrOutput {
	return o
}

func (o FeatureGroupS3StorageConfigPtrOutput) ToFeatureGroupS3StorageConfigPtrOutputWithContext(ctx context.Context) FeatureGroupS3StorageConfigPtrOutput {
	return o
}

func (o FeatureGroupS3StorageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupS3StorageConfig] {
	return pulumix.Output[*FeatureGroupS3StorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupS3StorageConfigPtrOutput) Elem() FeatureGroupS3StorageConfigOutput {
	return o.ApplyT(func(v *FeatureGroupS3StorageConfig) FeatureGroupS3StorageConfig {
		if v != nil {
			return *v
		}
		var ret FeatureGroupS3StorageConfig
		return ret
	}).(FeatureGroupS3StorageConfigOutput)
}

func (o FeatureGroupS3StorageConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupS3StorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o FeatureGroupS3StorageConfigPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureGroupS3StorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type FeatureGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FeatureGroupTagInput is an input type that accepts FeatureGroupTagArgs and FeatureGroupTagOutput values.
// You can construct a concrete instance of `FeatureGroupTagInput` via:
//
//	FeatureGroupTagArgs{...}
type FeatureGroupTagInput interface {
	pulumi.Input

	ToFeatureGroupTagOutput() FeatureGroupTagOutput
	ToFeatureGroupTagOutputWithContext(context.Context) FeatureGroupTagOutput
}

// A key-value pair to associate with a resource.
type FeatureGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FeatureGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupTag)(nil)).Elem()
}

func (i FeatureGroupTagArgs) ToFeatureGroupTagOutput() FeatureGroupTagOutput {
	return i.ToFeatureGroupTagOutputWithContext(context.Background())
}

func (i FeatureGroupTagArgs) ToFeatureGroupTagOutputWithContext(ctx context.Context) FeatureGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupTagOutput)
}

func (i FeatureGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupTag] {
	return pulumix.Output[FeatureGroupTag]{
		OutputState: i.ToFeatureGroupTagOutputWithContext(ctx).OutputState,
	}
}

// FeatureGroupTagArrayInput is an input type that accepts FeatureGroupTagArray and FeatureGroupTagArrayOutput values.
// You can construct a concrete instance of `FeatureGroupTagArrayInput` via:
//
//	FeatureGroupTagArray{ FeatureGroupTagArgs{...} }
type FeatureGroupTagArrayInput interface {
	pulumi.Input

	ToFeatureGroupTagArrayOutput() FeatureGroupTagArrayOutput
	ToFeatureGroupTagArrayOutputWithContext(context.Context) FeatureGroupTagArrayOutput
}

type FeatureGroupTagArray []FeatureGroupTagInput

func (FeatureGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureGroupTag)(nil)).Elem()
}

func (i FeatureGroupTagArray) ToFeatureGroupTagArrayOutput() FeatureGroupTagArrayOutput {
	return i.ToFeatureGroupTagArrayOutputWithContext(context.Background())
}

func (i FeatureGroupTagArray) ToFeatureGroupTagArrayOutputWithContext(ctx context.Context) FeatureGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupTagArrayOutput)
}

func (i FeatureGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]FeatureGroupTag] {
	return pulumix.Output[[]FeatureGroupTag]{
		OutputState: i.ToFeatureGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type FeatureGroupTagOutput struct{ *pulumi.OutputState }

func (FeatureGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupTag)(nil)).Elem()
}

func (o FeatureGroupTagOutput) ToFeatureGroupTagOutput() FeatureGroupTagOutput {
	return o
}

func (o FeatureGroupTagOutput) ToFeatureGroupTagOutputWithContext(ctx context.Context) FeatureGroupTagOutput {
	return o
}

func (o FeatureGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupTag] {
	return pulumix.Output[FeatureGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FeatureGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type FeatureGroupTagArrayOutput struct{ *pulumi.OutputState }

func (FeatureGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureGroupTag)(nil)).Elem()
}

func (o FeatureGroupTagArrayOutput) ToFeatureGroupTagArrayOutput() FeatureGroupTagArrayOutput {
	return o
}

func (o FeatureGroupTagArrayOutput) ToFeatureGroupTagArrayOutputWithContext(ctx context.Context) FeatureGroupTagArrayOutput {
	return o
}

func (o FeatureGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FeatureGroupTag] {
	return pulumix.Output[[]FeatureGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o FeatureGroupTagArrayOutput) Index(i pulumi.IntInput) FeatureGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureGroupTag {
		return vs[0].([]FeatureGroupTag)[vs[1].(int)]
	}).(FeatureGroupTagOutput)
}

// A key-value pair to associate with a resource.
type ImageTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ImageTagInput is an input type that accepts ImageTagArgs and ImageTagOutput values.
// You can construct a concrete instance of `ImageTagInput` via:
//
//	ImageTagArgs{...}
type ImageTagInput interface {
	pulumi.Input

	ToImageTagOutput() ImageTagOutput
	ToImageTagOutputWithContext(context.Context) ImageTagOutput
}

// A key-value pair to associate with a resource.
type ImageTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ImageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTag)(nil)).Elem()
}

func (i ImageTagArgs) ToImageTagOutput() ImageTagOutput {
	return i.ToImageTagOutputWithContext(context.Background())
}

func (i ImageTagArgs) ToImageTagOutputWithContext(ctx context.Context) ImageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTagOutput)
}

func (i ImageTagArgs) ToOutput(ctx context.Context) pulumix.Output[ImageTag] {
	return pulumix.Output[ImageTag]{
		OutputState: i.ToImageTagOutputWithContext(ctx).OutputState,
	}
}

// ImageTagArrayInput is an input type that accepts ImageTagArray and ImageTagArrayOutput values.
// You can construct a concrete instance of `ImageTagArrayInput` via:
//
//	ImageTagArray{ ImageTagArgs{...} }
type ImageTagArrayInput interface {
	pulumi.Input

	ToImageTagArrayOutput() ImageTagArrayOutput
	ToImageTagArrayOutputWithContext(context.Context) ImageTagArrayOutput
}

type ImageTagArray []ImageTagInput

func (ImageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTag)(nil)).Elem()
}

func (i ImageTagArray) ToImageTagArrayOutput() ImageTagArrayOutput {
	return i.ToImageTagArrayOutputWithContext(context.Background())
}

func (i ImageTagArray) ToImageTagArrayOutputWithContext(ctx context.Context) ImageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTagArrayOutput)
}

func (i ImageTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ImageTag] {
	return pulumix.Output[[]ImageTag]{
		OutputState: i.ToImageTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ImageTagOutput struct{ *pulumi.OutputState }

func (ImageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTag)(nil)).Elem()
}

func (o ImageTagOutput) ToImageTagOutput() ImageTagOutput {
	return o
}

func (o ImageTagOutput) ToImageTagOutputWithContext(ctx context.Context) ImageTagOutput {
	return o
}

func (o ImageTagOutput) ToOutput(ctx context.Context) pulumix.Output[ImageTag] {
	return pulumix.Output[ImageTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ImageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ImageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTag) string { return v.Value }).(pulumi.StringOutput)
}

type ImageTagArrayOutput struct{ *pulumi.OutputState }

func (ImageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTag)(nil)).Elem()
}

func (o ImageTagArrayOutput) ToImageTagArrayOutput() ImageTagArrayOutput {
	return o
}

func (o ImageTagArrayOutput) ToImageTagArrayOutputWithContext(ctx context.Context) ImageTagArrayOutput {
	return o
}

func (o ImageTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ImageTag] {
	return pulumix.Output[[]ImageTag]{
		OutputState: o.OutputState,
	}
}

func (o ImageTagArrayOutput) Index(i pulumi.IntInput) ImageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTag {
		return vs[0].([]ImageTag)[vs[1].(int)]
	}).(ImageTagOutput)
}

type InferenceComponentComputeResourceRequirements struct {
	MaxMemoryRequiredInMb              *int     `pulumi:"maxMemoryRequiredInMb"`
	MinMemoryRequiredInMb              *int     `pulumi:"minMemoryRequiredInMb"`
	NumberOfAcceleratorDevicesRequired *float64 `pulumi:"numberOfAcceleratorDevicesRequired"`
	NumberOfCpuCoresRequired           *float64 `pulumi:"numberOfCpuCoresRequired"`
}

// InferenceComponentComputeResourceRequirementsInput is an input type that accepts InferenceComponentComputeResourceRequirementsArgs and InferenceComponentComputeResourceRequirementsOutput values.
// You can construct a concrete instance of `InferenceComponentComputeResourceRequirementsInput` via:
//
//	InferenceComponentComputeResourceRequirementsArgs{...}
type InferenceComponentComputeResourceRequirementsInput interface {
	pulumi.Input

	ToInferenceComponentComputeResourceRequirementsOutput() InferenceComponentComputeResourceRequirementsOutput
	ToInferenceComponentComputeResourceRequirementsOutputWithContext(context.Context) InferenceComponentComputeResourceRequirementsOutput
}

type InferenceComponentComputeResourceRequirementsArgs struct {
	MaxMemoryRequiredInMb              pulumi.IntPtrInput     `pulumi:"maxMemoryRequiredInMb"`
	MinMemoryRequiredInMb              pulumi.IntPtrInput     `pulumi:"minMemoryRequiredInMb"`
	NumberOfAcceleratorDevicesRequired pulumi.Float64PtrInput `pulumi:"numberOfAcceleratorDevicesRequired"`
	NumberOfCpuCoresRequired           pulumi.Float64PtrInput `pulumi:"numberOfCpuCoresRequired"`
}

func (InferenceComponentComputeResourceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentComputeResourceRequirements)(nil)).Elem()
}

func (i InferenceComponentComputeResourceRequirementsArgs) ToInferenceComponentComputeResourceRequirementsOutput() InferenceComponentComputeResourceRequirementsOutput {
	return i.ToInferenceComponentComputeResourceRequirementsOutputWithContext(context.Background())
}

func (i InferenceComponentComputeResourceRequirementsArgs) ToInferenceComponentComputeResourceRequirementsOutputWithContext(ctx context.Context) InferenceComponentComputeResourceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentComputeResourceRequirementsOutput)
}

func (i InferenceComponentComputeResourceRequirementsArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentComputeResourceRequirements] {
	return pulumix.Output[InferenceComponentComputeResourceRequirements]{
		OutputState: i.ToInferenceComponentComputeResourceRequirementsOutputWithContext(ctx).OutputState,
	}
}

type InferenceComponentComputeResourceRequirementsOutput struct{ *pulumi.OutputState }

func (InferenceComponentComputeResourceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentComputeResourceRequirements)(nil)).Elem()
}

func (o InferenceComponentComputeResourceRequirementsOutput) ToInferenceComponentComputeResourceRequirementsOutput() InferenceComponentComputeResourceRequirementsOutput {
	return o
}

func (o InferenceComponentComputeResourceRequirementsOutput) ToInferenceComponentComputeResourceRequirementsOutputWithContext(ctx context.Context) InferenceComponentComputeResourceRequirementsOutput {
	return o
}

func (o InferenceComponentComputeResourceRequirementsOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentComputeResourceRequirements] {
	return pulumix.Output[InferenceComponentComputeResourceRequirements]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentComputeResourceRequirementsOutput) MaxMemoryRequiredInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentComputeResourceRequirements) *int { return v.MaxMemoryRequiredInMb }).(pulumi.IntPtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsOutput) MinMemoryRequiredInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentComputeResourceRequirements) *int { return v.MinMemoryRequiredInMb }).(pulumi.IntPtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsOutput) NumberOfAcceleratorDevicesRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InferenceComponentComputeResourceRequirements) *float64 {
		return v.NumberOfAcceleratorDevicesRequired
	}).(pulumi.Float64PtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsOutput) NumberOfCpuCoresRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InferenceComponentComputeResourceRequirements) *float64 { return v.NumberOfCpuCoresRequired }).(pulumi.Float64PtrOutput)
}

type InferenceComponentComputeResourceRequirementsPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentComputeResourceRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentComputeResourceRequirements)(nil)).Elem()
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) ToInferenceComponentComputeResourceRequirementsPtrOutput() InferenceComponentComputeResourceRequirementsPtrOutput {
	return o
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) ToInferenceComponentComputeResourceRequirementsPtrOutputWithContext(ctx context.Context) InferenceComponentComputeResourceRequirementsPtrOutput {
	return o
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentComputeResourceRequirements] {
	return pulumix.Output[*InferenceComponentComputeResourceRequirements]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) Elem() InferenceComponentComputeResourceRequirementsOutput {
	return o.ApplyT(func(v *InferenceComponentComputeResourceRequirements) InferenceComponentComputeResourceRequirements {
		if v != nil {
			return *v
		}
		var ret InferenceComponentComputeResourceRequirements
		return ret
	}).(InferenceComponentComputeResourceRequirementsOutput)
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) MaxMemoryRequiredInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentComputeResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryRequiredInMb
	}).(pulumi.IntPtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) MinMemoryRequiredInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentComputeResourceRequirements) *int {
		if v == nil {
			return nil
		}
		return v.MinMemoryRequiredInMb
	}).(pulumi.IntPtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) NumberOfAcceleratorDevicesRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InferenceComponentComputeResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.NumberOfAcceleratorDevicesRequired
	}).(pulumi.Float64PtrOutput)
}

func (o InferenceComponentComputeResourceRequirementsPtrOutput) NumberOfCpuCoresRequired() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InferenceComponentComputeResourceRequirements) *float64 {
		if v == nil {
			return nil
		}
		return v.NumberOfCpuCoresRequired
	}).(pulumi.Float64PtrOutput)
}

type InferenceComponentContainerSpecification struct {
	ArtifactUrl   *string                           `pulumi:"artifactUrl"`
	DeployedImage *InferenceComponentDeployedImage  `pulumi:"deployedImage"`
	Environment   *InferenceComponentEnvironmentMap `pulumi:"environment"`
	Image         *string                           `pulumi:"image"`
}

// InferenceComponentContainerSpecificationInput is an input type that accepts InferenceComponentContainerSpecificationArgs and InferenceComponentContainerSpecificationOutput values.
// You can construct a concrete instance of `InferenceComponentContainerSpecificationInput` via:
//
//	InferenceComponentContainerSpecificationArgs{...}
type InferenceComponentContainerSpecificationInput interface {
	pulumi.Input

	ToInferenceComponentContainerSpecificationOutput() InferenceComponentContainerSpecificationOutput
	ToInferenceComponentContainerSpecificationOutputWithContext(context.Context) InferenceComponentContainerSpecificationOutput
}

type InferenceComponentContainerSpecificationArgs struct {
	ArtifactUrl   pulumi.StringPtrInput                    `pulumi:"artifactUrl"`
	DeployedImage InferenceComponentDeployedImagePtrInput  `pulumi:"deployedImage"`
	Environment   InferenceComponentEnvironmentMapPtrInput `pulumi:"environment"`
	Image         pulumi.StringPtrInput                    `pulumi:"image"`
}

func (InferenceComponentContainerSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentContainerSpecification)(nil)).Elem()
}

func (i InferenceComponentContainerSpecificationArgs) ToInferenceComponentContainerSpecificationOutput() InferenceComponentContainerSpecificationOutput {
	return i.ToInferenceComponentContainerSpecificationOutputWithContext(context.Background())
}

func (i InferenceComponentContainerSpecificationArgs) ToInferenceComponentContainerSpecificationOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentContainerSpecificationOutput)
}

func (i InferenceComponentContainerSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentContainerSpecification] {
	return pulumix.Output[InferenceComponentContainerSpecification]{
		OutputState: i.ToInferenceComponentContainerSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceComponentContainerSpecificationArgs) ToInferenceComponentContainerSpecificationPtrOutput() InferenceComponentContainerSpecificationPtrOutput {
	return i.ToInferenceComponentContainerSpecificationPtrOutputWithContext(context.Background())
}

func (i InferenceComponentContainerSpecificationArgs) ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentContainerSpecificationOutput).ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx)
}

// InferenceComponentContainerSpecificationPtrInput is an input type that accepts InferenceComponentContainerSpecificationArgs, InferenceComponentContainerSpecificationPtr and InferenceComponentContainerSpecificationPtrOutput values.
// You can construct a concrete instance of `InferenceComponentContainerSpecificationPtrInput` via:
//
//	        InferenceComponentContainerSpecificationArgs{...}
//
//	or:
//
//	        nil
type InferenceComponentContainerSpecificationPtrInput interface {
	pulumi.Input

	ToInferenceComponentContainerSpecificationPtrOutput() InferenceComponentContainerSpecificationPtrOutput
	ToInferenceComponentContainerSpecificationPtrOutputWithContext(context.Context) InferenceComponentContainerSpecificationPtrOutput
}

type inferenceComponentContainerSpecificationPtrType InferenceComponentContainerSpecificationArgs

func InferenceComponentContainerSpecificationPtr(v *InferenceComponentContainerSpecificationArgs) InferenceComponentContainerSpecificationPtrInput {
	return (*inferenceComponentContainerSpecificationPtrType)(v)
}

func (*inferenceComponentContainerSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentContainerSpecification)(nil)).Elem()
}

func (i *inferenceComponentContainerSpecificationPtrType) ToInferenceComponentContainerSpecificationPtrOutput() InferenceComponentContainerSpecificationPtrOutput {
	return i.ToInferenceComponentContainerSpecificationPtrOutputWithContext(context.Background())
}

func (i *inferenceComponentContainerSpecificationPtrType) ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentContainerSpecificationPtrOutput)
}

func (i *inferenceComponentContainerSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentContainerSpecification] {
	return pulumix.Output[*InferenceComponentContainerSpecification]{
		OutputState: i.ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

type InferenceComponentContainerSpecificationOutput struct{ *pulumi.OutputState }

func (InferenceComponentContainerSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentContainerSpecification)(nil)).Elem()
}

func (o InferenceComponentContainerSpecificationOutput) ToInferenceComponentContainerSpecificationOutput() InferenceComponentContainerSpecificationOutput {
	return o
}

func (o InferenceComponentContainerSpecificationOutput) ToInferenceComponentContainerSpecificationOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationOutput {
	return o
}

func (o InferenceComponentContainerSpecificationOutput) ToInferenceComponentContainerSpecificationPtrOutput() InferenceComponentContainerSpecificationPtrOutput {
	return o.ToInferenceComponentContainerSpecificationPtrOutputWithContext(context.Background())
}

func (o InferenceComponentContainerSpecificationOutput) ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceComponentContainerSpecification) *InferenceComponentContainerSpecification {
		return &v
	}).(InferenceComponentContainerSpecificationPtrOutput)
}

func (o InferenceComponentContainerSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentContainerSpecification] {
	return pulumix.Output[InferenceComponentContainerSpecification]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentContainerSpecificationOutput) ArtifactUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentContainerSpecification) *string { return v.ArtifactUrl }).(pulumi.StringPtrOutput)
}

func (o InferenceComponentContainerSpecificationOutput) DeployedImage() InferenceComponentDeployedImagePtrOutput {
	return o.ApplyT(func(v InferenceComponentContainerSpecification) *InferenceComponentDeployedImage {
		return v.DeployedImage
	}).(InferenceComponentDeployedImagePtrOutput)
}

func (o InferenceComponentContainerSpecificationOutput) Environment() InferenceComponentEnvironmentMapPtrOutput {
	return o.ApplyT(func(v InferenceComponentContainerSpecification) *InferenceComponentEnvironmentMap {
		return v.Environment
	}).(InferenceComponentEnvironmentMapPtrOutput)
}

func (o InferenceComponentContainerSpecificationOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentContainerSpecification) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type InferenceComponentContainerSpecificationPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentContainerSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentContainerSpecification)(nil)).Elem()
}

func (o InferenceComponentContainerSpecificationPtrOutput) ToInferenceComponentContainerSpecificationPtrOutput() InferenceComponentContainerSpecificationPtrOutput {
	return o
}

func (o InferenceComponentContainerSpecificationPtrOutput) ToInferenceComponentContainerSpecificationPtrOutputWithContext(ctx context.Context) InferenceComponentContainerSpecificationPtrOutput {
	return o
}

func (o InferenceComponentContainerSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentContainerSpecification] {
	return pulumix.Output[*InferenceComponentContainerSpecification]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentContainerSpecificationPtrOutput) Elem() InferenceComponentContainerSpecificationOutput {
	return o.ApplyT(func(v *InferenceComponentContainerSpecification) InferenceComponentContainerSpecification {
		if v != nil {
			return *v
		}
		var ret InferenceComponentContainerSpecification
		return ret
	}).(InferenceComponentContainerSpecificationOutput)
}

func (o InferenceComponentContainerSpecificationPtrOutput) ArtifactUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentContainerSpecification) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactUrl
	}).(pulumi.StringPtrOutput)
}

func (o InferenceComponentContainerSpecificationPtrOutput) DeployedImage() InferenceComponentDeployedImagePtrOutput {
	return o.ApplyT(func(v *InferenceComponentContainerSpecification) *InferenceComponentDeployedImage {
		if v == nil {
			return nil
		}
		return v.DeployedImage
	}).(InferenceComponentDeployedImagePtrOutput)
}

func (o InferenceComponentContainerSpecificationPtrOutput) Environment() InferenceComponentEnvironmentMapPtrOutput {
	return o.ApplyT(func(v *InferenceComponentContainerSpecification) *InferenceComponentEnvironmentMap {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(InferenceComponentEnvironmentMapPtrOutput)
}

func (o InferenceComponentContainerSpecificationPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentContainerSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type InferenceComponentDeployedImage struct {
	ResolutionTime *string `pulumi:"resolutionTime"`
	ResolvedImage  *string `pulumi:"resolvedImage"`
	SpecifiedImage *string `pulumi:"specifiedImage"`
}

// InferenceComponentDeployedImageInput is an input type that accepts InferenceComponentDeployedImageArgs and InferenceComponentDeployedImageOutput values.
// You can construct a concrete instance of `InferenceComponentDeployedImageInput` via:
//
//	InferenceComponentDeployedImageArgs{...}
type InferenceComponentDeployedImageInput interface {
	pulumi.Input

	ToInferenceComponentDeployedImageOutput() InferenceComponentDeployedImageOutput
	ToInferenceComponentDeployedImageOutputWithContext(context.Context) InferenceComponentDeployedImageOutput
}

type InferenceComponentDeployedImageArgs struct {
	ResolutionTime pulumi.StringPtrInput `pulumi:"resolutionTime"`
	ResolvedImage  pulumi.StringPtrInput `pulumi:"resolvedImage"`
	SpecifiedImage pulumi.StringPtrInput `pulumi:"specifiedImage"`
}

func (InferenceComponentDeployedImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentDeployedImage)(nil)).Elem()
}

func (i InferenceComponentDeployedImageArgs) ToInferenceComponentDeployedImageOutput() InferenceComponentDeployedImageOutput {
	return i.ToInferenceComponentDeployedImageOutputWithContext(context.Background())
}

func (i InferenceComponentDeployedImageArgs) ToInferenceComponentDeployedImageOutputWithContext(ctx context.Context) InferenceComponentDeployedImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentDeployedImageOutput)
}

func (i InferenceComponentDeployedImageArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentDeployedImage] {
	return pulumix.Output[InferenceComponentDeployedImage]{
		OutputState: i.ToInferenceComponentDeployedImageOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceComponentDeployedImageArgs) ToInferenceComponentDeployedImagePtrOutput() InferenceComponentDeployedImagePtrOutput {
	return i.ToInferenceComponentDeployedImagePtrOutputWithContext(context.Background())
}

func (i InferenceComponentDeployedImageArgs) ToInferenceComponentDeployedImagePtrOutputWithContext(ctx context.Context) InferenceComponentDeployedImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentDeployedImageOutput).ToInferenceComponentDeployedImagePtrOutputWithContext(ctx)
}

// InferenceComponentDeployedImagePtrInput is an input type that accepts InferenceComponentDeployedImageArgs, InferenceComponentDeployedImagePtr and InferenceComponentDeployedImagePtrOutput values.
// You can construct a concrete instance of `InferenceComponentDeployedImagePtrInput` via:
//
//	        InferenceComponentDeployedImageArgs{...}
//
//	or:
//
//	        nil
type InferenceComponentDeployedImagePtrInput interface {
	pulumi.Input

	ToInferenceComponentDeployedImagePtrOutput() InferenceComponentDeployedImagePtrOutput
	ToInferenceComponentDeployedImagePtrOutputWithContext(context.Context) InferenceComponentDeployedImagePtrOutput
}

type inferenceComponentDeployedImagePtrType InferenceComponentDeployedImageArgs

func InferenceComponentDeployedImagePtr(v *InferenceComponentDeployedImageArgs) InferenceComponentDeployedImagePtrInput {
	return (*inferenceComponentDeployedImagePtrType)(v)
}

func (*inferenceComponentDeployedImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentDeployedImage)(nil)).Elem()
}

func (i *inferenceComponentDeployedImagePtrType) ToInferenceComponentDeployedImagePtrOutput() InferenceComponentDeployedImagePtrOutput {
	return i.ToInferenceComponentDeployedImagePtrOutputWithContext(context.Background())
}

func (i *inferenceComponentDeployedImagePtrType) ToInferenceComponentDeployedImagePtrOutputWithContext(ctx context.Context) InferenceComponentDeployedImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentDeployedImagePtrOutput)
}

func (i *inferenceComponentDeployedImagePtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentDeployedImage] {
	return pulumix.Output[*InferenceComponentDeployedImage]{
		OutputState: i.ToInferenceComponentDeployedImagePtrOutputWithContext(ctx).OutputState,
	}
}

type InferenceComponentDeployedImageOutput struct{ *pulumi.OutputState }

func (InferenceComponentDeployedImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentDeployedImage)(nil)).Elem()
}

func (o InferenceComponentDeployedImageOutput) ToInferenceComponentDeployedImageOutput() InferenceComponentDeployedImageOutput {
	return o
}

func (o InferenceComponentDeployedImageOutput) ToInferenceComponentDeployedImageOutputWithContext(ctx context.Context) InferenceComponentDeployedImageOutput {
	return o
}

func (o InferenceComponentDeployedImageOutput) ToInferenceComponentDeployedImagePtrOutput() InferenceComponentDeployedImagePtrOutput {
	return o.ToInferenceComponentDeployedImagePtrOutputWithContext(context.Background())
}

func (o InferenceComponentDeployedImageOutput) ToInferenceComponentDeployedImagePtrOutputWithContext(ctx context.Context) InferenceComponentDeployedImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceComponentDeployedImage) *InferenceComponentDeployedImage {
		return &v
	}).(InferenceComponentDeployedImagePtrOutput)
}

func (o InferenceComponentDeployedImageOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentDeployedImage] {
	return pulumix.Output[InferenceComponentDeployedImage]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentDeployedImageOutput) ResolutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentDeployedImage) *string { return v.ResolutionTime }).(pulumi.StringPtrOutput)
}

func (o InferenceComponentDeployedImageOutput) ResolvedImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentDeployedImage) *string { return v.ResolvedImage }).(pulumi.StringPtrOutput)
}

func (o InferenceComponentDeployedImageOutput) SpecifiedImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentDeployedImage) *string { return v.SpecifiedImage }).(pulumi.StringPtrOutput)
}

type InferenceComponentDeployedImagePtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentDeployedImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentDeployedImage)(nil)).Elem()
}

func (o InferenceComponentDeployedImagePtrOutput) ToInferenceComponentDeployedImagePtrOutput() InferenceComponentDeployedImagePtrOutput {
	return o
}

func (o InferenceComponentDeployedImagePtrOutput) ToInferenceComponentDeployedImagePtrOutputWithContext(ctx context.Context) InferenceComponentDeployedImagePtrOutput {
	return o
}

func (o InferenceComponentDeployedImagePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentDeployedImage] {
	return pulumix.Output[*InferenceComponentDeployedImage]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentDeployedImagePtrOutput) Elem() InferenceComponentDeployedImageOutput {
	return o.ApplyT(func(v *InferenceComponentDeployedImage) InferenceComponentDeployedImage {
		if v != nil {
			return *v
		}
		var ret InferenceComponentDeployedImage
		return ret
	}).(InferenceComponentDeployedImageOutput)
}

func (o InferenceComponentDeployedImagePtrOutput) ResolutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentDeployedImage) *string {
		if v == nil {
			return nil
		}
		return v.ResolutionTime
	}).(pulumi.StringPtrOutput)
}

func (o InferenceComponentDeployedImagePtrOutput) ResolvedImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentDeployedImage) *string {
		if v == nil {
			return nil
		}
		return v.ResolvedImage
	}).(pulumi.StringPtrOutput)
}

func (o InferenceComponentDeployedImagePtrOutput) SpecifiedImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentDeployedImage) *string {
		if v == nil {
			return nil
		}
		return v.SpecifiedImage
	}).(pulumi.StringPtrOutput)
}

// Environment variables to specify on the container
type InferenceComponentEnvironmentMap struct {
}

// InferenceComponentEnvironmentMapInput is an input type that accepts InferenceComponentEnvironmentMap and InferenceComponentEnvironmentMapOutput values.
// You can construct a concrete instance of `InferenceComponentEnvironmentMapInput` via:
//
//	InferenceComponentEnvironmentMap{ "key": InferenceComponentEnvironmentArgs{...} }
type InferenceComponentEnvironmentMapInput interface {
	pulumi.Input

	ToInferenceComponentEnvironmentMapOutput() InferenceComponentEnvironmentMapOutput
	ToInferenceComponentEnvironmentMapOutputWithContext(context.Context) InferenceComponentEnvironmentMapOutput
}

// Environment variables to specify on the container
type InferenceComponentEnvironmentMapArgs struct {
}

func (InferenceComponentEnvironmentMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentEnvironmentMap)(nil)).Elem()
}

func (i InferenceComponentEnvironmentMapArgs) ToInferenceComponentEnvironmentMapOutput() InferenceComponentEnvironmentMapOutput {
	return i.ToInferenceComponentEnvironmentMapOutputWithContext(context.Background())
}

func (i InferenceComponentEnvironmentMapArgs) ToInferenceComponentEnvironmentMapOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentEnvironmentMapOutput)
}

func (i InferenceComponentEnvironmentMapArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentEnvironmentMap] {
	return pulumix.Output[InferenceComponentEnvironmentMap]{
		OutputState: i.ToInferenceComponentEnvironmentMapOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceComponentEnvironmentMapArgs) ToInferenceComponentEnvironmentMapPtrOutput() InferenceComponentEnvironmentMapPtrOutput {
	return i.ToInferenceComponentEnvironmentMapPtrOutputWithContext(context.Background())
}

func (i InferenceComponentEnvironmentMapArgs) ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentEnvironmentMapOutput).ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx)
}

// InferenceComponentEnvironmentMapPtrInput is an input type that accepts InferenceComponentEnvironmentMapArgs, InferenceComponentEnvironmentMapPtr and InferenceComponentEnvironmentMapPtrOutput values.
// You can construct a concrete instance of `InferenceComponentEnvironmentMapPtrInput` via:
//
//	        InferenceComponentEnvironmentMapArgs{...}
//
//	or:
//
//	        nil
type InferenceComponentEnvironmentMapPtrInput interface {
	pulumi.Input

	ToInferenceComponentEnvironmentMapPtrOutput() InferenceComponentEnvironmentMapPtrOutput
	ToInferenceComponentEnvironmentMapPtrOutputWithContext(context.Context) InferenceComponentEnvironmentMapPtrOutput
}

type inferenceComponentEnvironmentMapPtrType InferenceComponentEnvironmentMapArgs

func InferenceComponentEnvironmentMapPtr(v *InferenceComponentEnvironmentMapArgs) InferenceComponentEnvironmentMapPtrInput {
	return (*inferenceComponentEnvironmentMapPtrType)(v)
}

func (*inferenceComponentEnvironmentMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentEnvironmentMap)(nil)).Elem()
}

func (i *inferenceComponentEnvironmentMapPtrType) ToInferenceComponentEnvironmentMapPtrOutput() InferenceComponentEnvironmentMapPtrOutput {
	return i.ToInferenceComponentEnvironmentMapPtrOutputWithContext(context.Background())
}

func (i *inferenceComponentEnvironmentMapPtrType) ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentEnvironmentMapPtrOutput)
}

func (i *inferenceComponentEnvironmentMapPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentEnvironmentMap] {
	return pulumix.Output[*InferenceComponentEnvironmentMap]{
		OutputState: i.ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx).OutputState,
	}
}

// Environment variables to specify on the container
type InferenceComponentEnvironmentMapOutput struct{ *pulumi.OutputState }

func (InferenceComponentEnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentEnvironmentMap)(nil)).Elem()
}

func (o InferenceComponentEnvironmentMapOutput) ToInferenceComponentEnvironmentMapOutput() InferenceComponentEnvironmentMapOutput {
	return o
}

func (o InferenceComponentEnvironmentMapOutput) ToInferenceComponentEnvironmentMapOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapOutput {
	return o
}

func (o InferenceComponentEnvironmentMapOutput) ToInferenceComponentEnvironmentMapPtrOutput() InferenceComponentEnvironmentMapPtrOutput {
	return o.ToInferenceComponentEnvironmentMapPtrOutputWithContext(context.Background())
}

func (o InferenceComponentEnvironmentMapOutput) ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceComponentEnvironmentMap) *InferenceComponentEnvironmentMap {
		return &v
	}).(InferenceComponentEnvironmentMapPtrOutput)
}

func (o InferenceComponentEnvironmentMapOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentEnvironmentMap] {
	return pulumix.Output[InferenceComponentEnvironmentMap]{
		OutputState: o.OutputState,
	}
}

type InferenceComponentEnvironmentMapPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentEnvironmentMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentEnvironmentMap)(nil)).Elem()
}

func (o InferenceComponentEnvironmentMapPtrOutput) ToInferenceComponentEnvironmentMapPtrOutput() InferenceComponentEnvironmentMapPtrOutput {
	return o
}

func (o InferenceComponentEnvironmentMapPtrOutput) ToInferenceComponentEnvironmentMapPtrOutputWithContext(ctx context.Context) InferenceComponentEnvironmentMapPtrOutput {
	return o
}

func (o InferenceComponentEnvironmentMapPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentEnvironmentMap] {
	return pulumix.Output[*InferenceComponentEnvironmentMap]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentEnvironmentMapPtrOutput) Elem() InferenceComponentEnvironmentMapOutput {
	return o.ApplyT(func(v *InferenceComponentEnvironmentMap) InferenceComponentEnvironmentMap {
		if v != nil {
			return *v
		}
		var ret InferenceComponentEnvironmentMap
		return ret
	}).(InferenceComponentEnvironmentMapOutput)
}

// The runtime config for the inference component
type InferenceComponentRuntimeConfig struct {
	CopyCount        *int `pulumi:"copyCount"`
	CurrentCopyCount *int `pulumi:"currentCopyCount"`
	DesiredCopyCount *int `pulumi:"desiredCopyCount"`
}

// InferenceComponentRuntimeConfigInput is an input type that accepts InferenceComponentRuntimeConfigArgs and InferenceComponentRuntimeConfigOutput values.
// You can construct a concrete instance of `InferenceComponentRuntimeConfigInput` via:
//
//	InferenceComponentRuntimeConfigArgs{...}
type InferenceComponentRuntimeConfigInput interface {
	pulumi.Input

	ToInferenceComponentRuntimeConfigOutput() InferenceComponentRuntimeConfigOutput
	ToInferenceComponentRuntimeConfigOutputWithContext(context.Context) InferenceComponentRuntimeConfigOutput
}

// The runtime config for the inference component
type InferenceComponentRuntimeConfigArgs struct {
	CopyCount        pulumi.IntPtrInput `pulumi:"copyCount"`
	CurrentCopyCount pulumi.IntPtrInput `pulumi:"currentCopyCount"`
	DesiredCopyCount pulumi.IntPtrInput `pulumi:"desiredCopyCount"`
}

func (InferenceComponentRuntimeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentRuntimeConfig)(nil)).Elem()
}

func (i InferenceComponentRuntimeConfigArgs) ToInferenceComponentRuntimeConfigOutput() InferenceComponentRuntimeConfigOutput {
	return i.ToInferenceComponentRuntimeConfigOutputWithContext(context.Background())
}

func (i InferenceComponentRuntimeConfigArgs) ToInferenceComponentRuntimeConfigOutputWithContext(ctx context.Context) InferenceComponentRuntimeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentRuntimeConfigOutput)
}

func (i InferenceComponentRuntimeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentRuntimeConfig] {
	return pulumix.Output[InferenceComponentRuntimeConfig]{
		OutputState: i.ToInferenceComponentRuntimeConfigOutputWithContext(ctx).OutputState,
	}
}

// The runtime config for the inference component
type InferenceComponentRuntimeConfigOutput struct{ *pulumi.OutputState }

func (InferenceComponentRuntimeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentRuntimeConfig)(nil)).Elem()
}

func (o InferenceComponentRuntimeConfigOutput) ToInferenceComponentRuntimeConfigOutput() InferenceComponentRuntimeConfigOutput {
	return o
}

func (o InferenceComponentRuntimeConfigOutput) ToInferenceComponentRuntimeConfigOutputWithContext(ctx context.Context) InferenceComponentRuntimeConfigOutput {
	return o
}

func (o InferenceComponentRuntimeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentRuntimeConfig] {
	return pulumix.Output[InferenceComponentRuntimeConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentRuntimeConfigOutput) CopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentRuntimeConfig) *int { return v.CopyCount }).(pulumi.IntPtrOutput)
}

func (o InferenceComponentRuntimeConfigOutput) CurrentCopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentRuntimeConfig) *int { return v.CurrentCopyCount }).(pulumi.IntPtrOutput)
}

func (o InferenceComponentRuntimeConfigOutput) DesiredCopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentRuntimeConfig) *int { return v.DesiredCopyCount }).(pulumi.IntPtrOutput)
}

type InferenceComponentRuntimeConfigPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentRuntimeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentRuntimeConfig)(nil)).Elem()
}

func (o InferenceComponentRuntimeConfigPtrOutput) ToInferenceComponentRuntimeConfigPtrOutput() InferenceComponentRuntimeConfigPtrOutput {
	return o
}

func (o InferenceComponentRuntimeConfigPtrOutput) ToInferenceComponentRuntimeConfigPtrOutputWithContext(ctx context.Context) InferenceComponentRuntimeConfigPtrOutput {
	return o
}

func (o InferenceComponentRuntimeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentRuntimeConfig] {
	return pulumix.Output[*InferenceComponentRuntimeConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentRuntimeConfigPtrOutput) Elem() InferenceComponentRuntimeConfigOutput {
	return o.ApplyT(func(v *InferenceComponentRuntimeConfig) InferenceComponentRuntimeConfig {
		if v != nil {
			return *v
		}
		var ret InferenceComponentRuntimeConfig
		return ret
	}).(InferenceComponentRuntimeConfigOutput)
}

func (o InferenceComponentRuntimeConfigPtrOutput) CopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentRuntimeConfig) *int {
		if v == nil {
			return nil
		}
		return v.CopyCount
	}).(pulumi.IntPtrOutput)
}

func (o InferenceComponentRuntimeConfigPtrOutput) CurrentCopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentRuntimeConfig) *int {
		if v == nil {
			return nil
		}
		return v.CurrentCopyCount
	}).(pulumi.IntPtrOutput)
}

func (o InferenceComponentRuntimeConfigPtrOutput) DesiredCopyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentRuntimeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DesiredCopyCount
	}).(pulumi.IntPtrOutput)
}

// The specification for the inference component
type InferenceComponentSpecification struct {
	ComputeResourceRequirements InferenceComponentComputeResourceRequirements `pulumi:"computeResourceRequirements"`
	Container                   *InferenceComponentContainerSpecification     `pulumi:"container"`
	ModelName                   *string                                       `pulumi:"modelName"`
	StartupParameters           *InferenceComponentStartupParameters          `pulumi:"startupParameters"`
}

// InferenceComponentSpecificationInput is an input type that accepts InferenceComponentSpecificationArgs and InferenceComponentSpecificationOutput values.
// You can construct a concrete instance of `InferenceComponentSpecificationInput` via:
//
//	InferenceComponentSpecificationArgs{...}
type InferenceComponentSpecificationInput interface {
	pulumi.Input

	ToInferenceComponentSpecificationOutput() InferenceComponentSpecificationOutput
	ToInferenceComponentSpecificationOutputWithContext(context.Context) InferenceComponentSpecificationOutput
}

// The specification for the inference component
type InferenceComponentSpecificationArgs struct {
	ComputeResourceRequirements InferenceComponentComputeResourceRequirementsInput `pulumi:"computeResourceRequirements"`
	Container                   InferenceComponentContainerSpecificationPtrInput   `pulumi:"container"`
	ModelName                   pulumi.StringPtrInput                              `pulumi:"modelName"`
	StartupParameters           InferenceComponentStartupParametersPtrInput        `pulumi:"startupParameters"`
}

func (InferenceComponentSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentSpecification)(nil)).Elem()
}

func (i InferenceComponentSpecificationArgs) ToInferenceComponentSpecificationOutput() InferenceComponentSpecificationOutput {
	return i.ToInferenceComponentSpecificationOutputWithContext(context.Background())
}

func (i InferenceComponentSpecificationArgs) ToInferenceComponentSpecificationOutputWithContext(ctx context.Context) InferenceComponentSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentSpecificationOutput)
}

func (i InferenceComponentSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentSpecification] {
	return pulumix.Output[InferenceComponentSpecification]{
		OutputState: i.ToInferenceComponentSpecificationOutputWithContext(ctx).OutputState,
	}
}

// The specification for the inference component
type InferenceComponentSpecificationOutput struct{ *pulumi.OutputState }

func (InferenceComponentSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentSpecification)(nil)).Elem()
}

func (o InferenceComponentSpecificationOutput) ToInferenceComponentSpecificationOutput() InferenceComponentSpecificationOutput {
	return o
}

func (o InferenceComponentSpecificationOutput) ToInferenceComponentSpecificationOutputWithContext(ctx context.Context) InferenceComponentSpecificationOutput {
	return o
}

func (o InferenceComponentSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentSpecification] {
	return pulumix.Output[InferenceComponentSpecification]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentSpecificationOutput) ComputeResourceRequirements() InferenceComponentComputeResourceRequirementsOutput {
	return o.ApplyT(func(v InferenceComponentSpecification) InferenceComponentComputeResourceRequirements {
		return v.ComputeResourceRequirements
	}).(InferenceComponentComputeResourceRequirementsOutput)
}

func (o InferenceComponentSpecificationOutput) Container() InferenceComponentContainerSpecificationPtrOutput {
	return o.ApplyT(func(v InferenceComponentSpecification) *InferenceComponentContainerSpecification { return v.Container }).(InferenceComponentContainerSpecificationPtrOutput)
}

func (o InferenceComponentSpecificationOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceComponentSpecification) *string { return v.ModelName }).(pulumi.StringPtrOutput)
}

func (o InferenceComponentSpecificationOutput) StartupParameters() InferenceComponentStartupParametersPtrOutput {
	return o.ApplyT(func(v InferenceComponentSpecification) *InferenceComponentStartupParameters {
		return v.StartupParameters
	}).(InferenceComponentStartupParametersPtrOutput)
}

type InferenceComponentSpecificationPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentSpecification)(nil)).Elem()
}

func (o InferenceComponentSpecificationPtrOutput) ToInferenceComponentSpecificationPtrOutput() InferenceComponentSpecificationPtrOutput {
	return o
}

func (o InferenceComponentSpecificationPtrOutput) ToInferenceComponentSpecificationPtrOutputWithContext(ctx context.Context) InferenceComponentSpecificationPtrOutput {
	return o
}

func (o InferenceComponentSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentSpecification] {
	return pulumix.Output[*InferenceComponentSpecification]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentSpecificationPtrOutput) Elem() InferenceComponentSpecificationOutput {
	return o.ApplyT(func(v *InferenceComponentSpecification) InferenceComponentSpecification {
		if v != nil {
			return *v
		}
		var ret InferenceComponentSpecification
		return ret
	}).(InferenceComponentSpecificationOutput)
}

func (o InferenceComponentSpecificationPtrOutput) ComputeResourceRequirements() InferenceComponentComputeResourceRequirementsPtrOutput {
	return o.ApplyT(func(v *InferenceComponentSpecification) *InferenceComponentComputeResourceRequirements {
		if v == nil {
			return nil
		}
		return &v.ComputeResourceRequirements
	}).(InferenceComponentComputeResourceRequirementsPtrOutput)
}

func (o InferenceComponentSpecificationPtrOutput) Container() InferenceComponentContainerSpecificationPtrOutput {
	return o.ApplyT(func(v *InferenceComponentSpecification) *InferenceComponentContainerSpecification {
		if v == nil {
			return nil
		}
		return v.Container
	}).(InferenceComponentContainerSpecificationPtrOutput)
}

func (o InferenceComponentSpecificationPtrOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceComponentSpecification) *string {
		if v == nil {
			return nil
		}
		return v.ModelName
	}).(pulumi.StringPtrOutput)
}

func (o InferenceComponentSpecificationPtrOutput) StartupParameters() InferenceComponentStartupParametersPtrOutput {
	return o.ApplyT(func(v *InferenceComponentSpecification) *InferenceComponentStartupParameters {
		if v == nil {
			return nil
		}
		return v.StartupParameters
	}).(InferenceComponentStartupParametersPtrOutput)
}

type InferenceComponentStartupParameters struct {
	ContainerStartupHealthCheckTimeoutInSeconds *int `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	ModelDataDownloadTimeoutInSeconds           *int `pulumi:"modelDataDownloadTimeoutInSeconds"`
}

// InferenceComponentStartupParametersInput is an input type that accepts InferenceComponentStartupParametersArgs and InferenceComponentStartupParametersOutput values.
// You can construct a concrete instance of `InferenceComponentStartupParametersInput` via:
//
//	InferenceComponentStartupParametersArgs{...}
type InferenceComponentStartupParametersInput interface {
	pulumi.Input

	ToInferenceComponentStartupParametersOutput() InferenceComponentStartupParametersOutput
	ToInferenceComponentStartupParametersOutputWithContext(context.Context) InferenceComponentStartupParametersOutput
}

type InferenceComponentStartupParametersArgs struct {
	ContainerStartupHealthCheckTimeoutInSeconds pulumi.IntPtrInput `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	ModelDataDownloadTimeoutInSeconds           pulumi.IntPtrInput `pulumi:"modelDataDownloadTimeoutInSeconds"`
}

func (InferenceComponentStartupParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentStartupParameters)(nil)).Elem()
}

func (i InferenceComponentStartupParametersArgs) ToInferenceComponentStartupParametersOutput() InferenceComponentStartupParametersOutput {
	return i.ToInferenceComponentStartupParametersOutputWithContext(context.Background())
}

func (i InferenceComponentStartupParametersArgs) ToInferenceComponentStartupParametersOutputWithContext(ctx context.Context) InferenceComponentStartupParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentStartupParametersOutput)
}

func (i InferenceComponentStartupParametersArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentStartupParameters] {
	return pulumix.Output[InferenceComponentStartupParameters]{
		OutputState: i.ToInferenceComponentStartupParametersOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceComponentStartupParametersArgs) ToInferenceComponentStartupParametersPtrOutput() InferenceComponentStartupParametersPtrOutput {
	return i.ToInferenceComponentStartupParametersPtrOutputWithContext(context.Background())
}

func (i InferenceComponentStartupParametersArgs) ToInferenceComponentStartupParametersPtrOutputWithContext(ctx context.Context) InferenceComponentStartupParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentStartupParametersOutput).ToInferenceComponentStartupParametersPtrOutputWithContext(ctx)
}

// InferenceComponentStartupParametersPtrInput is an input type that accepts InferenceComponentStartupParametersArgs, InferenceComponentStartupParametersPtr and InferenceComponentStartupParametersPtrOutput values.
// You can construct a concrete instance of `InferenceComponentStartupParametersPtrInput` via:
//
//	        InferenceComponentStartupParametersArgs{...}
//
//	or:
//
//	        nil
type InferenceComponentStartupParametersPtrInput interface {
	pulumi.Input

	ToInferenceComponentStartupParametersPtrOutput() InferenceComponentStartupParametersPtrOutput
	ToInferenceComponentStartupParametersPtrOutputWithContext(context.Context) InferenceComponentStartupParametersPtrOutput
}

type inferenceComponentStartupParametersPtrType InferenceComponentStartupParametersArgs

func InferenceComponentStartupParametersPtr(v *InferenceComponentStartupParametersArgs) InferenceComponentStartupParametersPtrInput {
	return (*inferenceComponentStartupParametersPtrType)(v)
}

func (*inferenceComponentStartupParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentStartupParameters)(nil)).Elem()
}

func (i *inferenceComponentStartupParametersPtrType) ToInferenceComponentStartupParametersPtrOutput() InferenceComponentStartupParametersPtrOutput {
	return i.ToInferenceComponentStartupParametersPtrOutputWithContext(context.Background())
}

func (i *inferenceComponentStartupParametersPtrType) ToInferenceComponentStartupParametersPtrOutputWithContext(ctx context.Context) InferenceComponentStartupParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentStartupParametersPtrOutput)
}

func (i *inferenceComponentStartupParametersPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentStartupParameters] {
	return pulumix.Output[*InferenceComponentStartupParameters]{
		OutputState: i.ToInferenceComponentStartupParametersPtrOutputWithContext(ctx).OutputState,
	}
}

type InferenceComponentStartupParametersOutput struct{ *pulumi.OutputState }

func (InferenceComponentStartupParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentStartupParameters)(nil)).Elem()
}

func (o InferenceComponentStartupParametersOutput) ToInferenceComponentStartupParametersOutput() InferenceComponentStartupParametersOutput {
	return o
}

func (o InferenceComponentStartupParametersOutput) ToInferenceComponentStartupParametersOutputWithContext(ctx context.Context) InferenceComponentStartupParametersOutput {
	return o
}

func (o InferenceComponentStartupParametersOutput) ToInferenceComponentStartupParametersPtrOutput() InferenceComponentStartupParametersPtrOutput {
	return o.ToInferenceComponentStartupParametersPtrOutputWithContext(context.Background())
}

func (o InferenceComponentStartupParametersOutput) ToInferenceComponentStartupParametersPtrOutputWithContext(ctx context.Context) InferenceComponentStartupParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceComponentStartupParameters) *InferenceComponentStartupParameters {
		return &v
	}).(InferenceComponentStartupParametersPtrOutput)
}

func (o InferenceComponentStartupParametersOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentStartupParameters] {
	return pulumix.Output[InferenceComponentStartupParameters]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentStartupParametersOutput) ContainerStartupHealthCheckTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentStartupParameters) *int { return v.ContainerStartupHealthCheckTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o InferenceComponentStartupParametersOutput) ModelDataDownloadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InferenceComponentStartupParameters) *int { return v.ModelDataDownloadTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type InferenceComponentStartupParametersPtrOutput struct{ *pulumi.OutputState }

func (InferenceComponentStartupParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceComponentStartupParameters)(nil)).Elem()
}

func (o InferenceComponentStartupParametersPtrOutput) ToInferenceComponentStartupParametersPtrOutput() InferenceComponentStartupParametersPtrOutput {
	return o
}

func (o InferenceComponentStartupParametersPtrOutput) ToInferenceComponentStartupParametersPtrOutputWithContext(ctx context.Context) InferenceComponentStartupParametersPtrOutput {
	return o
}

func (o InferenceComponentStartupParametersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceComponentStartupParameters] {
	return pulumix.Output[*InferenceComponentStartupParameters]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentStartupParametersPtrOutput) Elem() InferenceComponentStartupParametersOutput {
	return o.ApplyT(func(v *InferenceComponentStartupParameters) InferenceComponentStartupParameters {
		if v != nil {
			return *v
		}
		var ret InferenceComponentStartupParameters
		return ret
	}).(InferenceComponentStartupParametersOutput)
}

func (o InferenceComponentStartupParametersPtrOutput) ContainerStartupHealthCheckTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentStartupParameters) *int {
		if v == nil {
			return nil
		}
		return v.ContainerStartupHealthCheckTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o InferenceComponentStartupParametersPtrOutput) ModelDataDownloadTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InferenceComponentStartupParameters) *int {
		if v == nil {
			return nil
		}
		return v.ModelDataDownloadTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// A tag in the form of a key-value pair to associate with the resource
type InferenceComponentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Value string `pulumi:"value"`
}

// InferenceComponentTagInput is an input type that accepts InferenceComponentTagArgs and InferenceComponentTagOutput values.
// You can construct a concrete instance of `InferenceComponentTagInput` via:
//
//	InferenceComponentTagArgs{...}
type InferenceComponentTagInput interface {
	pulumi.Input

	ToInferenceComponentTagOutput() InferenceComponentTagOutput
	ToInferenceComponentTagOutputWithContext(context.Context) InferenceComponentTagOutput
}

// A tag in the form of a key-value pair to associate with the resource
type InferenceComponentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Value pulumi.StringInput `pulumi:"value"`
}

func (InferenceComponentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentTag)(nil)).Elem()
}

func (i InferenceComponentTagArgs) ToInferenceComponentTagOutput() InferenceComponentTagOutput {
	return i.ToInferenceComponentTagOutputWithContext(context.Background())
}

func (i InferenceComponentTagArgs) ToInferenceComponentTagOutputWithContext(ctx context.Context) InferenceComponentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentTagOutput)
}

func (i InferenceComponentTagArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentTag] {
	return pulumix.Output[InferenceComponentTag]{
		OutputState: i.ToInferenceComponentTagOutputWithContext(ctx).OutputState,
	}
}

// InferenceComponentTagArrayInput is an input type that accepts InferenceComponentTagArray and InferenceComponentTagArrayOutput values.
// You can construct a concrete instance of `InferenceComponentTagArrayInput` via:
//
//	InferenceComponentTagArray{ InferenceComponentTagArgs{...} }
type InferenceComponentTagArrayInput interface {
	pulumi.Input

	ToInferenceComponentTagArrayOutput() InferenceComponentTagArrayOutput
	ToInferenceComponentTagArrayOutputWithContext(context.Context) InferenceComponentTagArrayOutput
}

type InferenceComponentTagArray []InferenceComponentTagInput

func (InferenceComponentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceComponentTag)(nil)).Elem()
}

func (i InferenceComponentTagArray) ToInferenceComponentTagArrayOutput() InferenceComponentTagArrayOutput {
	return i.ToInferenceComponentTagArrayOutputWithContext(context.Background())
}

func (i InferenceComponentTagArray) ToInferenceComponentTagArrayOutputWithContext(ctx context.Context) InferenceComponentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceComponentTagArrayOutput)
}

func (i InferenceComponentTagArray) ToOutput(ctx context.Context) pulumix.Output[[]InferenceComponentTag] {
	return pulumix.Output[[]InferenceComponentTag]{
		OutputState: i.ToInferenceComponentTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A tag in the form of a key-value pair to associate with the resource
type InferenceComponentTagOutput struct{ *pulumi.OutputState }

func (InferenceComponentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceComponentTag)(nil)).Elem()
}

func (o InferenceComponentTagOutput) ToInferenceComponentTagOutput() InferenceComponentTagOutput {
	return o
}

func (o InferenceComponentTagOutput) ToInferenceComponentTagOutputWithContext(ctx context.Context) InferenceComponentTagOutput {
	return o
}

func (o InferenceComponentTagOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceComponentTag] {
	return pulumix.Output[InferenceComponentTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
func (o InferenceComponentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceComponentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
func (o InferenceComponentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceComponentTag) string { return v.Value }).(pulumi.StringOutput)
}

type InferenceComponentTagArrayOutput struct{ *pulumi.OutputState }

func (InferenceComponentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceComponentTag)(nil)).Elem()
}

func (o InferenceComponentTagArrayOutput) ToInferenceComponentTagArrayOutput() InferenceComponentTagArrayOutput {
	return o
}

func (o InferenceComponentTagArrayOutput) ToInferenceComponentTagArrayOutputWithContext(ctx context.Context) InferenceComponentTagArrayOutput {
	return o
}

func (o InferenceComponentTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InferenceComponentTag] {
	return pulumix.Output[[]InferenceComponentTag]{
		OutputState: o.OutputState,
	}
}

func (o InferenceComponentTagArrayOutput) Index(i pulumi.IntInput) InferenceComponentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InferenceComponentTag {
		return vs[0].([]InferenceComponentTag)[vs[1].(int)]
	}).(InferenceComponentTagOutput)
}

// Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
type InferenceExperimentCaptureContentTypeHeader struct {
	// The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
	CsvContentTypes []string `pulumi:"csvContentTypes"`
	// The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
	JsonContentTypes []string `pulumi:"jsonContentTypes"`
}

// InferenceExperimentCaptureContentTypeHeaderInput is an input type that accepts InferenceExperimentCaptureContentTypeHeaderArgs and InferenceExperimentCaptureContentTypeHeaderOutput values.
// You can construct a concrete instance of `InferenceExperimentCaptureContentTypeHeaderInput` via:
//
//	InferenceExperimentCaptureContentTypeHeaderArgs{...}
type InferenceExperimentCaptureContentTypeHeaderInput interface {
	pulumi.Input

	ToInferenceExperimentCaptureContentTypeHeaderOutput() InferenceExperimentCaptureContentTypeHeaderOutput
	ToInferenceExperimentCaptureContentTypeHeaderOutputWithContext(context.Context) InferenceExperimentCaptureContentTypeHeaderOutput
}

// Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
type InferenceExperimentCaptureContentTypeHeaderArgs struct {
	// The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
	CsvContentTypes pulumi.StringArrayInput `pulumi:"csvContentTypes"`
	// The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
	JsonContentTypes pulumi.StringArrayInput `pulumi:"jsonContentTypes"`
}

func (InferenceExperimentCaptureContentTypeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentCaptureContentTypeHeader)(nil)).Elem()
}

func (i InferenceExperimentCaptureContentTypeHeaderArgs) ToInferenceExperimentCaptureContentTypeHeaderOutput() InferenceExperimentCaptureContentTypeHeaderOutput {
	return i.ToInferenceExperimentCaptureContentTypeHeaderOutputWithContext(context.Background())
}

func (i InferenceExperimentCaptureContentTypeHeaderArgs) ToInferenceExperimentCaptureContentTypeHeaderOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentCaptureContentTypeHeaderOutput)
}

func (i InferenceExperimentCaptureContentTypeHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentCaptureContentTypeHeader] {
	return pulumix.Output[InferenceExperimentCaptureContentTypeHeader]{
		OutputState: i.ToInferenceExperimentCaptureContentTypeHeaderOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceExperimentCaptureContentTypeHeaderArgs) ToInferenceExperimentCaptureContentTypeHeaderPtrOutput() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return i.ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (i InferenceExperimentCaptureContentTypeHeaderArgs) ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentCaptureContentTypeHeaderOutput).ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx)
}

// InferenceExperimentCaptureContentTypeHeaderPtrInput is an input type that accepts InferenceExperimentCaptureContentTypeHeaderArgs, InferenceExperimentCaptureContentTypeHeaderPtr and InferenceExperimentCaptureContentTypeHeaderPtrOutput values.
// You can construct a concrete instance of `InferenceExperimentCaptureContentTypeHeaderPtrInput` via:
//
//	        InferenceExperimentCaptureContentTypeHeaderArgs{...}
//
//	or:
//
//	        nil
type InferenceExperimentCaptureContentTypeHeaderPtrInput interface {
	pulumi.Input

	ToInferenceExperimentCaptureContentTypeHeaderPtrOutput() InferenceExperimentCaptureContentTypeHeaderPtrOutput
	ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(context.Context) InferenceExperimentCaptureContentTypeHeaderPtrOutput
}

type inferenceExperimentCaptureContentTypeHeaderPtrType InferenceExperimentCaptureContentTypeHeaderArgs

func InferenceExperimentCaptureContentTypeHeaderPtr(v *InferenceExperimentCaptureContentTypeHeaderArgs) InferenceExperimentCaptureContentTypeHeaderPtrInput {
	return (*inferenceExperimentCaptureContentTypeHeaderPtrType)(v)
}

func (*inferenceExperimentCaptureContentTypeHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentCaptureContentTypeHeader)(nil)).Elem()
}

func (i *inferenceExperimentCaptureContentTypeHeaderPtrType) ToInferenceExperimentCaptureContentTypeHeaderPtrOutput() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return i.ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (i *inferenceExperimentCaptureContentTypeHeaderPtrType) ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentCaptureContentTypeHeaderPtrOutput)
}

func (i *inferenceExperimentCaptureContentTypeHeaderPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentCaptureContentTypeHeader] {
	return pulumix.Output[*InferenceExperimentCaptureContentTypeHeader]{
		OutputState: i.ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx).OutputState,
	}
}

// Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
type InferenceExperimentCaptureContentTypeHeaderOutput struct{ *pulumi.OutputState }

func (InferenceExperimentCaptureContentTypeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentCaptureContentTypeHeader)(nil)).Elem()
}

func (o InferenceExperimentCaptureContentTypeHeaderOutput) ToInferenceExperimentCaptureContentTypeHeaderOutput() InferenceExperimentCaptureContentTypeHeaderOutput {
	return o
}

func (o InferenceExperimentCaptureContentTypeHeaderOutput) ToInferenceExperimentCaptureContentTypeHeaderOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderOutput {
	return o
}

func (o InferenceExperimentCaptureContentTypeHeaderOutput) ToInferenceExperimentCaptureContentTypeHeaderPtrOutput() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o.ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(context.Background())
}

func (o InferenceExperimentCaptureContentTypeHeaderOutput) ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceExperimentCaptureContentTypeHeader) *InferenceExperimentCaptureContentTypeHeader {
		return &v
	}).(InferenceExperimentCaptureContentTypeHeaderPtrOutput)
}

func (o InferenceExperimentCaptureContentTypeHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentCaptureContentTypeHeader] {
	return pulumix.Output[InferenceExperimentCaptureContentTypeHeader]{
		OutputState: o.OutputState,
	}
}

// The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
func (o InferenceExperimentCaptureContentTypeHeaderOutput) CsvContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InferenceExperimentCaptureContentTypeHeader) []string { return v.CsvContentTypes }).(pulumi.StringArrayOutput)
}

// The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
func (o InferenceExperimentCaptureContentTypeHeaderOutput) JsonContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InferenceExperimentCaptureContentTypeHeader) []string { return v.JsonContentTypes }).(pulumi.StringArrayOutput)
}

type InferenceExperimentCaptureContentTypeHeaderPtrOutput struct{ *pulumi.OutputState }

func (InferenceExperimentCaptureContentTypeHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentCaptureContentTypeHeader)(nil)).Elem()
}

func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) ToInferenceExperimentCaptureContentTypeHeaderPtrOutput() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o
}

func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) ToInferenceExperimentCaptureContentTypeHeaderPtrOutputWithContext(ctx context.Context) InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o
}

func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentCaptureContentTypeHeader] {
	return pulumix.Output[*InferenceExperimentCaptureContentTypeHeader]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) Elem() InferenceExperimentCaptureContentTypeHeaderOutput {
	return o.ApplyT(func(v *InferenceExperimentCaptureContentTypeHeader) InferenceExperimentCaptureContentTypeHeader {
		if v != nil {
			return *v
		}
		var ret InferenceExperimentCaptureContentTypeHeader
		return ret
	}).(InferenceExperimentCaptureContentTypeHeaderOutput)
}

// The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) CsvContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InferenceExperimentCaptureContentTypeHeader) []string {
		if v == nil {
			return nil
		}
		return v.CsvContentTypes
	}).(pulumi.StringArrayOutput)
}

// The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
func (o InferenceExperimentCaptureContentTypeHeaderPtrOutput) JsonContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InferenceExperimentCaptureContentTypeHeader) []string {
		if v == nil {
			return nil
		}
		return v.JsonContentTypes
	}).(pulumi.StringArrayOutput)
}

// The Amazon S3 location and configuration for storing inference request and response data.
type InferenceExperimentDataStorageConfig struct {
	ContentType *InferenceExperimentCaptureContentTypeHeader `pulumi:"contentType"`
	// The Amazon S3 bucket where the inference request and response data is stored.
	Destination string `pulumi:"destination"`
	// The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
	KmsKey *string `pulumi:"kmsKey"`
}

// InferenceExperimentDataStorageConfigInput is an input type that accepts InferenceExperimentDataStorageConfigArgs and InferenceExperimentDataStorageConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentDataStorageConfigInput` via:
//
//	InferenceExperimentDataStorageConfigArgs{...}
type InferenceExperimentDataStorageConfigInput interface {
	pulumi.Input

	ToInferenceExperimentDataStorageConfigOutput() InferenceExperimentDataStorageConfigOutput
	ToInferenceExperimentDataStorageConfigOutputWithContext(context.Context) InferenceExperimentDataStorageConfigOutput
}

// The Amazon S3 location and configuration for storing inference request and response data.
type InferenceExperimentDataStorageConfigArgs struct {
	ContentType InferenceExperimentCaptureContentTypeHeaderPtrInput `pulumi:"contentType"`
	// The Amazon S3 bucket where the inference request and response data is stored.
	Destination pulumi.StringInput `pulumi:"destination"`
	// The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
}

func (InferenceExperimentDataStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentDataStorageConfig)(nil)).Elem()
}

func (i InferenceExperimentDataStorageConfigArgs) ToInferenceExperimentDataStorageConfigOutput() InferenceExperimentDataStorageConfigOutput {
	return i.ToInferenceExperimentDataStorageConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentDataStorageConfigArgs) ToInferenceExperimentDataStorageConfigOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentDataStorageConfigOutput)
}

func (i InferenceExperimentDataStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentDataStorageConfig] {
	return pulumix.Output[InferenceExperimentDataStorageConfig]{
		OutputState: i.ToInferenceExperimentDataStorageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceExperimentDataStorageConfigArgs) ToInferenceExperimentDataStorageConfigPtrOutput() InferenceExperimentDataStorageConfigPtrOutput {
	return i.ToInferenceExperimentDataStorageConfigPtrOutputWithContext(context.Background())
}

func (i InferenceExperimentDataStorageConfigArgs) ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentDataStorageConfigOutput).ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx)
}

// InferenceExperimentDataStorageConfigPtrInput is an input type that accepts InferenceExperimentDataStorageConfigArgs, InferenceExperimentDataStorageConfigPtr and InferenceExperimentDataStorageConfigPtrOutput values.
// You can construct a concrete instance of `InferenceExperimentDataStorageConfigPtrInput` via:
//
//	        InferenceExperimentDataStorageConfigArgs{...}
//
//	or:
//
//	        nil
type InferenceExperimentDataStorageConfigPtrInput interface {
	pulumi.Input

	ToInferenceExperimentDataStorageConfigPtrOutput() InferenceExperimentDataStorageConfigPtrOutput
	ToInferenceExperimentDataStorageConfigPtrOutputWithContext(context.Context) InferenceExperimentDataStorageConfigPtrOutput
}

type inferenceExperimentDataStorageConfigPtrType InferenceExperimentDataStorageConfigArgs

func InferenceExperimentDataStorageConfigPtr(v *InferenceExperimentDataStorageConfigArgs) InferenceExperimentDataStorageConfigPtrInput {
	return (*inferenceExperimentDataStorageConfigPtrType)(v)
}

func (*inferenceExperimentDataStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentDataStorageConfig)(nil)).Elem()
}

func (i *inferenceExperimentDataStorageConfigPtrType) ToInferenceExperimentDataStorageConfigPtrOutput() InferenceExperimentDataStorageConfigPtrOutput {
	return i.ToInferenceExperimentDataStorageConfigPtrOutputWithContext(context.Background())
}

func (i *inferenceExperimentDataStorageConfigPtrType) ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentDataStorageConfigPtrOutput)
}

func (i *inferenceExperimentDataStorageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentDataStorageConfig] {
	return pulumix.Output[*InferenceExperimentDataStorageConfig]{
		OutputState: i.ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// The Amazon S3 location and configuration for storing inference request and response data.
type InferenceExperimentDataStorageConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentDataStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentDataStorageConfig)(nil)).Elem()
}

func (o InferenceExperimentDataStorageConfigOutput) ToInferenceExperimentDataStorageConfigOutput() InferenceExperimentDataStorageConfigOutput {
	return o
}

func (o InferenceExperimentDataStorageConfigOutput) ToInferenceExperimentDataStorageConfigOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigOutput {
	return o
}

func (o InferenceExperimentDataStorageConfigOutput) ToInferenceExperimentDataStorageConfigPtrOutput() InferenceExperimentDataStorageConfigPtrOutput {
	return o.ToInferenceExperimentDataStorageConfigPtrOutputWithContext(context.Background())
}

func (o InferenceExperimentDataStorageConfigOutput) ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceExperimentDataStorageConfig) *InferenceExperimentDataStorageConfig {
		return &v
	}).(InferenceExperimentDataStorageConfigPtrOutput)
}

func (o InferenceExperimentDataStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentDataStorageConfig] {
	return pulumix.Output[InferenceExperimentDataStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentDataStorageConfigOutput) ContentType() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o.ApplyT(func(v InferenceExperimentDataStorageConfig) *InferenceExperimentCaptureContentTypeHeader {
		return v.ContentType
	}).(InferenceExperimentCaptureContentTypeHeaderPtrOutput)
}

// The Amazon S3 bucket where the inference request and response data is stored.
func (o InferenceExperimentDataStorageConfigOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentDataStorageConfig) string { return v.Destination }).(pulumi.StringOutput)
}

// The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
func (o InferenceExperimentDataStorageConfigOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceExperimentDataStorageConfig) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

type InferenceExperimentDataStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (InferenceExperimentDataStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentDataStorageConfig)(nil)).Elem()
}

func (o InferenceExperimentDataStorageConfigPtrOutput) ToInferenceExperimentDataStorageConfigPtrOutput() InferenceExperimentDataStorageConfigPtrOutput {
	return o
}

func (o InferenceExperimentDataStorageConfigPtrOutput) ToInferenceExperimentDataStorageConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentDataStorageConfigPtrOutput {
	return o
}

func (o InferenceExperimentDataStorageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentDataStorageConfig] {
	return pulumix.Output[*InferenceExperimentDataStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentDataStorageConfigPtrOutput) Elem() InferenceExperimentDataStorageConfigOutput {
	return o.ApplyT(func(v *InferenceExperimentDataStorageConfig) InferenceExperimentDataStorageConfig {
		if v != nil {
			return *v
		}
		var ret InferenceExperimentDataStorageConfig
		return ret
	}).(InferenceExperimentDataStorageConfigOutput)
}

func (o InferenceExperimentDataStorageConfigPtrOutput) ContentType() InferenceExperimentCaptureContentTypeHeaderPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentDataStorageConfig) *InferenceExperimentCaptureContentTypeHeader {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(InferenceExperimentCaptureContentTypeHeaderPtrOutput)
}

// The Amazon S3 bucket where the inference request and response data is stored.
func (o InferenceExperimentDataStorageConfigPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentDataStorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

// The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
func (o InferenceExperimentDataStorageConfigPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentDataStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// The metadata of the endpoint on which the inference experiment ran.
type InferenceExperimentEndpointMetadata struct {
	// The name of the endpoint configuration.
	EndpointConfigName *string `pulumi:"endpointConfigName"`
	EndpointName       string  `pulumi:"endpointName"`
	// The status of the endpoint. For possible values of the status of an endpoint.
	EndpointStatus *InferenceExperimentEndpointMetadataEndpointStatus `pulumi:"endpointStatus"`
}

// The metadata of the endpoint on which the inference experiment ran.
type InferenceExperimentEndpointMetadataOutput struct{ *pulumi.OutputState }

func (InferenceExperimentEndpointMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentEndpointMetadata)(nil)).Elem()
}

func (o InferenceExperimentEndpointMetadataOutput) ToInferenceExperimentEndpointMetadataOutput() InferenceExperimentEndpointMetadataOutput {
	return o
}

func (o InferenceExperimentEndpointMetadataOutput) ToInferenceExperimentEndpointMetadataOutputWithContext(ctx context.Context) InferenceExperimentEndpointMetadataOutput {
	return o
}

func (o InferenceExperimentEndpointMetadataOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentEndpointMetadata] {
	return pulumix.Output[InferenceExperimentEndpointMetadata]{
		OutputState: o.OutputState,
	}
}

// The name of the endpoint configuration.
func (o InferenceExperimentEndpointMetadataOutput) EndpointConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceExperimentEndpointMetadata) *string { return v.EndpointConfigName }).(pulumi.StringPtrOutput)
}

func (o InferenceExperimentEndpointMetadataOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentEndpointMetadata) string { return v.EndpointName }).(pulumi.StringOutput)
}

// The status of the endpoint. For possible values of the status of an endpoint.
func (o InferenceExperimentEndpointMetadataOutput) EndpointStatus() InferenceExperimentEndpointMetadataEndpointStatusPtrOutput {
	return o.ApplyT(func(v InferenceExperimentEndpointMetadata) *InferenceExperimentEndpointMetadataEndpointStatus {
		return v.EndpointStatus
	}).(InferenceExperimentEndpointMetadataEndpointStatusPtrOutput)
}

type InferenceExperimentEndpointMetadataPtrOutput struct{ *pulumi.OutputState }

func (InferenceExperimentEndpointMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentEndpointMetadata)(nil)).Elem()
}

func (o InferenceExperimentEndpointMetadataPtrOutput) ToInferenceExperimentEndpointMetadataPtrOutput() InferenceExperimentEndpointMetadataPtrOutput {
	return o
}

func (o InferenceExperimentEndpointMetadataPtrOutput) ToInferenceExperimentEndpointMetadataPtrOutputWithContext(ctx context.Context) InferenceExperimentEndpointMetadataPtrOutput {
	return o
}

func (o InferenceExperimentEndpointMetadataPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentEndpointMetadata] {
	return pulumix.Output[*InferenceExperimentEndpointMetadata]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentEndpointMetadataPtrOutput) Elem() InferenceExperimentEndpointMetadataOutput {
	return o.ApplyT(func(v *InferenceExperimentEndpointMetadata) InferenceExperimentEndpointMetadata {
		if v != nil {
			return *v
		}
		var ret InferenceExperimentEndpointMetadata
		return ret
	}).(InferenceExperimentEndpointMetadataOutput)
}

// The name of the endpoint configuration.
func (o InferenceExperimentEndpointMetadataPtrOutput) EndpointConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentEndpointMetadata) *string {
		if v == nil {
			return nil
		}
		return v.EndpointConfigName
	}).(pulumi.StringPtrOutput)
}

func (o InferenceExperimentEndpointMetadataPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentEndpointMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// The status of the endpoint. For possible values of the status of an endpoint.
func (o InferenceExperimentEndpointMetadataPtrOutput) EndpointStatus() InferenceExperimentEndpointMetadataEndpointStatusPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentEndpointMetadata) *InferenceExperimentEndpointMetadataEndpointStatus {
		if v == nil {
			return nil
		}
		return v.EndpointStatus
	}).(InferenceExperimentEndpointMetadataEndpointStatusPtrOutput)
}

// The configuration for the infrastructure that the model will be deployed to.
type InferenceExperimentModelInfrastructureConfig struct {
	// The type of the inference experiment that you want to run.
	InfrastructureType      InferenceExperimentModelInfrastructureConfigInfrastructureType `pulumi:"infrastructureType"`
	RealTimeInferenceConfig InferenceExperimentRealTimeInferenceConfig                     `pulumi:"realTimeInferenceConfig"`
}

// InferenceExperimentModelInfrastructureConfigInput is an input type that accepts InferenceExperimentModelInfrastructureConfigArgs and InferenceExperimentModelInfrastructureConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentModelInfrastructureConfigInput` via:
//
//	InferenceExperimentModelInfrastructureConfigArgs{...}
type InferenceExperimentModelInfrastructureConfigInput interface {
	pulumi.Input

	ToInferenceExperimentModelInfrastructureConfigOutput() InferenceExperimentModelInfrastructureConfigOutput
	ToInferenceExperimentModelInfrastructureConfigOutputWithContext(context.Context) InferenceExperimentModelInfrastructureConfigOutput
}

// The configuration for the infrastructure that the model will be deployed to.
type InferenceExperimentModelInfrastructureConfigArgs struct {
	// The type of the inference experiment that you want to run.
	InfrastructureType      InferenceExperimentModelInfrastructureConfigInfrastructureTypeInput `pulumi:"infrastructureType"`
	RealTimeInferenceConfig InferenceExperimentRealTimeInferenceConfigInput                     `pulumi:"realTimeInferenceConfig"`
}

func (InferenceExperimentModelInfrastructureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentModelInfrastructureConfig)(nil)).Elem()
}

func (i InferenceExperimentModelInfrastructureConfigArgs) ToInferenceExperimentModelInfrastructureConfigOutput() InferenceExperimentModelInfrastructureConfigOutput {
	return i.ToInferenceExperimentModelInfrastructureConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentModelInfrastructureConfigArgs) ToInferenceExperimentModelInfrastructureConfigOutputWithContext(ctx context.Context) InferenceExperimentModelInfrastructureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentModelInfrastructureConfigOutput)
}

func (i InferenceExperimentModelInfrastructureConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentModelInfrastructureConfig] {
	return pulumix.Output[InferenceExperimentModelInfrastructureConfig]{
		OutputState: i.ToInferenceExperimentModelInfrastructureConfigOutputWithContext(ctx).OutputState,
	}
}

// The configuration for the infrastructure that the model will be deployed to.
type InferenceExperimentModelInfrastructureConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentModelInfrastructureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentModelInfrastructureConfig)(nil)).Elem()
}

func (o InferenceExperimentModelInfrastructureConfigOutput) ToInferenceExperimentModelInfrastructureConfigOutput() InferenceExperimentModelInfrastructureConfigOutput {
	return o
}

func (o InferenceExperimentModelInfrastructureConfigOutput) ToInferenceExperimentModelInfrastructureConfigOutputWithContext(ctx context.Context) InferenceExperimentModelInfrastructureConfigOutput {
	return o
}

func (o InferenceExperimentModelInfrastructureConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentModelInfrastructureConfig] {
	return pulumix.Output[InferenceExperimentModelInfrastructureConfig]{
		OutputState: o.OutputState,
	}
}

// The type of the inference experiment that you want to run.
func (o InferenceExperimentModelInfrastructureConfigOutput) InfrastructureType() InferenceExperimentModelInfrastructureConfigInfrastructureTypeOutput {
	return o.ApplyT(func(v InferenceExperimentModelInfrastructureConfig) InferenceExperimentModelInfrastructureConfigInfrastructureType {
		return v.InfrastructureType
	}).(InferenceExperimentModelInfrastructureConfigInfrastructureTypeOutput)
}

func (o InferenceExperimentModelInfrastructureConfigOutput) RealTimeInferenceConfig() InferenceExperimentRealTimeInferenceConfigOutput {
	return o.ApplyT(func(v InferenceExperimentModelInfrastructureConfig) InferenceExperimentRealTimeInferenceConfig {
		return v.RealTimeInferenceConfig
	}).(InferenceExperimentRealTimeInferenceConfigOutput)
}

// Contains information about the deployment options of a model.
type InferenceExperimentModelVariantConfig struct {
	InfrastructureConfig InferenceExperimentModelInfrastructureConfig `pulumi:"infrastructureConfig"`
	// The name of the Amazon SageMaker Model entity.
	ModelName string `pulumi:"modelName"`
	// The name of the variant.
	VariantName string `pulumi:"variantName"`
}

// InferenceExperimentModelVariantConfigInput is an input type that accepts InferenceExperimentModelVariantConfigArgs and InferenceExperimentModelVariantConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentModelVariantConfigInput` via:
//
//	InferenceExperimentModelVariantConfigArgs{...}
type InferenceExperimentModelVariantConfigInput interface {
	pulumi.Input

	ToInferenceExperimentModelVariantConfigOutput() InferenceExperimentModelVariantConfigOutput
	ToInferenceExperimentModelVariantConfigOutputWithContext(context.Context) InferenceExperimentModelVariantConfigOutput
}

// Contains information about the deployment options of a model.
type InferenceExperimentModelVariantConfigArgs struct {
	InfrastructureConfig InferenceExperimentModelInfrastructureConfigInput `pulumi:"infrastructureConfig"`
	// The name of the Amazon SageMaker Model entity.
	ModelName pulumi.StringInput `pulumi:"modelName"`
	// The name of the variant.
	VariantName pulumi.StringInput `pulumi:"variantName"`
}

func (InferenceExperimentModelVariantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentModelVariantConfig)(nil)).Elem()
}

func (i InferenceExperimentModelVariantConfigArgs) ToInferenceExperimentModelVariantConfigOutput() InferenceExperimentModelVariantConfigOutput {
	return i.ToInferenceExperimentModelVariantConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentModelVariantConfigArgs) ToInferenceExperimentModelVariantConfigOutputWithContext(ctx context.Context) InferenceExperimentModelVariantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentModelVariantConfigOutput)
}

func (i InferenceExperimentModelVariantConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentModelVariantConfig] {
	return pulumix.Output[InferenceExperimentModelVariantConfig]{
		OutputState: i.ToInferenceExperimentModelVariantConfigOutputWithContext(ctx).OutputState,
	}
}

// InferenceExperimentModelVariantConfigArrayInput is an input type that accepts InferenceExperimentModelVariantConfigArray and InferenceExperimentModelVariantConfigArrayOutput values.
// You can construct a concrete instance of `InferenceExperimentModelVariantConfigArrayInput` via:
//
//	InferenceExperimentModelVariantConfigArray{ InferenceExperimentModelVariantConfigArgs{...} }
type InferenceExperimentModelVariantConfigArrayInput interface {
	pulumi.Input

	ToInferenceExperimentModelVariantConfigArrayOutput() InferenceExperimentModelVariantConfigArrayOutput
	ToInferenceExperimentModelVariantConfigArrayOutputWithContext(context.Context) InferenceExperimentModelVariantConfigArrayOutput
}

type InferenceExperimentModelVariantConfigArray []InferenceExperimentModelVariantConfigInput

func (InferenceExperimentModelVariantConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentModelVariantConfig)(nil)).Elem()
}

func (i InferenceExperimentModelVariantConfigArray) ToInferenceExperimentModelVariantConfigArrayOutput() InferenceExperimentModelVariantConfigArrayOutput {
	return i.ToInferenceExperimentModelVariantConfigArrayOutputWithContext(context.Background())
}

func (i InferenceExperimentModelVariantConfigArray) ToInferenceExperimentModelVariantConfigArrayOutputWithContext(ctx context.Context) InferenceExperimentModelVariantConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentModelVariantConfigArrayOutput)
}

func (i InferenceExperimentModelVariantConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentModelVariantConfig] {
	return pulumix.Output[[]InferenceExperimentModelVariantConfig]{
		OutputState: i.ToInferenceExperimentModelVariantConfigArrayOutputWithContext(ctx).OutputState,
	}
}

// Contains information about the deployment options of a model.
type InferenceExperimentModelVariantConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentModelVariantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentModelVariantConfig)(nil)).Elem()
}

func (o InferenceExperimentModelVariantConfigOutput) ToInferenceExperimentModelVariantConfigOutput() InferenceExperimentModelVariantConfigOutput {
	return o
}

func (o InferenceExperimentModelVariantConfigOutput) ToInferenceExperimentModelVariantConfigOutputWithContext(ctx context.Context) InferenceExperimentModelVariantConfigOutput {
	return o
}

func (o InferenceExperimentModelVariantConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentModelVariantConfig] {
	return pulumix.Output[InferenceExperimentModelVariantConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentModelVariantConfigOutput) InfrastructureConfig() InferenceExperimentModelInfrastructureConfigOutput {
	return o.ApplyT(func(v InferenceExperimentModelVariantConfig) InferenceExperimentModelInfrastructureConfig {
		return v.InfrastructureConfig
	}).(InferenceExperimentModelInfrastructureConfigOutput)
}

// The name of the Amazon SageMaker Model entity.
func (o InferenceExperimentModelVariantConfigOutput) ModelName() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentModelVariantConfig) string { return v.ModelName }).(pulumi.StringOutput)
}

// The name of the variant.
func (o InferenceExperimentModelVariantConfigOutput) VariantName() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentModelVariantConfig) string { return v.VariantName }).(pulumi.StringOutput)
}

type InferenceExperimentModelVariantConfigArrayOutput struct{ *pulumi.OutputState }

func (InferenceExperimentModelVariantConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentModelVariantConfig)(nil)).Elem()
}

func (o InferenceExperimentModelVariantConfigArrayOutput) ToInferenceExperimentModelVariantConfigArrayOutput() InferenceExperimentModelVariantConfigArrayOutput {
	return o
}

func (o InferenceExperimentModelVariantConfigArrayOutput) ToInferenceExperimentModelVariantConfigArrayOutputWithContext(ctx context.Context) InferenceExperimentModelVariantConfigArrayOutput {
	return o
}

func (o InferenceExperimentModelVariantConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentModelVariantConfig] {
	return pulumix.Output[[]InferenceExperimentModelVariantConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentModelVariantConfigArrayOutput) Index(i pulumi.IntInput) InferenceExperimentModelVariantConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InferenceExperimentModelVariantConfig {
		return vs[0].([]InferenceExperimentModelVariantConfig)[vs[1].(int)]
	}).(InferenceExperimentModelVariantConfigOutput)
}

// The infrastructure configuration for deploying the model to a real-time inference endpoint.
type InferenceExperimentRealTimeInferenceConfig struct {
	// The number of instances of the type specified by InstanceType.
	InstanceCount int `pulumi:"instanceCount"`
	// The instance type the model is deployed to.
	InstanceType string `pulumi:"instanceType"`
}

// InferenceExperimentRealTimeInferenceConfigInput is an input type that accepts InferenceExperimentRealTimeInferenceConfigArgs and InferenceExperimentRealTimeInferenceConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentRealTimeInferenceConfigInput` via:
//
//	InferenceExperimentRealTimeInferenceConfigArgs{...}
type InferenceExperimentRealTimeInferenceConfigInput interface {
	pulumi.Input

	ToInferenceExperimentRealTimeInferenceConfigOutput() InferenceExperimentRealTimeInferenceConfigOutput
	ToInferenceExperimentRealTimeInferenceConfigOutputWithContext(context.Context) InferenceExperimentRealTimeInferenceConfigOutput
}

// The infrastructure configuration for deploying the model to a real-time inference endpoint.
type InferenceExperimentRealTimeInferenceConfigArgs struct {
	// The number of instances of the type specified by InstanceType.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The instance type the model is deployed to.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (InferenceExperimentRealTimeInferenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentRealTimeInferenceConfig)(nil)).Elem()
}

func (i InferenceExperimentRealTimeInferenceConfigArgs) ToInferenceExperimentRealTimeInferenceConfigOutput() InferenceExperimentRealTimeInferenceConfigOutput {
	return i.ToInferenceExperimentRealTimeInferenceConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentRealTimeInferenceConfigArgs) ToInferenceExperimentRealTimeInferenceConfigOutputWithContext(ctx context.Context) InferenceExperimentRealTimeInferenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentRealTimeInferenceConfigOutput)
}

func (i InferenceExperimentRealTimeInferenceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentRealTimeInferenceConfig] {
	return pulumix.Output[InferenceExperimentRealTimeInferenceConfig]{
		OutputState: i.ToInferenceExperimentRealTimeInferenceConfigOutputWithContext(ctx).OutputState,
	}
}

// The infrastructure configuration for deploying the model to a real-time inference endpoint.
type InferenceExperimentRealTimeInferenceConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentRealTimeInferenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentRealTimeInferenceConfig)(nil)).Elem()
}

func (o InferenceExperimentRealTimeInferenceConfigOutput) ToInferenceExperimentRealTimeInferenceConfigOutput() InferenceExperimentRealTimeInferenceConfigOutput {
	return o
}

func (o InferenceExperimentRealTimeInferenceConfigOutput) ToInferenceExperimentRealTimeInferenceConfigOutputWithContext(ctx context.Context) InferenceExperimentRealTimeInferenceConfigOutput {
	return o
}

func (o InferenceExperimentRealTimeInferenceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentRealTimeInferenceConfig] {
	return pulumix.Output[InferenceExperimentRealTimeInferenceConfig]{
		OutputState: o.OutputState,
	}
}

// The number of instances of the type specified by InstanceType.
func (o InferenceExperimentRealTimeInferenceConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v InferenceExperimentRealTimeInferenceConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The instance type the model is deployed to.
func (o InferenceExperimentRealTimeInferenceConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentRealTimeInferenceConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration for which you want the inference experiment to run.
type InferenceExperimentSchedule struct {
	// The timestamp at which the inference experiment ended or will end.
	EndTime *string `pulumi:"endTime"`
	// The timestamp at which the inference experiment started or will start.
	StartTime *string `pulumi:"startTime"`
}

// InferenceExperimentScheduleInput is an input type that accepts InferenceExperimentScheduleArgs and InferenceExperimentScheduleOutput values.
// You can construct a concrete instance of `InferenceExperimentScheduleInput` via:
//
//	InferenceExperimentScheduleArgs{...}
type InferenceExperimentScheduleInput interface {
	pulumi.Input

	ToInferenceExperimentScheduleOutput() InferenceExperimentScheduleOutput
	ToInferenceExperimentScheduleOutputWithContext(context.Context) InferenceExperimentScheduleOutput
}

// The duration for which you want the inference experiment to run.
type InferenceExperimentScheduleArgs struct {
	// The timestamp at which the inference experiment ended or will end.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The timestamp at which the inference experiment started or will start.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (InferenceExperimentScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentSchedule)(nil)).Elem()
}

func (i InferenceExperimentScheduleArgs) ToInferenceExperimentScheduleOutput() InferenceExperimentScheduleOutput {
	return i.ToInferenceExperimentScheduleOutputWithContext(context.Background())
}

func (i InferenceExperimentScheduleArgs) ToInferenceExperimentScheduleOutputWithContext(ctx context.Context) InferenceExperimentScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentScheduleOutput)
}

func (i InferenceExperimentScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentSchedule] {
	return pulumix.Output[InferenceExperimentSchedule]{
		OutputState: i.ToInferenceExperimentScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceExperimentScheduleArgs) ToInferenceExperimentSchedulePtrOutput() InferenceExperimentSchedulePtrOutput {
	return i.ToInferenceExperimentSchedulePtrOutputWithContext(context.Background())
}

func (i InferenceExperimentScheduleArgs) ToInferenceExperimentSchedulePtrOutputWithContext(ctx context.Context) InferenceExperimentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentScheduleOutput).ToInferenceExperimentSchedulePtrOutputWithContext(ctx)
}

// InferenceExperimentSchedulePtrInput is an input type that accepts InferenceExperimentScheduleArgs, InferenceExperimentSchedulePtr and InferenceExperimentSchedulePtrOutput values.
// You can construct a concrete instance of `InferenceExperimentSchedulePtrInput` via:
//
//	        InferenceExperimentScheduleArgs{...}
//
//	or:
//
//	        nil
type InferenceExperimentSchedulePtrInput interface {
	pulumi.Input

	ToInferenceExperimentSchedulePtrOutput() InferenceExperimentSchedulePtrOutput
	ToInferenceExperimentSchedulePtrOutputWithContext(context.Context) InferenceExperimentSchedulePtrOutput
}

type inferenceExperimentSchedulePtrType InferenceExperimentScheduleArgs

func InferenceExperimentSchedulePtr(v *InferenceExperimentScheduleArgs) InferenceExperimentSchedulePtrInput {
	return (*inferenceExperimentSchedulePtrType)(v)
}

func (*inferenceExperimentSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentSchedule)(nil)).Elem()
}

func (i *inferenceExperimentSchedulePtrType) ToInferenceExperimentSchedulePtrOutput() InferenceExperimentSchedulePtrOutput {
	return i.ToInferenceExperimentSchedulePtrOutputWithContext(context.Background())
}

func (i *inferenceExperimentSchedulePtrType) ToInferenceExperimentSchedulePtrOutputWithContext(ctx context.Context) InferenceExperimentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentSchedulePtrOutput)
}

func (i *inferenceExperimentSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentSchedule] {
	return pulumix.Output[*InferenceExperimentSchedule]{
		OutputState: i.ToInferenceExperimentSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

// The duration for which you want the inference experiment to run.
type InferenceExperimentScheduleOutput struct{ *pulumi.OutputState }

func (InferenceExperimentScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentSchedule)(nil)).Elem()
}

func (o InferenceExperimentScheduleOutput) ToInferenceExperimentScheduleOutput() InferenceExperimentScheduleOutput {
	return o
}

func (o InferenceExperimentScheduleOutput) ToInferenceExperimentScheduleOutputWithContext(ctx context.Context) InferenceExperimentScheduleOutput {
	return o
}

func (o InferenceExperimentScheduleOutput) ToInferenceExperimentSchedulePtrOutput() InferenceExperimentSchedulePtrOutput {
	return o.ToInferenceExperimentSchedulePtrOutputWithContext(context.Background())
}

func (o InferenceExperimentScheduleOutput) ToInferenceExperimentSchedulePtrOutputWithContext(ctx context.Context) InferenceExperimentSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceExperimentSchedule) *InferenceExperimentSchedule {
		return &v
	}).(InferenceExperimentSchedulePtrOutput)
}

func (o InferenceExperimentScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentSchedule] {
	return pulumix.Output[InferenceExperimentSchedule]{
		OutputState: o.OutputState,
	}
}

// The timestamp at which the inference experiment ended or will end.
func (o InferenceExperimentScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceExperimentSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The timestamp at which the inference experiment started or will start.
func (o InferenceExperimentScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InferenceExperimentSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type InferenceExperimentSchedulePtrOutput struct{ *pulumi.OutputState }

func (InferenceExperimentSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentSchedule)(nil)).Elem()
}

func (o InferenceExperimentSchedulePtrOutput) ToInferenceExperimentSchedulePtrOutput() InferenceExperimentSchedulePtrOutput {
	return o
}

func (o InferenceExperimentSchedulePtrOutput) ToInferenceExperimentSchedulePtrOutputWithContext(ctx context.Context) InferenceExperimentSchedulePtrOutput {
	return o
}

func (o InferenceExperimentSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentSchedule] {
	return pulumix.Output[*InferenceExperimentSchedule]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentSchedulePtrOutput) Elem() InferenceExperimentScheduleOutput {
	return o.ApplyT(func(v *InferenceExperimentSchedule) InferenceExperimentSchedule {
		if v != nil {
			return *v
		}
		var ret InferenceExperimentSchedule
		return ret
	}).(InferenceExperimentScheduleOutput)
}

// The timestamp at which the inference experiment ended or will end.
func (o InferenceExperimentSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The timestamp at which the inference experiment started or will start.
func (o InferenceExperimentSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
type InferenceExperimentShadowModeConfig struct {
	// List of shadow variant configurations.
	ShadowModelVariants []InferenceExperimentShadowModelVariantConfig `pulumi:"shadowModelVariants"`
	// The name of the production variant, which takes all the inference requests.
	SourceModelVariantName string `pulumi:"sourceModelVariantName"`
}

// InferenceExperimentShadowModeConfigInput is an input type that accepts InferenceExperimentShadowModeConfigArgs and InferenceExperimentShadowModeConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentShadowModeConfigInput` via:
//
//	InferenceExperimentShadowModeConfigArgs{...}
type InferenceExperimentShadowModeConfigInput interface {
	pulumi.Input

	ToInferenceExperimentShadowModeConfigOutput() InferenceExperimentShadowModeConfigOutput
	ToInferenceExperimentShadowModeConfigOutputWithContext(context.Context) InferenceExperimentShadowModeConfigOutput
}

// The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
type InferenceExperimentShadowModeConfigArgs struct {
	// List of shadow variant configurations.
	ShadowModelVariants InferenceExperimentShadowModelVariantConfigArrayInput `pulumi:"shadowModelVariants"`
	// The name of the production variant, which takes all the inference requests.
	SourceModelVariantName pulumi.StringInput `pulumi:"sourceModelVariantName"`
}

func (InferenceExperimentShadowModeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentShadowModeConfig)(nil)).Elem()
}

func (i InferenceExperimentShadowModeConfigArgs) ToInferenceExperimentShadowModeConfigOutput() InferenceExperimentShadowModeConfigOutput {
	return i.ToInferenceExperimentShadowModeConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentShadowModeConfigArgs) ToInferenceExperimentShadowModeConfigOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentShadowModeConfigOutput)
}

func (i InferenceExperimentShadowModeConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentShadowModeConfig] {
	return pulumix.Output[InferenceExperimentShadowModeConfig]{
		OutputState: i.ToInferenceExperimentShadowModeConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InferenceExperimentShadowModeConfigArgs) ToInferenceExperimentShadowModeConfigPtrOutput() InferenceExperimentShadowModeConfigPtrOutput {
	return i.ToInferenceExperimentShadowModeConfigPtrOutputWithContext(context.Background())
}

func (i InferenceExperimentShadowModeConfigArgs) ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentShadowModeConfigOutput).ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx)
}

// InferenceExperimentShadowModeConfigPtrInput is an input type that accepts InferenceExperimentShadowModeConfigArgs, InferenceExperimentShadowModeConfigPtr and InferenceExperimentShadowModeConfigPtrOutput values.
// You can construct a concrete instance of `InferenceExperimentShadowModeConfigPtrInput` via:
//
//	        InferenceExperimentShadowModeConfigArgs{...}
//
//	or:
//
//	        nil
type InferenceExperimentShadowModeConfigPtrInput interface {
	pulumi.Input

	ToInferenceExperimentShadowModeConfigPtrOutput() InferenceExperimentShadowModeConfigPtrOutput
	ToInferenceExperimentShadowModeConfigPtrOutputWithContext(context.Context) InferenceExperimentShadowModeConfigPtrOutput
}

type inferenceExperimentShadowModeConfigPtrType InferenceExperimentShadowModeConfigArgs

func InferenceExperimentShadowModeConfigPtr(v *InferenceExperimentShadowModeConfigArgs) InferenceExperimentShadowModeConfigPtrInput {
	return (*inferenceExperimentShadowModeConfigPtrType)(v)
}

func (*inferenceExperimentShadowModeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentShadowModeConfig)(nil)).Elem()
}

func (i *inferenceExperimentShadowModeConfigPtrType) ToInferenceExperimentShadowModeConfigPtrOutput() InferenceExperimentShadowModeConfigPtrOutput {
	return i.ToInferenceExperimentShadowModeConfigPtrOutputWithContext(context.Background())
}

func (i *inferenceExperimentShadowModeConfigPtrType) ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentShadowModeConfigPtrOutput)
}

func (i *inferenceExperimentShadowModeConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentShadowModeConfig] {
	return pulumix.Output[*InferenceExperimentShadowModeConfig]{
		OutputState: i.ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
type InferenceExperimentShadowModeConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentShadowModeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentShadowModeConfig)(nil)).Elem()
}

func (o InferenceExperimentShadowModeConfigOutput) ToInferenceExperimentShadowModeConfigOutput() InferenceExperimentShadowModeConfigOutput {
	return o
}

func (o InferenceExperimentShadowModeConfigOutput) ToInferenceExperimentShadowModeConfigOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigOutput {
	return o
}

func (o InferenceExperimentShadowModeConfigOutput) ToInferenceExperimentShadowModeConfigPtrOutput() InferenceExperimentShadowModeConfigPtrOutput {
	return o.ToInferenceExperimentShadowModeConfigPtrOutputWithContext(context.Background())
}

func (o InferenceExperimentShadowModeConfigOutput) ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InferenceExperimentShadowModeConfig) *InferenceExperimentShadowModeConfig {
		return &v
	}).(InferenceExperimentShadowModeConfigPtrOutput)
}

func (o InferenceExperimentShadowModeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentShadowModeConfig] {
	return pulumix.Output[InferenceExperimentShadowModeConfig]{
		OutputState: o.OutputState,
	}
}

// List of shadow variant configurations.
func (o InferenceExperimentShadowModeConfigOutput) ShadowModelVariants() InferenceExperimentShadowModelVariantConfigArrayOutput {
	return o.ApplyT(func(v InferenceExperimentShadowModeConfig) []InferenceExperimentShadowModelVariantConfig {
		return v.ShadowModelVariants
	}).(InferenceExperimentShadowModelVariantConfigArrayOutput)
}

// The name of the production variant, which takes all the inference requests.
func (o InferenceExperimentShadowModeConfigOutput) SourceModelVariantName() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentShadowModeConfig) string { return v.SourceModelVariantName }).(pulumi.StringOutput)
}

type InferenceExperimentShadowModeConfigPtrOutput struct{ *pulumi.OutputState }

func (InferenceExperimentShadowModeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InferenceExperimentShadowModeConfig)(nil)).Elem()
}

func (o InferenceExperimentShadowModeConfigPtrOutput) ToInferenceExperimentShadowModeConfigPtrOutput() InferenceExperimentShadowModeConfigPtrOutput {
	return o
}

func (o InferenceExperimentShadowModeConfigPtrOutput) ToInferenceExperimentShadowModeConfigPtrOutputWithContext(ctx context.Context) InferenceExperimentShadowModeConfigPtrOutput {
	return o
}

func (o InferenceExperimentShadowModeConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InferenceExperimentShadowModeConfig] {
	return pulumix.Output[*InferenceExperimentShadowModeConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentShadowModeConfigPtrOutput) Elem() InferenceExperimentShadowModeConfigOutput {
	return o.ApplyT(func(v *InferenceExperimentShadowModeConfig) InferenceExperimentShadowModeConfig {
		if v != nil {
			return *v
		}
		var ret InferenceExperimentShadowModeConfig
		return ret
	}).(InferenceExperimentShadowModeConfigOutput)
}

// List of shadow variant configurations.
func (o InferenceExperimentShadowModeConfigPtrOutput) ShadowModelVariants() InferenceExperimentShadowModelVariantConfigArrayOutput {
	return o.ApplyT(func(v *InferenceExperimentShadowModeConfig) []InferenceExperimentShadowModelVariantConfig {
		if v == nil {
			return nil
		}
		return v.ShadowModelVariants
	}).(InferenceExperimentShadowModelVariantConfigArrayOutput)
}

// The name of the production variant, which takes all the inference requests.
func (o InferenceExperimentShadowModeConfigPtrOutput) SourceModelVariantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InferenceExperimentShadowModeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SourceModelVariantName
	}).(pulumi.StringPtrOutput)
}

// The name and sampling percentage of a shadow variant.
type InferenceExperimentShadowModelVariantConfig struct {
	// The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
	SamplingPercentage int `pulumi:"samplingPercentage"`
	// The name of the shadow variant.
	ShadowModelVariantName string `pulumi:"shadowModelVariantName"`
}

// InferenceExperimentShadowModelVariantConfigInput is an input type that accepts InferenceExperimentShadowModelVariantConfigArgs and InferenceExperimentShadowModelVariantConfigOutput values.
// You can construct a concrete instance of `InferenceExperimentShadowModelVariantConfigInput` via:
//
//	InferenceExperimentShadowModelVariantConfigArgs{...}
type InferenceExperimentShadowModelVariantConfigInput interface {
	pulumi.Input

	ToInferenceExperimentShadowModelVariantConfigOutput() InferenceExperimentShadowModelVariantConfigOutput
	ToInferenceExperimentShadowModelVariantConfigOutputWithContext(context.Context) InferenceExperimentShadowModelVariantConfigOutput
}

// The name and sampling percentage of a shadow variant.
type InferenceExperimentShadowModelVariantConfigArgs struct {
	// The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
	SamplingPercentage pulumi.IntInput `pulumi:"samplingPercentage"`
	// The name of the shadow variant.
	ShadowModelVariantName pulumi.StringInput `pulumi:"shadowModelVariantName"`
}

func (InferenceExperimentShadowModelVariantConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentShadowModelVariantConfig)(nil)).Elem()
}

func (i InferenceExperimentShadowModelVariantConfigArgs) ToInferenceExperimentShadowModelVariantConfigOutput() InferenceExperimentShadowModelVariantConfigOutput {
	return i.ToInferenceExperimentShadowModelVariantConfigOutputWithContext(context.Background())
}

func (i InferenceExperimentShadowModelVariantConfigArgs) ToInferenceExperimentShadowModelVariantConfigOutputWithContext(ctx context.Context) InferenceExperimentShadowModelVariantConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentShadowModelVariantConfigOutput)
}

func (i InferenceExperimentShadowModelVariantConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentShadowModelVariantConfig] {
	return pulumix.Output[InferenceExperimentShadowModelVariantConfig]{
		OutputState: i.ToInferenceExperimentShadowModelVariantConfigOutputWithContext(ctx).OutputState,
	}
}

// InferenceExperimentShadowModelVariantConfigArrayInput is an input type that accepts InferenceExperimentShadowModelVariantConfigArray and InferenceExperimentShadowModelVariantConfigArrayOutput values.
// You can construct a concrete instance of `InferenceExperimentShadowModelVariantConfigArrayInput` via:
//
//	InferenceExperimentShadowModelVariantConfigArray{ InferenceExperimentShadowModelVariantConfigArgs{...} }
type InferenceExperimentShadowModelVariantConfigArrayInput interface {
	pulumi.Input

	ToInferenceExperimentShadowModelVariantConfigArrayOutput() InferenceExperimentShadowModelVariantConfigArrayOutput
	ToInferenceExperimentShadowModelVariantConfigArrayOutputWithContext(context.Context) InferenceExperimentShadowModelVariantConfigArrayOutput
}

type InferenceExperimentShadowModelVariantConfigArray []InferenceExperimentShadowModelVariantConfigInput

func (InferenceExperimentShadowModelVariantConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentShadowModelVariantConfig)(nil)).Elem()
}

func (i InferenceExperimentShadowModelVariantConfigArray) ToInferenceExperimentShadowModelVariantConfigArrayOutput() InferenceExperimentShadowModelVariantConfigArrayOutput {
	return i.ToInferenceExperimentShadowModelVariantConfigArrayOutputWithContext(context.Background())
}

func (i InferenceExperimentShadowModelVariantConfigArray) ToInferenceExperimentShadowModelVariantConfigArrayOutputWithContext(ctx context.Context) InferenceExperimentShadowModelVariantConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentShadowModelVariantConfigArrayOutput)
}

func (i InferenceExperimentShadowModelVariantConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentShadowModelVariantConfig] {
	return pulumix.Output[[]InferenceExperimentShadowModelVariantConfig]{
		OutputState: i.ToInferenceExperimentShadowModelVariantConfigArrayOutputWithContext(ctx).OutputState,
	}
}

// The name and sampling percentage of a shadow variant.
type InferenceExperimentShadowModelVariantConfigOutput struct{ *pulumi.OutputState }

func (InferenceExperimentShadowModelVariantConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentShadowModelVariantConfig)(nil)).Elem()
}

func (o InferenceExperimentShadowModelVariantConfigOutput) ToInferenceExperimentShadowModelVariantConfigOutput() InferenceExperimentShadowModelVariantConfigOutput {
	return o
}

func (o InferenceExperimentShadowModelVariantConfigOutput) ToInferenceExperimentShadowModelVariantConfigOutputWithContext(ctx context.Context) InferenceExperimentShadowModelVariantConfigOutput {
	return o
}

func (o InferenceExperimentShadowModelVariantConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentShadowModelVariantConfig] {
	return pulumix.Output[InferenceExperimentShadowModelVariantConfig]{
		OutputState: o.OutputState,
	}
}

// The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
func (o InferenceExperimentShadowModelVariantConfigOutput) SamplingPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InferenceExperimentShadowModelVariantConfig) int { return v.SamplingPercentage }).(pulumi.IntOutput)
}

// The name of the shadow variant.
func (o InferenceExperimentShadowModelVariantConfigOutput) ShadowModelVariantName() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentShadowModelVariantConfig) string { return v.ShadowModelVariantName }).(pulumi.StringOutput)
}

type InferenceExperimentShadowModelVariantConfigArrayOutput struct{ *pulumi.OutputState }

func (InferenceExperimentShadowModelVariantConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentShadowModelVariantConfig)(nil)).Elem()
}

func (o InferenceExperimentShadowModelVariantConfigArrayOutput) ToInferenceExperimentShadowModelVariantConfigArrayOutput() InferenceExperimentShadowModelVariantConfigArrayOutput {
	return o
}

func (o InferenceExperimentShadowModelVariantConfigArrayOutput) ToInferenceExperimentShadowModelVariantConfigArrayOutputWithContext(ctx context.Context) InferenceExperimentShadowModelVariantConfigArrayOutput {
	return o
}

func (o InferenceExperimentShadowModelVariantConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentShadowModelVariantConfig] {
	return pulumix.Output[[]InferenceExperimentShadowModelVariantConfig]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentShadowModelVariantConfigArrayOutput) Index(i pulumi.IntInput) InferenceExperimentShadowModelVariantConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InferenceExperimentShadowModelVariantConfig {
		return vs[0].([]InferenceExperimentShadowModelVariantConfig)[vs[1].(int)]
	}).(InferenceExperimentShadowModelVariantConfigOutput)
}

// A key-value pair to associate with a resource.
type InferenceExperimentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// InferenceExperimentTagInput is an input type that accepts InferenceExperimentTagArgs and InferenceExperimentTagOutput values.
// You can construct a concrete instance of `InferenceExperimentTagInput` via:
//
//	InferenceExperimentTagArgs{...}
type InferenceExperimentTagInput interface {
	pulumi.Input

	ToInferenceExperimentTagOutput() InferenceExperimentTagOutput
	ToInferenceExperimentTagOutputWithContext(context.Context) InferenceExperimentTagOutput
}

// A key-value pair to associate with a resource.
type InferenceExperimentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InferenceExperimentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentTag)(nil)).Elem()
}

func (i InferenceExperimentTagArgs) ToInferenceExperimentTagOutput() InferenceExperimentTagOutput {
	return i.ToInferenceExperimentTagOutputWithContext(context.Background())
}

func (i InferenceExperimentTagArgs) ToInferenceExperimentTagOutputWithContext(ctx context.Context) InferenceExperimentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentTagOutput)
}

func (i InferenceExperimentTagArgs) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentTag] {
	return pulumix.Output[InferenceExperimentTag]{
		OutputState: i.ToInferenceExperimentTagOutputWithContext(ctx).OutputState,
	}
}

// InferenceExperimentTagArrayInput is an input type that accepts InferenceExperimentTagArray and InferenceExperimentTagArrayOutput values.
// You can construct a concrete instance of `InferenceExperimentTagArrayInput` via:
//
//	InferenceExperimentTagArray{ InferenceExperimentTagArgs{...} }
type InferenceExperimentTagArrayInput interface {
	pulumi.Input

	ToInferenceExperimentTagArrayOutput() InferenceExperimentTagArrayOutput
	ToInferenceExperimentTagArrayOutputWithContext(context.Context) InferenceExperimentTagArrayOutput
}

type InferenceExperimentTagArray []InferenceExperimentTagInput

func (InferenceExperimentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentTag)(nil)).Elem()
}

func (i InferenceExperimentTagArray) ToInferenceExperimentTagArrayOutput() InferenceExperimentTagArrayOutput {
	return i.ToInferenceExperimentTagArrayOutputWithContext(context.Background())
}

func (i InferenceExperimentTagArray) ToInferenceExperimentTagArrayOutputWithContext(ctx context.Context) InferenceExperimentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InferenceExperimentTagArrayOutput)
}

func (i InferenceExperimentTagArray) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentTag] {
	return pulumix.Output[[]InferenceExperimentTag]{
		OutputState: i.ToInferenceExperimentTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type InferenceExperimentTagOutput struct{ *pulumi.OutputState }

func (InferenceExperimentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InferenceExperimentTag)(nil)).Elem()
}

func (o InferenceExperimentTagOutput) ToInferenceExperimentTagOutput() InferenceExperimentTagOutput {
	return o
}

func (o InferenceExperimentTagOutput) ToInferenceExperimentTagOutputWithContext(ctx context.Context) InferenceExperimentTagOutput {
	return o
}

func (o InferenceExperimentTagOutput) ToOutput(ctx context.Context) pulumix.Output[InferenceExperimentTag] {
	return pulumix.Output[InferenceExperimentTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o InferenceExperimentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o InferenceExperimentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InferenceExperimentTag) string { return v.Value }).(pulumi.StringOutput)
}

type InferenceExperimentTagArrayOutput struct{ *pulumi.OutputState }

func (InferenceExperimentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InferenceExperimentTag)(nil)).Elem()
}

func (o InferenceExperimentTagArrayOutput) ToInferenceExperimentTagArrayOutput() InferenceExperimentTagArrayOutput {
	return o
}

func (o InferenceExperimentTagArrayOutput) ToInferenceExperimentTagArrayOutputWithContext(ctx context.Context) InferenceExperimentTagArrayOutput {
	return o
}

func (o InferenceExperimentTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]InferenceExperimentTag] {
	return pulumix.Output[[]InferenceExperimentTag]{
		OutputState: o.OutputState,
	}
}

func (o InferenceExperimentTagArrayOutput) Index(i pulumi.IntInput) InferenceExperimentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InferenceExperimentTag {
		return vs[0].([]InferenceExperimentTag)[vs[1].(int)]
	}).(InferenceExperimentTagOutput)
}

// The batch transform input for a monitoring job.
type ModelBiasJobDefinitionBatchTransformInput struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri string                              `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelBiasJobDefinitionDatasetFormat `pulumi:"datasetFormat"`
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset *string `pulumi:"endTimeOffset"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute *string `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          *string  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute *float64 `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelBiasJobDefinitionBatchTransformInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelBiasJobDefinitionBatchTransformInputS3InputMode `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset *string `pulumi:"startTimeOffset"`
}

// ModelBiasJobDefinitionBatchTransformInputInput is an input type that accepts ModelBiasJobDefinitionBatchTransformInputArgs and ModelBiasJobDefinitionBatchTransformInputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionBatchTransformInputInput` via:
//
//	ModelBiasJobDefinitionBatchTransformInputArgs{...}
type ModelBiasJobDefinitionBatchTransformInputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionBatchTransformInputOutput() ModelBiasJobDefinitionBatchTransformInputOutput
	ToModelBiasJobDefinitionBatchTransformInputOutputWithContext(context.Context) ModelBiasJobDefinitionBatchTransformInputOutput
}

// The batch transform input for a monitoring job.
type ModelBiasJobDefinitionBatchTransformInputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri pulumi.StringInput                       `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelBiasJobDefinitionDatasetFormatInput `pulumi:"datasetFormat"`
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset pulumi.StringPtrInput `pulumi:"endTimeOffset"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute pulumi.StringPtrInput `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          pulumi.StringPtrInput  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute pulumi.Float64PtrInput `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelBiasJobDefinitionBatchTransformInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelBiasJobDefinitionBatchTransformInputS3InputModePtrInput `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset pulumi.StringPtrInput `pulumi:"startTimeOffset"`
}

func (ModelBiasJobDefinitionBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i ModelBiasJobDefinitionBatchTransformInputArgs) ToModelBiasJobDefinitionBatchTransformInputOutput() ModelBiasJobDefinitionBatchTransformInputOutput {
	return i.ToModelBiasJobDefinitionBatchTransformInputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionBatchTransformInputArgs) ToModelBiasJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionBatchTransformInputOutput)
}

func (i ModelBiasJobDefinitionBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelBiasJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelBiasJobDefinitionBatchTransformInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionBatchTransformInputArgs) ToModelBiasJobDefinitionBatchTransformInputPtrOutput() ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionBatchTransformInputArgs) ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionBatchTransformInputOutput).ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionBatchTransformInputPtrInput is an input type that accepts ModelBiasJobDefinitionBatchTransformInputArgs, ModelBiasJobDefinitionBatchTransformInputPtr and ModelBiasJobDefinitionBatchTransformInputPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionBatchTransformInputPtrInput` via:
//
//	        ModelBiasJobDefinitionBatchTransformInputArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionBatchTransformInputPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionBatchTransformInputPtrOutput() ModelBiasJobDefinitionBatchTransformInputPtrOutput
	ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(context.Context) ModelBiasJobDefinitionBatchTransformInputPtrOutput
}

type modelBiasJobDefinitionBatchTransformInputPtrType ModelBiasJobDefinitionBatchTransformInputArgs

func ModelBiasJobDefinitionBatchTransformInputPtr(v *ModelBiasJobDefinitionBatchTransformInputArgs) ModelBiasJobDefinitionBatchTransformInputPtrInput {
	return (*modelBiasJobDefinitionBatchTransformInputPtrType)(v)
}

func (*modelBiasJobDefinitionBatchTransformInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i *modelBiasJobDefinitionBatchTransformInputPtrType) ToModelBiasJobDefinitionBatchTransformInputPtrOutput() ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionBatchTransformInputPtrType) ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionBatchTransformInputPtrOutput)
}

func (i *modelBiasJobDefinitionBatchTransformInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelBiasJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The batch transform input for a monitoring job.
type ModelBiasJobDefinitionBatchTransformInputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ToModelBiasJobDefinitionBatchTransformInputOutput() ModelBiasJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ToModelBiasJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ToModelBiasJobDefinitionBatchTransformInputPtrOutput() ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return o.ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionBatchTransformInput {
		return &v
	}).(ModelBiasJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelBiasJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelBiasJobDefinitionBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) string { return v.DataCapturedDestinationS3Uri }).(pulumi.StringOutput)
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) DatasetFormat() ModelBiasJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) ModelBiasJobDefinitionDatasetFormat {
		return v.DatasetFormat
	}).(ModelBiasJobDefinitionDatasetFormatOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelBiasJobDefinitionBatchTransformInputOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *string { return v.EndTimeOffset }).(pulumi.StringPtrOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelBiasJobDefinitionBatchTransformInputOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *string { return v.FeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelBiasJobDefinitionBatchTransformInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelBiasJobDefinitionBatchTransformInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelBiasJobDefinitionBatchTransformInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionBatchTransformInputOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *float64 { return v.ProbabilityThresholdAttribute }).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelBiasJobDefinitionBatchTransformInputOutput) S3DataDistributionType() ModelBiasJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionBatchTransformInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelBiasJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelBiasJobDefinitionBatchTransformInputOutput) S3InputMode() ModelBiasJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionBatchTransformInputS3InputMode {
		return v.S3InputMode
	}).(ModelBiasJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelBiasJobDefinitionBatchTransformInputOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionBatchTransformInput) *string { return v.StartTimeOffset }).(pulumi.StringPtrOutput)
}

type ModelBiasJobDefinitionBatchTransformInputPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionBatchTransformInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) ToModelBiasJobDefinitionBatchTransformInputPtrOutput() ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) ToModelBiasJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelBiasJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) Elem() ModelBiasJobDefinitionBatchTransformInputOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) ModelBiasJobDefinitionBatchTransformInput {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionBatchTransformInput
		return ret
	}).(ModelBiasJobDefinitionBatchTransformInputOutput)
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) DataCapturedDestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.DataCapturedDestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) DatasetFormat() ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionDatasetFormat {
		if v == nil {
			return nil
		}
		return &v.DatasetFormat
	}).(ModelBiasJobDefinitionDatasetFormatPtrOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeOffset
	}).(pulumi.StringPtrOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.FeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *float64 {
		if v == nil {
			return nil
		}
		return v.ProbabilityThresholdAttribute
	}).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) S3DataDistributionType() ModelBiasJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionBatchTransformInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelBiasJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) S3InputMode() ModelBiasJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *ModelBiasJobDefinitionBatchTransformInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelBiasJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelBiasJobDefinitionBatchTransformInputPtrOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeOffset
	}).(pulumi.StringPtrOutput)
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelBiasJobDefinitionClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// ModelBiasJobDefinitionClusterConfigInput is an input type that accepts ModelBiasJobDefinitionClusterConfigArgs and ModelBiasJobDefinitionClusterConfigOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionClusterConfigInput` via:
//
//	ModelBiasJobDefinitionClusterConfigArgs{...}
type ModelBiasJobDefinitionClusterConfigInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionClusterConfigOutput() ModelBiasJobDefinitionClusterConfigOutput
	ToModelBiasJobDefinitionClusterConfigOutputWithContext(context.Context) ModelBiasJobDefinitionClusterConfigOutput
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelBiasJobDefinitionClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (ModelBiasJobDefinitionClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionClusterConfig)(nil)).Elem()
}

func (i ModelBiasJobDefinitionClusterConfigArgs) ToModelBiasJobDefinitionClusterConfigOutput() ModelBiasJobDefinitionClusterConfigOutput {
	return i.ToModelBiasJobDefinitionClusterConfigOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionClusterConfigArgs) ToModelBiasJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionClusterConfigOutput)
}

func (i ModelBiasJobDefinitionClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionClusterConfig] {
	return pulumix.Output[ModelBiasJobDefinitionClusterConfig]{
		OutputState: i.ToModelBiasJobDefinitionClusterConfigOutputWithContext(ctx).OutputState,
	}
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelBiasJobDefinitionClusterConfigOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionClusterConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionClusterConfigOutput) ToModelBiasJobDefinitionClusterConfigOutput() ModelBiasJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionClusterConfigOutput) ToModelBiasJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionClusterConfig] {
	return pulumix.Output[ModelBiasJobDefinitionClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o ModelBiasJobDefinitionClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the processing job.
func (o ModelBiasJobDefinitionClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o ModelBiasJobDefinitionClusterConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionClusterConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o ModelBiasJobDefinitionClusterConfigOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionClusterConfig) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

// The baseline constraints resource for a monitoring job.
type ModelBiasJobDefinitionConstraintsResource struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// ModelBiasJobDefinitionConstraintsResourceInput is an input type that accepts ModelBiasJobDefinitionConstraintsResourceArgs and ModelBiasJobDefinitionConstraintsResourceOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionConstraintsResourceInput` via:
//
//	ModelBiasJobDefinitionConstraintsResourceArgs{...}
type ModelBiasJobDefinitionConstraintsResourceInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionConstraintsResourceOutput() ModelBiasJobDefinitionConstraintsResourceOutput
	ToModelBiasJobDefinitionConstraintsResourceOutputWithContext(context.Context) ModelBiasJobDefinitionConstraintsResourceOutput
}

// The baseline constraints resource for a monitoring job.
type ModelBiasJobDefinitionConstraintsResourceArgs struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (ModelBiasJobDefinitionConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i ModelBiasJobDefinitionConstraintsResourceArgs) ToModelBiasJobDefinitionConstraintsResourceOutput() ModelBiasJobDefinitionConstraintsResourceOutput {
	return i.ToModelBiasJobDefinitionConstraintsResourceOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionConstraintsResourceArgs) ToModelBiasJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionConstraintsResourceOutput)
}

func (i ModelBiasJobDefinitionConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelBiasJobDefinitionConstraintsResource]{
		OutputState: i.ToModelBiasJobDefinitionConstraintsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionConstraintsResourceArgs) ToModelBiasJobDefinitionConstraintsResourcePtrOutput() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionConstraintsResourceArgs) ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionConstraintsResourceOutput).ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionConstraintsResourcePtrInput is an input type that accepts ModelBiasJobDefinitionConstraintsResourceArgs, ModelBiasJobDefinitionConstraintsResourcePtr and ModelBiasJobDefinitionConstraintsResourcePtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionConstraintsResourcePtrInput` via:
//
//	        ModelBiasJobDefinitionConstraintsResourceArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionConstraintsResourcePtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionConstraintsResourcePtrOutput() ModelBiasJobDefinitionConstraintsResourcePtrOutput
	ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(context.Context) ModelBiasJobDefinitionConstraintsResourcePtrOutput
}

type modelBiasJobDefinitionConstraintsResourcePtrType ModelBiasJobDefinitionConstraintsResourceArgs

func ModelBiasJobDefinitionConstraintsResourcePtr(v *ModelBiasJobDefinitionConstraintsResourceArgs) ModelBiasJobDefinitionConstraintsResourcePtrInput {
	return (*modelBiasJobDefinitionConstraintsResourcePtrType)(v)
}

func (*modelBiasJobDefinitionConstraintsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i *modelBiasJobDefinitionConstraintsResourcePtrType) ToModelBiasJobDefinitionConstraintsResourcePtrOutput() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionConstraintsResourcePtrType) ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionConstraintsResourcePtrOutput)
}

func (i *modelBiasJobDefinitionConstraintsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelBiasJobDefinitionConstraintsResource]{
		OutputState: i.ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline constraints resource for a monitoring job.
type ModelBiasJobDefinitionConstraintsResourceOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelBiasJobDefinitionConstraintsResourceOutput) ToModelBiasJobDefinitionConstraintsResourceOutput() ModelBiasJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelBiasJobDefinitionConstraintsResourceOutput) ToModelBiasJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelBiasJobDefinitionConstraintsResourceOutput) ToModelBiasJobDefinitionConstraintsResourcePtrOutput() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o.ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionConstraintsResourceOutput) ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionConstraintsResource) *ModelBiasJobDefinitionConstraintsResource {
		return &v
	}).(ModelBiasJobDefinitionConstraintsResourcePtrOutput)
}

func (o ModelBiasJobDefinitionConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelBiasJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelBiasJobDefinitionConstraintsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionConstraintsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type ModelBiasJobDefinitionConstraintsResourcePtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionConstraintsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelBiasJobDefinitionConstraintsResourcePtrOutput) ToModelBiasJobDefinitionConstraintsResourcePtrOutput() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelBiasJobDefinitionConstraintsResourcePtrOutput) ToModelBiasJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelBiasJobDefinitionConstraintsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelBiasJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionConstraintsResourcePtrOutput) Elem() ModelBiasJobDefinitionConstraintsResourceOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionConstraintsResource) ModelBiasJobDefinitionConstraintsResource {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionConstraintsResource
		return ret
	}).(ModelBiasJobDefinitionConstraintsResourceOutput)
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelBiasJobDefinitionConstraintsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionConstraintsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// The CSV format
type ModelBiasJobDefinitionCsv struct {
	// A boolean flag indicating if given CSV has header
	Header *bool `pulumi:"header"`
}

// ModelBiasJobDefinitionCsvInput is an input type that accepts ModelBiasJobDefinitionCsvArgs and ModelBiasJobDefinitionCsvOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionCsvInput` via:
//
//	ModelBiasJobDefinitionCsvArgs{...}
type ModelBiasJobDefinitionCsvInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionCsvOutput() ModelBiasJobDefinitionCsvOutput
	ToModelBiasJobDefinitionCsvOutputWithContext(context.Context) ModelBiasJobDefinitionCsvOutput
}

// The CSV format
type ModelBiasJobDefinitionCsvArgs struct {
	// A boolean flag indicating if given CSV has header
	Header pulumi.BoolPtrInput `pulumi:"header"`
}

func (ModelBiasJobDefinitionCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionCsv)(nil)).Elem()
}

func (i ModelBiasJobDefinitionCsvArgs) ToModelBiasJobDefinitionCsvOutput() ModelBiasJobDefinitionCsvOutput {
	return i.ToModelBiasJobDefinitionCsvOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionCsvArgs) ToModelBiasJobDefinitionCsvOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionCsvOutput)
}

func (i ModelBiasJobDefinitionCsvArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionCsv] {
	return pulumix.Output[ModelBiasJobDefinitionCsv]{
		OutputState: i.ToModelBiasJobDefinitionCsvOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionCsvArgs) ToModelBiasJobDefinitionCsvPtrOutput() ModelBiasJobDefinitionCsvPtrOutput {
	return i.ToModelBiasJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionCsvArgs) ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionCsvOutput).ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionCsvPtrInput is an input type that accepts ModelBiasJobDefinitionCsvArgs, ModelBiasJobDefinitionCsvPtr and ModelBiasJobDefinitionCsvPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionCsvPtrInput` via:
//
//	        ModelBiasJobDefinitionCsvArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionCsvPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionCsvPtrOutput() ModelBiasJobDefinitionCsvPtrOutput
	ToModelBiasJobDefinitionCsvPtrOutputWithContext(context.Context) ModelBiasJobDefinitionCsvPtrOutput
}

type modelBiasJobDefinitionCsvPtrType ModelBiasJobDefinitionCsvArgs

func ModelBiasJobDefinitionCsvPtr(v *ModelBiasJobDefinitionCsvArgs) ModelBiasJobDefinitionCsvPtrInput {
	return (*modelBiasJobDefinitionCsvPtrType)(v)
}

func (*modelBiasJobDefinitionCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionCsv)(nil)).Elem()
}

func (i *modelBiasJobDefinitionCsvPtrType) ToModelBiasJobDefinitionCsvPtrOutput() ModelBiasJobDefinitionCsvPtrOutput {
	return i.ToModelBiasJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionCsvPtrType) ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionCsvPtrOutput)
}

func (i *modelBiasJobDefinitionCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionCsv] {
	return pulumix.Output[*ModelBiasJobDefinitionCsv]{
		OutputState: i.ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx).OutputState,
	}
}

// The CSV format
type ModelBiasJobDefinitionCsvOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionCsv)(nil)).Elem()
}

func (o ModelBiasJobDefinitionCsvOutput) ToModelBiasJobDefinitionCsvOutput() ModelBiasJobDefinitionCsvOutput {
	return o
}

func (o ModelBiasJobDefinitionCsvOutput) ToModelBiasJobDefinitionCsvOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvOutput {
	return o
}

func (o ModelBiasJobDefinitionCsvOutput) ToModelBiasJobDefinitionCsvPtrOutput() ModelBiasJobDefinitionCsvPtrOutput {
	return o.ToModelBiasJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionCsvOutput) ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionCsv) *ModelBiasJobDefinitionCsv {
		return &v
	}).(ModelBiasJobDefinitionCsvPtrOutput)
}

func (o ModelBiasJobDefinitionCsvOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionCsv] {
	return pulumix.Output[ModelBiasJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if given CSV has header
func (o ModelBiasJobDefinitionCsvOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionCsv) *bool { return v.Header }).(pulumi.BoolPtrOutput)
}

type ModelBiasJobDefinitionCsvPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionCsv)(nil)).Elem()
}

func (o ModelBiasJobDefinitionCsvPtrOutput) ToModelBiasJobDefinitionCsvPtrOutput() ModelBiasJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionCsvPtrOutput) ToModelBiasJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionCsv] {
	return pulumix.Output[*ModelBiasJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionCsvPtrOutput) Elem() ModelBiasJobDefinitionCsvOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionCsv) ModelBiasJobDefinitionCsv {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionCsv
		return ret
	}).(ModelBiasJobDefinitionCsvOutput)
}

// A boolean flag indicating if given CSV has header
func (o ModelBiasJobDefinitionCsvPtrOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionCsv) *bool {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.BoolPtrOutput)
}

// The dataset format of the data to monitor
type ModelBiasJobDefinitionDatasetFormat struct {
	Csv     *ModelBiasJobDefinitionCsv  `pulumi:"csv"`
	Json    *ModelBiasJobDefinitionJson `pulumi:"json"`
	Parquet *bool                       `pulumi:"parquet"`
}

// ModelBiasJobDefinitionDatasetFormatInput is an input type that accepts ModelBiasJobDefinitionDatasetFormatArgs and ModelBiasJobDefinitionDatasetFormatOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionDatasetFormatInput` via:
//
//	ModelBiasJobDefinitionDatasetFormatArgs{...}
type ModelBiasJobDefinitionDatasetFormatInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionDatasetFormatOutput() ModelBiasJobDefinitionDatasetFormatOutput
	ToModelBiasJobDefinitionDatasetFormatOutputWithContext(context.Context) ModelBiasJobDefinitionDatasetFormatOutput
}

// The dataset format of the data to monitor
type ModelBiasJobDefinitionDatasetFormatArgs struct {
	Csv     ModelBiasJobDefinitionCsvPtrInput  `pulumi:"csv"`
	Json    ModelBiasJobDefinitionJsonPtrInput `pulumi:"json"`
	Parquet pulumi.BoolPtrInput                `pulumi:"parquet"`
}

func (ModelBiasJobDefinitionDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i ModelBiasJobDefinitionDatasetFormatArgs) ToModelBiasJobDefinitionDatasetFormatOutput() ModelBiasJobDefinitionDatasetFormatOutput {
	return i.ToModelBiasJobDefinitionDatasetFormatOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionDatasetFormatArgs) ToModelBiasJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionDatasetFormatOutput)
}

func (i ModelBiasJobDefinitionDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelBiasJobDefinitionDatasetFormat]{
		OutputState: i.ToModelBiasJobDefinitionDatasetFormatOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionDatasetFormatArgs) ToModelBiasJobDefinitionDatasetFormatPtrOutput() ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionDatasetFormatArgs) ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionDatasetFormatOutput).ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionDatasetFormatPtrInput is an input type that accepts ModelBiasJobDefinitionDatasetFormatArgs, ModelBiasJobDefinitionDatasetFormatPtr and ModelBiasJobDefinitionDatasetFormatPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionDatasetFormatPtrInput` via:
//
//	        ModelBiasJobDefinitionDatasetFormatArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionDatasetFormatPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionDatasetFormatPtrOutput() ModelBiasJobDefinitionDatasetFormatPtrOutput
	ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(context.Context) ModelBiasJobDefinitionDatasetFormatPtrOutput
}

type modelBiasJobDefinitionDatasetFormatPtrType ModelBiasJobDefinitionDatasetFormatArgs

func ModelBiasJobDefinitionDatasetFormatPtr(v *ModelBiasJobDefinitionDatasetFormatArgs) ModelBiasJobDefinitionDatasetFormatPtrInput {
	return (*modelBiasJobDefinitionDatasetFormatPtrType)(v)
}

func (*modelBiasJobDefinitionDatasetFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i *modelBiasJobDefinitionDatasetFormatPtrType) ToModelBiasJobDefinitionDatasetFormatPtrOutput() ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionDatasetFormatPtrType) ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionDatasetFormatPtrOutput)
}

func (i *modelBiasJobDefinitionDatasetFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelBiasJobDefinitionDatasetFormat]{
		OutputState: i.ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The dataset format of the data to monitor
type ModelBiasJobDefinitionDatasetFormatOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) ToModelBiasJobDefinitionDatasetFormatOutput() ModelBiasJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) ToModelBiasJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) ToModelBiasJobDefinitionDatasetFormatPtrOutput() ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return o.ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionDatasetFormat) *ModelBiasJobDefinitionDatasetFormat {
		return &v
	}).(ModelBiasJobDefinitionDatasetFormatPtrOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelBiasJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) Csv() ModelBiasJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionDatasetFormat) *ModelBiasJobDefinitionCsv { return v.Csv }).(ModelBiasJobDefinitionCsvPtrOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) Json() ModelBiasJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionDatasetFormat) *ModelBiasJobDefinitionJson { return v.Json }).(ModelBiasJobDefinitionJsonPtrOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionDatasetFormat) *bool { return v.Parquet }).(pulumi.BoolPtrOutput)
}

type ModelBiasJobDefinitionDatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionDatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) ToModelBiasJobDefinitionDatasetFormatPtrOutput() ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) ToModelBiasJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelBiasJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) Elem() ModelBiasJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionDatasetFormat) ModelBiasJobDefinitionDatasetFormat {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionDatasetFormat
		return ret
	}).(ModelBiasJobDefinitionDatasetFormatOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) Csv() ModelBiasJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionDatasetFormat) *ModelBiasJobDefinitionCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(ModelBiasJobDefinitionCsvPtrOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) Json() ModelBiasJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionDatasetFormat) *ModelBiasJobDefinitionJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(ModelBiasJobDefinitionJsonPtrOutput)
}

func (o ModelBiasJobDefinitionDatasetFormatPtrOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionDatasetFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Parquet
	}).(pulumi.BoolPtrOutput)
}

// The endpoint for a monitoring job.
type ModelBiasJobDefinitionEndpointInput struct {
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset *string `pulumi:"endTimeOffset"`
	EndpointName  string  `pulumi:"endpointName"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute *string `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          *string  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute *float64 `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelBiasJobDefinitionEndpointInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelBiasJobDefinitionEndpointInputS3InputMode `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset *string `pulumi:"startTimeOffset"`
}

// ModelBiasJobDefinitionEndpointInputInput is an input type that accepts ModelBiasJobDefinitionEndpointInputArgs and ModelBiasJobDefinitionEndpointInputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionEndpointInputInput` via:
//
//	ModelBiasJobDefinitionEndpointInputArgs{...}
type ModelBiasJobDefinitionEndpointInputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionEndpointInputOutput() ModelBiasJobDefinitionEndpointInputOutput
	ToModelBiasJobDefinitionEndpointInputOutputWithContext(context.Context) ModelBiasJobDefinitionEndpointInputOutput
}

// The endpoint for a monitoring job.
type ModelBiasJobDefinitionEndpointInputArgs struct {
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset pulumi.StringPtrInput `pulumi:"endTimeOffset"`
	EndpointName  pulumi.StringInput    `pulumi:"endpointName"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute pulumi.StringPtrInput `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          pulumi.StringPtrInput  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute pulumi.Float64PtrInput `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelBiasJobDefinitionEndpointInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelBiasJobDefinitionEndpointInputS3InputModePtrInput `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset pulumi.StringPtrInput `pulumi:"startTimeOffset"`
}

func (ModelBiasJobDefinitionEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionEndpointInput)(nil)).Elem()
}

func (i ModelBiasJobDefinitionEndpointInputArgs) ToModelBiasJobDefinitionEndpointInputOutput() ModelBiasJobDefinitionEndpointInputOutput {
	return i.ToModelBiasJobDefinitionEndpointInputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionEndpointInputArgs) ToModelBiasJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionEndpointInputOutput)
}

func (i ModelBiasJobDefinitionEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionEndpointInput] {
	return pulumix.Output[ModelBiasJobDefinitionEndpointInput]{
		OutputState: i.ToModelBiasJobDefinitionEndpointInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionEndpointInputArgs) ToModelBiasJobDefinitionEndpointInputPtrOutput() ModelBiasJobDefinitionEndpointInputPtrOutput {
	return i.ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionEndpointInputArgs) ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionEndpointInputOutput).ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionEndpointInputPtrInput is an input type that accepts ModelBiasJobDefinitionEndpointInputArgs, ModelBiasJobDefinitionEndpointInputPtr and ModelBiasJobDefinitionEndpointInputPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionEndpointInputPtrInput` via:
//
//	        ModelBiasJobDefinitionEndpointInputArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionEndpointInputPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionEndpointInputPtrOutput() ModelBiasJobDefinitionEndpointInputPtrOutput
	ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(context.Context) ModelBiasJobDefinitionEndpointInputPtrOutput
}

type modelBiasJobDefinitionEndpointInputPtrType ModelBiasJobDefinitionEndpointInputArgs

func ModelBiasJobDefinitionEndpointInputPtr(v *ModelBiasJobDefinitionEndpointInputArgs) ModelBiasJobDefinitionEndpointInputPtrInput {
	return (*modelBiasJobDefinitionEndpointInputPtrType)(v)
}

func (*modelBiasJobDefinitionEndpointInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionEndpointInput)(nil)).Elem()
}

func (i *modelBiasJobDefinitionEndpointInputPtrType) ToModelBiasJobDefinitionEndpointInputPtrOutput() ModelBiasJobDefinitionEndpointInputPtrOutput {
	return i.ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionEndpointInputPtrType) ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionEndpointInputPtrOutput)
}

func (i *modelBiasJobDefinitionEndpointInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelBiasJobDefinitionEndpointInput]{
		OutputState: i.ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The endpoint for a monitoring job.
type ModelBiasJobDefinitionEndpointInputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ToModelBiasJobDefinitionEndpointInputOutput() ModelBiasJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ToModelBiasJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ToModelBiasJobDefinitionEndpointInputPtrOutput() ModelBiasJobDefinitionEndpointInputPtrOutput {
	return o.ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionEndpointInput) *ModelBiasJobDefinitionEndpointInput {
		return &v
	}).(ModelBiasJobDefinitionEndpointInputPtrOutput)
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionEndpointInput] {
	return pulumix.Output[ModelBiasJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

// Monitoring end time offset, e.g. PT0H
func (o ModelBiasJobDefinitionEndpointInputOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *string { return v.EndTimeOffset }).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionEndpointInputOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) string { return v.EndpointName }).(pulumi.StringOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelBiasJobDefinitionEndpointInputOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *string { return v.FeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelBiasJobDefinitionEndpointInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelBiasJobDefinitionEndpointInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelBiasJobDefinitionEndpointInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionEndpointInputOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *float64 { return v.ProbabilityThresholdAttribute }).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelBiasJobDefinitionEndpointInputOutput) S3DataDistributionType() ModelBiasJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *ModelBiasJobDefinitionEndpointInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelBiasJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelBiasJobDefinitionEndpointInputOutput) S3InputMode() ModelBiasJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *ModelBiasJobDefinitionEndpointInputS3InputMode {
		return v.S3InputMode
	}).(ModelBiasJobDefinitionEndpointInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelBiasJobDefinitionEndpointInputOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionEndpointInput) *string { return v.StartTimeOffset }).(pulumi.StringPtrOutput)
}

type ModelBiasJobDefinitionEndpointInputPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionEndpointInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) ToModelBiasJobDefinitionEndpointInputPtrOutput() ModelBiasJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) ToModelBiasJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelBiasJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) Elem() ModelBiasJobDefinitionEndpointInputOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) ModelBiasJobDefinitionEndpointInput {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionEndpointInput
		return ret
	}).(ModelBiasJobDefinitionEndpointInputOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeOffset
	}).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.FeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionEndpointInputPtrOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *float64 {
		if v == nil {
			return nil
		}
		return v.ProbabilityThresholdAttribute
	}).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) S3DataDistributionType() ModelBiasJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *ModelBiasJobDefinitionEndpointInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelBiasJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) S3InputMode() ModelBiasJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *ModelBiasJobDefinitionEndpointInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelBiasJobDefinitionEndpointInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelBiasJobDefinitionEndpointInputPtrOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeOffset
	}).(pulumi.StringPtrOutput)
}

// The Json format
type ModelBiasJobDefinitionJson struct {
	// A boolean flag indicating if it is JSON line format
	Line *bool `pulumi:"line"`
}

// ModelBiasJobDefinitionJsonInput is an input type that accepts ModelBiasJobDefinitionJsonArgs and ModelBiasJobDefinitionJsonOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionJsonInput` via:
//
//	ModelBiasJobDefinitionJsonArgs{...}
type ModelBiasJobDefinitionJsonInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionJsonOutput() ModelBiasJobDefinitionJsonOutput
	ToModelBiasJobDefinitionJsonOutputWithContext(context.Context) ModelBiasJobDefinitionJsonOutput
}

// The Json format
type ModelBiasJobDefinitionJsonArgs struct {
	// A boolean flag indicating if it is JSON line format
	Line pulumi.BoolPtrInput `pulumi:"line"`
}

func (ModelBiasJobDefinitionJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionJson)(nil)).Elem()
}

func (i ModelBiasJobDefinitionJsonArgs) ToModelBiasJobDefinitionJsonOutput() ModelBiasJobDefinitionJsonOutput {
	return i.ToModelBiasJobDefinitionJsonOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionJsonArgs) ToModelBiasJobDefinitionJsonOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionJsonOutput)
}

func (i ModelBiasJobDefinitionJsonArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionJson] {
	return pulumix.Output[ModelBiasJobDefinitionJson]{
		OutputState: i.ToModelBiasJobDefinitionJsonOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionJsonArgs) ToModelBiasJobDefinitionJsonPtrOutput() ModelBiasJobDefinitionJsonPtrOutput {
	return i.ToModelBiasJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionJsonArgs) ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionJsonOutput).ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionJsonPtrInput is an input type that accepts ModelBiasJobDefinitionJsonArgs, ModelBiasJobDefinitionJsonPtr and ModelBiasJobDefinitionJsonPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionJsonPtrInput` via:
//
//	        ModelBiasJobDefinitionJsonArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionJsonPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionJsonPtrOutput() ModelBiasJobDefinitionJsonPtrOutput
	ToModelBiasJobDefinitionJsonPtrOutputWithContext(context.Context) ModelBiasJobDefinitionJsonPtrOutput
}

type modelBiasJobDefinitionJsonPtrType ModelBiasJobDefinitionJsonArgs

func ModelBiasJobDefinitionJsonPtr(v *ModelBiasJobDefinitionJsonArgs) ModelBiasJobDefinitionJsonPtrInput {
	return (*modelBiasJobDefinitionJsonPtrType)(v)
}

func (*modelBiasJobDefinitionJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionJson)(nil)).Elem()
}

func (i *modelBiasJobDefinitionJsonPtrType) ToModelBiasJobDefinitionJsonPtrOutput() ModelBiasJobDefinitionJsonPtrOutput {
	return i.ToModelBiasJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionJsonPtrType) ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionJsonPtrOutput)
}

func (i *modelBiasJobDefinitionJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionJson] {
	return pulumix.Output[*ModelBiasJobDefinitionJson]{
		OutputState: i.ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx).OutputState,
	}
}

// The Json format
type ModelBiasJobDefinitionJsonOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionJson)(nil)).Elem()
}

func (o ModelBiasJobDefinitionJsonOutput) ToModelBiasJobDefinitionJsonOutput() ModelBiasJobDefinitionJsonOutput {
	return o
}

func (o ModelBiasJobDefinitionJsonOutput) ToModelBiasJobDefinitionJsonOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonOutput {
	return o
}

func (o ModelBiasJobDefinitionJsonOutput) ToModelBiasJobDefinitionJsonPtrOutput() ModelBiasJobDefinitionJsonPtrOutput {
	return o.ToModelBiasJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionJsonOutput) ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionJson) *ModelBiasJobDefinitionJson {
		return &v
	}).(ModelBiasJobDefinitionJsonPtrOutput)
}

func (o ModelBiasJobDefinitionJsonOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionJson] {
	return pulumix.Output[ModelBiasJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if it is JSON line format
func (o ModelBiasJobDefinitionJsonOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionJson) *bool { return v.Line }).(pulumi.BoolPtrOutput)
}

type ModelBiasJobDefinitionJsonPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionJson)(nil)).Elem()
}

func (o ModelBiasJobDefinitionJsonPtrOutput) ToModelBiasJobDefinitionJsonPtrOutput() ModelBiasJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionJsonPtrOutput) ToModelBiasJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionJson] {
	return pulumix.Output[*ModelBiasJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionJsonPtrOutput) Elem() ModelBiasJobDefinitionJsonOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionJson) ModelBiasJobDefinitionJson {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionJson
		return ret
	}).(ModelBiasJobDefinitionJsonOutput)
}

// A boolean flag indicating if it is JSON line format
func (o ModelBiasJobDefinitionJsonPtrOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionJson) *bool {
		if v == nil {
			return nil
		}
		return v.Line
	}).(pulumi.BoolPtrOutput)
}

// Container image configuration object for the monitoring job.
type ModelBiasJobDefinitionModelBiasAppSpecification struct {
	// The S3 URI to an analysis configuration file
	ConfigUri string `pulumi:"configUri"`
	// Sets the environment variables in the Docker container
	Environment interface{} `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri string `pulumi:"imageUri"`
}

// ModelBiasJobDefinitionModelBiasAppSpecificationInput is an input type that accepts ModelBiasJobDefinitionModelBiasAppSpecificationArgs and ModelBiasJobDefinitionModelBiasAppSpecificationOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionModelBiasAppSpecificationInput` via:
//
//	ModelBiasJobDefinitionModelBiasAppSpecificationArgs{...}
type ModelBiasJobDefinitionModelBiasAppSpecificationInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionModelBiasAppSpecificationOutput() ModelBiasJobDefinitionModelBiasAppSpecificationOutput
	ToModelBiasJobDefinitionModelBiasAppSpecificationOutputWithContext(context.Context) ModelBiasJobDefinitionModelBiasAppSpecificationOutput
}

// Container image configuration object for the monitoring job.
type ModelBiasJobDefinitionModelBiasAppSpecificationArgs struct {
	// The S3 URI to an analysis configuration file
	ConfigUri pulumi.StringInput `pulumi:"configUri"`
	// Sets the environment variables in the Docker container
	Environment pulumi.Input `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
}

func (ModelBiasJobDefinitionModelBiasAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasAppSpecification)(nil)).Elem()
}

func (i ModelBiasJobDefinitionModelBiasAppSpecificationArgs) ToModelBiasJobDefinitionModelBiasAppSpecificationOutput() ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
	return i.ToModelBiasJobDefinitionModelBiasAppSpecificationOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionModelBiasAppSpecificationArgs) ToModelBiasJobDefinitionModelBiasAppSpecificationOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionModelBiasAppSpecificationOutput)
}

func (i ModelBiasJobDefinitionModelBiasAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasAppSpecification] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasAppSpecification]{
		OutputState: i.ToModelBiasJobDefinitionModelBiasAppSpecificationOutputWithContext(ctx).OutputState,
	}
}

// Container image configuration object for the monitoring job.
type ModelBiasJobDefinitionModelBiasAppSpecificationOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasAppSpecification)(nil)).Elem()
}

func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ToModelBiasJobDefinitionModelBiasAppSpecificationOutput() ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ToModelBiasJobDefinitionModelBiasAppSpecificationOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasAppSpecificationOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasAppSpecification] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasAppSpecification]{
		OutputState: o.OutputState,
	}
}

// The S3 URI to an analysis configuration file
func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ConfigUri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasAppSpecification) string { return v.ConfigUri }).(pulumi.StringOutput)
}

// Sets the environment variables in the Docker container
func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasAppSpecification) interface{} { return v.Environment }).(pulumi.AnyOutput)
}

// The container image to be run by the monitoring job.
func (o ModelBiasJobDefinitionModelBiasAppSpecificationOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasAppSpecification) string { return v.ImageUri }).(pulumi.StringOutput)
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelBiasJobDefinitionModelBiasBaselineConfig struct {
	BaseliningJobName   *string                                    `pulumi:"baseliningJobName"`
	ConstraintsResource *ModelBiasJobDefinitionConstraintsResource `pulumi:"constraintsResource"`
}

// ModelBiasJobDefinitionModelBiasBaselineConfigInput is an input type that accepts ModelBiasJobDefinitionModelBiasBaselineConfigArgs and ModelBiasJobDefinitionModelBiasBaselineConfigOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionModelBiasBaselineConfigInput` via:
//
//	ModelBiasJobDefinitionModelBiasBaselineConfigArgs{...}
type ModelBiasJobDefinitionModelBiasBaselineConfigInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionModelBiasBaselineConfigOutput() ModelBiasJobDefinitionModelBiasBaselineConfigOutput
	ToModelBiasJobDefinitionModelBiasBaselineConfigOutputWithContext(context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigOutput
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelBiasJobDefinitionModelBiasBaselineConfigArgs struct {
	BaseliningJobName   pulumi.StringPtrInput                             `pulumi:"baseliningJobName"`
	ConstraintsResource ModelBiasJobDefinitionConstraintsResourcePtrInput `pulumi:"constraintsResource"`
}

func (ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasBaselineConfig)(nil)).Elem()
}

func (i ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ToModelBiasJobDefinitionModelBiasBaselineConfigOutput() ModelBiasJobDefinitionModelBiasBaselineConfigOutput {
	return i.ToModelBiasJobDefinitionModelBiasBaselineConfigOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ToModelBiasJobDefinitionModelBiasBaselineConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionModelBiasBaselineConfigOutput)
}

func (i ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasBaselineConfig] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasBaselineConfig]{
		OutputState: i.ToModelBiasJobDefinitionModelBiasBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return i.ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionModelBiasBaselineConfigOutput).ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput is an input type that accepts ModelBiasJobDefinitionModelBiasBaselineConfigArgs, ModelBiasJobDefinitionModelBiasBaselineConfigPtr and ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput` via:
//
//	        ModelBiasJobDefinitionModelBiasBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput
	ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput
}

type modelBiasJobDefinitionModelBiasBaselineConfigPtrType ModelBiasJobDefinitionModelBiasBaselineConfigArgs

func ModelBiasJobDefinitionModelBiasBaselineConfigPtr(v *ModelBiasJobDefinitionModelBiasBaselineConfigArgs) ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput {
	return (*modelBiasJobDefinitionModelBiasBaselineConfigPtrType)(v)
}

func (*modelBiasJobDefinitionModelBiasBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionModelBiasBaselineConfig)(nil)).Elem()
}

func (i *modelBiasJobDefinitionModelBiasBaselineConfigPtrType) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return i.ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionModelBiasBaselineConfigPtrType) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput)
}

func (i *modelBiasJobDefinitionModelBiasBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionModelBiasBaselineConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionModelBiasBaselineConfig]{
		OutputState: i.ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelBiasJobDefinitionModelBiasBaselineConfigOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasBaselineConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigOutput() ModelBiasJobDefinitionModelBiasBaselineConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return o.ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionModelBiasBaselineConfig) *ModelBiasJobDefinitionModelBiasBaselineConfig {
		return &v
	}).(ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput)
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasBaselineConfig] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasBaselineConfig) *string { return v.BaseliningJobName }).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigOutput) ConstraintsResource() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasBaselineConfig) *ModelBiasJobDefinitionConstraintsResource {
		return v.ConstraintsResource
	}).(ModelBiasJobDefinitionConstraintsResourcePtrOutput)
}

type ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionModelBiasBaselineConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput() ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) ToModelBiasJobDefinitionModelBiasBaselineConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionModelBiasBaselineConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionModelBiasBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) Elem() ModelBiasJobDefinitionModelBiasBaselineConfigOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionModelBiasBaselineConfig) ModelBiasJobDefinitionModelBiasBaselineConfig {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionModelBiasBaselineConfig
		return ret
	}).(ModelBiasJobDefinitionModelBiasBaselineConfigOutput)
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionModelBiasBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaseliningJobName
	}).(pulumi.StringPtrOutput)
}

func (o ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput) ConstraintsResource() ModelBiasJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionModelBiasBaselineConfig) *ModelBiasJobDefinitionConstraintsResource {
		if v == nil {
			return nil
		}
		return v.ConstraintsResource
	}).(ModelBiasJobDefinitionConstraintsResourcePtrOutput)
}

// The inputs for a monitoring job.
type ModelBiasJobDefinitionModelBiasJobInput struct {
	BatchTransformInput *ModelBiasJobDefinitionBatchTransformInput         `pulumi:"batchTransformInput"`
	EndpointInput       *ModelBiasJobDefinitionEndpointInput               `pulumi:"endpointInput"`
	GroundTruthS3Input  ModelBiasJobDefinitionMonitoringGroundTruthS3Input `pulumi:"groundTruthS3Input"`
}

// ModelBiasJobDefinitionModelBiasJobInputInput is an input type that accepts ModelBiasJobDefinitionModelBiasJobInputArgs and ModelBiasJobDefinitionModelBiasJobInputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionModelBiasJobInputInput` via:
//
//	ModelBiasJobDefinitionModelBiasJobInputArgs{...}
type ModelBiasJobDefinitionModelBiasJobInputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionModelBiasJobInputOutput() ModelBiasJobDefinitionModelBiasJobInputOutput
	ToModelBiasJobDefinitionModelBiasJobInputOutputWithContext(context.Context) ModelBiasJobDefinitionModelBiasJobInputOutput
}

// The inputs for a monitoring job.
type ModelBiasJobDefinitionModelBiasJobInputArgs struct {
	BatchTransformInput ModelBiasJobDefinitionBatchTransformInputPtrInput       `pulumi:"batchTransformInput"`
	EndpointInput       ModelBiasJobDefinitionEndpointInputPtrInput             `pulumi:"endpointInput"`
	GroundTruthS3Input  ModelBiasJobDefinitionMonitoringGroundTruthS3InputInput `pulumi:"groundTruthS3Input"`
}

func (ModelBiasJobDefinitionModelBiasJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasJobInput)(nil)).Elem()
}

func (i ModelBiasJobDefinitionModelBiasJobInputArgs) ToModelBiasJobDefinitionModelBiasJobInputOutput() ModelBiasJobDefinitionModelBiasJobInputOutput {
	return i.ToModelBiasJobDefinitionModelBiasJobInputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionModelBiasJobInputArgs) ToModelBiasJobDefinitionModelBiasJobInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionModelBiasJobInputOutput)
}

func (i ModelBiasJobDefinitionModelBiasJobInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasJobInput] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasJobInput]{
		OutputState: i.ToModelBiasJobDefinitionModelBiasJobInputOutputWithContext(ctx).OutputState,
	}
}

// The inputs for a monitoring job.
type ModelBiasJobDefinitionModelBiasJobInputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionModelBiasJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionModelBiasJobInput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) ToModelBiasJobDefinitionModelBiasJobInputOutput() ModelBiasJobDefinitionModelBiasJobInputOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) ToModelBiasJobDefinitionModelBiasJobInputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionModelBiasJobInputOutput {
	return o
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionModelBiasJobInput] {
	return pulumix.Output[ModelBiasJobDefinitionModelBiasJobInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) BatchTransformInput() ModelBiasJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasJobInput) *ModelBiasJobDefinitionBatchTransformInput {
		return v.BatchTransformInput
	}).(ModelBiasJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) EndpointInput() ModelBiasJobDefinitionEndpointInputPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasJobInput) *ModelBiasJobDefinitionEndpointInput {
		return v.EndpointInput
	}).(ModelBiasJobDefinitionEndpointInputPtrOutput)
}

func (o ModelBiasJobDefinitionModelBiasJobInputOutput) GroundTruthS3Input() ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionModelBiasJobInput) ModelBiasJobDefinitionMonitoringGroundTruthS3Input {
		return v.GroundTruthS3Input
	}).(ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput)
}

// Ground truth input provided in S3
type ModelBiasJobDefinitionMonitoringGroundTruthS3Input struct {
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelBiasJobDefinitionMonitoringGroundTruthS3InputInput is an input type that accepts ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs and ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionMonitoringGroundTruthS3InputInput` via:
//
//	ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs{...}
type ModelBiasJobDefinitionMonitoringGroundTruthS3InputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput() ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput
	ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(context.Context) ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput
}

// Ground truth input provided in S3
type ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringGroundTruthS3Input)(nil)).Elem()
}

func (i ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs) ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput() ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput {
	return i.ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs) ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput)
}

func (i ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringGroundTruthS3Input] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringGroundTruthS3Input]{
		OutputState: i.ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx).OutputState,
	}
}

// Ground truth input provided in S3
type ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringGroundTruthS3Input)(nil)).Elem()
}

func (o ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput) ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput() ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput) ToModelBiasJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringGroundTruthS3Input] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringGroundTruthS3Input]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionMonitoringGroundTruthS3Input) string { return v.S3Uri }).(pulumi.StringOutput)
}

// The output object for a monitoring job.
type ModelBiasJobDefinitionMonitoringOutput struct {
	S3Output ModelBiasJobDefinitionS3Output `pulumi:"s3Output"`
}

// ModelBiasJobDefinitionMonitoringOutputInput is an input type that accepts ModelBiasJobDefinitionMonitoringOutputArgs and ModelBiasJobDefinitionMonitoringOutputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionMonitoringOutputInput` via:
//
//	ModelBiasJobDefinitionMonitoringOutputArgs{...}
type ModelBiasJobDefinitionMonitoringOutputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionMonitoringOutputOutput() ModelBiasJobDefinitionMonitoringOutputOutput
	ToModelBiasJobDefinitionMonitoringOutputOutputWithContext(context.Context) ModelBiasJobDefinitionMonitoringOutputOutput
}

// The output object for a monitoring job.
type ModelBiasJobDefinitionMonitoringOutputArgs struct {
	S3Output ModelBiasJobDefinitionS3OutputInput `pulumi:"s3Output"`
}

func (ModelBiasJobDefinitionMonitoringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelBiasJobDefinitionMonitoringOutputArgs) ToModelBiasJobDefinitionMonitoringOutputOutput() ModelBiasJobDefinitionMonitoringOutputOutput {
	return i.ToModelBiasJobDefinitionMonitoringOutputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionMonitoringOutputArgs) ToModelBiasJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionMonitoringOutputOutput)
}

func (i ModelBiasJobDefinitionMonitoringOutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelBiasJobDefinitionMonitoringOutputOutputWithContext(ctx).OutputState,
	}
}

// ModelBiasJobDefinitionMonitoringOutputArrayInput is an input type that accepts ModelBiasJobDefinitionMonitoringOutputArray and ModelBiasJobDefinitionMonitoringOutputArrayOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionMonitoringOutputArrayInput` via:
//
//	ModelBiasJobDefinitionMonitoringOutputArray{ ModelBiasJobDefinitionMonitoringOutputArgs{...} }
type ModelBiasJobDefinitionMonitoringOutputArrayInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionMonitoringOutputArrayOutput() ModelBiasJobDefinitionMonitoringOutputArrayOutput
	ToModelBiasJobDefinitionMonitoringOutputArrayOutputWithContext(context.Context) ModelBiasJobDefinitionMonitoringOutputArrayOutput
}

type ModelBiasJobDefinitionMonitoringOutputArray []ModelBiasJobDefinitionMonitoringOutputInput

func (ModelBiasJobDefinitionMonitoringOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelBiasJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelBiasJobDefinitionMonitoringOutputArray) ToModelBiasJobDefinitionMonitoringOutputArrayOutput() ModelBiasJobDefinitionMonitoringOutputArrayOutput {
	return i.ToModelBiasJobDefinitionMonitoringOutputArrayOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionMonitoringOutputArray) ToModelBiasJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionMonitoringOutputArrayOutput)
}

func (i ModelBiasJobDefinitionMonitoringOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelBiasJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelBiasJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelBiasJobDefinitionMonitoringOutputArrayOutputWithContext(ctx).OutputState,
	}
}

// The output object for a monitoring job.
type ModelBiasJobDefinitionMonitoringOutputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionMonitoringOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionMonitoringOutputOutput) ToModelBiasJobDefinitionMonitoringOutputOutput() ModelBiasJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputOutput) ToModelBiasJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionMonitoringOutputOutput) S3Output() ModelBiasJobDefinitionS3OutputOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionMonitoringOutput) ModelBiasJobDefinitionS3Output { return v.S3Output }).(ModelBiasJobDefinitionS3OutputOutput)
}

type ModelBiasJobDefinitionMonitoringOutputArrayOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionMonitoringOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelBiasJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelBiasJobDefinitionMonitoringOutputArrayOutput) ToModelBiasJobDefinitionMonitoringOutputArrayOutput() ModelBiasJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputArrayOutput) ToModelBiasJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelBiasJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelBiasJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionMonitoringOutputArrayOutput) Index(i pulumi.IntInput) ModelBiasJobDefinitionMonitoringOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelBiasJobDefinitionMonitoringOutput {
		return vs[0].([]ModelBiasJobDefinitionMonitoringOutput)[vs[1].(int)]
	}).(ModelBiasJobDefinitionMonitoringOutputOutput)
}

// The output configuration for monitoring jobs.
type ModelBiasJobDefinitionMonitoringOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs []ModelBiasJobDefinitionMonitoringOutput `pulumi:"monitoringOutputs"`
}

// ModelBiasJobDefinitionMonitoringOutputConfigInput is an input type that accepts ModelBiasJobDefinitionMonitoringOutputConfigArgs and ModelBiasJobDefinitionMonitoringOutputConfigOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionMonitoringOutputConfigInput` via:
//
//	ModelBiasJobDefinitionMonitoringOutputConfigArgs{...}
type ModelBiasJobDefinitionMonitoringOutputConfigInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionMonitoringOutputConfigOutput() ModelBiasJobDefinitionMonitoringOutputConfigOutput
	ToModelBiasJobDefinitionMonitoringOutputConfigOutputWithContext(context.Context) ModelBiasJobDefinitionMonitoringOutputConfigOutput
}

// The output configuration for monitoring jobs.
type ModelBiasJobDefinitionMonitoringOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs ModelBiasJobDefinitionMonitoringOutputArrayInput `pulumi:"monitoringOutputs"`
}

func (ModelBiasJobDefinitionMonitoringOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (i ModelBiasJobDefinitionMonitoringOutputConfigArgs) ToModelBiasJobDefinitionMonitoringOutputConfigOutput() ModelBiasJobDefinitionMonitoringOutputConfigOutput {
	return i.ToModelBiasJobDefinitionMonitoringOutputConfigOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionMonitoringOutputConfigArgs) ToModelBiasJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionMonitoringOutputConfigOutput)
}

func (i ModelBiasJobDefinitionMonitoringOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringOutputConfig]{
		OutputState: i.ToModelBiasJobDefinitionMonitoringOutputConfigOutputWithContext(ctx).OutputState,
	}
}

// The output configuration for monitoring jobs.
type ModelBiasJobDefinitionMonitoringOutputConfigOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionMonitoringOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionMonitoringOutputConfigOutput) ToModelBiasJobDefinitionMonitoringOutputConfigOutput() ModelBiasJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputConfigOutput) ToModelBiasJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o ModelBiasJobDefinitionMonitoringOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionMonitoringOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o ModelBiasJobDefinitionMonitoringOutputConfigOutput) MonitoringOutputs() ModelBiasJobDefinitionMonitoringOutputArrayOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionMonitoringOutputConfig) []ModelBiasJobDefinitionMonitoringOutput {
		return v.MonitoringOutputs
	}).(ModelBiasJobDefinitionMonitoringOutputArrayOutput)
}

// Identifies the resources to deploy for a monitoring job.
type ModelBiasJobDefinitionMonitoringResources struct {
	ClusterConfig ModelBiasJobDefinitionClusterConfig `pulumi:"clusterConfig"`
}

// ModelBiasJobDefinitionMonitoringResourcesInput is an input type that accepts ModelBiasJobDefinitionMonitoringResourcesArgs and ModelBiasJobDefinitionMonitoringResourcesOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionMonitoringResourcesInput` via:
//
//	ModelBiasJobDefinitionMonitoringResourcesArgs{...}
type ModelBiasJobDefinitionMonitoringResourcesInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionMonitoringResourcesOutput() ModelBiasJobDefinitionMonitoringResourcesOutput
	ToModelBiasJobDefinitionMonitoringResourcesOutputWithContext(context.Context) ModelBiasJobDefinitionMonitoringResourcesOutput
}

// Identifies the resources to deploy for a monitoring job.
type ModelBiasJobDefinitionMonitoringResourcesArgs struct {
	ClusterConfig ModelBiasJobDefinitionClusterConfigInput `pulumi:"clusterConfig"`
}

func (ModelBiasJobDefinitionMonitoringResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringResources)(nil)).Elem()
}

func (i ModelBiasJobDefinitionMonitoringResourcesArgs) ToModelBiasJobDefinitionMonitoringResourcesOutput() ModelBiasJobDefinitionMonitoringResourcesOutput {
	return i.ToModelBiasJobDefinitionMonitoringResourcesOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionMonitoringResourcesArgs) ToModelBiasJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionMonitoringResourcesOutput)
}

func (i ModelBiasJobDefinitionMonitoringResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringResources]{
		OutputState: i.ToModelBiasJobDefinitionMonitoringResourcesOutputWithContext(ctx).OutputState,
	}
}

// Identifies the resources to deploy for a monitoring job.
type ModelBiasJobDefinitionMonitoringResourcesOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionMonitoringResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionMonitoringResources)(nil)).Elem()
}

func (o ModelBiasJobDefinitionMonitoringResourcesOutput) ToModelBiasJobDefinitionMonitoringResourcesOutput() ModelBiasJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringResourcesOutput) ToModelBiasJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelBiasJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelBiasJobDefinitionMonitoringResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelBiasJobDefinitionMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionMonitoringResourcesOutput) ClusterConfig() ModelBiasJobDefinitionClusterConfigOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionMonitoringResources) ModelBiasJobDefinitionClusterConfig {
		return v.ClusterConfig
	}).(ModelBiasJobDefinitionClusterConfigOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelBiasJobDefinitionNetworkConfig struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation *bool                            `pulumi:"enableNetworkIsolation"`
	VpcConfig              *ModelBiasJobDefinitionVpcConfig `pulumi:"vpcConfig"`
}

// ModelBiasJobDefinitionNetworkConfigInput is an input type that accepts ModelBiasJobDefinitionNetworkConfigArgs and ModelBiasJobDefinitionNetworkConfigOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionNetworkConfigInput` via:
//
//	ModelBiasJobDefinitionNetworkConfigArgs{...}
type ModelBiasJobDefinitionNetworkConfigInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionNetworkConfigOutput() ModelBiasJobDefinitionNetworkConfigOutput
	ToModelBiasJobDefinitionNetworkConfigOutputWithContext(context.Context) ModelBiasJobDefinitionNetworkConfigOutput
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelBiasJobDefinitionNetworkConfigArgs struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumi.BoolPtrInput `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation pulumi.BoolPtrInput                     `pulumi:"enableNetworkIsolation"`
	VpcConfig              ModelBiasJobDefinitionVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (ModelBiasJobDefinitionNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i ModelBiasJobDefinitionNetworkConfigArgs) ToModelBiasJobDefinitionNetworkConfigOutput() ModelBiasJobDefinitionNetworkConfigOutput {
	return i.ToModelBiasJobDefinitionNetworkConfigOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionNetworkConfigArgs) ToModelBiasJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionNetworkConfigOutput)
}

func (i ModelBiasJobDefinitionNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelBiasJobDefinitionNetworkConfig]{
		OutputState: i.ToModelBiasJobDefinitionNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionNetworkConfigArgs) ToModelBiasJobDefinitionNetworkConfigPtrOutput() ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionNetworkConfigArgs) ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionNetworkConfigOutput).ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionNetworkConfigPtrInput is an input type that accepts ModelBiasJobDefinitionNetworkConfigArgs, ModelBiasJobDefinitionNetworkConfigPtr and ModelBiasJobDefinitionNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionNetworkConfigPtrInput` via:
//
//	        ModelBiasJobDefinitionNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionNetworkConfigPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionNetworkConfigPtrOutput() ModelBiasJobDefinitionNetworkConfigPtrOutput
	ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(context.Context) ModelBiasJobDefinitionNetworkConfigPtrOutput
}

type modelBiasJobDefinitionNetworkConfigPtrType ModelBiasJobDefinitionNetworkConfigArgs

func ModelBiasJobDefinitionNetworkConfigPtr(v *ModelBiasJobDefinitionNetworkConfigArgs) ModelBiasJobDefinitionNetworkConfigPtrInput {
	return (*modelBiasJobDefinitionNetworkConfigPtrType)(v)
}

func (*modelBiasJobDefinitionNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i *modelBiasJobDefinitionNetworkConfigPtrType) ToModelBiasJobDefinitionNetworkConfigPtrOutput() ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionNetworkConfigPtrType) ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionNetworkConfigPtrOutput)
}

func (i *modelBiasJobDefinitionNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionNetworkConfig]{
		OutputState: i.ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelBiasJobDefinitionNetworkConfigOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) ToModelBiasJobDefinitionNetworkConfigOutput() ModelBiasJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) ToModelBiasJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) ToModelBiasJobDefinitionNetworkConfigPtrOutput() ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return o.ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionNetworkConfig) *ModelBiasJobDefinitionNetworkConfig {
		return &v
	}).(ModelBiasJobDefinitionNetworkConfigPtrOutput)
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelBiasJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelBiasJobDefinitionNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionNetworkConfig) *bool { return v.EnableInterContainerTrafficEncryption }).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelBiasJobDefinitionNetworkConfigOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionNetworkConfig) *bool { return v.EnableNetworkIsolation }).(pulumi.BoolPtrOutput)
}

func (o ModelBiasJobDefinitionNetworkConfigOutput) VpcConfig() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionNetworkConfig) *ModelBiasJobDefinitionVpcConfig { return v.VpcConfig }).(ModelBiasJobDefinitionVpcConfigPtrOutput)
}

type ModelBiasJobDefinitionNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) ToModelBiasJobDefinitionNetworkConfigPtrOutput() ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) ToModelBiasJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) Elem() ModelBiasJobDefinitionNetworkConfigOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionNetworkConfig) ModelBiasJobDefinitionNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionNetworkConfig
		return ret
	}).(ModelBiasJobDefinitionNetworkConfigOutput)
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkIsolation
	}).(pulumi.BoolPtrOutput)
}

func (o ModelBiasJobDefinitionNetworkConfigPtrOutput) VpcConfig() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionNetworkConfig) *ModelBiasJobDefinitionVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(ModelBiasJobDefinitionVpcConfigPtrOutput)
}

// Information about where and how to store the results of a monitoring job.
type ModelBiasJobDefinitionS3Output struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode *ModelBiasJobDefinitionS3OutputS3UploadMode `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelBiasJobDefinitionS3OutputInput is an input type that accepts ModelBiasJobDefinitionS3OutputArgs and ModelBiasJobDefinitionS3OutputOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionS3OutputInput` via:
//
//	ModelBiasJobDefinitionS3OutputArgs{...}
type ModelBiasJobDefinitionS3OutputInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionS3OutputOutput() ModelBiasJobDefinitionS3OutputOutput
	ToModelBiasJobDefinitionS3OutputOutputWithContext(context.Context) ModelBiasJobDefinitionS3OutputOutput
}

// Information about where and how to store the results of a monitoring job.
type ModelBiasJobDefinitionS3OutputArgs struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode ModelBiasJobDefinitionS3OutputS3UploadModePtrInput `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelBiasJobDefinitionS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionS3Output)(nil)).Elem()
}

func (i ModelBiasJobDefinitionS3OutputArgs) ToModelBiasJobDefinitionS3OutputOutput() ModelBiasJobDefinitionS3OutputOutput {
	return i.ToModelBiasJobDefinitionS3OutputOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionS3OutputArgs) ToModelBiasJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionS3OutputOutput)
}

func (i ModelBiasJobDefinitionS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionS3Output] {
	return pulumix.Output[ModelBiasJobDefinitionS3Output]{
		OutputState: i.ToModelBiasJobDefinitionS3OutputOutputWithContext(ctx).OutputState,
	}
}

// Information about where and how to store the results of a monitoring job.
type ModelBiasJobDefinitionS3OutputOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionS3Output)(nil)).Elem()
}

func (o ModelBiasJobDefinitionS3OutputOutput) ToModelBiasJobDefinitionS3OutputOutput() ModelBiasJobDefinitionS3OutputOutput {
	return o
}

func (o ModelBiasJobDefinitionS3OutputOutput) ToModelBiasJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelBiasJobDefinitionS3OutputOutput {
	return o
}

func (o ModelBiasJobDefinitionS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionS3Output] {
	return pulumix.Output[ModelBiasJobDefinitionS3Output]{
		OutputState: o.OutputState,
	}
}

// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
func (o ModelBiasJobDefinitionS3OutputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionS3Output) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether to upload the results of the monitoring job continuously or after the job completes.
func (o ModelBiasJobDefinitionS3OutputOutput) S3UploadMode() ModelBiasJobDefinitionS3OutputS3UploadModePtrOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionS3Output) *ModelBiasJobDefinitionS3OutputS3UploadMode {
		return v.S3UploadMode
	}).(ModelBiasJobDefinitionS3OutputS3UploadModePtrOutput)
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o ModelBiasJobDefinitionS3OutputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionS3Output) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelBiasJobDefinitionStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds int `pulumi:"maxRuntimeInSeconds"`
}

// ModelBiasJobDefinitionStoppingConditionInput is an input type that accepts ModelBiasJobDefinitionStoppingConditionArgs and ModelBiasJobDefinitionStoppingConditionOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionStoppingConditionInput` via:
//
//	ModelBiasJobDefinitionStoppingConditionArgs{...}
type ModelBiasJobDefinitionStoppingConditionInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionStoppingConditionOutput() ModelBiasJobDefinitionStoppingConditionOutput
	ToModelBiasJobDefinitionStoppingConditionOutputWithContext(context.Context) ModelBiasJobDefinitionStoppingConditionOutput
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelBiasJobDefinitionStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumi.IntInput `pulumi:"maxRuntimeInSeconds"`
}

func (ModelBiasJobDefinitionStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i ModelBiasJobDefinitionStoppingConditionArgs) ToModelBiasJobDefinitionStoppingConditionOutput() ModelBiasJobDefinitionStoppingConditionOutput {
	return i.ToModelBiasJobDefinitionStoppingConditionOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionStoppingConditionArgs) ToModelBiasJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionStoppingConditionOutput)
}

func (i ModelBiasJobDefinitionStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelBiasJobDefinitionStoppingCondition]{
		OutputState: i.ToModelBiasJobDefinitionStoppingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionStoppingConditionArgs) ToModelBiasJobDefinitionStoppingConditionPtrOutput() ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionStoppingConditionArgs) ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionStoppingConditionOutput).ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionStoppingConditionPtrInput is an input type that accepts ModelBiasJobDefinitionStoppingConditionArgs, ModelBiasJobDefinitionStoppingConditionPtr and ModelBiasJobDefinitionStoppingConditionPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionStoppingConditionPtrInput` via:
//
//	        ModelBiasJobDefinitionStoppingConditionArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionStoppingConditionPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionStoppingConditionPtrOutput() ModelBiasJobDefinitionStoppingConditionPtrOutput
	ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(context.Context) ModelBiasJobDefinitionStoppingConditionPtrOutput
}

type modelBiasJobDefinitionStoppingConditionPtrType ModelBiasJobDefinitionStoppingConditionArgs

func ModelBiasJobDefinitionStoppingConditionPtr(v *ModelBiasJobDefinitionStoppingConditionArgs) ModelBiasJobDefinitionStoppingConditionPtrInput {
	return (*modelBiasJobDefinitionStoppingConditionPtrType)(v)
}

func (*modelBiasJobDefinitionStoppingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i *modelBiasJobDefinitionStoppingConditionPtrType) ToModelBiasJobDefinitionStoppingConditionPtrOutput() ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionStoppingConditionPtrType) ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionStoppingConditionPtrOutput)
}

func (i *modelBiasJobDefinitionStoppingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelBiasJobDefinitionStoppingCondition]{
		OutputState: i.ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelBiasJobDefinitionStoppingConditionOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelBiasJobDefinitionStoppingConditionOutput) ToModelBiasJobDefinitionStoppingConditionOutput() ModelBiasJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelBiasJobDefinitionStoppingConditionOutput) ToModelBiasJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelBiasJobDefinitionStoppingConditionOutput) ToModelBiasJobDefinitionStoppingConditionPtrOutput() ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return o.ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionStoppingConditionOutput) ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionStoppingCondition) *ModelBiasJobDefinitionStoppingCondition {
		return &v
	}).(ModelBiasJobDefinitionStoppingConditionPtrOutput)
}

func (o ModelBiasJobDefinitionStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelBiasJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o ModelBiasJobDefinitionStoppingConditionOutput) MaxRuntimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionStoppingCondition) int { return v.MaxRuntimeInSeconds }).(pulumi.IntOutput)
}

type ModelBiasJobDefinitionStoppingConditionPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionStoppingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelBiasJobDefinitionStoppingConditionPtrOutput) ToModelBiasJobDefinitionStoppingConditionPtrOutput() ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionStoppingConditionPtrOutput) ToModelBiasJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionStoppingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelBiasJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionStoppingConditionPtrOutput) Elem() ModelBiasJobDefinitionStoppingConditionOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionStoppingCondition) ModelBiasJobDefinitionStoppingCondition {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionStoppingCondition
		return ret
	}).(ModelBiasJobDefinitionStoppingConditionOutput)
}

// The maximum runtime allowed in seconds.
func (o ModelBiasJobDefinitionStoppingConditionPtrOutput) MaxRuntimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionStoppingCondition) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRuntimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type ModelBiasJobDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ModelBiasJobDefinitionTagInput is an input type that accepts ModelBiasJobDefinitionTagArgs and ModelBiasJobDefinitionTagOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionTagInput` via:
//
//	ModelBiasJobDefinitionTagArgs{...}
type ModelBiasJobDefinitionTagInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionTagOutput() ModelBiasJobDefinitionTagOutput
	ToModelBiasJobDefinitionTagOutputWithContext(context.Context) ModelBiasJobDefinitionTagOutput
}

// A key-value pair to associate with a resource.
type ModelBiasJobDefinitionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelBiasJobDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionTag)(nil)).Elem()
}

func (i ModelBiasJobDefinitionTagArgs) ToModelBiasJobDefinitionTagOutput() ModelBiasJobDefinitionTagOutput {
	return i.ToModelBiasJobDefinitionTagOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionTagArgs) ToModelBiasJobDefinitionTagOutputWithContext(ctx context.Context) ModelBiasJobDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionTagOutput)
}

func (i ModelBiasJobDefinitionTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionTag] {
	return pulumix.Output[ModelBiasJobDefinitionTag]{
		OutputState: i.ToModelBiasJobDefinitionTagOutputWithContext(ctx).OutputState,
	}
}

// ModelBiasJobDefinitionTagArrayInput is an input type that accepts ModelBiasJobDefinitionTagArray and ModelBiasJobDefinitionTagArrayOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionTagArrayInput` via:
//
//	ModelBiasJobDefinitionTagArray{ ModelBiasJobDefinitionTagArgs{...} }
type ModelBiasJobDefinitionTagArrayInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionTagArrayOutput() ModelBiasJobDefinitionTagArrayOutput
	ToModelBiasJobDefinitionTagArrayOutputWithContext(context.Context) ModelBiasJobDefinitionTagArrayOutput
}

type ModelBiasJobDefinitionTagArray []ModelBiasJobDefinitionTagInput

func (ModelBiasJobDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelBiasJobDefinitionTag)(nil)).Elem()
}

func (i ModelBiasJobDefinitionTagArray) ToModelBiasJobDefinitionTagArrayOutput() ModelBiasJobDefinitionTagArrayOutput {
	return i.ToModelBiasJobDefinitionTagArrayOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionTagArray) ToModelBiasJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelBiasJobDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionTagArrayOutput)
}

func (i ModelBiasJobDefinitionTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelBiasJobDefinitionTag] {
	return pulumix.Output[[]ModelBiasJobDefinitionTag]{
		OutputState: i.ToModelBiasJobDefinitionTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelBiasJobDefinitionTagOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionTag)(nil)).Elem()
}

func (o ModelBiasJobDefinitionTagOutput) ToModelBiasJobDefinitionTagOutput() ModelBiasJobDefinitionTagOutput {
	return o
}

func (o ModelBiasJobDefinitionTagOutput) ToModelBiasJobDefinitionTagOutputWithContext(ctx context.Context) ModelBiasJobDefinitionTagOutput {
	return o
}

func (o ModelBiasJobDefinitionTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionTag] {
	return pulumix.Output[ModelBiasJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelBiasJobDefinitionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelBiasJobDefinitionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelBiasJobDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelBiasJobDefinitionTag)(nil)).Elem()
}

func (o ModelBiasJobDefinitionTagArrayOutput) ToModelBiasJobDefinitionTagArrayOutput() ModelBiasJobDefinitionTagArrayOutput {
	return o
}

func (o ModelBiasJobDefinitionTagArrayOutput) ToModelBiasJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelBiasJobDefinitionTagArrayOutput {
	return o
}

func (o ModelBiasJobDefinitionTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelBiasJobDefinitionTag] {
	return pulumix.Output[[]ModelBiasJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionTagArrayOutput) Index(i pulumi.IntInput) ModelBiasJobDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelBiasJobDefinitionTag {
		return vs[0].([]ModelBiasJobDefinitionTag)[vs[1].(int)]
	}).(ModelBiasJobDefinitionTagOutput)
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelBiasJobDefinitionVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets []string `pulumi:"subnets"`
}

// ModelBiasJobDefinitionVpcConfigInput is an input type that accepts ModelBiasJobDefinitionVpcConfigArgs and ModelBiasJobDefinitionVpcConfigOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionVpcConfigInput` via:
//
//	ModelBiasJobDefinitionVpcConfigArgs{...}
type ModelBiasJobDefinitionVpcConfigInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionVpcConfigOutput() ModelBiasJobDefinitionVpcConfigOutput
	ToModelBiasJobDefinitionVpcConfigOutputWithContext(context.Context) ModelBiasJobDefinitionVpcConfigOutput
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelBiasJobDefinitionVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ModelBiasJobDefinitionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionVpcConfig)(nil)).Elem()
}

func (i ModelBiasJobDefinitionVpcConfigArgs) ToModelBiasJobDefinitionVpcConfigOutput() ModelBiasJobDefinitionVpcConfigOutput {
	return i.ToModelBiasJobDefinitionVpcConfigOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionVpcConfigArgs) ToModelBiasJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionVpcConfigOutput)
}

func (i ModelBiasJobDefinitionVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionVpcConfig] {
	return pulumix.Output[ModelBiasJobDefinitionVpcConfig]{
		OutputState: i.ToModelBiasJobDefinitionVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelBiasJobDefinitionVpcConfigArgs) ToModelBiasJobDefinitionVpcConfigPtrOutput() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return i.ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i ModelBiasJobDefinitionVpcConfigArgs) ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionVpcConfigOutput).ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx)
}

// ModelBiasJobDefinitionVpcConfigPtrInput is an input type that accepts ModelBiasJobDefinitionVpcConfigArgs, ModelBiasJobDefinitionVpcConfigPtr and ModelBiasJobDefinitionVpcConfigPtrOutput values.
// You can construct a concrete instance of `ModelBiasJobDefinitionVpcConfigPtrInput` via:
//
//	        ModelBiasJobDefinitionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ModelBiasJobDefinitionVpcConfigPtrInput interface {
	pulumi.Input

	ToModelBiasJobDefinitionVpcConfigPtrOutput() ModelBiasJobDefinitionVpcConfigPtrOutput
	ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(context.Context) ModelBiasJobDefinitionVpcConfigPtrOutput
}

type modelBiasJobDefinitionVpcConfigPtrType ModelBiasJobDefinitionVpcConfigArgs

func ModelBiasJobDefinitionVpcConfigPtr(v *ModelBiasJobDefinitionVpcConfigArgs) ModelBiasJobDefinitionVpcConfigPtrInput {
	return (*modelBiasJobDefinitionVpcConfigPtrType)(v)
}

func (*modelBiasJobDefinitionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionVpcConfig)(nil)).Elem()
}

func (i *modelBiasJobDefinitionVpcConfigPtrType) ToModelBiasJobDefinitionVpcConfigPtrOutput() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return i.ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *modelBiasJobDefinitionVpcConfigPtrType) ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelBiasJobDefinitionVpcConfigPtrOutput)
}

func (i *modelBiasJobDefinitionVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionVpcConfig]{
		OutputState: i.ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelBiasJobDefinitionVpcConfigOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelBiasJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionVpcConfigOutput) ToModelBiasJobDefinitionVpcConfigOutput() ModelBiasJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionVpcConfigOutput) ToModelBiasJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelBiasJobDefinitionVpcConfigOutput) ToModelBiasJobDefinitionVpcConfigPtrOutput() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o.ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (o ModelBiasJobDefinitionVpcConfigOutput) ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelBiasJobDefinitionVpcConfig) *ModelBiasJobDefinitionVpcConfig {
		return &v
	}).(ModelBiasJobDefinitionVpcConfigPtrOutput)
}

func (o ModelBiasJobDefinitionVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelBiasJobDefinitionVpcConfig] {
	return pulumix.Output[ModelBiasJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelBiasJobDefinitionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelBiasJobDefinitionVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelBiasJobDefinitionVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ModelBiasJobDefinitionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelBiasJobDefinitionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelBiasJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelBiasJobDefinitionVpcConfigPtrOutput) ToModelBiasJobDefinitionVpcConfigPtrOutput() ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionVpcConfigPtrOutput) ToModelBiasJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelBiasJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelBiasJobDefinitionVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelBiasJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelBiasJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelBiasJobDefinitionVpcConfigPtrOutput) Elem() ModelBiasJobDefinitionVpcConfigOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionVpcConfig) ModelBiasJobDefinitionVpcConfig {
		if v != nil {
			return *v
		}
		var ret ModelBiasJobDefinitionVpcConfig
		return ret
	}).(ModelBiasJobDefinitionVpcConfigOutput)
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelBiasJobDefinitionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelBiasJobDefinitionVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelBiasJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ModelCardAdditionalInformation struct {
	// Caveats and recommendations for people who might use this model in their applications.
	CaveatsAndRecommendations *string `pulumi:"caveatsAndRecommendations"`
	// customer details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// Any ethical considerations that the author wants to provide.
	EthicalConsiderations *string `pulumi:"ethicalConsiderations"`
}

// ModelCardAdditionalInformationInput is an input type that accepts ModelCardAdditionalInformationArgs and ModelCardAdditionalInformationOutput values.
// You can construct a concrete instance of `ModelCardAdditionalInformationInput` via:
//
//	ModelCardAdditionalInformationArgs{...}
type ModelCardAdditionalInformationInput interface {
	pulumi.Input

	ToModelCardAdditionalInformationOutput() ModelCardAdditionalInformationOutput
	ToModelCardAdditionalInformationOutputWithContext(context.Context) ModelCardAdditionalInformationOutput
}

type ModelCardAdditionalInformationArgs struct {
	// Caveats and recommendations for people who might use this model in their applications.
	CaveatsAndRecommendations pulumi.StringPtrInput `pulumi:"caveatsAndRecommendations"`
	// customer details.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
	// Any ethical considerations that the author wants to provide.
	EthicalConsiderations pulumi.StringPtrInput `pulumi:"ethicalConsiderations"`
}

func (ModelCardAdditionalInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardAdditionalInformation)(nil)).Elem()
}

func (i ModelCardAdditionalInformationArgs) ToModelCardAdditionalInformationOutput() ModelCardAdditionalInformationOutput {
	return i.ToModelCardAdditionalInformationOutputWithContext(context.Background())
}

func (i ModelCardAdditionalInformationArgs) ToModelCardAdditionalInformationOutputWithContext(ctx context.Context) ModelCardAdditionalInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardAdditionalInformationOutput)
}

func (i ModelCardAdditionalInformationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardAdditionalInformation] {
	return pulumix.Output[ModelCardAdditionalInformation]{
		OutputState: i.ToModelCardAdditionalInformationOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardAdditionalInformationArgs) ToModelCardAdditionalInformationPtrOutput() ModelCardAdditionalInformationPtrOutput {
	return i.ToModelCardAdditionalInformationPtrOutputWithContext(context.Background())
}

func (i ModelCardAdditionalInformationArgs) ToModelCardAdditionalInformationPtrOutputWithContext(ctx context.Context) ModelCardAdditionalInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardAdditionalInformationOutput).ToModelCardAdditionalInformationPtrOutputWithContext(ctx)
}

// ModelCardAdditionalInformationPtrInput is an input type that accepts ModelCardAdditionalInformationArgs, ModelCardAdditionalInformationPtr and ModelCardAdditionalInformationPtrOutput values.
// You can construct a concrete instance of `ModelCardAdditionalInformationPtrInput` via:
//
//	        ModelCardAdditionalInformationArgs{...}
//
//	or:
//
//	        nil
type ModelCardAdditionalInformationPtrInput interface {
	pulumi.Input

	ToModelCardAdditionalInformationPtrOutput() ModelCardAdditionalInformationPtrOutput
	ToModelCardAdditionalInformationPtrOutputWithContext(context.Context) ModelCardAdditionalInformationPtrOutput
}

type modelCardAdditionalInformationPtrType ModelCardAdditionalInformationArgs

func ModelCardAdditionalInformationPtr(v *ModelCardAdditionalInformationArgs) ModelCardAdditionalInformationPtrInput {
	return (*modelCardAdditionalInformationPtrType)(v)
}

func (*modelCardAdditionalInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardAdditionalInformation)(nil)).Elem()
}

func (i *modelCardAdditionalInformationPtrType) ToModelCardAdditionalInformationPtrOutput() ModelCardAdditionalInformationPtrOutput {
	return i.ToModelCardAdditionalInformationPtrOutputWithContext(context.Background())
}

func (i *modelCardAdditionalInformationPtrType) ToModelCardAdditionalInformationPtrOutputWithContext(ctx context.Context) ModelCardAdditionalInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardAdditionalInformationPtrOutput)
}

func (i *modelCardAdditionalInformationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardAdditionalInformation] {
	return pulumix.Output[*ModelCardAdditionalInformation]{
		OutputState: i.ToModelCardAdditionalInformationPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelCardAdditionalInformationOutput struct{ *pulumi.OutputState }

func (ModelCardAdditionalInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardAdditionalInformation)(nil)).Elem()
}

func (o ModelCardAdditionalInformationOutput) ToModelCardAdditionalInformationOutput() ModelCardAdditionalInformationOutput {
	return o
}

func (o ModelCardAdditionalInformationOutput) ToModelCardAdditionalInformationOutputWithContext(ctx context.Context) ModelCardAdditionalInformationOutput {
	return o
}

func (o ModelCardAdditionalInformationOutput) ToModelCardAdditionalInformationPtrOutput() ModelCardAdditionalInformationPtrOutput {
	return o.ToModelCardAdditionalInformationPtrOutputWithContext(context.Background())
}

func (o ModelCardAdditionalInformationOutput) ToModelCardAdditionalInformationPtrOutputWithContext(ctx context.Context) ModelCardAdditionalInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardAdditionalInformation) *ModelCardAdditionalInformation {
		return &v
	}).(ModelCardAdditionalInformationPtrOutput)
}

func (o ModelCardAdditionalInformationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardAdditionalInformation] {
	return pulumix.Output[ModelCardAdditionalInformation]{
		OutputState: o.OutputState,
	}
}

// Caveats and recommendations for people who might use this model in their applications.
func (o ModelCardAdditionalInformationOutput) CaveatsAndRecommendations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardAdditionalInformation) *string { return v.CaveatsAndRecommendations }).(pulumi.StringPtrOutput)
}

// customer details.
func (o ModelCardAdditionalInformationOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelCardAdditionalInformation) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// Any ethical considerations that the author wants to provide.
func (o ModelCardAdditionalInformationOutput) EthicalConsiderations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardAdditionalInformation) *string { return v.EthicalConsiderations }).(pulumi.StringPtrOutput)
}

type ModelCardAdditionalInformationPtrOutput struct{ *pulumi.OutputState }

func (ModelCardAdditionalInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardAdditionalInformation)(nil)).Elem()
}

func (o ModelCardAdditionalInformationPtrOutput) ToModelCardAdditionalInformationPtrOutput() ModelCardAdditionalInformationPtrOutput {
	return o
}

func (o ModelCardAdditionalInformationPtrOutput) ToModelCardAdditionalInformationPtrOutputWithContext(ctx context.Context) ModelCardAdditionalInformationPtrOutput {
	return o
}

func (o ModelCardAdditionalInformationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardAdditionalInformation] {
	return pulumix.Output[*ModelCardAdditionalInformation]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardAdditionalInformationPtrOutput) Elem() ModelCardAdditionalInformationOutput {
	return o.ApplyT(func(v *ModelCardAdditionalInformation) ModelCardAdditionalInformation {
		if v != nil {
			return *v
		}
		var ret ModelCardAdditionalInformation
		return ret
	}).(ModelCardAdditionalInformationOutput)
}

// Caveats and recommendations for people who might use this model in their applications.
func (o ModelCardAdditionalInformationPtrOutput) CaveatsAndRecommendations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardAdditionalInformation) *string {
		if v == nil {
			return nil
		}
		return v.CaveatsAndRecommendations
	}).(pulumi.StringPtrOutput)
}

// customer details.
func (o ModelCardAdditionalInformationPtrOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelCardAdditionalInformation) interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDetails
	}).(pulumi.AnyOutput)
}

// Any ethical considerations that the author wants to provide.
func (o ModelCardAdditionalInformationPtrOutput) EthicalConsiderations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardAdditionalInformation) *string {
		if v == nil {
			return nil
		}
		return v.EthicalConsiderations
	}).(pulumi.StringPtrOutput)
}

type ModelCardBarChartMetric struct {
	Name      string                      `pulumi:"name"`
	Notes     *string                     `pulumi:"notes"`
	Type      ModelCardBarChartMetricType `pulumi:"type"`
	Value     []float64                   `pulumi:"value"`
	XAxisName []string                    `pulumi:"xAxisName"`
	YAxisName *string                     `pulumi:"yAxisName"`
}

// Business details.
type ModelCardBusinessDetails struct {
	// What business problem does the model solve?
	BusinessProblem *string `pulumi:"businessProblem"`
	// Business stakeholders.
	BusinessStakeholders *string `pulumi:"businessStakeholders"`
	// Line of business.
	LineOfBusiness *string `pulumi:"lineOfBusiness"`
}

// ModelCardBusinessDetailsInput is an input type that accepts ModelCardBusinessDetailsArgs and ModelCardBusinessDetailsOutput values.
// You can construct a concrete instance of `ModelCardBusinessDetailsInput` via:
//
//	ModelCardBusinessDetailsArgs{...}
type ModelCardBusinessDetailsInput interface {
	pulumi.Input

	ToModelCardBusinessDetailsOutput() ModelCardBusinessDetailsOutput
	ToModelCardBusinessDetailsOutputWithContext(context.Context) ModelCardBusinessDetailsOutput
}

// Business details.
type ModelCardBusinessDetailsArgs struct {
	// What business problem does the model solve?
	BusinessProblem pulumi.StringPtrInput `pulumi:"businessProblem"`
	// Business stakeholders.
	BusinessStakeholders pulumi.StringPtrInput `pulumi:"businessStakeholders"`
	// Line of business.
	LineOfBusiness pulumi.StringPtrInput `pulumi:"lineOfBusiness"`
}

func (ModelCardBusinessDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardBusinessDetails)(nil)).Elem()
}

func (i ModelCardBusinessDetailsArgs) ToModelCardBusinessDetailsOutput() ModelCardBusinessDetailsOutput {
	return i.ToModelCardBusinessDetailsOutputWithContext(context.Background())
}

func (i ModelCardBusinessDetailsArgs) ToModelCardBusinessDetailsOutputWithContext(ctx context.Context) ModelCardBusinessDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardBusinessDetailsOutput)
}

func (i ModelCardBusinessDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardBusinessDetails] {
	return pulumix.Output[ModelCardBusinessDetails]{
		OutputState: i.ToModelCardBusinessDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardBusinessDetailsArgs) ToModelCardBusinessDetailsPtrOutput() ModelCardBusinessDetailsPtrOutput {
	return i.ToModelCardBusinessDetailsPtrOutputWithContext(context.Background())
}

func (i ModelCardBusinessDetailsArgs) ToModelCardBusinessDetailsPtrOutputWithContext(ctx context.Context) ModelCardBusinessDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardBusinessDetailsOutput).ToModelCardBusinessDetailsPtrOutputWithContext(ctx)
}

// ModelCardBusinessDetailsPtrInput is an input type that accepts ModelCardBusinessDetailsArgs, ModelCardBusinessDetailsPtr and ModelCardBusinessDetailsPtrOutput values.
// You can construct a concrete instance of `ModelCardBusinessDetailsPtrInput` via:
//
//	        ModelCardBusinessDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelCardBusinessDetailsPtrInput interface {
	pulumi.Input

	ToModelCardBusinessDetailsPtrOutput() ModelCardBusinessDetailsPtrOutput
	ToModelCardBusinessDetailsPtrOutputWithContext(context.Context) ModelCardBusinessDetailsPtrOutput
}

type modelCardBusinessDetailsPtrType ModelCardBusinessDetailsArgs

func ModelCardBusinessDetailsPtr(v *ModelCardBusinessDetailsArgs) ModelCardBusinessDetailsPtrInput {
	return (*modelCardBusinessDetailsPtrType)(v)
}

func (*modelCardBusinessDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardBusinessDetails)(nil)).Elem()
}

func (i *modelCardBusinessDetailsPtrType) ToModelCardBusinessDetailsPtrOutput() ModelCardBusinessDetailsPtrOutput {
	return i.ToModelCardBusinessDetailsPtrOutputWithContext(context.Background())
}

func (i *modelCardBusinessDetailsPtrType) ToModelCardBusinessDetailsPtrOutputWithContext(ctx context.Context) ModelCardBusinessDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardBusinessDetailsPtrOutput)
}

func (i *modelCardBusinessDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardBusinessDetails] {
	return pulumix.Output[*ModelCardBusinessDetails]{
		OutputState: i.ToModelCardBusinessDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

// Business details.
type ModelCardBusinessDetailsOutput struct{ *pulumi.OutputState }

func (ModelCardBusinessDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardBusinessDetails)(nil)).Elem()
}

func (o ModelCardBusinessDetailsOutput) ToModelCardBusinessDetailsOutput() ModelCardBusinessDetailsOutput {
	return o
}

func (o ModelCardBusinessDetailsOutput) ToModelCardBusinessDetailsOutputWithContext(ctx context.Context) ModelCardBusinessDetailsOutput {
	return o
}

func (o ModelCardBusinessDetailsOutput) ToModelCardBusinessDetailsPtrOutput() ModelCardBusinessDetailsPtrOutput {
	return o.ToModelCardBusinessDetailsPtrOutputWithContext(context.Background())
}

func (o ModelCardBusinessDetailsOutput) ToModelCardBusinessDetailsPtrOutputWithContext(ctx context.Context) ModelCardBusinessDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardBusinessDetails) *ModelCardBusinessDetails {
		return &v
	}).(ModelCardBusinessDetailsPtrOutput)
}

func (o ModelCardBusinessDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardBusinessDetails] {
	return pulumix.Output[ModelCardBusinessDetails]{
		OutputState: o.OutputState,
	}
}

// What business problem does the model solve?
func (o ModelCardBusinessDetailsOutput) BusinessProblem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardBusinessDetails) *string { return v.BusinessProblem }).(pulumi.StringPtrOutput)
}

// Business stakeholders.
func (o ModelCardBusinessDetailsOutput) BusinessStakeholders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardBusinessDetails) *string { return v.BusinessStakeholders }).(pulumi.StringPtrOutput)
}

// Line of business.
func (o ModelCardBusinessDetailsOutput) LineOfBusiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardBusinessDetails) *string { return v.LineOfBusiness }).(pulumi.StringPtrOutput)
}

type ModelCardBusinessDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelCardBusinessDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardBusinessDetails)(nil)).Elem()
}

func (o ModelCardBusinessDetailsPtrOutput) ToModelCardBusinessDetailsPtrOutput() ModelCardBusinessDetailsPtrOutput {
	return o
}

func (o ModelCardBusinessDetailsPtrOutput) ToModelCardBusinessDetailsPtrOutputWithContext(ctx context.Context) ModelCardBusinessDetailsPtrOutput {
	return o
}

func (o ModelCardBusinessDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardBusinessDetails] {
	return pulumix.Output[*ModelCardBusinessDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardBusinessDetailsPtrOutput) Elem() ModelCardBusinessDetailsOutput {
	return o.ApplyT(func(v *ModelCardBusinessDetails) ModelCardBusinessDetails {
		if v != nil {
			return *v
		}
		var ret ModelCardBusinessDetails
		return ret
	}).(ModelCardBusinessDetailsOutput)
}

// What business problem does the model solve?
func (o ModelCardBusinessDetailsPtrOutput) BusinessProblem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardBusinessDetails) *string {
		if v == nil {
			return nil
		}
		return v.BusinessProblem
	}).(pulumi.StringPtrOutput)
}

// Business stakeholders.
func (o ModelCardBusinessDetailsPtrOutput) BusinessStakeholders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardBusinessDetails) *string {
		if v == nil {
			return nil
		}
		return v.BusinessStakeholders
	}).(pulumi.StringPtrOutput)
}

// Line of business.
func (o ModelCardBusinessDetailsPtrOutput) LineOfBusiness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardBusinessDetails) *string {
		if v == nil {
			return nil
		}
		return v.LineOfBusiness
	}).(pulumi.StringPtrOutput)
}

type ModelCardContainer struct {
	// Inference environment path. The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
	Image string `pulumi:"image"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored.
	ModelDataUrl *string `pulumi:"modelDataUrl"`
	// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
	NearestModelName *string `pulumi:"nearestModelName"`
}

// ModelCardContainerInput is an input type that accepts ModelCardContainerArgs and ModelCardContainerOutput values.
// You can construct a concrete instance of `ModelCardContainerInput` via:
//
//	ModelCardContainerArgs{...}
type ModelCardContainerInput interface {
	pulumi.Input

	ToModelCardContainerOutput() ModelCardContainerOutput
	ToModelCardContainerOutputWithContext(context.Context) ModelCardContainerOutput
}

type ModelCardContainerArgs struct {
	// Inference environment path. The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
	Image pulumi.StringInput `pulumi:"image"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored.
	ModelDataUrl pulumi.StringPtrInput `pulumi:"modelDataUrl"`
	// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
	NearestModelName pulumi.StringPtrInput `pulumi:"nearestModelName"`
}

func (ModelCardContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardContainer)(nil)).Elem()
}

func (i ModelCardContainerArgs) ToModelCardContainerOutput() ModelCardContainerOutput {
	return i.ToModelCardContainerOutputWithContext(context.Background())
}

func (i ModelCardContainerArgs) ToModelCardContainerOutputWithContext(ctx context.Context) ModelCardContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardContainerOutput)
}

func (i ModelCardContainerArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardContainer] {
	return pulumix.Output[ModelCardContainer]{
		OutputState: i.ToModelCardContainerOutputWithContext(ctx).OutputState,
	}
}

// ModelCardContainerArrayInput is an input type that accepts ModelCardContainerArray and ModelCardContainerArrayOutput values.
// You can construct a concrete instance of `ModelCardContainerArrayInput` via:
//
//	ModelCardContainerArray{ ModelCardContainerArgs{...} }
type ModelCardContainerArrayInput interface {
	pulumi.Input

	ToModelCardContainerArrayOutput() ModelCardContainerArrayOutput
	ToModelCardContainerArrayOutputWithContext(context.Context) ModelCardContainerArrayOutput
}

type ModelCardContainerArray []ModelCardContainerInput

func (ModelCardContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardContainer)(nil)).Elem()
}

func (i ModelCardContainerArray) ToModelCardContainerArrayOutput() ModelCardContainerArrayOutput {
	return i.ToModelCardContainerArrayOutputWithContext(context.Background())
}

func (i ModelCardContainerArray) ToModelCardContainerArrayOutputWithContext(ctx context.Context) ModelCardContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardContainerArrayOutput)
}

func (i ModelCardContainerArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardContainer] {
	return pulumix.Output[[]ModelCardContainer]{
		OutputState: i.ToModelCardContainerArrayOutputWithContext(ctx).OutputState,
	}
}

type ModelCardContainerOutput struct{ *pulumi.OutputState }

func (ModelCardContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardContainer)(nil)).Elem()
}

func (o ModelCardContainerOutput) ToModelCardContainerOutput() ModelCardContainerOutput {
	return o
}

func (o ModelCardContainerOutput) ToModelCardContainerOutputWithContext(ctx context.Context) ModelCardContainerOutput {
	return o
}

func (o ModelCardContainerOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardContainer] {
	return pulumix.Output[ModelCardContainer]{
		OutputState: o.OutputState,
	}
}

// Inference environment path. The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
func (o ModelCardContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardContainer) string { return v.Image }).(pulumi.StringOutput)
}

// The Amazon S3 path where the model artifacts, which result from model training, are stored.
func (o ModelCardContainerOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardContainer) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
func (o ModelCardContainerOutput) NearestModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardContainer) *string { return v.NearestModelName }).(pulumi.StringPtrOutput)
}

type ModelCardContainerArrayOutput struct{ *pulumi.OutputState }

func (ModelCardContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardContainer)(nil)).Elem()
}

func (o ModelCardContainerArrayOutput) ToModelCardContainerArrayOutput() ModelCardContainerArrayOutput {
	return o
}

func (o ModelCardContainerArrayOutput) ToModelCardContainerArrayOutputWithContext(ctx context.Context) ModelCardContainerArrayOutput {
	return o
}

func (o ModelCardContainerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardContainer] {
	return pulumix.Output[[]ModelCardContainer]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardContainerArrayOutput) Index(i pulumi.IntInput) ModelCardContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardContainer {
		return vs[0].([]ModelCardContainer)[vs[1].(int)]
	}).(ModelCardContainerOutput)
}

// The content of the model card.
type ModelCardContent struct {
	AdditionalInformation *ModelCardAdditionalInformation `pulumi:"additionalInformation"`
	BusinessDetails       *ModelCardBusinessDetails       `pulumi:"businessDetails"`
	EvaluationDetails     []ModelCardEvaluationDetail     `pulumi:"evaluationDetails"`
	IntendedUses          *ModelCardIntendedUses          `pulumi:"intendedUses"`
	ModelOverview         *ModelCardModelOverview         `pulumi:"modelOverview"`
	ModelPackageDetails   *ModelCardModelPackageDetails   `pulumi:"modelPackageDetails"`
	TrainingDetails       *ModelCardTrainingDetails       `pulumi:"trainingDetails"`
}

// ModelCardContentInput is an input type that accepts ModelCardContentArgs and ModelCardContentOutput values.
// You can construct a concrete instance of `ModelCardContentInput` via:
//
//	ModelCardContentArgs{...}
type ModelCardContentInput interface {
	pulumi.Input

	ToModelCardContentOutput() ModelCardContentOutput
	ToModelCardContentOutputWithContext(context.Context) ModelCardContentOutput
}

// The content of the model card.
type ModelCardContentArgs struct {
	AdditionalInformation ModelCardAdditionalInformationPtrInput `pulumi:"additionalInformation"`
	BusinessDetails       ModelCardBusinessDetailsPtrInput       `pulumi:"businessDetails"`
	EvaluationDetails     ModelCardEvaluationDetailArrayInput    `pulumi:"evaluationDetails"`
	IntendedUses          ModelCardIntendedUsesPtrInput          `pulumi:"intendedUses"`
	ModelOverview         ModelCardModelOverviewPtrInput         `pulumi:"modelOverview"`
	ModelPackageDetails   ModelCardModelPackageDetailsPtrInput   `pulumi:"modelPackageDetails"`
	TrainingDetails       ModelCardTrainingDetailsPtrInput       `pulumi:"trainingDetails"`
}

func (ModelCardContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardContent)(nil)).Elem()
}

func (i ModelCardContentArgs) ToModelCardContentOutput() ModelCardContentOutput {
	return i.ToModelCardContentOutputWithContext(context.Background())
}

func (i ModelCardContentArgs) ToModelCardContentOutputWithContext(ctx context.Context) ModelCardContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardContentOutput)
}

func (i ModelCardContentArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardContent] {
	return pulumix.Output[ModelCardContent]{
		OutputState: i.ToModelCardContentOutputWithContext(ctx).OutputState,
	}
}

// The content of the model card.
type ModelCardContentOutput struct{ *pulumi.OutputState }

func (ModelCardContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardContent)(nil)).Elem()
}

func (o ModelCardContentOutput) ToModelCardContentOutput() ModelCardContentOutput {
	return o
}

func (o ModelCardContentOutput) ToModelCardContentOutputWithContext(ctx context.Context) ModelCardContentOutput {
	return o
}

func (o ModelCardContentOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardContent] {
	return pulumix.Output[ModelCardContent]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardContentOutput) AdditionalInformation() ModelCardAdditionalInformationPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardAdditionalInformation { return v.AdditionalInformation }).(ModelCardAdditionalInformationPtrOutput)
}

func (o ModelCardContentOutput) BusinessDetails() ModelCardBusinessDetailsPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardBusinessDetails { return v.BusinessDetails }).(ModelCardBusinessDetailsPtrOutput)
}

func (o ModelCardContentOutput) EvaluationDetails() ModelCardEvaluationDetailArrayOutput {
	return o.ApplyT(func(v ModelCardContent) []ModelCardEvaluationDetail { return v.EvaluationDetails }).(ModelCardEvaluationDetailArrayOutput)
}

func (o ModelCardContentOutput) IntendedUses() ModelCardIntendedUsesPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardIntendedUses { return v.IntendedUses }).(ModelCardIntendedUsesPtrOutput)
}

func (o ModelCardContentOutput) ModelOverview() ModelCardModelOverviewPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardModelOverview { return v.ModelOverview }).(ModelCardModelOverviewPtrOutput)
}

func (o ModelCardContentOutput) ModelPackageDetails() ModelCardModelPackageDetailsPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardModelPackageDetails { return v.ModelPackageDetails }).(ModelCardModelPackageDetailsPtrOutput)
}

func (o ModelCardContentOutput) TrainingDetails() ModelCardTrainingDetailsPtrOutput {
	return o.ApplyT(func(v ModelCardContent) *ModelCardTrainingDetails { return v.TrainingDetails }).(ModelCardTrainingDetailsPtrOutput)
}

type ModelCardContentPtrOutput struct{ *pulumi.OutputState }

func (ModelCardContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardContent)(nil)).Elem()
}

func (o ModelCardContentPtrOutput) ToModelCardContentPtrOutput() ModelCardContentPtrOutput {
	return o
}

func (o ModelCardContentPtrOutput) ToModelCardContentPtrOutputWithContext(ctx context.Context) ModelCardContentPtrOutput {
	return o
}

func (o ModelCardContentPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardContent] {
	return pulumix.Output[*ModelCardContent]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardContentPtrOutput) Elem() ModelCardContentOutput {
	return o.ApplyT(func(v *ModelCardContent) ModelCardContent {
		if v != nil {
			return *v
		}
		var ret ModelCardContent
		return ret
	}).(ModelCardContentOutput)
}

func (o ModelCardContentPtrOutput) AdditionalInformation() ModelCardAdditionalInformationPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardAdditionalInformation {
		if v == nil {
			return nil
		}
		return v.AdditionalInformation
	}).(ModelCardAdditionalInformationPtrOutput)
}

func (o ModelCardContentPtrOutput) BusinessDetails() ModelCardBusinessDetailsPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardBusinessDetails {
		if v == nil {
			return nil
		}
		return v.BusinessDetails
	}).(ModelCardBusinessDetailsPtrOutput)
}

func (o ModelCardContentPtrOutput) EvaluationDetails() ModelCardEvaluationDetailArrayOutput {
	return o.ApplyT(func(v *ModelCardContent) []ModelCardEvaluationDetail {
		if v == nil {
			return nil
		}
		return v.EvaluationDetails
	}).(ModelCardEvaluationDetailArrayOutput)
}

func (o ModelCardContentPtrOutput) IntendedUses() ModelCardIntendedUsesPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardIntendedUses {
		if v == nil {
			return nil
		}
		return v.IntendedUses
	}).(ModelCardIntendedUsesPtrOutput)
}

func (o ModelCardContentPtrOutput) ModelOverview() ModelCardModelOverviewPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardModelOverview {
		if v == nil {
			return nil
		}
		return v.ModelOverview
	}).(ModelCardModelOverviewPtrOutput)
}

func (o ModelCardContentPtrOutput) ModelPackageDetails() ModelCardModelPackageDetailsPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardModelPackageDetails {
		if v == nil {
			return nil
		}
		return v.ModelPackageDetails
	}).(ModelCardModelPackageDetailsPtrOutput)
}

func (o ModelCardContentPtrOutput) TrainingDetails() ModelCardTrainingDetailsPtrOutput {
	return o.ApplyT(func(v *ModelCardContent) *ModelCardTrainingDetails {
		if v == nil {
			return nil
		}
		return v.TrainingDetails
	}).(ModelCardTrainingDetailsPtrOutput)
}

// item of evaluation details
type ModelCardEvaluationDetail struct {
	Datasets              []string `pulumi:"datasets"`
	EvaluationJobArn      *string  `pulumi:"evaluationJobArn"`
	EvaluationObservation *string  `pulumi:"evaluationObservation"`
	// additional attributes associated with the evaluation results.
	Metadata     interface{}            `pulumi:"metadata"`
	MetricGroups []ModelCardMetricGroup `pulumi:"metricGroups"`
	Name         string                 `pulumi:"name"`
}

// ModelCardEvaluationDetailInput is an input type that accepts ModelCardEvaluationDetailArgs and ModelCardEvaluationDetailOutput values.
// You can construct a concrete instance of `ModelCardEvaluationDetailInput` via:
//
//	ModelCardEvaluationDetailArgs{...}
type ModelCardEvaluationDetailInput interface {
	pulumi.Input

	ToModelCardEvaluationDetailOutput() ModelCardEvaluationDetailOutput
	ToModelCardEvaluationDetailOutputWithContext(context.Context) ModelCardEvaluationDetailOutput
}

// item of evaluation details
type ModelCardEvaluationDetailArgs struct {
	Datasets              pulumi.StringArrayInput `pulumi:"datasets"`
	EvaluationJobArn      pulumi.StringPtrInput   `pulumi:"evaluationJobArn"`
	EvaluationObservation pulumi.StringPtrInput   `pulumi:"evaluationObservation"`
	// additional attributes associated with the evaluation results.
	Metadata     pulumi.Input                   `pulumi:"metadata"`
	MetricGroups ModelCardMetricGroupArrayInput `pulumi:"metricGroups"`
	Name         pulumi.StringInput             `pulumi:"name"`
}

func (ModelCardEvaluationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardEvaluationDetail)(nil)).Elem()
}

func (i ModelCardEvaluationDetailArgs) ToModelCardEvaluationDetailOutput() ModelCardEvaluationDetailOutput {
	return i.ToModelCardEvaluationDetailOutputWithContext(context.Background())
}

func (i ModelCardEvaluationDetailArgs) ToModelCardEvaluationDetailOutputWithContext(ctx context.Context) ModelCardEvaluationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardEvaluationDetailOutput)
}

func (i ModelCardEvaluationDetailArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardEvaluationDetail] {
	return pulumix.Output[ModelCardEvaluationDetail]{
		OutputState: i.ToModelCardEvaluationDetailOutputWithContext(ctx).OutputState,
	}
}

// ModelCardEvaluationDetailArrayInput is an input type that accepts ModelCardEvaluationDetailArray and ModelCardEvaluationDetailArrayOutput values.
// You can construct a concrete instance of `ModelCardEvaluationDetailArrayInput` via:
//
//	ModelCardEvaluationDetailArray{ ModelCardEvaluationDetailArgs{...} }
type ModelCardEvaluationDetailArrayInput interface {
	pulumi.Input

	ToModelCardEvaluationDetailArrayOutput() ModelCardEvaluationDetailArrayOutput
	ToModelCardEvaluationDetailArrayOutputWithContext(context.Context) ModelCardEvaluationDetailArrayOutput
}

type ModelCardEvaluationDetailArray []ModelCardEvaluationDetailInput

func (ModelCardEvaluationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardEvaluationDetail)(nil)).Elem()
}

func (i ModelCardEvaluationDetailArray) ToModelCardEvaluationDetailArrayOutput() ModelCardEvaluationDetailArrayOutput {
	return i.ToModelCardEvaluationDetailArrayOutputWithContext(context.Background())
}

func (i ModelCardEvaluationDetailArray) ToModelCardEvaluationDetailArrayOutputWithContext(ctx context.Context) ModelCardEvaluationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardEvaluationDetailArrayOutput)
}

func (i ModelCardEvaluationDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardEvaluationDetail] {
	return pulumix.Output[[]ModelCardEvaluationDetail]{
		OutputState: i.ToModelCardEvaluationDetailArrayOutputWithContext(ctx).OutputState,
	}
}

// item of evaluation details
type ModelCardEvaluationDetailOutput struct{ *pulumi.OutputState }

func (ModelCardEvaluationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardEvaluationDetail)(nil)).Elem()
}

func (o ModelCardEvaluationDetailOutput) ToModelCardEvaluationDetailOutput() ModelCardEvaluationDetailOutput {
	return o
}

func (o ModelCardEvaluationDetailOutput) ToModelCardEvaluationDetailOutputWithContext(ctx context.Context) ModelCardEvaluationDetailOutput {
	return o
}

func (o ModelCardEvaluationDetailOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardEvaluationDetail] {
	return pulumix.Output[ModelCardEvaluationDetail]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardEvaluationDetailOutput) Datasets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) []string { return v.Datasets }).(pulumi.StringArrayOutput)
}

func (o ModelCardEvaluationDetailOutput) EvaluationJobArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) *string { return v.EvaluationJobArn }).(pulumi.StringPtrOutput)
}

func (o ModelCardEvaluationDetailOutput) EvaluationObservation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) *string { return v.EvaluationObservation }).(pulumi.StringPtrOutput)
}

// additional attributes associated with the evaluation results.
func (o ModelCardEvaluationDetailOutput) Metadata() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) interface{} { return v.Metadata }).(pulumi.AnyOutput)
}

func (o ModelCardEvaluationDetailOutput) MetricGroups() ModelCardMetricGroupArrayOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) []ModelCardMetricGroup { return v.MetricGroups }).(ModelCardMetricGroupArrayOutput)
}

func (o ModelCardEvaluationDetailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardEvaluationDetail) string { return v.Name }).(pulumi.StringOutput)
}

type ModelCardEvaluationDetailArrayOutput struct{ *pulumi.OutputState }

func (ModelCardEvaluationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardEvaluationDetail)(nil)).Elem()
}

func (o ModelCardEvaluationDetailArrayOutput) ToModelCardEvaluationDetailArrayOutput() ModelCardEvaluationDetailArrayOutput {
	return o
}

func (o ModelCardEvaluationDetailArrayOutput) ToModelCardEvaluationDetailArrayOutputWithContext(ctx context.Context) ModelCardEvaluationDetailArrayOutput {
	return o
}

func (o ModelCardEvaluationDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardEvaluationDetail] {
	return pulumix.Output[[]ModelCardEvaluationDetail]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardEvaluationDetailArrayOutput) Index(i pulumi.IntInput) ModelCardEvaluationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardEvaluationDetail {
		return vs[0].([]ModelCardEvaluationDetail)[vs[1].(int)]
	}).(ModelCardEvaluationDetailOutput)
}

type ModelCardInferenceSpecification struct {
	// Contains inference related information which were used to create model package.
	Containers []ModelCardContainer `pulumi:"containers"`
}

// ModelCardInferenceSpecificationInput is an input type that accepts ModelCardInferenceSpecificationArgs and ModelCardInferenceSpecificationOutput values.
// You can construct a concrete instance of `ModelCardInferenceSpecificationInput` via:
//
//	ModelCardInferenceSpecificationArgs{...}
type ModelCardInferenceSpecificationInput interface {
	pulumi.Input

	ToModelCardInferenceSpecificationOutput() ModelCardInferenceSpecificationOutput
	ToModelCardInferenceSpecificationOutputWithContext(context.Context) ModelCardInferenceSpecificationOutput
}

type ModelCardInferenceSpecificationArgs struct {
	// Contains inference related information which were used to create model package.
	Containers ModelCardContainerArrayInput `pulumi:"containers"`
}

func (ModelCardInferenceSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardInferenceSpecification)(nil)).Elem()
}

func (i ModelCardInferenceSpecificationArgs) ToModelCardInferenceSpecificationOutput() ModelCardInferenceSpecificationOutput {
	return i.ToModelCardInferenceSpecificationOutputWithContext(context.Background())
}

func (i ModelCardInferenceSpecificationArgs) ToModelCardInferenceSpecificationOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardInferenceSpecificationOutput)
}

func (i ModelCardInferenceSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardInferenceSpecification] {
	return pulumix.Output[ModelCardInferenceSpecification]{
		OutputState: i.ToModelCardInferenceSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardInferenceSpecificationArgs) ToModelCardInferenceSpecificationPtrOutput() ModelCardInferenceSpecificationPtrOutput {
	return i.ToModelCardInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (i ModelCardInferenceSpecificationArgs) ToModelCardInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardInferenceSpecificationOutput).ToModelCardInferenceSpecificationPtrOutputWithContext(ctx)
}

// ModelCardInferenceSpecificationPtrInput is an input type that accepts ModelCardInferenceSpecificationArgs, ModelCardInferenceSpecificationPtr and ModelCardInferenceSpecificationPtrOutput values.
// You can construct a concrete instance of `ModelCardInferenceSpecificationPtrInput` via:
//
//	        ModelCardInferenceSpecificationArgs{...}
//
//	or:
//
//	        nil
type ModelCardInferenceSpecificationPtrInput interface {
	pulumi.Input

	ToModelCardInferenceSpecificationPtrOutput() ModelCardInferenceSpecificationPtrOutput
	ToModelCardInferenceSpecificationPtrOutputWithContext(context.Context) ModelCardInferenceSpecificationPtrOutput
}

type modelCardInferenceSpecificationPtrType ModelCardInferenceSpecificationArgs

func ModelCardInferenceSpecificationPtr(v *ModelCardInferenceSpecificationArgs) ModelCardInferenceSpecificationPtrInput {
	return (*modelCardInferenceSpecificationPtrType)(v)
}

func (*modelCardInferenceSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardInferenceSpecification)(nil)).Elem()
}

func (i *modelCardInferenceSpecificationPtrType) ToModelCardInferenceSpecificationPtrOutput() ModelCardInferenceSpecificationPtrOutput {
	return i.ToModelCardInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (i *modelCardInferenceSpecificationPtrType) ToModelCardInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardInferenceSpecificationPtrOutput)
}

func (i *modelCardInferenceSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardInferenceSpecification] {
	return pulumix.Output[*ModelCardInferenceSpecification]{
		OutputState: i.ToModelCardInferenceSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelCardInferenceSpecificationOutput struct{ *pulumi.OutputState }

func (ModelCardInferenceSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardInferenceSpecification)(nil)).Elem()
}

func (o ModelCardInferenceSpecificationOutput) ToModelCardInferenceSpecificationOutput() ModelCardInferenceSpecificationOutput {
	return o
}

func (o ModelCardInferenceSpecificationOutput) ToModelCardInferenceSpecificationOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationOutput {
	return o
}

func (o ModelCardInferenceSpecificationOutput) ToModelCardInferenceSpecificationPtrOutput() ModelCardInferenceSpecificationPtrOutput {
	return o.ToModelCardInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (o ModelCardInferenceSpecificationOutput) ToModelCardInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardInferenceSpecification) *ModelCardInferenceSpecification {
		return &v
	}).(ModelCardInferenceSpecificationPtrOutput)
}

func (o ModelCardInferenceSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardInferenceSpecification] {
	return pulumix.Output[ModelCardInferenceSpecification]{
		OutputState: o.OutputState,
	}
}

// Contains inference related information which were used to create model package.
func (o ModelCardInferenceSpecificationOutput) Containers() ModelCardContainerArrayOutput {
	return o.ApplyT(func(v ModelCardInferenceSpecification) []ModelCardContainer { return v.Containers }).(ModelCardContainerArrayOutput)
}

type ModelCardInferenceSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ModelCardInferenceSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardInferenceSpecification)(nil)).Elem()
}

func (o ModelCardInferenceSpecificationPtrOutput) ToModelCardInferenceSpecificationPtrOutput() ModelCardInferenceSpecificationPtrOutput {
	return o
}

func (o ModelCardInferenceSpecificationPtrOutput) ToModelCardInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelCardInferenceSpecificationPtrOutput {
	return o
}

func (o ModelCardInferenceSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardInferenceSpecification] {
	return pulumix.Output[*ModelCardInferenceSpecification]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardInferenceSpecificationPtrOutput) Elem() ModelCardInferenceSpecificationOutput {
	return o.ApplyT(func(v *ModelCardInferenceSpecification) ModelCardInferenceSpecification {
		if v != nil {
			return *v
		}
		var ret ModelCardInferenceSpecification
		return ret
	}).(ModelCardInferenceSpecificationOutput)
}

// Contains inference related information which were used to create model package.
func (o ModelCardInferenceSpecificationPtrOutput) Containers() ModelCardContainerArrayOutput {
	return o.ApplyT(func(v *ModelCardInferenceSpecification) []ModelCardContainer {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ModelCardContainerArrayOutput)
}

// Intended usage of model.
type ModelCardIntendedUses struct {
	ExplanationsForRiskRating       *string `pulumi:"explanationsForRiskRating"`
	FactorsAffectingModelEfficiency *string `pulumi:"factorsAffectingModelEfficiency"`
	// intended use cases.
	IntendedUses *string `pulumi:"intendedUses"`
	// Why the model was developed?
	PurposeOfModel *string              `pulumi:"purposeOfModel"`
	RiskRating     *ModelCardRiskRating `pulumi:"riskRating"`
}

// ModelCardIntendedUsesInput is an input type that accepts ModelCardIntendedUsesArgs and ModelCardIntendedUsesOutput values.
// You can construct a concrete instance of `ModelCardIntendedUsesInput` via:
//
//	ModelCardIntendedUsesArgs{...}
type ModelCardIntendedUsesInput interface {
	pulumi.Input

	ToModelCardIntendedUsesOutput() ModelCardIntendedUsesOutput
	ToModelCardIntendedUsesOutputWithContext(context.Context) ModelCardIntendedUsesOutput
}

// Intended usage of model.
type ModelCardIntendedUsesArgs struct {
	ExplanationsForRiskRating       pulumi.StringPtrInput `pulumi:"explanationsForRiskRating"`
	FactorsAffectingModelEfficiency pulumi.StringPtrInput `pulumi:"factorsAffectingModelEfficiency"`
	// intended use cases.
	IntendedUses pulumi.StringPtrInput `pulumi:"intendedUses"`
	// Why the model was developed?
	PurposeOfModel pulumi.StringPtrInput       `pulumi:"purposeOfModel"`
	RiskRating     ModelCardRiskRatingPtrInput `pulumi:"riskRating"`
}

func (ModelCardIntendedUsesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardIntendedUses)(nil)).Elem()
}

func (i ModelCardIntendedUsesArgs) ToModelCardIntendedUsesOutput() ModelCardIntendedUsesOutput {
	return i.ToModelCardIntendedUsesOutputWithContext(context.Background())
}

func (i ModelCardIntendedUsesArgs) ToModelCardIntendedUsesOutputWithContext(ctx context.Context) ModelCardIntendedUsesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardIntendedUsesOutput)
}

func (i ModelCardIntendedUsesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardIntendedUses] {
	return pulumix.Output[ModelCardIntendedUses]{
		OutputState: i.ToModelCardIntendedUsesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardIntendedUsesArgs) ToModelCardIntendedUsesPtrOutput() ModelCardIntendedUsesPtrOutput {
	return i.ToModelCardIntendedUsesPtrOutputWithContext(context.Background())
}

func (i ModelCardIntendedUsesArgs) ToModelCardIntendedUsesPtrOutputWithContext(ctx context.Context) ModelCardIntendedUsesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardIntendedUsesOutput).ToModelCardIntendedUsesPtrOutputWithContext(ctx)
}

// ModelCardIntendedUsesPtrInput is an input type that accepts ModelCardIntendedUsesArgs, ModelCardIntendedUsesPtr and ModelCardIntendedUsesPtrOutput values.
// You can construct a concrete instance of `ModelCardIntendedUsesPtrInput` via:
//
//	        ModelCardIntendedUsesArgs{...}
//
//	or:
//
//	        nil
type ModelCardIntendedUsesPtrInput interface {
	pulumi.Input

	ToModelCardIntendedUsesPtrOutput() ModelCardIntendedUsesPtrOutput
	ToModelCardIntendedUsesPtrOutputWithContext(context.Context) ModelCardIntendedUsesPtrOutput
}

type modelCardIntendedUsesPtrType ModelCardIntendedUsesArgs

func ModelCardIntendedUsesPtr(v *ModelCardIntendedUsesArgs) ModelCardIntendedUsesPtrInput {
	return (*modelCardIntendedUsesPtrType)(v)
}

func (*modelCardIntendedUsesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardIntendedUses)(nil)).Elem()
}

func (i *modelCardIntendedUsesPtrType) ToModelCardIntendedUsesPtrOutput() ModelCardIntendedUsesPtrOutput {
	return i.ToModelCardIntendedUsesPtrOutputWithContext(context.Background())
}

func (i *modelCardIntendedUsesPtrType) ToModelCardIntendedUsesPtrOutputWithContext(ctx context.Context) ModelCardIntendedUsesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardIntendedUsesPtrOutput)
}

func (i *modelCardIntendedUsesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardIntendedUses] {
	return pulumix.Output[*ModelCardIntendedUses]{
		OutputState: i.ToModelCardIntendedUsesPtrOutputWithContext(ctx).OutputState,
	}
}

// Intended usage of model.
type ModelCardIntendedUsesOutput struct{ *pulumi.OutputState }

func (ModelCardIntendedUsesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardIntendedUses)(nil)).Elem()
}

func (o ModelCardIntendedUsesOutput) ToModelCardIntendedUsesOutput() ModelCardIntendedUsesOutput {
	return o
}

func (o ModelCardIntendedUsesOutput) ToModelCardIntendedUsesOutputWithContext(ctx context.Context) ModelCardIntendedUsesOutput {
	return o
}

func (o ModelCardIntendedUsesOutput) ToModelCardIntendedUsesPtrOutput() ModelCardIntendedUsesPtrOutput {
	return o.ToModelCardIntendedUsesPtrOutputWithContext(context.Background())
}

func (o ModelCardIntendedUsesOutput) ToModelCardIntendedUsesPtrOutputWithContext(ctx context.Context) ModelCardIntendedUsesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardIntendedUses) *ModelCardIntendedUses {
		return &v
	}).(ModelCardIntendedUsesPtrOutput)
}

func (o ModelCardIntendedUsesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardIntendedUses] {
	return pulumix.Output[ModelCardIntendedUses]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardIntendedUsesOutput) ExplanationsForRiskRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardIntendedUses) *string { return v.ExplanationsForRiskRating }).(pulumi.StringPtrOutput)
}

func (o ModelCardIntendedUsesOutput) FactorsAffectingModelEfficiency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardIntendedUses) *string { return v.FactorsAffectingModelEfficiency }).(pulumi.StringPtrOutput)
}

// intended use cases.
func (o ModelCardIntendedUsesOutput) IntendedUses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardIntendedUses) *string { return v.IntendedUses }).(pulumi.StringPtrOutput)
}

// Why the model was developed?
func (o ModelCardIntendedUsesOutput) PurposeOfModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardIntendedUses) *string { return v.PurposeOfModel }).(pulumi.StringPtrOutput)
}

func (o ModelCardIntendedUsesOutput) RiskRating() ModelCardRiskRatingPtrOutput {
	return o.ApplyT(func(v ModelCardIntendedUses) *ModelCardRiskRating { return v.RiskRating }).(ModelCardRiskRatingPtrOutput)
}

type ModelCardIntendedUsesPtrOutput struct{ *pulumi.OutputState }

func (ModelCardIntendedUsesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardIntendedUses)(nil)).Elem()
}

func (o ModelCardIntendedUsesPtrOutput) ToModelCardIntendedUsesPtrOutput() ModelCardIntendedUsesPtrOutput {
	return o
}

func (o ModelCardIntendedUsesPtrOutput) ToModelCardIntendedUsesPtrOutputWithContext(ctx context.Context) ModelCardIntendedUsesPtrOutput {
	return o
}

func (o ModelCardIntendedUsesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardIntendedUses] {
	return pulumix.Output[*ModelCardIntendedUses]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardIntendedUsesPtrOutput) Elem() ModelCardIntendedUsesOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) ModelCardIntendedUses {
		if v != nil {
			return *v
		}
		var ret ModelCardIntendedUses
		return ret
	}).(ModelCardIntendedUsesOutput)
}

func (o ModelCardIntendedUsesPtrOutput) ExplanationsForRiskRating() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) *string {
		if v == nil {
			return nil
		}
		return v.ExplanationsForRiskRating
	}).(pulumi.StringPtrOutput)
}

func (o ModelCardIntendedUsesPtrOutput) FactorsAffectingModelEfficiency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) *string {
		if v == nil {
			return nil
		}
		return v.FactorsAffectingModelEfficiency
	}).(pulumi.StringPtrOutput)
}

// intended use cases.
func (o ModelCardIntendedUsesPtrOutput) IntendedUses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) *string {
		if v == nil {
			return nil
		}
		return v.IntendedUses
	}).(pulumi.StringPtrOutput)
}

// Why the model was developed?
func (o ModelCardIntendedUsesPtrOutput) PurposeOfModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) *string {
		if v == nil {
			return nil
		}
		return v.PurposeOfModel
	}).(pulumi.StringPtrOutput)
}

func (o ModelCardIntendedUsesPtrOutput) RiskRating() ModelCardRiskRatingPtrOutput {
	return o.ApplyT(func(v *ModelCardIntendedUses) *ModelCardRiskRating {
		if v == nil {
			return nil
		}
		return v.RiskRating
	}).(ModelCardRiskRatingPtrOutput)
}

// Linear graph metric.
type ModelCardLinearGraphMetric struct {
	Name      string                         `pulumi:"name"`
	Notes     *string                        `pulumi:"notes"`
	Type      ModelCardLinearGraphMetricType `pulumi:"type"`
	Value     [][]float64                    `pulumi:"value"`
	XAxisName *string                        `pulumi:"xAxisName"`
	YAxisName *string                        `pulumi:"yAxisName"`
}

type ModelCardMatrixMetric struct {
	Name      string                    `pulumi:"name"`
	Notes     *string                   `pulumi:"notes"`
	Type      ModelCardMatrixMetricType `pulumi:"type"`
	Value     [][]float64               `pulumi:"value"`
	XAxisName []string                  `pulumi:"xAxisName"`
	YAxisName []string                  `pulumi:"yAxisName"`
}

// item in metric groups
type ModelCardMetricGroup struct {
	MetricData []interface{} `pulumi:"metricData"`
	Name       string        `pulumi:"name"`
}

// ModelCardMetricGroupInput is an input type that accepts ModelCardMetricGroupArgs and ModelCardMetricGroupOutput values.
// You can construct a concrete instance of `ModelCardMetricGroupInput` via:
//
//	ModelCardMetricGroupArgs{...}
type ModelCardMetricGroupInput interface {
	pulumi.Input

	ToModelCardMetricGroupOutput() ModelCardMetricGroupOutput
	ToModelCardMetricGroupOutputWithContext(context.Context) ModelCardMetricGroupOutput
}

// item in metric groups
type ModelCardMetricGroupArgs struct {
	MetricData pulumi.ArrayInput  `pulumi:"metricData"`
	Name       pulumi.StringInput `pulumi:"name"`
}

func (ModelCardMetricGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardMetricGroup)(nil)).Elem()
}

func (i ModelCardMetricGroupArgs) ToModelCardMetricGroupOutput() ModelCardMetricGroupOutput {
	return i.ToModelCardMetricGroupOutputWithContext(context.Background())
}

func (i ModelCardMetricGroupArgs) ToModelCardMetricGroupOutputWithContext(ctx context.Context) ModelCardMetricGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardMetricGroupOutput)
}

func (i ModelCardMetricGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardMetricGroup] {
	return pulumix.Output[ModelCardMetricGroup]{
		OutputState: i.ToModelCardMetricGroupOutputWithContext(ctx).OutputState,
	}
}

// ModelCardMetricGroupArrayInput is an input type that accepts ModelCardMetricGroupArray and ModelCardMetricGroupArrayOutput values.
// You can construct a concrete instance of `ModelCardMetricGroupArrayInput` via:
//
//	ModelCardMetricGroupArray{ ModelCardMetricGroupArgs{...} }
type ModelCardMetricGroupArrayInput interface {
	pulumi.Input

	ToModelCardMetricGroupArrayOutput() ModelCardMetricGroupArrayOutput
	ToModelCardMetricGroupArrayOutputWithContext(context.Context) ModelCardMetricGroupArrayOutput
}

type ModelCardMetricGroupArray []ModelCardMetricGroupInput

func (ModelCardMetricGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardMetricGroup)(nil)).Elem()
}

func (i ModelCardMetricGroupArray) ToModelCardMetricGroupArrayOutput() ModelCardMetricGroupArrayOutput {
	return i.ToModelCardMetricGroupArrayOutputWithContext(context.Background())
}

func (i ModelCardMetricGroupArray) ToModelCardMetricGroupArrayOutputWithContext(ctx context.Context) ModelCardMetricGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardMetricGroupArrayOutput)
}

func (i ModelCardMetricGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardMetricGroup] {
	return pulumix.Output[[]ModelCardMetricGroup]{
		OutputState: i.ToModelCardMetricGroupArrayOutputWithContext(ctx).OutputState,
	}
}

// item in metric groups
type ModelCardMetricGroupOutput struct{ *pulumi.OutputState }

func (ModelCardMetricGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardMetricGroup)(nil)).Elem()
}

func (o ModelCardMetricGroupOutput) ToModelCardMetricGroupOutput() ModelCardMetricGroupOutput {
	return o
}

func (o ModelCardMetricGroupOutput) ToModelCardMetricGroupOutputWithContext(ctx context.Context) ModelCardMetricGroupOutput {
	return o
}

func (o ModelCardMetricGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardMetricGroup] {
	return pulumix.Output[ModelCardMetricGroup]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardMetricGroupOutput) MetricData() pulumi.ArrayOutput {
	return o.ApplyT(func(v ModelCardMetricGroup) []interface{} { return v.MetricData }).(pulumi.ArrayOutput)
}

func (o ModelCardMetricGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardMetricGroup) string { return v.Name }).(pulumi.StringOutput)
}

type ModelCardMetricGroupArrayOutput struct{ *pulumi.OutputState }

func (ModelCardMetricGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardMetricGroup)(nil)).Elem()
}

func (o ModelCardMetricGroupArrayOutput) ToModelCardMetricGroupArrayOutput() ModelCardMetricGroupArrayOutput {
	return o
}

func (o ModelCardMetricGroupArrayOutput) ToModelCardMetricGroupArrayOutputWithContext(ctx context.Context) ModelCardMetricGroupArrayOutput {
	return o
}

func (o ModelCardMetricGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardMetricGroup] {
	return pulumix.Output[[]ModelCardMetricGroup]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardMetricGroupArrayOutput) Index(i pulumi.IntInput) ModelCardMetricGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardMetricGroup {
		return vs[0].([]ModelCardMetricGroup)[vs[1].(int)]
	}).(ModelCardMetricGroupOutput)
}

// Overview about the model.
type ModelCardModelOverview struct {
	// Algorithm used to solve the problem.
	AlgorithmType *string `pulumi:"algorithmType"`
	// Overview about the inference.
	InferenceEnvironment *ModelCardModelOverviewInferenceEnvironmentProperties `pulumi:"inferenceEnvironment"`
	// Location of the model artifact.
	ModelArtifact []string `pulumi:"modelArtifact"`
	// Creator of model.
	ModelCreator *string `pulumi:"modelCreator"`
	// description of model.
	ModelDescription *string `pulumi:"modelDescription"`
	// SageMaker Model Arn or Non SageMaker Model id.
	ModelId *string `pulumi:"modelId"`
	// Name of the model.
	ModelName *string `pulumi:"modelName"`
	// Owner of model.
	ModelOwner *string `pulumi:"modelOwner"`
	// Version of the model.
	ModelVersion *float64 `pulumi:"modelVersion"`
	// Problem being solved with the model.
	ProblemType *string `pulumi:"problemType"`
}

// ModelCardModelOverviewInput is an input type that accepts ModelCardModelOverviewArgs and ModelCardModelOverviewOutput values.
// You can construct a concrete instance of `ModelCardModelOverviewInput` via:
//
//	ModelCardModelOverviewArgs{...}
type ModelCardModelOverviewInput interface {
	pulumi.Input

	ToModelCardModelOverviewOutput() ModelCardModelOverviewOutput
	ToModelCardModelOverviewOutputWithContext(context.Context) ModelCardModelOverviewOutput
}

// Overview about the model.
type ModelCardModelOverviewArgs struct {
	// Algorithm used to solve the problem.
	AlgorithmType pulumi.StringPtrInput `pulumi:"algorithmType"`
	// Overview about the inference.
	InferenceEnvironment ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput `pulumi:"inferenceEnvironment"`
	// Location of the model artifact.
	ModelArtifact pulumi.StringArrayInput `pulumi:"modelArtifact"`
	// Creator of model.
	ModelCreator pulumi.StringPtrInput `pulumi:"modelCreator"`
	// description of model.
	ModelDescription pulumi.StringPtrInput `pulumi:"modelDescription"`
	// SageMaker Model Arn or Non SageMaker Model id.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
	// Name of the model.
	ModelName pulumi.StringPtrInput `pulumi:"modelName"`
	// Owner of model.
	ModelOwner pulumi.StringPtrInput `pulumi:"modelOwner"`
	// Version of the model.
	ModelVersion pulumi.Float64PtrInput `pulumi:"modelVersion"`
	// Problem being solved with the model.
	ProblemType pulumi.StringPtrInput `pulumi:"problemType"`
}

func (ModelCardModelOverviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelOverview)(nil)).Elem()
}

func (i ModelCardModelOverviewArgs) ToModelCardModelOverviewOutput() ModelCardModelOverviewOutput {
	return i.ToModelCardModelOverviewOutputWithContext(context.Background())
}

func (i ModelCardModelOverviewArgs) ToModelCardModelOverviewOutputWithContext(ctx context.Context) ModelCardModelOverviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewOutput)
}

func (i ModelCardModelOverviewArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelOverview] {
	return pulumix.Output[ModelCardModelOverview]{
		OutputState: i.ToModelCardModelOverviewOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardModelOverviewArgs) ToModelCardModelOverviewPtrOutput() ModelCardModelOverviewPtrOutput {
	return i.ToModelCardModelOverviewPtrOutputWithContext(context.Background())
}

func (i ModelCardModelOverviewArgs) ToModelCardModelOverviewPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewOutput).ToModelCardModelOverviewPtrOutputWithContext(ctx)
}

// ModelCardModelOverviewPtrInput is an input type that accepts ModelCardModelOverviewArgs, ModelCardModelOverviewPtr and ModelCardModelOverviewPtrOutput values.
// You can construct a concrete instance of `ModelCardModelOverviewPtrInput` via:
//
//	        ModelCardModelOverviewArgs{...}
//
//	or:
//
//	        nil
type ModelCardModelOverviewPtrInput interface {
	pulumi.Input

	ToModelCardModelOverviewPtrOutput() ModelCardModelOverviewPtrOutput
	ToModelCardModelOverviewPtrOutputWithContext(context.Context) ModelCardModelOverviewPtrOutput
}

type modelCardModelOverviewPtrType ModelCardModelOverviewArgs

func ModelCardModelOverviewPtr(v *ModelCardModelOverviewArgs) ModelCardModelOverviewPtrInput {
	return (*modelCardModelOverviewPtrType)(v)
}

func (*modelCardModelOverviewPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelOverview)(nil)).Elem()
}

func (i *modelCardModelOverviewPtrType) ToModelCardModelOverviewPtrOutput() ModelCardModelOverviewPtrOutput {
	return i.ToModelCardModelOverviewPtrOutputWithContext(context.Background())
}

func (i *modelCardModelOverviewPtrType) ToModelCardModelOverviewPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewPtrOutput)
}

func (i *modelCardModelOverviewPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelOverview] {
	return pulumix.Output[*ModelCardModelOverview]{
		OutputState: i.ToModelCardModelOverviewPtrOutputWithContext(ctx).OutputState,
	}
}

// Overview about the model.
type ModelCardModelOverviewOutput struct{ *pulumi.OutputState }

func (ModelCardModelOverviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelOverview)(nil)).Elem()
}

func (o ModelCardModelOverviewOutput) ToModelCardModelOverviewOutput() ModelCardModelOverviewOutput {
	return o
}

func (o ModelCardModelOverviewOutput) ToModelCardModelOverviewOutputWithContext(ctx context.Context) ModelCardModelOverviewOutput {
	return o
}

func (o ModelCardModelOverviewOutput) ToModelCardModelOverviewPtrOutput() ModelCardModelOverviewPtrOutput {
	return o.ToModelCardModelOverviewPtrOutputWithContext(context.Background())
}

func (o ModelCardModelOverviewOutput) ToModelCardModelOverviewPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardModelOverview) *ModelCardModelOverview {
		return &v
	}).(ModelCardModelOverviewPtrOutput)
}

func (o ModelCardModelOverviewOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelOverview] {
	return pulumix.Output[ModelCardModelOverview]{
		OutputState: o.OutputState,
	}
}

// Algorithm used to solve the problem.
func (o ModelCardModelOverviewOutput) AlgorithmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.AlgorithmType }).(pulumi.StringPtrOutput)
}

// Overview about the inference.
func (o ModelCardModelOverviewOutput) InferenceEnvironment() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *ModelCardModelOverviewInferenceEnvironmentProperties {
		return v.InferenceEnvironment
	}).(ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput)
}

// Location of the model artifact.
func (o ModelCardModelOverviewOutput) ModelArtifact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelCardModelOverview) []string { return v.ModelArtifact }).(pulumi.StringArrayOutput)
}

// Creator of model.
func (o ModelCardModelOverviewOutput) ModelCreator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ModelCreator }).(pulumi.StringPtrOutput)
}

// description of model.
func (o ModelCardModelOverviewOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ModelDescription }).(pulumi.StringPtrOutput)
}

// SageMaker Model Arn or Non SageMaker Model id.
func (o ModelCardModelOverviewOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

// Name of the model.
func (o ModelCardModelOverviewOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ModelName }).(pulumi.StringPtrOutput)
}

// Owner of model.
func (o ModelCardModelOverviewOutput) ModelOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ModelOwner }).(pulumi.StringPtrOutput)
}

// Version of the model.
func (o ModelCardModelOverviewOutput) ModelVersion() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *float64 { return v.ModelVersion }).(pulumi.Float64PtrOutput)
}

// Problem being solved with the model.
func (o ModelCardModelOverviewOutput) ProblemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelOverview) *string { return v.ProblemType }).(pulumi.StringPtrOutput)
}

type ModelCardModelOverviewPtrOutput struct{ *pulumi.OutputState }

func (ModelCardModelOverviewPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelOverview)(nil)).Elem()
}

func (o ModelCardModelOverviewPtrOutput) ToModelCardModelOverviewPtrOutput() ModelCardModelOverviewPtrOutput {
	return o
}

func (o ModelCardModelOverviewPtrOutput) ToModelCardModelOverviewPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewPtrOutput {
	return o
}

func (o ModelCardModelOverviewPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelOverview] {
	return pulumix.Output[*ModelCardModelOverview]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardModelOverviewPtrOutput) Elem() ModelCardModelOverviewOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) ModelCardModelOverview {
		if v != nil {
			return *v
		}
		var ret ModelCardModelOverview
		return ret
	}).(ModelCardModelOverviewOutput)
}

// Algorithm used to solve the problem.
func (o ModelCardModelOverviewPtrOutput) AlgorithmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.AlgorithmType
	}).(pulumi.StringPtrOutput)
}

// Overview about the inference.
func (o ModelCardModelOverviewPtrOutput) InferenceEnvironment() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *ModelCardModelOverviewInferenceEnvironmentProperties {
		if v == nil {
			return nil
		}
		return v.InferenceEnvironment
	}).(ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput)
}

// Location of the model artifact.
func (o ModelCardModelOverviewPtrOutput) ModelArtifact() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) []string {
		if v == nil {
			return nil
		}
		return v.ModelArtifact
	}).(pulumi.StringArrayOutput)
}

// Creator of model.
func (o ModelCardModelOverviewPtrOutput) ModelCreator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ModelCreator
	}).(pulumi.StringPtrOutput)
}

// description of model.
func (o ModelCardModelOverviewPtrOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ModelDescription
	}).(pulumi.StringPtrOutput)
}

// SageMaker Model Arn or Non SageMaker Model id.
func (o ModelCardModelOverviewPtrOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ModelId
	}).(pulumi.StringPtrOutput)
}

// Name of the model.
func (o ModelCardModelOverviewPtrOutput) ModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ModelName
	}).(pulumi.StringPtrOutput)
}

// Owner of model.
func (o ModelCardModelOverviewPtrOutput) ModelOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ModelOwner
	}).(pulumi.StringPtrOutput)
}

// Version of the model.
func (o ModelCardModelOverviewPtrOutput) ModelVersion() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *float64 {
		if v == nil {
			return nil
		}
		return v.ModelVersion
	}).(pulumi.Float64PtrOutput)
}

// Problem being solved with the model.
func (o ModelCardModelOverviewPtrOutput) ProblemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelOverview) *string {
		if v == nil {
			return nil
		}
		return v.ProblemType
	}).(pulumi.StringPtrOutput)
}

// Overview about the inference.
type ModelCardModelOverviewInferenceEnvironmentProperties struct {
	// SageMaker inference image uri.
	ContainerImage []string `pulumi:"containerImage"`
}

// ModelCardModelOverviewInferenceEnvironmentPropertiesInput is an input type that accepts ModelCardModelOverviewInferenceEnvironmentPropertiesArgs and ModelCardModelOverviewInferenceEnvironmentPropertiesOutput values.
// You can construct a concrete instance of `ModelCardModelOverviewInferenceEnvironmentPropertiesInput` via:
//
//	ModelCardModelOverviewInferenceEnvironmentPropertiesArgs{...}
type ModelCardModelOverviewInferenceEnvironmentPropertiesInput interface {
	pulumi.Input

	ToModelCardModelOverviewInferenceEnvironmentPropertiesOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesOutput
	ToModelCardModelOverviewInferenceEnvironmentPropertiesOutputWithContext(context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesOutput
}

// Overview about the inference.
type ModelCardModelOverviewInferenceEnvironmentPropertiesArgs struct {
	// SageMaker inference image uri.
	ContainerImage pulumi.StringArrayInput `pulumi:"containerImage"`
}

func (ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelOverviewInferenceEnvironmentProperties)(nil)).Elem()
}

func (i ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ToModelCardModelOverviewInferenceEnvironmentPropertiesOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesOutput {
	return i.ToModelCardModelOverviewInferenceEnvironmentPropertiesOutputWithContext(context.Background())
}

func (i ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ToModelCardModelOverviewInferenceEnvironmentPropertiesOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewInferenceEnvironmentPropertiesOutput)
}

func (i ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelOverviewInferenceEnvironmentProperties] {
	return pulumix.Output[ModelCardModelOverviewInferenceEnvironmentProperties]{
		OutputState: i.ToModelCardModelOverviewInferenceEnvironmentPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return i.ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewInferenceEnvironmentPropertiesOutput).ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx)
}

// ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput is an input type that accepts ModelCardModelOverviewInferenceEnvironmentPropertiesArgs, ModelCardModelOverviewInferenceEnvironmentPropertiesPtr and ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput` via:
//
//	        ModelCardModelOverviewInferenceEnvironmentPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput interface {
	pulumi.Input

	ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput
	ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput
}

type modelCardModelOverviewInferenceEnvironmentPropertiesPtrType ModelCardModelOverviewInferenceEnvironmentPropertiesArgs

func ModelCardModelOverviewInferenceEnvironmentPropertiesPtr(v *ModelCardModelOverviewInferenceEnvironmentPropertiesArgs) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput {
	return (*modelCardModelOverviewInferenceEnvironmentPropertiesPtrType)(v)
}

func (*modelCardModelOverviewInferenceEnvironmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelOverviewInferenceEnvironmentProperties)(nil)).Elem()
}

func (i *modelCardModelOverviewInferenceEnvironmentPropertiesPtrType) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return i.ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelCardModelOverviewInferenceEnvironmentPropertiesPtrType) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput)
}

func (i *modelCardModelOverviewInferenceEnvironmentPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelOverviewInferenceEnvironmentProperties] {
	return pulumix.Output[*ModelCardModelOverviewInferenceEnvironmentProperties]{
		OutputState: i.ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Overview about the inference.
type ModelCardModelOverviewInferenceEnvironmentPropertiesOutput struct{ *pulumi.OutputState }

func (ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelOverviewInferenceEnvironmentProperties)(nil)).Elem()
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesOutput {
	return o
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesOutput {
	return o
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o.ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardModelOverviewInferenceEnvironmentProperties) *ModelCardModelOverviewInferenceEnvironmentProperties {
		return &v
	}).(ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput)
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelOverviewInferenceEnvironmentProperties] {
	return pulumix.Output[ModelCardModelOverviewInferenceEnvironmentProperties]{
		OutputState: o.OutputState,
	}
}

// SageMaker inference image uri.
func (o ModelCardModelOverviewInferenceEnvironmentPropertiesOutput) ContainerImage() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelCardModelOverviewInferenceEnvironmentProperties) []string { return v.ContainerImage }).(pulumi.StringArrayOutput)
}

type ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelOverviewInferenceEnvironmentProperties)(nil)).Elem()
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput() ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) ToModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput {
	return o
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelOverviewInferenceEnvironmentProperties] {
	return pulumix.Output[*ModelCardModelOverviewInferenceEnvironmentProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) Elem() ModelCardModelOverviewInferenceEnvironmentPropertiesOutput {
	return o.ApplyT(func(v *ModelCardModelOverviewInferenceEnvironmentProperties) ModelCardModelOverviewInferenceEnvironmentProperties {
		if v != nil {
			return *v
		}
		var ret ModelCardModelOverviewInferenceEnvironmentProperties
		return ret
	}).(ModelCardModelOverviewInferenceEnvironmentPropertiesOutput)
}

// SageMaker inference image uri.
func (o ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput) ContainerImage() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelCardModelOverviewInferenceEnvironmentProperties) []string {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(pulumi.StringArrayOutput)
}

type ModelCardModelPackageCreator struct {
	// The name of the user's profile in Studio
	UserProfileName *string `pulumi:"userProfileName"`
}

// ModelCardModelPackageCreatorInput is an input type that accepts ModelCardModelPackageCreatorArgs and ModelCardModelPackageCreatorOutput values.
// You can construct a concrete instance of `ModelCardModelPackageCreatorInput` via:
//
//	ModelCardModelPackageCreatorArgs{...}
type ModelCardModelPackageCreatorInput interface {
	pulumi.Input

	ToModelCardModelPackageCreatorOutput() ModelCardModelPackageCreatorOutput
	ToModelCardModelPackageCreatorOutputWithContext(context.Context) ModelCardModelPackageCreatorOutput
}

type ModelCardModelPackageCreatorArgs struct {
	// The name of the user's profile in Studio
	UserProfileName pulumi.StringPtrInput `pulumi:"userProfileName"`
}

func (ModelCardModelPackageCreatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelPackageCreator)(nil)).Elem()
}

func (i ModelCardModelPackageCreatorArgs) ToModelCardModelPackageCreatorOutput() ModelCardModelPackageCreatorOutput {
	return i.ToModelCardModelPackageCreatorOutputWithContext(context.Background())
}

func (i ModelCardModelPackageCreatorArgs) ToModelCardModelPackageCreatorOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageCreatorOutput)
}

func (i ModelCardModelPackageCreatorArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelPackageCreator] {
	return pulumix.Output[ModelCardModelPackageCreator]{
		OutputState: i.ToModelCardModelPackageCreatorOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardModelPackageCreatorArgs) ToModelCardModelPackageCreatorPtrOutput() ModelCardModelPackageCreatorPtrOutput {
	return i.ToModelCardModelPackageCreatorPtrOutputWithContext(context.Background())
}

func (i ModelCardModelPackageCreatorArgs) ToModelCardModelPackageCreatorPtrOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageCreatorOutput).ToModelCardModelPackageCreatorPtrOutputWithContext(ctx)
}

// ModelCardModelPackageCreatorPtrInput is an input type that accepts ModelCardModelPackageCreatorArgs, ModelCardModelPackageCreatorPtr and ModelCardModelPackageCreatorPtrOutput values.
// You can construct a concrete instance of `ModelCardModelPackageCreatorPtrInput` via:
//
//	        ModelCardModelPackageCreatorArgs{...}
//
//	or:
//
//	        nil
type ModelCardModelPackageCreatorPtrInput interface {
	pulumi.Input

	ToModelCardModelPackageCreatorPtrOutput() ModelCardModelPackageCreatorPtrOutput
	ToModelCardModelPackageCreatorPtrOutputWithContext(context.Context) ModelCardModelPackageCreatorPtrOutput
}

type modelCardModelPackageCreatorPtrType ModelCardModelPackageCreatorArgs

func ModelCardModelPackageCreatorPtr(v *ModelCardModelPackageCreatorArgs) ModelCardModelPackageCreatorPtrInput {
	return (*modelCardModelPackageCreatorPtrType)(v)
}

func (*modelCardModelPackageCreatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelPackageCreator)(nil)).Elem()
}

func (i *modelCardModelPackageCreatorPtrType) ToModelCardModelPackageCreatorPtrOutput() ModelCardModelPackageCreatorPtrOutput {
	return i.ToModelCardModelPackageCreatorPtrOutputWithContext(context.Background())
}

func (i *modelCardModelPackageCreatorPtrType) ToModelCardModelPackageCreatorPtrOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageCreatorPtrOutput)
}

func (i *modelCardModelPackageCreatorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelPackageCreator] {
	return pulumix.Output[*ModelCardModelPackageCreator]{
		OutputState: i.ToModelCardModelPackageCreatorPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelCardModelPackageCreatorOutput struct{ *pulumi.OutputState }

func (ModelCardModelPackageCreatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelPackageCreator)(nil)).Elem()
}

func (o ModelCardModelPackageCreatorOutput) ToModelCardModelPackageCreatorOutput() ModelCardModelPackageCreatorOutput {
	return o
}

func (o ModelCardModelPackageCreatorOutput) ToModelCardModelPackageCreatorOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorOutput {
	return o
}

func (o ModelCardModelPackageCreatorOutput) ToModelCardModelPackageCreatorPtrOutput() ModelCardModelPackageCreatorPtrOutput {
	return o.ToModelCardModelPackageCreatorPtrOutputWithContext(context.Background())
}

func (o ModelCardModelPackageCreatorOutput) ToModelCardModelPackageCreatorPtrOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardModelPackageCreator) *ModelCardModelPackageCreator {
		return &v
	}).(ModelCardModelPackageCreatorPtrOutput)
}

func (o ModelCardModelPackageCreatorOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelPackageCreator] {
	return pulumix.Output[ModelCardModelPackageCreator]{
		OutputState: o.OutputState,
	}
}

// The name of the user's profile in Studio
func (o ModelCardModelPackageCreatorOutput) UserProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageCreator) *string { return v.UserProfileName }).(pulumi.StringPtrOutput)
}

type ModelCardModelPackageCreatorPtrOutput struct{ *pulumi.OutputState }

func (ModelCardModelPackageCreatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelPackageCreator)(nil)).Elem()
}

func (o ModelCardModelPackageCreatorPtrOutput) ToModelCardModelPackageCreatorPtrOutput() ModelCardModelPackageCreatorPtrOutput {
	return o
}

func (o ModelCardModelPackageCreatorPtrOutput) ToModelCardModelPackageCreatorPtrOutputWithContext(ctx context.Context) ModelCardModelPackageCreatorPtrOutput {
	return o
}

func (o ModelCardModelPackageCreatorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelPackageCreator] {
	return pulumix.Output[*ModelCardModelPackageCreator]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardModelPackageCreatorPtrOutput) Elem() ModelCardModelPackageCreatorOutput {
	return o.ApplyT(func(v *ModelCardModelPackageCreator) ModelCardModelPackageCreator {
		if v != nil {
			return *v
		}
		var ret ModelCardModelPackageCreator
		return ret
	}).(ModelCardModelPackageCreatorOutput)
}

// The name of the user's profile in Studio
func (o ModelCardModelPackageCreatorPtrOutput) UserProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageCreator) *string {
		if v == nil {
			return nil
		}
		return v.UserProfileName
	}).(pulumi.StringPtrOutput)
}

// Metadata information related to model package version
type ModelCardModelPackageDetails struct {
	// A description provided for the model approval
	ApprovalDescription *string `pulumi:"approvalDescription"`
	// Information about the user who created model package.
	CreatedBy *ModelCardModelPackageCreator `pulumi:"createdBy"`
	// The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
	Domain *string `pulumi:"domain"`
	// Details about inference jobs that can be run with models based on this model package.
	InferenceSpecification *ModelCardInferenceSpecification `pulumi:"inferenceSpecification"`
	// Current approval status of model package
	ModelApprovalStatus *ModelCardModelPackageDetailsModelApprovalStatus `pulumi:"modelApprovalStatus"`
	// The Amazon Resource Name (ARN) of the model package
	ModelPackageArn *string `pulumi:"modelPackageArn"`
	// A brief summary of the model package
	ModelPackageDescription *string `pulumi:"modelPackageDescription"`
	// If the model is a versioned model, the name of the model group that the versioned model belongs to.
	ModelPackageGroupName *string `pulumi:"modelPackageGroupName"`
	// Name of the model package
	ModelPackageName *string `pulumi:"modelPackageName"`
	// Current status of model package
	ModelPackageStatus *ModelCardModelPackageDetailsModelPackageStatus `pulumi:"modelPackageStatus"`
	// Version of the model package
	ModelPackageVersion *float64 `pulumi:"modelPackageVersion"`
	// A list of algorithms that were used to create a model package.
	SourceAlgorithms []ModelCardSourceAlgorithm `pulumi:"sourceAlgorithms"`
	// The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
	Task *string `pulumi:"task"`
}

// ModelCardModelPackageDetailsInput is an input type that accepts ModelCardModelPackageDetailsArgs and ModelCardModelPackageDetailsOutput values.
// You can construct a concrete instance of `ModelCardModelPackageDetailsInput` via:
//
//	ModelCardModelPackageDetailsArgs{...}
type ModelCardModelPackageDetailsInput interface {
	pulumi.Input

	ToModelCardModelPackageDetailsOutput() ModelCardModelPackageDetailsOutput
	ToModelCardModelPackageDetailsOutputWithContext(context.Context) ModelCardModelPackageDetailsOutput
}

// Metadata information related to model package version
type ModelCardModelPackageDetailsArgs struct {
	// A description provided for the model approval
	ApprovalDescription pulumi.StringPtrInput `pulumi:"approvalDescription"`
	// Information about the user who created model package.
	CreatedBy ModelCardModelPackageCreatorPtrInput `pulumi:"createdBy"`
	// The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Details about inference jobs that can be run with models based on this model package.
	InferenceSpecification ModelCardInferenceSpecificationPtrInput `pulumi:"inferenceSpecification"`
	// Current approval status of model package
	ModelApprovalStatus ModelCardModelPackageDetailsModelApprovalStatusPtrInput `pulumi:"modelApprovalStatus"`
	// The Amazon Resource Name (ARN) of the model package
	ModelPackageArn pulumi.StringPtrInput `pulumi:"modelPackageArn"`
	// A brief summary of the model package
	ModelPackageDescription pulumi.StringPtrInput `pulumi:"modelPackageDescription"`
	// If the model is a versioned model, the name of the model group that the versioned model belongs to.
	ModelPackageGroupName pulumi.StringPtrInput `pulumi:"modelPackageGroupName"`
	// Name of the model package
	ModelPackageName pulumi.StringPtrInput `pulumi:"modelPackageName"`
	// Current status of model package
	ModelPackageStatus ModelCardModelPackageDetailsModelPackageStatusPtrInput `pulumi:"modelPackageStatus"`
	// Version of the model package
	ModelPackageVersion pulumi.Float64PtrInput `pulumi:"modelPackageVersion"`
	// A list of algorithms that were used to create a model package.
	SourceAlgorithms ModelCardSourceAlgorithmArrayInput `pulumi:"sourceAlgorithms"`
	// The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
	Task pulumi.StringPtrInput `pulumi:"task"`
}

func (ModelCardModelPackageDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelPackageDetails)(nil)).Elem()
}

func (i ModelCardModelPackageDetailsArgs) ToModelCardModelPackageDetailsOutput() ModelCardModelPackageDetailsOutput {
	return i.ToModelCardModelPackageDetailsOutputWithContext(context.Background())
}

func (i ModelCardModelPackageDetailsArgs) ToModelCardModelPackageDetailsOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageDetailsOutput)
}

func (i ModelCardModelPackageDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelPackageDetails] {
	return pulumix.Output[ModelCardModelPackageDetails]{
		OutputState: i.ToModelCardModelPackageDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardModelPackageDetailsArgs) ToModelCardModelPackageDetailsPtrOutput() ModelCardModelPackageDetailsPtrOutput {
	return i.ToModelCardModelPackageDetailsPtrOutputWithContext(context.Background())
}

func (i ModelCardModelPackageDetailsArgs) ToModelCardModelPackageDetailsPtrOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageDetailsOutput).ToModelCardModelPackageDetailsPtrOutputWithContext(ctx)
}

// ModelCardModelPackageDetailsPtrInput is an input type that accepts ModelCardModelPackageDetailsArgs, ModelCardModelPackageDetailsPtr and ModelCardModelPackageDetailsPtrOutput values.
// You can construct a concrete instance of `ModelCardModelPackageDetailsPtrInput` via:
//
//	        ModelCardModelPackageDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelCardModelPackageDetailsPtrInput interface {
	pulumi.Input

	ToModelCardModelPackageDetailsPtrOutput() ModelCardModelPackageDetailsPtrOutput
	ToModelCardModelPackageDetailsPtrOutputWithContext(context.Context) ModelCardModelPackageDetailsPtrOutput
}

type modelCardModelPackageDetailsPtrType ModelCardModelPackageDetailsArgs

func ModelCardModelPackageDetailsPtr(v *ModelCardModelPackageDetailsArgs) ModelCardModelPackageDetailsPtrInput {
	return (*modelCardModelPackageDetailsPtrType)(v)
}

func (*modelCardModelPackageDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelPackageDetails)(nil)).Elem()
}

func (i *modelCardModelPackageDetailsPtrType) ToModelCardModelPackageDetailsPtrOutput() ModelCardModelPackageDetailsPtrOutput {
	return i.ToModelCardModelPackageDetailsPtrOutputWithContext(context.Background())
}

func (i *modelCardModelPackageDetailsPtrType) ToModelCardModelPackageDetailsPtrOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardModelPackageDetailsPtrOutput)
}

func (i *modelCardModelPackageDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelPackageDetails] {
	return pulumix.Output[*ModelCardModelPackageDetails]{
		OutputState: i.ToModelCardModelPackageDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

// Metadata information related to model package version
type ModelCardModelPackageDetailsOutput struct{ *pulumi.OutputState }

func (ModelCardModelPackageDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardModelPackageDetails)(nil)).Elem()
}

func (o ModelCardModelPackageDetailsOutput) ToModelCardModelPackageDetailsOutput() ModelCardModelPackageDetailsOutput {
	return o
}

func (o ModelCardModelPackageDetailsOutput) ToModelCardModelPackageDetailsOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsOutput {
	return o
}

func (o ModelCardModelPackageDetailsOutput) ToModelCardModelPackageDetailsPtrOutput() ModelCardModelPackageDetailsPtrOutput {
	return o.ToModelCardModelPackageDetailsPtrOutputWithContext(context.Background())
}

func (o ModelCardModelPackageDetailsOutput) ToModelCardModelPackageDetailsPtrOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardModelPackageDetails) *ModelCardModelPackageDetails {
		return &v
	}).(ModelCardModelPackageDetailsPtrOutput)
}

func (o ModelCardModelPackageDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardModelPackageDetails] {
	return pulumix.Output[ModelCardModelPackageDetails]{
		OutputState: o.OutputState,
	}
}

// A description provided for the model approval
func (o ModelCardModelPackageDetailsOutput) ApprovalDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.ApprovalDescription }).(pulumi.StringPtrOutput)
}

// Information about the user who created model package.
func (o ModelCardModelPackageDetailsOutput) CreatedBy() ModelCardModelPackageCreatorPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *ModelCardModelPackageCreator { return v.CreatedBy }).(ModelCardModelPackageCreatorPtrOutput)
}

// The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
func (o ModelCardModelPackageDetailsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Details about inference jobs that can be run with models based on this model package.
func (o ModelCardModelPackageDetailsOutput) InferenceSpecification() ModelCardInferenceSpecificationPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *ModelCardInferenceSpecification { return v.InferenceSpecification }).(ModelCardInferenceSpecificationPtrOutput)
}

// Current approval status of model package
func (o ModelCardModelPackageDetailsOutput) ModelApprovalStatus() ModelCardModelPackageDetailsModelApprovalStatusPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *ModelCardModelPackageDetailsModelApprovalStatus {
		return v.ModelApprovalStatus
	}).(ModelCardModelPackageDetailsModelApprovalStatusPtrOutput)
}

// The Amazon Resource Name (ARN) of the model package
func (o ModelCardModelPackageDetailsOutput) ModelPackageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.ModelPackageArn }).(pulumi.StringPtrOutput)
}

// A brief summary of the model package
func (o ModelCardModelPackageDetailsOutput) ModelPackageDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.ModelPackageDescription }).(pulumi.StringPtrOutput)
}

// If the model is a versioned model, the name of the model group that the versioned model belongs to.
func (o ModelCardModelPackageDetailsOutput) ModelPackageGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.ModelPackageGroupName }).(pulumi.StringPtrOutput)
}

// Name of the model package
func (o ModelCardModelPackageDetailsOutput) ModelPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.ModelPackageName }).(pulumi.StringPtrOutput)
}

// Current status of model package
func (o ModelCardModelPackageDetailsOutput) ModelPackageStatus() ModelCardModelPackageDetailsModelPackageStatusPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *ModelCardModelPackageDetailsModelPackageStatus {
		return v.ModelPackageStatus
	}).(ModelCardModelPackageDetailsModelPackageStatusPtrOutput)
}

// Version of the model package
func (o ModelCardModelPackageDetailsOutput) ModelPackageVersion() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *float64 { return v.ModelPackageVersion }).(pulumi.Float64PtrOutput)
}

// A list of algorithms that were used to create a model package.
func (o ModelCardModelPackageDetailsOutput) SourceAlgorithms() ModelCardSourceAlgorithmArrayOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) []ModelCardSourceAlgorithm { return v.SourceAlgorithms }).(ModelCardSourceAlgorithmArrayOutput)
}

// The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
func (o ModelCardModelPackageDetailsOutput) Task() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardModelPackageDetails) *string { return v.Task }).(pulumi.StringPtrOutput)
}

type ModelCardModelPackageDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelCardModelPackageDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardModelPackageDetails)(nil)).Elem()
}

func (o ModelCardModelPackageDetailsPtrOutput) ToModelCardModelPackageDetailsPtrOutput() ModelCardModelPackageDetailsPtrOutput {
	return o
}

func (o ModelCardModelPackageDetailsPtrOutput) ToModelCardModelPackageDetailsPtrOutputWithContext(ctx context.Context) ModelCardModelPackageDetailsPtrOutput {
	return o
}

func (o ModelCardModelPackageDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardModelPackageDetails] {
	return pulumix.Output[*ModelCardModelPackageDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardModelPackageDetailsPtrOutput) Elem() ModelCardModelPackageDetailsOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) ModelCardModelPackageDetails {
		if v != nil {
			return *v
		}
		var ret ModelCardModelPackageDetails
		return ret
	}).(ModelCardModelPackageDetailsOutput)
}

// A description provided for the model approval
func (o ModelCardModelPackageDetailsPtrOutput) ApprovalDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.ApprovalDescription
	}).(pulumi.StringPtrOutput)
}

// Information about the user who created model package.
func (o ModelCardModelPackageDetailsPtrOutput) CreatedBy() ModelCardModelPackageCreatorPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *ModelCardModelPackageCreator {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(ModelCardModelPackageCreatorPtrOutput)
}

// The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
func (o ModelCardModelPackageDetailsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Details about inference jobs that can be run with models based on this model package.
func (o ModelCardModelPackageDetailsPtrOutput) InferenceSpecification() ModelCardInferenceSpecificationPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *ModelCardInferenceSpecification {
		if v == nil {
			return nil
		}
		return v.InferenceSpecification
	}).(ModelCardInferenceSpecificationPtrOutput)
}

// Current approval status of model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelApprovalStatus() ModelCardModelPackageDetailsModelApprovalStatusPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *ModelCardModelPackageDetailsModelApprovalStatus {
		if v == nil {
			return nil
		}
		return v.ModelApprovalStatus
	}).(ModelCardModelPackageDetailsModelApprovalStatusPtrOutput)
}

// The Amazon Resource Name (ARN) of the model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.ModelPackageArn
	}).(pulumi.StringPtrOutput)
}

// A brief summary of the model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.ModelPackageDescription
	}).(pulumi.StringPtrOutput)
}

// If the model is a versioned model, the name of the model group that the versioned model belongs to.
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.ModelPackageGroupName
	}).(pulumi.StringPtrOutput)
}

// Name of the model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.ModelPackageName
	}).(pulumi.StringPtrOutput)
}

// Current status of model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageStatus() ModelCardModelPackageDetailsModelPackageStatusPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *ModelCardModelPackageDetailsModelPackageStatus {
		if v == nil {
			return nil
		}
		return v.ModelPackageStatus
	}).(ModelCardModelPackageDetailsModelPackageStatusPtrOutput)
}

// Version of the model package
func (o ModelCardModelPackageDetailsPtrOutput) ModelPackageVersion() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *float64 {
		if v == nil {
			return nil
		}
		return v.ModelPackageVersion
	}).(pulumi.Float64PtrOutput)
}

// A list of algorithms that were used to create a model package.
func (o ModelCardModelPackageDetailsPtrOutput) SourceAlgorithms() ModelCardSourceAlgorithmArrayOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) []ModelCardSourceAlgorithm {
		if v == nil {
			return nil
		}
		return v.SourceAlgorithms
	}).(ModelCardSourceAlgorithmArrayOutput)
}

// The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
func (o ModelCardModelPackageDetailsPtrOutput) Task() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardModelPackageDetails) *string {
		if v == nil {
			return nil
		}
		return v.Task
	}).(pulumi.StringPtrOutput)
}

// the objective function the model will optimize for.
type ModelCardObjectiveFunction struct {
	// objective function that training job is optimized for.
	Function *ModelCardObjectiveFunctionFunctionProperties `pulumi:"function"`
	Notes    *string                                       `pulumi:"notes"`
}

// ModelCardObjectiveFunctionInput is an input type that accepts ModelCardObjectiveFunctionArgs and ModelCardObjectiveFunctionOutput values.
// You can construct a concrete instance of `ModelCardObjectiveFunctionInput` via:
//
//	ModelCardObjectiveFunctionArgs{...}
type ModelCardObjectiveFunctionInput interface {
	pulumi.Input

	ToModelCardObjectiveFunctionOutput() ModelCardObjectiveFunctionOutput
	ToModelCardObjectiveFunctionOutputWithContext(context.Context) ModelCardObjectiveFunctionOutput
}

// the objective function the model will optimize for.
type ModelCardObjectiveFunctionArgs struct {
	// objective function that training job is optimized for.
	Function ModelCardObjectiveFunctionFunctionPropertiesPtrInput `pulumi:"function"`
	Notes    pulumi.StringPtrInput                                `pulumi:"notes"`
}

func (ModelCardObjectiveFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardObjectiveFunction)(nil)).Elem()
}

func (i ModelCardObjectiveFunctionArgs) ToModelCardObjectiveFunctionOutput() ModelCardObjectiveFunctionOutput {
	return i.ToModelCardObjectiveFunctionOutputWithContext(context.Background())
}

func (i ModelCardObjectiveFunctionArgs) ToModelCardObjectiveFunctionOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionOutput)
}

func (i ModelCardObjectiveFunctionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardObjectiveFunction] {
	return pulumix.Output[ModelCardObjectiveFunction]{
		OutputState: i.ToModelCardObjectiveFunctionOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardObjectiveFunctionArgs) ToModelCardObjectiveFunctionPtrOutput() ModelCardObjectiveFunctionPtrOutput {
	return i.ToModelCardObjectiveFunctionPtrOutputWithContext(context.Background())
}

func (i ModelCardObjectiveFunctionArgs) ToModelCardObjectiveFunctionPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionOutput).ToModelCardObjectiveFunctionPtrOutputWithContext(ctx)
}

// ModelCardObjectiveFunctionPtrInput is an input type that accepts ModelCardObjectiveFunctionArgs, ModelCardObjectiveFunctionPtr and ModelCardObjectiveFunctionPtrOutput values.
// You can construct a concrete instance of `ModelCardObjectiveFunctionPtrInput` via:
//
//	        ModelCardObjectiveFunctionArgs{...}
//
//	or:
//
//	        nil
type ModelCardObjectiveFunctionPtrInput interface {
	pulumi.Input

	ToModelCardObjectiveFunctionPtrOutput() ModelCardObjectiveFunctionPtrOutput
	ToModelCardObjectiveFunctionPtrOutputWithContext(context.Context) ModelCardObjectiveFunctionPtrOutput
}

type modelCardObjectiveFunctionPtrType ModelCardObjectiveFunctionArgs

func ModelCardObjectiveFunctionPtr(v *ModelCardObjectiveFunctionArgs) ModelCardObjectiveFunctionPtrInput {
	return (*modelCardObjectiveFunctionPtrType)(v)
}

func (*modelCardObjectiveFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardObjectiveFunction)(nil)).Elem()
}

func (i *modelCardObjectiveFunctionPtrType) ToModelCardObjectiveFunctionPtrOutput() ModelCardObjectiveFunctionPtrOutput {
	return i.ToModelCardObjectiveFunctionPtrOutputWithContext(context.Background())
}

func (i *modelCardObjectiveFunctionPtrType) ToModelCardObjectiveFunctionPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionPtrOutput)
}

func (i *modelCardObjectiveFunctionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardObjectiveFunction] {
	return pulumix.Output[*ModelCardObjectiveFunction]{
		OutputState: i.ToModelCardObjectiveFunctionPtrOutputWithContext(ctx).OutputState,
	}
}

// the objective function the model will optimize for.
type ModelCardObjectiveFunctionOutput struct{ *pulumi.OutputState }

func (ModelCardObjectiveFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardObjectiveFunction)(nil)).Elem()
}

func (o ModelCardObjectiveFunctionOutput) ToModelCardObjectiveFunctionOutput() ModelCardObjectiveFunctionOutput {
	return o
}

func (o ModelCardObjectiveFunctionOutput) ToModelCardObjectiveFunctionOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionOutput {
	return o
}

func (o ModelCardObjectiveFunctionOutput) ToModelCardObjectiveFunctionPtrOutput() ModelCardObjectiveFunctionPtrOutput {
	return o.ToModelCardObjectiveFunctionPtrOutputWithContext(context.Background())
}

func (o ModelCardObjectiveFunctionOutput) ToModelCardObjectiveFunctionPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardObjectiveFunction) *ModelCardObjectiveFunction {
		return &v
	}).(ModelCardObjectiveFunctionPtrOutput)
}

func (o ModelCardObjectiveFunctionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardObjectiveFunction] {
	return pulumix.Output[ModelCardObjectiveFunction]{
		OutputState: o.OutputState,
	}
}

// objective function that training job is optimized for.
func (o ModelCardObjectiveFunctionOutput) Function() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o.ApplyT(func(v ModelCardObjectiveFunction) *ModelCardObjectiveFunctionFunctionProperties { return v.Function }).(ModelCardObjectiveFunctionFunctionPropertiesPtrOutput)
}

func (o ModelCardObjectiveFunctionOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardObjectiveFunction) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

type ModelCardObjectiveFunctionPtrOutput struct{ *pulumi.OutputState }

func (ModelCardObjectiveFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardObjectiveFunction)(nil)).Elem()
}

func (o ModelCardObjectiveFunctionPtrOutput) ToModelCardObjectiveFunctionPtrOutput() ModelCardObjectiveFunctionPtrOutput {
	return o
}

func (o ModelCardObjectiveFunctionPtrOutput) ToModelCardObjectiveFunctionPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionPtrOutput {
	return o
}

func (o ModelCardObjectiveFunctionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardObjectiveFunction] {
	return pulumix.Output[*ModelCardObjectiveFunction]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardObjectiveFunctionPtrOutput) Elem() ModelCardObjectiveFunctionOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunction) ModelCardObjectiveFunction {
		if v != nil {
			return *v
		}
		var ret ModelCardObjectiveFunction
		return ret
	}).(ModelCardObjectiveFunctionOutput)
}

// objective function that training job is optimized for.
func (o ModelCardObjectiveFunctionPtrOutput) Function() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunction) *ModelCardObjectiveFunctionFunctionProperties {
		if v == nil {
			return nil
		}
		return v.Function
	}).(ModelCardObjectiveFunctionFunctionPropertiesPtrOutput)
}

func (o ModelCardObjectiveFunctionPtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunction) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// objective function that training job is optimized for.
type ModelCardObjectiveFunctionFunctionProperties struct {
	Condition *string                                               `pulumi:"condition"`
	Facet     *string                                               `pulumi:"facet"`
	Function  *ModelCardObjectiveFunctionFunctionPropertiesFunction `pulumi:"function"`
}

// ModelCardObjectiveFunctionFunctionPropertiesInput is an input type that accepts ModelCardObjectiveFunctionFunctionPropertiesArgs and ModelCardObjectiveFunctionFunctionPropertiesOutput values.
// You can construct a concrete instance of `ModelCardObjectiveFunctionFunctionPropertiesInput` via:
//
//	ModelCardObjectiveFunctionFunctionPropertiesArgs{...}
type ModelCardObjectiveFunctionFunctionPropertiesInput interface {
	pulumi.Input

	ToModelCardObjectiveFunctionFunctionPropertiesOutput() ModelCardObjectiveFunctionFunctionPropertiesOutput
	ToModelCardObjectiveFunctionFunctionPropertiesOutputWithContext(context.Context) ModelCardObjectiveFunctionFunctionPropertiesOutput
}

// objective function that training job is optimized for.
type ModelCardObjectiveFunctionFunctionPropertiesArgs struct {
	Condition pulumi.StringPtrInput                                        `pulumi:"condition"`
	Facet     pulumi.StringPtrInput                                        `pulumi:"facet"`
	Function  ModelCardObjectiveFunctionFunctionPropertiesFunctionPtrInput `pulumi:"function"`
}

func (ModelCardObjectiveFunctionFunctionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardObjectiveFunctionFunctionProperties)(nil)).Elem()
}

func (i ModelCardObjectiveFunctionFunctionPropertiesArgs) ToModelCardObjectiveFunctionFunctionPropertiesOutput() ModelCardObjectiveFunctionFunctionPropertiesOutput {
	return i.ToModelCardObjectiveFunctionFunctionPropertiesOutputWithContext(context.Background())
}

func (i ModelCardObjectiveFunctionFunctionPropertiesArgs) ToModelCardObjectiveFunctionFunctionPropertiesOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionFunctionPropertiesOutput)
}

func (i ModelCardObjectiveFunctionFunctionPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardObjectiveFunctionFunctionProperties] {
	return pulumix.Output[ModelCardObjectiveFunctionFunctionProperties]{
		OutputState: i.ToModelCardObjectiveFunctionFunctionPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardObjectiveFunctionFunctionPropertiesArgs) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutput() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return i.ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelCardObjectiveFunctionFunctionPropertiesArgs) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionFunctionPropertiesOutput).ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx)
}

// ModelCardObjectiveFunctionFunctionPropertiesPtrInput is an input type that accepts ModelCardObjectiveFunctionFunctionPropertiesArgs, ModelCardObjectiveFunctionFunctionPropertiesPtr and ModelCardObjectiveFunctionFunctionPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelCardObjectiveFunctionFunctionPropertiesPtrInput` via:
//
//	        ModelCardObjectiveFunctionFunctionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelCardObjectiveFunctionFunctionPropertiesPtrInput interface {
	pulumi.Input

	ToModelCardObjectiveFunctionFunctionPropertiesPtrOutput() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput
	ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(context.Context) ModelCardObjectiveFunctionFunctionPropertiesPtrOutput
}

type modelCardObjectiveFunctionFunctionPropertiesPtrType ModelCardObjectiveFunctionFunctionPropertiesArgs

func ModelCardObjectiveFunctionFunctionPropertiesPtr(v *ModelCardObjectiveFunctionFunctionPropertiesArgs) ModelCardObjectiveFunctionFunctionPropertiesPtrInput {
	return (*modelCardObjectiveFunctionFunctionPropertiesPtrType)(v)
}

func (*modelCardObjectiveFunctionFunctionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardObjectiveFunctionFunctionProperties)(nil)).Elem()
}

func (i *modelCardObjectiveFunctionFunctionPropertiesPtrType) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutput() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return i.ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelCardObjectiveFunctionFunctionPropertiesPtrType) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardObjectiveFunctionFunctionPropertiesPtrOutput)
}

func (i *modelCardObjectiveFunctionFunctionPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardObjectiveFunctionFunctionProperties] {
	return pulumix.Output[*ModelCardObjectiveFunctionFunctionProperties]{
		OutputState: i.ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// objective function that training job is optimized for.
type ModelCardObjectiveFunctionFunctionPropertiesOutput struct{ *pulumi.OutputState }

func (ModelCardObjectiveFunctionFunctionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardObjectiveFunctionFunctionProperties)(nil)).Elem()
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) ToModelCardObjectiveFunctionFunctionPropertiesOutput() ModelCardObjectiveFunctionFunctionPropertiesOutput {
	return o
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) ToModelCardObjectiveFunctionFunctionPropertiesOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesOutput {
	return o
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutput() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o.ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardObjectiveFunctionFunctionProperties) *ModelCardObjectiveFunctionFunctionProperties {
		return &v
	}).(ModelCardObjectiveFunctionFunctionPropertiesPtrOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardObjectiveFunctionFunctionProperties] {
	return pulumix.Output[ModelCardObjectiveFunctionFunctionProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardObjectiveFunctionFunctionProperties) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardObjectiveFunctionFunctionProperties) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesOutput) Function() ModelCardObjectiveFunctionFunctionPropertiesFunctionPtrOutput {
	return o.ApplyT(func(v ModelCardObjectiveFunctionFunctionProperties) *ModelCardObjectiveFunctionFunctionPropertiesFunction {
		return v.Function
	}).(ModelCardObjectiveFunctionFunctionPropertiesFunctionPtrOutput)
}

type ModelCardObjectiveFunctionFunctionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardObjectiveFunctionFunctionProperties)(nil)).Elem()
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutput() ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) ToModelCardObjectiveFunctionFunctionPropertiesPtrOutputWithContext(ctx context.Context) ModelCardObjectiveFunctionFunctionPropertiesPtrOutput {
	return o
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardObjectiveFunctionFunctionProperties] {
	return pulumix.Output[*ModelCardObjectiveFunctionFunctionProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) Elem() ModelCardObjectiveFunctionFunctionPropertiesOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunctionFunctionProperties) ModelCardObjectiveFunctionFunctionProperties {
		if v != nil {
			return *v
		}
		var ret ModelCardObjectiveFunctionFunctionProperties
		return ret
	}).(ModelCardObjectiveFunctionFunctionPropertiesOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunctionFunctionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunctionFunctionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

func (o ModelCardObjectiveFunctionFunctionPropertiesPtrOutput) Function() ModelCardObjectiveFunctionFunctionPropertiesFunctionPtrOutput {
	return o.ApplyT(func(v *ModelCardObjectiveFunctionFunctionProperties) *ModelCardObjectiveFunctionFunctionPropertiesFunction {
		if v == nil {
			return nil
		}
		return v.Function
	}).(ModelCardObjectiveFunctionFunctionPropertiesFunctionPtrOutput)
}

// An optional Key Management Service key to encrypt, decrypt, and re-encrypt model card content for regulated workloads with highly sensitive data.
type ModelCardSecurityConfig struct {
	// A Key Management Service key ID to use for encrypting a model card.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// ModelCardSecurityConfigInput is an input type that accepts ModelCardSecurityConfigArgs and ModelCardSecurityConfigOutput values.
// You can construct a concrete instance of `ModelCardSecurityConfigInput` via:
//
//	ModelCardSecurityConfigArgs{...}
type ModelCardSecurityConfigInput interface {
	pulumi.Input

	ToModelCardSecurityConfigOutput() ModelCardSecurityConfigOutput
	ToModelCardSecurityConfigOutputWithContext(context.Context) ModelCardSecurityConfigOutput
}

// An optional Key Management Service key to encrypt, decrypt, and re-encrypt model card content for regulated workloads with highly sensitive data.
type ModelCardSecurityConfigArgs struct {
	// A Key Management Service key ID to use for encrypting a model card.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (ModelCardSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardSecurityConfig)(nil)).Elem()
}

func (i ModelCardSecurityConfigArgs) ToModelCardSecurityConfigOutput() ModelCardSecurityConfigOutput {
	return i.ToModelCardSecurityConfigOutputWithContext(context.Background())
}

func (i ModelCardSecurityConfigArgs) ToModelCardSecurityConfigOutputWithContext(ctx context.Context) ModelCardSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardSecurityConfigOutput)
}

func (i ModelCardSecurityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardSecurityConfig] {
	return pulumix.Output[ModelCardSecurityConfig]{
		OutputState: i.ToModelCardSecurityConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardSecurityConfigArgs) ToModelCardSecurityConfigPtrOutput() ModelCardSecurityConfigPtrOutput {
	return i.ToModelCardSecurityConfigPtrOutputWithContext(context.Background())
}

func (i ModelCardSecurityConfigArgs) ToModelCardSecurityConfigPtrOutputWithContext(ctx context.Context) ModelCardSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardSecurityConfigOutput).ToModelCardSecurityConfigPtrOutputWithContext(ctx)
}

// ModelCardSecurityConfigPtrInput is an input type that accepts ModelCardSecurityConfigArgs, ModelCardSecurityConfigPtr and ModelCardSecurityConfigPtrOutput values.
// You can construct a concrete instance of `ModelCardSecurityConfigPtrInput` via:
//
//	        ModelCardSecurityConfigArgs{...}
//
//	or:
//
//	        nil
type ModelCardSecurityConfigPtrInput interface {
	pulumi.Input

	ToModelCardSecurityConfigPtrOutput() ModelCardSecurityConfigPtrOutput
	ToModelCardSecurityConfigPtrOutputWithContext(context.Context) ModelCardSecurityConfigPtrOutput
}

type modelCardSecurityConfigPtrType ModelCardSecurityConfigArgs

func ModelCardSecurityConfigPtr(v *ModelCardSecurityConfigArgs) ModelCardSecurityConfigPtrInput {
	return (*modelCardSecurityConfigPtrType)(v)
}

func (*modelCardSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardSecurityConfig)(nil)).Elem()
}

func (i *modelCardSecurityConfigPtrType) ToModelCardSecurityConfigPtrOutput() ModelCardSecurityConfigPtrOutput {
	return i.ToModelCardSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *modelCardSecurityConfigPtrType) ToModelCardSecurityConfigPtrOutputWithContext(ctx context.Context) ModelCardSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardSecurityConfigPtrOutput)
}

func (i *modelCardSecurityConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardSecurityConfig] {
	return pulumix.Output[*ModelCardSecurityConfig]{
		OutputState: i.ToModelCardSecurityConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// An optional Key Management Service key to encrypt, decrypt, and re-encrypt model card content for regulated workloads with highly sensitive data.
type ModelCardSecurityConfigOutput struct{ *pulumi.OutputState }

func (ModelCardSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardSecurityConfig)(nil)).Elem()
}

func (o ModelCardSecurityConfigOutput) ToModelCardSecurityConfigOutput() ModelCardSecurityConfigOutput {
	return o
}

func (o ModelCardSecurityConfigOutput) ToModelCardSecurityConfigOutputWithContext(ctx context.Context) ModelCardSecurityConfigOutput {
	return o
}

func (o ModelCardSecurityConfigOutput) ToModelCardSecurityConfigPtrOutput() ModelCardSecurityConfigPtrOutput {
	return o.ToModelCardSecurityConfigPtrOutputWithContext(context.Background())
}

func (o ModelCardSecurityConfigOutput) ToModelCardSecurityConfigPtrOutputWithContext(ctx context.Context) ModelCardSecurityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardSecurityConfig) *ModelCardSecurityConfig {
		return &v
	}).(ModelCardSecurityConfigPtrOutput)
}

func (o ModelCardSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardSecurityConfig] {
	return pulumix.Output[ModelCardSecurityConfig]{
		OutputState: o.OutputState,
	}
}

// A Key Management Service key ID to use for encrypting a model card.
func (o ModelCardSecurityConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardSecurityConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type ModelCardSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelCardSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardSecurityConfig)(nil)).Elem()
}

func (o ModelCardSecurityConfigPtrOutput) ToModelCardSecurityConfigPtrOutput() ModelCardSecurityConfigPtrOutput {
	return o
}

func (o ModelCardSecurityConfigPtrOutput) ToModelCardSecurityConfigPtrOutputWithContext(ctx context.Context) ModelCardSecurityConfigPtrOutput {
	return o
}

func (o ModelCardSecurityConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardSecurityConfig] {
	return pulumix.Output[*ModelCardSecurityConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardSecurityConfigPtrOutput) Elem() ModelCardSecurityConfigOutput {
	return o.ApplyT(func(v *ModelCardSecurityConfig) ModelCardSecurityConfig {
		if v != nil {
			return *v
		}
		var ret ModelCardSecurityConfig
		return ret
	}).(ModelCardSecurityConfigOutput)
}

// A Key Management Service key ID to use for encrypting a model card.
func (o ModelCardSecurityConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardSecurityConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// metric data
type ModelCardSimpleMetric struct {
	Name      string                    `pulumi:"name"`
	Notes     *string                   `pulumi:"notes"`
	Type      ModelCardSimpleMetricType `pulumi:"type"`
	Value     interface{}               `pulumi:"value"`
	XAxisName *string                   `pulumi:"xAxisName"`
	YAxisName *string                   `pulumi:"yAxisName"`
}

type ModelCardSourceAlgorithm struct {
	// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
	AlgorithmName string `pulumi:"algorithmName"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored.
	ModelDataUrl *string `pulumi:"modelDataUrl"`
}

// ModelCardSourceAlgorithmInput is an input type that accepts ModelCardSourceAlgorithmArgs and ModelCardSourceAlgorithmOutput values.
// You can construct a concrete instance of `ModelCardSourceAlgorithmInput` via:
//
//	ModelCardSourceAlgorithmArgs{...}
type ModelCardSourceAlgorithmInput interface {
	pulumi.Input

	ToModelCardSourceAlgorithmOutput() ModelCardSourceAlgorithmOutput
	ToModelCardSourceAlgorithmOutputWithContext(context.Context) ModelCardSourceAlgorithmOutput
}

type ModelCardSourceAlgorithmArgs struct {
	// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
	AlgorithmName pulumi.StringInput `pulumi:"algorithmName"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored.
	ModelDataUrl pulumi.StringPtrInput `pulumi:"modelDataUrl"`
}

func (ModelCardSourceAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardSourceAlgorithm)(nil)).Elem()
}

func (i ModelCardSourceAlgorithmArgs) ToModelCardSourceAlgorithmOutput() ModelCardSourceAlgorithmOutput {
	return i.ToModelCardSourceAlgorithmOutputWithContext(context.Background())
}

func (i ModelCardSourceAlgorithmArgs) ToModelCardSourceAlgorithmOutputWithContext(ctx context.Context) ModelCardSourceAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardSourceAlgorithmOutput)
}

func (i ModelCardSourceAlgorithmArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardSourceAlgorithm] {
	return pulumix.Output[ModelCardSourceAlgorithm]{
		OutputState: i.ToModelCardSourceAlgorithmOutputWithContext(ctx).OutputState,
	}
}

// ModelCardSourceAlgorithmArrayInput is an input type that accepts ModelCardSourceAlgorithmArray and ModelCardSourceAlgorithmArrayOutput values.
// You can construct a concrete instance of `ModelCardSourceAlgorithmArrayInput` via:
//
//	ModelCardSourceAlgorithmArray{ ModelCardSourceAlgorithmArgs{...} }
type ModelCardSourceAlgorithmArrayInput interface {
	pulumi.Input

	ToModelCardSourceAlgorithmArrayOutput() ModelCardSourceAlgorithmArrayOutput
	ToModelCardSourceAlgorithmArrayOutputWithContext(context.Context) ModelCardSourceAlgorithmArrayOutput
}

type ModelCardSourceAlgorithmArray []ModelCardSourceAlgorithmInput

func (ModelCardSourceAlgorithmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardSourceAlgorithm)(nil)).Elem()
}

func (i ModelCardSourceAlgorithmArray) ToModelCardSourceAlgorithmArrayOutput() ModelCardSourceAlgorithmArrayOutput {
	return i.ToModelCardSourceAlgorithmArrayOutputWithContext(context.Background())
}

func (i ModelCardSourceAlgorithmArray) ToModelCardSourceAlgorithmArrayOutputWithContext(ctx context.Context) ModelCardSourceAlgorithmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardSourceAlgorithmArrayOutput)
}

func (i ModelCardSourceAlgorithmArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardSourceAlgorithm] {
	return pulumix.Output[[]ModelCardSourceAlgorithm]{
		OutputState: i.ToModelCardSourceAlgorithmArrayOutputWithContext(ctx).OutputState,
	}
}

type ModelCardSourceAlgorithmOutput struct{ *pulumi.OutputState }

func (ModelCardSourceAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardSourceAlgorithm)(nil)).Elem()
}

func (o ModelCardSourceAlgorithmOutput) ToModelCardSourceAlgorithmOutput() ModelCardSourceAlgorithmOutput {
	return o
}

func (o ModelCardSourceAlgorithmOutput) ToModelCardSourceAlgorithmOutputWithContext(ctx context.Context) ModelCardSourceAlgorithmOutput {
	return o
}

func (o ModelCardSourceAlgorithmOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardSourceAlgorithm] {
	return pulumix.Output[ModelCardSourceAlgorithm]{
		OutputState: o.OutputState,
	}
}

// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
func (o ModelCardSourceAlgorithmOutput) AlgorithmName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardSourceAlgorithm) string { return v.AlgorithmName }).(pulumi.StringOutput)
}

// The Amazon S3 path where the model artifacts, which result from model training, are stored.
func (o ModelCardSourceAlgorithmOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardSourceAlgorithm) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

type ModelCardSourceAlgorithmArrayOutput struct{ *pulumi.OutputState }

func (ModelCardSourceAlgorithmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardSourceAlgorithm)(nil)).Elem()
}

func (o ModelCardSourceAlgorithmArrayOutput) ToModelCardSourceAlgorithmArrayOutput() ModelCardSourceAlgorithmArrayOutput {
	return o
}

func (o ModelCardSourceAlgorithmArrayOutput) ToModelCardSourceAlgorithmArrayOutputWithContext(ctx context.Context) ModelCardSourceAlgorithmArrayOutput {
	return o
}

func (o ModelCardSourceAlgorithmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardSourceAlgorithm] {
	return pulumix.Output[[]ModelCardSourceAlgorithm]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardSourceAlgorithmArrayOutput) Index(i pulumi.IntInput) ModelCardSourceAlgorithmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardSourceAlgorithm {
		return vs[0].([]ModelCardSourceAlgorithm)[vs[1].(int)]
	}).(ModelCardSourceAlgorithmOutput)
}

// A key-value pair to associate with a resource.
type ModelCardTag struct {
	// The tag key. Tag keys must be unique per resource.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

// ModelCardTagInput is an input type that accepts ModelCardTagArgs and ModelCardTagOutput values.
// You can construct a concrete instance of `ModelCardTagInput` via:
//
//	ModelCardTagArgs{...}
type ModelCardTagInput interface {
	pulumi.Input

	ToModelCardTagOutput() ModelCardTagOutput
	ToModelCardTagOutputWithContext(context.Context) ModelCardTagOutput
}

// A key-value pair to associate with a resource.
type ModelCardTagArgs struct {
	// The tag key. Tag keys must be unique per resource.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelCardTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTag)(nil)).Elem()
}

func (i ModelCardTagArgs) ToModelCardTagOutput() ModelCardTagOutput {
	return i.ToModelCardTagOutputWithContext(context.Background())
}

func (i ModelCardTagArgs) ToModelCardTagOutputWithContext(ctx context.Context) ModelCardTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTagOutput)
}

func (i ModelCardTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTag] {
	return pulumix.Output[ModelCardTag]{
		OutputState: i.ToModelCardTagOutputWithContext(ctx).OutputState,
	}
}

// ModelCardTagArrayInput is an input type that accepts ModelCardTagArray and ModelCardTagArrayOutput values.
// You can construct a concrete instance of `ModelCardTagArrayInput` via:
//
//	ModelCardTagArray{ ModelCardTagArgs{...} }
type ModelCardTagArrayInput interface {
	pulumi.Input

	ToModelCardTagArrayOutput() ModelCardTagArrayOutput
	ToModelCardTagArrayOutputWithContext(context.Context) ModelCardTagArrayOutput
}

type ModelCardTagArray []ModelCardTagInput

func (ModelCardTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTag)(nil)).Elem()
}

func (i ModelCardTagArray) ToModelCardTagArrayOutput() ModelCardTagArrayOutput {
	return i.ToModelCardTagArrayOutputWithContext(context.Background())
}

func (i ModelCardTagArray) ToModelCardTagArrayOutputWithContext(ctx context.Context) ModelCardTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTagArrayOutput)
}

func (i ModelCardTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTag] {
	return pulumix.Output[[]ModelCardTag]{
		OutputState: i.ToModelCardTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelCardTagOutput struct{ *pulumi.OutputState }

func (ModelCardTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTag)(nil)).Elem()
}

func (o ModelCardTagOutput) ToModelCardTagOutput() ModelCardTagOutput {
	return o
}

func (o ModelCardTagOutput) ToModelCardTagOutputWithContext(ctx context.Context) ModelCardTagOutput {
	return o
}

func (o ModelCardTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTag] {
	return pulumix.Output[ModelCardTag]{
		OutputState: o.OutputState,
	}
}

// The tag key. Tag keys must be unique per resource.
func (o ModelCardTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value.
func (o ModelCardTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelCardTagArrayOutput struct{ *pulumi.OutputState }

func (ModelCardTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTag)(nil)).Elem()
}

func (o ModelCardTagArrayOutput) ToModelCardTagArrayOutput() ModelCardTagArrayOutput {
	return o
}

func (o ModelCardTagArrayOutput) ToModelCardTagArrayOutputWithContext(ctx context.Context) ModelCardTagArrayOutput {
	return o
}

func (o ModelCardTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTag] {
	return pulumix.Output[[]ModelCardTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTagArrayOutput) Index(i pulumi.IntInput) ModelCardTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardTag {
		return vs[0].([]ModelCardTag)[vs[1].(int)]
	}).(ModelCardTagOutput)
}

// Overview about the training.
type ModelCardTrainingDetails struct {
	ObjectiveFunction    *ModelCardObjectiveFunction                           `pulumi:"objectiveFunction"`
	TrainingJobDetails   *ModelCardTrainingDetailsTrainingJobDetailsProperties `pulumi:"trainingJobDetails"`
	TrainingObservations *string                                               `pulumi:"trainingObservations"`
}

// ModelCardTrainingDetailsInput is an input type that accepts ModelCardTrainingDetailsArgs and ModelCardTrainingDetailsOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsInput` via:
//
//	ModelCardTrainingDetailsArgs{...}
type ModelCardTrainingDetailsInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsOutput() ModelCardTrainingDetailsOutput
	ToModelCardTrainingDetailsOutputWithContext(context.Context) ModelCardTrainingDetailsOutput
}

// Overview about the training.
type ModelCardTrainingDetailsArgs struct {
	ObjectiveFunction    ModelCardObjectiveFunctionPtrInput                           `pulumi:"objectiveFunction"`
	TrainingJobDetails   ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput `pulumi:"trainingJobDetails"`
	TrainingObservations pulumi.StringPtrInput                                        `pulumi:"trainingObservations"`
}

func (ModelCardTrainingDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetails)(nil)).Elem()
}

func (i ModelCardTrainingDetailsArgs) ToModelCardTrainingDetailsOutput() ModelCardTrainingDetailsOutput {
	return i.ToModelCardTrainingDetailsOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsArgs) ToModelCardTrainingDetailsOutputWithContext(ctx context.Context) ModelCardTrainingDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsOutput)
}

func (i ModelCardTrainingDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetails] {
	return pulumix.Output[ModelCardTrainingDetails]{
		OutputState: i.ToModelCardTrainingDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardTrainingDetailsArgs) ToModelCardTrainingDetailsPtrOutput() ModelCardTrainingDetailsPtrOutput {
	return i.ToModelCardTrainingDetailsPtrOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsArgs) ToModelCardTrainingDetailsPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsOutput).ToModelCardTrainingDetailsPtrOutputWithContext(ctx)
}

// ModelCardTrainingDetailsPtrInput is an input type that accepts ModelCardTrainingDetailsArgs, ModelCardTrainingDetailsPtr and ModelCardTrainingDetailsPtrOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsPtrInput` via:
//
//	        ModelCardTrainingDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelCardTrainingDetailsPtrInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsPtrOutput() ModelCardTrainingDetailsPtrOutput
	ToModelCardTrainingDetailsPtrOutputWithContext(context.Context) ModelCardTrainingDetailsPtrOutput
}

type modelCardTrainingDetailsPtrType ModelCardTrainingDetailsArgs

func ModelCardTrainingDetailsPtr(v *ModelCardTrainingDetailsArgs) ModelCardTrainingDetailsPtrInput {
	return (*modelCardTrainingDetailsPtrType)(v)
}

func (*modelCardTrainingDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetails)(nil)).Elem()
}

func (i *modelCardTrainingDetailsPtrType) ToModelCardTrainingDetailsPtrOutput() ModelCardTrainingDetailsPtrOutput {
	return i.ToModelCardTrainingDetailsPtrOutputWithContext(context.Background())
}

func (i *modelCardTrainingDetailsPtrType) ToModelCardTrainingDetailsPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsPtrOutput)
}

func (i *modelCardTrainingDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetails] {
	return pulumix.Output[*ModelCardTrainingDetails]{
		OutputState: i.ToModelCardTrainingDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

// Overview about the training.
type ModelCardTrainingDetailsOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetails)(nil)).Elem()
}

func (o ModelCardTrainingDetailsOutput) ToModelCardTrainingDetailsOutput() ModelCardTrainingDetailsOutput {
	return o
}

func (o ModelCardTrainingDetailsOutput) ToModelCardTrainingDetailsOutputWithContext(ctx context.Context) ModelCardTrainingDetailsOutput {
	return o
}

func (o ModelCardTrainingDetailsOutput) ToModelCardTrainingDetailsPtrOutput() ModelCardTrainingDetailsPtrOutput {
	return o.ToModelCardTrainingDetailsPtrOutputWithContext(context.Background())
}

func (o ModelCardTrainingDetailsOutput) ToModelCardTrainingDetailsPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardTrainingDetails) *ModelCardTrainingDetails {
		return &v
	}).(ModelCardTrainingDetailsPtrOutput)
}

func (o ModelCardTrainingDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetails] {
	return pulumix.Output[ModelCardTrainingDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingDetailsOutput) ObjectiveFunction() ModelCardObjectiveFunctionPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingDetails) *ModelCardObjectiveFunction { return v.ObjectiveFunction }).(ModelCardObjectiveFunctionPtrOutput)
}

func (o ModelCardTrainingDetailsOutput) TrainingJobDetails() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingDetails) *ModelCardTrainingDetailsTrainingJobDetailsProperties {
		return v.TrainingJobDetails
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsOutput) TrainingObservations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingDetails) *string { return v.TrainingObservations }).(pulumi.StringPtrOutput)
}

type ModelCardTrainingDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetails)(nil)).Elem()
}

func (o ModelCardTrainingDetailsPtrOutput) ToModelCardTrainingDetailsPtrOutput() ModelCardTrainingDetailsPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsPtrOutput) ToModelCardTrainingDetailsPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetails] {
	return pulumix.Output[*ModelCardTrainingDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingDetailsPtrOutput) Elem() ModelCardTrainingDetailsOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetails) ModelCardTrainingDetails {
		if v != nil {
			return *v
		}
		var ret ModelCardTrainingDetails
		return ret
	}).(ModelCardTrainingDetailsOutput)
}

func (o ModelCardTrainingDetailsPtrOutput) ObjectiveFunction() ModelCardObjectiveFunctionPtrOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetails) *ModelCardObjectiveFunction {
		if v == nil {
			return nil
		}
		return v.ObjectiveFunction
	}).(ModelCardObjectiveFunctionPtrOutput)
}

func (o ModelCardTrainingDetailsPtrOutput) TrainingJobDetails() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetails) *ModelCardTrainingDetailsTrainingJobDetailsProperties {
		if v == nil {
			return nil
		}
		return v.TrainingJobDetails
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsPtrOutput) TrainingObservations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetails) *string {
		if v == nil {
			return nil
		}
		return v.TrainingObservations
	}).(pulumi.StringPtrOutput)
}

type ModelCardTrainingDetailsTrainingJobDetailsProperties struct {
	HyperParameters []ModelCardTrainingHyperParameter `pulumi:"hyperParameters"`
	// SageMaker Training job arn.
	TrainingArn *string `pulumi:"trainingArn"`
	// Location of the model datasets.
	TrainingDatasets            []string                                                                           `pulumi:"trainingDatasets"`
	TrainingEnvironment         *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties `pulumi:"trainingEnvironment"`
	TrainingMetrics             []ModelCardTrainingMetric                                                          `pulumi:"trainingMetrics"`
	UserProvidedHyperParameters []ModelCardTrainingHyperParameter                                                  `pulumi:"userProvidedHyperParameters"`
	UserProvidedTrainingMetrics []ModelCardTrainingMetric                                                          `pulumi:"userProvidedTrainingMetrics"`
}

// ModelCardTrainingDetailsTrainingJobDetailsPropertiesInput is an input type that accepts ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs and ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsTrainingJobDetailsPropertiesInput` via:
//
//	ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs{...}
type ModelCardTrainingDetailsTrainingJobDetailsPropertiesInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput
	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutputWithContext(context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs struct {
	HyperParameters ModelCardTrainingHyperParameterArrayInput `pulumi:"hyperParameters"`
	// SageMaker Training job arn.
	TrainingArn pulumi.StringPtrInput `pulumi:"trainingArn"`
	// Location of the model datasets.
	TrainingDatasets            pulumi.StringArrayInput                                                                   `pulumi:"trainingDatasets"`
	TrainingEnvironment         ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput `pulumi:"trainingEnvironment"`
	TrainingMetrics             ModelCardTrainingMetricArrayInput                                                         `pulumi:"trainingMetrics"`
	UserProvidedHyperParameters ModelCardTrainingHyperParameterArrayInput                                                 `pulumi:"userProvidedHyperParameters"`
	UserProvidedTrainingMetrics ModelCardTrainingMetricArrayInput                                                         `pulumi:"userProvidedTrainingMetrics"`
}

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsProperties)(nil)).Elem()
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput)
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsProperties] {
	return pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsProperties]{
		OutputState: i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput).ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx)
}

// ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput is an input type that accepts ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs, ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtr and ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput` via:
//
//	        ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput
	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput
}

type modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs

func ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtr(v *ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput {
	return (*modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType)(v)
}

func (*modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetailsTrainingJobDetailsProperties)(nil)).Elem()
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput)
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsProperties] {
	return pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsProperties]{
		OutputState: i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsProperties)(nil)).Elem()
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardTrainingDetailsTrainingJobDetailsProperties) *ModelCardTrainingDetailsTrainingJobDetailsProperties {
		return &v
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsProperties] {
	return pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) HyperParameters() ModelCardTrainingHyperParameterArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingHyperParameter {
		return v.HyperParameters
	}).(ModelCardTrainingHyperParameterArrayOutput)
}

// SageMaker Training job arn.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) TrainingArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) *string { return v.TrainingArn }).(pulumi.StringPtrOutput)
}

// Location of the model datasets.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) TrainingDatasets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) []string { return v.TrainingDatasets }).(pulumi.StringArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) TrainingEnvironment() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties {
		return v.TrainingEnvironment
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) TrainingMetrics() ModelCardTrainingMetricArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingMetric {
		return v.TrainingMetrics
	}).(ModelCardTrainingMetricArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) UserProvidedHyperParameters() ModelCardTrainingHyperParameterArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingHyperParameter {
		return v.UserProvidedHyperParameters
	}).(ModelCardTrainingHyperParameterArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput) UserProvidedTrainingMetrics() ModelCardTrainingMetricArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingMetric {
		return v.UserProvidedTrainingMetrics
	}).(ModelCardTrainingMetricArrayOutput)
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetailsTrainingJobDetailsProperties)(nil)).Elem()
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsProperties] {
	return pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) Elem() ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) ModelCardTrainingDetailsTrainingJobDetailsProperties {
		if v != nil {
			return *v
		}
		var ret ModelCardTrainingDetailsTrainingJobDetailsProperties
		return ret
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) HyperParameters() ModelCardTrainingHyperParameterArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingHyperParameter {
		if v == nil {
			return nil
		}
		return v.HyperParameters
	}).(ModelCardTrainingHyperParameterArrayOutput)
}

// SageMaker Training job arn.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) TrainingArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.TrainingArn
	}).(pulumi.StringPtrOutput)
}

// Location of the model datasets.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) TrainingDatasets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) []string {
		if v == nil {
			return nil
		}
		return v.TrainingDatasets
	}).(pulumi.StringArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) TrainingEnvironment() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties {
		if v == nil {
			return nil
		}
		return v.TrainingEnvironment
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) TrainingMetrics() ModelCardTrainingMetricArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingMetric {
		if v == nil {
			return nil
		}
		return v.TrainingMetrics
	}).(ModelCardTrainingMetricArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) UserProvidedHyperParameters() ModelCardTrainingHyperParameterArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingHyperParameter {
		if v == nil {
			return nil
		}
		return v.UserProvidedHyperParameters
	}).(ModelCardTrainingHyperParameterArrayOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput) UserProvidedTrainingMetrics() ModelCardTrainingMetricArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsProperties) []ModelCardTrainingMetric {
		if v == nil {
			return nil
		}
		return v.UserProvidedTrainingMetrics
	}).(ModelCardTrainingMetricArrayOutput)
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties struct {
	// SageMaker training image uri.
	ContainerImage []string `pulumi:"containerImage"`
}

// ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesInput is an input type that accepts ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs and ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesInput` via:
//
//	ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs{...}
type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput
	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutputWithContext(context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs struct {
	// SageMaker training image uri.
	ContainerImage pulumi.StringArrayInput `pulumi:"containerImage"`
}

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties)(nil)).Elem()
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput)
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties] {
	return pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties]{
		OutputState: i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput).ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx)
}

// ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput is an input type that accepts ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs, ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtr and ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput` via:
//
//	        ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput interface {
	pulumi.Input

	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput
	ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput
}

type modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs

func ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtr(v *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput {
	return (*modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType)(v)
}

func (*modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties)(nil)).Elem()
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput)
}

func (i *modelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties] {
	return pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties]{
		OutputState: i.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties)(nil)).Elem()
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o.ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties) *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties {
		return &v
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput)
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties] {
	return pulumix.Output[ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties]{
		OutputState: o.OutputState,
	}
}

// SageMaker training image uri.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput) ContainerImage() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties) []string {
		return v.ContainerImage
	}).(pulumi.StringArrayOutput)
}

type ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties)(nil)).Elem()
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) ToModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput {
	return o
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties] {
	return pulumix.Output[*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) Elem() ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties) ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties {
		if v != nil {
			return *v
		}
		var ret ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties
		return ret
	}).(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput)
}

// SageMaker training image uri.
func (o ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput) ContainerImage() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentProperties) []string {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(pulumi.StringArrayOutput)
}

// training hyper parameter
type ModelCardTrainingHyperParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ModelCardTrainingHyperParameterInput is an input type that accepts ModelCardTrainingHyperParameterArgs and ModelCardTrainingHyperParameterOutput values.
// You can construct a concrete instance of `ModelCardTrainingHyperParameterInput` via:
//
//	ModelCardTrainingHyperParameterArgs{...}
type ModelCardTrainingHyperParameterInput interface {
	pulumi.Input

	ToModelCardTrainingHyperParameterOutput() ModelCardTrainingHyperParameterOutput
	ToModelCardTrainingHyperParameterOutputWithContext(context.Context) ModelCardTrainingHyperParameterOutput
}

// training hyper parameter
type ModelCardTrainingHyperParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelCardTrainingHyperParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingHyperParameter)(nil)).Elem()
}

func (i ModelCardTrainingHyperParameterArgs) ToModelCardTrainingHyperParameterOutput() ModelCardTrainingHyperParameterOutput {
	return i.ToModelCardTrainingHyperParameterOutputWithContext(context.Background())
}

func (i ModelCardTrainingHyperParameterArgs) ToModelCardTrainingHyperParameterOutputWithContext(ctx context.Context) ModelCardTrainingHyperParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingHyperParameterOutput)
}

func (i ModelCardTrainingHyperParameterArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingHyperParameter] {
	return pulumix.Output[ModelCardTrainingHyperParameter]{
		OutputState: i.ToModelCardTrainingHyperParameterOutputWithContext(ctx).OutputState,
	}
}

// ModelCardTrainingHyperParameterArrayInput is an input type that accepts ModelCardTrainingHyperParameterArray and ModelCardTrainingHyperParameterArrayOutput values.
// You can construct a concrete instance of `ModelCardTrainingHyperParameterArrayInput` via:
//
//	ModelCardTrainingHyperParameterArray{ ModelCardTrainingHyperParameterArgs{...} }
type ModelCardTrainingHyperParameterArrayInput interface {
	pulumi.Input

	ToModelCardTrainingHyperParameterArrayOutput() ModelCardTrainingHyperParameterArrayOutput
	ToModelCardTrainingHyperParameterArrayOutputWithContext(context.Context) ModelCardTrainingHyperParameterArrayOutput
}

type ModelCardTrainingHyperParameterArray []ModelCardTrainingHyperParameterInput

func (ModelCardTrainingHyperParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTrainingHyperParameter)(nil)).Elem()
}

func (i ModelCardTrainingHyperParameterArray) ToModelCardTrainingHyperParameterArrayOutput() ModelCardTrainingHyperParameterArrayOutput {
	return i.ToModelCardTrainingHyperParameterArrayOutputWithContext(context.Background())
}

func (i ModelCardTrainingHyperParameterArray) ToModelCardTrainingHyperParameterArrayOutputWithContext(ctx context.Context) ModelCardTrainingHyperParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingHyperParameterArrayOutput)
}

func (i ModelCardTrainingHyperParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTrainingHyperParameter] {
	return pulumix.Output[[]ModelCardTrainingHyperParameter]{
		OutputState: i.ToModelCardTrainingHyperParameterArrayOutputWithContext(ctx).OutputState,
	}
}

// training hyper parameter
type ModelCardTrainingHyperParameterOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingHyperParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingHyperParameter)(nil)).Elem()
}

func (o ModelCardTrainingHyperParameterOutput) ToModelCardTrainingHyperParameterOutput() ModelCardTrainingHyperParameterOutput {
	return o
}

func (o ModelCardTrainingHyperParameterOutput) ToModelCardTrainingHyperParameterOutputWithContext(ctx context.Context) ModelCardTrainingHyperParameterOutput {
	return o
}

func (o ModelCardTrainingHyperParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingHyperParameter] {
	return pulumix.Output[ModelCardTrainingHyperParameter]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingHyperParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardTrainingHyperParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ModelCardTrainingHyperParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardTrainingHyperParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ModelCardTrainingHyperParameterArrayOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingHyperParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTrainingHyperParameter)(nil)).Elem()
}

func (o ModelCardTrainingHyperParameterArrayOutput) ToModelCardTrainingHyperParameterArrayOutput() ModelCardTrainingHyperParameterArrayOutput {
	return o
}

func (o ModelCardTrainingHyperParameterArrayOutput) ToModelCardTrainingHyperParameterArrayOutputWithContext(ctx context.Context) ModelCardTrainingHyperParameterArrayOutput {
	return o
}

func (o ModelCardTrainingHyperParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTrainingHyperParameter] {
	return pulumix.Output[[]ModelCardTrainingHyperParameter]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingHyperParameterArrayOutput) Index(i pulumi.IntInput) ModelCardTrainingHyperParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardTrainingHyperParameter {
		return vs[0].([]ModelCardTrainingHyperParameter)[vs[1].(int)]
	}).(ModelCardTrainingHyperParameterOutput)
}

// training metric data.
type ModelCardTrainingMetric struct {
	Name  string  `pulumi:"name"`
	Notes *string `pulumi:"notes"`
	Value float64 `pulumi:"value"`
}

// ModelCardTrainingMetricInput is an input type that accepts ModelCardTrainingMetricArgs and ModelCardTrainingMetricOutput values.
// You can construct a concrete instance of `ModelCardTrainingMetricInput` via:
//
//	ModelCardTrainingMetricArgs{...}
type ModelCardTrainingMetricInput interface {
	pulumi.Input

	ToModelCardTrainingMetricOutput() ModelCardTrainingMetricOutput
	ToModelCardTrainingMetricOutputWithContext(context.Context) ModelCardTrainingMetricOutput
}

// training metric data.
type ModelCardTrainingMetricArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	Value pulumi.Float64Input   `pulumi:"value"`
}

func (ModelCardTrainingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingMetric)(nil)).Elem()
}

func (i ModelCardTrainingMetricArgs) ToModelCardTrainingMetricOutput() ModelCardTrainingMetricOutput {
	return i.ToModelCardTrainingMetricOutputWithContext(context.Background())
}

func (i ModelCardTrainingMetricArgs) ToModelCardTrainingMetricOutputWithContext(ctx context.Context) ModelCardTrainingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingMetricOutput)
}

func (i ModelCardTrainingMetricArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingMetric] {
	return pulumix.Output[ModelCardTrainingMetric]{
		OutputState: i.ToModelCardTrainingMetricOutputWithContext(ctx).OutputState,
	}
}

// ModelCardTrainingMetricArrayInput is an input type that accepts ModelCardTrainingMetricArray and ModelCardTrainingMetricArrayOutput values.
// You can construct a concrete instance of `ModelCardTrainingMetricArrayInput` via:
//
//	ModelCardTrainingMetricArray{ ModelCardTrainingMetricArgs{...} }
type ModelCardTrainingMetricArrayInput interface {
	pulumi.Input

	ToModelCardTrainingMetricArrayOutput() ModelCardTrainingMetricArrayOutput
	ToModelCardTrainingMetricArrayOutputWithContext(context.Context) ModelCardTrainingMetricArrayOutput
}

type ModelCardTrainingMetricArray []ModelCardTrainingMetricInput

func (ModelCardTrainingMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTrainingMetric)(nil)).Elem()
}

func (i ModelCardTrainingMetricArray) ToModelCardTrainingMetricArrayOutput() ModelCardTrainingMetricArrayOutput {
	return i.ToModelCardTrainingMetricArrayOutputWithContext(context.Background())
}

func (i ModelCardTrainingMetricArray) ToModelCardTrainingMetricArrayOutputWithContext(ctx context.Context) ModelCardTrainingMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardTrainingMetricArrayOutput)
}

func (i ModelCardTrainingMetricArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTrainingMetric] {
	return pulumix.Output[[]ModelCardTrainingMetric]{
		OutputState: i.ToModelCardTrainingMetricArrayOutputWithContext(ctx).OutputState,
	}
}

// training metric data.
type ModelCardTrainingMetricOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardTrainingMetric)(nil)).Elem()
}

func (o ModelCardTrainingMetricOutput) ToModelCardTrainingMetricOutput() ModelCardTrainingMetricOutput {
	return o
}

func (o ModelCardTrainingMetricOutput) ToModelCardTrainingMetricOutputWithContext(ctx context.Context) ModelCardTrainingMetricOutput {
	return o
}

func (o ModelCardTrainingMetricOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardTrainingMetric] {
	return pulumix.Output[ModelCardTrainingMetric]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingMetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelCardTrainingMetric) string { return v.Name }).(pulumi.StringOutput)
}

func (o ModelCardTrainingMetricOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardTrainingMetric) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o ModelCardTrainingMetricOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v ModelCardTrainingMetric) float64 { return v.Value }).(pulumi.Float64Output)
}

type ModelCardTrainingMetricArrayOutput struct{ *pulumi.OutputState }

func (ModelCardTrainingMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelCardTrainingMetric)(nil)).Elem()
}

func (o ModelCardTrainingMetricArrayOutput) ToModelCardTrainingMetricArrayOutput() ModelCardTrainingMetricArrayOutput {
	return o
}

func (o ModelCardTrainingMetricArrayOutput) ToModelCardTrainingMetricArrayOutputWithContext(ctx context.Context) ModelCardTrainingMetricArrayOutput {
	return o
}

func (o ModelCardTrainingMetricArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelCardTrainingMetric] {
	return pulumix.Output[[]ModelCardTrainingMetric]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardTrainingMetricArrayOutput) Index(i pulumi.IntInput) ModelCardTrainingMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelCardTrainingMetric {
		return vs[0].([]ModelCardTrainingMetric)[vs[1].(int)]
	}).(ModelCardTrainingMetricOutput)
}

// Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
type ModelCardUserContext struct {
	// The domain associated with the user.
	DomainId *string `pulumi:"domainId"`
	// The Amazon Resource Name (ARN) of the user's profile.
	UserProfileArn *string `pulumi:"userProfileArn"`
	// The name of the user's profile.
	UserProfileName *string `pulumi:"userProfileName"`
}

// ModelCardUserContextInput is an input type that accepts ModelCardUserContextArgs and ModelCardUserContextOutput values.
// You can construct a concrete instance of `ModelCardUserContextInput` via:
//
//	ModelCardUserContextArgs{...}
type ModelCardUserContextInput interface {
	pulumi.Input

	ToModelCardUserContextOutput() ModelCardUserContextOutput
	ToModelCardUserContextOutputWithContext(context.Context) ModelCardUserContextOutput
}

// Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
type ModelCardUserContextArgs struct {
	// The domain associated with the user.
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// The Amazon Resource Name (ARN) of the user's profile.
	UserProfileArn pulumi.StringPtrInput `pulumi:"userProfileArn"`
	// The name of the user's profile.
	UserProfileName pulumi.StringPtrInput `pulumi:"userProfileName"`
}

func (ModelCardUserContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardUserContext)(nil)).Elem()
}

func (i ModelCardUserContextArgs) ToModelCardUserContextOutput() ModelCardUserContextOutput {
	return i.ToModelCardUserContextOutputWithContext(context.Background())
}

func (i ModelCardUserContextArgs) ToModelCardUserContextOutputWithContext(ctx context.Context) ModelCardUserContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardUserContextOutput)
}

func (i ModelCardUserContextArgs) ToOutput(ctx context.Context) pulumix.Output[ModelCardUserContext] {
	return pulumix.Output[ModelCardUserContext]{
		OutputState: i.ToModelCardUserContextOutputWithContext(ctx).OutputState,
	}
}

func (i ModelCardUserContextArgs) ToModelCardUserContextPtrOutput() ModelCardUserContextPtrOutput {
	return i.ToModelCardUserContextPtrOutputWithContext(context.Background())
}

func (i ModelCardUserContextArgs) ToModelCardUserContextPtrOutputWithContext(ctx context.Context) ModelCardUserContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardUserContextOutput).ToModelCardUserContextPtrOutputWithContext(ctx)
}

// ModelCardUserContextPtrInput is an input type that accepts ModelCardUserContextArgs, ModelCardUserContextPtr and ModelCardUserContextPtrOutput values.
// You can construct a concrete instance of `ModelCardUserContextPtrInput` via:
//
//	        ModelCardUserContextArgs{...}
//
//	or:
//
//	        nil
type ModelCardUserContextPtrInput interface {
	pulumi.Input

	ToModelCardUserContextPtrOutput() ModelCardUserContextPtrOutput
	ToModelCardUserContextPtrOutputWithContext(context.Context) ModelCardUserContextPtrOutput
}

type modelCardUserContextPtrType ModelCardUserContextArgs

func ModelCardUserContextPtr(v *ModelCardUserContextArgs) ModelCardUserContextPtrInput {
	return (*modelCardUserContextPtrType)(v)
}

func (*modelCardUserContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardUserContext)(nil)).Elem()
}

func (i *modelCardUserContextPtrType) ToModelCardUserContextPtrOutput() ModelCardUserContextPtrOutput {
	return i.ToModelCardUserContextPtrOutputWithContext(context.Background())
}

func (i *modelCardUserContextPtrType) ToModelCardUserContextPtrOutputWithContext(ctx context.Context) ModelCardUserContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCardUserContextPtrOutput)
}

func (i *modelCardUserContextPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelCardUserContext] {
	return pulumix.Output[*ModelCardUserContext]{
		OutputState: i.ToModelCardUserContextPtrOutputWithContext(ctx).OutputState,
	}
}

// Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
type ModelCardUserContextOutput struct{ *pulumi.OutputState }

func (ModelCardUserContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelCardUserContext)(nil)).Elem()
}

func (o ModelCardUserContextOutput) ToModelCardUserContextOutput() ModelCardUserContextOutput {
	return o
}

func (o ModelCardUserContextOutput) ToModelCardUserContextOutputWithContext(ctx context.Context) ModelCardUserContextOutput {
	return o
}

func (o ModelCardUserContextOutput) ToModelCardUserContextPtrOutput() ModelCardUserContextPtrOutput {
	return o.ToModelCardUserContextPtrOutputWithContext(context.Background())
}

func (o ModelCardUserContextOutput) ToModelCardUserContextPtrOutputWithContext(ctx context.Context) ModelCardUserContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelCardUserContext) *ModelCardUserContext {
		return &v
	}).(ModelCardUserContextPtrOutput)
}

func (o ModelCardUserContextOutput) ToOutput(ctx context.Context) pulumix.Output[ModelCardUserContext] {
	return pulumix.Output[ModelCardUserContext]{
		OutputState: o.OutputState,
	}
}

// The domain associated with the user.
func (o ModelCardUserContextOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardUserContext) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the user's profile.
func (o ModelCardUserContextOutput) UserProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardUserContext) *string { return v.UserProfileArn }).(pulumi.StringPtrOutput)
}

// The name of the user's profile.
func (o ModelCardUserContextOutput) UserProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelCardUserContext) *string { return v.UserProfileName }).(pulumi.StringPtrOutput)
}

type ModelCardUserContextPtrOutput struct{ *pulumi.OutputState }

func (ModelCardUserContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCardUserContext)(nil)).Elem()
}

func (o ModelCardUserContextPtrOutput) ToModelCardUserContextPtrOutput() ModelCardUserContextPtrOutput {
	return o
}

func (o ModelCardUserContextPtrOutput) ToModelCardUserContextPtrOutputWithContext(ctx context.Context) ModelCardUserContextPtrOutput {
	return o
}

func (o ModelCardUserContextPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelCardUserContext] {
	return pulumix.Output[*ModelCardUserContext]{
		OutputState: o.OutputState,
	}
}

func (o ModelCardUserContextPtrOutput) Elem() ModelCardUserContextOutput {
	return o.ApplyT(func(v *ModelCardUserContext) ModelCardUserContext {
		if v != nil {
			return *v
		}
		var ret ModelCardUserContext
		return ret
	}).(ModelCardUserContextOutput)
}

// The domain associated with the user.
func (o ModelCardUserContextPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardUserContext) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the user's profile.
func (o ModelCardUserContextPtrOutput) UserProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardUserContext) *string {
		if v == nil {
			return nil
		}
		return v.UserProfileArn
	}).(pulumi.StringPtrOutput)
}

// The name of the user's profile.
func (o ModelCardUserContextPtrOutput) UserProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelCardUserContext) *string {
		if v == nil {
			return nil
		}
		return v.UserProfileName
	}).(pulumi.StringPtrOutput)
}

type ModelContainerDefinition struct {
	ContainerHostname          *string                `pulumi:"containerHostname"`
	Environment                interface{}            `pulumi:"environment"`
	Image                      *string                `pulumi:"image"`
	ImageConfig                *ModelImageConfig      `pulumi:"imageConfig"`
	InferenceSpecificationName *string                `pulumi:"inferenceSpecificationName"`
	Mode                       *string                `pulumi:"mode"`
	ModelDataSource            *ModelDataSource       `pulumi:"modelDataSource"`
	ModelDataUrl               *string                `pulumi:"modelDataUrl"`
	ModelPackageName           *string                `pulumi:"modelPackageName"`
	MultiModelConfig           *ModelMultiModelConfig `pulumi:"multiModelConfig"`
}

// ModelContainerDefinitionInput is an input type that accepts ModelContainerDefinitionArgs and ModelContainerDefinitionOutput values.
// You can construct a concrete instance of `ModelContainerDefinitionInput` via:
//
//	ModelContainerDefinitionArgs{...}
type ModelContainerDefinitionInput interface {
	pulumi.Input

	ToModelContainerDefinitionOutput() ModelContainerDefinitionOutput
	ToModelContainerDefinitionOutputWithContext(context.Context) ModelContainerDefinitionOutput
}

type ModelContainerDefinitionArgs struct {
	ContainerHostname          pulumi.StringPtrInput         `pulumi:"containerHostname"`
	Environment                pulumi.Input                  `pulumi:"environment"`
	Image                      pulumi.StringPtrInput         `pulumi:"image"`
	ImageConfig                ModelImageConfigPtrInput      `pulumi:"imageConfig"`
	InferenceSpecificationName pulumi.StringPtrInput         `pulumi:"inferenceSpecificationName"`
	Mode                       pulumi.StringPtrInput         `pulumi:"mode"`
	ModelDataSource            ModelDataSourcePtrInput       `pulumi:"modelDataSource"`
	ModelDataUrl               pulumi.StringPtrInput         `pulumi:"modelDataUrl"`
	ModelPackageName           pulumi.StringPtrInput         `pulumi:"modelPackageName"`
	MultiModelConfig           ModelMultiModelConfigPtrInput `pulumi:"multiModelConfig"`
}

func (ModelContainerDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerDefinition)(nil)).Elem()
}

func (i ModelContainerDefinitionArgs) ToModelContainerDefinitionOutput() ModelContainerDefinitionOutput {
	return i.ToModelContainerDefinitionOutputWithContext(context.Background())
}

func (i ModelContainerDefinitionArgs) ToModelContainerDefinitionOutputWithContext(ctx context.Context) ModelContainerDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerDefinitionOutput)
}

func (i ModelContainerDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelContainerDefinition] {
	return pulumix.Output[ModelContainerDefinition]{
		OutputState: i.ToModelContainerDefinitionOutputWithContext(ctx).OutputState,
	}
}

func (i ModelContainerDefinitionArgs) ToModelContainerDefinitionPtrOutput() ModelContainerDefinitionPtrOutput {
	return i.ToModelContainerDefinitionPtrOutputWithContext(context.Background())
}

func (i ModelContainerDefinitionArgs) ToModelContainerDefinitionPtrOutputWithContext(ctx context.Context) ModelContainerDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerDefinitionOutput).ToModelContainerDefinitionPtrOutputWithContext(ctx)
}

// ModelContainerDefinitionPtrInput is an input type that accepts ModelContainerDefinitionArgs, ModelContainerDefinitionPtr and ModelContainerDefinitionPtrOutput values.
// You can construct a concrete instance of `ModelContainerDefinitionPtrInput` via:
//
//	        ModelContainerDefinitionArgs{...}
//
//	or:
//
//	        nil
type ModelContainerDefinitionPtrInput interface {
	pulumi.Input

	ToModelContainerDefinitionPtrOutput() ModelContainerDefinitionPtrOutput
	ToModelContainerDefinitionPtrOutputWithContext(context.Context) ModelContainerDefinitionPtrOutput
}

type modelContainerDefinitionPtrType ModelContainerDefinitionArgs

func ModelContainerDefinitionPtr(v *ModelContainerDefinitionArgs) ModelContainerDefinitionPtrInput {
	return (*modelContainerDefinitionPtrType)(v)
}

func (*modelContainerDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerDefinition)(nil)).Elem()
}

func (i *modelContainerDefinitionPtrType) ToModelContainerDefinitionPtrOutput() ModelContainerDefinitionPtrOutput {
	return i.ToModelContainerDefinitionPtrOutputWithContext(context.Background())
}

func (i *modelContainerDefinitionPtrType) ToModelContainerDefinitionPtrOutputWithContext(ctx context.Context) ModelContainerDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerDefinitionPtrOutput)
}

func (i *modelContainerDefinitionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelContainerDefinition] {
	return pulumix.Output[*ModelContainerDefinition]{
		OutputState: i.ToModelContainerDefinitionPtrOutputWithContext(ctx).OutputState,
	}
}

// ModelContainerDefinitionArrayInput is an input type that accepts ModelContainerDefinitionArray and ModelContainerDefinitionArrayOutput values.
// You can construct a concrete instance of `ModelContainerDefinitionArrayInput` via:
//
//	ModelContainerDefinitionArray{ ModelContainerDefinitionArgs{...} }
type ModelContainerDefinitionArrayInput interface {
	pulumi.Input

	ToModelContainerDefinitionArrayOutput() ModelContainerDefinitionArrayOutput
	ToModelContainerDefinitionArrayOutputWithContext(context.Context) ModelContainerDefinitionArrayOutput
}

type ModelContainerDefinitionArray []ModelContainerDefinitionInput

func (ModelContainerDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelContainerDefinition)(nil)).Elem()
}

func (i ModelContainerDefinitionArray) ToModelContainerDefinitionArrayOutput() ModelContainerDefinitionArrayOutput {
	return i.ToModelContainerDefinitionArrayOutputWithContext(context.Background())
}

func (i ModelContainerDefinitionArray) ToModelContainerDefinitionArrayOutputWithContext(ctx context.Context) ModelContainerDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerDefinitionArrayOutput)
}

func (i ModelContainerDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelContainerDefinition] {
	return pulumix.Output[[]ModelContainerDefinition]{
		OutputState: i.ToModelContainerDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

type ModelContainerDefinitionOutput struct{ *pulumi.OutputState }

func (ModelContainerDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerDefinition)(nil)).Elem()
}

func (o ModelContainerDefinitionOutput) ToModelContainerDefinitionOutput() ModelContainerDefinitionOutput {
	return o
}

func (o ModelContainerDefinitionOutput) ToModelContainerDefinitionOutputWithContext(ctx context.Context) ModelContainerDefinitionOutput {
	return o
}

func (o ModelContainerDefinitionOutput) ToModelContainerDefinitionPtrOutput() ModelContainerDefinitionPtrOutput {
	return o.ToModelContainerDefinitionPtrOutputWithContext(context.Background())
}

func (o ModelContainerDefinitionOutput) ToModelContainerDefinitionPtrOutputWithContext(ctx context.Context) ModelContainerDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelContainerDefinition) *ModelContainerDefinition {
		return &v
	}).(ModelContainerDefinitionPtrOutput)
}

func (o ModelContainerDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelContainerDefinition] {
	return pulumix.Output[ModelContainerDefinition]{
		OutputState: o.OutputState,
	}
}

func (o ModelContainerDefinitionOutput) ContainerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.ContainerHostname }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelContainerDefinition) interface{} { return v.Environment }).(pulumi.AnyOutput)
}

func (o ModelContainerDefinitionOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) ImageConfig() ModelImageConfigPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *ModelImageConfig { return v.ImageConfig }).(ModelImageConfigPtrOutput)
}

func (o ModelContainerDefinitionOutput) InferenceSpecificationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.InferenceSpecificationName }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) ModelDataSource() ModelDataSourcePtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *ModelDataSource { return v.ModelDataSource }).(ModelDataSourcePtrOutput)
}

func (o ModelContainerDefinitionOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) ModelPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *string { return v.ModelPackageName }).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionOutput) MultiModelConfig() ModelMultiModelConfigPtrOutput {
	return o.ApplyT(func(v ModelContainerDefinition) *ModelMultiModelConfig { return v.MultiModelConfig }).(ModelMultiModelConfigPtrOutput)
}

type ModelContainerDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ModelContainerDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelContainerDefinition)(nil)).Elem()
}

func (o ModelContainerDefinitionPtrOutput) ToModelContainerDefinitionPtrOutput() ModelContainerDefinitionPtrOutput {
	return o
}

func (o ModelContainerDefinitionPtrOutput) ToModelContainerDefinitionPtrOutputWithContext(ctx context.Context) ModelContainerDefinitionPtrOutput {
	return o
}

func (o ModelContainerDefinitionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelContainerDefinition] {
	return pulumix.Output[*ModelContainerDefinition]{
		OutputState: o.OutputState,
	}
}

func (o ModelContainerDefinitionPtrOutput) Elem() ModelContainerDefinitionOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) ModelContainerDefinition {
		if v != nil {
			return *v
		}
		var ret ModelContainerDefinition
		return ret
	}).(ModelContainerDefinitionOutput)
}

func (o ModelContainerDefinitionPtrOutput) ContainerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ContainerHostname
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) interface{} {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.AnyOutput)
}

func (o ModelContainerDefinitionPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) ImageConfig() ModelImageConfigPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *ModelImageConfig {
		if v == nil {
			return nil
		}
		return v.ImageConfig
	}).(ModelImageConfigPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) InferenceSpecificationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.InferenceSpecificationName
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) ModelDataSource() ModelDataSourcePtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *ModelDataSource {
		if v == nil {
			return nil
		}
		return v.ModelDataSource
	}).(ModelDataSourcePtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ModelDataUrl
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) ModelPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ModelPackageName
	}).(pulumi.StringPtrOutput)
}

func (o ModelContainerDefinitionPtrOutput) MultiModelConfig() ModelMultiModelConfigPtrOutput {
	return o.ApplyT(func(v *ModelContainerDefinition) *ModelMultiModelConfig {
		if v == nil {
			return nil
		}
		return v.MultiModelConfig
	}).(ModelMultiModelConfigPtrOutput)
}

type ModelContainerDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ModelContainerDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelContainerDefinition)(nil)).Elem()
}

func (o ModelContainerDefinitionArrayOutput) ToModelContainerDefinitionArrayOutput() ModelContainerDefinitionArrayOutput {
	return o
}

func (o ModelContainerDefinitionArrayOutput) ToModelContainerDefinitionArrayOutputWithContext(ctx context.Context) ModelContainerDefinitionArrayOutput {
	return o
}

func (o ModelContainerDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelContainerDefinition] {
	return pulumix.Output[[]ModelContainerDefinition]{
		OutputState: o.OutputState,
	}
}

func (o ModelContainerDefinitionArrayOutput) Index(i pulumi.IntInput) ModelContainerDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelContainerDefinition {
		return vs[0].([]ModelContainerDefinition)[vs[1].(int)]
	}).(ModelContainerDefinitionOutput)
}

type ModelDataSource struct {
	S3DataSource ModelS3DataSource `pulumi:"s3DataSource"`
}

// ModelDataSourceInput is an input type that accepts ModelDataSourceArgs and ModelDataSourceOutput values.
// You can construct a concrete instance of `ModelDataSourceInput` via:
//
//	ModelDataSourceArgs{...}
type ModelDataSourceInput interface {
	pulumi.Input

	ToModelDataSourceOutput() ModelDataSourceOutput
	ToModelDataSourceOutputWithContext(context.Context) ModelDataSourceOutput
}

type ModelDataSourceArgs struct {
	S3DataSource ModelS3DataSourceInput `pulumi:"s3DataSource"`
}

func (ModelDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDataSource)(nil)).Elem()
}

func (i ModelDataSourceArgs) ToModelDataSourceOutput() ModelDataSourceOutput {
	return i.ToModelDataSourceOutputWithContext(context.Background())
}

func (i ModelDataSourceArgs) ToModelDataSourceOutputWithContext(ctx context.Context) ModelDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDataSourceOutput)
}

func (i ModelDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelDataSource] {
	return pulumix.Output[ModelDataSource]{
		OutputState: i.ToModelDataSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelDataSourceArgs) ToModelDataSourcePtrOutput() ModelDataSourcePtrOutput {
	return i.ToModelDataSourcePtrOutputWithContext(context.Background())
}

func (i ModelDataSourceArgs) ToModelDataSourcePtrOutputWithContext(ctx context.Context) ModelDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDataSourceOutput).ToModelDataSourcePtrOutputWithContext(ctx)
}

// ModelDataSourcePtrInput is an input type that accepts ModelDataSourceArgs, ModelDataSourcePtr and ModelDataSourcePtrOutput values.
// You can construct a concrete instance of `ModelDataSourcePtrInput` via:
//
//	        ModelDataSourceArgs{...}
//
//	or:
//
//	        nil
type ModelDataSourcePtrInput interface {
	pulumi.Input

	ToModelDataSourcePtrOutput() ModelDataSourcePtrOutput
	ToModelDataSourcePtrOutputWithContext(context.Context) ModelDataSourcePtrOutput
}

type modelDataSourcePtrType ModelDataSourceArgs

func ModelDataSourcePtr(v *ModelDataSourceArgs) ModelDataSourcePtrInput {
	return (*modelDataSourcePtrType)(v)
}

func (*modelDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDataSource)(nil)).Elem()
}

func (i *modelDataSourcePtrType) ToModelDataSourcePtrOutput() ModelDataSourcePtrOutput {
	return i.ToModelDataSourcePtrOutputWithContext(context.Background())
}

func (i *modelDataSourcePtrType) ToModelDataSourcePtrOutputWithContext(ctx context.Context) ModelDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDataSourcePtrOutput)
}

func (i *modelDataSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelDataSource] {
	return pulumix.Output[*ModelDataSource]{
		OutputState: i.ToModelDataSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type ModelDataSourceOutput struct{ *pulumi.OutputState }

func (ModelDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelDataSource)(nil)).Elem()
}

func (o ModelDataSourceOutput) ToModelDataSourceOutput() ModelDataSourceOutput {
	return o
}

func (o ModelDataSourceOutput) ToModelDataSourceOutputWithContext(ctx context.Context) ModelDataSourceOutput {
	return o
}

func (o ModelDataSourceOutput) ToModelDataSourcePtrOutput() ModelDataSourcePtrOutput {
	return o.ToModelDataSourcePtrOutputWithContext(context.Background())
}

func (o ModelDataSourceOutput) ToModelDataSourcePtrOutputWithContext(ctx context.Context) ModelDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelDataSource) *ModelDataSource {
		return &v
	}).(ModelDataSourcePtrOutput)
}

func (o ModelDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelDataSource] {
	return pulumix.Output[ModelDataSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelDataSourceOutput) S3DataSource() ModelS3DataSourceOutput {
	return o.ApplyT(func(v ModelDataSource) ModelS3DataSource { return v.S3DataSource }).(ModelS3DataSourceOutput)
}

type ModelDataSourcePtrOutput struct{ *pulumi.OutputState }

func (ModelDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDataSource)(nil)).Elem()
}

func (o ModelDataSourcePtrOutput) ToModelDataSourcePtrOutput() ModelDataSourcePtrOutput {
	return o
}

func (o ModelDataSourcePtrOutput) ToModelDataSourcePtrOutputWithContext(ctx context.Context) ModelDataSourcePtrOutput {
	return o
}

func (o ModelDataSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelDataSource] {
	return pulumix.Output[*ModelDataSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelDataSourcePtrOutput) Elem() ModelDataSourceOutput {
	return o.ApplyT(func(v *ModelDataSource) ModelDataSource {
		if v != nil {
			return *v
		}
		var ret ModelDataSource
		return ret
	}).(ModelDataSourceOutput)
}

func (o ModelDataSourcePtrOutput) S3DataSource() ModelS3DataSourcePtrOutput {
	return o.ApplyT(func(v *ModelDataSource) *ModelS3DataSource {
		if v == nil {
			return nil
		}
		return &v.S3DataSource
	}).(ModelS3DataSourcePtrOutput)
}

// The batch transform input for a monitoring job.
type ModelExplainabilityJobDefinitionBatchTransformInput struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri string                                        `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelExplainabilityJobDefinitionDatasetFormat `pulumi:"datasetFormat"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute *string `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute *string `pulumi:"probabilityAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelExplainabilityJobDefinitionBatchTransformInputS3InputMode `pulumi:"s3InputMode"`
}

// ModelExplainabilityJobDefinitionBatchTransformInputInput is an input type that accepts ModelExplainabilityJobDefinitionBatchTransformInputArgs and ModelExplainabilityJobDefinitionBatchTransformInputOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionBatchTransformInputInput` via:
//
//	ModelExplainabilityJobDefinitionBatchTransformInputArgs{...}
type ModelExplainabilityJobDefinitionBatchTransformInputInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionBatchTransformInputOutput() ModelExplainabilityJobDefinitionBatchTransformInputOutput
	ToModelExplainabilityJobDefinitionBatchTransformInputOutputWithContext(context.Context) ModelExplainabilityJobDefinitionBatchTransformInputOutput
}

// The batch transform input for a monitoring job.
type ModelExplainabilityJobDefinitionBatchTransformInputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri pulumi.StringInput                                 `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelExplainabilityJobDefinitionDatasetFormatInput `pulumi:"datasetFormat"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute pulumi.StringPtrInput `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute pulumi.StringPtrInput `pulumi:"probabilityAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelExplainabilityJobDefinitionBatchTransformInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (ModelExplainabilityJobDefinitionBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionBatchTransformInputArgs) ToModelExplainabilityJobDefinitionBatchTransformInputOutput() ModelExplainabilityJobDefinitionBatchTransformInputOutput {
	return i.ToModelExplainabilityJobDefinitionBatchTransformInputOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionBatchTransformInputArgs) ToModelExplainabilityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionBatchTransformInputOutput)
}

func (i ModelExplainabilityJobDefinitionBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelExplainabilityJobDefinitionBatchTransformInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionBatchTransformInputArgs) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionBatchTransformInputArgs) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionBatchTransformInputOutput).ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionBatchTransformInputPtrInput is an input type that accepts ModelExplainabilityJobDefinitionBatchTransformInputArgs, ModelExplainabilityJobDefinitionBatchTransformInputPtr and ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionBatchTransformInputPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionBatchTransformInputArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionBatchTransformInputPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput
	ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput
}

type modelExplainabilityJobDefinitionBatchTransformInputPtrType ModelExplainabilityJobDefinitionBatchTransformInputArgs

func ModelExplainabilityJobDefinitionBatchTransformInputPtr(v *ModelExplainabilityJobDefinitionBatchTransformInputArgs) ModelExplainabilityJobDefinitionBatchTransformInputPtrInput {
	return (*modelExplainabilityJobDefinitionBatchTransformInputPtrType)(v)
}

func (*modelExplainabilityJobDefinitionBatchTransformInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionBatchTransformInputPtrType) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionBatchTransformInputPtrType) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput)
}

func (i *modelExplainabilityJobDefinitionBatchTransformInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The batch transform input for a monitoring job.
type ModelExplainabilityJobDefinitionBatchTransformInputOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ToModelExplainabilityJobDefinitionBatchTransformInputOutput() ModelExplainabilityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ToModelExplainabilityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return o.ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionBatchTransformInput {
		return &v
	}).(ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) string {
		return v.DataCapturedDestinationS3Uri
	}).(pulumi.StringOutput)
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) DatasetFormat() ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) ModelExplainabilityJobDefinitionDatasetFormat {
		return v.DatasetFormat
	}).(ModelExplainabilityJobDefinitionDatasetFormatOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) *string { return v.FeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) S3DataDistributionType() ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelExplainabilityJobDefinitionBatchTransformInputOutput) S3InputMode() ModelExplainabilityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionBatchTransformInputS3InputMode {
		return v.S3InputMode
	}).(ModelExplainabilityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

type ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) ToModelExplainabilityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) Elem() ModelExplainabilityJobDefinitionBatchTransformInputOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) ModelExplainabilityJobDefinitionBatchTransformInput {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionBatchTransformInput
		return ret
	}).(ModelExplainabilityJobDefinitionBatchTransformInputOutput)
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) DataCapturedDestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.DataCapturedDestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) DatasetFormat() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionDatasetFormat {
		if v == nil {
			return nil
		}
		return &v.DatasetFormat
	}).(ModelExplainabilityJobDefinitionDatasetFormatPtrOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.FeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) S3DataDistributionType() ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelExplainabilityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput) S3InputMode() ModelExplainabilityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionBatchTransformInput) *ModelExplainabilityJobDefinitionBatchTransformInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelExplainabilityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelExplainabilityJobDefinitionClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// ModelExplainabilityJobDefinitionClusterConfigInput is an input type that accepts ModelExplainabilityJobDefinitionClusterConfigArgs and ModelExplainabilityJobDefinitionClusterConfigOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionClusterConfigInput` via:
//
//	ModelExplainabilityJobDefinitionClusterConfigArgs{...}
type ModelExplainabilityJobDefinitionClusterConfigInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionClusterConfigOutput() ModelExplainabilityJobDefinitionClusterConfigOutput
	ToModelExplainabilityJobDefinitionClusterConfigOutputWithContext(context.Context) ModelExplainabilityJobDefinitionClusterConfigOutput
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelExplainabilityJobDefinitionClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (ModelExplainabilityJobDefinitionClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionClusterConfig)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionClusterConfigArgs) ToModelExplainabilityJobDefinitionClusterConfigOutput() ModelExplainabilityJobDefinitionClusterConfigOutput {
	return i.ToModelExplainabilityJobDefinitionClusterConfigOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionClusterConfigArgs) ToModelExplainabilityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionClusterConfigOutput)
}

func (i ModelExplainabilityJobDefinitionClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionClusterConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionClusterConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionClusterConfigOutputWithContext(ctx).OutputState,
	}
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelExplainabilityJobDefinitionClusterConfigOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionClusterConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionClusterConfigOutput) ToModelExplainabilityJobDefinitionClusterConfigOutput() ModelExplainabilityJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionClusterConfigOutput) ToModelExplainabilityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionClusterConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o ModelExplainabilityJobDefinitionClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the processing job.
func (o ModelExplainabilityJobDefinitionClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o ModelExplainabilityJobDefinitionClusterConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionClusterConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o ModelExplainabilityJobDefinitionClusterConfigOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionClusterConfig) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

// The baseline constraints resource for a monitoring job.
type ModelExplainabilityJobDefinitionConstraintsResource struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// ModelExplainabilityJobDefinitionConstraintsResourceInput is an input type that accepts ModelExplainabilityJobDefinitionConstraintsResourceArgs and ModelExplainabilityJobDefinitionConstraintsResourceOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionConstraintsResourceInput` via:
//
//	ModelExplainabilityJobDefinitionConstraintsResourceArgs{...}
type ModelExplainabilityJobDefinitionConstraintsResourceInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionConstraintsResourceOutput() ModelExplainabilityJobDefinitionConstraintsResourceOutput
	ToModelExplainabilityJobDefinitionConstraintsResourceOutputWithContext(context.Context) ModelExplainabilityJobDefinitionConstraintsResourceOutput
}

// The baseline constraints resource for a monitoring job.
type ModelExplainabilityJobDefinitionConstraintsResourceArgs struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (ModelExplainabilityJobDefinitionConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionConstraintsResourceArgs) ToModelExplainabilityJobDefinitionConstraintsResourceOutput() ModelExplainabilityJobDefinitionConstraintsResourceOutput {
	return i.ToModelExplainabilityJobDefinitionConstraintsResourceOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionConstraintsResourceArgs) ToModelExplainabilityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionConstraintsResourceOutput)
}

func (i ModelExplainabilityJobDefinitionConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelExplainabilityJobDefinitionConstraintsResource]{
		OutputState: i.ToModelExplainabilityJobDefinitionConstraintsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionConstraintsResourceArgs) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutput() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionConstraintsResourceArgs) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionConstraintsResourceOutput).ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionConstraintsResourcePtrInput is an input type that accepts ModelExplainabilityJobDefinitionConstraintsResourceArgs, ModelExplainabilityJobDefinitionConstraintsResourcePtr and ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionConstraintsResourcePtrInput` via:
//
//	        ModelExplainabilityJobDefinitionConstraintsResourceArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionConstraintsResourcePtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutput() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput
	ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput
}

type modelExplainabilityJobDefinitionConstraintsResourcePtrType ModelExplainabilityJobDefinitionConstraintsResourceArgs

func ModelExplainabilityJobDefinitionConstraintsResourcePtr(v *ModelExplainabilityJobDefinitionConstraintsResourceArgs) ModelExplainabilityJobDefinitionConstraintsResourcePtrInput {
	return (*modelExplainabilityJobDefinitionConstraintsResourcePtrType)(v)
}

func (*modelExplainabilityJobDefinitionConstraintsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionConstraintsResourcePtrType) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutput() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionConstraintsResourcePtrType) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput)
}

func (i *modelExplainabilityJobDefinitionConstraintsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionConstraintsResource]{
		OutputState: i.ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline constraints resource for a monitoring job.
type ModelExplainabilityJobDefinitionConstraintsResourceOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) ToModelExplainabilityJobDefinitionConstraintsResourceOutput() ModelExplainabilityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) ToModelExplainabilityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutput() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o.ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionConstraintsResource) *ModelExplainabilityJobDefinitionConstraintsResource {
		return &v
	}).(ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput)
}

func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelExplainabilityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelExplainabilityJobDefinitionConstraintsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionConstraintsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutput() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) ToModelExplainabilityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) Elem() ModelExplainabilityJobDefinitionConstraintsResourceOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionConstraintsResource) ModelExplainabilityJobDefinitionConstraintsResource {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionConstraintsResource
		return ret
	}).(ModelExplainabilityJobDefinitionConstraintsResourceOutput)
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionConstraintsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// The CSV format
type ModelExplainabilityJobDefinitionCsv struct {
	// A boolean flag indicating if given CSV has header
	Header *bool `pulumi:"header"`
}

// ModelExplainabilityJobDefinitionCsvInput is an input type that accepts ModelExplainabilityJobDefinitionCsvArgs and ModelExplainabilityJobDefinitionCsvOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionCsvInput` via:
//
//	ModelExplainabilityJobDefinitionCsvArgs{...}
type ModelExplainabilityJobDefinitionCsvInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionCsvOutput() ModelExplainabilityJobDefinitionCsvOutput
	ToModelExplainabilityJobDefinitionCsvOutputWithContext(context.Context) ModelExplainabilityJobDefinitionCsvOutput
}

// The CSV format
type ModelExplainabilityJobDefinitionCsvArgs struct {
	// A boolean flag indicating if given CSV has header
	Header pulumi.BoolPtrInput `pulumi:"header"`
}

func (ModelExplainabilityJobDefinitionCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionCsv)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionCsvArgs) ToModelExplainabilityJobDefinitionCsvOutput() ModelExplainabilityJobDefinitionCsvOutput {
	return i.ToModelExplainabilityJobDefinitionCsvOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionCsvArgs) ToModelExplainabilityJobDefinitionCsvOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionCsvOutput)
}

func (i ModelExplainabilityJobDefinitionCsvArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionCsv] {
	return pulumix.Output[ModelExplainabilityJobDefinitionCsv]{
		OutputState: i.ToModelExplainabilityJobDefinitionCsvOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionCsvArgs) ToModelExplainabilityJobDefinitionCsvPtrOutput() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return i.ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionCsvArgs) ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionCsvOutput).ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionCsvPtrInput is an input type that accepts ModelExplainabilityJobDefinitionCsvArgs, ModelExplainabilityJobDefinitionCsvPtr and ModelExplainabilityJobDefinitionCsvPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionCsvPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionCsvArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionCsvPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionCsvPtrOutput() ModelExplainabilityJobDefinitionCsvPtrOutput
	ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionCsvPtrOutput
}

type modelExplainabilityJobDefinitionCsvPtrType ModelExplainabilityJobDefinitionCsvArgs

func ModelExplainabilityJobDefinitionCsvPtr(v *ModelExplainabilityJobDefinitionCsvArgs) ModelExplainabilityJobDefinitionCsvPtrInput {
	return (*modelExplainabilityJobDefinitionCsvPtrType)(v)
}

func (*modelExplainabilityJobDefinitionCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionCsv)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionCsvPtrType) ToModelExplainabilityJobDefinitionCsvPtrOutput() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return i.ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionCsvPtrType) ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionCsvPtrOutput)
}

func (i *modelExplainabilityJobDefinitionCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionCsv] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionCsv]{
		OutputState: i.ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx).OutputState,
	}
}

// The CSV format
type ModelExplainabilityJobDefinitionCsvOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionCsv)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionCsvOutput) ToModelExplainabilityJobDefinitionCsvOutput() ModelExplainabilityJobDefinitionCsvOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionCsvOutput) ToModelExplainabilityJobDefinitionCsvOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionCsvOutput) ToModelExplainabilityJobDefinitionCsvPtrOutput() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o.ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionCsvOutput) ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionCsv) *ModelExplainabilityJobDefinitionCsv {
		return &v
	}).(ModelExplainabilityJobDefinitionCsvPtrOutput)
}

func (o ModelExplainabilityJobDefinitionCsvOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionCsv] {
	return pulumix.Output[ModelExplainabilityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if given CSV has header
func (o ModelExplainabilityJobDefinitionCsvOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionCsv) *bool { return v.Header }).(pulumi.BoolPtrOutput)
}

type ModelExplainabilityJobDefinitionCsvPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionCsv)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionCsvPtrOutput) ToModelExplainabilityJobDefinitionCsvPtrOutput() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionCsvPtrOutput) ToModelExplainabilityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionCsv] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionCsvPtrOutput) Elem() ModelExplainabilityJobDefinitionCsvOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionCsv) ModelExplainabilityJobDefinitionCsv {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionCsv
		return ret
	}).(ModelExplainabilityJobDefinitionCsvOutput)
}

// A boolean flag indicating if given CSV has header
func (o ModelExplainabilityJobDefinitionCsvPtrOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionCsv) *bool {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.BoolPtrOutput)
}

// The dataset format of the data to monitor
type ModelExplainabilityJobDefinitionDatasetFormat struct {
	Csv     *ModelExplainabilityJobDefinitionCsv  `pulumi:"csv"`
	Json    *ModelExplainabilityJobDefinitionJson `pulumi:"json"`
	Parquet *bool                                 `pulumi:"parquet"`
}

// ModelExplainabilityJobDefinitionDatasetFormatInput is an input type that accepts ModelExplainabilityJobDefinitionDatasetFormatArgs and ModelExplainabilityJobDefinitionDatasetFormatOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionDatasetFormatInput` via:
//
//	ModelExplainabilityJobDefinitionDatasetFormatArgs{...}
type ModelExplainabilityJobDefinitionDatasetFormatInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionDatasetFormatOutput() ModelExplainabilityJobDefinitionDatasetFormatOutput
	ToModelExplainabilityJobDefinitionDatasetFormatOutputWithContext(context.Context) ModelExplainabilityJobDefinitionDatasetFormatOutput
}

// The dataset format of the data to monitor
type ModelExplainabilityJobDefinitionDatasetFormatArgs struct {
	Csv     ModelExplainabilityJobDefinitionCsvPtrInput  `pulumi:"csv"`
	Json    ModelExplainabilityJobDefinitionJsonPtrInput `pulumi:"json"`
	Parquet pulumi.BoolPtrInput                          `pulumi:"parquet"`
}

func (ModelExplainabilityJobDefinitionDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionDatasetFormatArgs) ToModelExplainabilityJobDefinitionDatasetFormatOutput() ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return i.ToModelExplainabilityJobDefinitionDatasetFormatOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionDatasetFormatArgs) ToModelExplainabilityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionDatasetFormatOutput)
}

func (i ModelExplainabilityJobDefinitionDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelExplainabilityJobDefinitionDatasetFormat]{
		OutputState: i.ToModelExplainabilityJobDefinitionDatasetFormatOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionDatasetFormatArgs) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutput() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionDatasetFormatArgs) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionDatasetFormatOutput).ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionDatasetFormatPtrInput is an input type that accepts ModelExplainabilityJobDefinitionDatasetFormatArgs, ModelExplainabilityJobDefinitionDatasetFormatPtr and ModelExplainabilityJobDefinitionDatasetFormatPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionDatasetFormatPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionDatasetFormatArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionDatasetFormatPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionDatasetFormatPtrOutput() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput
	ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionDatasetFormatPtrOutput
}

type modelExplainabilityJobDefinitionDatasetFormatPtrType ModelExplainabilityJobDefinitionDatasetFormatArgs

func ModelExplainabilityJobDefinitionDatasetFormatPtr(v *ModelExplainabilityJobDefinitionDatasetFormatArgs) ModelExplainabilityJobDefinitionDatasetFormatPtrInput {
	return (*modelExplainabilityJobDefinitionDatasetFormatPtrType)(v)
}

func (*modelExplainabilityJobDefinitionDatasetFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionDatasetFormatPtrType) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutput() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionDatasetFormatPtrType) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionDatasetFormatPtrOutput)
}

func (i *modelExplainabilityJobDefinitionDatasetFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionDatasetFormat]{
		OutputState: i.ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The dataset format of the data to monitor
type ModelExplainabilityJobDefinitionDatasetFormatOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) ToModelExplainabilityJobDefinitionDatasetFormatOutput() ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) ToModelExplainabilityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutput() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return o.ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionDatasetFormat) *ModelExplainabilityJobDefinitionDatasetFormat {
		return &v
	}).(ModelExplainabilityJobDefinitionDatasetFormatPtrOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelExplainabilityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) Csv() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionDatasetFormat) *ModelExplainabilityJobDefinitionCsv {
		return v.Csv
	}).(ModelExplainabilityJobDefinitionCsvPtrOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) Json() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionDatasetFormat) *ModelExplainabilityJobDefinitionJson {
		return v.Json
	}).(ModelExplainabilityJobDefinitionJsonPtrOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionDatasetFormat) *bool { return v.Parquet }).(pulumi.BoolPtrOutput)
}

type ModelExplainabilityJobDefinitionDatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutput() ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) ToModelExplainabilityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) Elem() ModelExplainabilityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionDatasetFormat) ModelExplainabilityJobDefinitionDatasetFormat {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionDatasetFormat
		return ret
	}).(ModelExplainabilityJobDefinitionDatasetFormatOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) Csv() ModelExplainabilityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionDatasetFormat) *ModelExplainabilityJobDefinitionCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(ModelExplainabilityJobDefinitionCsvPtrOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) Json() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionDatasetFormat) *ModelExplainabilityJobDefinitionJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(ModelExplainabilityJobDefinitionJsonPtrOutput)
}

func (o ModelExplainabilityJobDefinitionDatasetFormatPtrOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionDatasetFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Parquet
	}).(pulumi.BoolPtrOutput)
}

// The endpoint for a monitoring job.
type ModelExplainabilityJobDefinitionEndpointInput struct {
	EndpointName string `pulumi:"endpointName"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute *string `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute *string `pulumi:"probabilityAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelExplainabilityJobDefinitionEndpointInputS3InputMode `pulumi:"s3InputMode"`
}

// ModelExplainabilityJobDefinitionEndpointInputInput is an input type that accepts ModelExplainabilityJobDefinitionEndpointInputArgs and ModelExplainabilityJobDefinitionEndpointInputOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionEndpointInputInput` via:
//
//	ModelExplainabilityJobDefinitionEndpointInputArgs{...}
type ModelExplainabilityJobDefinitionEndpointInputInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionEndpointInputOutput() ModelExplainabilityJobDefinitionEndpointInputOutput
	ToModelExplainabilityJobDefinitionEndpointInputOutputWithContext(context.Context) ModelExplainabilityJobDefinitionEndpointInputOutput
}

// The endpoint for a monitoring job.
type ModelExplainabilityJobDefinitionEndpointInputArgs struct {
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// JSONpath to locate features in JSONlines dataset
	FeaturesAttribute pulumi.StringPtrInput `pulumi:"featuresAttribute"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute pulumi.StringPtrInput `pulumi:"probabilityAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelExplainabilityJobDefinitionEndpointInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (ModelExplainabilityJobDefinitionEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionEndpointInputArgs) ToModelExplainabilityJobDefinitionEndpointInputOutput() ModelExplainabilityJobDefinitionEndpointInputOutput {
	return i.ToModelExplainabilityJobDefinitionEndpointInputOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionEndpointInputArgs) ToModelExplainabilityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionEndpointInputOutput)
}

func (i ModelExplainabilityJobDefinitionEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionEndpointInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionEndpointInput]{
		OutputState: i.ToModelExplainabilityJobDefinitionEndpointInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionEndpointInputArgs) ToModelExplainabilityJobDefinitionEndpointInputPtrOutput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return i.ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionEndpointInputArgs) ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionEndpointInputOutput).ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionEndpointInputPtrInput is an input type that accepts ModelExplainabilityJobDefinitionEndpointInputArgs, ModelExplainabilityJobDefinitionEndpointInputPtr and ModelExplainabilityJobDefinitionEndpointInputPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionEndpointInputPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionEndpointInputArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionEndpointInputPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionEndpointInputPtrOutput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput
	ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionEndpointInputPtrOutput
}

type modelExplainabilityJobDefinitionEndpointInputPtrType ModelExplainabilityJobDefinitionEndpointInputArgs

func ModelExplainabilityJobDefinitionEndpointInputPtr(v *ModelExplainabilityJobDefinitionEndpointInputArgs) ModelExplainabilityJobDefinitionEndpointInputPtrInput {
	return (*modelExplainabilityJobDefinitionEndpointInputPtrType)(v)
}

func (*modelExplainabilityJobDefinitionEndpointInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionEndpointInputPtrType) ToModelExplainabilityJobDefinitionEndpointInputPtrOutput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return i.ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionEndpointInputPtrType) ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionEndpointInputPtrOutput)
}

func (i *modelExplainabilityJobDefinitionEndpointInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionEndpointInput]{
		OutputState: i.ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The endpoint for a monitoring job.
type ModelExplainabilityJobDefinitionEndpointInputOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ToModelExplainabilityJobDefinitionEndpointInputOutput() ModelExplainabilityJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ToModelExplainabilityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ToModelExplainabilityJobDefinitionEndpointInputPtrOutput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return o.ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionEndpointInput) *ModelExplainabilityJobDefinitionEndpointInput {
		return &v
	}).(ModelExplainabilityJobDefinitionEndpointInputPtrOutput)
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionEndpointInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionEndpointInputOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) string { return v.EndpointName }).(pulumi.StringOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) *string { return v.FeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) S3DataDistributionType() ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) *ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelExplainabilityJobDefinitionEndpointInputOutput) S3InputMode() ModelExplainabilityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionEndpointInput) *ModelExplainabilityJobDefinitionEndpointInputS3InputMode {
		return v.S3InputMode
	}).(ModelExplainabilityJobDefinitionEndpointInputS3InputModePtrOutput)
}

type ModelExplainabilityJobDefinitionEndpointInputPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionEndpointInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) ToModelExplainabilityJobDefinitionEndpointInputPtrOutput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) ToModelExplainabilityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) Elem() ModelExplainabilityJobDefinitionEndpointInputOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) ModelExplainabilityJobDefinitionEndpointInput {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionEndpointInput
		return ret
	}).(ModelExplainabilityJobDefinitionEndpointInputOutput)
}

func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// JSONpath to locate features in JSONlines dataset
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) FeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.FeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) S3DataDistributionType() ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelExplainabilityJobDefinitionEndpointInputPtrOutput) S3InputMode() ModelExplainabilityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionEndpointInput) *ModelExplainabilityJobDefinitionEndpointInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelExplainabilityJobDefinitionEndpointInputS3InputModePtrOutput)
}

// The Json format
type ModelExplainabilityJobDefinitionJson struct {
	// A boolean flag indicating if it is JSON line format
	Line *bool `pulumi:"line"`
}

// ModelExplainabilityJobDefinitionJsonInput is an input type that accepts ModelExplainabilityJobDefinitionJsonArgs and ModelExplainabilityJobDefinitionJsonOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionJsonInput` via:
//
//	ModelExplainabilityJobDefinitionJsonArgs{...}
type ModelExplainabilityJobDefinitionJsonInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionJsonOutput() ModelExplainabilityJobDefinitionJsonOutput
	ToModelExplainabilityJobDefinitionJsonOutputWithContext(context.Context) ModelExplainabilityJobDefinitionJsonOutput
}

// The Json format
type ModelExplainabilityJobDefinitionJsonArgs struct {
	// A boolean flag indicating if it is JSON line format
	Line pulumi.BoolPtrInput `pulumi:"line"`
}

func (ModelExplainabilityJobDefinitionJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionJson)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionJsonArgs) ToModelExplainabilityJobDefinitionJsonOutput() ModelExplainabilityJobDefinitionJsonOutput {
	return i.ToModelExplainabilityJobDefinitionJsonOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionJsonArgs) ToModelExplainabilityJobDefinitionJsonOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionJsonOutput)
}

func (i ModelExplainabilityJobDefinitionJsonArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionJson] {
	return pulumix.Output[ModelExplainabilityJobDefinitionJson]{
		OutputState: i.ToModelExplainabilityJobDefinitionJsonOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionJsonArgs) ToModelExplainabilityJobDefinitionJsonPtrOutput() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return i.ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionJsonArgs) ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionJsonOutput).ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionJsonPtrInput is an input type that accepts ModelExplainabilityJobDefinitionJsonArgs, ModelExplainabilityJobDefinitionJsonPtr and ModelExplainabilityJobDefinitionJsonPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionJsonPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionJsonArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionJsonPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionJsonPtrOutput() ModelExplainabilityJobDefinitionJsonPtrOutput
	ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionJsonPtrOutput
}

type modelExplainabilityJobDefinitionJsonPtrType ModelExplainabilityJobDefinitionJsonArgs

func ModelExplainabilityJobDefinitionJsonPtr(v *ModelExplainabilityJobDefinitionJsonArgs) ModelExplainabilityJobDefinitionJsonPtrInput {
	return (*modelExplainabilityJobDefinitionJsonPtrType)(v)
}

func (*modelExplainabilityJobDefinitionJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionJson)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionJsonPtrType) ToModelExplainabilityJobDefinitionJsonPtrOutput() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return i.ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionJsonPtrType) ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionJsonPtrOutput)
}

func (i *modelExplainabilityJobDefinitionJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionJson] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionJson]{
		OutputState: i.ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx).OutputState,
	}
}

// The Json format
type ModelExplainabilityJobDefinitionJsonOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionJson)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionJsonOutput) ToModelExplainabilityJobDefinitionJsonOutput() ModelExplainabilityJobDefinitionJsonOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionJsonOutput) ToModelExplainabilityJobDefinitionJsonOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionJsonOutput) ToModelExplainabilityJobDefinitionJsonPtrOutput() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o.ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionJsonOutput) ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionJson) *ModelExplainabilityJobDefinitionJson {
		return &v
	}).(ModelExplainabilityJobDefinitionJsonPtrOutput)
}

func (o ModelExplainabilityJobDefinitionJsonOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionJson] {
	return pulumix.Output[ModelExplainabilityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if it is JSON line format
func (o ModelExplainabilityJobDefinitionJsonOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionJson) *bool { return v.Line }).(pulumi.BoolPtrOutput)
}

type ModelExplainabilityJobDefinitionJsonPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionJson)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionJsonPtrOutput) ToModelExplainabilityJobDefinitionJsonPtrOutput() ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionJsonPtrOutput) ToModelExplainabilityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionJson] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionJsonPtrOutput) Elem() ModelExplainabilityJobDefinitionJsonOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionJson) ModelExplainabilityJobDefinitionJson {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionJson
		return ret
	}).(ModelExplainabilityJobDefinitionJsonOutput)
}

// A boolean flag indicating if it is JSON line format
func (o ModelExplainabilityJobDefinitionJsonPtrOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionJson) *bool {
		if v == nil {
			return nil
		}
		return v.Line
	}).(pulumi.BoolPtrOutput)
}

// Container image configuration object for the monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification struct {
	// The S3 URI to an analysis configuration file
	ConfigUri string `pulumi:"configUri"`
	// Sets the environment variables in the Docker container
	Environment interface{} `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri string `pulumi:"imageUri"`
}

// ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationInput is an input type that accepts ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs and ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationInput` via:
//
//	ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs{...}
type ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput() ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput
	ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutputWithContext(context.Context) ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput
}

// Container image configuration object for the monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs struct {
	// The S3 URI to an analysis configuration file
	ConfigUri pulumi.StringInput `pulumi:"configUri"`
	// Sets the environment variables in the Docker container
	Environment pulumi.Input `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
}

func (ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs) ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput() ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput {
	return i.ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs) ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput)
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification]{
		OutputState: i.ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutputWithContext(ctx).OutputState,
	}
}

// Container image configuration object for the monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput() ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ToModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification]{
		OutputState: o.OutputState,
	}
}

// The S3 URI to an analysis configuration file
func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ConfigUri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification) string { return v.ConfigUri }).(pulumi.StringOutput)
}

// Sets the environment variables in the Docker container
func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification) interface{} {
		return v.Environment
	}).(pulumi.AnyOutput)
}

// The container image to be run by the monitoring job.
func (o ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification) string { return v.ImageUri }).(pulumi.StringOutput)
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig struct {
	BaseliningJobName   *string                                              `pulumi:"baseliningJobName"`
	ConstraintsResource *ModelExplainabilityJobDefinitionConstraintsResource `pulumi:"constraintsResource"`
}

// ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigInput is an input type that accepts ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs and ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigInput` via:
//
//	ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs{...}
type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput
	ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutputWithContext(context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs struct {
	BaseliningJobName   pulumi.StringPtrInput                                       `pulumi:"baseliningJobName"`
	ConstraintsResource ModelExplainabilityJobDefinitionConstraintsResourcePtrInput `pulumi:"constraintsResource"`
}

func (ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput {
	return i.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput)
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput).ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrInput is an input type that accepts ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs, ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtr and ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput
	ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput
}

type modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs

func ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtr(v *ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrInput {
	return (*modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType)(v)
}

func (*modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput)
}

func (i *modelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return o.ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) *ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig {
		return &v
	}).(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput)
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) *string {
		return v.BaseliningJobName
	}).(pulumi.StringPtrOutput)
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput) ConstraintsResource() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) *ModelExplainabilityJobDefinitionConstraintsResource {
		return v.ConstraintsResource
	}).(ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput)
}

type ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) ToModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) Elem() ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig
		return ret
	}).(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput)
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaseliningJobName
	}).(pulumi.StringPtrOutput)
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput) ConstraintsResource() ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig) *ModelExplainabilityJobDefinitionConstraintsResource {
		if v == nil {
			return nil
		}
		return v.ConstraintsResource
	}).(ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput)
}

// The inputs for a monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityJobInput struct {
	BatchTransformInput *ModelExplainabilityJobDefinitionBatchTransformInput `pulumi:"batchTransformInput"`
	EndpointInput       *ModelExplainabilityJobDefinitionEndpointInput       `pulumi:"endpointInput"`
}

// ModelExplainabilityJobDefinitionModelExplainabilityJobInputInput is an input type that accepts ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs and ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionModelExplainabilityJobInputInput` via:
//
//	ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs{...}
type ModelExplainabilityJobDefinitionModelExplainabilityJobInputInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput() ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput
	ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutputWithContext(context.Context) ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput
}

// The inputs for a monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs struct {
	BatchTransformInput ModelExplainabilityJobDefinitionBatchTransformInputPtrInput `pulumi:"batchTransformInput"`
	EndpointInput       ModelExplainabilityJobDefinitionEndpointInputPtrInput       `pulumi:"endpointInput"`
}

func (ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityJobInput)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs) ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput() ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput {
	return i.ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs) ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput)
}

func (i ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityJobInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityJobInput]{
		OutputState: i.ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutputWithContext(ctx).OutputState,
	}
}

// The inputs for a monitoring job.
type ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityJobInput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput() ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) ToModelExplainabilityJobDefinitionModelExplainabilityJobInputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityJobInput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionModelExplainabilityJobInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) BatchTransformInput() ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityJobInput) *ModelExplainabilityJobDefinitionBatchTransformInput {
		return v.BatchTransformInput
	}).(ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput) EndpointInput() ModelExplainabilityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionModelExplainabilityJobInput) *ModelExplainabilityJobDefinitionEndpointInput {
		return v.EndpointInput
	}).(ModelExplainabilityJobDefinitionEndpointInputPtrOutput)
}

// The output object for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringOutput struct {
	S3Output ModelExplainabilityJobDefinitionS3Output `pulumi:"s3Output"`
}

// ModelExplainabilityJobDefinitionMonitoringOutputInput is an input type that accepts ModelExplainabilityJobDefinitionMonitoringOutputArgs and ModelExplainabilityJobDefinitionMonitoringOutputOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionMonitoringOutputInput` via:
//
//	ModelExplainabilityJobDefinitionMonitoringOutputArgs{...}
type ModelExplainabilityJobDefinitionMonitoringOutputInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionMonitoringOutputOutput() ModelExplainabilityJobDefinitionMonitoringOutputOutput
	ToModelExplainabilityJobDefinitionMonitoringOutputOutputWithContext(context.Context) ModelExplainabilityJobDefinitionMonitoringOutputOutput
}

// The output object for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringOutputArgs struct {
	S3Output ModelExplainabilityJobDefinitionS3OutputInput `pulumi:"s3Output"`
}

func (ModelExplainabilityJobDefinitionMonitoringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArgs) ToModelExplainabilityJobDefinitionMonitoringOutputOutput() ModelExplainabilityJobDefinitionMonitoringOutputOutput {
	return i.ToModelExplainabilityJobDefinitionMonitoringOutputOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArgs) ToModelExplainabilityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionMonitoringOutputOutput)
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelExplainabilityJobDefinitionMonitoringOutputOutputWithContext(ctx).OutputState,
	}
}

// ModelExplainabilityJobDefinitionMonitoringOutputArrayInput is an input type that accepts ModelExplainabilityJobDefinitionMonitoringOutputArray and ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionMonitoringOutputArrayInput` via:
//
//	ModelExplainabilityJobDefinitionMonitoringOutputArray{ ModelExplainabilityJobDefinitionMonitoringOutputArgs{...} }
type ModelExplainabilityJobDefinitionMonitoringOutputArrayInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutput() ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput
	ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Context) ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput
}

type ModelExplainabilityJobDefinitionMonitoringOutputArray []ModelExplainabilityJobDefinitionMonitoringOutputInput

func (ModelExplainabilityJobDefinitionMonitoringOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelExplainabilityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArray) ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutput() ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput {
	return i.ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArray) ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput)
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelExplainabilityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelExplainabilityJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx).OutputState,
	}
}

// The output object for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringOutputOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionMonitoringOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputOutput) ToModelExplainabilityJobDefinitionMonitoringOutputOutput() ModelExplainabilityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputOutput) ToModelExplainabilityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputOutput) S3Output() ModelExplainabilityJobDefinitionS3OutputOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionMonitoringOutput) ModelExplainabilityJobDefinitionS3Output {
		return v.S3Output
	}).(ModelExplainabilityJobDefinitionS3OutputOutput)
}

type ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelExplainabilityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput) ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutput() ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput) ToModelExplainabilityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelExplainabilityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelExplainabilityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput) Index(i pulumi.IntInput) ModelExplainabilityJobDefinitionMonitoringOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelExplainabilityJobDefinitionMonitoringOutput {
		return vs[0].([]ModelExplainabilityJobDefinitionMonitoringOutput)[vs[1].(int)]
	}).(ModelExplainabilityJobDefinitionMonitoringOutputOutput)
}

// The output configuration for monitoring jobs.
type ModelExplainabilityJobDefinitionMonitoringOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs []ModelExplainabilityJobDefinitionMonitoringOutput `pulumi:"monitoringOutputs"`
}

// ModelExplainabilityJobDefinitionMonitoringOutputConfigInput is an input type that accepts ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs and ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionMonitoringOutputConfigInput` via:
//
//	ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs{...}
type ModelExplainabilityJobDefinitionMonitoringOutputConfigInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutput() ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput
	ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Context) ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput
}

// The output configuration for monitoring jobs.
type ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs ModelExplainabilityJobDefinitionMonitoringOutputArrayInput `pulumi:"monitoringOutputs"`
}

func (ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs) ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutput() ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput {
	return i.ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs) ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput)
}

func (i ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutputConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx).OutputState,
	}
}

// The output configuration for monitoring jobs.
type ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutput() ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) ToModelExplainabilityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionMonitoringOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput) MonitoringOutputs() ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionMonitoringOutputConfig) []ModelExplainabilityJobDefinitionMonitoringOutput {
		return v.MonitoringOutputs
	}).(ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput)
}

// Identifies the resources to deploy for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringResources struct {
	ClusterConfig ModelExplainabilityJobDefinitionClusterConfig `pulumi:"clusterConfig"`
}

// ModelExplainabilityJobDefinitionMonitoringResourcesInput is an input type that accepts ModelExplainabilityJobDefinitionMonitoringResourcesArgs and ModelExplainabilityJobDefinitionMonitoringResourcesOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionMonitoringResourcesInput` via:
//
//	ModelExplainabilityJobDefinitionMonitoringResourcesArgs{...}
type ModelExplainabilityJobDefinitionMonitoringResourcesInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionMonitoringResourcesOutput() ModelExplainabilityJobDefinitionMonitoringResourcesOutput
	ToModelExplainabilityJobDefinitionMonitoringResourcesOutputWithContext(context.Context) ModelExplainabilityJobDefinitionMonitoringResourcesOutput
}

// Identifies the resources to deploy for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringResourcesArgs struct {
	ClusterConfig ModelExplainabilityJobDefinitionClusterConfigInput `pulumi:"clusterConfig"`
}

func (ModelExplainabilityJobDefinitionMonitoringResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionMonitoringResourcesArgs) ToModelExplainabilityJobDefinitionMonitoringResourcesOutput() ModelExplainabilityJobDefinitionMonitoringResourcesOutput {
	return i.ToModelExplainabilityJobDefinitionMonitoringResourcesOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionMonitoringResourcesArgs) ToModelExplainabilityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionMonitoringResourcesOutput)
}

func (i ModelExplainabilityJobDefinitionMonitoringResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringResources]{
		OutputState: i.ToModelExplainabilityJobDefinitionMonitoringResourcesOutputWithContext(ctx).OutputState,
	}
}

// Identifies the resources to deploy for a monitoring job.
type ModelExplainabilityJobDefinitionMonitoringResourcesOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionMonitoringResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionMonitoringResourcesOutput) ToModelExplainabilityJobDefinitionMonitoringResourcesOutput() ModelExplainabilityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringResourcesOutput) ToModelExplainabilityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionMonitoringResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelExplainabilityJobDefinitionMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionMonitoringResourcesOutput) ClusterConfig() ModelExplainabilityJobDefinitionClusterConfigOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionMonitoringResources) ModelExplainabilityJobDefinitionClusterConfig {
		return v.ClusterConfig
	}).(ModelExplainabilityJobDefinitionClusterConfigOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelExplainabilityJobDefinitionNetworkConfig struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation *bool                                      `pulumi:"enableNetworkIsolation"`
	VpcConfig              *ModelExplainabilityJobDefinitionVpcConfig `pulumi:"vpcConfig"`
}

// ModelExplainabilityJobDefinitionNetworkConfigInput is an input type that accepts ModelExplainabilityJobDefinitionNetworkConfigArgs and ModelExplainabilityJobDefinitionNetworkConfigOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionNetworkConfigInput` via:
//
//	ModelExplainabilityJobDefinitionNetworkConfigArgs{...}
type ModelExplainabilityJobDefinitionNetworkConfigInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionNetworkConfigOutput() ModelExplainabilityJobDefinitionNetworkConfigOutput
	ToModelExplainabilityJobDefinitionNetworkConfigOutputWithContext(context.Context) ModelExplainabilityJobDefinitionNetworkConfigOutput
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelExplainabilityJobDefinitionNetworkConfigArgs struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumi.BoolPtrInput `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation pulumi.BoolPtrInput                               `pulumi:"enableNetworkIsolation"`
	VpcConfig              ModelExplainabilityJobDefinitionVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (ModelExplainabilityJobDefinitionNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionNetworkConfigArgs) ToModelExplainabilityJobDefinitionNetworkConfigOutput() ModelExplainabilityJobDefinitionNetworkConfigOutput {
	return i.ToModelExplainabilityJobDefinitionNetworkConfigOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionNetworkConfigArgs) ToModelExplainabilityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionNetworkConfigOutput)
}

func (i ModelExplainabilityJobDefinitionNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionNetworkConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionNetworkConfigArgs) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutput() ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionNetworkConfigArgs) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionNetworkConfigOutput).ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionNetworkConfigPtrInput is an input type that accepts ModelExplainabilityJobDefinitionNetworkConfigArgs, ModelExplainabilityJobDefinitionNetworkConfigPtr and ModelExplainabilityJobDefinitionNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionNetworkConfigPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionNetworkConfigPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionNetworkConfigPtrOutput() ModelExplainabilityJobDefinitionNetworkConfigPtrOutput
	ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionNetworkConfigPtrOutput
}

type modelExplainabilityJobDefinitionNetworkConfigPtrType ModelExplainabilityJobDefinitionNetworkConfigArgs

func ModelExplainabilityJobDefinitionNetworkConfigPtr(v *ModelExplainabilityJobDefinitionNetworkConfigArgs) ModelExplainabilityJobDefinitionNetworkConfigPtrInput {
	return (*modelExplainabilityJobDefinitionNetworkConfigPtrType)(v)
}

func (*modelExplainabilityJobDefinitionNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionNetworkConfigPtrType) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutput() ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionNetworkConfigPtrType) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionNetworkConfigPtrOutput)
}

func (i *modelExplainabilityJobDefinitionNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionNetworkConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelExplainabilityJobDefinitionNetworkConfigOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) ToModelExplainabilityJobDefinitionNetworkConfigOutput() ModelExplainabilityJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) ToModelExplainabilityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutput() ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return o.ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionNetworkConfig) *ModelExplainabilityJobDefinitionNetworkConfig {
		return &v
	}).(ModelExplainabilityJobDefinitionNetworkConfigPtrOutput)
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionNetworkConfig) *bool {
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionNetworkConfig) *bool { return v.EnableNetworkIsolation }).(pulumi.BoolPtrOutput)
}

func (o ModelExplainabilityJobDefinitionNetworkConfigOutput) VpcConfig() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionNetworkConfig) *ModelExplainabilityJobDefinitionVpcConfig {
		return v.VpcConfig
	}).(ModelExplainabilityJobDefinitionVpcConfigPtrOutput)
}

type ModelExplainabilityJobDefinitionNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutput() ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) ToModelExplainabilityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) Elem() ModelExplainabilityJobDefinitionNetworkConfigOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionNetworkConfig) ModelExplainabilityJobDefinitionNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionNetworkConfig
		return ret
	}).(ModelExplainabilityJobDefinitionNetworkConfigOutput)
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkIsolation
	}).(pulumi.BoolPtrOutput)
}

func (o ModelExplainabilityJobDefinitionNetworkConfigPtrOutput) VpcConfig() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionNetworkConfig) *ModelExplainabilityJobDefinitionVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(ModelExplainabilityJobDefinitionVpcConfigPtrOutput)
}

// Information about where and how to store the results of a monitoring job.
type ModelExplainabilityJobDefinitionS3Output struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode *ModelExplainabilityJobDefinitionS3OutputS3UploadMode `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelExplainabilityJobDefinitionS3OutputInput is an input type that accepts ModelExplainabilityJobDefinitionS3OutputArgs and ModelExplainabilityJobDefinitionS3OutputOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionS3OutputInput` via:
//
//	ModelExplainabilityJobDefinitionS3OutputArgs{...}
type ModelExplainabilityJobDefinitionS3OutputInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionS3OutputOutput() ModelExplainabilityJobDefinitionS3OutputOutput
	ToModelExplainabilityJobDefinitionS3OutputOutputWithContext(context.Context) ModelExplainabilityJobDefinitionS3OutputOutput
}

// Information about where and how to store the results of a monitoring job.
type ModelExplainabilityJobDefinitionS3OutputArgs struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode ModelExplainabilityJobDefinitionS3OutputS3UploadModePtrInput `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelExplainabilityJobDefinitionS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionS3Output)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionS3OutputArgs) ToModelExplainabilityJobDefinitionS3OutputOutput() ModelExplainabilityJobDefinitionS3OutputOutput {
	return i.ToModelExplainabilityJobDefinitionS3OutputOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionS3OutputArgs) ToModelExplainabilityJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionS3OutputOutput)
}

func (i ModelExplainabilityJobDefinitionS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionS3Output] {
	return pulumix.Output[ModelExplainabilityJobDefinitionS3Output]{
		OutputState: i.ToModelExplainabilityJobDefinitionS3OutputOutputWithContext(ctx).OutputState,
	}
}

// Information about where and how to store the results of a monitoring job.
type ModelExplainabilityJobDefinitionS3OutputOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionS3Output)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionS3OutputOutput) ToModelExplainabilityJobDefinitionS3OutputOutput() ModelExplainabilityJobDefinitionS3OutputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionS3OutputOutput) ToModelExplainabilityJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionS3OutputOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionS3Output] {
	return pulumix.Output[ModelExplainabilityJobDefinitionS3Output]{
		OutputState: o.OutputState,
	}
}

// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
func (o ModelExplainabilityJobDefinitionS3OutputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionS3Output) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether to upload the results of the monitoring job continuously or after the job completes.
func (o ModelExplainabilityJobDefinitionS3OutputOutput) S3UploadMode() ModelExplainabilityJobDefinitionS3OutputS3UploadModePtrOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionS3Output) *ModelExplainabilityJobDefinitionS3OutputS3UploadMode {
		return v.S3UploadMode
	}).(ModelExplainabilityJobDefinitionS3OutputS3UploadModePtrOutput)
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o ModelExplainabilityJobDefinitionS3OutputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionS3Output) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelExplainabilityJobDefinitionStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds int `pulumi:"maxRuntimeInSeconds"`
}

// ModelExplainabilityJobDefinitionStoppingConditionInput is an input type that accepts ModelExplainabilityJobDefinitionStoppingConditionArgs and ModelExplainabilityJobDefinitionStoppingConditionOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionStoppingConditionInput` via:
//
//	ModelExplainabilityJobDefinitionStoppingConditionArgs{...}
type ModelExplainabilityJobDefinitionStoppingConditionInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionStoppingConditionOutput() ModelExplainabilityJobDefinitionStoppingConditionOutput
	ToModelExplainabilityJobDefinitionStoppingConditionOutputWithContext(context.Context) ModelExplainabilityJobDefinitionStoppingConditionOutput
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelExplainabilityJobDefinitionStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumi.IntInput `pulumi:"maxRuntimeInSeconds"`
}

func (ModelExplainabilityJobDefinitionStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionStoppingConditionArgs) ToModelExplainabilityJobDefinitionStoppingConditionOutput() ModelExplainabilityJobDefinitionStoppingConditionOutput {
	return i.ToModelExplainabilityJobDefinitionStoppingConditionOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionStoppingConditionArgs) ToModelExplainabilityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionStoppingConditionOutput)
}

func (i ModelExplainabilityJobDefinitionStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelExplainabilityJobDefinitionStoppingCondition]{
		OutputState: i.ToModelExplainabilityJobDefinitionStoppingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionStoppingConditionArgs) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutput() ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionStoppingConditionArgs) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionStoppingConditionOutput).ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionStoppingConditionPtrInput is an input type that accepts ModelExplainabilityJobDefinitionStoppingConditionArgs, ModelExplainabilityJobDefinitionStoppingConditionPtr and ModelExplainabilityJobDefinitionStoppingConditionPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionStoppingConditionPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionStoppingConditionArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionStoppingConditionPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionStoppingConditionPtrOutput() ModelExplainabilityJobDefinitionStoppingConditionPtrOutput
	ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionStoppingConditionPtrOutput
}

type modelExplainabilityJobDefinitionStoppingConditionPtrType ModelExplainabilityJobDefinitionStoppingConditionArgs

func ModelExplainabilityJobDefinitionStoppingConditionPtr(v *ModelExplainabilityJobDefinitionStoppingConditionArgs) ModelExplainabilityJobDefinitionStoppingConditionPtrInput {
	return (*modelExplainabilityJobDefinitionStoppingConditionPtrType)(v)
}

func (*modelExplainabilityJobDefinitionStoppingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionStoppingConditionPtrType) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutput() ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionStoppingConditionPtrType) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionStoppingConditionPtrOutput)
}

func (i *modelExplainabilityJobDefinitionStoppingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionStoppingCondition]{
		OutputState: i.ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelExplainabilityJobDefinitionStoppingConditionOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) ToModelExplainabilityJobDefinitionStoppingConditionOutput() ModelExplainabilityJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) ToModelExplainabilityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutput() ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return o.ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionStoppingCondition) *ModelExplainabilityJobDefinitionStoppingCondition {
		return &v
	}).(ModelExplainabilityJobDefinitionStoppingConditionPtrOutput)
}

func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelExplainabilityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o ModelExplainabilityJobDefinitionStoppingConditionOutput) MaxRuntimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionStoppingCondition) int { return v.MaxRuntimeInSeconds }).(pulumi.IntOutput)
}

type ModelExplainabilityJobDefinitionStoppingConditionPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutput() ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) ToModelExplainabilityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) Elem() ModelExplainabilityJobDefinitionStoppingConditionOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionStoppingCondition) ModelExplainabilityJobDefinitionStoppingCondition {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionStoppingCondition
		return ret
	}).(ModelExplainabilityJobDefinitionStoppingConditionOutput)
}

// The maximum runtime allowed in seconds.
func (o ModelExplainabilityJobDefinitionStoppingConditionPtrOutput) MaxRuntimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionStoppingCondition) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRuntimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type ModelExplainabilityJobDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ModelExplainabilityJobDefinitionTagInput is an input type that accepts ModelExplainabilityJobDefinitionTagArgs and ModelExplainabilityJobDefinitionTagOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionTagInput` via:
//
//	ModelExplainabilityJobDefinitionTagArgs{...}
type ModelExplainabilityJobDefinitionTagInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionTagOutput() ModelExplainabilityJobDefinitionTagOutput
	ToModelExplainabilityJobDefinitionTagOutputWithContext(context.Context) ModelExplainabilityJobDefinitionTagOutput
}

// A key-value pair to associate with a resource.
type ModelExplainabilityJobDefinitionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelExplainabilityJobDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionTag)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionTagArgs) ToModelExplainabilityJobDefinitionTagOutput() ModelExplainabilityJobDefinitionTagOutput {
	return i.ToModelExplainabilityJobDefinitionTagOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionTagArgs) ToModelExplainabilityJobDefinitionTagOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionTagOutput)
}

func (i ModelExplainabilityJobDefinitionTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionTag] {
	return pulumix.Output[ModelExplainabilityJobDefinitionTag]{
		OutputState: i.ToModelExplainabilityJobDefinitionTagOutputWithContext(ctx).OutputState,
	}
}

// ModelExplainabilityJobDefinitionTagArrayInput is an input type that accepts ModelExplainabilityJobDefinitionTagArray and ModelExplainabilityJobDefinitionTagArrayOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionTagArrayInput` via:
//
//	ModelExplainabilityJobDefinitionTagArray{ ModelExplainabilityJobDefinitionTagArgs{...} }
type ModelExplainabilityJobDefinitionTagArrayInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionTagArrayOutput() ModelExplainabilityJobDefinitionTagArrayOutput
	ToModelExplainabilityJobDefinitionTagArrayOutputWithContext(context.Context) ModelExplainabilityJobDefinitionTagArrayOutput
}

type ModelExplainabilityJobDefinitionTagArray []ModelExplainabilityJobDefinitionTagInput

func (ModelExplainabilityJobDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelExplainabilityJobDefinitionTag)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionTagArray) ToModelExplainabilityJobDefinitionTagArrayOutput() ModelExplainabilityJobDefinitionTagArrayOutput {
	return i.ToModelExplainabilityJobDefinitionTagArrayOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionTagArray) ToModelExplainabilityJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionTagArrayOutput)
}

func (i ModelExplainabilityJobDefinitionTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelExplainabilityJobDefinitionTag] {
	return pulumix.Output[[]ModelExplainabilityJobDefinitionTag]{
		OutputState: i.ToModelExplainabilityJobDefinitionTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelExplainabilityJobDefinitionTagOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionTag)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionTagOutput) ToModelExplainabilityJobDefinitionTagOutput() ModelExplainabilityJobDefinitionTagOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionTagOutput) ToModelExplainabilityJobDefinitionTagOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionTagOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionTag] {
	return pulumix.Output[ModelExplainabilityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelExplainabilityJobDefinitionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelExplainabilityJobDefinitionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelExplainabilityJobDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelExplainabilityJobDefinitionTag)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionTagArrayOutput) ToModelExplainabilityJobDefinitionTagArrayOutput() ModelExplainabilityJobDefinitionTagArrayOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionTagArrayOutput) ToModelExplainabilityJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionTagArrayOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelExplainabilityJobDefinitionTag] {
	return pulumix.Output[[]ModelExplainabilityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionTagArrayOutput) Index(i pulumi.IntInput) ModelExplainabilityJobDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelExplainabilityJobDefinitionTag {
		return vs[0].([]ModelExplainabilityJobDefinitionTag)[vs[1].(int)]
	}).(ModelExplainabilityJobDefinitionTagOutput)
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelExplainabilityJobDefinitionVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets []string `pulumi:"subnets"`
}

// ModelExplainabilityJobDefinitionVpcConfigInput is an input type that accepts ModelExplainabilityJobDefinitionVpcConfigArgs and ModelExplainabilityJobDefinitionVpcConfigOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionVpcConfigInput` via:
//
//	ModelExplainabilityJobDefinitionVpcConfigArgs{...}
type ModelExplainabilityJobDefinitionVpcConfigInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionVpcConfigOutput() ModelExplainabilityJobDefinitionVpcConfigOutput
	ToModelExplainabilityJobDefinitionVpcConfigOutputWithContext(context.Context) ModelExplainabilityJobDefinitionVpcConfigOutput
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelExplainabilityJobDefinitionVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ModelExplainabilityJobDefinitionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i ModelExplainabilityJobDefinitionVpcConfigArgs) ToModelExplainabilityJobDefinitionVpcConfigOutput() ModelExplainabilityJobDefinitionVpcConfigOutput {
	return i.ToModelExplainabilityJobDefinitionVpcConfigOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionVpcConfigArgs) ToModelExplainabilityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionVpcConfigOutput)
}

func (i ModelExplainabilityJobDefinitionVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionVpcConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionVpcConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelExplainabilityJobDefinitionVpcConfigArgs) ToModelExplainabilityJobDefinitionVpcConfigPtrOutput() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i ModelExplainabilityJobDefinitionVpcConfigArgs) ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionVpcConfigOutput).ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx)
}

// ModelExplainabilityJobDefinitionVpcConfigPtrInput is an input type that accepts ModelExplainabilityJobDefinitionVpcConfigArgs, ModelExplainabilityJobDefinitionVpcConfigPtr and ModelExplainabilityJobDefinitionVpcConfigPtrOutput values.
// You can construct a concrete instance of `ModelExplainabilityJobDefinitionVpcConfigPtrInput` via:
//
//	        ModelExplainabilityJobDefinitionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ModelExplainabilityJobDefinitionVpcConfigPtrInput interface {
	pulumi.Input

	ToModelExplainabilityJobDefinitionVpcConfigPtrOutput() ModelExplainabilityJobDefinitionVpcConfigPtrOutput
	ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(context.Context) ModelExplainabilityJobDefinitionVpcConfigPtrOutput
}

type modelExplainabilityJobDefinitionVpcConfigPtrType ModelExplainabilityJobDefinitionVpcConfigArgs

func ModelExplainabilityJobDefinitionVpcConfigPtr(v *ModelExplainabilityJobDefinitionVpcConfigArgs) ModelExplainabilityJobDefinitionVpcConfigPtrInput {
	return (*modelExplainabilityJobDefinitionVpcConfigPtrType)(v)
}

func (*modelExplainabilityJobDefinitionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i *modelExplainabilityJobDefinitionVpcConfigPtrType) ToModelExplainabilityJobDefinitionVpcConfigPtrOutput() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return i.ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *modelExplainabilityJobDefinitionVpcConfigPtrType) ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelExplainabilityJobDefinitionVpcConfigPtrOutput)
}

func (i *modelExplainabilityJobDefinitionVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionVpcConfig]{
		OutputState: i.ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelExplainabilityJobDefinitionVpcConfigOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelExplainabilityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionVpcConfigOutput) ToModelExplainabilityJobDefinitionVpcConfigOutput() ModelExplainabilityJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionVpcConfigOutput) ToModelExplainabilityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionVpcConfigOutput) ToModelExplainabilityJobDefinitionVpcConfigPtrOutput() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o.ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (o ModelExplainabilityJobDefinitionVpcConfigOutput) ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelExplainabilityJobDefinitionVpcConfig) *ModelExplainabilityJobDefinitionVpcConfig {
		return &v
	}).(ModelExplainabilityJobDefinitionVpcConfigPtrOutput)
}

func (o ModelExplainabilityJobDefinitionVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelExplainabilityJobDefinitionVpcConfig] {
	return pulumix.Output[ModelExplainabilityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelExplainabilityJobDefinitionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelExplainabilityJobDefinitionVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelExplainabilityJobDefinitionVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ModelExplainabilityJobDefinitionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelExplainabilityJobDefinitionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelExplainabilityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) ToModelExplainabilityJobDefinitionVpcConfigPtrOutput() ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) ToModelExplainabilityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelExplainabilityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelExplainabilityJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelExplainabilityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) Elem() ModelExplainabilityJobDefinitionVpcConfigOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionVpcConfig) ModelExplainabilityJobDefinitionVpcConfig {
		if v != nil {
			return *v
		}
		var ret ModelExplainabilityJobDefinitionVpcConfig
		return ret
	}).(ModelExplainabilityJobDefinitionVpcConfigOutput)
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelExplainabilityJobDefinitionVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelExplainabilityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ModelImageConfig struct {
	RepositoryAccessMode string                     `pulumi:"repositoryAccessMode"`
	RepositoryAuthConfig *ModelRepositoryAuthConfig `pulumi:"repositoryAuthConfig"`
}

// ModelImageConfigInput is an input type that accepts ModelImageConfigArgs and ModelImageConfigOutput values.
// You can construct a concrete instance of `ModelImageConfigInput` via:
//
//	ModelImageConfigArgs{...}
type ModelImageConfigInput interface {
	pulumi.Input

	ToModelImageConfigOutput() ModelImageConfigOutput
	ToModelImageConfigOutputWithContext(context.Context) ModelImageConfigOutput
}

type ModelImageConfigArgs struct {
	RepositoryAccessMode pulumi.StringInput                `pulumi:"repositoryAccessMode"`
	RepositoryAuthConfig ModelRepositoryAuthConfigPtrInput `pulumi:"repositoryAuthConfig"`
}

func (ModelImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelImageConfig)(nil)).Elem()
}

func (i ModelImageConfigArgs) ToModelImageConfigOutput() ModelImageConfigOutput {
	return i.ToModelImageConfigOutputWithContext(context.Background())
}

func (i ModelImageConfigArgs) ToModelImageConfigOutputWithContext(ctx context.Context) ModelImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelImageConfigOutput)
}

func (i ModelImageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelImageConfig] {
	return pulumix.Output[ModelImageConfig]{
		OutputState: i.ToModelImageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelImageConfigArgs) ToModelImageConfigPtrOutput() ModelImageConfigPtrOutput {
	return i.ToModelImageConfigPtrOutputWithContext(context.Background())
}

func (i ModelImageConfigArgs) ToModelImageConfigPtrOutputWithContext(ctx context.Context) ModelImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelImageConfigOutput).ToModelImageConfigPtrOutputWithContext(ctx)
}

// ModelImageConfigPtrInput is an input type that accepts ModelImageConfigArgs, ModelImageConfigPtr and ModelImageConfigPtrOutput values.
// You can construct a concrete instance of `ModelImageConfigPtrInput` via:
//
//	        ModelImageConfigArgs{...}
//
//	or:
//
//	        nil
type ModelImageConfigPtrInput interface {
	pulumi.Input

	ToModelImageConfigPtrOutput() ModelImageConfigPtrOutput
	ToModelImageConfigPtrOutputWithContext(context.Context) ModelImageConfigPtrOutput
}

type modelImageConfigPtrType ModelImageConfigArgs

func ModelImageConfigPtr(v *ModelImageConfigArgs) ModelImageConfigPtrInput {
	return (*modelImageConfigPtrType)(v)
}

func (*modelImageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelImageConfig)(nil)).Elem()
}

func (i *modelImageConfigPtrType) ToModelImageConfigPtrOutput() ModelImageConfigPtrOutput {
	return i.ToModelImageConfigPtrOutputWithContext(context.Background())
}

func (i *modelImageConfigPtrType) ToModelImageConfigPtrOutputWithContext(ctx context.Context) ModelImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelImageConfigPtrOutput)
}

func (i *modelImageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelImageConfig] {
	return pulumix.Output[*ModelImageConfig]{
		OutputState: i.ToModelImageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelImageConfigOutput struct{ *pulumi.OutputState }

func (ModelImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelImageConfig)(nil)).Elem()
}

func (o ModelImageConfigOutput) ToModelImageConfigOutput() ModelImageConfigOutput {
	return o
}

func (o ModelImageConfigOutput) ToModelImageConfigOutputWithContext(ctx context.Context) ModelImageConfigOutput {
	return o
}

func (o ModelImageConfigOutput) ToModelImageConfigPtrOutput() ModelImageConfigPtrOutput {
	return o.ToModelImageConfigPtrOutputWithContext(context.Background())
}

func (o ModelImageConfigOutput) ToModelImageConfigPtrOutputWithContext(ctx context.Context) ModelImageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelImageConfig) *ModelImageConfig {
		return &v
	}).(ModelImageConfigPtrOutput)
}

func (o ModelImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelImageConfig] {
	return pulumix.Output[ModelImageConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelImageConfigOutput) RepositoryAccessMode() pulumi.StringOutput {
	return o.ApplyT(func(v ModelImageConfig) string { return v.RepositoryAccessMode }).(pulumi.StringOutput)
}

func (o ModelImageConfigOutput) RepositoryAuthConfig() ModelRepositoryAuthConfigPtrOutput {
	return o.ApplyT(func(v ModelImageConfig) *ModelRepositoryAuthConfig { return v.RepositoryAuthConfig }).(ModelRepositoryAuthConfigPtrOutput)
}

type ModelImageConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelImageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelImageConfig)(nil)).Elem()
}

func (o ModelImageConfigPtrOutput) ToModelImageConfigPtrOutput() ModelImageConfigPtrOutput {
	return o
}

func (o ModelImageConfigPtrOutput) ToModelImageConfigPtrOutputWithContext(ctx context.Context) ModelImageConfigPtrOutput {
	return o
}

func (o ModelImageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelImageConfig] {
	return pulumix.Output[*ModelImageConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelImageConfigPtrOutput) Elem() ModelImageConfigOutput {
	return o.ApplyT(func(v *ModelImageConfig) ModelImageConfig {
		if v != nil {
			return *v
		}
		var ret ModelImageConfig
		return ret
	}).(ModelImageConfigOutput)
}

func (o ModelImageConfigPtrOutput) RepositoryAccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelImageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryAccessMode
	}).(pulumi.StringPtrOutput)
}

func (o ModelImageConfigPtrOutput) RepositoryAuthConfig() ModelRepositoryAuthConfigPtrOutput {
	return o.ApplyT(func(v *ModelImageConfig) *ModelRepositoryAuthConfig {
		if v == nil {
			return nil
		}
		return v.RepositoryAuthConfig
	}).(ModelRepositoryAuthConfigPtrOutput)
}

type ModelInferenceExecutionConfig struct {
	Mode string `pulumi:"mode"`
}

// ModelInferenceExecutionConfigInput is an input type that accepts ModelInferenceExecutionConfigArgs and ModelInferenceExecutionConfigOutput values.
// You can construct a concrete instance of `ModelInferenceExecutionConfigInput` via:
//
//	ModelInferenceExecutionConfigArgs{...}
type ModelInferenceExecutionConfigInput interface {
	pulumi.Input

	ToModelInferenceExecutionConfigOutput() ModelInferenceExecutionConfigOutput
	ToModelInferenceExecutionConfigOutputWithContext(context.Context) ModelInferenceExecutionConfigOutput
}

type ModelInferenceExecutionConfigArgs struct {
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (ModelInferenceExecutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInferenceExecutionConfig)(nil)).Elem()
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigOutput() ModelInferenceExecutionConfigOutput {
	return i.ToModelInferenceExecutionConfigOutputWithContext(context.Background())
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInferenceExecutionConfigOutput)
}

func (i ModelInferenceExecutionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelInferenceExecutionConfig] {
	return pulumix.Output[ModelInferenceExecutionConfig]{
		OutputState: i.ToModelInferenceExecutionConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigPtrOutput() ModelInferenceExecutionConfigPtrOutput {
	return i.ToModelInferenceExecutionConfigPtrOutputWithContext(context.Background())
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigPtrOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInferenceExecutionConfigOutput).ToModelInferenceExecutionConfigPtrOutputWithContext(ctx)
}

// ModelInferenceExecutionConfigPtrInput is an input type that accepts ModelInferenceExecutionConfigArgs, ModelInferenceExecutionConfigPtr and ModelInferenceExecutionConfigPtrOutput values.
// You can construct a concrete instance of `ModelInferenceExecutionConfigPtrInput` via:
//
//	        ModelInferenceExecutionConfigArgs{...}
//
//	or:
//
//	        nil
type ModelInferenceExecutionConfigPtrInput interface {
	pulumi.Input

	ToModelInferenceExecutionConfigPtrOutput() ModelInferenceExecutionConfigPtrOutput
	ToModelInferenceExecutionConfigPtrOutputWithContext(context.Context) ModelInferenceExecutionConfigPtrOutput
}

type modelInferenceExecutionConfigPtrType ModelInferenceExecutionConfigArgs

func ModelInferenceExecutionConfigPtr(v *ModelInferenceExecutionConfigArgs) ModelInferenceExecutionConfigPtrInput {
	return (*modelInferenceExecutionConfigPtrType)(v)
}

func (*modelInferenceExecutionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelInferenceExecutionConfig)(nil)).Elem()
}

func (i *modelInferenceExecutionConfigPtrType) ToModelInferenceExecutionConfigPtrOutput() ModelInferenceExecutionConfigPtrOutput {
	return i.ToModelInferenceExecutionConfigPtrOutputWithContext(context.Background())
}

func (i *modelInferenceExecutionConfigPtrType) ToModelInferenceExecutionConfigPtrOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInferenceExecutionConfigPtrOutput)
}

func (i *modelInferenceExecutionConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelInferenceExecutionConfig] {
	return pulumix.Output[*ModelInferenceExecutionConfig]{
		OutputState: i.ToModelInferenceExecutionConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelInferenceExecutionConfigOutput struct{ *pulumi.OutputState }

func (ModelInferenceExecutionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInferenceExecutionConfig)(nil)).Elem()
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigOutput() ModelInferenceExecutionConfigOutput {
	return o
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigOutput {
	return o
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigPtrOutput() ModelInferenceExecutionConfigPtrOutput {
	return o.ToModelInferenceExecutionConfigPtrOutputWithContext(context.Background())
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigPtrOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelInferenceExecutionConfig) *ModelInferenceExecutionConfig {
		return &v
	}).(ModelInferenceExecutionConfigPtrOutput)
}

func (o ModelInferenceExecutionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelInferenceExecutionConfig] {
	return pulumix.Output[ModelInferenceExecutionConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelInferenceExecutionConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ModelInferenceExecutionConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type ModelInferenceExecutionConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelInferenceExecutionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelInferenceExecutionConfig)(nil)).Elem()
}

func (o ModelInferenceExecutionConfigPtrOutput) ToModelInferenceExecutionConfigPtrOutput() ModelInferenceExecutionConfigPtrOutput {
	return o
}

func (o ModelInferenceExecutionConfigPtrOutput) ToModelInferenceExecutionConfigPtrOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigPtrOutput {
	return o
}

func (o ModelInferenceExecutionConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelInferenceExecutionConfig] {
	return pulumix.Output[*ModelInferenceExecutionConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelInferenceExecutionConfigPtrOutput) Elem() ModelInferenceExecutionConfigOutput {
	return o.ApplyT(func(v *ModelInferenceExecutionConfig) ModelInferenceExecutionConfig {
		if v != nil {
			return *v
		}
		var ret ModelInferenceExecutionConfig
		return ret
	}).(ModelInferenceExecutionConfigOutput)
}

func (o ModelInferenceExecutionConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelInferenceExecutionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ModelMultiModelConfig struct {
	ModelCacheSetting *string `pulumi:"modelCacheSetting"`
}

// ModelMultiModelConfigInput is an input type that accepts ModelMultiModelConfigArgs and ModelMultiModelConfigOutput values.
// You can construct a concrete instance of `ModelMultiModelConfigInput` via:
//
//	ModelMultiModelConfigArgs{...}
type ModelMultiModelConfigInput interface {
	pulumi.Input

	ToModelMultiModelConfigOutput() ModelMultiModelConfigOutput
	ToModelMultiModelConfigOutputWithContext(context.Context) ModelMultiModelConfigOutput
}

type ModelMultiModelConfigArgs struct {
	ModelCacheSetting pulumi.StringPtrInput `pulumi:"modelCacheSetting"`
}

func (ModelMultiModelConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMultiModelConfig)(nil)).Elem()
}

func (i ModelMultiModelConfigArgs) ToModelMultiModelConfigOutput() ModelMultiModelConfigOutput {
	return i.ToModelMultiModelConfigOutputWithContext(context.Background())
}

func (i ModelMultiModelConfigArgs) ToModelMultiModelConfigOutputWithContext(ctx context.Context) ModelMultiModelConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMultiModelConfigOutput)
}

func (i ModelMultiModelConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelMultiModelConfig] {
	return pulumix.Output[ModelMultiModelConfig]{
		OutputState: i.ToModelMultiModelConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelMultiModelConfigArgs) ToModelMultiModelConfigPtrOutput() ModelMultiModelConfigPtrOutput {
	return i.ToModelMultiModelConfigPtrOutputWithContext(context.Background())
}

func (i ModelMultiModelConfigArgs) ToModelMultiModelConfigPtrOutputWithContext(ctx context.Context) ModelMultiModelConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMultiModelConfigOutput).ToModelMultiModelConfigPtrOutputWithContext(ctx)
}

// ModelMultiModelConfigPtrInput is an input type that accepts ModelMultiModelConfigArgs, ModelMultiModelConfigPtr and ModelMultiModelConfigPtrOutput values.
// You can construct a concrete instance of `ModelMultiModelConfigPtrInput` via:
//
//	        ModelMultiModelConfigArgs{...}
//
//	or:
//
//	        nil
type ModelMultiModelConfigPtrInput interface {
	pulumi.Input

	ToModelMultiModelConfigPtrOutput() ModelMultiModelConfigPtrOutput
	ToModelMultiModelConfigPtrOutputWithContext(context.Context) ModelMultiModelConfigPtrOutput
}

type modelMultiModelConfigPtrType ModelMultiModelConfigArgs

func ModelMultiModelConfigPtr(v *ModelMultiModelConfigArgs) ModelMultiModelConfigPtrInput {
	return (*modelMultiModelConfigPtrType)(v)
}

func (*modelMultiModelConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelMultiModelConfig)(nil)).Elem()
}

func (i *modelMultiModelConfigPtrType) ToModelMultiModelConfigPtrOutput() ModelMultiModelConfigPtrOutput {
	return i.ToModelMultiModelConfigPtrOutputWithContext(context.Background())
}

func (i *modelMultiModelConfigPtrType) ToModelMultiModelConfigPtrOutputWithContext(ctx context.Context) ModelMultiModelConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelMultiModelConfigPtrOutput)
}

func (i *modelMultiModelConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelMultiModelConfig] {
	return pulumix.Output[*ModelMultiModelConfig]{
		OutputState: i.ToModelMultiModelConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelMultiModelConfigOutput struct{ *pulumi.OutputState }

func (ModelMultiModelConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelMultiModelConfig)(nil)).Elem()
}

func (o ModelMultiModelConfigOutput) ToModelMultiModelConfigOutput() ModelMultiModelConfigOutput {
	return o
}

func (o ModelMultiModelConfigOutput) ToModelMultiModelConfigOutputWithContext(ctx context.Context) ModelMultiModelConfigOutput {
	return o
}

func (o ModelMultiModelConfigOutput) ToModelMultiModelConfigPtrOutput() ModelMultiModelConfigPtrOutput {
	return o.ToModelMultiModelConfigPtrOutputWithContext(context.Background())
}

func (o ModelMultiModelConfigOutput) ToModelMultiModelConfigPtrOutputWithContext(ctx context.Context) ModelMultiModelConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelMultiModelConfig) *ModelMultiModelConfig {
		return &v
	}).(ModelMultiModelConfigPtrOutput)
}

func (o ModelMultiModelConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelMultiModelConfig] {
	return pulumix.Output[ModelMultiModelConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelMultiModelConfigOutput) ModelCacheSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelMultiModelConfig) *string { return v.ModelCacheSetting }).(pulumi.StringPtrOutput)
}

type ModelMultiModelConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelMultiModelConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelMultiModelConfig)(nil)).Elem()
}

func (o ModelMultiModelConfigPtrOutput) ToModelMultiModelConfigPtrOutput() ModelMultiModelConfigPtrOutput {
	return o
}

func (o ModelMultiModelConfigPtrOutput) ToModelMultiModelConfigPtrOutputWithContext(ctx context.Context) ModelMultiModelConfigPtrOutput {
	return o
}

func (o ModelMultiModelConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelMultiModelConfig] {
	return pulumix.Output[*ModelMultiModelConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelMultiModelConfigPtrOutput) Elem() ModelMultiModelConfigOutput {
	return o.ApplyT(func(v *ModelMultiModelConfig) ModelMultiModelConfig {
		if v != nil {
			return *v
		}
		var ret ModelMultiModelConfig
		return ret
	}).(ModelMultiModelConfigOutput)
}

func (o ModelMultiModelConfigPtrOutput) ModelCacheSetting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelMultiModelConfig) *string {
		if v == nil {
			return nil
		}
		return v.ModelCacheSetting
	}).(pulumi.StringPtrOutput)
}

// Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.
type ModelPackageAdditionalInferenceSpecificationDefinition struct {
	// The Amazon ECR registry path of the Docker image that contains the inference code.
	Containers []ModelPackageContainerDefinition `pulumi:"containers"`
	// A description of the additional Inference specification.
	Description *string `pulumi:"description"`
	// A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
	Name string `pulumi:"name"`
	// The supported MIME types for the input data.
	SupportedContentTypes []string `pulumi:"supportedContentTypes"`
	// A list of the instance types that are used to generate inferences in real-time
	SupportedRealtimeInferenceInstanceTypes []string `pulumi:"supportedRealtimeInferenceInstanceTypes"`
	// The supported MIME types for the output data.
	SupportedResponseMimeTypes []string `pulumi:"supportedResponseMimeTypes"`
	// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
	SupportedTransformInstanceTypes []string `pulumi:"supportedTransformInstanceTypes"`
}

// ModelPackageAdditionalInferenceSpecificationDefinitionInput is an input type that accepts ModelPackageAdditionalInferenceSpecificationDefinitionArgs and ModelPackageAdditionalInferenceSpecificationDefinitionOutput values.
// You can construct a concrete instance of `ModelPackageAdditionalInferenceSpecificationDefinitionInput` via:
//
//	ModelPackageAdditionalInferenceSpecificationDefinitionArgs{...}
type ModelPackageAdditionalInferenceSpecificationDefinitionInput interface {
	pulumi.Input

	ToModelPackageAdditionalInferenceSpecificationDefinitionOutput() ModelPackageAdditionalInferenceSpecificationDefinitionOutput
	ToModelPackageAdditionalInferenceSpecificationDefinitionOutputWithContext(context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionOutput
}

// Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.
type ModelPackageAdditionalInferenceSpecificationDefinitionArgs struct {
	// The Amazon ECR registry path of the Docker image that contains the inference code.
	Containers ModelPackageContainerDefinitionArrayInput `pulumi:"containers"`
	// A description of the additional Inference specification.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
	Name pulumi.StringInput `pulumi:"name"`
	// The supported MIME types for the input data.
	SupportedContentTypes pulumi.StringArrayInput `pulumi:"supportedContentTypes"`
	// A list of the instance types that are used to generate inferences in real-time
	SupportedRealtimeInferenceInstanceTypes pulumi.StringArrayInput `pulumi:"supportedRealtimeInferenceInstanceTypes"`
	// The supported MIME types for the output data.
	SupportedResponseMimeTypes pulumi.StringArrayInput `pulumi:"supportedResponseMimeTypes"`
	// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
	SupportedTransformInstanceTypes pulumi.StringArrayInput `pulumi:"supportedTransformInstanceTypes"`
}

func (ModelPackageAdditionalInferenceSpecificationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageAdditionalInferenceSpecificationDefinition)(nil)).Elem()
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArgs) ToModelPackageAdditionalInferenceSpecificationDefinitionOutput() ModelPackageAdditionalInferenceSpecificationDefinitionOutput {
	return i.ToModelPackageAdditionalInferenceSpecificationDefinitionOutputWithContext(context.Background())
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArgs) ToModelPackageAdditionalInferenceSpecificationDefinitionOutputWithContext(ctx context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageAdditionalInferenceSpecificationDefinitionOutput)
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageAdditionalInferenceSpecificationDefinition] {
	return pulumix.Output[ModelPackageAdditionalInferenceSpecificationDefinition]{
		OutputState: i.ToModelPackageAdditionalInferenceSpecificationDefinitionOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageAdditionalInferenceSpecificationDefinitionArrayInput is an input type that accepts ModelPackageAdditionalInferenceSpecificationDefinitionArray and ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput values.
// You can construct a concrete instance of `ModelPackageAdditionalInferenceSpecificationDefinitionArrayInput` via:
//
//	ModelPackageAdditionalInferenceSpecificationDefinitionArray{ ModelPackageAdditionalInferenceSpecificationDefinitionArgs{...} }
type ModelPackageAdditionalInferenceSpecificationDefinitionArrayInput interface {
	pulumi.Input

	ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput() ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput
	ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutputWithContext(context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput
}

type ModelPackageAdditionalInferenceSpecificationDefinitionArray []ModelPackageAdditionalInferenceSpecificationDefinitionInput

func (ModelPackageAdditionalInferenceSpecificationDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageAdditionalInferenceSpecificationDefinition)(nil)).Elem()
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArray) ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput() ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput {
	return i.ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutputWithContext(context.Background())
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArray) ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutputWithContext(ctx context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput)
}

func (i ModelPackageAdditionalInferenceSpecificationDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageAdditionalInferenceSpecificationDefinition] {
	return pulumix.Output[[]ModelPackageAdditionalInferenceSpecificationDefinition]{
		OutputState: i.ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

// Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.
type ModelPackageAdditionalInferenceSpecificationDefinitionOutput struct{ *pulumi.OutputState }

func (ModelPackageAdditionalInferenceSpecificationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageAdditionalInferenceSpecificationDefinition)(nil)).Elem()
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) ToModelPackageAdditionalInferenceSpecificationDefinitionOutput() ModelPackageAdditionalInferenceSpecificationDefinitionOutput {
	return o
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) ToModelPackageAdditionalInferenceSpecificationDefinitionOutputWithContext(ctx context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionOutput {
	return o
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageAdditionalInferenceSpecificationDefinition] {
	return pulumix.Output[ModelPackageAdditionalInferenceSpecificationDefinition]{
		OutputState: o.OutputState,
	}
}

// The Amazon ECR registry path of the Docker image that contains the inference code.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) Containers() ModelPackageContainerDefinitionArrayOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) []ModelPackageContainerDefinition {
		return v.Containers
	}).(ModelPackageContainerDefinitionArrayOutput)
}

// A description of the additional Inference specification.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// The supported MIME types for the input data.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) SupportedContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) []string {
		return v.SupportedContentTypes
	}).(pulumi.StringArrayOutput)
}

// A list of the instance types that are used to generate inferences in real-time
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) SupportedRealtimeInferenceInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) []string {
		return v.SupportedRealtimeInferenceInstanceTypes
	}).(pulumi.StringArrayOutput)
}

// The supported MIME types for the output data.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) SupportedResponseMimeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) []string {
		return v.SupportedResponseMimeTypes
	}).(pulumi.StringArrayOutput)
}

// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
func (o ModelPackageAdditionalInferenceSpecificationDefinitionOutput) SupportedTransformInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageAdditionalInferenceSpecificationDefinition) []string {
		return v.SupportedTransformInstanceTypes
	}).(pulumi.StringArrayOutput)
}

type ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageAdditionalInferenceSpecificationDefinition)(nil)).Elem()
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput) ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput() ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput {
	return o
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput) ToModelPackageAdditionalInferenceSpecificationDefinitionArrayOutputWithContext(ctx context.Context) ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput {
	return o
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageAdditionalInferenceSpecificationDefinition] {
	return pulumix.Output[[]ModelPackageAdditionalInferenceSpecificationDefinition]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput) Index(i pulumi.IntInput) ModelPackageAdditionalInferenceSpecificationDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageAdditionalInferenceSpecificationDefinition {
		return vs[0].([]ModelPackageAdditionalInferenceSpecificationDefinition)[vs[1].(int)]
	}).(ModelPackageAdditionalInferenceSpecificationDefinitionOutput)
}

// Contains bias metrics for a model.
type ModelPackageBias struct {
	PostTrainingReport *ModelPackageMetricsSource `pulumi:"postTrainingReport"`
	PreTrainingReport  *ModelPackageMetricsSource `pulumi:"preTrainingReport"`
	Report             *ModelPackageMetricsSource `pulumi:"report"`
}

// ModelPackageBiasInput is an input type that accepts ModelPackageBiasArgs and ModelPackageBiasOutput values.
// You can construct a concrete instance of `ModelPackageBiasInput` via:
//
//	ModelPackageBiasArgs{...}
type ModelPackageBiasInput interface {
	pulumi.Input

	ToModelPackageBiasOutput() ModelPackageBiasOutput
	ToModelPackageBiasOutputWithContext(context.Context) ModelPackageBiasOutput
}

// Contains bias metrics for a model.
type ModelPackageBiasArgs struct {
	PostTrainingReport ModelPackageMetricsSourcePtrInput `pulumi:"postTrainingReport"`
	PreTrainingReport  ModelPackageMetricsSourcePtrInput `pulumi:"preTrainingReport"`
	Report             ModelPackageMetricsSourcePtrInput `pulumi:"report"`
}

func (ModelPackageBiasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageBias)(nil)).Elem()
}

func (i ModelPackageBiasArgs) ToModelPackageBiasOutput() ModelPackageBiasOutput {
	return i.ToModelPackageBiasOutputWithContext(context.Background())
}

func (i ModelPackageBiasArgs) ToModelPackageBiasOutputWithContext(ctx context.Context) ModelPackageBiasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageBiasOutput)
}

func (i ModelPackageBiasArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageBias] {
	return pulumix.Output[ModelPackageBias]{
		OutputState: i.ToModelPackageBiasOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageBiasArgs) ToModelPackageBiasPtrOutput() ModelPackageBiasPtrOutput {
	return i.ToModelPackageBiasPtrOutputWithContext(context.Background())
}

func (i ModelPackageBiasArgs) ToModelPackageBiasPtrOutputWithContext(ctx context.Context) ModelPackageBiasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageBiasOutput).ToModelPackageBiasPtrOutputWithContext(ctx)
}

// ModelPackageBiasPtrInput is an input type that accepts ModelPackageBiasArgs, ModelPackageBiasPtr and ModelPackageBiasPtrOutput values.
// You can construct a concrete instance of `ModelPackageBiasPtrInput` via:
//
//	        ModelPackageBiasArgs{...}
//
//	or:
//
//	        nil
type ModelPackageBiasPtrInput interface {
	pulumi.Input

	ToModelPackageBiasPtrOutput() ModelPackageBiasPtrOutput
	ToModelPackageBiasPtrOutputWithContext(context.Context) ModelPackageBiasPtrOutput
}

type modelPackageBiasPtrType ModelPackageBiasArgs

func ModelPackageBiasPtr(v *ModelPackageBiasArgs) ModelPackageBiasPtrInput {
	return (*modelPackageBiasPtrType)(v)
}

func (*modelPackageBiasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageBias)(nil)).Elem()
}

func (i *modelPackageBiasPtrType) ToModelPackageBiasPtrOutput() ModelPackageBiasPtrOutput {
	return i.ToModelPackageBiasPtrOutputWithContext(context.Background())
}

func (i *modelPackageBiasPtrType) ToModelPackageBiasPtrOutputWithContext(ctx context.Context) ModelPackageBiasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageBiasPtrOutput)
}

func (i *modelPackageBiasPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageBias] {
	return pulumix.Output[*ModelPackageBias]{
		OutputState: i.ToModelPackageBiasPtrOutputWithContext(ctx).OutputState,
	}
}

// Contains bias metrics for a model.
type ModelPackageBiasOutput struct{ *pulumi.OutputState }

func (ModelPackageBiasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageBias)(nil)).Elem()
}

func (o ModelPackageBiasOutput) ToModelPackageBiasOutput() ModelPackageBiasOutput {
	return o
}

func (o ModelPackageBiasOutput) ToModelPackageBiasOutputWithContext(ctx context.Context) ModelPackageBiasOutput {
	return o
}

func (o ModelPackageBiasOutput) ToModelPackageBiasPtrOutput() ModelPackageBiasPtrOutput {
	return o.ToModelPackageBiasPtrOutputWithContext(context.Background())
}

func (o ModelPackageBiasOutput) ToModelPackageBiasPtrOutputWithContext(ctx context.Context) ModelPackageBiasPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageBias) *ModelPackageBias {
		return &v
	}).(ModelPackageBiasPtrOutput)
}

func (o ModelPackageBiasOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageBias] {
	return pulumix.Output[ModelPackageBias]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageBiasOutput) PostTrainingReport() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageBias) *ModelPackageMetricsSource { return v.PostTrainingReport }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageBiasOutput) PreTrainingReport() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageBias) *ModelPackageMetricsSource { return v.PreTrainingReport }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageBiasOutput) Report() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageBias) *ModelPackageMetricsSource { return v.Report }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageBiasPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageBiasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageBias)(nil)).Elem()
}

func (o ModelPackageBiasPtrOutput) ToModelPackageBiasPtrOutput() ModelPackageBiasPtrOutput {
	return o
}

func (o ModelPackageBiasPtrOutput) ToModelPackageBiasPtrOutputWithContext(ctx context.Context) ModelPackageBiasPtrOutput {
	return o
}

func (o ModelPackageBiasPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageBias] {
	return pulumix.Output[*ModelPackageBias]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageBiasPtrOutput) Elem() ModelPackageBiasOutput {
	return o.ApplyT(func(v *ModelPackageBias) ModelPackageBias {
		if v != nil {
			return *v
		}
		var ret ModelPackageBias
		return ret
	}).(ModelPackageBiasOutput)
}

func (o ModelPackageBiasPtrOutput) PostTrainingReport() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageBias) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.PostTrainingReport
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageBiasPtrOutput) PreTrainingReport() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageBias) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.PreTrainingReport
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageBiasPtrOutput) Report() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageBias) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Report
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Describes the Docker container for the model package.
type ModelPackageContainerDefinition struct {
	// The DNS host name for the Docker container.
	ContainerHostname *string                  `pulumi:"containerHostname"`
	Environment       *ModelPackageEnvironment `pulumi:"environment"`
	// The machine learning framework of the model package container image.
	Framework *string `pulumi:"framework"`
	// The framework version of the Model Package Container Image.
	FrameworkVersion *string `pulumi:"frameworkVersion"`
	// The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
	Image string `pulumi:"image"`
	// An MD5 hash of the training algorithm that identifies the Docker image used for training.
	ImageDigest *string `pulumi:"imageDigest"`
	// A structure with Model Input details.
	ModelDataUrl *string                                              `pulumi:"modelDataUrl"`
	ModelInput   *ModelPackageContainerDefinitionModelInputProperties `pulumi:"modelInput"`
	// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
	NearestModelName *string `pulumi:"nearestModelName"`
}

// ModelPackageContainerDefinitionInput is an input type that accepts ModelPackageContainerDefinitionArgs and ModelPackageContainerDefinitionOutput values.
// You can construct a concrete instance of `ModelPackageContainerDefinitionInput` via:
//
//	ModelPackageContainerDefinitionArgs{...}
type ModelPackageContainerDefinitionInput interface {
	pulumi.Input

	ToModelPackageContainerDefinitionOutput() ModelPackageContainerDefinitionOutput
	ToModelPackageContainerDefinitionOutputWithContext(context.Context) ModelPackageContainerDefinitionOutput
}

// Describes the Docker container for the model package.
type ModelPackageContainerDefinitionArgs struct {
	// The DNS host name for the Docker container.
	ContainerHostname pulumi.StringPtrInput           `pulumi:"containerHostname"`
	Environment       ModelPackageEnvironmentPtrInput `pulumi:"environment"`
	// The machine learning framework of the model package container image.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// The framework version of the Model Package Container Image.
	FrameworkVersion pulumi.StringPtrInput `pulumi:"frameworkVersion"`
	// The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
	Image pulumi.StringInput `pulumi:"image"`
	// An MD5 hash of the training algorithm that identifies the Docker image used for training.
	ImageDigest pulumi.StringPtrInput `pulumi:"imageDigest"`
	// A structure with Model Input details.
	ModelDataUrl pulumi.StringPtrInput                                       `pulumi:"modelDataUrl"`
	ModelInput   ModelPackageContainerDefinitionModelInputPropertiesPtrInput `pulumi:"modelInput"`
	// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
	NearestModelName pulumi.StringPtrInput `pulumi:"nearestModelName"`
}

func (ModelPackageContainerDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageContainerDefinition)(nil)).Elem()
}

func (i ModelPackageContainerDefinitionArgs) ToModelPackageContainerDefinitionOutput() ModelPackageContainerDefinitionOutput {
	return i.ToModelPackageContainerDefinitionOutputWithContext(context.Background())
}

func (i ModelPackageContainerDefinitionArgs) ToModelPackageContainerDefinitionOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageContainerDefinitionOutput)
}

func (i ModelPackageContainerDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageContainerDefinition] {
	return pulumix.Output[ModelPackageContainerDefinition]{
		OutputState: i.ToModelPackageContainerDefinitionOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageContainerDefinitionArrayInput is an input type that accepts ModelPackageContainerDefinitionArray and ModelPackageContainerDefinitionArrayOutput values.
// You can construct a concrete instance of `ModelPackageContainerDefinitionArrayInput` via:
//
//	ModelPackageContainerDefinitionArray{ ModelPackageContainerDefinitionArgs{...} }
type ModelPackageContainerDefinitionArrayInput interface {
	pulumi.Input

	ToModelPackageContainerDefinitionArrayOutput() ModelPackageContainerDefinitionArrayOutput
	ToModelPackageContainerDefinitionArrayOutputWithContext(context.Context) ModelPackageContainerDefinitionArrayOutput
}

type ModelPackageContainerDefinitionArray []ModelPackageContainerDefinitionInput

func (ModelPackageContainerDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageContainerDefinition)(nil)).Elem()
}

func (i ModelPackageContainerDefinitionArray) ToModelPackageContainerDefinitionArrayOutput() ModelPackageContainerDefinitionArrayOutput {
	return i.ToModelPackageContainerDefinitionArrayOutputWithContext(context.Background())
}

func (i ModelPackageContainerDefinitionArray) ToModelPackageContainerDefinitionArrayOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageContainerDefinitionArrayOutput)
}

func (i ModelPackageContainerDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageContainerDefinition] {
	return pulumix.Output[[]ModelPackageContainerDefinition]{
		OutputState: i.ToModelPackageContainerDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

// Describes the Docker container for the model package.
type ModelPackageContainerDefinitionOutput struct{ *pulumi.OutputState }

func (ModelPackageContainerDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageContainerDefinition)(nil)).Elem()
}

func (o ModelPackageContainerDefinitionOutput) ToModelPackageContainerDefinitionOutput() ModelPackageContainerDefinitionOutput {
	return o
}

func (o ModelPackageContainerDefinitionOutput) ToModelPackageContainerDefinitionOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionOutput {
	return o
}

func (o ModelPackageContainerDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageContainerDefinition] {
	return pulumix.Output[ModelPackageContainerDefinition]{
		OutputState: o.OutputState,
	}
}

// The DNS host name for the Docker container.
func (o ModelPackageContainerDefinitionOutput) ContainerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.ContainerHostname }).(pulumi.StringPtrOutput)
}

func (o ModelPackageContainerDefinitionOutput) Environment() ModelPackageEnvironmentPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *ModelPackageEnvironment { return v.Environment }).(ModelPackageEnvironmentPtrOutput)
}

// The machine learning framework of the model package container image.
func (o ModelPackageContainerDefinitionOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// The framework version of the Model Package Container Image.
func (o ModelPackageContainerDefinitionOutput) FrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.FrameworkVersion }).(pulumi.StringPtrOutput)
}

// The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
func (o ModelPackageContainerDefinitionOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) string { return v.Image }).(pulumi.StringOutput)
}

// An MD5 hash of the training algorithm that identifies the Docker image used for training.
func (o ModelPackageContainerDefinitionOutput) ImageDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.ImageDigest }).(pulumi.StringPtrOutput)
}

// A structure with Model Input details.
func (o ModelPackageContainerDefinitionOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

func (o ModelPackageContainerDefinitionOutput) ModelInput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *ModelPackageContainerDefinitionModelInputProperties {
		return v.ModelInput
	}).(ModelPackageContainerDefinitionModelInputPropertiesPtrOutput)
}

// The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
func (o ModelPackageContainerDefinitionOutput) NearestModelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinition) *string { return v.NearestModelName }).(pulumi.StringPtrOutput)
}

type ModelPackageContainerDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageContainerDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageContainerDefinition)(nil)).Elem()
}

func (o ModelPackageContainerDefinitionArrayOutput) ToModelPackageContainerDefinitionArrayOutput() ModelPackageContainerDefinitionArrayOutput {
	return o
}

func (o ModelPackageContainerDefinitionArrayOutput) ToModelPackageContainerDefinitionArrayOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionArrayOutput {
	return o
}

func (o ModelPackageContainerDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageContainerDefinition] {
	return pulumix.Output[[]ModelPackageContainerDefinition]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageContainerDefinitionArrayOutput) Index(i pulumi.IntInput) ModelPackageContainerDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageContainerDefinition {
		return vs[0].([]ModelPackageContainerDefinition)[vs[1].(int)]
	}).(ModelPackageContainerDefinitionOutput)
}

type ModelPackageContainerDefinitionModelInputProperties struct {
	// The input configuration object for the model.
	DataInputConfig string `pulumi:"dataInputConfig"`
}

// ModelPackageContainerDefinitionModelInputPropertiesInput is an input type that accepts ModelPackageContainerDefinitionModelInputPropertiesArgs and ModelPackageContainerDefinitionModelInputPropertiesOutput values.
// You can construct a concrete instance of `ModelPackageContainerDefinitionModelInputPropertiesInput` via:
//
//	ModelPackageContainerDefinitionModelInputPropertiesArgs{...}
type ModelPackageContainerDefinitionModelInputPropertiesInput interface {
	pulumi.Input

	ToModelPackageContainerDefinitionModelInputPropertiesOutput() ModelPackageContainerDefinitionModelInputPropertiesOutput
	ToModelPackageContainerDefinitionModelInputPropertiesOutputWithContext(context.Context) ModelPackageContainerDefinitionModelInputPropertiesOutput
}

type ModelPackageContainerDefinitionModelInputPropertiesArgs struct {
	// The input configuration object for the model.
	DataInputConfig pulumi.StringInput `pulumi:"dataInputConfig"`
}

func (ModelPackageContainerDefinitionModelInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageContainerDefinitionModelInputProperties)(nil)).Elem()
}

func (i ModelPackageContainerDefinitionModelInputPropertiesArgs) ToModelPackageContainerDefinitionModelInputPropertiesOutput() ModelPackageContainerDefinitionModelInputPropertiesOutput {
	return i.ToModelPackageContainerDefinitionModelInputPropertiesOutputWithContext(context.Background())
}

func (i ModelPackageContainerDefinitionModelInputPropertiesArgs) ToModelPackageContainerDefinitionModelInputPropertiesOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageContainerDefinitionModelInputPropertiesOutput)
}

func (i ModelPackageContainerDefinitionModelInputPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageContainerDefinitionModelInputProperties] {
	return pulumix.Output[ModelPackageContainerDefinitionModelInputProperties]{
		OutputState: i.ToModelPackageContainerDefinitionModelInputPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageContainerDefinitionModelInputPropertiesArgs) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return i.ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelPackageContainerDefinitionModelInputPropertiesArgs) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageContainerDefinitionModelInputPropertiesOutput).ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx)
}

// ModelPackageContainerDefinitionModelInputPropertiesPtrInput is an input type that accepts ModelPackageContainerDefinitionModelInputPropertiesArgs, ModelPackageContainerDefinitionModelInputPropertiesPtr and ModelPackageContainerDefinitionModelInputPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelPackageContainerDefinitionModelInputPropertiesPtrInput` via:
//
//	        ModelPackageContainerDefinitionModelInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelPackageContainerDefinitionModelInputPropertiesPtrInput interface {
	pulumi.Input

	ToModelPackageContainerDefinitionModelInputPropertiesPtrOutput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput
	ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(context.Context) ModelPackageContainerDefinitionModelInputPropertiesPtrOutput
}

type modelPackageContainerDefinitionModelInputPropertiesPtrType ModelPackageContainerDefinitionModelInputPropertiesArgs

func ModelPackageContainerDefinitionModelInputPropertiesPtr(v *ModelPackageContainerDefinitionModelInputPropertiesArgs) ModelPackageContainerDefinitionModelInputPropertiesPtrInput {
	return (*modelPackageContainerDefinitionModelInputPropertiesPtrType)(v)
}

func (*modelPackageContainerDefinitionModelInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageContainerDefinitionModelInputProperties)(nil)).Elem()
}

func (i *modelPackageContainerDefinitionModelInputPropertiesPtrType) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return i.ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelPackageContainerDefinitionModelInputPropertiesPtrType) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageContainerDefinitionModelInputPropertiesPtrOutput)
}

func (i *modelPackageContainerDefinitionModelInputPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageContainerDefinitionModelInputProperties] {
	return pulumix.Output[*ModelPackageContainerDefinitionModelInputProperties]{
		OutputState: i.ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelPackageContainerDefinitionModelInputPropertiesOutput struct{ *pulumi.OutputState }

func (ModelPackageContainerDefinitionModelInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageContainerDefinitionModelInputProperties)(nil)).Elem()
}

func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) ToModelPackageContainerDefinitionModelInputPropertiesOutput() ModelPackageContainerDefinitionModelInputPropertiesOutput {
	return o
}

func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) ToModelPackageContainerDefinitionModelInputPropertiesOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesOutput {
	return o
}

func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return o.ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageContainerDefinitionModelInputProperties) *ModelPackageContainerDefinitionModelInputProperties {
		return &v
	}).(ModelPackageContainerDefinitionModelInputPropertiesPtrOutput)
}

func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageContainerDefinitionModelInputProperties] {
	return pulumix.Output[ModelPackageContainerDefinitionModelInputProperties]{
		OutputState: o.OutputState,
	}
}

// The input configuration object for the model.
func (o ModelPackageContainerDefinitionModelInputPropertiesOutput) DataInputConfig() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageContainerDefinitionModelInputProperties) string { return v.DataInputConfig }).(pulumi.StringOutput)
}

type ModelPackageContainerDefinitionModelInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageContainerDefinitionModelInputProperties)(nil)).Elem()
}

func (o ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutput() ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return o
}

func (o ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) ToModelPackageContainerDefinitionModelInputPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageContainerDefinitionModelInputPropertiesPtrOutput {
	return o
}

func (o ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageContainerDefinitionModelInputProperties] {
	return pulumix.Output[*ModelPackageContainerDefinitionModelInputProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) Elem() ModelPackageContainerDefinitionModelInputPropertiesOutput {
	return o.ApplyT(func(v *ModelPackageContainerDefinitionModelInputProperties) ModelPackageContainerDefinitionModelInputProperties {
		if v != nil {
			return *v
		}
		var ret ModelPackageContainerDefinitionModelInputProperties
		return ret
	}).(ModelPackageContainerDefinitionModelInputPropertiesOutput)
}

// The input configuration object for the model.
func (o ModelPackageContainerDefinitionModelInputPropertiesPtrOutput) DataInputConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageContainerDefinitionModelInputProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DataInputConfig
	}).(pulumi.StringPtrOutput)
}

// The metadata properties associated with the model package versions.
type ModelPackageCustomerMetadataProperties struct {
}

// ModelPackageCustomerMetadataPropertiesInput is an input type that accepts ModelPackageCustomerMetadataPropertiesArgs and ModelPackageCustomerMetadataPropertiesOutput values.
// You can construct a concrete instance of `ModelPackageCustomerMetadataPropertiesInput` via:
//
//	ModelPackageCustomerMetadataPropertiesArgs{...}
type ModelPackageCustomerMetadataPropertiesInput interface {
	pulumi.Input

	ToModelPackageCustomerMetadataPropertiesOutput() ModelPackageCustomerMetadataPropertiesOutput
	ToModelPackageCustomerMetadataPropertiesOutputWithContext(context.Context) ModelPackageCustomerMetadataPropertiesOutput
}

// The metadata properties associated with the model package versions.
type ModelPackageCustomerMetadataPropertiesArgs struct {
}

func (ModelPackageCustomerMetadataPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageCustomerMetadataProperties)(nil)).Elem()
}

func (i ModelPackageCustomerMetadataPropertiesArgs) ToModelPackageCustomerMetadataPropertiesOutput() ModelPackageCustomerMetadataPropertiesOutput {
	return i.ToModelPackageCustomerMetadataPropertiesOutputWithContext(context.Background())
}

func (i ModelPackageCustomerMetadataPropertiesArgs) ToModelPackageCustomerMetadataPropertiesOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageCustomerMetadataPropertiesOutput)
}

func (i ModelPackageCustomerMetadataPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageCustomerMetadataProperties] {
	return pulumix.Output[ModelPackageCustomerMetadataProperties]{
		OutputState: i.ToModelPackageCustomerMetadataPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageCustomerMetadataPropertiesArgs) ToModelPackageCustomerMetadataPropertiesPtrOutput() ModelPackageCustomerMetadataPropertiesPtrOutput {
	return i.ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelPackageCustomerMetadataPropertiesArgs) ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageCustomerMetadataPropertiesOutput).ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx)
}

// ModelPackageCustomerMetadataPropertiesPtrInput is an input type that accepts ModelPackageCustomerMetadataPropertiesArgs, ModelPackageCustomerMetadataPropertiesPtr and ModelPackageCustomerMetadataPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelPackageCustomerMetadataPropertiesPtrInput` via:
//
//	        ModelPackageCustomerMetadataPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelPackageCustomerMetadataPropertiesPtrInput interface {
	pulumi.Input

	ToModelPackageCustomerMetadataPropertiesPtrOutput() ModelPackageCustomerMetadataPropertiesPtrOutput
	ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(context.Context) ModelPackageCustomerMetadataPropertiesPtrOutput
}

type modelPackageCustomerMetadataPropertiesPtrType ModelPackageCustomerMetadataPropertiesArgs

func ModelPackageCustomerMetadataPropertiesPtr(v *ModelPackageCustomerMetadataPropertiesArgs) ModelPackageCustomerMetadataPropertiesPtrInput {
	return (*modelPackageCustomerMetadataPropertiesPtrType)(v)
}

func (*modelPackageCustomerMetadataPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageCustomerMetadataProperties)(nil)).Elem()
}

func (i *modelPackageCustomerMetadataPropertiesPtrType) ToModelPackageCustomerMetadataPropertiesPtrOutput() ModelPackageCustomerMetadataPropertiesPtrOutput {
	return i.ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelPackageCustomerMetadataPropertiesPtrType) ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageCustomerMetadataPropertiesPtrOutput)
}

func (i *modelPackageCustomerMetadataPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageCustomerMetadataProperties] {
	return pulumix.Output[*ModelPackageCustomerMetadataProperties]{
		OutputState: i.ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// The metadata properties associated with the model package versions.
type ModelPackageCustomerMetadataPropertiesOutput struct{ *pulumi.OutputState }

func (ModelPackageCustomerMetadataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageCustomerMetadataProperties)(nil)).Elem()
}

func (o ModelPackageCustomerMetadataPropertiesOutput) ToModelPackageCustomerMetadataPropertiesOutput() ModelPackageCustomerMetadataPropertiesOutput {
	return o
}

func (o ModelPackageCustomerMetadataPropertiesOutput) ToModelPackageCustomerMetadataPropertiesOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesOutput {
	return o
}

func (o ModelPackageCustomerMetadataPropertiesOutput) ToModelPackageCustomerMetadataPropertiesPtrOutput() ModelPackageCustomerMetadataPropertiesPtrOutput {
	return o.ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelPackageCustomerMetadataPropertiesOutput) ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageCustomerMetadataProperties) *ModelPackageCustomerMetadataProperties {
		return &v
	}).(ModelPackageCustomerMetadataPropertiesPtrOutput)
}

func (o ModelPackageCustomerMetadataPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageCustomerMetadataProperties] {
	return pulumix.Output[ModelPackageCustomerMetadataProperties]{
		OutputState: o.OutputState,
	}
}

type ModelPackageCustomerMetadataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageCustomerMetadataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageCustomerMetadataProperties)(nil)).Elem()
}

func (o ModelPackageCustomerMetadataPropertiesPtrOutput) ToModelPackageCustomerMetadataPropertiesPtrOutput() ModelPackageCustomerMetadataPropertiesPtrOutput {
	return o
}

func (o ModelPackageCustomerMetadataPropertiesPtrOutput) ToModelPackageCustomerMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageCustomerMetadataPropertiesPtrOutput {
	return o
}

func (o ModelPackageCustomerMetadataPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageCustomerMetadataProperties] {
	return pulumix.Output[*ModelPackageCustomerMetadataProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageCustomerMetadataPropertiesPtrOutput) Elem() ModelPackageCustomerMetadataPropertiesOutput {
	return o.ApplyT(func(v *ModelPackageCustomerMetadataProperties) ModelPackageCustomerMetadataProperties {
		if v != nil {
			return *v
		}
		var ret ModelPackageCustomerMetadataProperties
		return ret
	}).(ModelPackageCustomerMetadataPropertiesOutput)
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageDataSource struct {
	S3DataSource ModelPackageS3DataSource `pulumi:"s3DataSource"`
}

// ModelPackageDataSourceInput is an input type that accepts ModelPackageDataSourceArgs and ModelPackageDataSourceOutput values.
// You can construct a concrete instance of `ModelPackageDataSourceInput` via:
//
//	ModelPackageDataSourceArgs{...}
type ModelPackageDataSourceInput interface {
	pulumi.Input

	ToModelPackageDataSourceOutput() ModelPackageDataSourceOutput
	ToModelPackageDataSourceOutputWithContext(context.Context) ModelPackageDataSourceOutput
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageDataSourceArgs struct {
	S3DataSource ModelPackageS3DataSourceInput `pulumi:"s3DataSource"`
}

func (ModelPackageDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDataSource)(nil)).Elem()
}

func (i ModelPackageDataSourceArgs) ToModelPackageDataSourceOutput() ModelPackageDataSourceOutput {
	return i.ToModelPackageDataSourceOutputWithContext(context.Background())
}

func (i ModelPackageDataSourceArgs) ToModelPackageDataSourceOutputWithContext(ctx context.Context) ModelPackageDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDataSourceOutput)
}

func (i ModelPackageDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDataSource] {
	return pulumix.Output[ModelPackageDataSource]{
		OutputState: i.ToModelPackageDataSourceOutputWithContext(ctx).OutputState,
	}
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageDataSourceOutput struct{ *pulumi.OutputState }

func (ModelPackageDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDataSource)(nil)).Elem()
}

func (o ModelPackageDataSourceOutput) ToModelPackageDataSourceOutput() ModelPackageDataSourceOutput {
	return o
}

func (o ModelPackageDataSourceOutput) ToModelPackageDataSourceOutputWithContext(ctx context.Context) ModelPackageDataSourceOutput {
	return o
}

func (o ModelPackageDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDataSource] {
	return pulumix.Output[ModelPackageDataSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDataSourceOutput) S3DataSource() ModelPackageS3DataSourceOutput {
	return o.ApplyT(func(v ModelPackageDataSource) ModelPackageS3DataSource { return v.S3DataSource }).(ModelPackageS3DataSourceOutput)
}

// Represents the drift check baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBaselines struct {
	Bias             *ModelPackageDriftCheckBias             `pulumi:"bias"`
	Explainability   *ModelPackageDriftCheckExplainability   `pulumi:"explainability"`
	ModelDataQuality *ModelPackageDriftCheckModelDataQuality `pulumi:"modelDataQuality"`
	ModelQuality     *ModelPackageDriftCheckModelQuality     `pulumi:"modelQuality"`
}

// ModelPackageDriftCheckBaselinesInput is an input type that accepts ModelPackageDriftCheckBaselinesArgs and ModelPackageDriftCheckBaselinesOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckBaselinesInput` via:
//
//	ModelPackageDriftCheckBaselinesArgs{...}
type ModelPackageDriftCheckBaselinesInput interface {
	pulumi.Input

	ToModelPackageDriftCheckBaselinesOutput() ModelPackageDriftCheckBaselinesOutput
	ToModelPackageDriftCheckBaselinesOutputWithContext(context.Context) ModelPackageDriftCheckBaselinesOutput
}

// Represents the drift check baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBaselinesArgs struct {
	Bias             ModelPackageDriftCheckBiasPtrInput             `pulumi:"bias"`
	Explainability   ModelPackageDriftCheckExplainabilityPtrInput   `pulumi:"explainability"`
	ModelDataQuality ModelPackageDriftCheckModelDataQualityPtrInput `pulumi:"modelDataQuality"`
	ModelQuality     ModelPackageDriftCheckModelQualityPtrInput     `pulumi:"modelQuality"`
}

func (ModelPackageDriftCheckBaselinesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckBaselines)(nil)).Elem()
}

func (i ModelPackageDriftCheckBaselinesArgs) ToModelPackageDriftCheckBaselinesOutput() ModelPackageDriftCheckBaselinesOutput {
	return i.ToModelPackageDriftCheckBaselinesOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckBaselinesArgs) ToModelPackageDriftCheckBaselinesOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBaselinesOutput)
}

func (i ModelPackageDriftCheckBaselinesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckBaselines] {
	return pulumix.Output[ModelPackageDriftCheckBaselines]{
		OutputState: i.ToModelPackageDriftCheckBaselinesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageDriftCheckBaselinesArgs) ToModelPackageDriftCheckBaselinesPtrOutput() ModelPackageDriftCheckBaselinesPtrOutput {
	return i.ToModelPackageDriftCheckBaselinesPtrOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckBaselinesArgs) ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBaselinesOutput).ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx)
}

// ModelPackageDriftCheckBaselinesPtrInput is an input type that accepts ModelPackageDriftCheckBaselinesArgs, ModelPackageDriftCheckBaselinesPtr and ModelPackageDriftCheckBaselinesPtrOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckBaselinesPtrInput` via:
//
//	        ModelPackageDriftCheckBaselinesArgs{...}
//
//	or:
//
//	        nil
type ModelPackageDriftCheckBaselinesPtrInput interface {
	pulumi.Input

	ToModelPackageDriftCheckBaselinesPtrOutput() ModelPackageDriftCheckBaselinesPtrOutput
	ToModelPackageDriftCheckBaselinesPtrOutputWithContext(context.Context) ModelPackageDriftCheckBaselinesPtrOutput
}

type modelPackageDriftCheckBaselinesPtrType ModelPackageDriftCheckBaselinesArgs

func ModelPackageDriftCheckBaselinesPtr(v *ModelPackageDriftCheckBaselinesArgs) ModelPackageDriftCheckBaselinesPtrInput {
	return (*modelPackageDriftCheckBaselinesPtrType)(v)
}

func (*modelPackageDriftCheckBaselinesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckBaselines)(nil)).Elem()
}

func (i *modelPackageDriftCheckBaselinesPtrType) ToModelPackageDriftCheckBaselinesPtrOutput() ModelPackageDriftCheckBaselinesPtrOutput {
	return i.ToModelPackageDriftCheckBaselinesPtrOutputWithContext(context.Background())
}

func (i *modelPackageDriftCheckBaselinesPtrType) ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBaselinesPtrOutput)
}

func (i *modelPackageDriftCheckBaselinesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckBaselines] {
	return pulumix.Output[*ModelPackageDriftCheckBaselines]{
		OutputState: i.ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx).OutputState,
	}
}

// Represents the drift check baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBaselinesOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckBaselinesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckBaselines)(nil)).Elem()
}

func (o ModelPackageDriftCheckBaselinesOutput) ToModelPackageDriftCheckBaselinesOutput() ModelPackageDriftCheckBaselinesOutput {
	return o
}

func (o ModelPackageDriftCheckBaselinesOutput) ToModelPackageDriftCheckBaselinesOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesOutput {
	return o
}

func (o ModelPackageDriftCheckBaselinesOutput) ToModelPackageDriftCheckBaselinesPtrOutput() ModelPackageDriftCheckBaselinesPtrOutput {
	return o.ToModelPackageDriftCheckBaselinesPtrOutputWithContext(context.Background())
}

func (o ModelPackageDriftCheckBaselinesOutput) ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckBaselines {
		return &v
	}).(ModelPackageDriftCheckBaselinesPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckBaselines] {
	return pulumix.Output[ModelPackageDriftCheckBaselines]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckBaselinesOutput) Bias() ModelPackageDriftCheckBiasPtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckBias { return v.Bias }).(ModelPackageDriftCheckBiasPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesOutput) Explainability() ModelPackageDriftCheckExplainabilityPtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckExplainability { return v.Explainability }).(ModelPackageDriftCheckExplainabilityPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesOutput) ModelDataQuality() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckModelDataQuality {
		return v.ModelDataQuality
	}).(ModelPackageDriftCheckModelDataQualityPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesOutput) ModelQuality() ModelPackageDriftCheckModelQualityPtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckModelQuality { return v.ModelQuality }).(ModelPackageDriftCheckModelQualityPtrOutput)
}

type ModelPackageDriftCheckBaselinesPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckBaselinesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckBaselines)(nil)).Elem()
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) ToModelPackageDriftCheckBaselinesPtrOutput() ModelPackageDriftCheckBaselinesPtrOutput {
	return o
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) ToModelPackageDriftCheckBaselinesPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBaselinesPtrOutput {
	return o
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckBaselines] {
	return pulumix.Output[*ModelPackageDriftCheckBaselines]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) Elem() ModelPackageDriftCheckBaselinesOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBaselines) ModelPackageDriftCheckBaselines {
		if v != nil {
			return *v
		}
		var ret ModelPackageDriftCheckBaselines
		return ret
	}).(ModelPackageDriftCheckBaselinesOutput)
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) Bias() ModelPackageDriftCheckBiasPtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckBias {
		if v == nil {
			return nil
		}
		return v.Bias
	}).(ModelPackageDriftCheckBiasPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) Explainability() ModelPackageDriftCheckExplainabilityPtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckExplainability {
		if v == nil {
			return nil
		}
		return v.Explainability
	}).(ModelPackageDriftCheckExplainabilityPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) ModelDataQuality() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckModelDataQuality {
		if v == nil {
			return nil
		}
		return v.ModelDataQuality
	}).(ModelPackageDriftCheckModelDataQualityPtrOutput)
}

func (o ModelPackageDriftCheckBaselinesPtrOutput) ModelQuality() ModelPackageDriftCheckModelQualityPtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBaselines) *ModelPackageDriftCheckModelQuality {
		if v == nil {
			return nil
		}
		return v.ModelQuality
	}).(ModelPackageDriftCheckModelQualityPtrOutput)
}

// Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBias struct {
	ConfigFile              *ModelPackageFileSource    `pulumi:"configFile"`
	PostTrainingConstraints *ModelPackageMetricsSource `pulumi:"postTrainingConstraints"`
	PreTrainingConstraints  *ModelPackageMetricsSource `pulumi:"preTrainingConstraints"`
}

// ModelPackageDriftCheckBiasInput is an input type that accepts ModelPackageDriftCheckBiasArgs and ModelPackageDriftCheckBiasOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckBiasInput` via:
//
//	ModelPackageDriftCheckBiasArgs{...}
type ModelPackageDriftCheckBiasInput interface {
	pulumi.Input

	ToModelPackageDriftCheckBiasOutput() ModelPackageDriftCheckBiasOutput
	ToModelPackageDriftCheckBiasOutputWithContext(context.Context) ModelPackageDriftCheckBiasOutput
}

// Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBiasArgs struct {
	ConfigFile              ModelPackageFileSourcePtrInput    `pulumi:"configFile"`
	PostTrainingConstraints ModelPackageMetricsSourcePtrInput `pulumi:"postTrainingConstraints"`
	PreTrainingConstraints  ModelPackageMetricsSourcePtrInput `pulumi:"preTrainingConstraints"`
}

func (ModelPackageDriftCheckBiasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckBias)(nil)).Elem()
}

func (i ModelPackageDriftCheckBiasArgs) ToModelPackageDriftCheckBiasOutput() ModelPackageDriftCheckBiasOutput {
	return i.ToModelPackageDriftCheckBiasOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckBiasArgs) ToModelPackageDriftCheckBiasOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBiasOutput)
}

func (i ModelPackageDriftCheckBiasArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckBias] {
	return pulumix.Output[ModelPackageDriftCheckBias]{
		OutputState: i.ToModelPackageDriftCheckBiasOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageDriftCheckBiasArgs) ToModelPackageDriftCheckBiasPtrOutput() ModelPackageDriftCheckBiasPtrOutput {
	return i.ToModelPackageDriftCheckBiasPtrOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckBiasArgs) ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBiasOutput).ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx)
}

// ModelPackageDriftCheckBiasPtrInput is an input type that accepts ModelPackageDriftCheckBiasArgs, ModelPackageDriftCheckBiasPtr and ModelPackageDriftCheckBiasPtrOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckBiasPtrInput` via:
//
//	        ModelPackageDriftCheckBiasArgs{...}
//
//	or:
//
//	        nil
type ModelPackageDriftCheckBiasPtrInput interface {
	pulumi.Input

	ToModelPackageDriftCheckBiasPtrOutput() ModelPackageDriftCheckBiasPtrOutput
	ToModelPackageDriftCheckBiasPtrOutputWithContext(context.Context) ModelPackageDriftCheckBiasPtrOutput
}

type modelPackageDriftCheckBiasPtrType ModelPackageDriftCheckBiasArgs

func ModelPackageDriftCheckBiasPtr(v *ModelPackageDriftCheckBiasArgs) ModelPackageDriftCheckBiasPtrInput {
	return (*modelPackageDriftCheckBiasPtrType)(v)
}

func (*modelPackageDriftCheckBiasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckBias)(nil)).Elem()
}

func (i *modelPackageDriftCheckBiasPtrType) ToModelPackageDriftCheckBiasPtrOutput() ModelPackageDriftCheckBiasPtrOutput {
	return i.ToModelPackageDriftCheckBiasPtrOutputWithContext(context.Background())
}

func (i *modelPackageDriftCheckBiasPtrType) ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckBiasPtrOutput)
}

func (i *modelPackageDriftCheckBiasPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckBias] {
	return pulumix.Output[*ModelPackageDriftCheckBias]{
		OutputState: i.ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx).OutputState,
	}
}

// Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckBiasOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckBiasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckBias)(nil)).Elem()
}

func (o ModelPackageDriftCheckBiasOutput) ToModelPackageDriftCheckBiasOutput() ModelPackageDriftCheckBiasOutput {
	return o
}

func (o ModelPackageDriftCheckBiasOutput) ToModelPackageDriftCheckBiasOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasOutput {
	return o
}

func (o ModelPackageDriftCheckBiasOutput) ToModelPackageDriftCheckBiasPtrOutput() ModelPackageDriftCheckBiasPtrOutput {
	return o.ToModelPackageDriftCheckBiasPtrOutputWithContext(context.Background())
}

func (o ModelPackageDriftCheckBiasOutput) ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageDriftCheckBias) *ModelPackageDriftCheckBias {
		return &v
	}).(ModelPackageDriftCheckBiasPtrOutput)
}

func (o ModelPackageDriftCheckBiasOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckBias] {
	return pulumix.Output[ModelPackageDriftCheckBias]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckBiasOutput) ConfigFile() ModelPackageFileSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBias) *ModelPackageFileSource { return v.ConfigFile }).(ModelPackageFileSourcePtrOutput)
}

func (o ModelPackageDriftCheckBiasOutput) PostTrainingConstraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBias) *ModelPackageMetricsSource { return v.PostTrainingConstraints }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckBiasOutput) PreTrainingConstraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckBias) *ModelPackageMetricsSource { return v.PreTrainingConstraints }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageDriftCheckBiasPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckBiasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckBias)(nil)).Elem()
}

func (o ModelPackageDriftCheckBiasPtrOutput) ToModelPackageDriftCheckBiasPtrOutput() ModelPackageDriftCheckBiasPtrOutput {
	return o
}

func (o ModelPackageDriftCheckBiasPtrOutput) ToModelPackageDriftCheckBiasPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckBiasPtrOutput {
	return o
}

func (o ModelPackageDriftCheckBiasPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckBias] {
	return pulumix.Output[*ModelPackageDriftCheckBias]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckBiasPtrOutput) Elem() ModelPackageDriftCheckBiasOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBias) ModelPackageDriftCheckBias {
		if v != nil {
			return *v
		}
		var ret ModelPackageDriftCheckBias
		return ret
	}).(ModelPackageDriftCheckBiasOutput)
}

func (o ModelPackageDriftCheckBiasPtrOutput) ConfigFile() ModelPackageFileSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBias) *ModelPackageFileSource {
		if v == nil {
			return nil
		}
		return v.ConfigFile
	}).(ModelPackageFileSourcePtrOutput)
}

func (o ModelPackageDriftCheckBiasPtrOutput) PostTrainingConstraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBias) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.PostTrainingConstraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckBiasPtrOutput) PreTrainingConstraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckBias) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.PreTrainingConstraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Contains explainability metrics for a model.
type ModelPackageDriftCheckExplainability struct {
	ConfigFile  *ModelPackageFileSource    `pulumi:"configFile"`
	Constraints *ModelPackageMetricsSource `pulumi:"constraints"`
}

// ModelPackageDriftCheckExplainabilityInput is an input type that accepts ModelPackageDriftCheckExplainabilityArgs and ModelPackageDriftCheckExplainabilityOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckExplainabilityInput` via:
//
//	ModelPackageDriftCheckExplainabilityArgs{...}
type ModelPackageDriftCheckExplainabilityInput interface {
	pulumi.Input

	ToModelPackageDriftCheckExplainabilityOutput() ModelPackageDriftCheckExplainabilityOutput
	ToModelPackageDriftCheckExplainabilityOutputWithContext(context.Context) ModelPackageDriftCheckExplainabilityOutput
}

// Contains explainability metrics for a model.
type ModelPackageDriftCheckExplainabilityArgs struct {
	ConfigFile  ModelPackageFileSourcePtrInput    `pulumi:"configFile"`
	Constraints ModelPackageMetricsSourcePtrInput `pulumi:"constraints"`
}

func (ModelPackageDriftCheckExplainabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckExplainability)(nil)).Elem()
}

func (i ModelPackageDriftCheckExplainabilityArgs) ToModelPackageDriftCheckExplainabilityOutput() ModelPackageDriftCheckExplainabilityOutput {
	return i.ToModelPackageDriftCheckExplainabilityOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckExplainabilityArgs) ToModelPackageDriftCheckExplainabilityOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckExplainabilityOutput)
}

func (i ModelPackageDriftCheckExplainabilityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckExplainability] {
	return pulumix.Output[ModelPackageDriftCheckExplainability]{
		OutputState: i.ToModelPackageDriftCheckExplainabilityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageDriftCheckExplainabilityArgs) ToModelPackageDriftCheckExplainabilityPtrOutput() ModelPackageDriftCheckExplainabilityPtrOutput {
	return i.ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckExplainabilityArgs) ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckExplainabilityOutput).ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx)
}

// ModelPackageDriftCheckExplainabilityPtrInput is an input type that accepts ModelPackageDriftCheckExplainabilityArgs, ModelPackageDriftCheckExplainabilityPtr and ModelPackageDriftCheckExplainabilityPtrOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckExplainabilityPtrInput` via:
//
//	        ModelPackageDriftCheckExplainabilityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageDriftCheckExplainabilityPtrInput interface {
	pulumi.Input

	ToModelPackageDriftCheckExplainabilityPtrOutput() ModelPackageDriftCheckExplainabilityPtrOutput
	ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(context.Context) ModelPackageDriftCheckExplainabilityPtrOutput
}

type modelPackageDriftCheckExplainabilityPtrType ModelPackageDriftCheckExplainabilityArgs

func ModelPackageDriftCheckExplainabilityPtr(v *ModelPackageDriftCheckExplainabilityArgs) ModelPackageDriftCheckExplainabilityPtrInput {
	return (*modelPackageDriftCheckExplainabilityPtrType)(v)
}

func (*modelPackageDriftCheckExplainabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckExplainability)(nil)).Elem()
}

func (i *modelPackageDriftCheckExplainabilityPtrType) ToModelPackageDriftCheckExplainabilityPtrOutput() ModelPackageDriftCheckExplainabilityPtrOutput {
	return i.ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(context.Background())
}

func (i *modelPackageDriftCheckExplainabilityPtrType) ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckExplainabilityPtrOutput)
}

func (i *modelPackageDriftCheckExplainabilityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckExplainability] {
	return pulumix.Output[*ModelPackageDriftCheckExplainability]{
		OutputState: i.ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx).OutputState,
	}
}

// Contains explainability metrics for a model.
type ModelPackageDriftCheckExplainabilityOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckExplainabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckExplainability)(nil)).Elem()
}

func (o ModelPackageDriftCheckExplainabilityOutput) ToModelPackageDriftCheckExplainabilityOutput() ModelPackageDriftCheckExplainabilityOutput {
	return o
}

func (o ModelPackageDriftCheckExplainabilityOutput) ToModelPackageDriftCheckExplainabilityOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityOutput {
	return o
}

func (o ModelPackageDriftCheckExplainabilityOutput) ToModelPackageDriftCheckExplainabilityPtrOutput() ModelPackageDriftCheckExplainabilityPtrOutput {
	return o.ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(context.Background())
}

func (o ModelPackageDriftCheckExplainabilityOutput) ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageDriftCheckExplainability) *ModelPackageDriftCheckExplainability {
		return &v
	}).(ModelPackageDriftCheckExplainabilityPtrOutput)
}

func (o ModelPackageDriftCheckExplainabilityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckExplainability] {
	return pulumix.Output[ModelPackageDriftCheckExplainability]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckExplainabilityOutput) ConfigFile() ModelPackageFileSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckExplainability) *ModelPackageFileSource { return v.ConfigFile }).(ModelPackageFileSourcePtrOutput)
}

func (o ModelPackageDriftCheckExplainabilityOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckExplainability) *ModelPackageMetricsSource { return v.Constraints }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageDriftCheckExplainabilityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckExplainabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckExplainability)(nil)).Elem()
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) ToModelPackageDriftCheckExplainabilityPtrOutput() ModelPackageDriftCheckExplainabilityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) ToModelPackageDriftCheckExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckExplainabilityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckExplainability] {
	return pulumix.Output[*ModelPackageDriftCheckExplainability]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) Elem() ModelPackageDriftCheckExplainabilityOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckExplainability) ModelPackageDriftCheckExplainability {
		if v != nil {
			return *v
		}
		var ret ModelPackageDriftCheckExplainability
		return ret
	}).(ModelPackageDriftCheckExplainabilityOutput)
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) ConfigFile() ModelPackageFileSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckExplainability) *ModelPackageFileSource {
		if v == nil {
			return nil
		}
		return v.ConfigFile
	}).(ModelPackageFileSourcePtrOutput)
}

func (o ModelPackageDriftCheckExplainabilityPtrOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckExplainability) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Constraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelDataQuality struct {
	Constraints *ModelPackageMetricsSource `pulumi:"constraints"`
	Statistics  *ModelPackageMetricsSource `pulumi:"statistics"`
}

// ModelPackageDriftCheckModelDataQualityInput is an input type that accepts ModelPackageDriftCheckModelDataQualityArgs and ModelPackageDriftCheckModelDataQualityOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckModelDataQualityInput` via:
//
//	ModelPackageDriftCheckModelDataQualityArgs{...}
type ModelPackageDriftCheckModelDataQualityInput interface {
	pulumi.Input

	ToModelPackageDriftCheckModelDataQualityOutput() ModelPackageDriftCheckModelDataQualityOutput
	ToModelPackageDriftCheckModelDataQualityOutputWithContext(context.Context) ModelPackageDriftCheckModelDataQualityOutput
}

// Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelDataQualityArgs struct {
	Constraints ModelPackageMetricsSourcePtrInput `pulumi:"constraints"`
	Statistics  ModelPackageMetricsSourcePtrInput `pulumi:"statistics"`
}

func (ModelPackageDriftCheckModelDataQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckModelDataQuality)(nil)).Elem()
}

func (i ModelPackageDriftCheckModelDataQualityArgs) ToModelPackageDriftCheckModelDataQualityOutput() ModelPackageDriftCheckModelDataQualityOutput {
	return i.ToModelPackageDriftCheckModelDataQualityOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckModelDataQualityArgs) ToModelPackageDriftCheckModelDataQualityOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelDataQualityOutput)
}

func (i ModelPackageDriftCheckModelDataQualityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckModelDataQuality] {
	return pulumix.Output[ModelPackageDriftCheckModelDataQuality]{
		OutputState: i.ToModelPackageDriftCheckModelDataQualityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageDriftCheckModelDataQualityArgs) ToModelPackageDriftCheckModelDataQualityPtrOutput() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return i.ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckModelDataQualityArgs) ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelDataQualityOutput).ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx)
}

// ModelPackageDriftCheckModelDataQualityPtrInput is an input type that accepts ModelPackageDriftCheckModelDataQualityArgs, ModelPackageDriftCheckModelDataQualityPtr and ModelPackageDriftCheckModelDataQualityPtrOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckModelDataQualityPtrInput` via:
//
//	        ModelPackageDriftCheckModelDataQualityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageDriftCheckModelDataQualityPtrInput interface {
	pulumi.Input

	ToModelPackageDriftCheckModelDataQualityPtrOutput() ModelPackageDriftCheckModelDataQualityPtrOutput
	ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(context.Context) ModelPackageDriftCheckModelDataQualityPtrOutput
}

type modelPackageDriftCheckModelDataQualityPtrType ModelPackageDriftCheckModelDataQualityArgs

func ModelPackageDriftCheckModelDataQualityPtr(v *ModelPackageDriftCheckModelDataQualityArgs) ModelPackageDriftCheckModelDataQualityPtrInput {
	return (*modelPackageDriftCheckModelDataQualityPtrType)(v)
}

func (*modelPackageDriftCheckModelDataQualityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckModelDataQuality)(nil)).Elem()
}

func (i *modelPackageDriftCheckModelDataQualityPtrType) ToModelPackageDriftCheckModelDataQualityPtrOutput() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return i.ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(context.Background())
}

func (i *modelPackageDriftCheckModelDataQualityPtrType) ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelDataQualityPtrOutput)
}

func (i *modelPackageDriftCheckModelDataQualityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckModelDataQuality] {
	return pulumix.Output[*ModelPackageDriftCheckModelDataQuality]{
		OutputState: i.ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx).OutputState,
	}
}

// Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelDataQualityOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckModelDataQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckModelDataQuality)(nil)).Elem()
}

func (o ModelPackageDriftCheckModelDataQualityOutput) ToModelPackageDriftCheckModelDataQualityOutput() ModelPackageDriftCheckModelDataQualityOutput {
	return o
}

func (o ModelPackageDriftCheckModelDataQualityOutput) ToModelPackageDriftCheckModelDataQualityOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityOutput {
	return o
}

func (o ModelPackageDriftCheckModelDataQualityOutput) ToModelPackageDriftCheckModelDataQualityPtrOutput() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o.ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(context.Background())
}

func (o ModelPackageDriftCheckModelDataQualityOutput) ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageDriftCheckModelDataQuality) *ModelPackageDriftCheckModelDataQuality {
		return &v
	}).(ModelPackageDriftCheckModelDataQualityPtrOutput)
}

func (o ModelPackageDriftCheckModelDataQualityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckModelDataQuality] {
	return pulumix.Output[ModelPackageDriftCheckModelDataQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckModelDataQualityOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckModelDataQuality) *ModelPackageMetricsSource { return v.Constraints }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckModelDataQualityOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckModelDataQuality) *ModelPackageMetricsSource { return v.Statistics }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageDriftCheckModelDataQualityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckModelDataQualityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckModelDataQuality)(nil)).Elem()
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) ToModelPackageDriftCheckModelDataQualityPtrOutput() ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) ToModelPackageDriftCheckModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelDataQualityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckModelDataQuality] {
	return pulumix.Output[*ModelPackageDriftCheckModelDataQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) Elem() ModelPackageDriftCheckModelDataQualityOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelDataQuality) ModelPackageDriftCheckModelDataQuality {
		if v != nil {
			return *v
		}
		var ret ModelPackageDriftCheckModelDataQuality
		return ret
	}).(ModelPackageDriftCheckModelDataQualityOutput)
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelDataQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Constraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckModelDataQualityPtrOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelDataQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelQuality struct {
	Constraints *ModelPackageMetricsSource `pulumi:"constraints"`
	Statistics  *ModelPackageMetricsSource `pulumi:"statistics"`
}

// ModelPackageDriftCheckModelQualityInput is an input type that accepts ModelPackageDriftCheckModelQualityArgs and ModelPackageDriftCheckModelQualityOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckModelQualityInput` via:
//
//	ModelPackageDriftCheckModelQualityArgs{...}
type ModelPackageDriftCheckModelQualityInput interface {
	pulumi.Input

	ToModelPackageDriftCheckModelQualityOutput() ModelPackageDriftCheckModelQualityOutput
	ToModelPackageDriftCheckModelQualityOutputWithContext(context.Context) ModelPackageDriftCheckModelQualityOutput
}

// Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelQualityArgs struct {
	Constraints ModelPackageMetricsSourcePtrInput `pulumi:"constraints"`
	Statistics  ModelPackageMetricsSourcePtrInput `pulumi:"statistics"`
}

func (ModelPackageDriftCheckModelQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckModelQuality)(nil)).Elem()
}

func (i ModelPackageDriftCheckModelQualityArgs) ToModelPackageDriftCheckModelQualityOutput() ModelPackageDriftCheckModelQualityOutput {
	return i.ToModelPackageDriftCheckModelQualityOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckModelQualityArgs) ToModelPackageDriftCheckModelQualityOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelQualityOutput)
}

func (i ModelPackageDriftCheckModelQualityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckModelQuality] {
	return pulumix.Output[ModelPackageDriftCheckModelQuality]{
		OutputState: i.ToModelPackageDriftCheckModelQualityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageDriftCheckModelQualityArgs) ToModelPackageDriftCheckModelQualityPtrOutput() ModelPackageDriftCheckModelQualityPtrOutput {
	return i.ToModelPackageDriftCheckModelQualityPtrOutputWithContext(context.Background())
}

func (i ModelPackageDriftCheckModelQualityArgs) ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelQualityOutput).ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx)
}

// ModelPackageDriftCheckModelQualityPtrInput is an input type that accepts ModelPackageDriftCheckModelQualityArgs, ModelPackageDriftCheckModelQualityPtr and ModelPackageDriftCheckModelQualityPtrOutput values.
// You can construct a concrete instance of `ModelPackageDriftCheckModelQualityPtrInput` via:
//
//	        ModelPackageDriftCheckModelQualityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageDriftCheckModelQualityPtrInput interface {
	pulumi.Input

	ToModelPackageDriftCheckModelQualityPtrOutput() ModelPackageDriftCheckModelQualityPtrOutput
	ToModelPackageDriftCheckModelQualityPtrOutputWithContext(context.Context) ModelPackageDriftCheckModelQualityPtrOutput
}

type modelPackageDriftCheckModelQualityPtrType ModelPackageDriftCheckModelQualityArgs

func ModelPackageDriftCheckModelQualityPtr(v *ModelPackageDriftCheckModelQualityArgs) ModelPackageDriftCheckModelQualityPtrInput {
	return (*modelPackageDriftCheckModelQualityPtrType)(v)
}

func (*modelPackageDriftCheckModelQualityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckModelQuality)(nil)).Elem()
}

func (i *modelPackageDriftCheckModelQualityPtrType) ToModelPackageDriftCheckModelQualityPtrOutput() ModelPackageDriftCheckModelQualityPtrOutput {
	return i.ToModelPackageDriftCheckModelQualityPtrOutputWithContext(context.Background())
}

func (i *modelPackageDriftCheckModelQualityPtrType) ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageDriftCheckModelQualityPtrOutput)
}

func (i *modelPackageDriftCheckModelQualityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckModelQuality] {
	return pulumix.Output[*ModelPackageDriftCheckModelQuality]{
		OutputState: i.ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx).OutputState,
	}
}

// Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
type ModelPackageDriftCheckModelQualityOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckModelQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageDriftCheckModelQuality)(nil)).Elem()
}

func (o ModelPackageDriftCheckModelQualityOutput) ToModelPackageDriftCheckModelQualityOutput() ModelPackageDriftCheckModelQualityOutput {
	return o
}

func (o ModelPackageDriftCheckModelQualityOutput) ToModelPackageDriftCheckModelQualityOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityOutput {
	return o
}

func (o ModelPackageDriftCheckModelQualityOutput) ToModelPackageDriftCheckModelQualityPtrOutput() ModelPackageDriftCheckModelQualityPtrOutput {
	return o.ToModelPackageDriftCheckModelQualityPtrOutputWithContext(context.Background())
}

func (o ModelPackageDriftCheckModelQualityOutput) ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageDriftCheckModelQuality) *ModelPackageDriftCheckModelQuality {
		return &v
	}).(ModelPackageDriftCheckModelQualityPtrOutput)
}

func (o ModelPackageDriftCheckModelQualityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageDriftCheckModelQuality] {
	return pulumix.Output[ModelPackageDriftCheckModelQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckModelQualityOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckModelQuality) *ModelPackageMetricsSource { return v.Constraints }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckModelQualityOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageDriftCheckModelQuality) *ModelPackageMetricsSource { return v.Statistics }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageDriftCheckModelQualityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageDriftCheckModelQualityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageDriftCheckModelQuality)(nil)).Elem()
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) ToModelPackageDriftCheckModelQualityPtrOutput() ModelPackageDriftCheckModelQualityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) ToModelPackageDriftCheckModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageDriftCheckModelQualityPtrOutput {
	return o
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageDriftCheckModelQuality] {
	return pulumix.Output[*ModelPackageDriftCheckModelQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) Elem() ModelPackageDriftCheckModelQualityOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelQuality) ModelPackageDriftCheckModelQuality {
		if v != nil {
			return *v
		}
		var ret ModelPackageDriftCheckModelQuality
		return ret
	}).(ModelPackageDriftCheckModelQualityOutput)
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Constraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageDriftCheckModelQualityPtrOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageDriftCheckModelQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Sets the environment variables in the Docker container
type ModelPackageEnvironment struct {
}

// ModelPackageEnvironmentInput is an input type that accepts ModelPackageEnvironmentArgs and ModelPackageEnvironmentOutput values.
// You can construct a concrete instance of `ModelPackageEnvironmentInput` via:
//
//	ModelPackageEnvironmentArgs{...}
type ModelPackageEnvironmentInput interface {
	pulumi.Input

	ToModelPackageEnvironmentOutput() ModelPackageEnvironmentOutput
	ToModelPackageEnvironmentOutputWithContext(context.Context) ModelPackageEnvironmentOutput
}

// Sets the environment variables in the Docker container
type ModelPackageEnvironmentArgs struct {
}

func (ModelPackageEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageEnvironment)(nil)).Elem()
}

func (i ModelPackageEnvironmentArgs) ToModelPackageEnvironmentOutput() ModelPackageEnvironmentOutput {
	return i.ToModelPackageEnvironmentOutputWithContext(context.Background())
}

func (i ModelPackageEnvironmentArgs) ToModelPackageEnvironmentOutputWithContext(ctx context.Context) ModelPackageEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageEnvironmentOutput)
}

func (i ModelPackageEnvironmentArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageEnvironment] {
	return pulumix.Output[ModelPackageEnvironment]{
		OutputState: i.ToModelPackageEnvironmentOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageEnvironmentArgs) ToModelPackageEnvironmentPtrOutput() ModelPackageEnvironmentPtrOutput {
	return i.ToModelPackageEnvironmentPtrOutputWithContext(context.Background())
}

func (i ModelPackageEnvironmentArgs) ToModelPackageEnvironmentPtrOutputWithContext(ctx context.Context) ModelPackageEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageEnvironmentOutput).ToModelPackageEnvironmentPtrOutputWithContext(ctx)
}

// ModelPackageEnvironmentPtrInput is an input type that accepts ModelPackageEnvironmentArgs, ModelPackageEnvironmentPtr and ModelPackageEnvironmentPtrOutput values.
// You can construct a concrete instance of `ModelPackageEnvironmentPtrInput` via:
//
//	        ModelPackageEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ModelPackageEnvironmentPtrInput interface {
	pulumi.Input

	ToModelPackageEnvironmentPtrOutput() ModelPackageEnvironmentPtrOutput
	ToModelPackageEnvironmentPtrOutputWithContext(context.Context) ModelPackageEnvironmentPtrOutput
}

type modelPackageEnvironmentPtrType ModelPackageEnvironmentArgs

func ModelPackageEnvironmentPtr(v *ModelPackageEnvironmentArgs) ModelPackageEnvironmentPtrInput {
	return (*modelPackageEnvironmentPtrType)(v)
}

func (*modelPackageEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageEnvironment)(nil)).Elem()
}

func (i *modelPackageEnvironmentPtrType) ToModelPackageEnvironmentPtrOutput() ModelPackageEnvironmentPtrOutput {
	return i.ToModelPackageEnvironmentPtrOutputWithContext(context.Background())
}

func (i *modelPackageEnvironmentPtrType) ToModelPackageEnvironmentPtrOutputWithContext(ctx context.Context) ModelPackageEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageEnvironmentPtrOutput)
}

func (i *modelPackageEnvironmentPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageEnvironment] {
	return pulumix.Output[*ModelPackageEnvironment]{
		OutputState: i.ToModelPackageEnvironmentPtrOutputWithContext(ctx).OutputState,
	}
}

// Sets the environment variables in the Docker container
type ModelPackageEnvironmentOutput struct{ *pulumi.OutputState }

func (ModelPackageEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageEnvironment)(nil)).Elem()
}

func (o ModelPackageEnvironmentOutput) ToModelPackageEnvironmentOutput() ModelPackageEnvironmentOutput {
	return o
}

func (o ModelPackageEnvironmentOutput) ToModelPackageEnvironmentOutputWithContext(ctx context.Context) ModelPackageEnvironmentOutput {
	return o
}

func (o ModelPackageEnvironmentOutput) ToModelPackageEnvironmentPtrOutput() ModelPackageEnvironmentPtrOutput {
	return o.ToModelPackageEnvironmentPtrOutputWithContext(context.Background())
}

func (o ModelPackageEnvironmentOutput) ToModelPackageEnvironmentPtrOutputWithContext(ctx context.Context) ModelPackageEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageEnvironment) *ModelPackageEnvironment {
		return &v
	}).(ModelPackageEnvironmentPtrOutput)
}

func (o ModelPackageEnvironmentOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageEnvironment] {
	return pulumix.Output[ModelPackageEnvironment]{
		OutputState: o.OutputState,
	}
}

type ModelPackageEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageEnvironment)(nil)).Elem()
}

func (o ModelPackageEnvironmentPtrOutput) ToModelPackageEnvironmentPtrOutput() ModelPackageEnvironmentPtrOutput {
	return o
}

func (o ModelPackageEnvironmentPtrOutput) ToModelPackageEnvironmentPtrOutputWithContext(ctx context.Context) ModelPackageEnvironmentPtrOutput {
	return o
}

func (o ModelPackageEnvironmentPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageEnvironment] {
	return pulumix.Output[*ModelPackageEnvironment]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageEnvironmentPtrOutput) Elem() ModelPackageEnvironmentOutput {
	return o.ApplyT(func(v *ModelPackageEnvironment) ModelPackageEnvironment {
		if v != nil {
			return *v
		}
		var ret ModelPackageEnvironment
		return ret
	}).(ModelPackageEnvironmentOutput)
}

// Contains explainability metrics for a model.
type ModelPackageExplainability struct {
	Report *ModelPackageMetricsSource `pulumi:"report"`
}

// ModelPackageExplainabilityInput is an input type that accepts ModelPackageExplainabilityArgs and ModelPackageExplainabilityOutput values.
// You can construct a concrete instance of `ModelPackageExplainabilityInput` via:
//
//	ModelPackageExplainabilityArgs{...}
type ModelPackageExplainabilityInput interface {
	pulumi.Input

	ToModelPackageExplainabilityOutput() ModelPackageExplainabilityOutput
	ToModelPackageExplainabilityOutputWithContext(context.Context) ModelPackageExplainabilityOutput
}

// Contains explainability metrics for a model.
type ModelPackageExplainabilityArgs struct {
	Report ModelPackageMetricsSourcePtrInput `pulumi:"report"`
}

func (ModelPackageExplainabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageExplainability)(nil)).Elem()
}

func (i ModelPackageExplainabilityArgs) ToModelPackageExplainabilityOutput() ModelPackageExplainabilityOutput {
	return i.ToModelPackageExplainabilityOutputWithContext(context.Background())
}

func (i ModelPackageExplainabilityArgs) ToModelPackageExplainabilityOutputWithContext(ctx context.Context) ModelPackageExplainabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageExplainabilityOutput)
}

func (i ModelPackageExplainabilityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageExplainability] {
	return pulumix.Output[ModelPackageExplainability]{
		OutputState: i.ToModelPackageExplainabilityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageExplainabilityArgs) ToModelPackageExplainabilityPtrOutput() ModelPackageExplainabilityPtrOutput {
	return i.ToModelPackageExplainabilityPtrOutputWithContext(context.Background())
}

func (i ModelPackageExplainabilityArgs) ToModelPackageExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageExplainabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageExplainabilityOutput).ToModelPackageExplainabilityPtrOutputWithContext(ctx)
}

// ModelPackageExplainabilityPtrInput is an input type that accepts ModelPackageExplainabilityArgs, ModelPackageExplainabilityPtr and ModelPackageExplainabilityPtrOutput values.
// You can construct a concrete instance of `ModelPackageExplainabilityPtrInput` via:
//
//	        ModelPackageExplainabilityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageExplainabilityPtrInput interface {
	pulumi.Input

	ToModelPackageExplainabilityPtrOutput() ModelPackageExplainabilityPtrOutput
	ToModelPackageExplainabilityPtrOutputWithContext(context.Context) ModelPackageExplainabilityPtrOutput
}

type modelPackageExplainabilityPtrType ModelPackageExplainabilityArgs

func ModelPackageExplainabilityPtr(v *ModelPackageExplainabilityArgs) ModelPackageExplainabilityPtrInput {
	return (*modelPackageExplainabilityPtrType)(v)
}

func (*modelPackageExplainabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageExplainability)(nil)).Elem()
}

func (i *modelPackageExplainabilityPtrType) ToModelPackageExplainabilityPtrOutput() ModelPackageExplainabilityPtrOutput {
	return i.ToModelPackageExplainabilityPtrOutputWithContext(context.Background())
}

func (i *modelPackageExplainabilityPtrType) ToModelPackageExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageExplainabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageExplainabilityPtrOutput)
}

func (i *modelPackageExplainabilityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageExplainability] {
	return pulumix.Output[*ModelPackageExplainability]{
		OutputState: i.ToModelPackageExplainabilityPtrOutputWithContext(ctx).OutputState,
	}
}

// Contains explainability metrics for a model.
type ModelPackageExplainabilityOutput struct{ *pulumi.OutputState }

func (ModelPackageExplainabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageExplainability)(nil)).Elem()
}

func (o ModelPackageExplainabilityOutput) ToModelPackageExplainabilityOutput() ModelPackageExplainabilityOutput {
	return o
}

func (o ModelPackageExplainabilityOutput) ToModelPackageExplainabilityOutputWithContext(ctx context.Context) ModelPackageExplainabilityOutput {
	return o
}

func (o ModelPackageExplainabilityOutput) ToModelPackageExplainabilityPtrOutput() ModelPackageExplainabilityPtrOutput {
	return o.ToModelPackageExplainabilityPtrOutputWithContext(context.Background())
}

func (o ModelPackageExplainabilityOutput) ToModelPackageExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageExplainabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageExplainability) *ModelPackageExplainability {
		return &v
	}).(ModelPackageExplainabilityPtrOutput)
}

func (o ModelPackageExplainabilityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageExplainability] {
	return pulumix.Output[ModelPackageExplainability]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageExplainabilityOutput) Report() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageExplainability) *ModelPackageMetricsSource { return v.Report }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageExplainabilityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageExplainabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageExplainability)(nil)).Elem()
}

func (o ModelPackageExplainabilityPtrOutput) ToModelPackageExplainabilityPtrOutput() ModelPackageExplainabilityPtrOutput {
	return o
}

func (o ModelPackageExplainabilityPtrOutput) ToModelPackageExplainabilityPtrOutputWithContext(ctx context.Context) ModelPackageExplainabilityPtrOutput {
	return o
}

func (o ModelPackageExplainabilityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageExplainability] {
	return pulumix.Output[*ModelPackageExplainability]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageExplainabilityPtrOutput) Elem() ModelPackageExplainabilityOutput {
	return o.ApplyT(func(v *ModelPackageExplainability) ModelPackageExplainability {
		if v != nil {
			return *v
		}
		var ret ModelPackageExplainability
		return ret
	}).(ModelPackageExplainabilityOutput)
}

func (o ModelPackageExplainabilityPtrOutput) Report() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageExplainability) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Report
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Represents a File Source Object.
type ModelPackageFileSource struct {
	// The digest of the file source.
	ContentDigest *string `pulumi:"contentDigest"`
	// The type of content stored in the file source.
	ContentType *string `pulumi:"contentType"`
	// The Amazon S3 URI for the file source.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelPackageFileSourceInput is an input type that accepts ModelPackageFileSourceArgs and ModelPackageFileSourceOutput values.
// You can construct a concrete instance of `ModelPackageFileSourceInput` via:
//
//	ModelPackageFileSourceArgs{...}
type ModelPackageFileSourceInput interface {
	pulumi.Input

	ToModelPackageFileSourceOutput() ModelPackageFileSourceOutput
	ToModelPackageFileSourceOutputWithContext(context.Context) ModelPackageFileSourceOutput
}

// Represents a File Source Object.
type ModelPackageFileSourceArgs struct {
	// The digest of the file source.
	ContentDigest pulumi.StringPtrInput `pulumi:"contentDigest"`
	// The type of content stored in the file source.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// The Amazon S3 URI for the file source.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelPackageFileSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageFileSource)(nil)).Elem()
}

func (i ModelPackageFileSourceArgs) ToModelPackageFileSourceOutput() ModelPackageFileSourceOutput {
	return i.ToModelPackageFileSourceOutputWithContext(context.Background())
}

func (i ModelPackageFileSourceArgs) ToModelPackageFileSourceOutputWithContext(ctx context.Context) ModelPackageFileSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageFileSourceOutput)
}

func (i ModelPackageFileSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageFileSource] {
	return pulumix.Output[ModelPackageFileSource]{
		OutputState: i.ToModelPackageFileSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageFileSourceArgs) ToModelPackageFileSourcePtrOutput() ModelPackageFileSourcePtrOutput {
	return i.ToModelPackageFileSourcePtrOutputWithContext(context.Background())
}

func (i ModelPackageFileSourceArgs) ToModelPackageFileSourcePtrOutputWithContext(ctx context.Context) ModelPackageFileSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageFileSourceOutput).ToModelPackageFileSourcePtrOutputWithContext(ctx)
}

// ModelPackageFileSourcePtrInput is an input type that accepts ModelPackageFileSourceArgs, ModelPackageFileSourcePtr and ModelPackageFileSourcePtrOutput values.
// You can construct a concrete instance of `ModelPackageFileSourcePtrInput` via:
//
//	        ModelPackageFileSourceArgs{...}
//
//	or:
//
//	        nil
type ModelPackageFileSourcePtrInput interface {
	pulumi.Input

	ToModelPackageFileSourcePtrOutput() ModelPackageFileSourcePtrOutput
	ToModelPackageFileSourcePtrOutputWithContext(context.Context) ModelPackageFileSourcePtrOutput
}

type modelPackageFileSourcePtrType ModelPackageFileSourceArgs

func ModelPackageFileSourcePtr(v *ModelPackageFileSourceArgs) ModelPackageFileSourcePtrInput {
	return (*modelPackageFileSourcePtrType)(v)
}

func (*modelPackageFileSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageFileSource)(nil)).Elem()
}

func (i *modelPackageFileSourcePtrType) ToModelPackageFileSourcePtrOutput() ModelPackageFileSourcePtrOutput {
	return i.ToModelPackageFileSourcePtrOutputWithContext(context.Background())
}

func (i *modelPackageFileSourcePtrType) ToModelPackageFileSourcePtrOutputWithContext(ctx context.Context) ModelPackageFileSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageFileSourcePtrOutput)
}

func (i *modelPackageFileSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageFileSource] {
	return pulumix.Output[*ModelPackageFileSource]{
		OutputState: i.ToModelPackageFileSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Represents a File Source Object.
type ModelPackageFileSourceOutput struct{ *pulumi.OutputState }

func (ModelPackageFileSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageFileSource)(nil)).Elem()
}

func (o ModelPackageFileSourceOutput) ToModelPackageFileSourceOutput() ModelPackageFileSourceOutput {
	return o
}

func (o ModelPackageFileSourceOutput) ToModelPackageFileSourceOutputWithContext(ctx context.Context) ModelPackageFileSourceOutput {
	return o
}

func (o ModelPackageFileSourceOutput) ToModelPackageFileSourcePtrOutput() ModelPackageFileSourcePtrOutput {
	return o.ToModelPackageFileSourcePtrOutputWithContext(context.Background())
}

func (o ModelPackageFileSourceOutput) ToModelPackageFileSourcePtrOutputWithContext(ctx context.Context) ModelPackageFileSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageFileSource) *ModelPackageFileSource {
		return &v
	}).(ModelPackageFileSourcePtrOutput)
}

func (o ModelPackageFileSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageFileSource] {
	return pulumix.Output[ModelPackageFileSource]{
		OutputState: o.OutputState,
	}
}

// The digest of the file source.
func (o ModelPackageFileSourceOutput) ContentDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageFileSource) *string { return v.ContentDigest }).(pulumi.StringPtrOutput)
}

// The type of content stored in the file source.
func (o ModelPackageFileSourceOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageFileSource) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The Amazon S3 URI for the file source.
func (o ModelPackageFileSourceOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageFileSource) string { return v.S3Uri }).(pulumi.StringOutput)
}

type ModelPackageFileSourcePtrOutput struct{ *pulumi.OutputState }

func (ModelPackageFileSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageFileSource)(nil)).Elem()
}

func (o ModelPackageFileSourcePtrOutput) ToModelPackageFileSourcePtrOutput() ModelPackageFileSourcePtrOutput {
	return o
}

func (o ModelPackageFileSourcePtrOutput) ToModelPackageFileSourcePtrOutputWithContext(ctx context.Context) ModelPackageFileSourcePtrOutput {
	return o
}

func (o ModelPackageFileSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageFileSource] {
	return pulumix.Output[*ModelPackageFileSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageFileSourcePtrOutput) Elem() ModelPackageFileSourceOutput {
	return o.ApplyT(func(v *ModelPackageFileSource) ModelPackageFileSource {
		if v != nil {
			return *v
		}
		var ret ModelPackageFileSource
		return ret
	}).(ModelPackageFileSourceOutput)
}

// The digest of the file source.
func (o ModelPackageFileSourcePtrOutput) ContentDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageFileSource) *string {
		if v == nil {
			return nil
		}
		return v.ContentDigest
	}).(pulumi.StringPtrOutput)
}

// The type of content stored in the file source.
func (o ModelPackageFileSourcePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageFileSource) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 URI for the file source.
func (o ModelPackageFileSourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageFileSource) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ModelPackageGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ModelPackageGroupTagInput is an input type that accepts ModelPackageGroupTagArgs and ModelPackageGroupTagOutput values.
// You can construct a concrete instance of `ModelPackageGroupTagInput` via:
//
//	ModelPackageGroupTagArgs{...}
type ModelPackageGroupTagInput interface {
	pulumi.Input

	ToModelPackageGroupTagOutput() ModelPackageGroupTagOutput
	ToModelPackageGroupTagOutputWithContext(context.Context) ModelPackageGroupTagOutput
}

// A key-value pair to associate with a resource.
type ModelPackageGroupTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelPackageGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageGroupTag)(nil)).Elem()
}

func (i ModelPackageGroupTagArgs) ToModelPackageGroupTagOutput() ModelPackageGroupTagOutput {
	return i.ToModelPackageGroupTagOutputWithContext(context.Background())
}

func (i ModelPackageGroupTagArgs) ToModelPackageGroupTagOutputWithContext(ctx context.Context) ModelPackageGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageGroupTagOutput)
}

func (i ModelPackageGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageGroupTag] {
	return pulumix.Output[ModelPackageGroupTag]{
		OutputState: i.ToModelPackageGroupTagOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageGroupTagArrayInput is an input type that accepts ModelPackageGroupTagArray and ModelPackageGroupTagArrayOutput values.
// You can construct a concrete instance of `ModelPackageGroupTagArrayInput` via:
//
//	ModelPackageGroupTagArray{ ModelPackageGroupTagArgs{...} }
type ModelPackageGroupTagArrayInput interface {
	pulumi.Input

	ToModelPackageGroupTagArrayOutput() ModelPackageGroupTagArrayOutput
	ToModelPackageGroupTagArrayOutputWithContext(context.Context) ModelPackageGroupTagArrayOutput
}

type ModelPackageGroupTagArray []ModelPackageGroupTagInput

func (ModelPackageGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageGroupTag)(nil)).Elem()
}

func (i ModelPackageGroupTagArray) ToModelPackageGroupTagArrayOutput() ModelPackageGroupTagArrayOutput {
	return i.ToModelPackageGroupTagArrayOutputWithContext(context.Background())
}

func (i ModelPackageGroupTagArray) ToModelPackageGroupTagArrayOutputWithContext(ctx context.Context) ModelPackageGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageGroupTagArrayOutput)
}

func (i ModelPackageGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageGroupTag] {
	return pulumix.Output[[]ModelPackageGroupTag]{
		OutputState: i.ToModelPackageGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelPackageGroupTagOutput struct{ *pulumi.OutputState }

func (ModelPackageGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageGroupTag)(nil)).Elem()
}

func (o ModelPackageGroupTagOutput) ToModelPackageGroupTagOutput() ModelPackageGroupTagOutput {
	return o
}

func (o ModelPackageGroupTagOutput) ToModelPackageGroupTagOutputWithContext(ctx context.Context) ModelPackageGroupTagOutput {
	return o
}

func (o ModelPackageGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageGroupTag] {
	return pulumix.Output[ModelPackageGroupTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelPackageGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelPackageGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelPackageGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageGroupTag)(nil)).Elem()
}

func (o ModelPackageGroupTagArrayOutput) ToModelPackageGroupTagArrayOutput() ModelPackageGroupTagArrayOutput {
	return o
}

func (o ModelPackageGroupTagArrayOutput) ToModelPackageGroupTagArrayOutputWithContext(ctx context.Context) ModelPackageGroupTagArrayOutput {
	return o
}

func (o ModelPackageGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageGroupTag] {
	return pulumix.Output[[]ModelPackageGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageGroupTagArrayOutput) Index(i pulumi.IntInput) ModelPackageGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageGroupTag {
		return vs[0].([]ModelPackageGroupTag)[vs[1].(int)]
	}).(ModelPackageGroupTagOutput)
}

// Details about inference jobs that can be run with models based on this model package.
type ModelPackageInferenceSpecification struct {
	// The Amazon ECR registry path of the Docker image that contains the inference code.
	Containers []ModelPackageContainerDefinition `pulumi:"containers"`
	// The supported MIME types for the input data.
	SupportedContentTypes []string `pulumi:"supportedContentTypes"`
	// A list of the instance types that are used to generate inferences in real-time
	SupportedRealtimeInferenceInstanceTypes []string `pulumi:"supportedRealtimeInferenceInstanceTypes"`
	// The supported MIME types for the output data.
	SupportedResponseMimeTypes []string `pulumi:"supportedResponseMimeTypes"`
	// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
	SupportedTransformInstanceTypes []string `pulumi:"supportedTransformInstanceTypes"`
}

// ModelPackageInferenceSpecificationInput is an input type that accepts ModelPackageInferenceSpecificationArgs and ModelPackageInferenceSpecificationOutput values.
// You can construct a concrete instance of `ModelPackageInferenceSpecificationInput` via:
//
//	ModelPackageInferenceSpecificationArgs{...}
type ModelPackageInferenceSpecificationInput interface {
	pulumi.Input

	ToModelPackageInferenceSpecificationOutput() ModelPackageInferenceSpecificationOutput
	ToModelPackageInferenceSpecificationOutputWithContext(context.Context) ModelPackageInferenceSpecificationOutput
}

// Details about inference jobs that can be run with models based on this model package.
type ModelPackageInferenceSpecificationArgs struct {
	// The Amazon ECR registry path of the Docker image that contains the inference code.
	Containers ModelPackageContainerDefinitionArrayInput `pulumi:"containers"`
	// The supported MIME types for the input data.
	SupportedContentTypes pulumi.StringArrayInput `pulumi:"supportedContentTypes"`
	// A list of the instance types that are used to generate inferences in real-time
	SupportedRealtimeInferenceInstanceTypes pulumi.StringArrayInput `pulumi:"supportedRealtimeInferenceInstanceTypes"`
	// The supported MIME types for the output data.
	SupportedResponseMimeTypes pulumi.StringArrayInput `pulumi:"supportedResponseMimeTypes"`
	// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
	SupportedTransformInstanceTypes pulumi.StringArrayInput `pulumi:"supportedTransformInstanceTypes"`
}

func (ModelPackageInferenceSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageInferenceSpecification)(nil)).Elem()
}

func (i ModelPackageInferenceSpecificationArgs) ToModelPackageInferenceSpecificationOutput() ModelPackageInferenceSpecificationOutput {
	return i.ToModelPackageInferenceSpecificationOutputWithContext(context.Background())
}

func (i ModelPackageInferenceSpecificationArgs) ToModelPackageInferenceSpecificationOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageInferenceSpecificationOutput)
}

func (i ModelPackageInferenceSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageInferenceSpecification] {
	return pulumix.Output[ModelPackageInferenceSpecification]{
		OutputState: i.ToModelPackageInferenceSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageInferenceSpecificationArgs) ToModelPackageInferenceSpecificationPtrOutput() ModelPackageInferenceSpecificationPtrOutput {
	return i.ToModelPackageInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (i ModelPackageInferenceSpecificationArgs) ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageInferenceSpecificationOutput).ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx)
}

// ModelPackageInferenceSpecificationPtrInput is an input type that accepts ModelPackageInferenceSpecificationArgs, ModelPackageInferenceSpecificationPtr and ModelPackageInferenceSpecificationPtrOutput values.
// You can construct a concrete instance of `ModelPackageInferenceSpecificationPtrInput` via:
//
//	        ModelPackageInferenceSpecificationArgs{...}
//
//	or:
//
//	        nil
type ModelPackageInferenceSpecificationPtrInput interface {
	pulumi.Input

	ToModelPackageInferenceSpecificationPtrOutput() ModelPackageInferenceSpecificationPtrOutput
	ToModelPackageInferenceSpecificationPtrOutputWithContext(context.Context) ModelPackageInferenceSpecificationPtrOutput
}

type modelPackageInferenceSpecificationPtrType ModelPackageInferenceSpecificationArgs

func ModelPackageInferenceSpecificationPtr(v *ModelPackageInferenceSpecificationArgs) ModelPackageInferenceSpecificationPtrInput {
	return (*modelPackageInferenceSpecificationPtrType)(v)
}

func (*modelPackageInferenceSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageInferenceSpecification)(nil)).Elem()
}

func (i *modelPackageInferenceSpecificationPtrType) ToModelPackageInferenceSpecificationPtrOutput() ModelPackageInferenceSpecificationPtrOutput {
	return i.ToModelPackageInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (i *modelPackageInferenceSpecificationPtrType) ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageInferenceSpecificationPtrOutput)
}

func (i *modelPackageInferenceSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageInferenceSpecification] {
	return pulumix.Output[*ModelPackageInferenceSpecification]{
		OutputState: i.ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

// Details about inference jobs that can be run with models based on this model package.
type ModelPackageInferenceSpecificationOutput struct{ *pulumi.OutputState }

func (ModelPackageInferenceSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageInferenceSpecification)(nil)).Elem()
}

func (o ModelPackageInferenceSpecificationOutput) ToModelPackageInferenceSpecificationOutput() ModelPackageInferenceSpecificationOutput {
	return o
}

func (o ModelPackageInferenceSpecificationOutput) ToModelPackageInferenceSpecificationOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationOutput {
	return o
}

func (o ModelPackageInferenceSpecificationOutput) ToModelPackageInferenceSpecificationPtrOutput() ModelPackageInferenceSpecificationPtrOutput {
	return o.ToModelPackageInferenceSpecificationPtrOutputWithContext(context.Background())
}

func (o ModelPackageInferenceSpecificationOutput) ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageInferenceSpecification) *ModelPackageInferenceSpecification {
		return &v
	}).(ModelPackageInferenceSpecificationPtrOutput)
}

func (o ModelPackageInferenceSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageInferenceSpecification] {
	return pulumix.Output[ModelPackageInferenceSpecification]{
		OutputState: o.OutputState,
	}
}

// The Amazon ECR registry path of the Docker image that contains the inference code.
func (o ModelPackageInferenceSpecificationOutput) Containers() ModelPackageContainerDefinitionArrayOutput {
	return o.ApplyT(func(v ModelPackageInferenceSpecification) []ModelPackageContainerDefinition { return v.Containers }).(ModelPackageContainerDefinitionArrayOutput)
}

// The supported MIME types for the input data.
func (o ModelPackageInferenceSpecificationOutput) SupportedContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageInferenceSpecification) []string { return v.SupportedContentTypes }).(pulumi.StringArrayOutput)
}

// A list of the instance types that are used to generate inferences in real-time
func (o ModelPackageInferenceSpecificationOutput) SupportedRealtimeInferenceInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageInferenceSpecification) []string { return v.SupportedRealtimeInferenceInstanceTypes }).(pulumi.StringArrayOutput)
}

// The supported MIME types for the output data.
func (o ModelPackageInferenceSpecificationOutput) SupportedResponseMimeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageInferenceSpecification) []string { return v.SupportedResponseMimeTypes }).(pulumi.StringArrayOutput)
}

// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
func (o ModelPackageInferenceSpecificationOutput) SupportedTransformInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelPackageInferenceSpecification) []string { return v.SupportedTransformInstanceTypes }).(pulumi.StringArrayOutput)
}

type ModelPackageInferenceSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageInferenceSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageInferenceSpecification)(nil)).Elem()
}

func (o ModelPackageInferenceSpecificationPtrOutput) ToModelPackageInferenceSpecificationPtrOutput() ModelPackageInferenceSpecificationPtrOutput {
	return o
}

func (o ModelPackageInferenceSpecificationPtrOutput) ToModelPackageInferenceSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageInferenceSpecificationPtrOutput {
	return o
}

func (o ModelPackageInferenceSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageInferenceSpecification] {
	return pulumix.Output[*ModelPackageInferenceSpecification]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageInferenceSpecificationPtrOutput) Elem() ModelPackageInferenceSpecificationOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) ModelPackageInferenceSpecification {
		if v != nil {
			return *v
		}
		var ret ModelPackageInferenceSpecification
		return ret
	}).(ModelPackageInferenceSpecificationOutput)
}

// The Amazon ECR registry path of the Docker image that contains the inference code.
func (o ModelPackageInferenceSpecificationPtrOutput) Containers() ModelPackageContainerDefinitionArrayOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) []ModelPackageContainerDefinition {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ModelPackageContainerDefinitionArrayOutput)
}

// The supported MIME types for the input data.
func (o ModelPackageInferenceSpecificationPtrOutput) SupportedContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) []string {
		if v == nil {
			return nil
		}
		return v.SupportedContentTypes
	}).(pulumi.StringArrayOutput)
}

// A list of the instance types that are used to generate inferences in real-time
func (o ModelPackageInferenceSpecificationPtrOutput) SupportedRealtimeInferenceInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) []string {
		if v == nil {
			return nil
		}
		return v.SupportedRealtimeInferenceInstanceTypes
	}).(pulumi.StringArrayOutput)
}

// The supported MIME types for the output data.
func (o ModelPackageInferenceSpecificationPtrOutput) SupportedResponseMimeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) []string {
		if v == nil {
			return nil
		}
		return v.SupportedResponseMimeTypes
	}).(pulumi.StringArrayOutput)
}

// A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
func (o ModelPackageInferenceSpecificationPtrOutput) SupportedTransformInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelPackageInferenceSpecification) []string {
		if v == nil {
			return nil
		}
		return v.SupportedTransformInstanceTypes
	}).(pulumi.StringArrayOutput)
}

// Metadata properties of the tracking entity, trial, or trial component.
type ModelPackageMetadataProperties struct {
	// The commit ID.
	CommitId *string `pulumi:"commitId"`
	// The entity this entity was generated by.
	GeneratedBy *string `pulumi:"generatedBy"`
	// The project ID metadata.
	ProjectId *string `pulumi:"projectId"`
	// The repository metadata.
	Repository *string `pulumi:"repository"`
}

// ModelPackageMetadataPropertiesInput is an input type that accepts ModelPackageMetadataPropertiesArgs and ModelPackageMetadataPropertiesOutput values.
// You can construct a concrete instance of `ModelPackageMetadataPropertiesInput` via:
//
//	ModelPackageMetadataPropertiesArgs{...}
type ModelPackageMetadataPropertiesInput interface {
	pulumi.Input

	ToModelPackageMetadataPropertiesOutput() ModelPackageMetadataPropertiesOutput
	ToModelPackageMetadataPropertiesOutputWithContext(context.Context) ModelPackageMetadataPropertiesOutput
}

// Metadata properties of the tracking entity, trial, or trial component.
type ModelPackageMetadataPropertiesArgs struct {
	// The commit ID.
	CommitId pulumi.StringPtrInput `pulumi:"commitId"`
	// The entity this entity was generated by.
	GeneratedBy pulumi.StringPtrInput `pulumi:"generatedBy"`
	// The project ID metadata.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The repository metadata.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
}

func (ModelPackageMetadataPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageMetadataProperties)(nil)).Elem()
}

func (i ModelPackageMetadataPropertiesArgs) ToModelPackageMetadataPropertiesOutput() ModelPackageMetadataPropertiesOutput {
	return i.ToModelPackageMetadataPropertiesOutputWithContext(context.Background())
}

func (i ModelPackageMetadataPropertiesArgs) ToModelPackageMetadataPropertiesOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetadataPropertiesOutput)
}

func (i ModelPackageMetadataPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageMetadataProperties] {
	return pulumix.Output[ModelPackageMetadataProperties]{
		OutputState: i.ToModelPackageMetadataPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageMetadataPropertiesArgs) ToModelPackageMetadataPropertiesPtrOutput() ModelPackageMetadataPropertiesPtrOutput {
	return i.ToModelPackageMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i ModelPackageMetadataPropertiesArgs) ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetadataPropertiesOutput).ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx)
}

// ModelPackageMetadataPropertiesPtrInput is an input type that accepts ModelPackageMetadataPropertiesArgs, ModelPackageMetadataPropertiesPtr and ModelPackageMetadataPropertiesPtrOutput values.
// You can construct a concrete instance of `ModelPackageMetadataPropertiesPtrInput` via:
//
//	        ModelPackageMetadataPropertiesArgs{...}
//
//	or:
//
//	        nil
type ModelPackageMetadataPropertiesPtrInput interface {
	pulumi.Input

	ToModelPackageMetadataPropertiesPtrOutput() ModelPackageMetadataPropertiesPtrOutput
	ToModelPackageMetadataPropertiesPtrOutputWithContext(context.Context) ModelPackageMetadataPropertiesPtrOutput
}

type modelPackageMetadataPropertiesPtrType ModelPackageMetadataPropertiesArgs

func ModelPackageMetadataPropertiesPtr(v *ModelPackageMetadataPropertiesArgs) ModelPackageMetadataPropertiesPtrInput {
	return (*modelPackageMetadataPropertiesPtrType)(v)
}

func (*modelPackageMetadataPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageMetadataProperties)(nil)).Elem()
}

func (i *modelPackageMetadataPropertiesPtrType) ToModelPackageMetadataPropertiesPtrOutput() ModelPackageMetadataPropertiesPtrOutput {
	return i.ToModelPackageMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (i *modelPackageMetadataPropertiesPtrType) ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetadataPropertiesPtrOutput)
}

func (i *modelPackageMetadataPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageMetadataProperties] {
	return pulumix.Output[*ModelPackageMetadataProperties]{
		OutputState: i.ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Metadata properties of the tracking entity, trial, or trial component.
type ModelPackageMetadataPropertiesOutput struct{ *pulumi.OutputState }

func (ModelPackageMetadataPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageMetadataProperties)(nil)).Elem()
}

func (o ModelPackageMetadataPropertiesOutput) ToModelPackageMetadataPropertiesOutput() ModelPackageMetadataPropertiesOutput {
	return o
}

func (o ModelPackageMetadataPropertiesOutput) ToModelPackageMetadataPropertiesOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesOutput {
	return o
}

func (o ModelPackageMetadataPropertiesOutput) ToModelPackageMetadataPropertiesPtrOutput() ModelPackageMetadataPropertiesPtrOutput {
	return o.ToModelPackageMetadataPropertiesPtrOutputWithContext(context.Background())
}

func (o ModelPackageMetadataPropertiesOutput) ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageMetadataProperties) *ModelPackageMetadataProperties {
		return &v
	}).(ModelPackageMetadataPropertiesPtrOutput)
}

func (o ModelPackageMetadataPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageMetadataProperties] {
	return pulumix.Output[ModelPackageMetadataProperties]{
		OutputState: o.OutputState,
	}
}

// The commit ID.
func (o ModelPackageMetadataPropertiesOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageMetadataProperties) *string { return v.CommitId }).(pulumi.StringPtrOutput)
}

// The entity this entity was generated by.
func (o ModelPackageMetadataPropertiesOutput) GeneratedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageMetadataProperties) *string { return v.GeneratedBy }).(pulumi.StringPtrOutput)
}

// The project ID metadata.
func (o ModelPackageMetadataPropertiesOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageMetadataProperties) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The repository metadata.
func (o ModelPackageMetadataPropertiesOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageMetadataProperties) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type ModelPackageMetadataPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageMetadataPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageMetadataProperties)(nil)).Elem()
}

func (o ModelPackageMetadataPropertiesPtrOutput) ToModelPackageMetadataPropertiesPtrOutput() ModelPackageMetadataPropertiesPtrOutput {
	return o
}

func (o ModelPackageMetadataPropertiesPtrOutput) ToModelPackageMetadataPropertiesPtrOutputWithContext(ctx context.Context) ModelPackageMetadataPropertiesPtrOutput {
	return o
}

func (o ModelPackageMetadataPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageMetadataProperties] {
	return pulumix.Output[*ModelPackageMetadataProperties]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageMetadataPropertiesPtrOutput) Elem() ModelPackageMetadataPropertiesOutput {
	return o.ApplyT(func(v *ModelPackageMetadataProperties) ModelPackageMetadataProperties {
		if v != nil {
			return *v
		}
		var ret ModelPackageMetadataProperties
		return ret
	}).(ModelPackageMetadataPropertiesOutput)
}

// The commit ID.
func (o ModelPackageMetadataPropertiesPtrOutput) CommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.CommitId
	}).(pulumi.StringPtrOutput)
}

// The entity this entity was generated by.
func (o ModelPackageMetadataPropertiesPtrOutput) GeneratedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.GeneratedBy
	}).(pulumi.StringPtrOutput)
}

// The project ID metadata.
func (o ModelPackageMetadataPropertiesPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The repository metadata.
func (o ModelPackageMetadataPropertiesPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetadataProperties) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// Represents a Metric Source Object.
type ModelPackageMetricsSource struct {
	// The digest of the metric source.
	ContentDigest *string `pulumi:"contentDigest"`
	// The type of content stored in the metric source.
	ContentType string `pulumi:"contentType"`
	// The Amazon S3 URI for the metric source.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelPackageMetricsSourceInput is an input type that accepts ModelPackageMetricsSourceArgs and ModelPackageMetricsSourceOutput values.
// You can construct a concrete instance of `ModelPackageMetricsSourceInput` via:
//
//	ModelPackageMetricsSourceArgs{...}
type ModelPackageMetricsSourceInput interface {
	pulumi.Input

	ToModelPackageMetricsSourceOutput() ModelPackageMetricsSourceOutput
	ToModelPackageMetricsSourceOutputWithContext(context.Context) ModelPackageMetricsSourceOutput
}

// Represents a Metric Source Object.
type ModelPackageMetricsSourceArgs struct {
	// The digest of the metric source.
	ContentDigest pulumi.StringPtrInput `pulumi:"contentDigest"`
	// The type of content stored in the metric source.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The Amazon S3 URI for the metric source.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelPackageMetricsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageMetricsSource)(nil)).Elem()
}

func (i ModelPackageMetricsSourceArgs) ToModelPackageMetricsSourceOutput() ModelPackageMetricsSourceOutput {
	return i.ToModelPackageMetricsSourceOutputWithContext(context.Background())
}

func (i ModelPackageMetricsSourceArgs) ToModelPackageMetricsSourceOutputWithContext(ctx context.Context) ModelPackageMetricsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetricsSourceOutput)
}

func (i ModelPackageMetricsSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageMetricsSource] {
	return pulumix.Output[ModelPackageMetricsSource]{
		OutputState: i.ToModelPackageMetricsSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageMetricsSourceArgs) ToModelPackageMetricsSourcePtrOutput() ModelPackageMetricsSourcePtrOutput {
	return i.ToModelPackageMetricsSourcePtrOutputWithContext(context.Background())
}

func (i ModelPackageMetricsSourceArgs) ToModelPackageMetricsSourcePtrOutputWithContext(ctx context.Context) ModelPackageMetricsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetricsSourceOutput).ToModelPackageMetricsSourcePtrOutputWithContext(ctx)
}

// ModelPackageMetricsSourcePtrInput is an input type that accepts ModelPackageMetricsSourceArgs, ModelPackageMetricsSourcePtr and ModelPackageMetricsSourcePtrOutput values.
// You can construct a concrete instance of `ModelPackageMetricsSourcePtrInput` via:
//
//	        ModelPackageMetricsSourceArgs{...}
//
//	or:
//
//	        nil
type ModelPackageMetricsSourcePtrInput interface {
	pulumi.Input

	ToModelPackageMetricsSourcePtrOutput() ModelPackageMetricsSourcePtrOutput
	ToModelPackageMetricsSourcePtrOutputWithContext(context.Context) ModelPackageMetricsSourcePtrOutput
}

type modelPackageMetricsSourcePtrType ModelPackageMetricsSourceArgs

func ModelPackageMetricsSourcePtr(v *ModelPackageMetricsSourceArgs) ModelPackageMetricsSourcePtrInput {
	return (*modelPackageMetricsSourcePtrType)(v)
}

func (*modelPackageMetricsSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageMetricsSource)(nil)).Elem()
}

func (i *modelPackageMetricsSourcePtrType) ToModelPackageMetricsSourcePtrOutput() ModelPackageMetricsSourcePtrOutput {
	return i.ToModelPackageMetricsSourcePtrOutputWithContext(context.Background())
}

func (i *modelPackageMetricsSourcePtrType) ToModelPackageMetricsSourcePtrOutputWithContext(ctx context.Context) ModelPackageMetricsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageMetricsSourcePtrOutput)
}

func (i *modelPackageMetricsSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageMetricsSource] {
	return pulumix.Output[*ModelPackageMetricsSource]{
		OutputState: i.ToModelPackageMetricsSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Represents a Metric Source Object.
type ModelPackageMetricsSourceOutput struct{ *pulumi.OutputState }

func (ModelPackageMetricsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageMetricsSource)(nil)).Elem()
}

func (o ModelPackageMetricsSourceOutput) ToModelPackageMetricsSourceOutput() ModelPackageMetricsSourceOutput {
	return o
}

func (o ModelPackageMetricsSourceOutput) ToModelPackageMetricsSourceOutputWithContext(ctx context.Context) ModelPackageMetricsSourceOutput {
	return o
}

func (o ModelPackageMetricsSourceOutput) ToModelPackageMetricsSourcePtrOutput() ModelPackageMetricsSourcePtrOutput {
	return o.ToModelPackageMetricsSourcePtrOutputWithContext(context.Background())
}

func (o ModelPackageMetricsSourceOutput) ToModelPackageMetricsSourcePtrOutputWithContext(ctx context.Context) ModelPackageMetricsSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageMetricsSource) *ModelPackageMetricsSource {
		return &v
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageMetricsSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageMetricsSource] {
	return pulumix.Output[ModelPackageMetricsSource]{
		OutputState: o.OutputState,
	}
}

// The digest of the metric source.
func (o ModelPackageMetricsSourceOutput) ContentDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageMetricsSource) *string { return v.ContentDigest }).(pulumi.StringPtrOutput)
}

// The type of content stored in the metric source.
func (o ModelPackageMetricsSourceOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageMetricsSource) string { return v.ContentType }).(pulumi.StringOutput)
}

// The Amazon S3 URI for the metric source.
func (o ModelPackageMetricsSourceOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageMetricsSource) string { return v.S3Uri }).(pulumi.StringOutput)
}

type ModelPackageMetricsSourcePtrOutput struct{ *pulumi.OutputState }

func (ModelPackageMetricsSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageMetricsSource)(nil)).Elem()
}

func (o ModelPackageMetricsSourcePtrOutput) ToModelPackageMetricsSourcePtrOutput() ModelPackageMetricsSourcePtrOutput {
	return o
}

func (o ModelPackageMetricsSourcePtrOutput) ToModelPackageMetricsSourcePtrOutputWithContext(ctx context.Context) ModelPackageMetricsSourcePtrOutput {
	return o
}

func (o ModelPackageMetricsSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageMetricsSource] {
	return pulumix.Output[*ModelPackageMetricsSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageMetricsSourcePtrOutput) Elem() ModelPackageMetricsSourceOutput {
	return o.ApplyT(func(v *ModelPackageMetricsSource) ModelPackageMetricsSource {
		if v != nil {
			return *v
		}
		var ret ModelPackageMetricsSource
		return ret
	}).(ModelPackageMetricsSourceOutput)
}

// The digest of the metric source.
func (o ModelPackageMetricsSourcePtrOutput) ContentDigest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetricsSource) *string {
		if v == nil {
			return nil
		}
		return v.ContentDigest
	}).(pulumi.StringPtrOutput)
}

// The type of content stored in the metric source.
func (o ModelPackageMetricsSourcePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetricsSource) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 URI for the metric source.
func (o ModelPackageMetricsSourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageMetricsSource) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// Metrics that measure the quality of the input data for a model.
type ModelPackageModelDataQuality struct {
	Constraints *ModelPackageMetricsSource `pulumi:"constraints"`
	Statistics  *ModelPackageMetricsSource `pulumi:"statistics"`
}

// ModelPackageModelDataQualityInput is an input type that accepts ModelPackageModelDataQualityArgs and ModelPackageModelDataQualityOutput values.
// You can construct a concrete instance of `ModelPackageModelDataQualityInput` via:
//
//	ModelPackageModelDataQualityArgs{...}
type ModelPackageModelDataQualityInput interface {
	pulumi.Input

	ToModelPackageModelDataQualityOutput() ModelPackageModelDataQualityOutput
	ToModelPackageModelDataQualityOutputWithContext(context.Context) ModelPackageModelDataQualityOutput
}

// Metrics that measure the quality of the input data for a model.
type ModelPackageModelDataQualityArgs struct {
	Constraints ModelPackageMetricsSourcePtrInput `pulumi:"constraints"`
	Statistics  ModelPackageMetricsSourcePtrInput `pulumi:"statistics"`
}

func (ModelPackageModelDataQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelDataQuality)(nil)).Elem()
}

func (i ModelPackageModelDataQualityArgs) ToModelPackageModelDataQualityOutput() ModelPackageModelDataQualityOutput {
	return i.ToModelPackageModelDataQualityOutputWithContext(context.Background())
}

func (i ModelPackageModelDataQualityArgs) ToModelPackageModelDataQualityOutputWithContext(ctx context.Context) ModelPackageModelDataQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelDataQualityOutput)
}

func (i ModelPackageModelDataQualityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelDataQuality] {
	return pulumix.Output[ModelPackageModelDataQuality]{
		OutputState: i.ToModelPackageModelDataQualityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageModelDataQualityArgs) ToModelPackageModelDataQualityPtrOutput() ModelPackageModelDataQualityPtrOutput {
	return i.ToModelPackageModelDataQualityPtrOutputWithContext(context.Background())
}

func (i ModelPackageModelDataQualityArgs) ToModelPackageModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelDataQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelDataQualityOutput).ToModelPackageModelDataQualityPtrOutputWithContext(ctx)
}

// ModelPackageModelDataQualityPtrInput is an input type that accepts ModelPackageModelDataQualityArgs, ModelPackageModelDataQualityPtr and ModelPackageModelDataQualityPtrOutput values.
// You can construct a concrete instance of `ModelPackageModelDataQualityPtrInput` via:
//
//	        ModelPackageModelDataQualityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageModelDataQualityPtrInput interface {
	pulumi.Input

	ToModelPackageModelDataQualityPtrOutput() ModelPackageModelDataQualityPtrOutput
	ToModelPackageModelDataQualityPtrOutputWithContext(context.Context) ModelPackageModelDataQualityPtrOutput
}

type modelPackageModelDataQualityPtrType ModelPackageModelDataQualityArgs

func ModelPackageModelDataQualityPtr(v *ModelPackageModelDataQualityArgs) ModelPackageModelDataQualityPtrInput {
	return (*modelPackageModelDataQualityPtrType)(v)
}

func (*modelPackageModelDataQualityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelDataQuality)(nil)).Elem()
}

func (i *modelPackageModelDataQualityPtrType) ToModelPackageModelDataQualityPtrOutput() ModelPackageModelDataQualityPtrOutput {
	return i.ToModelPackageModelDataQualityPtrOutputWithContext(context.Background())
}

func (i *modelPackageModelDataQualityPtrType) ToModelPackageModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelDataQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelDataQualityPtrOutput)
}

func (i *modelPackageModelDataQualityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelDataQuality] {
	return pulumix.Output[*ModelPackageModelDataQuality]{
		OutputState: i.ToModelPackageModelDataQualityPtrOutputWithContext(ctx).OutputState,
	}
}

// Metrics that measure the quality of the input data for a model.
type ModelPackageModelDataQualityOutput struct{ *pulumi.OutputState }

func (ModelPackageModelDataQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelDataQuality)(nil)).Elem()
}

func (o ModelPackageModelDataQualityOutput) ToModelPackageModelDataQualityOutput() ModelPackageModelDataQualityOutput {
	return o
}

func (o ModelPackageModelDataQualityOutput) ToModelPackageModelDataQualityOutputWithContext(ctx context.Context) ModelPackageModelDataQualityOutput {
	return o
}

func (o ModelPackageModelDataQualityOutput) ToModelPackageModelDataQualityPtrOutput() ModelPackageModelDataQualityPtrOutput {
	return o.ToModelPackageModelDataQualityPtrOutputWithContext(context.Background())
}

func (o ModelPackageModelDataQualityOutput) ToModelPackageModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelDataQualityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageModelDataQuality) *ModelPackageModelDataQuality {
		return &v
	}).(ModelPackageModelDataQualityPtrOutput)
}

func (o ModelPackageModelDataQualityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelDataQuality] {
	return pulumix.Output[ModelPackageModelDataQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelDataQualityOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageModelDataQuality) *ModelPackageMetricsSource { return v.Constraints }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageModelDataQualityOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageModelDataQuality) *ModelPackageMetricsSource { return v.Statistics }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageModelDataQualityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageModelDataQualityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelDataQuality)(nil)).Elem()
}

func (o ModelPackageModelDataQualityPtrOutput) ToModelPackageModelDataQualityPtrOutput() ModelPackageModelDataQualityPtrOutput {
	return o
}

func (o ModelPackageModelDataQualityPtrOutput) ToModelPackageModelDataQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelDataQualityPtrOutput {
	return o
}

func (o ModelPackageModelDataQualityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelDataQuality] {
	return pulumix.Output[*ModelPackageModelDataQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelDataQualityPtrOutput) Elem() ModelPackageModelDataQualityOutput {
	return o.ApplyT(func(v *ModelPackageModelDataQuality) ModelPackageModelDataQuality {
		if v != nil {
			return *v
		}
		var ret ModelPackageModelDataQuality
		return ret
	}).(ModelPackageModelDataQualityOutput)
}

func (o ModelPackageModelDataQualityPtrOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageModelDataQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Constraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageModelDataQualityPtrOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageModelDataQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(ModelPackageMetricsSourcePtrOutput)
}

// A structure that contains model metrics reports.
type ModelPackageModelMetrics struct {
	Bias             *ModelPackageBias             `pulumi:"bias"`
	Explainability   *ModelPackageExplainability   `pulumi:"explainability"`
	ModelDataQuality *ModelPackageModelDataQuality `pulumi:"modelDataQuality"`
	ModelQuality     *ModelPackageModelQuality     `pulumi:"modelQuality"`
}

// ModelPackageModelMetricsInput is an input type that accepts ModelPackageModelMetricsArgs and ModelPackageModelMetricsOutput values.
// You can construct a concrete instance of `ModelPackageModelMetricsInput` via:
//
//	ModelPackageModelMetricsArgs{...}
type ModelPackageModelMetricsInput interface {
	pulumi.Input

	ToModelPackageModelMetricsOutput() ModelPackageModelMetricsOutput
	ToModelPackageModelMetricsOutputWithContext(context.Context) ModelPackageModelMetricsOutput
}

// A structure that contains model metrics reports.
type ModelPackageModelMetricsArgs struct {
	Bias             ModelPackageBiasPtrInput             `pulumi:"bias"`
	Explainability   ModelPackageExplainabilityPtrInput   `pulumi:"explainability"`
	ModelDataQuality ModelPackageModelDataQualityPtrInput `pulumi:"modelDataQuality"`
	ModelQuality     ModelPackageModelQualityPtrInput     `pulumi:"modelQuality"`
}

func (ModelPackageModelMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelMetrics)(nil)).Elem()
}

func (i ModelPackageModelMetricsArgs) ToModelPackageModelMetricsOutput() ModelPackageModelMetricsOutput {
	return i.ToModelPackageModelMetricsOutputWithContext(context.Background())
}

func (i ModelPackageModelMetricsArgs) ToModelPackageModelMetricsOutputWithContext(ctx context.Context) ModelPackageModelMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelMetricsOutput)
}

func (i ModelPackageModelMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelMetrics] {
	return pulumix.Output[ModelPackageModelMetrics]{
		OutputState: i.ToModelPackageModelMetricsOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageModelMetricsArgs) ToModelPackageModelMetricsPtrOutput() ModelPackageModelMetricsPtrOutput {
	return i.ToModelPackageModelMetricsPtrOutputWithContext(context.Background())
}

func (i ModelPackageModelMetricsArgs) ToModelPackageModelMetricsPtrOutputWithContext(ctx context.Context) ModelPackageModelMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelMetricsOutput).ToModelPackageModelMetricsPtrOutputWithContext(ctx)
}

// ModelPackageModelMetricsPtrInput is an input type that accepts ModelPackageModelMetricsArgs, ModelPackageModelMetricsPtr and ModelPackageModelMetricsPtrOutput values.
// You can construct a concrete instance of `ModelPackageModelMetricsPtrInput` via:
//
//	        ModelPackageModelMetricsArgs{...}
//
//	or:
//
//	        nil
type ModelPackageModelMetricsPtrInput interface {
	pulumi.Input

	ToModelPackageModelMetricsPtrOutput() ModelPackageModelMetricsPtrOutput
	ToModelPackageModelMetricsPtrOutputWithContext(context.Context) ModelPackageModelMetricsPtrOutput
}

type modelPackageModelMetricsPtrType ModelPackageModelMetricsArgs

func ModelPackageModelMetricsPtr(v *ModelPackageModelMetricsArgs) ModelPackageModelMetricsPtrInput {
	return (*modelPackageModelMetricsPtrType)(v)
}

func (*modelPackageModelMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelMetrics)(nil)).Elem()
}

func (i *modelPackageModelMetricsPtrType) ToModelPackageModelMetricsPtrOutput() ModelPackageModelMetricsPtrOutput {
	return i.ToModelPackageModelMetricsPtrOutputWithContext(context.Background())
}

func (i *modelPackageModelMetricsPtrType) ToModelPackageModelMetricsPtrOutputWithContext(ctx context.Context) ModelPackageModelMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelMetricsPtrOutput)
}

func (i *modelPackageModelMetricsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelMetrics] {
	return pulumix.Output[*ModelPackageModelMetrics]{
		OutputState: i.ToModelPackageModelMetricsPtrOutputWithContext(ctx).OutputState,
	}
}

// A structure that contains model metrics reports.
type ModelPackageModelMetricsOutput struct{ *pulumi.OutputState }

func (ModelPackageModelMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelMetrics)(nil)).Elem()
}

func (o ModelPackageModelMetricsOutput) ToModelPackageModelMetricsOutput() ModelPackageModelMetricsOutput {
	return o
}

func (o ModelPackageModelMetricsOutput) ToModelPackageModelMetricsOutputWithContext(ctx context.Context) ModelPackageModelMetricsOutput {
	return o
}

func (o ModelPackageModelMetricsOutput) ToModelPackageModelMetricsPtrOutput() ModelPackageModelMetricsPtrOutput {
	return o.ToModelPackageModelMetricsPtrOutputWithContext(context.Background())
}

func (o ModelPackageModelMetricsOutput) ToModelPackageModelMetricsPtrOutputWithContext(ctx context.Context) ModelPackageModelMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageModelMetrics) *ModelPackageModelMetrics {
		return &v
	}).(ModelPackageModelMetricsPtrOutput)
}

func (o ModelPackageModelMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelMetrics] {
	return pulumix.Output[ModelPackageModelMetrics]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelMetricsOutput) Bias() ModelPackageBiasPtrOutput {
	return o.ApplyT(func(v ModelPackageModelMetrics) *ModelPackageBias { return v.Bias }).(ModelPackageBiasPtrOutput)
}

func (o ModelPackageModelMetricsOutput) Explainability() ModelPackageExplainabilityPtrOutput {
	return o.ApplyT(func(v ModelPackageModelMetrics) *ModelPackageExplainability { return v.Explainability }).(ModelPackageExplainabilityPtrOutput)
}

func (o ModelPackageModelMetricsOutput) ModelDataQuality() ModelPackageModelDataQualityPtrOutput {
	return o.ApplyT(func(v ModelPackageModelMetrics) *ModelPackageModelDataQuality { return v.ModelDataQuality }).(ModelPackageModelDataQualityPtrOutput)
}

func (o ModelPackageModelMetricsOutput) ModelQuality() ModelPackageModelQualityPtrOutput {
	return o.ApplyT(func(v ModelPackageModelMetrics) *ModelPackageModelQuality { return v.ModelQuality }).(ModelPackageModelQualityPtrOutput)
}

type ModelPackageModelMetricsPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageModelMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelMetrics)(nil)).Elem()
}

func (o ModelPackageModelMetricsPtrOutput) ToModelPackageModelMetricsPtrOutput() ModelPackageModelMetricsPtrOutput {
	return o
}

func (o ModelPackageModelMetricsPtrOutput) ToModelPackageModelMetricsPtrOutputWithContext(ctx context.Context) ModelPackageModelMetricsPtrOutput {
	return o
}

func (o ModelPackageModelMetricsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelMetrics] {
	return pulumix.Output[*ModelPackageModelMetrics]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelMetricsPtrOutput) Elem() ModelPackageModelMetricsOutput {
	return o.ApplyT(func(v *ModelPackageModelMetrics) ModelPackageModelMetrics {
		if v != nil {
			return *v
		}
		var ret ModelPackageModelMetrics
		return ret
	}).(ModelPackageModelMetricsOutput)
}

func (o ModelPackageModelMetricsPtrOutput) Bias() ModelPackageBiasPtrOutput {
	return o.ApplyT(func(v *ModelPackageModelMetrics) *ModelPackageBias {
		if v == nil {
			return nil
		}
		return v.Bias
	}).(ModelPackageBiasPtrOutput)
}

func (o ModelPackageModelMetricsPtrOutput) Explainability() ModelPackageExplainabilityPtrOutput {
	return o.ApplyT(func(v *ModelPackageModelMetrics) *ModelPackageExplainability {
		if v == nil {
			return nil
		}
		return v.Explainability
	}).(ModelPackageExplainabilityPtrOutput)
}

func (o ModelPackageModelMetricsPtrOutput) ModelDataQuality() ModelPackageModelDataQualityPtrOutput {
	return o.ApplyT(func(v *ModelPackageModelMetrics) *ModelPackageModelDataQuality {
		if v == nil {
			return nil
		}
		return v.ModelDataQuality
	}).(ModelPackageModelDataQualityPtrOutput)
}

func (o ModelPackageModelMetricsPtrOutput) ModelQuality() ModelPackageModelQualityPtrOutput {
	return o.ApplyT(func(v *ModelPackageModelMetrics) *ModelPackageModelQuality {
		if v == nil {
			return nil
		}
		return v.ModelQuality
	}).(ModelPackageModelQualityPtrOutput)
}

// Metrics that measure the quality of a model.
type ModelPackageModelQuality struct {
	Constraints *ModelPackageMetricsSource `pulumi:"constraints"`
	Statistics  *ModelPackageMetricsSource `pulumi:"statistics"`
}

// ModelPackageModelQualityInput is an input type that accepts ModelPackageModelQualityArgs and ModelPackageModelQualityOutput values.
// You can construct a concrete instance of `ModelPackageModelQualityInput` via:
//
//	ModelPackageModelQualityArgs{...}
type ModelPackageModelQualityInput interface {
	pulumi.Input

	ToModelPackageModelQualityOutput() ModelPackageModelQualityOutput
	ToModelPackageModelQualityOutputWithContext(context.Context) ModelPackageModelQualityOutput
}

// Metrics that measure the quality of a model.
type ModelPackageModelQualityArgs struct {
	Constraints ModelPackageMetricsSourcePtrInput `pulumi:"constraints"`
	Statistics  ModelPackageMetricsSourcePtrInput `pulumi:"statistics"`
}

func (ModelPackageModelQualityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelQuality)(nil)).Elem()
}

func (i ModelPackageModelQualityArgs) ToModelPackageModelQualityOutput() ModelPackageModelQualityOutput {
	return i.ToModelPackageModelQualityOutputWithContext(context.Background())
}

func (i ModelPackageModelQualityArgs) ToModelPackageModelQualityOutputWithContext(ctx context.Context) ModelPackageModelQualityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelQualityOutput)
}

func (i ModelPackageModelQualityArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelQuality] {
	return pulumix.Output[ModelPackageModelQuality]{
		OutputState: i.ToModelPackageModelQualityOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageModelQualityArgs) ToModelPackageModelQualityPtrOutput() ModelPackageModelQualityPtrOutput {
	return i.ToModelPackageModelQualityPtrOutputWithContext(context.Background())
}

func (i ModelPackageModelQualityArgs) ToModelPackageModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelQualityOutput).ToModelPackageModelQualityPtrOutputWithContext(ctx)
}

// ModelPackageModelQualityPtrInput is an input type that accepts ModelPackageModelQualityArgs, ModelPackageModelQualityPtr and ModelPackageModelQualityPtrOutput values.
// You can construct a concrete instance of `ModelPackageModelQualityPtrInput` via:
//
//	        ModelPackageModelQualityArgs{...}
//
//	or:
//
//	        nil
type ModelPackageModelQualityPtrInput interface {
	pulumi.Input

	ToModelPackageModelQualityPtrOutput() ModelPackageModelQualityPtrOutput
	ToModelPackageModelQualityPtrOutputWithContext(context.Context) ModelPackageModelQualityPtrOutput
}

type modelPackageModelQualityPtrType ModelPackageModelQualityArgs

func ModelPackageModelQualityPtr(v *ModelPackageModelQualityArgs) ModelPackageModelQualityPtrInput {
	return (*modelPackageModelQualityPtrType)(v)
}

func (*modelPackageModelQualityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelQuality)(nil)).Elem()
}

func (i *modelPackageModelQualityPtrType) ToModelPackageModelQualityPtrOutput() ModelPackageModelQualityPtrOutput {
	return i.ToModelPackageModelQualityPtrOutputWithContext(context.Background())
}

func (i *modelPackageModelQualityPtrType) ToModelPackageModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelQualityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageModelQualityPtrOutput)
}

func (i *modelPackageModelQualityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelQuality] {
	return pulumix.Output[*ModelPackageModelQuality]{
		OutputState: i.ToModelPackageModelQualityPtrOutputWithContext(ctx).OutputState,
	}
}

// Metrics that measure the quality of a model.
type ModelPackageModelQualityOutput struct{ *pulumi.OutputState }

func (ModelPackageModelQualityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageModelQuality)(nil)).Elem()
}

func (o ModelPackageModelQualityOutput) ToModelPackageModelQualityOutput() ModelPackageModelQualityOutput {
	return o
}

func (o ModelPackageModelQualityOutput) ToModelPackageModelQualityOutputWithContext(ctx context.Context) ModelPackageModelQualityOutput {
	return o
}

func (o ModelPackageModelQualityOutput) ToModelPackageModelQualityPtrOutput() ModelPackageModelQualityPtrOutput {
	return o.ToModelPackageModelQualityPtrOutputWithContext(context.Background())
}

func (o ModelPackageModelQualityOutput) ToModelPackageModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelQualityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageModelQuality) *ModelPackageModelQuality {
		return &v
	}).(ModelPackageModelQualityPtrOutput)
}

func (o ModelPackageModelQualityOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageModelQuality] {
	return pulumix.Output[ModelPackageModelQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelQualityOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageModelQuality) *ModelPackageMetricsSource { return v.Constraints }).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageModelQualityOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v ModelPackageModelQuality) *ModelPackageMetricsSource { return v.Statistics }).(ModelPackageMetricsSourcePtrOutput)
}

type ModelPackageModelQualityPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageModelQualityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageModelQuality)(nil)).Elem()
}

func (o ModelPackageModelQualityPtrOutput) ToModelPackageModelQualityPtrOutput() ModelPackageModelQualityPtrOutput {
	return o
}

func (o ModelPackageModelQualityPtrOutput) ToModelPackageModelQualityPtrOutputWithContext(ctx context.Context) ModelPackageModelQualityPtrOutput {
	return o
}

func (o ModelPackageModelQualityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageModelQuality] {
	return pulumix.Output[*ModelPackageModelQuality]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageModelQualityPtrOutput) Elem() ModelPackageModelQualityOutput {
	return o.ApplyT(func(v *ModelPackageModelQuality) ModelPackageModelQuality {
		if v != nil {
			return *v
		}
		var ret ModelPackageModelQuality
		return ret
	}).(ModelPackageModelQualityOutput)
}

func (o ModelPackageModelQualityPtrOutput) Constraints() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageModelQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Constraints
	}).(ModelPackageMetricsSourcePtrOutput)
}

func (o ModelPackageModelQualityPtrOutput) Statistics() ModelPackageMetricsSourcePtrOutput {
	return o.ApplyT(func(v *ModelPackageModelQuality) *ModelPackageMetricsSource {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(ModelPackageMetricsSourcePtrOutput)
}

// Describes the S3 data source.
type ModelPackageS3DataSource struct {
	// The S3 Data Source Type
	S3DataType ModelPackageS3DataSourceS3DataType `pulumi:"s3DataType"`
	// Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelPackageS3DataSourceInput is an input type that accepts ModelPackageS3DataSourceArgs and ModelPackageS3DataSourceOutput values.
// You can construct a concrete instance of `ModelPackageS3DataSourceInput` via:
//
//	ModelPackageS3DataSourceArgs{...}
type ModelPackageS3DataSourceInput interface {
	pulumi.Input

	ToModelPackageS3DataSourceOutput() ModelPackageS3DataSourceOutput
	ToModelPackageS3DataSourceOutputWithContext(context.Context) ModelPackageS3DataSourceOutput
}

// Describes the S3 data source.
type ModelPackageS3DataSourceArgs struct {
	// The S3 Data Source Type
	S3DataType ModelPackageS3DataSourceS3DataTypeInput `pulumi:"s3DataType"`
	// Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelPackageS3DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageS3DataSource)(nil)).Elem()
}

func (i ModelPackageS3DataSourceArgs) ToModelPackageS3DataSourceOutput() ModelPackageS3DataSourceOutput {
	return i.ToModelPackageS3DataSourceOutputWithContext(context.Background())
}

func (i ModelPackageS3DataSourceArgs) ToModelPackageS3DataSourceOutputWithContext(ctx context.Context) ModelPackageS3DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageS3DataSourceOutput)
}

func (i ModelPackageS3DataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageS3DataSource] {
	return pulumix.Output[ModelPackageS3DataSource]{
		OutputState: i.ToModelPackageS3DataSourceOutputWithContext(ctx).OutputState,
	}
}

// Describes the S3 data source.
type ModelPackageS3DataSourceOutput struct{ *pulumi.OutputState }

func (ModelPackageS3DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageS3DataSource)(nil)).Elem()
}

func (o ModelPackageS3DataSourceOutput) ToModelPackageS3DataSourceOutput() ModelPackageS3DataSourceOutput {
	return o
}

func (o ModelPackageS3DataSourceOutput) ToModelPackageS3DataSourceOutputWithContext(ctx context.Context) ModelPackageS3DataSourceOutput {
	return o
}

func (o ModelPackageS3DataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageS3DataSource] {
	return pulumix.Output[ModelPackageS3DataSource]{
		OutputState: o.OutputState,
	}
}

// The S3 Data Source Type
func (o ModelPackageS3DataSourceOutput) S3DataType() ModelPackageS3DataSourceS3DataTypeOutput {
	return o.ApplyT(func(v ModelPackageS3DataSource) ModelPackageS3DataSourceS3DataType { return v.S3DataType }).(ModelPackageS3DataSourceS3DataTypeOutput)
}

// Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
func (o ModelPackageS3DataSourceOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageS3DataSource) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
type ModelPackageSourceAlgorithm struct {
	// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
	AlgorithmName string `pulumi:"algorithmName"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
	ModelDataUrl *string `pulumi:"modelDataUrl"`
}

// ModelPackageSourceAlgorithmInput is an input type that accepts ModelPackageSourceAlgorithmArgs and ModelPackageSourceAlgorithmOutput values.
// You can construct a concrete instance of `ModelPackageSourceAlgorithmInput` via:
//
//	ModelPackageSourceAlgorithmArgs{...}
type ModelPackageSourceAlgorithmInput interface {
	pulumi.Input

	ToModelPackageSourceAlgorithmOutput() ModelPackageSourceAlgorithmOutput
	ToModelPackageSourceAlgorithmOutputWithContext(context.Context) ModelPackageSourceAlgorithmOutput
}

// Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
type ModelPackageSourceAlgorithmArgs struct {
	// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
	AlgorithmName pulumi.StringInput `pulumi:"algorithmName"`
	// The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
	ModelDataUrl pulumi.StringPtrInput `pulumi:"modelDataUrl"`
}

func (ModelPackageSourceAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageSourceAlgorithm)(nil)).Elem()
}

func (i ModelPackageSourceAlgorithmArgs) ToModelPackageSourceAlgorithmOutput() ModelPackageSourceAlgorithmOutput {
	return i.ToModelPackageSourceAlgorithmOutputWithContext(context.Background())
}

func (i ModelPackageSourceAlgorithmArgs) ToModelPackageSourceAlgorithmOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageSourceAlgorithmOutput)
}

func (i ModelPackageSourceAlgorithmArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageSourceAlgorithm] {
	return pulumix.Output[ModelPackageSourceAlgorithm]{
		OutputState: i.ToModelPackageSourceAlgorithmOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageSourceAlgorithmArrayInput is an input type that accepts ModelPackageSourceAlgorithmArray and ModelPackageSourceAlgorithmArrayOutput values.
// You can construct a concrete instance of `ModelPackageSourceAlgorithmArrayInput` via:
//
//	ModelPackageSourceAlgorithmArray{ ModelPackageSourceAlgorithmArgs{...} }
type ModelPackageSourceAlgorithmArrayInput interface {
	pulumi.Input

	ToModelPackageSourceAlgorithmArrayOutput() ModelPackageSourceAlgorithmArrayOutput
	ToModelPackageSourceAlgorithmArrayOutputWithContext(context.Context) ModelPackageSourceAlgorithmArrayOutput
}

type ModelPackageSourceAlgorithmArray []ModelPackageSourceAlgorithmInput

func (ModelPackageSourceAlgorithmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageSourceAlgorithm)(nil)).Elem()
}

func (i ModelPackageSourceAlgorithmArray) ToModelPackageSourceAlgorithmArrayOutput() ModelPackageSourceAlgorithmArrayOutput {
	return i.ToModelPackageSourceAlgorithmArrayOutputWithContext(context.Background())
}

func (i ModelPackageSourceAlgorithmArray) ToModelPackageSourceAlgorithmArrayOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageSourceAlgorithmArrayOutput)
}

func (i ModelPackageSourceAlgorithmArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageSourceAlgorithm] {
	return pulumix.Output[[]ModelPackageSourceAlgorithm]{
		OutputState: i.ToModelPackageSourceAlgorithmArrayOutputWithContext(ctx).OutputState,
	}
}

// Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
type ModelPackageSourceAlgorithmOutput struct{ *pulumi.OutputState }

func (ModelPackageSourceAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageSourceAlgorithm)(nil)).Elem()
}

func (o ModelPackageSourceAlgorithmOutput) ToModelPackageSourceAlgorithmOutput() ModelPackageSourceAlgorithmOutput {
	return o
}

func (o ModelPackageSourceAlgorithmOutput) ToModelPackageSourceAlgorithmOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmOutput {
	return o
}

func (o ModelPackageSourceAlgorithmOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageSourceAlgorithm] {
	return pulumix.Output[ModelPackageSourceAlgorithm]{
		OutputState: o.OutputState,
	}
}

// The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
func (o ModelPackageSourceAlgorithmOutput) AlgorithmName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageSourceAlgorithm) string { return v.AlgorithmName }).(pulumi.StringOutput)
}

// The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
func (o ModelPackageSourceAlgorithmOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageSourceAlgorithm) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

type ModelPackageSourceAlgorithmArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageSourceAlgorithmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageSourceAlgorithm)(nil)).Elem()
}

func (o ModelPackageSourceAlgorithmArrayOutput) ToModelPackageSourceAlgorithmArrayOutput() ModelPackageSourceAlgorithmArrayOutput {
	return o
}

func (o ModelPackageSourceAlgorithmArrayOutput) ToModelPackageSourceAlgorithmArrayOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmArrayOutput {
	return o
}

func (o ModelPackageSourceAlgorithmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageSourceAlgorithm] {
	return pulumix.Output[[]ModelPackageSourceAlgorithm]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageSourceAlgorithmArrayOutput) Index(i pulumi.IntInput) ModelPackageSourceAlgorithmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageSourceAlgorithm {
		return vs[0].([]ModelPackageSourceAlgorithm)[vs[1].(int)]
	}).(ModelPackageSourceAlgorithmOutput)
}

// Details about the algorithm that was used to create the model package.
type ModelPackageSourceAlgorithmSpecification struct {
	// A list of algorithms that were used to create a model package.
	SourceAlgorithms []ModelPackageSourceAlgorithm `pulumi:"sourceAlgorithms"`
}

// ModelPackageSourceAlgorithmSpecificationInput is an input type that accepts ModelPackageSourceAlgorithmSpecificationArgs and ModelPackageSourceAlgorithmSpecificationOutput values.
// You can construct a concrete instance of `ModelPackageSourceAlgorithmSpecificationInput` via:
//
//	ModelPackageSourceAlgorithmSpecificationArgs{...}
type ModelPackageSourceAlgorithmSpecificationInput interface {
	pulumi.Input

	ToModelPackageSourceAlgorithmSpecificationOutput() ModelPackageSourceAlgorithmSpecificationOutput
	ToModelPackageSourceAlgorithmSpecificationOutputWithContext(context.Context) ModelPackageSourceAlgorithmSpecificationOutput
}

// Details about the algorithm that was used to create the model package.
type ModelPackageSourceAlgorithmSpecificationArgs struct {
	// A list of algorithms that were used to create a model package.
	SourceAlgorithms ModelPackageSourceAlgorithmArrayInput `pulumi:"sourceAlgorithms"`
}

func (ModelPackageSourceAlgorithmSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageSourceAlgorithmSpecification)(nil)).Elem()
}

func (i ModelPackageSourceAlgorithmSpecificationArgs) ToModelPackageSourceAlgorithmSpecificationOutput() ModelPackageSourceAlgorithmSpecificationOutput {
	return i.ToModelPackageSourceAlgorithmSpecificationOutputWithContext(context.Background())
}

func (i ModelPackageSourceAlgorithmSpecificationArgs) ToModelPackageSourceAlgorithmSpecificationOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageSourceAlgorithmSpecificationOutput)
}

func (i ModelPackageSourceAlgorithmSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageSourceAlgorithmSpecification] {
	return pulumix.Output[ModelPackageSourceAlgorithmSpecification]{
		OutputState: i.ToModelPackageSourceAlgorithmSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageSourceAlgorithmSpecificationArgs) ToModelPackageSourceAlgorithmSpecificationPtrOutput() ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return i.ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(context.Background())
}

func (i ModelPackageSourceAlgorithmSpecificationArgs) ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageSourceAlgorithmSpecificationOutput).ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx)
}

// ModelPackageSourceAlgorithmSpecificationPtrInput is an input type that accepts ModelPackageSourceAlgorithmSpecificationArgs, ModelPackageSourceAlgorithmSpecificationPtr and ModelPackageSourceAlgorithmSpecificationPtrOutput values.
// You can construct a concrete instance of `ModelPackageSourceAlgorithmSpecificationPtrInput` via:
//
//	        ModelPackageSourceAlgorithmSpecificationArgs{...}
//
//	or:
//
//	        nil
type ModelPackageSourceAlgorithmSpecificationPtrInput interface {
	pulumi.Input

	ToModelPackageSourceAlgorithmSpecificationPtrOutput() ModelPackageSourceAlgorithmSpecificationPtrOutput
	ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(context.Context) ModelPackageSourceAlgorithmSpecificationPtrOutput
}

type modelPackageSourceAlgorithmSpecificationPtrType ModelPackageSourceAlgorithmSpecificationArgs

func ModelPackageSourceAlgorithmSpecificationPtr(v *ModelPackageSourceAlgorithmSpecificationArgs) ModelPackageSourceAlgorithmSpecificationPtrInput {
	return (*modelPackageSourceAlgorithmSpecificationPtrType)(v)
}

func (*modelPackageSourceAlgorithmSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageSourceAlgorithmSpecification)(nil)).Elem()
}

func (i *modelPackageSourceAlgorithmSpecificationPtrType) ToModelPackageSourceAlgorithmSpecificationPtrOutput() ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return i.ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(context.Background())
}

func (i *modelPackageSourceAlgorithmSpecificationPtrType) ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageSourceAlgorithmSpecificationPtrOutput)
}

func (i *modelPackageSourceAlgorithmSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageSourceAlgorithmSpecification] {
	return pulumix.Output[*ModelPackageSourceAlgorithmSpecification]{
		OutputState: i.ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

// Details about the algorithm that was used to create the model package.
type ModelPackageSourceAlgorithmSpecificationOutput struct{ *pulumi.OutputState }

func (ModelPackageSourceAlgorithmSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageSourceAlgorithmSpecification)(nil)).Elem()
}

func (o ModelPackageSourceAlgorithmSpecificationOutput) ToModelPackageSourceAlgorithmSpecificationOutput() ModelPackageSourceAlgorithmSpecificationOutput {
	return o
}

func (o ModelPackageSourceAlgorithmSpecificationOutput) ToModelPackageSourceAlgorithmSpecificationOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationOutput {
	return o
}

func (o ModelPackageSourceAlgorithmSpecificationOutput) ToModelPackageSourceAlgorithmSpecificationPtrOutput() ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return o.ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(context.Background())
}

func (o ModelPackageSourceAlgorithmSpecificationOutput) ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageSourceAlgorithmSpecification) *ModelPackageSourceAlgorithmSpecification {
		return &v
	}).(ModelPackageSourceAlgorithmSpecificationPtrOutput)
}

func (o ModelPackageSourceAlgorithmSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageSourceAlgorithmSpecification] {
	return pulumix.Output[ModelPackageSourceAlgorithmSpecification]{
		OutputState: o.OutputState,
	}
}

// A list of algorithms that were used to create a model package.
func (o ModelPackageSourceAlgorithmSpecificationOutput) SourceAlgorithms() ModelPackageSourceAlgorithmArrayOutput {
	return o.ApplyT(func(v ModelPackageSourceAlgorithmSpecification) []ModelPackageSourceAlgorithm {
		return v.SourceAlgorithms
	}).(ModelPackageSourceAlgorithmArrayOutput)
}

type ModelPackageSourceAlgorithmSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageSourceAlgorithmSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageSourceAlgorithmSpecification)(nil)).Elem()
}

func (o ModelPackageSourceAlgorithmSpecificationPtrOutput) ToModelPackageSourceAlgorithmSpecificationPtrOutput() ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return o
}

func (o ModelPackageSourceAlgorithmSpecificationPtrOutput) ToModelPackageSourceAlgorithmSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageSourceAlgorithmSpecificationPtrOutput {
	return o
}

func (o ModelPackageSourceAlgorithmSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageSourceAlgorithmSpecification] {
	return pulumix.Output[*ModelPackageSourceAlgorithmSpecification]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageSourceAlgorithmSpecificationPtrOutput) Elem() ModelPackageSourceAlgorithmSpecificationOutput {
	return o.ApplyT(func(v *ModelPackageSourceAlgorithmSpecification) ModelPackageSourceAlgorithmSpecification {
		if v != nil {
			return *v
		}
		var ret ModelPackageSourceAlgorithmSpecification
		return ret
	}).(ModelPackageSourceAlgorithmSpecificationOutput)
}

// A list of algorithms that were used to create a model package.
func (o ModelPackageSourceAlgorithmSpecificationPtrOutput) SourceAlgorithms() ModelPackageSourceAlgorithmArrayOutput {
	return o.ApplyT(func(v *ModelPackageSourceAlgorithmSpecification) []ModelPackageSourceAlgorithm {
		if v == nil {
			return nil
		}
		return v.SourceAlgorithms
	}).(ModelPackageSourceAlgorithmArrayOutput)
}

// Details about the current status of the model package.
type ModelPackageStatusDetails struct {
	ValidationStatuses []ModelPackageStatusItem `pulumi:"validationStatuses"`
}

// ModelPackageStatusDetailsInput is an input type that accepts ModelPackageStatusDetailsArgs and ModelPackageStatusDetailsOutput values.
// You can construct a concrete instance of `ModelPackageStatusDetailsInput` via:
//
//	ModelPackageStatusDetailsArgs{...}
type ModelPackageStatusDetailsInput interface {
	pulumi.Input

	ToModelPackageStatusDetailsOutput() ModelPackageStatusDetailsOutput
	ToModelPackageStatusDetailsOutputWithContext(context.Context) ModelPackageStatusDetailsOutput
}

// Details about the current status of the model package.
type ModelPackageStatusDetailsArgs struct {
	ValidationStatuses ModelPackageStatusItemArrayInput `pulumi:"validationStatuses"`
}

func (ModelPackageStatusDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageStatusDetails)(nil)).Elem()
}

func (i ModelPackageStatusDetailsArgs) ToModelPackageStatusDetailsOutput() ModelPackageStatusDetailsOutput {
	return i.ToModelPackageStatusDetailsOutputWithContext(context.Background())
}

func (i ModelPackageStatusDetailsArgs) ToModelPackageStatusDetailsOutputWithContext(ctx context.Context) ModelPackageStatusDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageStatusDetailsOutput)
}

func (i ModelPackageStatusDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageStatusDetails] {
	return pulumix.Output[ModelPackageStatusDetails]{
		OutputState: i.ToModelPackageStatusDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageStatusDetailsArgs) ToModelPackageStatusDetailsPtrOutput() ModelPackageStatusDetailsPtrOutput {
	return i.ToModelPackageStatusDetailsPtrOutputWithContext(context.Background())
}

func (i ModelPackageStatusDetailsArgs) ToModelPackageStatusDetailsPtrOutputWithContext(ctx context.Context) ModelPackageStatusDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageStatusDetailsOutput).ToModelPackageStatusDetailsPtrOutputWithContext(ctx)
}

// ModelPackageStatusDetailsPtrInput is an input type that accepts ModelPackageStatusDetailsArgs, ModelPackageStatusDetailsPtr and ModelPackageStatusDetailsPtrOutput values.
// You can construct a concrete instance of `ModelPackageStatusDetailsPtrInput` via:
//
//	        ModelPackageStatusDetailsArgs{...}
//
//	or:
//
//	        nil
type ModelPackageStatusDetailsPtrInput interface {
	pulumi.Input

	ToModelPackageStatusDetailsPtrOutput() ModelPackageStatusDetailsPtrOutput
	ToModelPackageStatusDetailsPtrOutputWithContext(context.Context) ModelPackageStatusDetailsPtrOutput
}

type modelPackageStatusDetailsPtrType ModelPackageStatusDetailsArgs

func ModelPackageStatusDetailsPtr(v *ModelPackageStatusDetailsArgs) ModelPackageStatusDetailsPtrInput {
	return (*modelPackageStatusDetailsPtrType)(v)
}

func (*modelPackageStatusDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageStatusDetails)(nil)).Elem()
}

func (i *modelPackageStatusDetailsPtrType) ToModelPackageStatusDetailsPtrOutput() ModelPackageStatusDetailsPtrOutput {
	return i.ToModelPackageStatusDetailsPtrOutputWithContext(context.Background())
}

func (i *modelPackageStatusDetailsPtrType) ToModelPackageStatusDetailsPtrOutputWithContext(ctx context.Context) ModelPackageStatusDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageStatusDetailsPtrOutput)
}

func (i *modelPackageStatusDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageStatusDetails] {
	return pulumix.Output[*ModelPackageStatusDetails]{
		OutputState: i.ToModelPackageStatusDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

// Details about the current status of the model package.
type ModelPackageStatusDetailsOutput struct{ *pulumi.OutputState }

func (ModelPackageStatusDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageStatusDetails)(nil)).Elem()
}

func (o ModelPackageStatusDetailsOutput) ToModelPackageStatusDetailsOutput() ModelPackageStatusDetailsOutput {
	return o
}

func (o ModelPackageStatusDetailsOutput) ToModelPackageStatusDetailsOutputWithContext(ctx context.Context) ModelPackageStatusDetailsOutput {
	return o
}

func (o ModelPackageStatusDetailsOutput) ToModelPackageStatusDetailsPtrOutput() ModelPackageStatusDetailsPtrOutput {
	return o.ToModelPackageStatusDetailsPtrOutputWithContext(context.Background())
}

func (o ModelPackageStatusDetailsOutput) ToModelPackageStatusDetailsPtrOutputWithContext(ctx context.Context) ModelPackageStatusDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageStatusDetails) *ModelPackageStatusDetails {
		return &v
	}).(ModelPackageStatusDetailsPtrOutput)
}

func (o ModelPackageStatusDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageStatusDetails] {
	return pulumix.Output[ModelPackageStatusDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageStatusDetailsOutput) ValidationStatuses() ModelPackageStatusItemArrayOutput {
	return o.ApplyT(func(v ModelPackageStatusDetails) []ModelPackageStatusItem { return v.ValidationStatuses }).(ModelPackageStatusItemArrayOutput)
}

type ModelPackageStatusDetailsPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageStatusDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageStatusDetails)(nil)).Elem()
}

func (o ModelPackageStatusDetailsPtrOutput) ToModelPackageStatusDetailsPtrOutput() ModelPackageStatusDetailsPtrOutput {
	return o
}

func (o ModelPackageStatusDetailsPtrOutput) ToModelPackageStatusDetailsPtrOutputWithContext(ctx context.Context) ModelPackageStatusDetailsPtrOutput {
	return o
}

func (o ModelPackageStatusDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageStatusDetails] {
	return pulumix.Output[*ModelPackageStatusDetails]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageStatusDetailsPtrOutput) Elem() ModelPackageStatusDetailsOutput {
	return o.ApplyT(func(v *ModelPackageStatusDetails) ModelPackageStatusDetails {
		if v != nil {
			return *v
		}
		var ret ModelPackageStatusDetails
		return ret
	}).(ModelPackageStatusDetailsOutput)
}

func (o ModelPackageStatusDetailsPtrOutput) ValidationStatuses() ModelPackageStatusItemArrayOutput {
	return o.ApplyT(func(v *ModelPackageStatusDetails) []ModelPackageStatusItem {
		if v == nil {
			return nil
		}
		return v.ValidationStatuses
	}).(ModelPackageStatusItemArrayOutput)
}

// Represents the overall status of a model package.
type ModelPackageStatusItem struct {
	// If the overall status is Failed, the reason for the failure.
	FailureReason *string `pulumi:"failureReason"`
	// The name of the model package for which the overall status is being reported.
	Name string `pulumi:"name"`
	// The current status.
	Status ModelPackageStatusItemStatus `pulumi:"status"`
}

// ModelPackageStatusItemInput is an input type that accepts ModelPackageStatusItemArgs and ModelPackageStatusItemOutput values.
// You can construct a concrete instance of `ModelPackageStatusItemInput` via:
//
//	ModelPackageStatusItemArgs{...}
type ModelPackageStatusItemInput interface {
	pulumi.Input

	ToModelPackageStatusItemOutput() ModelPackageStatusItemOutput
	ToModelPackageStatusItemOutputWithContext(context.Context) ModelPackageStatusItemOutput
}

// Represents the overall status of a model package.
type ModelPackageStatusItemArgs struct {
	// If the overall status is Failed, the reason for the failure.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// The name of the model package for which the overall status is being reported.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status.
	Status ModelPackageStatusItemStatusInput `pulumi:"status"`
}

func (ModelPackageStatusItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageStatusItem)(nil)).Elem()
}

func (i ModelPackageStatusItemArgs) ToModelPackageStatusItemOutput() ModelPackageStatusItemOutput {
	return i.ToModelPackageStatusItemOutputWithContext(context.Background())
}

func (i ModelPackageStatusItemArgs) ToModelPackageStatusItemOutputWithContext(ctx context.Context) ModelPackageStatusItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageStatusItemOutput)
}

func (i ModelPackageStatusItemArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageStatusItem] {
	return pulumix.Output[ModelPackageStatusItem]{
		OutputState: i.ToModelPackageStatusItemOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageStatusItemArrayInput is an input type that accepts ModelPackageStatusItemArray and ModelPackageStatusItemArrayOutput values.
// You can construct a concrete instance of `ModelPackageStatusItemArrayInput` via:
//
//	ModelPackageStatusItemArray{ ModelPackageStatusItemArgs{...} }
type ModelPackageStatusItemArrayInput interface {
	pulumi.Input

	ToModelPackageStatusItemArrayOutput() ModelPackageStatusItemArrayOutput
	ToModelPackageStatusItemArrayOutputWithContext(context.Context) ModelPackageStatusItemArrayOutput
}

type ModelPackageStatusItemArray []ModelPackageStatusItemInput

func (ModelPackageStatusItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageStatusItem)(nil)).Elem()
}

func (i ModelPackageStatusItemArray) ToModelPackageStatusItemArrayOutput() ModelPackageStatusItemArrayOutput {
	return i.ToModelPackageStatusItemArrayOutputWithContext(context.Background())
}

func (i ModelPackageStatusItemArray) ToModelPackageStatusItemArrayOutputWithContext(ctx context.Context) ModelPackageStatusItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageStatusItemArrayOutput)
}

func (i ModelPackageStatusItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageStatusItem] {
	return pulumix.Output[[]ModelPackageStatusItem]{
		OutputState: i.ToModelPackageStatusItemArrayOutputWithContext(ctx).OutputState,
	}
}

// Represents the overall status of a model package.
type ModelPackageStatusItemOutput struct{ *pulumi.OutputState }

func (ModelPackageStatusItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageStatusItem)(nil)).Elem()
}

func (o ModelPackageStatusItemOutput) ToModelPackageStatusItemOutput() ModelPackageStatusItemOutput {
	return o
}

func (o ModelPackageStatusItemOutput) ToModelPackageStatusItemOutputWithContext(ctx context.Context) ModelPackageStatusItemOutput {
	return o
}

func (o ModelPackageStatusItemOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageStatusItem] {
	return pulumix.Output[ModelPackageStatusItem]{
		OutputState: o.OutputState,
	}
}

// If the overall status is Failed, the reason for the failure.
func (o ModelPackageStatusItemOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageStatusItem) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// The name of the model package for which the overall status is being reported.
func (o ModelPackageStatusItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageStatusItem) string { return v.Name }).(pulumi.StringOutput)
}

// The current status.
func (o ModelPackageStatusItemOutput) Status() ModelPackageStatusItemStatusOutput {
	return o.ApplyT(func(v ModelPackageStatusItem) ModelPackageStatusItemStatus { return v.Status }).(ModelPackageStatusItemStatusOutput)
}

type ModelPackageStatusItemArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageStatusItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageStatusItem)(nil)).Elem()
}

func (o ModelPackageStatusItemArrayOutput) ToModelPackageStatusItemArrayOutput() ModelPackageStatusItemArrayOutput {
	return o
}

func (o ModelPackageStatusItemArrayOutput) ToModelPackageStatusItemArrayOutputWithContext(ctx context.Context) ModelPackageStatusItemArrayOutput {
	return o
}

func (o ModelPackageStatusItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageStatusItem] {
	return pulumix.Output[[]ModelPackageStatusItem]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageStatusItemArrayOutput) Index(i pulumi.IntInput) ModelPackageStatusItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageStatusItem {
		return vs[0].([]ModelPackageStatusItem)[vs[1].(int)]
	}).(ModelPackageStatusItemOutput)
}

// A key-value pair to associate with a resource.
type ModelPackageTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ModelPackageTagInput is an input type that accepts ModelPackageTagArgs and ModelPackageTagOutput values.
// You can construct a concrete instance of `ModelPackageTagInput` via:
//
//	ModelPackageTagArgs{...}
type ModelPackageTagInput interface {
	pulumi.Input

	ToModelPackageTagOutput() ModelPackageTagOutput
	ToModelPackageTagOutputWithContext(context.Context) ModelPackageTagOutput
}

// A key-value pair to associate with a resource.
type ModelPackageTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelPackageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTag)(nil)).Elem()
}

func (i ModelPackageTagArgs) ToModelPackageTagOutput() ModelPackageTagOutput {
	return i.ToModelPackageTagOutputWithContext(context.Background())
}

func (i ModelPackageTagArgs) ToModelPackageTagOutputWithContext(ctx context.Context) ModelPackageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTagOutput)
}

func (i ModelPackageTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTag] {
	return pulumix.Output[ModelPackageTag]{
		OutputState: i.ToModelPackageTagOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageTagArrayInput is an input type that accepts ModelPackageTagArray and ModelPackageTagArrayOutput values.
// You can construct a concrete instance of `ModelPackageTagArrayInput` via:
//
//	ModelPackageTagArray{ ModelPackageTagArgs{...} }
type ModelPackageTagArrayInput interface {
	pulumi.Input

	ToModelPackageTagArrayOutput() ModelPackageTagArrayOutput
	ToModelPackageTagArrayOutputWithContext(context.Context) ModelPackageTagArrayOutput
}

type ModelPackageTagArray []ModelPackageTagInput

func (ModelPackageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageTag)(nil)).Elem()
}

func (i ModelPackageTagArray) ToModelPackageTagArrayOutput() ModelPackageTagArrayOutput {
	return i.ToModelPackageTagArrayOutputWithContext(context.Background())
}

func (i ModelPackageTagArray) ToModelPackageTagArrayOutputWithContext(ctx context.Context) ModelPackageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTagArrayOutput)
}

func (i ModelPackageTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageTag] {
	return pulumix.Output[[]ModelPackageTag]{
		OutputState: i.ToModelPackageTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelPackageTagOutput struct{ *pulumi.OutputState }

func (ModelPackageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTag)(nil)).Elem()
}

func (o ModelPackageTagOutput) ToModelPackageTagOutput() ModelPackageTagOutput {
	return o
}

func (o ModelPackageTagOutput) ToModelPackageTagOutputWithContext(ctx context.Context) ModelPackageTagOutput {
	return o
}

func (o ModelPackageTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTag] {
	return pulumix.Output[ModelPackageTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelPackageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelPackageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelPackageTagArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageTag)(nil)).Elem()
}

func (o ModelPackageTagArrayOutput) ToModelPackageTagArrayOutput() ModelPackageTagArrayOutput {
	return o
}

func (o ModelPackageTagArrayOutput) ToModelPackageTagArrayOutputWithContext(ctx context.Context) ModelPackageTagArrayOutput {
	return o
}

func (o ModelPackageTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageTag] {
	return pulumix.Output[[]ModelPackageTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageTagArrayOutput) Index(i pulumi.IntInput) ModelPackageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageTag {
		return vs[0].([]ModelPackageTag)[vs[1].(int)]
	}).(ModelPackageTagOutput)
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageTransformInput struct {
	// If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
	CompressionType *ModelPackageTransformInputCompressionType `pulumi:"compressionType"`
	// The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
	ContentType *string                `pulumi:"contentType"`
	DataSource  ModelPackageDataSource `pulumi:"dataSource"`
	// The method to use to split the transform job's data files into smaller batches.
	SplitType *ModelPackageTransformInputSplitType `pulumi:"splitType"`
}

// ModelPackageTransformInputInput is an input type that accepts ModelPackageTransformInputArgs and ModelPackageTransformInputOutput values.
// You can construct a concrete instance of `ModelPackageTransformInputInput` via:
//
//	ModelPackageTransformInputArgs{...}
type ModelPackageTransformInputInput interface {
	pulumi.Input

	ToModelPackageTransformInputOutput() ModelPackageTransformInputOutput
	ToModelPackageTransformInputOutputWithContext(context.Context) ModelPackageTransformInputOutput
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageTransformInputArgs struct {
	// If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
	CompressionType ModelPackageTransformInputCompressionTypePtrInput `pulumi:"compressionType"`
	// The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
	ContentType pulumi.StringPtrInput       `pulumi:"contentType"`
	DataSource  ModelPackageDataSourceInput `pulumi:"dataSource"`
	// The method to use to split the transform job's data files into smaller batches.
	SplitType ModelPackageTransformInputSplitTypePtrInput `pulumi:"splitType"`
}

func (ModelPackageTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformInput)(nil)).Elem()
}

func (i ModelPackageTransformInputArgs) ToModelPackageTransformInputOutput() ModelPackageTransformInputOutput {
	return i.ToModelPackageTransformInputOutputWithContext(context.Background())
}

func (i ModelPackageTransformInputArgs) ToModelPackageTransformInputOutputWithContext(ctx context.Context) ModelPackageTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTransformInputOutput)
}

func (i ModelPackageTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformInput] {
	return pulumix.Output[ModelPackageTransformInput]{
		OutputState: i.ToModelPackageTransformInputOutputWithContext(ctx).OutputState,
	}
}

// Describes the input source of a transform job and the way the transform job consumes it.
type ModelPackageTransformInputOutput struct{ *pulumi.OutputState }

func (ModelPackageTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformInput)(nil)).Elem()
}

func (o ModelPackageTransformInputOutput) ToModelPackageTransformInputOutput() ModelPackageTransformInputOutput {
	return o
}

func (o ModelPackageTransformInputOutput) ToModelPackageTransformInputOutputWithContext(ctx context.Context) ModelPackageTransformInputOutput {
	return o
}

func (o ModelPackageTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformInput] {
	return pulumix.Output[ModelPackageTransformInput]{
		OutputState: o.OutputState,
	}
}

// If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
func (o ModelPackageTransformInputOutput) CompressionType() ModelPackageTransformInputCompressionTypePtrOutput {
	return o.ApplyT(func(v ModelPackageTransformInput) *ModelPackageTransformInputCompressionType {
		return v.CompressionType
	}).(ModelPackageTransformInputCompressionTypePtrOutput)
}

// The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
func (o ModelPackageTransformInputOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformInput) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o ModelPackageTransformInputOutput) DataSource() ModelPackageDataSourceOutput {
	return o.ApplyT(func(v ModelPackageTransformInput) ModelPackageDataSource { return v.DataSource }).(ModelPackageDataSourceOutput)
}

// The method to use to split the transform job's data files into smaller batches.
func (o ModelPackageTransformInputOutput) SplitType() ModelPackageTransformInputSplitTypePtrOutput {
	return o.ApplyT(func(v ModelPackageTransformInput) *ModelPackageTransformInputSplitType { return v.SplitType }).(ModelPackageTransformInputSplitTypePtrOutput)
}

// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
type ModelPackageTransformJobDefinition struct {
	// A string that determines the number of records included in a single mini-batch.
	BatchStrategy *ModelPackageTransformJobDefinitionBatchStrategy `pulumi:"batchStrategy"`
	Environment   *ModelPackageEnvironment                         `pulumi:"environment"`
	// The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
	MaxConcurrentTransforms *int `pulumi:"maxConcurrentTransforms"`
	// The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
	MaxPayloadInMb     *int                           `pulumi:"maxPayloadInMb"`
	TransformInput     ModelPackageTransformInput     `pulumi:"transformInput"`
	TransformOutput    ModelPackageTransformOutput    `pulumi:"transformOutput"`
	TransformResources ModelPackageTransformResources `pulumi:"transformResources"`
}

// ModelPackageTransformJobDefinitionInput is an input type that accepts ModelPackageTransformJobDefinitionArgs and ModelPackageTransformJobDefinitionOutput values.
// You can construct a concrete instance of `ModelPackageTransformJobDefinitionInput` via:
//
//	ModelPackageTransformJobDefinitionArgs{...}
type ModelPackageTransformJobDefinitionInput interface {
	pulumi.Input

	ToModelPackageTransformJobDefinitionOutput() ModelPackageTransformJobDefinitionOutput
	ToModelPackageTransformJobDefinitionOutputWithContext(context.Context) ModelPackageTransformJobDefinitionOutput
}

// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
type ModelPackageTransformJobDefinitionArgs struct {
	// A string that determines the number of records included in a single mini-batch.
	BatchStrategy ModelPackageTransformJobDefinitionBatchStrategyPtrInput `pulumi:"batchStrategy"`
	Environment   ModelPackageEnvironmentPtrInput                         `pulumi:"environment"`
	// The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
	MaxConcurrentTransforms pulumi.IntPtrInput `pulumi:"maxConcurrentTransforms"`
	// The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
	MaxPayloadInMb     pulumi.IntPtrInput                  `pulumi:"maxPayloadInMb"`
	TransformInput     ModelPackageTransformInputInput     `pulumi:"transformInput"`
	TransformOutput    ModelPackageTransformOutputInput    `pulumi:"transformOutput"`
	TransformResources ModelPackageTransformResourcesInput `pulumi:"transformResources"`
}

func (ModelPackageTransformJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformJobDefinition)(nil)).Elem()
}

func (i ModelPackageTransformJobDefinitionArgs) ToModelPackageTransformJobDefinitionOutput() ModelPackageTransformJobDefinitionOutput {
	return i.ToModelPackageTransformJobDefinitionOutputWithContext(context.Background())
}

func (i ModelPackageTransformJobDefinitionArgs) ToModelPackageTransformJobDefinitionOutputWithContext(ctx context.Context) ModelPackageTransformJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTransformJobDefinitionOutput)
}

func (i ModelPackageTransformJobDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformJobDefinition] {
	return pulumix.Output[ModelPackageTransformJobDefinition]{
		OutputState: i.ToModelPackageTransformJobDefinitionOutputWithContext(ctx).OutputState,
	}
}

// Defines the input needed to run a transform job using the inference specification specified in the algorithm.
type ModelPackageTransformJobDefinitionOutput struct{ *pulumi.OutputState }

func (ModelPackageTransformJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformJobDefinition)(nil)).Elem()
}

func (o ModelPackageTransformJobDefinitionOutput) ToModelPackageTransformJobDefinitionOutput() ModelPackageTransformJobDefinitionOutput {
	return o
}

func (o ModelPackageTransformJobDefinitionOutput) ToModelPackageTransformJobDefinitionOutputWithContext(ctx context.Context) ModelPackageTransformJobDefinitionOutput {
	return o
}

func (o ModelPackageTransformJobDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformJobDefinition] {
	return pulumix.Output[ModelPackageTransformJobDefinition]{
		OutputState: o.OutputState,
	}
}

// A string that determines the number of records included in a single mini-batch.
func (o ModelPackageTransformJobDefinitionOutput) BatchStrategy() ModelPackageTransformJobDefinitionBatchStrategyPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) *ModelPackageTransformJobDefinitionBatchStrategy {
		return v.BatchStrategy
	}).(ModelPackageTransformJobDefinitionBatchStrategyPtrOutput)
}

func (o ModelPackageTransformJobDefinitionOutput) Environment() ModelPackageEnvironmentPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) *ModelPackageEnvironment { return v.Environment }).(ModelPackageEnvironmentPtrOutput)
}

// The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
func (o ModelPackageTransformJobDefinitionOutput) MaxConcurrentTransforms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) *int { return v.MaxConcurrentTransforms }).(pulumi.IntPtrOutput)
}

// The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
func (o ModelPackageTransformJobDefinitionOutput) MaxPayloadInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) *int { return v.MaxPayloadInMb }).(pulumi.IntPtrOutput)
}

func (o ModelPackageTransformJobDefinitionOutput) TransformInput() ModelPackageTransformInputOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) ModelPackageTransformInput { return v.TransformInput }).(ModelPackageTransformInputOutput)
}

func (o ModelPackageTransformJobDefinitionOutput) TransformOutput() ModelPackageTransformOutputOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) ModelPackageTransformOutput { return v.TransformOutput }).(ModelPackageTransformOutputOutput)
}

func (o ModelPackageTransformJobDefinitionOutput) TransformResources() ModelPackageTransformResourcesOutput {
	return o.ApplyT(func(v ModelPackageTransformJobDefinition) ModelPackageTransformResources { return v.TransformResources }).(ModelPackageTransformResourcesOutput)
}

// Describes the results of a transform job.
type ModelPackageTransformOutput struct {
	// The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
	Accept *string `pulumi:"accept"`
	// Defines how to assemble the results of the transform job as a single S3 object.
	AssembleWith *ModelPackageTransformOutputAssembleWith `pulumi:"assembleWith"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
	S3OutputPath string `pulumi:"s3OutputPath"`
}

// ModelPackageTransformOutputInput is an input type that accepts ModelPackageTransformOutputArgs and ModelPackageTransformOutputOutput values.
// You can construct a concrete instance of `ModelPackageTransformOutputInput` via:
//
//	ModelPackageTransformOutputArgs{...}
type ModelPackageTransformOutputInput interface {
	pulumi.Input

	ToModelPackageTransformOutputOutput() ModelPackageTransformOutputOutput
	ToModelPackageTransformOutputOutputWithContext(context.Context) ModelPackageTransformOutputOutput
}

// Describes the results of a transform job.
type ModelPackageTransformOutputArgs struct {
	// The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
	Accept pulumi.StringPtrInput `pulumi:"accept"`
	// Defines how to assemble the results of the transform job as a single S3 object.
	AssembleWith ModelPackageTransformOutputAssembleWithPtrInput `pulumi:"assembleWith"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
	S3OutputPath pulumi.StringInput `pulumi:"s3OutputPath"`
}

func (ModelPackageTransformOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformOutput)(nil)).Elem()
}

func (i ModelPackageTransformOutputArgs) ToModelPackageTransformOutputOutput() ModelPackageTransformOutputOutput {
	return i.ToModelPackageTransformOutputOutputWithContext(context.Background())
}

func (i ModelPackageTransformOutputArgs) ToModelPackageTransformOutputOutputWithContext(ctx context.Context) ModelPackageTransformOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTransformOutputOutput)
}

func (i ModelPackageTransformOutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformOutput] {
	return pulumix.Output[ModelPackageTransformOutput]{
		OutputState: i.ToModelPackageTransformOutputOutputWithContext(ctx).OutputState,
	}
}

// Describes the results of a transform job.
type ModelPackageTransformOutputOutput struct{ *pulumi.OutputState }

func (ModelPackageTransformOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformOutput)(nil)).Elem()
}

func (o ModelPackageTransformOutputOutput) ToModelPackageTransformOutputOutput() ModelPackageTransformOutputOutput {
	return o
}

func (o ModelPackageTransformOutputOutput) ToModelPackageTransformOutputOutputWithContext(ctx context.Context) ModelPackageTransformOutputOutput {
	return o
}

func (o ModelPackageTransformOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformOutput] {
	return pulumix.Output[ModelPackageTransformOutput]{
		OutputState: o.OutputState,
	}
}

// The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
func (o ModelPackageTransformOutputOutput) Accept() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformOutput) *string { return v.Accept }).(pulumi.StringPtrOutput)
}

// Defines how to assemble the results of the transform job as a single S3 object.
func (o ModelPackageTransformOutputOutput) AssembleWith() ModelPackageTransformOutputAssembleWithPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformOutput) *ModelPackageTransformOutputAssembleWith { return v.AssembleWith }).(ModelPackageTransformOutputAssembleWithPtrOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o ModelPackageTransformOutputOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformOutput) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
func (o ModelPackageTransformOutputOutput) S3OutputPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageTransformOutput) string { return v.S3OutputPath }).(pulumi.StringOutput)
}

// Describes the resources, including ML instance types and ML instance count, to use for transform job.
type ModelPackageTransformResources struct {
	// The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the transform job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
}

// ModelPackageTransformResourcesInput is an input type that accepts ModelPackageTransformResourcesArgs and ModelPackageTransformResourcesOutput values.
// You can construct a concrete instance of `ModelPackageTransformResourcesInput` via:
//
//	ModelPackageTransformResourcesArgs{...}
type ModelPackageTransformResourcesInput interface {
	pulumi.Input

	ToModelPackageTransformResourcesOutput() ModelPackageTransformResourcesOutput
	ToModelPackageTransformResourcesOutputWithContext(context.Context) ModelPackageTransformResourcesOutput
}

// Describes the resources, including ML instance types and ML instance count, to use for transform job.
type ModelPackageTransformResourcesArgs struct {
	// The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the transform job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
}

func (ModelPackageTransformResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformResources)(nil)).Elem()
}

func (i ModelPackageTransformResourcesArgs) ToModelPackageTransformResourcesOutput() ModelPackageTransformResourcesOutput {
	return i.ToModelPackageTransformResourcesOutputWithContext(context.Background())
}

func (i ModelPackageTransformResourcesArgs) ToModelPackageTransformResourcesOutputWithContext(ctx context.Context) ModelPackageTransformResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageTransformResourcesOutput)
}

func (i ModelPackageTransformResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformResources] {
	return pulumix.Output[ModelPackageTransformResources]{
		OutputState: i.ToModelPackageTransformResourcesOutputWithContext(ctx).OutputState,
	}
}

// Describes the resources, including ML instance types and ML instance count, to use for transform job.
type ModelPackageTransformResourcesOutput struct{ *pulumi.OutputState }

func (ModelPackageTransformResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageTransformResources)(nil)).Elem()
}

func (o ModelPackageTransformResourcesOutput) ToModelPackageTransformResourcesOutput() ModelPackageTransformResourcesOutput {
	return o
}

func (o ModelPackageTransformResourcesOutput) ToModelPackageTransformResourcesOutputWithContext(ctx context.Context) ModelPackageTransformResourcesOutput {
	return o
}

func (o ModelPackageTransformResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageTransformResources] {
	return pulumix.Output[ModelPackageTransformResources]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.
func (o ModelPackageTransformResourcesOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ModelPackageTransformResources) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the transform job.
func (o ModelPackageTransformResourcesOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageTransformResources) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
func (o ModelPackageTransformResourcesOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelPackageTransformResources) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
type ModelPackageValidationProfile struct {
	// The name of the profile for the model package.
	ProfileName            string                             `pulumi:"profileName"`
	TransformJobDefinition ModelPackageTransformJobDefinition `pulumi:"transformJobDefinition"`
}

// ModelPackageValidationProfileInput is an input type that accepts ModelPackageValidationProfileArgs and ModelPackageValidationProfileOutput values.
// You can construct a concrete instance of `ModelPackageValidationProfileInput` via:
//
//	ModelPackageValidationProfileArgs{...}
type ModelPackageValidationProfileInput interface {
	pulumi.Input

	ToModelPackageValidationProfileOutput() ModelPackageValidationProfileOutput
	ToModelPackageValidationProfileOutputWithContext(context.Context) ModelPackageValidationProfileOutput
}

// Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
type ModelPackageValidationProfileArgs struct {
	// The name of the profile for the model package.
	ProfileName            pulumi.StringInput                      `pulumi:"profileName"`
	TransformJobDefinition ModelPackageTransformJobDefinitionInput `pulumi:"transformJobDefinition"`
}

func (ModelPackageValidationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageValidationProfile)(nil)).Elem()
}

func (i ModelPackageValidationProfileArgs) ToModelPackageValidationProfileOutput() ModelPackageValidationProfileOutput {
	return i.ToModelPackageValidationProfileOutputWithContext(context.Background())
}

func (i ModelPackageValidationProfileArgs) ToModelPackageValidationProfileOutputWithContext(ctx context.Context) ModelPackageValidationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageValidationProfileOutput)
}

func (i ModelPackageValidationProfileArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageValidationProfile] {
	return pulumix.Output[ModelPackageValidationProfile]{
		OutputState: i.ToModelPackageValidationProfileOutputWithContext(ctx).OutputState,
	}
}

// ModelPackageValidationProfileArrayInput is an input type that accepts ModelPackageValidationProfileArray and ModelPackageValidationProfileArrayOutput values.
// You can construct a concrete instance of `ModelPackageValidationProfileArrayInput` via:
//
//	ModelPackageValidationProfileArray{ ModelPackageValidationProfileArgs{...} }
type ModelPackageValidationProfileArrayInput interface {
	pulumi.Input

	ToModelPackageValidationProfileArrayOutput() ModelPackageValidationProfileArrayOutput
	ToModelPackageValidationProfileArrayOutputWithContext(context.Context) ModelPackageValidationProfileArrayOutput
}

type ModelPackageValidationProfileArray []ModelPackageValidationProfileInput

func (ModelPackageValidationProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageValidationProfile)(nil)).Elem()
}

func (i ModelPackageValidationProfileArray) ToModelPackageValidationProfileArrayOutput() ModelPackageValidationProfileArrayOutput {
	return i.ToModelPackageValidationProfileArrayOutputWithContext(context.Background())
}

func (i ModelPackageValidationProfileArray) ToModelPackageValidationProfileArrayOutputWithContext(ctx context.Context) ModelPackageValidationProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageValidationProfileArrayOutput)
}

func (i ModelPackageValidationProfileArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageValidationProfile] {
	return pulumix.Output[[]ModelPackageValidationProfile]{
		OutputState: i.ToModelPackageValidationProfileArrayOutputWithContext(ctx).OutputState,
	}
}

// Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
type ModelPackageValidationProfileOutput struct{ *pulumi.OutputState }

func (ModelPackageValidationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageValidationProfile)(nil)).Elem()
}

func (o ModelPackageValidationProfileOutput) ToModelPackageValidationProfileOutput() ModelPackageValidationProfileOutput {
	return o
}

func (o ModelPackageValidationProfileOutput) ToModelPackageValidationProfileOutputWithContext(ctx context.Context) ModelPackageValidationProfileOutput {
	return o
}

func (o ModelPackageValidationProfileOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageValidationProfile] {
	return pulumix.Output[ModelPackageValidationProfile]{
		OutputState: o.OutputState,
	}
}

// The name of the profile for the model package.
func (o ModelPackageValidationProfileOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageValidationProfile) string { return v.ProfileName }).(pulumi.StringOutput)
}

func (o ModelPackageValidationProfileOutput) TransformJobDefinition() ModelPackageTransformJobDefinitionOutput {
	return o.ApplyT(func(v ModelPackageValidationProfile) ModelPackageTransformJobDefinition {
		return v.TransformJobDefinition
	}).(ModelPackageTransformJobDefinitionOutput)
}

type ModelPackageValidationProfileArrayOutput struct{ *pulumi.OutputState }

func (ModelPackageValidationProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelPackageValidationProfile)(nil)).Elem()
}

func (o ModelPackageValidationProfileArrayOutput) ToModelPackageValidationProfileArrayOutput() ModelPackageValidationProfileArrayOutput {
	return o
}

func (o ModelPackageValidationProfileArrayOutput) ToModelPackageValidationProfileArrayOutputWithContext(ctx context.Context) ModelPackageValidationProfileArrayOutput {
	return o
}

func (o ModelPackageValidationProfileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelPackageValidationProfile] {
	return pulumix.Output[[]ModelPackageValidationProfile]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageValidationProfileArrayOutput) Index(i pulumi.IntInput) ModelPackageValidationProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelPackageValidationProfile {
		return vs[0].([]ModelPackageValidationProfile)[vs[1].(int)]
	}).(ModelPackageValidationProfileOutput)
}

// Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
type ModelPackageValidationSpecification struct {
	ValidationProfiles []ModelPackageValidationProfile `pulumi:"validationProfiles"`
	// The IAM roles to be used for the validation of the model package.
	ValidationRole string `pulumi:"validationRole"`
}

// ModelPackageValidationSpecificationInput is an input type that accepts ModelPackageValidationSpecificationArgs and ModelPackageValidationSpecificationOutput values.
// You can construct a concrete instance of `ModelPackageValidationSpecificationInput` via:
//
//	ModelPackageValidationSpecificationArgs{...}
type ModelPackageValidationSpecificationInput interface {
	pulumi.Input

	ToModelPackageValidationSpecificationOutput() ModelPackageValidationSpecificationOutput
	ToModelPackageValidationSpecificationOutputWithContext(context.Context) ModelPackageValidationSpecificationOutput
}

// Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
type ModelPackageValidationSpecificationArgs struct {
	ValidationProfiles ModelPackageValidationProfileArrayInput `pulumi:"validationProfiles"`
	// The IAM roles to be used for the validation of the model package.
	ValidationRole pulumi.StringInput `pulumi:"validationRole"`
}

func (ModelPackageValidationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageValidationSpecification)(nil)).Elem()
}

func (i ModelPackageValidationSpecificationArgs) ToModelPackageValidationSpecificationOutput() ModelPackageValidationSpecificationOutput {
	return i.ToModelPackageValidationSpecificationOutputWithContext(context.Background())
}

func (i ModelPackageValidationSpecificationArgs) ToModelPackageValidationSpecificationOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageValidationSpecificationOutput)
}

func (i ModelPackageValidationSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelPackageValidationSpecification] {
	return pulumix.Output[ModelPackageValidationSpecification]{
		OutputState: i.ToModelPackageValidationSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i ModelPackageValidationSpecificationArgs) ToModelPackageValidationSpecificationPtrOutput() ModelPackageValidationSpecificationPtrOutput {
	return i.ToModelPackageValidationSpecificationPtrOutputWithContext(context.Background())
}

func (i ModelPackageValidationSpecificationArgs) ToModelPackageValidationSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageValidationSpecificationOutput).ToModelPackageValidationSpecificationPtrOutputWithContext(ctx)
}

// ModelPackageValidationSpecificationPtrInput is an input type that accepts ModelPackageValidationSpecificationArgs, ModelPackageValidationSpecificationPtr and ModelPackageValidationSpecificationPtrOutput values.
// You can construct a concrete instance of `ModelPackageValidationSpecificationPtrInput` via:
//
//	        ModelPackageValidationSpecificationArgs{...}
//
//	or:
//
//	        nil
type ModelPackageValidationSpecificationPtrInput interface {
	pulumi.Input

	ToModelPackageValidationSpecificationPtrOutput() ModelPackageValidationSpecificationPtrOutput
	ToModelPackageValidationSpecificationPtrOutputWithContext(context.Context) ModelPackageValidationSpecificationPtrOutput
}

type modelPackageValidationSpecificationPtrType ModelPackageValidationSpecificationArgs

func ModelPackageValidationSpecificationPtr(v *ModelPackageValidationSpecificationArgs) ModelPackageValidationSpecificationPtrInput {
	return (*modelPackageValidationSpecificationPtrType)(v)
}

func (*modelPackageValidationSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageValidationSpecification)(nil)).Elem()
}

func (i *modelPackageValidationSpecificationPtrType) ToModelPackageValidationSpecificationPtrOutput() ModelPackageValidationSpecificationPtrOutput {
	return i.ToModelPackageValidationSpecificationPtrOutputWithContext(context.Background())
}

func (i *modelPackageValidationSpecificationPtrType) ToModelPackageValidationSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPackageValidationSpecificationPtrOutput)
}

func (i *modelPackageValidationSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageValidationSpecification] {
	return pulumix.Output[*ModelPackageValidationSpecification]{
		OutputState: i.ToModelPackageValidationSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
type ModelPackageValidationSpecificationOutput struct{ *pulumi.OutputState }

func (ModelPackageValidationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPackageValidationSpecification)(nil)).Elem()
}

func (o ModelPackageValidationSpecificationOutput) ToModelPackageValidationSpecificationOutput() ModelPackageValidationSpecificationOutput {
	return o
}

func (o ModelPackageValidationSpecificationOutput) ToModelPackageValidationSpecificationOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationOutput {
	return o
}

func (o ModelPackageValidationSpecificationOutput) ToModelPackageValidationSpecificationPtrOutput() ModelPackageValidationSpecificationPtrOutput {
	return o.ToModelPackageValidationSpecificationPtrOutputWithContext(context.Background())
}

func (o ModelPackageValidationSpecificationOutput) ToModelPackageValidationSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelPackageValidationSpecification) *ModelPackageValidationSpecification {
		return &v
	}).(ModelPackageValidationSpecificationPtrOutput)
}

func (o ModelPackageValidationSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPackageValidationSpecification] {
	return pulumix.Output[ModelPackageValidationSpecification]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageValidationSpecificationOutput) ValidationProfiles() ModelPackageValidationProfileArrayOutput {
	return o.ApplyT(func(v ModelPackageValidationSpecification) []ModelPackageValidationProfile {
		return v.ValidationProfiles
	}).(ModelPackageValidationProfileArrayOutput)
}

// The IAM roles to be used for the validation of the model package.
func (o ModelPackageValidationSpecificationOutput) ValidationRole() pulumi.StringOutput {
	return o.ApplyT(func(v ModelPackageValidationSpecification) string { return v.ValidationRole }).(pulumi.StringOutput)
}

type ModelPackageValidationSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ModelPackageValidationSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelPackageValidationSpecification)(nil)).Elem()
}

func (o ModelPackageValidationSpecificationPtrOutput) ToModelPackageValidationSpecificationPtrOutput() ModelPackageValidationSpecificationPtrOutput {
	return o
}

func (o ModelPackageValidationSpecificationPtrOutput) ToModelPackageValidationSpecificationPtrOutputWithContext(ctx context.Context) ModelPackageValidationSpecificationPtrOutput {
	return o
}

func (o ModelPackageValidationSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelPackageValidationSpecification] {
	return pulumix.Output[*ModelPackageValidationSpecification]{
		OutputState: o.OutputState,
	}
}

func (o ModelPackageValidationSpecificationPtrOutput) Elem() ModelPackageValidationSpecificationOutput {
	return o.ApplyT(func(v *ModelPackageValidationSpecification) ModelPackageValidationSpecification {
		if v != nil {
			return *v
		}
		var ret ModelPackageValidationSpecification
		return ret
	}).(ModelPackageValidationSpecificationOutput)
}

func (o ModelPackageValidationSpecificationPtrOutput) ValidationProfiles() ModelPackageValidationProfileArrayOutput {
	return o.ApplyT(func(v *ModelPackageValidationSpecification) []ModelPackageValidationProfile {
		if v == nil {
			return nil
		}
		return v.ValidationProfiles
	}).(ModelPackageValidationProfileArrayOutput)
}

// The IAM roles to be used for the validation of the model package.
func (o ModelPackageValidationSpecificationPtrOutput) ValidationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelPackageValidationSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.ValidationRole
	}).(pulumi.StringPtrOutput)
}

// The batch transform input for a monitoring job.
type ModelQualityJobDefinitionBatchTransformInput struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri string                                 `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelQualityJobDefinitionDatasetFormat `pulumi:"datasetFormat"`
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset *string `pulumi:"endTimeOffset"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          *string  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute *float64 `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelQualityJobDefinitionBatchTransformInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelQualityJobDefinitionBatchTransformInputS3InputMode `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset *string `pulumi:"startTimeOffset"`
}

// ModelQualityJobDefinitionBatchTransformInputInput is an input type that accepts ModelQualityJobDefinitionBatchTransformInputArgs and ModelQualityJobDefinitionBatchTransformInputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionBatchTransformInputInput` via:
//
//	ModelQualityJobDefinitionBatchTransformInputArgs{...}
type ModelQualityJobDefinitionBatchTransformInputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionBatchTransformInputOutput() ModelQualityJobDefinitionBatchTransformInputOutput
	ToModelQualityJobDefinitionBatchTransformInputOutputWithContext(context.Context) ModelQualityJobDefinitionBatchTransformInputOutput
}

// The batch transform input for a monitoring job.
type ModelQualityJobDefinitionBatchTransformInputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri pulumi.StringInput                          `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                ModelQualityJobDefinitionDatasetFormatInput `pulumi:"datasetFormat"`
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset pulumi.StringPtrInput `pulumi:"endTimeOffset"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          pulumi.StringPtrInput  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute pulumi.Float64PtrInput `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelQualityJobDefinitionBatchTransformInputS3InputModePtrInput `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset pulumi.StringPtrInput `pulumi:"startTimeOffset"`
}

func (ModelQualityJobDefinitionBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i ModelQualityJobDefinitionBatchTransformInputArgs) ToModelQualityJobDefinitionBatchTransformInputOutput() ModelQualityJobDefinitionBatchTransformInputOutput {
	return i.ToModelQualityJobDefinitionBatchTransformInputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionBatchTransformInputArgs) ToModelQualityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionBatchTransformInputOutput)
}

func (i ModelQualityJobDefinitionBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelQualityJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelQualityJobDefinitionBatchTransformInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionBatchTransformInputArgs) ToModelQualityJobDefinitionBatchTransformInputPtrOutput() ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionBatchTransformInputArgs) ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionBatchTransformInputOutput).ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionBatchTransformInputPtrInput is an input type that accepts ModelQualityJobDefinitionBatchTransformInputArgs, ModelQualityJobDefinitionBatchTransformInputPtr and ModelQualityJobDefinitionBatchTransformInputPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionBatchTransformInputPtrInput` via:
//
//	        ModelQualityJobDefinitionBatchTransformInputArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionBatchTransformInputPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionBatchTransformInputPtrOutput() ModelQualityJobDefinitionBatchTransformInputPtrOutput
	ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Context) ModelQualityJobDefinitionBatchTransformInputPtrOutput
}

type modelQualityJobDefinitionBatchTransformInputPtrType ModelQualityJobDefinitionBatchTransformInputArgs

func ModelQualityJobDefinitionBatchTransformInputPtr(v *ModelQualityJobDefinitionBatchTransformInputArgs) ModelQualityJobDefinitionBatchTransformInputPtrInput {
	return (*modelQualityJobDefinitionBatchTransformInputPtrType)(v)
}

func (*modelQualityJobDefinitionBatchTransformInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (i *modelQualityJobDefinitionBatchTransformInputPtrType) ToModelQualityJobDefinitionBatchTransformInputPtrOutput() ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return i.ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionBatchTransformInputPtrType) ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (i *modelQualityJobDefinitionBatchTransformInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelQualityJobDefinitionBatchTransformInput]{
		OutputState: i.ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The batch transform input for a monitoring job.
type ModelQualityJobDefinitionBatchTransformInputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ToModelQualityJobDefinitionBatchTransformInputOutput() ModelQualityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ToModelQualityJobDefinitionBatchTransformInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputOutput {
	return o
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ToModelQualityJobDefinitionBatchTransformInputPtrOutput() ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionBatchTransformInput {
		return &v
	}).(ModelQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[ModelQualityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelQualityJobDefinitionBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) string { return v.DataCapturedDestinationS3Uri }).(pulumi.StringOutput)
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) DatasetFormat() ModelQualityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) ModelQualityJobDefinitionDatasetFormat {
		return v.DatasetFormat
	}).(ModelQualityJobDefinitionDatasetFormatOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelQualityJobDefinitionBatchTransformInputOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *string { return v.EndTimeOffset }).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelQualityJobDefinitionBatchTransformInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelQualityJobDefinitionBatchTransformInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelQualityJobDefinitionBatchTransformInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionBatchTransformInputOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *float64 { return v.ProbabilityThresholdAttribute }).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelQualityJobDefinitionBatchTransformInputOutput) S3DataDistributionType() ModelQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionBatchTransformInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelQualityJobDefinitionBatchTransformInputOutput) S3InputMode() ModelQualityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionBatchTransformInputS3InputMode {
		return v.S3InputMode
	}).(ModelQualityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelQualityJobDefinitionBatchTransformInputOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionBatchTransformInput) *string { return v.StartTimeOffset }).(pulumi.StringPtrOutput)
}

type ModelQualityJobDefinitionBatchTransformInputPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionBatchTransformInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionBatchTransformInput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) ToModelQualityJobDefinitionBatchTransformInputPtrOutput() ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) ToModelQualityJobDefinitionBatchTransformInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionBatchTransformInput] {
	return pulumix.Output[*ModelQualityJobDefinitionBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) Elem() ModelQualityJobDefinitionBatchTransformInputOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) ModelQualityJobDefinitionBatchTransformInput {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionBatchTransformInput
		return ret
	}).(ModelQualityJobDefinitionBatchTransformInputOutput)
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) DataCapturedDestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.DataCapturedDestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) DatasetFormat() ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionDatasetFormat {
		if v == nil {
			return nil
		}
		return &v.DatasetFormat
	}).(ModelQualityJobDefinitionDatasetFormatPtrOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeOffset
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *float64 {
		if v == nil {
			return nil
		}
		return v.ProbabilityThresholdAttribute
	}).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) S3DataDistributionType() ModelQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionBatchTransformInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelQualityJobDefinitionBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) S3InputMode() ModelQualityJobDefinitionBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *ModelQualityJobDefinitionBatchTransformInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelQualityJobDefinitionBatchTransformInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelQualityJobDefinitionBatchTransformInputPtrOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeOffset
	}).(pulumi.StringPtrOutput)
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelQualityJobDefinitionClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// ModelQualityJobDefinitionClusterConfigInput is an input type that accepts ModelQualityJobDefinitionClusterConfigArgs and ModelQualityJobDefinitionClusterConfigOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionClusterConfigInput` via:
//
//	ModelQualityJobDefinitionClusterConfigArgs{...}
type ModelQualityJobDefinitionClusterConfigInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionClusterConfigOutput() ModelQualityJobDefinitionClusterConfigOutput
	ToModelQualityJobDefinitionClusterConfigOutputWithContext(context.Context) ModelQualityJobDefinitionClusterConfigOutput
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelQualityJobDefinitionClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (ModelQualityJobDefinitionClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionClusterConfig)(nil)).Elem()
}

func (i ModelQualityJobDefinitionClusterConfigArgs) ToModelQualityJobDefinitionClusterConfigOutput() ModelQualityJobDefinitionClusterConfigOutput {
	return i.ToModelQualityJobDefinitionClusterConfigOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionClusterConfigArgs) ToModelQualityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionClusterConfigOutput)
}

func (i ModelQualityJobDefinitionClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionClusterConfig] {
	return pulumix.Output[ModelQualityJobDefinitionClusterConfig]{
		OutputState: i.ToModelQualityJobDefinitionClusterConfigOutputWithContext(ctx).OutputState,
	}
}

// Configuration for the cluster used to run model monitoring jobs.
type ModelQualityJobDefinitionClusterConfigOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionClusterConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionClusterConfigOutput) ToModelQualityJobDefinitionClusterConfigOutput() ModelQualityJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionClusterConfigOutput) ToModelQualityJobDefinitionClusterConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionClusterConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionClusterConfig] {
	return pulumix.Output[ModelQualityJobDefinitionClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o ModelQualityJobDefinitionClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the processing job.
func (o ModelQualityJobDefinitionClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o ModelQualityJobDefinitionClusterConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionClusterConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o ModelQualityJobDefinitionClusterConfigOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionClusterConfig) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

// The baseline constraints resource for a monitoring job.
type ModelQualityJobDefinitionConstraintsResource struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// ModelQualityJobDefinitionConstraintsResourceInput is an input type that accepts ModelQualityJobDefinitionConstraintsResourceArgs and ModelQualityJobDefinitionConstraintsResourceOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionConstraintsResourceInput` via:
//
//	ModelQualityJobDefinitionConstraintsResourceArgs{...}
type ModelQualityJobDefinitionConstraintsResourceInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionConstraintsResourceOutput() ModelQualityJobDefinitionConstraintsResourceOutput
	ToModelQualityJobDefinitionConstraintsResourceOutputWithContext(context.Context) ModelQualityJobDefinitionConstraintsResourceOutput
}

// The baseline constraints resource for a monitoring job.
type ModelQualityJobDefinitionConstraintsResourceArgs struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (ModelQualityJobDefinitionConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i ModelQualityJobDefinitionConstraintsResourceArgs) ToModelQualityJobDefinitionConstraintsResourceOutput() ModelQualityJobDefinitionConstraintsResourceOutput {
	return i.ToModelQualityJobDefinitionConstraintsResourceOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionConstraintsResourceArgs) ToModelQualityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionConstraintsResourceOutput)
}

func (i ModelQualityJobDefinitionConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelQualityJobDefinitionConstraintsResource]{
		OutputState: i.ToModelQualityJobDefinitionConstraintsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionConstraintsResourceArgs) ToModelQualityJobDefinitionConstraintsResourcePtrOutput() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionConstraintsResourceArgs) ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionConstraintsResourceOutput).ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionConstraintsResourcePtrInput is an input type that accepts ModelQualityJobDefinitionConstraintsResourceArgs, ModelQualityJobDefinitionConstraintsResourcePtr and ModelQualityJobDefinitionConstraintsResourcePtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionConstraintsResourcePtrInput` via:
//
//	        ModelQualityJobDefinitionConstraintsResourceArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionConstraintsResourcePtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionConstraintsResourcePtrOutput() ModelQualityJobDefinitionConstraintsResourcePtrOutput
	ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Context) ModelQualityJobDefinitionConstraintsResourcePtrOutput
}

type modelQualityJobDefinitionConstraintsResourcePtrType ModelQualityJobDefinitionConstraintsResourceArgs

func ModelQualityJobDefinitionConstraintsResourcePtr(v *ModelQualityJobDefinitionConstraintsResourceArgs) ModelQualityJobDefinitionConstraintsResourcePtrInput {
	return (*modelQualityJobDefinitionConstraintsResourcePtrType)(v)
}

func (*modelQualityJobDefinitionConstraintsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (i *modelQualityJobDefinitionConstraintsResourcePtrType) ToModelQualityJobDefinitionConstraintsResourcePtrOutput() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return i.ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionConstraintsResourcePtrType) ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (i *modelQualityJobDefinitionConstraintsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelQualityJobDefinitionConstraintsResource]{
		OutputState: i.ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline constraints resource for a monitoring job.
type ModelQualityJobDefinitionConstraintsResourceOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelQualityJobDefinitionConstraintsResourceOutput) ToModelQualityJobDefinitionConstraintsResourceOutput() ModelQualityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelQualityJobDefinitionConstraintsResourceOutput) ToModelQualityJobDefinitionConstraintsResourceOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourceOutput {
	return o
}

func (o ModelQualityJobDefinitionConstraintsResourceOutput) ToModelQualityJobDefinitionConstraintsResourcePtrOutput() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionConstraintsResourceOutput) ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionConstraintsResource) *ModelQualityJobDefinitionConstraintsResource {
		return &v
	}).(ModelQualityJobDefinitionConstraintsResourcePtrOutput)
}

func (o ModelQualityJobDefinitionConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[ModelQualityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelQualityJobDefinitionConstraintsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionConstraintsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type ModelQualityJobDefinitionConstraintsResourcePtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionConstraintsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionConstraintsResource)(nil)).Elem()
}

func (o ModelQualityJobDefinitionConstraintsResourcePtrOutput) ToModelQualityJobDefinitionConstraintsResourcePtrOutput() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelQualityJobDefinitionConstraintsResourcePtrOutput) ToModelQualityJobDefinitionConstraintsResourcePtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o
}

func (o ModelQualityJobDefinitionConstraintsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionConstraintsResource] {
	return pulumix.Output[*ModelQualityJobDefinitionConstraintsResource]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionConstraintsResourcePtrOutput) Elem() ModelQualityJobDefinitionConstraintsResourceOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionConstraintsResource) ModelQualityJobDefinitionConstraintsResource {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionConstraintsResource
		return ret
	}).(ModelQualityJobDefinitionConstraintsResourceOutput)
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o ModelQualityJobDefinitionConstraintsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionConstraintsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// The CSV format
type ModelQualityJobDefinitionCsv struct {
	// A boolean flag indicating if given CSV has header
	Header *bool `pulumi:"header"`
}

// ModelQualityJobDefinitionCsvInput is an input type that accepts ModelQualityJobDefinitionCsvArgs and ModelQualityJobDefinitionCsvOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionCsvInput` via:
//
//	ModelQualityJobDefinitionCsvArgs{...}
type ModelQualityJobDefinitionCsvInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionCsvOutput() ModelQualityJobDefinitionCsvOutput
	ToModelQualityJobDefinitionCsvOutputWithContext(context.Context) ModelQualityJobDefinitionCsvOutput
}

// The CSV format
type ModelQualityJobDefinitionCsvArgs struct {
	// A boolean flag indicating if given CSV has header
	Header pulumi.BoolPtrInput `pulumi:"header"`
}

func (ModelQualityJobDefinitionCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionCsv)(nil)).Elem()
}

func (i ModelQualityJobDefinitionCsvArgs) ToModelQualityJobDefinitionCsvOutput() ModelQualityJobDefinitionCsvOutput {
	return i.ToModelQualityJobDefinitionCsvOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionCsvArgs) ToModelQualityJobDefinitionCsvOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionCsvOutput)
}

func (i ModelQualityJobDefinitionCsvArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionCsv] {
	return pulumix.Output[ModelQualityJobDefinitionCsv]{
		OutputState: i.ToModelQualityJobDefinitionCsvOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionCsvArgs) ToModelQualityJobDefinitionCsvPtrOutput() ModelQualityJobDefinitionCsvPtrOutput {
	return i.ToModelQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionCsvArgs) ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionCsvOutput).ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionCsvPtrInput is an input type that accepts ModelQualityJobDefinitionCsvArgs, ModelQualityJobDefinitionCsvPtr and ModelQualityJobDefinitionCsvPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionCsvPtrInput` via:
//
//	        ModelQualityJobDefinitionCsvArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionCsvPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionCsvPtrOutput() ModelQualityJobDefinitionCsvPtrOutput
	ToModelQualityJobDefinitionCsvPtrOutputWithContext(context.Context) ModelQualityJobDefinitionCsvPtrOutput
}

type modelQualityJobDefinitionCsvPtrType ModelQualityJobDefinitionCsvArgs

func ModelQualityJobDefinitionCsvPtr(v *ModelQualityJobDefinitionCsvArgs) ModelQualityJobDefinitionCsvPtrInput {
	return (*modelQualityJobDefinitionCsvPtrType)(v)
}

func (*modelQualityJobDefinitionCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionCsv)(nil)).Elem()
}

func (i *modelQualityJobDefinitionCsvPtrType) ToModelQualityJobDefinitionCsvPtrOutput() ModelQualityJobDefinitionCsvPtrOutput {
	return i.ToModelQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionCsvPtrType) ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionCsvPtrOutput)
}

func (i *modelQualityJobDefinitionCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionCsv] {
	return pulumix.Output[*ModelQualityJobDefinitionCsv]{
		OutputState: i.ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx).OutputState,
	}
}

// The CSV format
type ModelQualityJobDefinitionCsvOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionCsv)(nil)).Elem()
}

func (o ModelQualityJobDefinitionCsvOutput) ToModelQualityJobDefinitionCsvOutput() ModelQualityJobDefinitionCsvOutput {
	return o
}

func (o ModelQualityJobDefinitionCsvOutput) ToModelQualityJobDefinitionCsvOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvOutput {
	return o
}

func (o ModelQualityJobDefinitionCsvOutput) ToModelQualityJobDefinitionCsvPtrOutput() ModelQualityJobDefinitionCsvPtrOutput {
	return o.ToModelQualityJobDefinitionCsvPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionCsvOutput) ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionCsv) *ModelQualityJobDefinitionCsv {
		return &v
	}).(ModelQualityJobDefinitionCsvPtrOutput)
}

func (o ModelQualityJobDefinitionCsvOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionCsv] {
	return pulumix.Output[ModelQualityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if given CSV has header
func (o ModelQualityJobDefinitionCsvOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionCsv) *bool { return v.Header }).(pulumi.BoolPtrOutput)
}

type ModelQualityJobDefinitionCsvPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionCsv)(nil)).Elem()
}

func (o ModelQualityJobDefinitionCsvPtrOutput) ToModelQualityJobDefinitionCsvPtrOutput() ModelQualityJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionCsvPtrOutput) ToModelQualityJobDefinitionCsvPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionCsvPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionCsv] {
	return pulumix.Output[*ModelQualityJobDefinitionCsv]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionCsvPtrOutput) Elem() ModelQualityJobDefinitionCsvOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionCsv) ModelQualityJobDefinitionCsv {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionCsv
		return ret
	}).(ModelQualityJobDefinitionCsvOutput)
}

// A boolean flag indicating if given CSV has header
func (o ModelQualityJobDefinitionCsvPtrOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionCsv) *bool {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.BoolPtrOutput)
}

// The dataset format of the data to monitor
type ModelQualityJobDefinitionDatasetFormat struct {
	Csv     *ModelQualityJobDefinitionCsv  `pulumi:"csv"`
	Json    *ModelQualityJobDefinitionJson `pulumi:"json"`
	Parquet *bool                          `pulumi:"parquet"`
}

// ModelQualityJobDefinitionDatasetFormatInput is an input type that accepts ModelQualityJobDefinitionDatasetFormatArgs and ModelQualityJobDefinitionDatasetFormatOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionDatasetFormatInput` via:
//
//	ModelQualityJobDefinitionDatasetFormatArgs{...}
type ModelQualityJobDefinitionDatasetFormatInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionDatasetFormatOutput() ModelQualityJobDefinitionDatasetFormatOutput
	ToModelQualityJobDefinitionDatasetFormatOutputWithContext(context.Context) ModelQualityJobDefinitionDatasetFormatOutput
}

// The dataset format of the data to monitor
type ModelQualityJobDefinitionDatasetFormatArgs struct {
	Csv     ModelQualityJobDefinitionCsvPtrInput  `pulumi:"csv"`
	Json    ModelQualityJobDefinitionJsonPtrInput `pulumi:"json"`
	Parquet pulumi.BoolPtrInput                   `pulumi:"parquet"`
}

func (ModelQualityJobDefinitionDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i ModelQualityJobDefinitionDatasetFormatArgs) ToModelQualityJobDefinitionDatasetFormatOutput() ModelQualityJobDefinitionDatasetFormatOutput {
	return i.ToModelQualityJobDefinitionDatasetFormatOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionDatasetFormatArgs) ToModelQualityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionDatasetFormatOutput)
}

func (i ModelQualityJobDefinitionDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelQualityJobDefinitionDatasetFormat]{
		OutputState: i.ToModelQualityJobDefinitionDatasetFormatOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionDatasetFormatArgs) ToModelQualityJobDefinitionDatasetFormatPtrOutput() ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionDatasetFormatArgs) ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionDatasetFormatOutput).ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionDatasetFormatPtrInput is an input type that accepts ModelQualityJobDefinitionDatasetFormatArgs, ModelQualityJobDefinitionDatasetFormatPtr and ModelQualityJobDefinitionDatasetFormatPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionDatasetFormatPtrInput` via:
//
//	        ModelQualityJobDefinitionDatasetFormatArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionDatasetFormatPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionDatasetFormatPtrOutput() ModelQualityJobDefinitionDatasetFormatPtrOutput
	ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Context) ModelQualityJobDefinitionDatasetFormatPtrOutput
}

type modelQualityJobDefinitionDatasetFormatPtrType ModelQualityJobDefinitionDatasetFormatArgs

func ModelQualityJobDefinitionDatasetFormatPtr(v *ModelQualityJobDefinitionDatasetFormatArgs) ModelQualityJobDefinitionDatasetFormatPtrInput {
	return (*modelQualityJobDefinitionDatasetFormatPtrType)(v)
}

func (*modelQualityJobDefinitionDatasetFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (i *modelQualityJobDefinitionDatasetFormatPtrType) ToModelQualityJobDefinitionDatasetFormatPtrOutput() ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return i.ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionDatasetFormatPtrType) ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionDatasetFormatPtrOutput)
}

func (i *modelQualityJobDefinitionDatasetFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelQualityJobDefinitionDatasetFormat]{
		OutputState: i.ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The dataset format of the data to monitor
type ModelQualityJobDefinitionDatasetFormatOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) ToModelQualityJobDefinitionDatasetFormatOutput() ModelQualityJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) ToModelQualityJobDefinitionDatasetFormatOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatOutput {
	return o
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) ToModelQualityJobDefinitionDatasetFormatPtrOutput() ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionDatasetFormat) *ModelQualityJobDefinitionDatasetFormat {
		return &v
	}).(ModelQualityJobDefinitionDatasetFormatPtrOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[ModelQualityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) Csv() ModelQualityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionDatasetFormat) *ModelQualityJobDefinitionCsv { return v.Csv }).(ModelQualityJobDefinitionCsvPtrOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) Json() ModelQualityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionDatasetFormat) *ModelQualityJobDefinitionJson { return v.Json }).(ModelQualityJobDefinitionJsonPtrOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionDatasetFormat) *bool { return v.Parquet }).(pulumi.BoolPtrOutput)
}

type ModelQualityJobDefinitionDatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionDatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionDatasetFormat)(nil)).Elem()
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) ToModelQualityJobDefinitionDatasetFormatPtrOutput() ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) ToModelQualityJobDefinitionDatasetFormatPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionDatasetFormatPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionDatasetFormat] {
	return pulumix.Output[*ModelQualityJobDefinitionDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) Elem() ModelQualityJobDefinitionDatasetFormatOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionDatasetFormat) ModelQualityJobDefinitionDatasetFormat {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionDatasetFormat
		return ret
	}).(ModelQualityJobDefinitionDatasetFormatOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) Csv() ModelQualityJobDefinitionCsvPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionDatasetFormat) *ModelQualityJobDefinitionCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(ModelQualityJobDefinitionCsvPtrOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) Json() ModelQualityJobDefinitionJsonPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionDatasetFormat) *ModelQualityJobDefinitionJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(ModelQualityJobDefinitionJsonPtrOutput)
}

func (o ModelQualityJobDefinitionDatasetFormatPtrOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionDatasetFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Parquet
	}).(pulumi.BoolPtrOutput)
}

// The endpoint for a monitoring job.
type ModelQualityJobDefinitionEndpointInput struct {
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset *string `pulumi:"endTimeOffset"`
	EndpointName  string  `pulumi:"endpointName"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute *string `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          *string  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute *float64 `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *ModelQualityJobDefinitionEndpointInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *ModelQualityJobDefinitionEndpointInputS3InputMode `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset *string `pulumi:"startTimeOffset"`
}

// ModelQualityJobDefinitionEndpointInputInput is an input type that accepts ModelQualityJobDefinitionEndpointInputArgs and ModelQualityJobDefinitionEndpointInputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionEndpointInputInput` via:
//
//	ModelQualityJobDefinitionEndpointInputArgs{...}
type ModelQualityJobDefinitionEndpointInputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionEndpointInputOutput() ModelQualityJobDefinitionEndpointInputOutput
	ToModelQualityJobDefinitionEndpointInputOutputWithContext(context.Context) ModelQualityJobDefinitionEndpointInputOutput
}

// The endpoint for a monitoring job.
type ModelQualityJobDefinitionEndpointInputArgs struct {
	// Monitoring end time offset, e.g. PT0H
	EndTimeOffset pulumi.StringPtrInput `pulumi:"endTimeOffset"`
	EndpointName  pulumi.StringInput    `pulumi:"endpointName"`
	// Index or JSONpath to locate predicted label(s)
	InferenceAttribute pulumi.StringPtrInput `pulumi:"inferenceAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Index or JSONpath to locate probabilities
	ProbabilityAttribute          pulumi.StringPtrInput  `pulumi:"probabilityAttribute"`
	ProbabilityThresholdAttribute pulumi.Float64PtrInput `pulumi:"probabilityThresholdAttribute"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType ModelQualityJobDefinitionEndpointInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode ModelQualityJobDefinitionEndpointInputS3InputModePtrInput `pulumi:"s3InputMode"`
	// Monitoring start time offset, e.g. -PT1H
	StartTimeOffset pulumi.StringPtrInput `pulumi:"startTimeOffset"`
}

func (ModelQualityJobDefinitionEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i ModelQualityJobDefinitionEndpointInputArgs) ToModelQualityJobDefinitionEndpointInputOutput() ModelQualityJobDefinitionEndpointInputOutput {
	return i.ToModelQualityJobDefinitionEndpointInputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionEndpointInputArgs) ToModelQualityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionEndpointInputOutput)
}

func (i ModelQualityJobDefinitionEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionEndpointInput] {
	return pulumix.Output[ModelQualityJobDefinitionEndpointInput]{
		OutputState: i.ToModelQualityJobDefinitionEndpointInputOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionEndpointInputArgs) ToModelQualityJobDefinitionEndpointInputPtrOutput() ModelQualityJobDefinitionEndpointInputPtrOutput {
	return i.ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionEndpointInputArgs) ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionEndpointInputOutput).ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionEndpointInputPtrInput is an input type that accepts ModelQualityJobDefinitionEndpointInputArgs, ModelQualityJobDefinitionEndpointInputPtr and ModelQualityJobDefinitionEndpointInputPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionEndpointInputPtrInput` via:
//
//	        ModelQualityJobDefinitionEndpointInputArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionEndpointInputPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionEndpointInputPtrOutput() ModelQualityJobDefinitionEndpointInputPtrOutput
	ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Context) ModelQualityJobDefinitionEndpointInputPtrOutput
}

type modelQualityJobDefinitionEndpointInputPtrType ModelQualityJobDefinitionEndpointInputArgs

func ModelQualityJobDefinitionEndpointInputPtr(v *ModelQualityJobDefinitionEndpointInputArgs) ModelQualityJobDefinitionEndpointInputPtrInput {
	return (*modelQualityJobDefinitionEndpointInputPtrType)(v)
}

func (*modelQualityJobDefinitionEndpointInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (i *modelQualityJobDefinitionEndpointInputPtrType) ToModelQualityJobDefinitionEndpointInputPtrOutput() ModelQualityJobDefinitionEndpointInputPtrOutput {
	return i.ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionEndpointInputPtrType) ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionEndpointInputPtrOutput)
}

func (i *modelQualityJobDefinitionEndpointInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelQualityJobDefinitionEndpointInput]{
		OutputState: i.ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The endpoint for a monitoring job.
type ModelQualityJobDefinitionEndpointInputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ToModelQualityJobDefinitionEndpointInputOutput() ModelQualityJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ToModelQualityJobDefinitionEndpointInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputOutput {
	return o
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ToModelQualityJobDefinitionEndpointInputPtrOutput() ModelQualityJobDefinitionEndpointInputPtrOutput {
	return o.ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionEndpointInput) *ModelQualityJobDefinitionEndpointInput {
		return &v
	}).(ModelQualityJobDefinitionEndpointInputPtrOutput)
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionEndpointInput] {
	return pulumix.Output[ModelQualityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

// Monitoring end time offset, e.g. PT0H
func (o ModelQualityJobDefinitionEndpointInputOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *string { return v.EndTimeOffset }).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionEndpointInputOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelQualityJobDefinitionEndpointInputOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *string { return v.InferenceAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelQualityJobDefinitionEndpointInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelQualityJobDefinitionEndpointInputOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *string { return v.ProbabilityAttribute }).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionEndpointInputOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *float64 { return v.ProbabilityThresholdAttribute }).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelQualityJobDefinitionEndpointInputOutput) S3DataDistributionType() ModelQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *ModelQualityJobDefinitionEndpointInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(ModelQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelQualityJobDefinitionEndpointInputOutput) S3InputMode() ModelQualityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *ModelQualityJobDefinitionEndpointInputS3InputMode {
		return v.S3InputMode
	}).(ModelQualityJobDefinitionEndpointInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelQualityJobDefinitionEndpointInputOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionEndpointInput) *string { return v.StartTimeOffset }).(pulumi.StringPtrOutput)
}

type ModelQualityJobDefinitionEndpointInputPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionEndpointInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionEndpointInput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) ToModelQualityJobDefinitionEndpointInputPtrOutput() ModelQualityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) ToModelQualityJobDefinitionEndpointInputPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionEndpointInputPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionEndpointInput] {
	return pulumix.Output[*ModelQualityJobDefinitionEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) Elem() ModelQualityJobDefinitionEndpointInputOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) ModelQualityJobDefinitionEndpointInput {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionEndpointInput
		return ret
	}).(ModelQualityJobDefinitionEndpointInputOutput)
}

// Monitoring end time offset, e.g. PT0H
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) EndTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.EndTimeOffset
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate predicted label(s)
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) InferenceAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.InferenceAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Index or JSONpath to locate probabilities
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) ProbabilityAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.ProbabilityAttribute
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionEndpointInputPtrOutput) ProbabilityThresholdAttribute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *float64 {
		if v == nil {
			return nil
		}
		return v.ProbabilityThresholdAttribute
	}).(pulumi.Float64PtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) S3DataDistributionType() ModelQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *ModelQualityJobDefinitionEndpointInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(ModelQualityJobDefinitionEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) S3InputMode() ModelQualityJobDefinitionEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *ModelQualityJobDefinitionEndpointInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(ModelQualityJobDefinitionEndpointInputS3InputModePtrOutput)
}

// Monitoring start time offset, e.g. -PT1H
func (o ModelQualityJobDefinitionEndpointInputPtrOutput) StartTimeOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.StartTimeOffset
	}).(pulumi.StringPtrOutput)
}

// The Json format
type ModelQualityJobDefinitionJson struct {
	// A boolean flag indicating if it is JSON line format
	Line *bool `pulumi:"line"`
}

// ModelQualityJobDefinitionJsonInput is an input type that accepts ModelQualityJobDefinitionJsonArgs and ModelQualityJobDefinitionJsonOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionJsonInput` via:
//
//	ModelQualityJobDefinitionJsonArgs{...}
type ModelQualityJobDefinitionJsonInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionJsonOutput() ModelQualityJobDefinitionJsonOutput
	ToModelQualityJobDefinitionJsonOutputWithContext(context.Context) ModelQualityJobDefinitionJsonOutput
}

// The Json format
type ModelQualityJobDefinitionJsonArgs struct {
	// A boolean flag indicating if it is JSON line format
	Line pulumi.BoolPtrInput `pulumi:"line"`
}

func (ModelQualityJobDefinitionJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionJson)(nil)).Elem()
}

func (i ModelQualityJobDefinitionJsonArgs) ToModelQualityJobDefinitionJsonOutput() ModelQualityJobDefinitionJsonOutput {
	return i.ToModelQualityJobDefinitionJsonOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionJsonArgs) ToModelQualityJobDefinitionJsonOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionJsonOutput)
}

func (i ModelQualityJobDefinitionJsonArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionJson] {
	return pulumix.Output[ModelQualityJobDefinitionJson]{
		OutputState: i.ToModelQualityJobDefinitionJsonOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionJsonArgs) ToModelQualityJobDefinitionJsonPtrOutput() ModelQualityJobDefinitionJsonPtrOutput {
	return i.ToModelQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionJsonArgs) ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionJsonOutput).ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionJsonPtrInput is an input type that accepts ModelQualityJobDefinitionJsonArgs, ModelQualityJobDefinitionJsonPtr and ModelQualityJobDefinitionJsonPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionJsonPtrInput` via:
//
//	        ModelQualityJobDefinitionJsonArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionJsonPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionJsonPtrOutput() ModelQualityJobDefinitionJsonPtrOutput
	ToModelQualityJobDefinitionJsonPtrOutputWithContext(context.Context) ModelQualityJobDefinitionJsonPtrOutput
}

type modelQualityJobDefinitionJsonPtrType ModelQualityJobDefinitionJsonArgs

func ModelQualityJobDefinitionJsonPtr(v *ModelQualityJobDefinitionJsonArgs) ModelQualityJobDefinitionJsonPtrInput {
	return (*modelQualityJobDefinitionJsonPtrType)(v)
}

func (*modelQualityJobDefinitionJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionJson)(nil)).Elem()
}

func (i *modelQualityJobDefinitionJsonPtrType) ToModelQualityJobDefinitionJsonPtrOutput() ModelQualityJobDefinitionJsonPtrOutput {
	return i.ToModelQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionJsonPtrType) ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionJsonPtrOutput)
}

func (i *modelQualityJobDefinitionJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionJson] {
	return pulumix.Output[*ModelQualityJobDefinitionJson]{
		OutputState: i.ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx).OutputState,
	}
}

// The Json format
type ModelQualityJobDefinitionJsonOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionJson)(nil)).Elem()
}

func (o ModelQualityJobDefinitionJsonOutput) ToModelQualityJobDefinitionJsonOutput() ModelQualityJobDefinitionJsonOutput {
	return o
}

func (o ModelQualityJobDefinitionJsonOutput) ToModelQualityJobDefinitionJsonOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonOutput {
	return o
}

func (o ModelQualityJobDefinitionJsonOutput) ToModelQualityJobDefinitionJsonPtrOutput() ModelQualityJobDefinitionJsonPtrOutput {
	return o.ToModelQualityJobDefinitionJsonPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionJsonOutput) ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionJson) *ModelQualityJobDefinitionJson {
		return &v
	}).(ModelQualityJobDefinitionJsonPtrOutput)
}

func (o ModelQualityJobDefinitionJsonOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionJson] {
	return pulumix.Output[ModelQualityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if it is JSON line format
func (o ModelQualityJobDefinitionJsonOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionJson) *bool { return v.Line }).(pulumi.BoolPtrOutput)
}

type ModelQualityJobDefinitionJsonPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionJson)(nil)).Elem()
}

func (o ModelQualityJobDefinitionJsonPtrOutput) ToModelQualityJobDefinitionJsonPtrOutput() ModelQualityJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionJsonPtrOutput) ToModelQualityJobDefinitionJsonPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionJsonPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionJson] {
	return pulumix.Output[*ModelQualityJobDefinitionJson]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionJsonPtrOutput) Elem() ModelQualityJobDefinitionJsonOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionJson) ModelQualityJobDefinitionJson {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionJson
		return ret
	}).(ModelQualityJobDefinitionJsonOutput)
}

// A boolean flag indicating if it is JSON line format
func (o ModelQualityJobDefinitionJsonPtrOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionJson) *bool {
		if v == nil {
			return nil
		}
		return v.Line
	}).(pulumi.BoolPtrOutput)
}

// Container image configuration object for the monitoring job.
type ModelQualityJobDefinitionModelQualityAppSpecification struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments []string `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint []string `pulumi:"containerEntrypoint"`
	// Sets the environment variables in the Docker container
	Environment interface{} `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri string `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri *string                              `pulumi:"postAnalyticsProcessorSourceUri"`
	ProblemType                     ModelQualityJobDefinitionProblemType `pulumi:"problemType"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri *string `pulumi:"recordPreprocessorSourceUri"`
}

// ModelQualityJobDefinitionModelQualityAppSpecificationInput is an input type that accepts ModelQualityJobDefinitionModelQualityAppSpecificationArgs and ModelQualityJobDefinitionModelQualityAppSpecificationOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionModelQualityAppSpecificationInput` via:
//
//	ModelQualityJobDefinitionModelQualityAppSpecificationArgs{...}
type ModelQualityJobDefinitionModelQualityAppSpecificationInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionModelQualityAppSpecificationOutput() ModelQualityJobDefinitionModelQualityAppSpecificationOutput
	ToModelQualityJobDefinitionModelQualityAppSpecificationOutputWithContext(context.Context) ModelQualityJobDefinitionModelQualityAppSpecificationOutput
}

// Container image configuration object for the monitoring job.
type ModelQualityJobDefinitionModelQualityAppSpecificationArgs struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments pulumi.StringArrayInput `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint pulumi.StringArrayInput `pulumi:"containerEntrypoint"`
	// Sets the environment variables in the Docker container
	Environment pulumi.Input `pulumi:"environment"`
	// The container image to be run by the monitoring job.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri pulumi.StringPtrInput                     `pulumi:"postAnalyticsProcessorSourceUri"`
	ProblemType                     ModelQualityJobDefinitionProblemTypeInput `pulumi:"problemType"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri pulumi.StringPtrInput `pulumi:"recordPreprocessorSourceUri"`
}

func (ModelQualityJobDefinitionModelQualityAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityAppSpecification)(nil)).Elem()
}

func (i ModelQualityJobDefinitionModelQualityAppSpecificationArgs) ToModelQualityJobDefinitionModelQualityAppSpecificationOutput() ModelQualityJobDefinitionModelQualityAppSpecificationOutput {
	return i.ToModelQualityJobDefinitionModelQualityAppSpecificationOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionModelQualityAppSpecificationArgs) ToModelQualityJobDefinitionModelQualityAppSpecificationOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionModelQualityAppSpecificationOutput)
}

func (i ModelQualityJobDefinitionModelQualityAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityAppSpecification] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityAppSpecification]{
		OutputState: i.ToModelQualityJobDefinitionModelQualityAppSpecificationOutputWithContext(ctx).OutputState,
	}
}

// Container image configuration object for the monitoring job.
type ModelQualityJobDefinitionModelQualityAppSpecificationOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityAppSpecification)(nil)).Elem()
}

func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ToModelQualityJobDefinitionModelQualityAppSpecificationOutput() ModelQualityJobDefinitionModelQualityAppSpecificationOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ToModelQualityJobDefinitionModelQualityAppSpecificationOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityAppSpecificationOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityAppSpecification] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityAppSpecification]{
		OutputState: o.OutputState,
	}
}

// An array of arguments for the container used to run the monitoring job.
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ContainerArguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) []string { return v.ContainerArguments }).(pulumi.StringArrayOutput)
}

// Specifies the entrypoint for a container used to run the monitoring job.
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ContainerEntrypoint() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) []string { return v.ContainerEntrypoint }).(pulumi.StringArrayOutput)
}

// Sets the environment variables in the Docker container
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) interface{} { return v.Environment }).(pulumi.AnyOutput)
}

// The container image to be run by the monitoring job.
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) string { return v.ImageUri }).(pulumi.StringOutput)
}

// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) PostAnalyticsProcessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) *string {
		return v.PostAnalyticsProcessorSourceUri
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) ProblemType() ModelQualityJobDefinitionProblemTypeOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) ModelQualityJobDefinitionProblemType {
		return v.ProblemType
	}).(ModelQualityJobDefinitionProblemTypeOutput)
}

// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
func (o ModelQualityJobDefinitionModelQualityAppSpecificationOutput) RecordPreprocessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityAppSpecification) *string {
		return v.RecordPreprocessorSourceUri
	}).(pulumi.StringPtrOutput)
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelQualityJobDefinitionModelQualityBaselineConfig struct {
	BaseliningJobName   *string                                       `pulumi:"baseliningJobName"`
	ConstraintsResource *ModelQualityJobDefinitionConstraintsResource `pulumi:"constraintsResource"`
}

// ModelQualityJobDefinitionModelQualityBaselineConfigInput is an input type that accepts ModelQualityJobDefinitionModelQualityBaselineConfigArgs and ModelQualityJobDefinitionModelQualityBaselineConfigOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionModelQualityBaselineConfigInput` via:
//
//	ModelQualityJobDefinitionModelQualityBaselineConfigArgs{...}
type ModelQualityJobDefinitionModelQualityBaselineConfigInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionModelQualityBaselineConfigOutput() ModelQualityJobDefinitionModelQualityBaselineConfigOutput
	ToModelQualityJobDefinitionModelQualityBaselineConfigOutputWithContext(context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigOutput
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelQualityJobDefinitionModelQualityBaselineConfigArgs struct {
	BaseliningJobName   pulumi.StringPtrInput                                `pulumi:"baseliningJobName"`
	ConstraintsResource ModelQualityJobDefinitionConstraintsResourcePtrInput `pulumi:"constraintsResource"`
}

func (ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityBaselineConfig)(nil)).Elem()
}

func (i ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ToModelQualityJobDefinitionModelQualityBaselineConfigOutput() ModelQualityJobDefinitionModelQualityBaselineConfigOutput {
	return i.ToModelQualityJobDefinitionModelQualityBaselineConfigOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ToModelQualityJobDefinitionModelQualityBaselineConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionModelQualityBaselineConfigOutput)
}

func (i ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityBaselineConfig] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityBaselineConfig]{
		OutputState: i.ToModelQualityJobDefinitionModelQualityBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput() ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return i.ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionModelQualityBaselineConfigOutput).ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionModelQualityBaselineConfigPtrInput is an input type that accepts ModelQualityJobDefinitionModelQualityBaselineConfigArgs, ModelQualityJobDefinitionModelQualityBaselineConfigPtr and ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionModelQualityBaselineConfigPtrInput` via:
//
//	        ModelQualityJobDefinitionModelQualityBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionModelQualityBaselineConfigPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput() ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput
	ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput
}

type modelQualityJobDefinitionModelQualityBaselineConfigPtrType ModelQualityJobDefinitionModelQualityBaselineConfigArgs

func ModelQualityJobDefinitionModelQualityBaselineConfigPtr(v *ModelQualityJobDefinitionModelQualityBaselineConfigArgs) ModelQualityJobDefinitionModelQualityBaselineConfigPtrInput {
	return (*modelQualityJobDefinitionModelQualityBaselineConfigPtrType)(v)
}

func (*modelQualityJobDefinitionModelQualityBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionModelQualityBaselineConfig)(nil)).Elem()
}

func (i *modelQualityJobDefinitionModelQualityBaselineConfigPtrType) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput() ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return i.ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionModelQualityBaselineConfigPtrType) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput)
}

func (i *modelQualityJobDefinitionModelQualityBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionModelQualityBaselineConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionModelQualityBaselineConfig]{
		OutputState: i.ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type ModelQualityJobDefinitionModelQualityBaselineConfigOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityBaselineConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigOutput() ModelQualityJobDefinitionModelQualityBaselineConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput() ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return o.ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionModelQualityBaselineConfig) *ModelQualityJobDefinitionModelQualityBaselineConfig {
		return &v
	}).(ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityBaselineConfig] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityBaselineConfig) *string { return v.BaseliningJobName }).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigOutput) ConstraintsResource() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityBaselineConfig) *ModelQualityJobDefinitionConstraintsResource {
		return v.ConstraintsResource
	}).(ModelQualityJobDefinitionConstraintsResourcePtrOutput)
}

type ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionModelQualityBaselineConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput() ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) ToModelQualityJobDefinitionModelQualityBaselineConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionModelQualityBaselineConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionModelQualityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) Elem() ModelQualityJobDefinitionModelQualityBaselineConfigOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionModelQualityBaselineConfig) ModelQualityJobDefinitionModelQualityBaselineConfig {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionModelQualityBaselineConfig
		return ret
	}).(ModelQualityJobDefinitionModelQualityBaselineConfigOutput)
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) BaseliningJobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionModelQualityBaselineConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaseliningJobName
	}).(pulumi.StringPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput) ConstraintsResource() ModelQualityJobDefinitionConstraintsResourcePtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionModelQualityBaselineConfig) *ModelQualityJobDefinitionConstraintsResource {
		if v == nil {
			return nil
		}
		return v.ConstraintsResource
	}).(ModelQualityJobDefinitionConstraintsResourcePtrOutput)
}

// The inputs for a monitoring job.
type ModelQualityJobDefinitionModelQualityJobInput struct {
	BatchTransformInput *ModelQualityJobDefinitionBatchTransformInput         `pulumi:"batchTransformInput"`
	EndpointInput       *ModelQualityJobDefinitionEndpointInput               `pulumi:"endpointInput"`
	GroundTruthS3Input  ModelQualityJobDefinitionMonitoringGroundTruthS3Input `pulumi:"groundTruthS3Input"`
}

// ModelQualityJobDefinitionModelQualityJobInputInput is an input type that accepts ModelQualityJobDefinitionModelQualityJobInputArgs and ModelQualityJobDefinitionModelQualityJobInputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionModelQualityJobInputInput` via:
//
//	ModelQualityJobDefinitionModelQualityJobInputArgs{...}
type ModelQualityJobDefinitionModelQualityJobInputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionModelQualityJobInputOutput() ModelQualityJobDefinitionModelQualityJobInputOutput
	ToModelQualityJobDefinitionModelQualityJobInputOutputWithContext(context.Context) ModelQualityJobDefinitionModelQualityJobInputOutput
}

// The inputs for a monitoring job.
type ModelQualityJobDefinitionModelQualityJobInputArgs struct {
	BatchTransformInput ModelQualityJobDefinitionBatchTransformInputPtrInput       `pulumi:"batchTransformInput"`
	EndpointInput       ModelQualityJobDefinitionEndpointInputPtrInput             `pulumi:"endpointInput"`
	GroundTruthS3Input  ModelQualityJobDefinitionMonitoringGroundTruthS3InputInput `pulumi:"groundTruthS3Input"`
}

func (ModelQualityJobDefinitionModelQualityJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityJobInput)(nil)).Elem()
}

func (i ModelQualityJobDefinitionModelQualityJobInputArgs) ToModelQualityJobDefinitionModelQualityJobInputOutput() ModelQualityJobDefinitionModelQualityJobInputOutput {
	return i.ToModelQualityJobDefinitionModelQualityJobInputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionModelQualityJobInputArgs) ToModelQualityJobDefinitionModelQualityJobInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionModelQualityJobInputOutput)
}

func (i ModelQualityJobDefinitionModelQualityJobInputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityJobInput] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityJobInput]{
		OutputState: i.ToModelQualityJobDefinitionModelQualityJobInputOutputWithContext(ctx).OutputState,
	}
}

// The inputs for a monitoring job.
type ModelQualityJobDefinitionModelQualityJobInputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionModelQualityJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionModelQualityJobInput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) ToModelQualityJobDefinitionModelQualityJobInputOutput() ModelQualityJobDefinitionModelQualityJobInputOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) ToModelQualityJobDefinitionModelQualityJobInputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionModelQualityJobInputOutput {
	return o
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionModelQualityJobInput] {
	return pulumix.Output[ModelQualityJobDefinitionModelQualityJobInput]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) BatchTransformInput() ModelQualityJobDefinitionBatchTransformInputPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityJobInput) *ModelQualityJobDefinitionBatchTransformInput {
		return v.BatchTransformInput
	}).(ModelQualityJobDefinitionBatchTransformInputPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) EndpointInput() ModelQualityJobDefinitionEndpointInputPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityJobInput) *ModelQualityJobDefinitionEndpointInput {
		return v.EndpointInput
	}).(ModelQualityJobDefinitionEndpointInputPtrOutput)
}

func (o ModelQualityJobDefinitionModelQualityJobInputOutput) GroundTruthS3Input() ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionModelQualityJobInput) ModelQualityJobDefinitionMonitoringGroundTruthS3Input {
		return v.GroundTruthS3Input
	}).(ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput)
}

// Ground truth input provided in S3
type ModelQualityJobDefinitionMonitoringGroundTruthS3Input struct {
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelQualityJobDefinitionMonitoringGroundTruthS3InputInput is an input type that accepts ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs and ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionMonitoringGroundTruthS3InputInput` via:
//
//	ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs{...}
type ModelQualityJobDefinitionMonitoringGroundTruthS3InputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput() ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput
	ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(context.Context) ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput
}

// Ground truth input provided in S3
type ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringGroundTruthS3Input)(nil)).Elem()
}

func (i ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs) ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput() ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput {
	return i.ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs) ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput)
}

func (i ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringGroundTruthS3Input] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringGroundTruthS3Input]{
		OutputState: i.ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx).OutputState,
	}
}

// Ground truth input provided in S3
type ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringGroundTruthS3Input)(nil)).Elem()
}

func (o ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput) ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput() ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput) ToModelQualityJobDefinitionMonitoringGroundTruthS3InputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringGroundTruthS3Input] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringGroundTruthS3Input]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionMonitoringGroundTruthS3Input) string { return v.S3Uri }).(pulumi.StringOutput)
}

// The output object for a monitoring job.
type ModelQualityJobDefinitionMonitoringOutput struct {
	S3Output ModelQualityJobDefinitionS3Output `pulumi:"s3Output"`
}

// ModelQualityJobDefinitionMonitoringOutputInput is an input type that accepts ModelQualityJobDefinitionMonitoringOutputArgs and ModelQualityJobDefinitionMonitoringOutputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionMonitoringOutputInput` via:
//
//	ModelQualityJobDefinitionMonitoringOutputArgs{...}
type ModelQualityJobDefinitionMonitoringOutputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionMonitoringOutputOutput() ModelQualityJobDefinitionMonitoringOutputOutput
	ToModelQualityJobDefinitionMonitoringOutputOutputWithContext(context.Context) ModelQualityJobDefinitionMonitoringOutputOutput
}

// The output object for a monitoring job.
type ModelQualityJobDefinitionMonitoringOutputArgs struct {
	S3Output ModelQualityJobDefinitionS3OutputInput `pulumi:"s3Output"`
}

func (ModelQualityJobDefinitionMonitoringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelQualityJobDefinitionMonitoringOutputArgs) ToModelQualityJobDefinitionMonitoringOutputOutput() ModelQualityJobDefinitionMonitoringOutputOutput {
	return i.ToModelQualityJobDefinitionMonitoringOutputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionMonitoringOutputArgs) ToModelQualityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionMonitoringOutputOutput)
}

func (i ModelQualityJobDefinitionMonitoringOutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelQualityJobDefinitionMonitoringOutputOutputWithContext(ctx).OutputState,
	}
}

// ModelQualityJobDefinitionMonitoringOutputArrayInput is an input type that accepts ModelQualityJobDefinitionMonitoringOutputArray and ModelQualityJobDefinitionMonitoringOutputArrayOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionMonitoringOutputArrayInput` via:
//
//	ModelQualityJobDefinitionMonitoringOutputArray{ ModelQualityJobDefinitionMonitoringOutputArgs{...} }
type ModelQualityJobDefinitionMonitoringOutputArrayInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionMonitoringOutputArrayOutput() ModelQualityJobDefinitionMonitoringOutputArrayOutput
	ToModelQualityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Context) ModelQualityJobDefinitionMonitoringOutputArrayOutput
}

type ModelQualityJobDefinitionMonitoringOutputArray []ModelQualityJobDefinitionMonitoringOutputInput

func (ModelQualityJobDefinitionMonitoringOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (i ModelQualityJobDefinitionMonitoringOutputArray) ToModelQualityJobDefinitionMonitoringOutputArrayOutput() ModelQualityJobDefinitionMonitoringOutputArrayOutput {
	return i.ToModelQualityJobDefinitionMonitoringOutputArrayOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionMonitoringOutputArray) ToModelQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionMonitoringOutputArrayOutput)
}

func (i ModelQualityJobDefinitionMonitoringOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelQualityJobDefinitionMonitoringOutput]{
		OutputState: i.ToModelQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx).OutputState,
	}
}

// The output object for a monitoring job.
type ModelQualityJobDefinitionMonitoringOutputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionMonitoringOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionMonitoringOutputOutput) ToModelQualityJobDefinitionMonitoringOutputOutput() ModelQualityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputOutput) ToModelQualityJobDefinitionMonitoringOutputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionMonitoringOutputOutput) S3Output() ModelQualityJobDefinitionS3OutputOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionMonitoringOutput) ModelQualityJobDefinitionS3Output { return v.S3Output }).(ModelQualityJobDefinitionS3OutputOutput)
}

type ModelQualityJobDefinitionMonitoringOutputArrayOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionMonitoringOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelQualityJobDefinitionMonitoringOutput)(nil)).Elem()
}

func (o ModelQualityJobDefinitionMonitoringOutputArrayOutput) ToModelQualityJobDefinitionMonitoringOutputArrayOutput() ModelQualityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputArrayOutput) ToModelQualityJobDefinitionMonitoringOutputArrayOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputArrayOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelQualityJobDefinitionMonitoringOutput] {
	return pulumix.Output[[]ModelQualityJobDefinitionMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionMonitoringOutputArrayOutput) Index(i pulumi.IntInput) ModelQualityJobDefinitionMonitoringOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelQualityJobDefinitionMonitoringOutput {
		return vs[0].([]ModelQualityJobDefinitionMonitoringOutput)[vs[1].(int)]
	}).(ModelQualityJobDefinitionMonitoringOutputOutput)
}

// The output configuration for monitoring jobs.
type ModelQualityJobDefinitionMonitoringOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs []ModelQualityJobDefinitionMonitoringOutput `pulumi:"monitoringOutputs"`
}

// ModelQualityJobDefinitionMonitoringOutputConfigInput is an input type that accepts ModelQualityJobDefinitionMonitoringOutputConfigArgs and ModelQualityJobDefinitionMonitoringOutputConfigOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionMonitoringOutputConfigInput` via:
//
//	ModelQualityJobDefinitionMonitoringOutputConfigArgs{...}
type ModelQualityJobDefinitionMonitoringOutputConfigInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionMonitoringOutputConfigOutput() ModelQualityJobDefinitionMonitoringOutputConfigOutput
	ToModelQualityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Context) ModelQualityJobDefinitionMonitoringOutputConfigOutput
}

// The output configuration for monitoring jobs.
type ModelQualityJobDefinitionMonitoringOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs ModelQualityJobDefinitionMonitoringOutputArrayInput `pulumi:"monitoringOutputs"`
}

func (ModelQualityJobDefinitionMonitoringOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (i ModelQualityJobDefinitionMonitoringOutputConfigArgs) ToModelQualityJobDefinitionMonitoringOutputConfigOutput() ModelQualityJobDefinitionMonitoringOutputConfigOutput {
	return i.ToModelQualityJobDefinitionMonitoringOutputConfigOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionMonitoringOutputConfigArgs) ToModelQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionMonitoringOutputConfigOutput)
}

func (i ModelQualityJobDefinitionMonitoringOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringOutputConfig]{
		OutputState: i.ToModelQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx).OutputState,
	}
}

// The output configuration for monitoring jobs.
type ModelQualityJobDefinitionMonitoringOutputConfigOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionMonitoringOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutputConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionMonitoringOutputConfigOutput) ToModelQualityJobDefinitionMonitoringOutputConfigOutput() ModelQualityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputConfigOutput) ToModelQualityJobDefinitionMonitoringOutputConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringOutputConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringOutputConfig] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o ModelQualityJobDefinitionMonitoringOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionMonitoringOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o ModelQualityJobDefinitionMonitoringOutputConfigOutput) MonitoringOutputs() ModelQualityJobDefinitionMonitoringOutputArrayOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionMonitoringOutputConfig) []ModelQualityJobDefinitionMonitoringOutput {
		return v.MonitoringOutputs
	}).(ModelQualityJobDefinitionMonitoringOutputArrayOutput)
}

// Identifies the resources to deploy for a monitoring job.
type ModelQualityJobDefinitionMonitoringResources struct {
	ClusterConfig ModelQualityJobDefinitionClusterConfig `pulumi:"clusterConfig"`
}

// ModelQualityJobDefinitionMonitoringResourcesInput is an input type that accepts ModelQualityJobDefinitionMonitoringResourcesArgs and ModelQualityJobDefinitionMonitoringResourcesOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionMonitoringResourcesInput` via:
//
//	ModelQualityJobDefinitionMonitoringResourcesArgs{...}
type ModelQualityJobDefinitionMonitoringResourcesInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionMonitoringResourcesOutput() ModelQualityJobDefinitionMonitoringResourcesOutput
	ToModelQualityJobDefinitionMonitoringResourcesOutputWithContext(context.Context) ModelQualityJobDefinitionMonitoringResourcesOutput
}

// Identifies the resources to deploy for a monitoring job.
type ModelQualityJobDefinitionMonitoringResourcesArgs struct {
	ClusterConfig ModelQualityJobDefinitionClusterConfigInput `pulumi:"clusterConfig"`
}

func (ModelQualityJobDefinitionMonitoringResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (i ModelQualityJobDefinitionMonitoringResourcesArgs) ToModelQualityJobDefinitionMonitoringResourcesOutput() ModelQualityJobDefinitionMonitoringResourcesOutput {
	return i.ToModelQualityJobDefinitionMonitoringResourcesOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionMonitoringResourcesArgs) ToModelQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionMonitoringResourcesOutput)
}

func (i ModelQualityJobDefinitionMonitoringResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringResources]{
		OutputState: i.ToModelQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx).OutputState,
	}
}

// Identifies the resources to deploy for a monitoring job.
type ModelQualityJobDefinitionMonitoringResourcesOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionMonitoringResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionMonitoringResources)(nil)).Elem()
}

func (o ModelQualityJobDefinitionMonitoringResourcesOutput) ToModelQualityJobDefinitionMonitoringResourcesOutput() ModelQualityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringResourcesOutput) ToModelQualityJobDefinitionMonitoringResourcesOutputWithContext(ctx context.Context) ModelQualityJobDefinitionMonitoringResourcesOutput {
	return o
}

func (o ModelQualityJobDefinitionMonitoringResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionMonitoringResources] {
	return pulumix.Output[ModelQualityJobDefinitionMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionMonitoringResourcesOutput) ClusterConfig() ModelQualityJobDefinitionClusterConfigOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionMonitoringResources) ModelQualityJobDefinitionClusterConfig {
		return v.ClusterConfig
	}).(ModelQualityJobDefinitionClusterConfigOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelQualityJobDefinitionNetworkConfig struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation *bool                               `pulumi:"enableNetworkIsolation"`
	VpcConfig              *ModelQualityJobDefinitionVpcConfig `pulumi:"vpcConfig"`
}

// ModelQualityJobDefinitionNetworkConfigInput is an input type that accepts ModelQualityJobDefinitionNetworkConfigArgs and ModelQualityJobDefinitionNetworkConfigOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionNetworkConfigInput` via:
//
//	ModelQualityJobDefinitionNetworkConfigArgs{...}
type ModelQualityJobDefinitionNetworkConfigInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionNetworkConfigOutput() ModelQualityJobDefinitionNetworkConfigOutput
	ToModelQualityJobDefinitionNetworkConfigOutputWithContext(context.Context) ModelQualityJobDefinitionNetworkConfigOutput
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelQualityJobDefinitionNetworkConfigArgs struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumi.BoolPtrInput `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation pulumi.BoolPtrInput                        `pulumi:"enableNetworkIsolation"`
	VpcConfig              ModelQualityJobDefinitionVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (ModelQualityJobDefinitionNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i ModelQualityJobDefinitionNetworkConfigArgs) ToModelQualityJobDefinitionNetworkConfigOutput() ModelQualityJobDefinitionNetworkConfigOutput {
	return i.ToModelQualityJobDefinitionNetworkConfigOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionNetworkConfigArgs) ToModelQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionNetworkConfigOutput)
}

func (i ModelQualityJobDefinitionNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelQualityJobDefinitionNetworkConfig]{
		OutputState: i.ToModelQualityJobDefinitionNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionNetworkConfigArgs) ToModelQualityJobDefinitionNetworkConfigPtrOutput() ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionNetworkConfigArgs) ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionNetworkConfigOutput).ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionNetworkConfigPtrInput is an input type that accepts ModelQualityJobDefinitionNetworkConfigArgs, ModelQualityJobDefinitionNetworkConfigPtr and ModelQualityJobDefinitionNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionNetworkConfigPtrInput` via:
//
//	        ModelQualityJobDefinitionNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionNetworkConfigPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionNetworkConfigPtrOutput() ModelQualityJobDefinitionNetworkConfigPtrOutput
	ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Context) ModelQualityJobDefinitionNetworkConfigPtrOutput
}

type modelQualityJobDefinitionNetworkConfigPtrType ModelQualityJobDefinitionNetworkConfigArgs

func ModelQualityJobDefinitionNetworkConfigPtr(v *ModelQualityJobDefinitionNetworkConfigArgs) ModelQualityJobDefinitionNetworkConfigPtrInput {
	return (*modelQualityJobDefinitionNetworkConfigPtrType)(v)
}

func (*modelQualityJobDefinitionNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i *modelQualityJobDefinitionNetworkConfigPtrType) ToModelQualityJobDefinitionNetworkConfigPtrOutput() ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return i.ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionNetworkConfigPtrType) ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionNetworkConfigPtrOutput)
}

func (i *modelQualityJobDefinitionNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionNetworkConfig]{
		OutputState: i.ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type ModelQualityJobDefinitionNetworkConfigOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) ToModelQualityJobDefinitionNetworkConfigOutput() ModelQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) ToModelQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) ToModelQualityJobDefinitionNetworkConfigPtrOutput() ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionNetworkConfig) *ModelQualityJobDefinitionNetworkConfig {
		return &v
	}).(ModelQualityJobDefinitionNetworkConfigPtrOutput)
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[ModelQualityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelQualityJobDefinitionNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionNetworkConfig) *bool { return v.EnableInterContainerTrafficEncryption }).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelQualityJobDefinitionNetworkConfigOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionNetworkConfig) *bool { return v.EnableNetworkIsolation }).(pulumi.BoolPtrOutput)
}

func (o ModelQualityJobDefinitionNetworkConfigOutput) VpcConfig() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionNetworkConfig) *ModelQualityJobDefinitionVpcConfig { return v.VpcConfig }).(ModelQualityJobDefinitionVpcConfigPtrOutput)
}

type ModelQualityJobDefinitionNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) ToModelQualityJobDefinitionNetworkConfigPtrOutput() ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) ToModelQualityJobDefinitionNetworkConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionNetworkConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) Elem() ModelQualityJobDefinitionNetworkConfigOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionNetworkConfig) ModelQualityJobDefinitionNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionNetworkConfig
		return ret
	}).(ModelQualityJobDefinitionNetworkConfigOutput)
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkIsolation
	}).(pulumi.BoolPtrOutput)
}

func (o ModelQualityJobDefinitionNetworkConfigPtrOutput) VpcConfig() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionNetworkConfig) *ModelQualityJobDefinitionVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(ModelQualityJobDefinitionVpcConfigPtrOutput)
}

// Information about where and how to store the results of a monitoring job.
type ModelQualityJobDefinitionS3Output struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode *ModelQualityJobDefinitionS3OutputS3UploadMode `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// ModelQualityJobDefinitionS3OutputInput is an input type that accepts ModelQualityJobDefinitionS3OutputArgs and ModelQualityJobDefinitionS3OutputOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionS3OutputInput` via:
//
//	ModelQualityJobDefinitionS3OutputArgs{...}
type ModelQualityJobDefinitionS3OutputInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionS3OutputOutput() ModelQualityJobDefinitionS3OutputOutput
	ToModelQualityJobDefinitionS3OutputOutputWithContext(context.Context) ModelQualityJobDefinitionS3OutputOutput
}

// Information about where and how to store the results of a monitoring job.
type ModelQualityJobDefinitionS3OutputArgs struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode ModelQualityJobDefinitionS3OutputS3UploadModePtrInput `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelQualityJobDefinitionS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionS3Output)(nil)).Elem()
}

func (i ModelQualityJobDefinitionS3OutputArgs) ToModelQualityJobDefinitionS3OutputOutput() ModelQualityJobDefinitionS3OutputOutput {
	return i.ToModelQualityJobDefinitionS3OutputOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionS3OutputArgs) ToModelQualityJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionS3OutputOutput)
}

func (i ModelQualityJobDefinitionS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionS3Output] {
	return pulumix.Output[ModelQualityJobDefinitionS3Output]{
		OutputState: i.ToModelQualityJobDefinitionS3OutputOutputWithContext(ctx).OutputState,
	}
}

// Information about where and how to store the results of a monitoring job.
type ModelQualityJobDefinitionS3OutputOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionS3Output)(nil)).Elem()
}

func (o ModelQualityJobDefinitionS3OutputOutput) ToModelQualityJobDefinitionS3OutputOutput() ModelQualityJobDefinitionS3OutputOutput {
	return o
}

func (o ModelQualityJobDefinitionS3OutputOutput) ToModelQualityJobDefinitionS3OutputOutputWithContext(ctx context.Context) ModelQualityJobDefinitionS3OutputOutput {
	return o
}

func (o ModelQualityJobDefinitionS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionS3Output] {
	return pulumix.Output[ModelQualityJobDefinitionS3Output]{
		OutputState: o.OutputState,
	}
}

// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
func (o ModelQualityJobDefinitionS3OutputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionS3Output) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether to upload the results of the monitoring job continuously or after the job completes.
func (o ModelQualityJobDefinitionS3OutputOutput) S3UploadMode() ModelQualityJobDefinitionS3OutputS3UploadModePtrOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionS3Output) *ModelQualityJobDefinitionS3OutputS3UploadMode {
		return v.S3UploadMode
	}).(ModelQualityJobDefinitionS3OutputS3UploadModePtrOutput)
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o ModelQualityJobDefinitionS3OutputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionS3Output) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelQualityJobDefinitionStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds int `pulumi:"maxRuntimeInSeconds"`
}

// ModelQualityJobDefinitionStoppingConditionInput is an input type that accepts ModelQualityJobDefinitionStoppingConditionArgs and ModelQualityJobDefinitionStoppingConditionOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionStoppingConditionInput` via:
//
//	ModelQualityJobDefinitionStoppingConditionArgs{...}
type ModelQualityJobDefinitionStoppingConditionInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionStoppingConditionOutput() ModelQualityJobDefinitionStoppingConditionOutput
	ToModelQualityJobDefinitionStoppingConditionOutputWithContext(context.Context) ModelQualityJobDefinitionStoppingConditionOutput
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelQualityJobDefinitionStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumi.IntInput `pulumi:"maxRuntimeInSeconds"`
}

func (ModelQualityJobDefinitionStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i ModelQualityJobDefinitionStoppingConditionArgs) ToModelQualityJobDefinitionStoppingConditionOutput() ModelQualityJobDefinitionStoppingConditionOutput {
	return i.ToModelQualityJobDefinitionStoppingConditionOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionStoppingConditionArgs) ToModelQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionStoppingConditionOutput)
}

func (i ModelQualityJobDefinitionStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelQualityJobDefinitionStoppingCondition]{
		OutputState: i.ToModelQualityJobDefinitionStoppingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionStoppingConditionArgs) ToModelQualityJobDefinitionStoppingConditionPtrOutput() ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionStoppingConditionArgs) ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionStoppingConditionOutput).ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionStoppingConditionPtrInput is an input type that accepts ModelQualityJobDefinitionStoppingConditionArgs, ModelQualityJobDefinitionStoppingConditionPtr and ModelQualityJobDefinitionStoppingConditionPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionStoppingConditionPtrInput` via:
//
//	        ModelQualityJobDefinitionStoppingConditionArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionStoppingConditionPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionStoppingConditionPtrOutput() ModelQualityJobDefinitionStoppingConditionPtrOutput
	ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Context) ModelQualityJobDefinitionStoppingConditionPtrOutput
}

type modelQualityJobDefinitionStoppingConditionPtrType ModelQualityJobDefinitionStoppingConditionArgs

func ModelQualityJobDefinitionStoppingConditionPtr(v *ModelQualityJobDefinitionStoppingConditionArgs) ModelQualityJobDefinitionStoppingConditionPtrInput {
	return (*modelQualityJobDefinitionStoppingConditionPtrType)(v)
}

func (*modelQualityJobDefinitionStoppingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i *modelQualityJobDefinitionStoppingConditionPtrType) ToModelQualityJobDefinitionStoppingConditionPtrOutput() ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return i.ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionStoppingConditionPtrType) ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionStoppingConditionPtrOutput)
}

func (i *modelQualityJobDefinitionStoppingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelQualityJobDefinitionStoppingCondition]{
		OutputState: i.ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type ModelQualityJobDefinitionStoppingConditionOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelQualityJobDefinitionStoppingConditionOutput) ToModelQualityJobDefinitionStoppingConditionOutput() ModelQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelQualityJobDefinitionStoppingConditionOutput) ToModelQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o ModelQualityJobDefinitionStoppingConditionOutput) ToModelQualityJobDefinitionStoppingConditionPtrOutput() ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return o.ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionStoppingConditionOutput) ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionStoppingCondition) *ModelQualityJobDefinitionStoppingCondition {
		return &v
	}).(ModelQualityJobDefinitionStoppingConditionPtrOutput)
}

func (o ModelQualityJobDefinitionStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[ModelQualityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o ModelQualityJobDefinitionStoppingConditionOutput) MaxRuntimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionStoppingCondition) int { return v.MaxRuntimeInSeconds }).(pulumi.IntOutput)
}

type ModelQualityJobDefinitionStoppingConditionPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionStoppingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o ModelQualityJobDefinitionStoppingConditionPtrOutput) ToModelQualityJobDefinitionStoppingConditionPtrOutput() ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionStoppingConditionPtrOutput) ToModelQualityJobDefinitionStoppingConditionPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionStoppingConditionPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionStoppingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[*ModelQualityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionStoppingConditionPtrOutput) Elem() ModelQualityJobDefinitionStoppingConditionOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionStoppingCondition) ModelQualityJobDefinitionStoppingCondition {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionStoppingCondition
		return ret
	}).(ModelQualityJobDefinitionStoppingConditionOutput)
}

// The maximum runtime allowed in seconds.
func (o ModelQualityJobDefinitionStoppingConditionPtrOutput) MaxRuntimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionStoppingCondition) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRuntimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type ModelQualityJobDefinitionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ModelQualityJobDefinitionTagInput is an input type that accepts ModelQualityJobDefinitionTagArgs and ModelQualityJobDefinitionTagOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionTagInput` via:
//
//	ModelQualityJobDefinitionTagArgs{...}
type ModelQualityJobDefinitionTagInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionTagOutput() ModelQualityJobDefinitionTagOutput
	ToModelQualityJobDefinitionTagOutputWithContext(context.Context) ModelQualityJobDefinitionTagOutput
}

// A key-value pair to associate with a resource.
type ModelQualityJobDefinitionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelQualityJobDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionTag)(nil)).Elem()
}

func (i ModelQualityJobDefinitionTagArgs) ToModelQualityJobDefinitionTagOutput() ModelQualityJobDefinitionTagOutput {
	return i.ToModelQualityJobDefinitionTagOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionTagArgs) ToModelQualityJobDefinitionTagOutputWithContext(ctx context.Context) ModelQualityJobDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionTagOutput)
}

func (i ModelQualityJobDefinitionTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionTag] {
	return pulumix.Output[ModelQualityJobDefinitionTag]{
		OutputState: i.ToModelQualityJobDefinitionTagOutputWithContext(ctx).OutputState,
	}
}

// ModelQualityJobDefinitionTagArrayInput is an input type that accepts ModelQualityJobDefinitionTagArray and ModelQualityJobDefinitionTagArrayOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionTagArrayInput` via:
//
//	ModelQualityJobDefinitionTagArray{ ModelQualityJobDefinitionTagArgs{...} }
type ModelQualityJobDefinitionTagArrayInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionTagArrayOutput() ModelQualityJobDefinitionTagArrayOutput
	ToModelQualityJobDefinitionTagArrayOutputWithContext(context.Context) ModelQualityJobDefinitionTagArrayOutput
}

type ModelQualityJobDefinitionTagArray []ModelQualityJobDefinitionTagInput

func (ModelQualityJobDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelQualityJobDefinitionTag)(nil)).Elem()
}

func (i ModelQualityJobDefinitionTagArray) ToModelQualityJobDefinitionTagArrayOutput() ModelQualityJobDefinitionTagArrayOutput {
	return i.ToModelQualityJobDefinitionTagArrayOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionTagArray) ToModelQualityJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelQualityJobDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionTagArrayOutput)
}

func (i ModelQualityJobDefinitionTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelQualityJobDefinitionTag] {
	return pulumix.Output[[]ModelQualityJobDefinitionTag]{
		OutputState: i.ToModelQualityJobDefinitionTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ModelQualityJobDefinitionTagOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionTag)(nil)).Elem()
}

func (o ModelQualityJobDefinitionTagOutput) ToModelQualityJobDefinitionTagOutput() ModelQualityJobDefinitionTagOutput {
	return o
}

func (o ModelQualityJobDefinitionTagOutput) ToModelQualityJobDefinitionTagOutputWithContext(ctx context.Context) ModelQualityJobDefinitionTagOutput {
	return o
}

func (o ModelQualityJobDefinitionTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionTag] {
	return pulumix.Output[ModelQualityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelQualityJobDefinitionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ModelQualityJobDefinitionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelQualityJobDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelQualityJobDefinitionTag)(nil)).Elem()
}

func (o ModelQualityJobDefinitionTagArrayOutput) ToModelQualityJobDefinitionTagArrayOutput() ModelQualityJobDefinitionTagArrayOutput {
	return o
}

func (o ModelQualityJobDefinitionTagArrayOutput) ToModelQualityJobDefinitionTagArrayOutputWithContext(ctx context.Context) ModelQualityJobDefinitionTagArrayOutput {
	return o
}

func (o ModelQualityJobDefinitionTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelQualityJobDefinitionTag] {
	return pulumix.Output[[]ModelQualityJobDefinitionTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionTagArrayOutput) Index(i pulumi.IntInput) ModelQualityJobDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelQualityJobDefinitionTag {
		return vs[0].([]ModelQualityJobDefinitionTag)[vs[1].(int)]
	}).(ModelQualityJobDefinitionTagOutput)
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelQualityJobDefinitionVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets []string `pulumi:"subnets"`
}

// ModelQualityJobDefinitionVpcConfigInput is an input type that accepts ModelQualityJobDefinitionVpcConfigArgs and ModelQualityJobDefinitionVpcConfigOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionVpcConfigInput` via:
//
//	ModelQualityJobDefinitionVpcConfigArgs{...}
type ModelQualityJobDefinitionVpcConfigInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionVpcConfigOutput() ModelQualityJobDefinitionVpcConfigOutput
	ToModelQualityJobDefinitionVpcConfigOutputWithContext(context.Context) ModelQualityJobDefinitionVpcConfigOutput
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelQualityJobDefinitionVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ModelQualityJobDefinitionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i ModelQualityJobDefinitionVpcConfigArgs) ToModelQualityJobDefinitionVpcConfigOutput() ModelQualityJobDefinitionVpcConfigOutput {
	return i.ToModelQualityJobDefinitionVpcConfigOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionVpcConfigArgs) ToModelQualityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionVpcConfigOutput)
}

func (i ModelQualityJobDefinitionVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionVpcConfig] {
	return pulumix.Output[ModelQualityJobDefinitionVpcConfig]{
		OutputState: i.ToModelQualityJobDefinitionVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelQualityJobDefinitionVpcConfigArgs) ToModelQualityJobDefinitionVpcConfigPtrOutput() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return i.ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i ModelQualityJobDefinitionVpcConfigArgs) ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionVpcConfigOutput).ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx)
}

// ModelQualityJobDefinitionVpcConfigPtrInput is an input type that accepts ModelQualityJobDefinitionVpcConfigArgs, ModelQualityJobDefinitionVpcConfigPtr and ModelQualityJobDefinitionVpcConfigPtrOutput values.
// You can construct a concrete instance of `ModelQualityJobDefinitionVpcConfigPtrInput` via:
//
//	        ModelQualityJobDefinitionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ModelQualityJobDefinitionVpcConfigPtrInput interface {
	pulumi.Input

	ToModelQualityJobDefinitionVpcConfigPtrOutput() ModelQualityJobDefinitionVpcConfigPtrOutput
	ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Context) ModelQualityJobDefinitionVpcConfigPtrOutput
}

type modelQualityJobDefinitionVpcConfigPtrType ModelQualityJobDefinitionVpcConfigArgs

func ModelQualityJobDefinitionVpcConfigPtr(v *ModelQualityJobDefinitionVpcConfigArgs) ModelQualityJobDefinitionVpcConfigPtrInput {
	return (*modelQualityJobDefinitionVpcConfigPtrType)(v)
}

func (*modelQualityJobDefinitionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (i *modelQualityJobDefinitionVpcConfigPtrType) ToModelQualityJobDefinitionVpcConfigPtrOutput() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return i.ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *modelQualityJobDefinitionVpcConfigPtrType) ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelQualityJobDefinitionVpcConfigPtrOutput)
}

func (i *modelQualityJobDefinitionVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionVpcConfig]{
		OutputState: i.ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type ModelQualityJobDefinitionVpcConfigOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionVpcConfigOutput) ToModelQualityJobDefinitionVpcConfigOutput() ModelQualityJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionVpcConfigOutput) ToModelQualityJobDefinitionVpcConfigOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigOutput {
	return o
}

func (o ModelQualityJobDefinitionVpcConfigOutput) ToModelQualityJobDefinitionVpcConfigPtrOutput() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o.ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(context.Background())
}

func (o ModelQualityJobDefinitionVpcConfigOutput) ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelQualityJobDefinitionVpcConfig) *ModelQualityJobDefinitionVpcConfig {
		return &v
	}).(ModelQualityJobDefinitionVpcConfigPtrOutput)
}

func (o ModelQualityJobDefinitionVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelQualityJobDefinitionVpcConfig] {
	return pulumix.Output[ModelQualityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelQualityJobDefinitionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelQualityJobDefinitionVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelQualityJobDefinitionVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ModelQualityJobDefinitionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelQualityJobDefinitionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelQualityJobDefinitionVpcConfig)(nil)).Elem()
}

func (o ModelQualityJobDefinitionVpcConfigPtrOutput) ToModelQualityJobDefinitionVpcConfigPtrOutput() ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionVpcConfigPtrOutput) ToModelQualityJobDefinitionVpcConfigPtrOutputWithContext(ctx context.Context) ModelQualityJobDefinitionVpcConfigPtrOutput {
	return o
}

func (o ModelQualityJobDefinitionVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelQualityJobDefinitionVpcConfig] {
	return pulumix.Output[*ModelQualityJobDefinitionVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelQualityJobDefinitionVpcConfigPtrOutput) Elem() ModelQualityJobDefinitionVpcConfigOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionVpcConfig) ModelQualityJobDefinitionVpcConfig {
		if v != nil {
			return *v
		}
		var ret ModelQualityJobDefinitionVpcConfig
		return ret
	}).(ModelQualityJobDefinitionVpcConfigOutput)
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o ModelQualityJobDefinitionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o ModelQualityJobDefinitionVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelQualityJobDefinitionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ModelRepositoryAuthConfig struct {
	RepositoryCredentialsProviderArn string `pulumi:"repositoryCredentialsProviderArn"`
}

// ModelRepositoryAuthConfigInput is an input type that accepts ModelRepositoryAuthConfigArgs and ModelRepositoryAuthConfigOutput values.
// You can construct a concrete instance of `ModelRepositoryAuthConfigInput` via:
//
//	ModelRepositoryAuthConfigArgs{...}
type ModelRepositoryAuthConfigInput interface {
	pulumi.Input

	ToModelRepositoryAuthConfigOutput() ModelRepositoryAuthConfigOutput
	ToModelRepositoryAuthConfigOutputWithContext(context.Context) ModelRepositoryAuthConfigOutput
}

type ModelRepositoryAuthConfigArgs struct {
	RepositoryCredentialsProviderArn pulumi.StringInput `pulumi:"repositoryCredentialsProviderArn"`
}

func (ModelRepositoryAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelRepositoryAuthConfig)(nil)).Elem()
}

func (i ModelRepositoryAuthConfigArgs) ToModelRepositoryAuthConfigOutput() ModelRepositoryAuthConfigOutput {
	return i.ToModelRepositoryAuthConfigOutputWithContext(context.Background())
}

func (i ModelRepositoryAuthConfigArgs) ToModelRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelRepositoryAuthConfigOutput)
}

func (i ModelRepositoryAuthConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelRepositoryAuthConfig] {
	return pulumix.Output[ModelRepositoryAuthConfig]{
		OutputState: i.ToModelRepositoryAuthConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelRepositoryAuthConfigArgs) ToModelRepositoryAuthConfigPtrOutput() ModelRepositoryAuthConfigPtrOutput {
	return i.ToModelRepositoryAuthConfigPtrOutputWithContext(context.Background())
}

func (i ModelRepositoryAuthConfigArgs) ToModelRepositoryAuthConfigPtrOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelRepositoryAuthConfigOutput).ToModelRepositoryAuthConfigPtrOutputWithContext(ctx)
}

// ModelRepositoryAuthConfigPtrInput is an input type that accepts ModelRepositoryAuthConfigArgs, ModelRepositoryAuthConfigPtr and ModelRepositoryAuthConfigPtrOutput values.
// You can construct a concrete instance of `ModelRepositoryAuthConfigPtrInput` via:
//
//	        ModelRepositoryAuthConfigArgs{...}
//
//	or:
//
//	        nil
type ModelRepositoryAuthConfigPtrInput interface {
	pulumi.Input

	ToModelRepositoryAuthConfigPtrOutput() ModelRepositoryAuthConfigPtrOutput
	ToModelRepositoryAuthConfigPtrOutputWithContext(context.Context) ModelRepositoryAuthConfigPtrOutput
}

type modelRepositoryAuthConfigPtrType ModelRepositoryAuthConfigArgs

func ModelRepositoryAuthConfigPtr(v *ModelRepositoryAuthConfigArgs) ModelRepositoryAuthConfigPtrInput {
	return (*modelRepositoryAuthConfigPtrType)(v)
}

func (*modelRepositoryAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelRepositoryAuthConfig)(nil)).Elem()
}

func (i *modelRepositoryAuthConfigPtrType) ToModelRepositoryAuthConfigPtrOutput() ModelRepositoryAuthConfigPtrOutput {
	return i.ToModelRepositoryAuthConfigPtrOutputWithContext(context.Background())
}

func (i *modelRepositoryAuthConfigPtrType) ToModelRepositoryAuthConfigPtrOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelRepositoryAuthConfigPtrOutput)
}

func (i *modelRepositoryAuthConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelRepositoryAuthConfig] {
	return pulumix.Output[*ModelRepositoryAuthConfig]{
		OutputState: i.ToModelRepositoryAuthConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelRepositoryAuthConfigOutput struct{ *pulumi.OutputState }

func (ModelRepositoryAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelRepositoryAuthConfig)(nil)).Elem()
}

func (o ModelRepositoryAuthConfigOutput) ToModelRepositoryAuthConfigOutput() ModelRepositoryAuthConfigOutput {
	return o
}

func (o ModelRepositoryAuthConfigOutput) ToModelRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigOutput {
	return o
}

func (o ModelRepositoryAuthConfigOutput) ToModelRepositoryAuthConfigPtrOutput() ModelRepositoryAuthConfigPtrOutput {
	return o.ToModelRepositoryAuthConfigPtrOutputWithContext(context.Background())
}

func (o ModelRepositoryAuthConfigOutput) ToModelRepositoryAuthConfigPtrOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelRepositoryAuthConfig) *ModelRepositoryAuthConfig {
		return &v
	}).(ModelRepositoryAuthConfigPtrOutput)
}

func (o ModelRepositoryAuthConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelRepositoryAuthConfig] {
	return pulumix.Output[ModelRepositoryAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelRepositoryAuthConfigOutput) RepositoryCredentialsProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v ModelRepositoryAuthConfig) string { return v.RepositoryCredentialsProviderArn }).(pulumi.StringOutput)
}

type ModelRepositoryAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelRepositoryAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelRepositoryAuthConfig)(nil)).Elem()
}

func (o ModelRepositoryAuthConfigPtrOutput) ToModelRepositoryAuthConfigPtrOutput() ModelRepositoryAuthConfigPtrOutput {
	return o
}

func (o ModelRepositoryAuthConfigPtrOutput) ToModelRepositoryAuthConfigPtrOutputWithContext(ctx context.Context) ModelRepositoryAuthConfigPtrOutput {
	return o
}

func (o ModelRepositoryAuthConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelRepositoryAuthConfig] {
	return pulumix.Output[*ModelRepositoryAuthConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelRepositoryAuthConfigPtrOutput) Elem() ModelRepositoryAuthConfigOutput {
	return o.ApplyT(func(v *ModelRepositoryAuthConfig) ModelRepositoryAuthConfig {
		if v != nil {
			return *v
		}
		var ret ModelRepositoryAuthConfig
		return ret
	}).(ModelRepositoryAuthConfigOutput)
}

func (o ModelRepositoryAuthConfigPtrOutput) RepositoryCredentialsProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelRepositoryAuthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryCredentialsProviderArn
	}).(pulumi.StringPtrOutput)
}

type ModelS3DataSource struct {
	CompressionType string `pulumi:"compressionType"`
	S3DataType      string `pulumi:"s3DataType"`
	S3Uri           string `pulumi:"s3Uri"`
}

// ModelS3DataSourceInput is an input type that accepts ModelS3DataSourceArgs and ModelS3DataSourceOutput values.
// You can construct a concrete instance of `ModelS3DataSourceInput` via:
//
//	ModelS3DataSourceArgs{...}
type ModelS3DataSourceInput interface {
	pulumi.Input

	ToModelS3DataSourceOutput() ModelS3DataSourceOutput
	ToModelS3DataSourceOutputWithContext(context.Context) ModelS3DataSourceOutput
}

type ModelS3DataSourceArgs struct {
	CompressionType pulumi.StringInput `pulumi:"compressionType"`
	S3DataType      pulumi.StringInput `pulumi:"s3DataType"`
	S3Uri           pulumi.StringInput `pulumi:"s3Uri"`
}

func (ModelS3DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelS3DataSource)(nil)).Elem()
}

func (i ModelS3DataSourceArgs) ToModelS3DataSourceOutput() ModelS3DataSourceOutput {
	return i.ToModelS3DataSourceOutputWithContext(context.Background())
}

func (i ModelS3DataSourceArgs) ToModelS3DataSourceOutputWithContext(ctx context.Context) ModelS3DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelS3DataSourceOutput)
}

func (i ModelS3DataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[ModelS3DataSource] {
	return pulumix.Output[ModelS3DataSource]{
		OutputState: i.ToModelS3DataSourceOutputWithContext(ctx).OutputState,
	}
}

func (i ModelS3DataSourceArgs) ToModelS3DataSourcePtrOutput() ModelS3DataSourcePtrOutput {
	return i.ToModelS3DataSourcePtrOutputWithContext(context.Background())
}

func (i ModelS3DataSourceArgs) ToModelS3DataSourcePtrOutputWithContext(ctx context.Context) ModelS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelS3DataSourceOutput).ToModelS3DataSourcePtrOutputWithContext(ctx)
}

// ModelS3DataSourcePtrInput is an input type that accepts ModelS3DataSourceArgs, ModelS3DataSourcePtr and ModelS3DataSourcePtrOutput values.
// You can construct a concrete instance of `ModelS3DataSourcePtrInput` via:
//
//	        ModelS3DataSourceArgs{...}
//
//	or:
//
//	        nil
type ModelS3DataSourcePtrInput interface {
	pulumi.Input

	ToModelS3DataSourcePtrOutput() ModelS3DataSourcePtrOutput
	ToModelS3DataSourcePtrOutputWithContext(context.Context) ModelS3DataSourcePtrOutput
}

type modelS3DataSourcePtrType ModelS3DataSourceArgs

func ModelS3DataSourcePtr(v *ModelS3DataSourceArgs) ModelS3DataSourcePtrInput {
	return (*modelS3DataSourcePtrType)(v)
}

func (*modelS3DataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelS3DataSource)(nil)).Elem()
}

func (i *modelS3DataSourcePtrType) ToModelS3DataSourcePtrOutput() ModelS3DataSourcePtrOutput {
	return i.ToModelS3DataSourcePtrOutputWithContext(context.Background())
}

func (i *modelS3DataSourcePtrType) ToModelS3DataSourcePtrOutputWithContext(ctx context.Context) ModelS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelS3DataSourcePtrOutput)
}

func (i *modelS3DataSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelS3DataSource] {
	return pulumix.Output[*ModelS3DataSource]{
		OutputState: i.ToModelS3DataSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type ModelS3DataSourceOutput struct{ *pulumi.OutputState }

func (ModelS3DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelS3DataSource)(nil)).Elem()
}

func (o ModelS3DataSourceOutput) ToModelS3DataSourceOutput() ModelS3DataSourceOutput {
	return o
}

func (o ModelS3DataSourceOutput) ToModelS3DataSourceOutputWithContext(ctx context.Context) ModelS3DataSourceOutput {
	return o
}

func (o ModelS3DataSourceOutput) ToModelS3DataSourcePtrOutput() ModelS3DataSourcePtrOutput {
	return o.ToModelS3DataSourcePtrOutputWithContext(context.Background())
}

func (o ModelS3DataSourceOutput) ToModelS3DataSourcePtrOutputWithContext(ctx context.Context) ModelS3DataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelS3DataSource) *ModelS3DataSource {
		return &v
	}).(ModelS3DataSourcePtrOutput)
}

func (o ModelS3DataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ModelS3DataSource] {
	return pulumix.Output[ModelS3DataSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelS3DataSourceOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelS3DataSource) string { return v.CompressionType }).(pulumi.StringOutput)
}

func (o ModelS3DataSourceOutput) S3DataType() pulumi.StringOutput {
	return o.ApplyT(func(v ModelS3DataSource) string { return v.S3DataType }).(pulumi.StringOutput)
}

func (o ModelS3DataSourceOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ModelS3DataSource) string { return v.S3Uri }).(pulumi.StringOutput)
}

type ModelS3DataSourcePtrOutput struct{ *pulumi.OutputState }

func (ModelS3DataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelS3DataSource)(nil)).Elem()
}

func (o ModelS3DataSourcePtrOutput) ToModelS3DataSourcePtrOutput() ModelS3DataSourcePtrOutput {
	return o
}

func (o ModelS3DataSourcePtrOutput) ToModelS3DataSourcePtrOutputWithContext(ctx context.Context) ModelS3DataSourcePtrOutput {
	return o
}

func (o ModelS3DataSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelS3DataSource] {
	return pulumix.Output[*ModelS3DataSource]{
		OutputState: o.OutputState,
	}
}

func (o ModelS3DataSourcePtrOutput) Elem() ModelS3DataSourceOutput {
	return o.ApplyT(func(v *ModelS3DataSource) ModelS3DataSource {
		if v != nil {
			return *v
		}
		var ret ModelS3DataSource
		return ret
	}).(ModelS3DataSourceOutput)
}

func (o ModelS3DataSourcePtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelS3DataSource) *string {
		if v == nil {
			return nil
		}
		return &v.CompressionType
	}).(pulumi.StringPtrOutput)
}

func (o ModelS3DataSourcePtrOutput) S3DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelS3DataSource) *string {
		if v == nil {
			return nil
		}
		return &v.S3DataType
	}).(pulumi.StringPtrOutput)
}

func (o ModelS3DataSourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ModelS3DataSource) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

type ModelTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ModelTagInput is an input type that accepts ModelTagArgs and ModelTagOutput values.
// You can construct a concrete instance of `ModelTagInput` via:
//
//	ModelTagArgs{...}
type ModelTagInput interface {
	pulumi.Input

	ToModelTagOutput() ModelTagOutput
	ToModelTagOutputWithContext(context.Context) ModelTagOutput
}

type ModelTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ModelTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTag)(nil)).Elem()
}

func (i ModelTagArgs) ToModelTagOutput() ModelTagOutput {
	return i.ToModelTagOutputWithContext(context.Background())
}

func (i ModelTagArgs) ToModelTagOutputWithContext(ctx context.Context) ModelTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTagOutput)
}

func (i ModelTagArgs) ToOutput(ctx context.Context) pulumix.Output[ModelTag] {
	return pulumix.Output[ModelTag]{
		OutputState: i.ToModelTagOutputWithContext(ctx).OutputState,
	}
}

// ModelTagArrayInput is an input type that accepts ModelTagArray and ModelTagArrayOutput values.
// You can construct a concrete instance of `ModelTagArrayInput` via:
//
//	ModelTagArray{ ModelTagArgs{...} }
type ModelTagArrayInput interface {
	pulumi.Input

	ToModelTagArrayOutput() ModelTagArrayOutput
	ToModelTagArrayOutputWithContext(context.Context) ModelTagArrayOutput
}

type ModelTagArray []ModelTagInput

func (ModelTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelTag)(nil)).Elem()
}

func (i ModelTagArray) ToModelTagArrayOutput() ModelTagArrayOutput {
	return i.ToModelTagArrayOutputWithContext(context.Background())
}

func (i ModelTagArray) ToModelTagArrayOutputWithContext(ctx context.Context) ModelTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelTagArrayOutput)
}

func (i ModelTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ModelTag] {
	return pulumix.Output[[]ModelTag]{
		OutputState: i.ToModelTagArrayOutputWithContext(ctx).OutputState,
	}
}

type ModelTagOutput struct{ *pulumi.OutputState }

func (ModelTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelTag)(nil)).Elem()
}

func (o ModelTagOutput) ToModelTagOutput() ModelTagOutput {
	return o
}

func (o ModelTagOutput) ToModelTagOutputWithContext(ctx context.Context) ModelTagOutput {
	return o
}

func (o ModelTagOutput) ToOutput(ctx context.Context) pulumix.Output[ModelTag] {
	return pulumix.Output[ModelTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ModelTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ModelTag) string { return v.Value }).(pulumi.StringOutput)
}

type ModelTagArrayOutput struct{ *pulumi.OutputState }

func (ModelTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelTag)(nil)).Elem()
}

func (o ModelTagArrayOutput) ToModelTagArrayOutput() ModelTagArrayOutput {
	return o
}

func (o ModelTagArrayOutput) ToModelTagArrayOutputWithContext(ctx context.Context) ModelTagArrayOutput {
	return o
}

func (o ModelTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ModelTag] {
	return pulumix.Output[[]ModelTag]{
		OutputState: o.OutputState,
	}
}

func (o ModelTagArrayOutput) Index(i pulumi.IntInput) ModelTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModelTag {
		return vs[0].([]ModelTag)[vs[1].(int)]
	}).(ModelTagOutput)
}

type ModelVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
}

// ModelVpcConfigInput is an input type that accepts ModelVpcConfigArgs and ModelVpcConfigOutput values.
// You can construct a concrete instance of `ModelVpcConfigInput` via:
//
//	ModelVpcConfigArgs{...}
type ModelVpcConfigInput interface {
	pulumi.Input

	ToModelVpcConfigOutput() ModelVpcConfigOutput
	ToModelVpcConfigOutputWithContext(context.Context) ModelVpcConfigOutput
}

type ModelVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Subnets          pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ModelVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVpcConfig)(nil)).Elem()
}

func (i ModelVpcConfigArgs) ToModelVpcConfigOutput() ModelVpcConfigOutput {
	return i.ToModelVpcConfigOutputWithContext(context.Background())
}

func (i ModelVpcConfigArgs) ToModelVpcConfigOutputWithContext(ctx context.Context) ModelVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVpcConfigOutput)
}

func (i ModelVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ModelVpcConfig] {
	return pulumix.Output[ModelVpcConfig]{
		OutputState: i.ToModelVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ModelVpcConfigArgs) ToModelVpcConfigPtrOutput() ModelVpcConfigPtrOutput {
	return i.ToModelVpcConfigPtrOutputWithContext(context.Background())
}

func (i ModelVpcConfigArgs) ToModelVpcConfigPtrOutputWithContext(ctx context.Context) ModelVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVpcConfigOutput).ToModelVpcConfigPtrOutputWithContext(ctx)
}

// ModelVpcConfigPtrInput is an input type that accepts ModelVpcConfigArgs, ModelVpcConfigPtr and ModelVpcConfigPtrOutput values.
// You can construct a concrete instance of `ModelVpcConfigPtrInput` via:
//
//	        ModelVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ModelVpcConfigPtrInput interface {
	pulumi.Input

	ToModelVpcConfigPtrOutput() ModelVpcConfigPtrOutput
	ToModelVpcConfigPtrOutputWithContext(context.Context) ModelVpcConfigPtrOutput
}

type modelVpcConfigPtrType ModelVpcConfigArgs

func ModelVpcConfigPtr(v *ModelVpcConfigArgs) ModelVpcConfigPtrInput {
	return (*modelVpcConfigPtrType)(v)
}

func (*modelVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVpcConfig)(nil)).Elem()
}

func (i *modelVpcConfigPtrType) ToModelVpcConfigPtrOutput() ModelVpcConfigPtrOutput {
	return i.ToModelVpcConfigPtrOutputWithContext(context.Background())
}

func (i *modelVpcConfigPtrType) ToModelVpcConfigPtrOutputWithContext(ctx context.Context) ModelVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVpcConfigPtrOutput)
}

func (i *modelVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ModelVpcConfig] {
	return pulumix.Output[*ModelVpcConfig]{
		OutputState: i.ToModelVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ModelVpcConfigOutput struct{ *pulumi.OutputState }

func (ModelVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVpcConfig)(nil)).Elem()
}

func (o ModelVpcConfigOutput) ToModelVpcConfigOutput() ModelVpcConfigOutput {
	return o
}

func (o ModelVpcConfigOutput) ToModelVpcConfigOutputWithContext(ctx context.Context) ModelVpcConfigOutput {
	return o
}

func (o ModelVpcConfigOutput) ToModelVpcConfigPtrOutput() ModelVpcConfigPtrOutput {
	return o.ToModelVpcConfigPtrOutputWithContext(context.Background())
}

func (o ModelVpcConfigOutput) ToModelVpcConfigPtrOutputWithContext(ctx context.Context) ModelVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ModelVpcConfig) *ModelVpcConfig {
		return &v
	}).(ModelVpcConfigPtrOutput)
}

func (o ModelVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelVpcConfig] {
	return pulumix.Output[ModelVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ModelVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ModelVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ModelVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ModelVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelVpcConfig)(nil)).Elem()
}

func (o ModelVpcConfigPtrOutput) ToModelVpcConfigPtrOutput() ModelVpcConfigPtrOutput {
	return o
}

func (o ModelVpcConfigPtrOutput) ToModelVpcConfigPtrOutputWithContext(ctx context.Context) ModelVpcConfigPtrOutput {
	return o
}

func (o ModelVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ModelVpcConfig] {
	return pulumix.Output[*ModelVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelVpcConfigPtrOutput) Elem() ModelVpcConfigOutput {
	return o.ApplyT(func(v *ModelVpcConfig) ModelVpcConfig {
		if v != nil {
			return *v
		}
		var ret ModelVpcConfig
		return ret
	}).(ModelVpcConfigOutput)
}

func (o ModelVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ModelVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ModelVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type MonitoringScheduleBaselineConfig struct {
	ConstraintsResource *MonitoringScheduleConstraintsResource `pulumi:"constraintsResource"`
	StatisticsResource  *MonitoringScheduleStatisticsResource  `pulumi:"statisticsResource"`
}

// MonitoringScheduleBaselineConfigInput is an input type that accepts MonitoringScheduleBaselineConfigArgs and MonitoringScheduleBaselineConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleBaselineConfigInput` via:
//
//	MonitoringScheduleBaselineConfigArgs{...}
type MonitoringScheduleBaselineConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleBaselineConfigOutput() MonitoringScheduleBaselineConfigOutput
	ToMonitoringScheduleBaselineConfigOutputWithContext(context.Context) MonitoringScheduleBaselineConfigOutput
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type MonitoringScheduleBaselineConfigArgs struct {
	ConstraintsResource MonitoringScheduleConstraintsResourcePtrInput `pulumi:"constraintsResource"`
	StatisticsResource  MonitoringScheduleStatisticsResourcePtrInput  `pulumi:"statisticsResource"`
}

func (MonitoringScheduleBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleBaselineConfig)(nil)).Elem()
}

func (i MonitoringScheduleBaselineConfigArgs) ToMonitoringScheduleBaselineConfigOutput() MonitoringScheduleBaselineConfigOutput {
	return i.ToMonitoringScheduleBaselineConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleBaselineConfigArgs) ToMonitoringScheduleBaselineConfigOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBaselineConfigOutput)
}

func (i MonitoringScheduleBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleBaselineConfig] {
	return pulumix.Output[MonitoringScheduleBaselineConfig]{
		OutputState: i.ToMonitoringScheduleBaselineConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleBaselineConfigArgs) ToMonitoringScheduleBaselineConfigPtrOutput() MonitoringScheduleBaselineConfigPtrOutput {
	return i.ToMonitoringScheduleBaselineConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleBaselineConfigArgs) ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBaselineConfigOutput).ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleBaselineConfigPtrInput is an input type that accepts MonitoringScheduleBaselineConfigArgs, MonitoringScheduleBaselineConfigPtr and MonitoringScheduleBaselineConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleBaselineConfigPtrInput` via:
//
//	        MonitoringScheduleBaselineConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleBaselineConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleBaselineConfigPtrOutput() MonitoringScheduleBaselineConfigPtrOutput
	ToMonitoringScheduleBaselineConfigPtrOutputWithContext(context.Context) MonitoringScheduleBaselineConfigPtrOutput
}

type monitoringScheduleBaselineConfigPtrType MonitoringScheduleBaselineConfigArgs

func MonitoringScheduleBaselineConfigPtr(v *MonitoringScheduleBaselineConfigArgs) MonitoringScheduleBaselineConfigPtrInput {
	return (*monitoringScheduleBaselineConfigPtrType)(v)
}

func (*monitoringScheduleBaselineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleBaselineConfig)(nil)).Elem()
}

func (i *monitoringScheduleBaselineConfigPtrType) ToMonitoringScheduleBaselineConfigPtrOutput() MonitoringScheduleBaselineConfigPtrOutput {
	return i.ToMonitoringScheduleBaselineConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleBaselineConfigPtrType) ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBaselineConfigPtrOutput)
}

func (i *monitoringScheduleBaselineConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleBaselineConfig] {
	return pulumix.Output[*MonitoringScheduleBaselineConfig]{
		OutputState: i.ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
type MonitoringScheduleBaselineConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleBaselineConfig)(nil)).Elem()
}

func (o MonitoringScheduleBaselineConfigOutput) ToMonitoringScheduleBaselineConfigOutput() MonitoringScheduleBaselineConfigOutput {
	return o
}

func (o MonitoringScheduleBaselineConfigOutput) ToMonitoringScheduleBaselineConfigOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigOutput {
	return o
}

func (o MonitoringScheduleBaselineConfigOutput) ToMonitoringScheduleBaselineConfigPtrOutput() MonitoringScheduleBaselineConfigPtrOutput {
	return o.ToMonitoringScheduleBaselineConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleBaselineConfigOutput) ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleBaselineConfig) *MonitoringScheduleBaselineConfig {
		return &v
	}).(MonitoringScheduleBaselineConfigPtrOutput)
}

func (o MonitoringScheduleBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleBaselineConfig] {
	return pulumix.Output[MonitoringScheduleBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleBaselineConfigOutput) ConstraintsResource() MonitoringScheduleConstraintsResourcePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleBaselineConfig) *MonitoringScheduleConstraintsResource {
		return v.ConstraintsResource
	}).(MonitoringScheduleConstraintsResourcePtrOutput)
}

func (o MonitoringScheduleBaselineConfigOutput) StatisticsResource() MonitoringScheduleStatisticsResourcePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleBaselineConfig) *MonitoringScheduleStatisticsResource {
		return v.StatisticsResource
	}).(MonitoringScheduleStatisticsResourcePtrOutput)
}

type MonitoringScheduleBaselineConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleBaselineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleBaselineConfig)(nil)).Elem()
}

func (o MonitoringScheduleBaselineConfigPtrOutput) ToMonitoringScheduleBaselineConfigPtrOutput() MonitoringScheduleBaselineConfigPtrOutput {
	return o
}

func (o MonitoringScheduleBaselineConfigPtrOutput) ToMonitoringScheduleBaselineConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleBaselineConfigPtrOutput {
	return o
}

func (o MonitoringScheduleBaselineConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleBaselineConfig] {
	return pulumix.Output[*MonitoringScheduleBaselineConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleBaselineConfigPtrOutput) Elem() MonitoringScheduleBaselineConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleBaselineConfig) MonitoringScheduleBaselineConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleBaselineConfig
		return ret
	}).(MonitoringScheduleBaselineConfigOutput)
}

func (o MonitoringScheduleBaselineConfigPtrOutput) ConstraintsResource() MonitoringScheduleConstraintsResourcePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBaselineConfig) *MonitoringScheduleConstraintsResource {
		if v == nil {
			return nil
		}
		return v.ConstraintsResource
	}).(MonitoringScheduleConstraintsResourcePtrOutput)
}

func (o MonitoringScheduleBaselineConfigPtrOutput) StatisticsResource() MonitoringScheduleStatisticsResourcePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBaselineConfig) *MonitoringScheduleStatisticsResource {
		if v == nil {
			return nil
		}
		return v.StatisticsResource
	}).(MonitoringScheduleStatisticsResourcePtrOutput)
}

// The batch transform input for a monitoring job.
type MonitoringScheduleBatchTransformInput struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri string                          `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                MonitoringScheduleDatasetFormat `pulumi:"datasetFormat"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute *string `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *MonitoringScheduleBatchTransformInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *MonitoringScheduleBatchTransformInputS3InputMode `pulumi:"s3InputMode"`
}

// MonitoringScheduleBatchTransformInputInput is an input type that accepts MonitoringScheduleBatchTransformInputArgs and MonitoringScheduleBatchTransformInputOutput values.
// You can construct a concrete instance of `MonitoringScheduleBatchTransformInputInput` via:
//
//	MonitoringScheduleBatchTransformInputArgs{...}
type MonitoringScheduleBatchTransformInputInput interface {
	pulumi.Input

	ToMonitoringScheduleBatchTransformInputOutput() MonitoringScheduleBatchTransformInputOutput
	ToMonitoringScheduleBatchTransformInputOutputWithContext(context.Context) MonitoringScheduleBatchTransformInputOutput
}

// The batch transform input for a monitoring job.
type MonitoringScheduleBatchTransformInputArgs struct {
	// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
	DataCapturedDestinationS3Uri pulumi.StringInput                   `pulumi:"dataCapturedDestinationS3Uri"`
	DatasetFormat                MonitoringScheduleDatasetFormatInput `pulumi:"datasetFormat"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute pulumi.StringPtrInput `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType MonitoringScheduleBatchTransformInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode MonitoringScheduleBatchTransformInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (MonitoringScheduleBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleBatchTransformInput)(nil)).Elem()
}

func (i MonitoringScheduleBatchTransformInputArgs) ToMonitoringScheduleBatchTransformInputOutput() MonitoringScheduleBatchTransformInputOutput {
	return i.ToMonitoringScheduleBatchTransformInputOutputWithContext(context.Background())
}

func (i MonitoringScheduleBatchTransformInputArgs) ToMonitoringScheduleBatchTransformInputOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBatchTransformInputOutput)
}

func (i MonitoringScheduleBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleBatchTransformInput] {
	return pulumix.Output[MonitoringScheduleBatchTransformInput]{
		OutputState: i.ToMonitoringScheduleBatchTransformInputOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleBatchTransformInputArgs) ToMonitoringScheduleBatchTransformInputPtrOutput() MonitoringScheduleBatchTransformInputPtrOutput {
	return i.ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleBatchTransformInputArgs) ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBatchTransformInputOutput).ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx)
}

// MonitoringScheduleBatchTransformInputPtrInput is an input type that accepts MonitoringScheduleBatchTransformInputArgs, MonitoringScheduleBatchTransformInputPtr and MonitoringScheduleBatchTransformInputPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleBatchTransformInputPtrInput` via:
//
//	        MonitoringScheduleBatchTransformInputArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleBatchTransformInputPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleBatchTransformInputPtrOutput() MonitoringScheduleBatchTransformInputPtrOutput
	ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(context.Context) MonitoringScheduleBatchTransformInputPtrOutput
}

type monitoringScheduleBatchTransformInputPtrType MonitoringScheduleBatchTransformInputArgs

func MonitoringScheduleBatchTransformInputPtr(v *MonitoringScheduleBatchTransformInputArgs) MonitoringScheduleBatchTransformInputPtrInput {
	return (*monitoringScheduleBatchTransformInputPtrType)(v)
}

func (*monitoringScheduleBatchTransformInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleBatchTransformInput)(nil)).Elem()
}

func (i *monitoringScheduleBatchTransformInputPtrType) ToMonitoringScheduleBatchTransformInputPtrOutput() MonitoringScheduleBatchTransformInputPtrOutput {
	return i.ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleBatchTransformInputPtrType) ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleBatchTransformInputPtrOutput)
}

func (i *monitoringScheduleBatchTransformInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleBatchTransformInput] {
	return pulumix.Output[*MonitoringScheduleBatchTransformInput]{
		OutputState: i.ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The batch transform input for a monitoring job.
type MonitoringScheduleBatchTransformInputOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleBatchTransformInput)(nil)).Elem()
}

func (o MonitoringScheduleBatchTransformInputOutput) ToMonitoringScheduleBatchTransformInputOutput() MonitoringScheduleBatchTransformInputOutput {
	return o
}

func (o MonitoringScheduleBatchTransformInputOutput) ToMonitoringScheduleBatchTransformInputOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputOutput {
	return o
}

func (o MonitoringScheduleBatchTransformInputOutput) ToMonitoringScheduleBatchTransformInputPtrOutput() MonitoringScheduleBatchTransformInputPtrOutput {
	return o.ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleBatchTransformInputOutput) ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleBatchTransformInput) *MonitoringScheduleBatchTransformInput {
		return &v
	}).(MonitoringScheduleBatchTransformInputPtrOutput)
}

func (o MonitoringScheduleBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleBatchTransformInput] {
	return pulumix.Output[MonitoringScheduleBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o MonitoringScheduleBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) string { return v.DataCapturedDestinationS3Uri }).(pulumi.StringOutput)
}

func (o MonitoringScheduleBatchTransformInputOutput) DatasetFormat() MonitoringScheduleDatasetFormatOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) MonitoringScheduleDatasetFormat { return v.DatasetFormat }).(MonitoringScheduleDatasetFormatOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o MonitoringScheduleBatchTransformInputOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) *string { return v.ExcludeFeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o MonitoringScheduleBatchTransformInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o MonitoringScheduleBatchTransformInputOutput) S3DataDistributionType() MonitoringScheduleBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) *MonitoringScheduleBatchTransformInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(MonitoringScheduleBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o MonitoringScheduleBatchTransformInputOutput) S3InputMode() MonitoringScheduleBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleBatchTransformInput) *MonitoringScheduleBatchTransformInputS3InputMode {
		return v.S3InputMode
	}).(MonitoringScheduleBatchTransformInputS3InputModePtrOutput)
}

type MonitoringScheduleBatchTransformInputPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleBatchTransformInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleBatchTransformInput)(nil)).Elem()
}

func (o MonitoringScheduleBatchTransformInputPtrOutput) ToMonitoringScheduleBatchTransformInputPtrOutput() MonitoringScheduleBatchTransformInputPtrOutput {
	return o
}

func (o MonitoringScheduleBatchTransformInputPtrOutput) ToMonitoringScheduleBatchTransformInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleBatchTransformInputPtrOutput {
	return o
}

func (o MonitoringScheduleBatchTransformInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleBatchTransformInput] {
	return pulumix.Output[*MonitoringScheduleBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleBatchTransformInputPtrOutput) Elem() MonitoringScheduleBatchTransformInputOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) MonitoringScheduleBatchTransformInput {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleBatchTransformInput
		return ret
	}).(MonitoringScheduleBatchTransformInputOutput)
}

// A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
func (o MonitoringScheduleBatchTransformInputPtrOutput) DataCapturedDestinationS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.DataCapturedDestinationS3Uri
	}).(pulumi.StringPtrOutput)
}

func (o MonitoringScheduleBatchTransformInputPtrOutput) DatasetFormat() MonitoringScheduleDatasetFormatPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *MonitoringScheduleDatasetFormat {
		if v == nil {
			return nil
		}
		return &v.DatasetFormat
	}).(MonitoringScheduleDatasetFormatPtrOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o MonitoringScheduleBatchTransformInputPtrOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeFeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o MonitoringScheduleBatchTransformInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o MonitoringScheduleBatchTransformInputPtrOutput) S3DataDistributionType() MonitoringScheduleBatchTransformInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *MonitoringScheduleBatchTransformInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(MonitoringScheduleBatchTransformInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o MonitoringScheduleBatchTransformInputPtrOutput) S3InputMode() MonitoringScheduleBatchTransformInputS3InputModePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleBatchTransformInput) *MonitoringScheduleBatchTransformInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(MonitoringScheduleBatchTransformInputS3InputModePtrOutput)
}

// Configuration for the cluster used to run model monitoring jobs.
type MonitoringScheduleClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// MonitoringScheduleClusterConfigInput is an input type that accepts MonitoringScheduleClusterConfigArgs and MonitoringScheduleClusterConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleClusterConfigInput` via:
//
//	MonitoringScheduleClusterConfigArgs{...}
type MonitoringScheduleClusterConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleClusterConfigOutput() MonitoringScheduleClusterConfigOutput
	ToMonitoringScheduleClusterConfigOutputWithContext(context.Context) MonitoringScheduleClusterConfigOutput
}

// Configuration for the cluster used to run model monitoring jobs.
type MonitoringScheduleClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumi.StringPtrInput `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (MonitoringScheduleClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleClusterConfig)(nil)).Elem()
}

func (i MonitoringScheduleClusterConfigArgs) ToMonitoringScheduleClusterConfigOutput() MonitoringScheduleClusterConfigOutput {
	return i.ToMonitoringScheduleClusterConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleClusterConfigArgs) ToMonitoringScheduleClusterConfigOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleClusterConfigOutput)
}

func (i MonitoringScheduleClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleClusterConfig] {
	return pulumix.Output[MonitoringScheduleClusterConfig]{
		OutputState: i.ToMonitoringScheduleClusterConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleClusterConfigArgs) ToMonitoringScheduleClusterConfigPtrOutput() MonitoringScheduleClusterConfigPtrOutput {
	return i.ToMonitoringScheduleClusterConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleClusterConfigArgs) ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleClusterConfigOutput).ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleClusterConfigPtrInput is an input type that accepts MonitoringScheduleClusterConfigArgs, MonitoringScheduleClusterConfigPtr and MonitoringScheduleClusterConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleClusterConfigPtrInput` via:
//
//	        MonitoringScheduleClusterConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleClusterConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleClusterConfigPtrOutput() MonitoringScheduleClusterConfigPtrOutput
	ToMonitoringScheduleClusterConfigPtrOutputWithContext(context.Context) MonitoringScheduleClusterConfigPtrOutput
}

type monitoringScheduleClusterConfigPtrType MonitoringScheduleClusterConfigArgs

func MonitoringScheduleClusterConfigPtr(v *MonitoringScheduleClusterConfigArgs) MonitoringScheduleClusterConfigPtrInput {
	return (*monitoringScheduleClusterConfigPtrType)(v)
}

func (*monitoringScheduleClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleClusterConfig)(nil)).Elem()
}

func (i *monitoringScheduleClusterConfigPtrType) ToMonitoringScheduleClusterConfigPtrOutput() MonitoringScheduleClusterConfigPtrOutput {
	return i.ToMonitoringScheduleClusterConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleClusterConfigPtrType) ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleClusterConfigPtrOutput)
}

func (i *monitoringScheduleClusterConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleClusterConfig] {
	return pulumix.Output[*MonitoringScheduleClusterConfig]{
		OutputState: i.ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Configuration for the cluster used to run model monitoring jobs.
type MonitoringScheduleClusterConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleClusterConfig)(nil)).Elem()
}

func (o MonitoringScheduleClusterConfigOutput) ToMonitoringScheduleClusterConfigOutput() MonitoringScheduleClusterConfigOutput {
	return o
}

func (o MonitoringScheduleClusterConfigOutput) ToMonitoringScheduleClusterConfigOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigOutput {
	return o
}

func (o MonitoringScheduleClusterConfigOutput) ToMonitoringScheduleClusterConfigPtrOutput() MonitoringScheduleClusterConfigPtrOutput {
	return o.ToMonitoringScheduleClusterConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleClusterConfigOutput) ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleClusterConfig) *MonitoringScheduleClusterConfig {
		return &v
	}).(MonitoringScheduleClusterConfigPtrOutput)
}

func (o MonitoringScheduleClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleClusterConfig] {
	return pulumix.Output[MonitoringScheduleClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o MonitoringScheduleClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v MonitoringScheduleClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The ML compute instance type for the processing job.
func (o MonitoringScheduleClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o MonitoringScheduleClusterConfigOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleClusterConfig) *string { return v.VolumeKmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o MonitoringScheduleClusterConfigOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v MonitoringScheduleClusterConfig) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

type MonitoringScheduleClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleClusterConfig)(nil)).Elem()
}

func (o MonitoringScheduleClusterConfigPtrOutput) ToMonitoringScheduleClusterConfigPtrOutput() MonitoringScheduleClusterConfigPtrOutput {
	return o
}

func (o MonitoringScheduleClusterConfigPtrOutput) ToMonitoringScheduleClusterConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleClusterConfigPtrOutput {
	return o
}

func (o MonitoringScheduleClusterConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleClusterConfig] {
	return pulumix.Output[*MonitoringScheduleClusterConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleClusterConfigPtrOutput) Elem() MonitoringScheduleClusterConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleClusterConfig) MonitoringScheduleClusterConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleClusterConfig
		return ret
	}).(MonitoringScheduleClusterConfigOutput)
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
func (o MonitoringScheduleClusterConfigPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleClusterConfig) *int {
		if v == nil {
			return nil
		}
		return &v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// The ML compute instance type for the processing job.
func (o MonitoringScheduleClusterConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o MonitoringScheduleClusterConfigPtrOutput) VolumeKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.VolumeKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o MonitoringScheduleClusterConfigPtrOutput) VolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleClusterConfig) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

// The configuration object that specifies the monitoring schedule and defines the monitoring job.
type MonitoringScheduleConfig struct {
	MonitoringJobDefinition *MonitoringScheduleMonitoringJobDefinition `pulumi:"monitoringJobDefinition"`
	// Name of the job definition
	MonitoringJobDefinitionName *string                           `pulumi:"monitoringJobDefinitionName"`
	MonitoringType              *MonitoringScheduleMonitoringType `pulumi:"monitoringType"`
	ScheduleConfig              *MonitoringScheduleScheduleConfig `pulumi:"scheduleConfig"`
}

// MonitoringScheduleConfigInput is an input type that accepts MonitoringScheduleConfigArgs and MonitoringScheduleConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleConfigInput` via:
//
//	MonitoringScheduleConfigArgs{...}
type MonitoringScheduleConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleConfigOutput() MonitoringScheduleConfigOutput
	ToMonitoringScheduleConfigOutputWithContext(context.Context) MonitoringScheduleConfigOutput
}

// The configuration object that specifies the monitoring schedule and defines the monitoring job.
type MonitoringScheduleConfigArgs struct {
	MonitoringJobDefinition MonitoringScheduleMonitoringJobDefinitionPtrInput `pulumi:"monitoringJobDefinition"`
	// Name of the job definition
	MonitoringJobDefinitionName pulumi.StringPtrInput                    `pulumi:"monitoringJobDefinitionName"`
	MonitoringType              MonitoringScheduleMonitoringTypePtrInput `pulumi:"monitoringType"`
	ScheduleConfig              MonitoringScheduleScheduleConfigPtrInput `pulumi:"scheduleConfig"`
}

func (MonitoringScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleConfig)(nil)).Elem()
}

func (i MonitoringScheduleConfigArgs) ToMonitoringScheduleConfigOutput() MonitoringScheduleConfigOutput {
	return i.ToMonitoringScheduleConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleConfigArgs) ToMonitoringScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleConfigOutput)
}

func (i MonitoringScheduleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleConfig] {
	return pulumix.Output[MonitoringScheduleConfig]{
		OutputState: i.ToMonitoringScheduleConfigOutputWithContext(ctx).OutputState,
	}
}

// The configuration object that specifies the monitoring schedule and defines the monitoring job.
type MonitoringScheduleConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleConfigOutput) ToMonitoringScheduleConfigOutput() MonitoringScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleConfigOutput) ToMonitoringScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleConfig] {
	return pulumix.Output[MonitoringScheduleConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleConfigOutput) MonitoringJobDefinition() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleConfig) *MonitoringScheduleMonitoringJobDefinition {
		return v.MonitoringJobDefinition
	}).(MonitoringScheduleMonitoringJobDefinitionPtrOutput)
}

// Name of the job definition
func (o MonitoringScheduleConfigOutput) MonitoringJobDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleConfig) *string { return v.MonitoringJobDefinitionName }).(pulumi.StringPtrOutput)
}

func (o MonitoringScheduleConfigOutput) MonitoringType() MonitoringScheduleMonitoringTypePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleConfig) *MonitoringScheduleMonitoringType { return v.MonitoringType }).(MonitoringScheduleMonitoringTypePtrOutput)
}

func (o MonitoringScheduleConfigOutput) ScheduleConfig() MonitoringScheduleScheduleConfigPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleConfig) *MonitoringScheduleScheduleConfig { return v.ScheduleConfig }).(MonitoringScheduleScheduleConfigPtrOutput)
}

type MonitoringScheduleConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleConfigPtrOutput) ToMonitoringScheduleConfigPtrOutput() MonitoringScheduleConfigPtrOutput {
	return o
}

func (o MonitoringScheduleConfigPtrOutput) ToMonitoringScheduleConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleConfigPtrOutput {
	return o
}

func (o MonitoringScheduleConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleConfig] {
	return pulumix.Output[*MonitoringScheduleConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleConfigPtrOutput) Elem() MonitoringScheduleConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleConfig) MonitoringScheduleConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleConfig
		return ret
	}).(MonitoringScheduleConfigOutput)
}

func (o MonitoringScheduleConfigPtrOutput) MonitoringJobDefinition() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleConfig) *MonitoringScheduleMonitoringJobDefinition {
		if v == nil {
			return nil
		}
		return v.MonitoringJobDefinition
	}).(MonitoringScheduleMonitoringJobDefinitionPtrOutput)
}

// Name of the job definition
func (o MonitoringScheduleConfigPtrOutput) MonitoringJobDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringJobDefinitionName
	}).(pulumi.StringPtrOutput)
}

func (o MonitoringScheduleConfigPtrOutput) MonitoringType() MonitoringScheduleMonitoringTypePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleConfig) *MonitoringScheduleMonitoringType {
		if v == nil {
			return nil
		}
		return v.MonitoringType
	}).(MonitoringScheduleMonitoringTypePtrOutput)
}

func (o MonitoringScheduleConfigPtrOutput) ScheduleConfig() MonitoringScheduleScheduleConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleConfig) *MonitoringScheduleScheduleConfig {
		if v == nil {
			return nil
		}
		return v.ScheduleConfig
	}).(MonitoringScheduleScheduleConfigPtrOutput)
}

// The baseline constraints resource for a monitoring job.
type MonitoringScheduleConstraintsResource struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// MonitoringScheduleConstraintsResourceInput is an input type that accepts MonitoringScheduleConstraintsResourceArgs and MonitoringScheduleConstraintsResourceOutput values.
// You can construct a concrete instance of `MonitoringScheduleConstraintsResourceInput` via:
//
//	MonitoringScheduleConstraintsResourceArgs{...}
type MonitoringScheduleConstraintsResourceInput interface {
	pulumi.Input

	ToMonitoringScheduleConstraintsResourceOutput() MonitoringScheduleConstraintsResourceOutput
	ToMonitoringScheduleConstraintsResourceOutputWithContext(context.Context) MonitoringScheduleConstraintsResourceOutput
}

// The baseline constraints resource for a monitoring job.
type MonitoringScheduleConstraintsResourceArgs struct {
	// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (MonitoringScheduleConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleConstraintsResource)(nil)).Elem()
}

func (i MonitoringScheduleConstraintsResourceArgs) ToMonitoringScheduleConstraintsResourceOutput() MonitoringScheduleConstraintsResourceOutput {
	return i.ToMonitoringScheduleConstraintsResourceOutputWithContext(context.Background())
}

func (i MonitoringScheduleConstraintsResourceArgs) ToMonitoringScheduleConstraintsResourceOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleConstraintsResourceOutput)
}

func (i MonitoringScheduleConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleConstraintsResource] {
	return pulumix.Output[MonitoringScheduleConstraintsResource]{
		OutputState: i.ToMonitoringScheduleConstraintsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleConstraintsResourceArgs) ToMonitoringScheduleConstraintsResourcePtrOutput() MonitoringScheduleConstraintsResourcePtrOutput {
	return i.ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleConstraintsResourceArgs) ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleConstraintsResourceOutput).ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx)
}

// MonitoringScheduleConstraintsResourcePtrInput is an input type that accepts MonitoringScheduleConstraintsResourceArgs, MonitoringScheduleConstraintsResourcePtr and MonitoringScheduleConstraintsResourcePtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleConstraintsResourcePtrInput` via:
//
//	        MonitoringScheduleConstraintsResourceArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleConstraintsResourcePtrInput interface {
	pulumi.Input

	ToMonitoringScheduleConstraintsResourcePtrOutput() MonitoringScheduleConstraintsResourcePtrOutput
	ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(context.Context) MonitoringScheduleConstraintsResourcePtrOutput
}

type monitoringScheduleConstraintsResourcePtrType MonitoringScheduleConstraintsResourceArgs

func MonitoringScheduleConstraintsResourcePtr(v *MonitoringScheduleConstraintsResourceArgs) MonitoringScheduleConstraintsResourcePtrInput {
	return (*monitoringScheduleConstraintsResourcePtrType)(v)
}

func (*monitoringScheduleConstraintsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleConstraintsResource)(nil)).Elem()
}

func (i *monitoringScheduleConstraintsResourcePtrType) ToMonitoringScheduleConstraintsResourcePtrOutput() MonitoringScheduleConstraintsResourcePtrOutput {
	return i.ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleConstraintsResourcePtrType) ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleConstraintsResourcePtrOutput)
}

func (i *monitoringScheduleConstraintsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleConstraintsResource] {
	return pulumix.Output[*MonitoringScheduleConstraintsResource]{
		OutputState: i.ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline constraints resource for a monitoring job.
type MonitoringScheduleConstraintsResourceOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleConstraintsResource)(nil)).Elem()
}

func (o MonitoringScheduleConstraintsResourceOutput) ToMonitoringScheduleConstraintsResourceOutput() MonitoringScheduleConstraintsResourceOutput {
	return o
}

func (o MonitoringScheduleConstraintsResourceOutput) ToMonitoringScheduleConstraintsResourceOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourceOutput {
	return o
}

func (o MonitoringScheduleConstraintsResourceOutput) ToMonitoringScheduleConstraintsResourcePtrOutput() MonitoringScheduleConstraintsResourcePtrOutput {
	return o.ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleConstraintsResourceOutput) ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleConstraintsResource) *MonitoringScheduleConstraintsResource {
		return &v
	}).(MonitoringScheduleConstraintsResourcePtrOutput)
}

func (o MonitoringScheduleConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleConstraintsResource] {
	return pulumix.Output[MonitoringScheduleConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o MonitoringScheduleConstraintsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleConstraintsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type MonitoringScheduleConstraintsResourcePtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleConstraintsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleConstraintsResource)(nil)).Elem()
}

func (o MonitoringScheduleConstraintsResourcePtrOutput) ToMonitoringScheduleConstraintsResourcePtrOutput() MonitoringScheduleConstraintsResourcePtrOutput {
	return o
}

func (o MonitoringScheduleConstraintsResourcePtrOutput) ToMonitoringScheduleConstraintsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleConstraintsResourcePtrOutput {
	return o
}

func (o MonitoringScheduleConstraintsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleConstraintsResource] {
	return pulumix.Output[*MonitoringScheduleConstraintsResource]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleConstraintsResourcePtrOutput) Elem() MonitoringScheduleConstraintsResourceOutput {
	return o.ApplyT(func(v *MonitoringScheduleConstraintsResource) MonitoringScheduleConstraintsResource {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleConstraintsResource
		return ret
	}).(MonitoringScheduleConstraintsResourceOutput)
}

// The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
func (o MonitoringScheduleConstraintsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleConstraintsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// The CSV format
type MonitoringScheduleCsv struct {
	// A boolean flag indicating if given CSV has header
	Header *bool `pulumi:"header"`
}

// MonitoringScheduleCsvInput is an input type that accepts MonitoringScheduleCsvArgs and MonitoringScheduleCsvOutput values.
// You can construct a concrete instance of `MonitoringScheduleCsvInput` via:
//
//	MonitoringScheduleCsvArgs{...}
type MonitoringScheduleCsvInput interface {
	pulumi.Input

	ToMonitoringScheduleCsvOutput() MonitoringScheduleCsvOutput
	ToMonitoringScheduleCsvOutputWithContext(context.Context) MonitoringScheduleCsvOutput
}

// The CSV format
type MonitoringScheduleCsvArgs struct {
	// A boolean flag indicating if given CSV has header
	Header pulumi.BoolPtrInput `pulumi:"header"`
}

func (MonitoringScheduleCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleCsv)(nil)).Elem()
}

func (i MonitoringScheduleCsvArgs) ToMonitoringScheduleCsvOutput() MonitoringScheduleCsvOutput {
	return i.ToMonitoringScheduleCsvOutputWithContext(context.Background())
}

func (i MonitoringScheduleCsvArgs) ToMonitoringScheduleCsvOutputWithContext(ctx context.Context) MonitoringScheduleCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleCsvOutput)
}

func (i MonitoringScheduleCsvArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleCsv] {
	return pulumix.Output[MonitoringScheduleCsv]{
		OutputState: i.ToMonitoringScheduleCsvOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleCsvArgs) ToMonitoringScheduleCsvPtrOutput() MonitoringScheduleCsvPtrOutput {
	return i.ToMonitoringScheduleCsvPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleCsvArgs) ToMonitoringScheduleCsvPtrOutputWithContext(ctx context.Context) MonitoringScheduleCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleCsvOutput).ToMonitoringScheduleCsvPtrOutputWithContext(ctx)
}

// MonitoringScheduleCsvPtrInput is an input type that accepts MonitoringScheduleCsvArgs, MonitoringScheduleCsvPtr and MonitoringScheduleCsvPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleCsvPtrInput` via:
//
//	        MonitoringScheduleCsvArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleCsvPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleCsvPtrOutput() MonitoringScheduleCsvPtrOutput
	ToMonitoringScheduleCsvPtrOutputWithContext(context.Context) MonitoringScheduleCsvPtrOutput
}

type monitoringScheduleCsvPtrType MonitoringScheduleCsvArgs

func MonitoringScheduleCsvPtr(v *MonitoringScheduleCsvArgs) MonitoringScheduleCsvPtrInput {
	return (*monitoringScheduleCsvPtrType)(v)
}

func (*monitoringScheduleCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleCsv)(nil)).Elem()
}

func (i *monitoringScheduleCsvPtrType) ToMonitoringScheduleCsvPtrOutput() MonitoringScheduleCsvPtrOutput {
	return i.ToMonitoringScheduleCsvPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleCsvPtrType) ToMonitoringScheduleCsvPtrOutputWithContext(ctx context.Context) MonitoringScheduleCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleCsvPtrOutput)
}

func (i *monitoringScheduleCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleCsv] {
	return pulumix.Output[*MonitoringScheduleCsv]{
		OutputState: i.ToMonitoringScheduleCsvPtrOutputWithContext(ctx).OutputState,
	}
}

// The CSV format
type MonitoringScheduleCsvOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleCsv)(nil)).Elem()
}

func (o MonitoringScheduleCsvOutput) ToMonitoringScheduleCsvOutput() MonitoringScheduleCsvOutput {
	return o
}

func (o MonitoringScheduleCsvOutput) ToMonitoringScheduleCsvOutputWithContext(ctx context.Context) MonitoringScheduleCsvOutput {
	return o
}

func (o MonitoringScheduleCsvOutput) ToMonitoringScheduleCsvPtrOutput() MonitoringScheduleCsvPtrOutput {
	return o.ToMonitoringScheduleCsvPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleCsvOutput) ToMonitoringScheduleCsvPtrOutputWithContext(ctx context.Context) MonitoringScheduleCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleCsv) *MonitoringScheduleCsv {
		return &v
	}).(MonitoringScheduleCsvPtrOutput)
}

func (o MonitoringScheduleCsvOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleCsv] {
	return pulumix.Output[MonitoringScheduleCsv]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if given CSV has header
func (o MonitoringScheduleCsvOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleCsv) *bool { return v.Header }).(pulumi.BoolPtrOutput)
}

type MonitoringScheduleCsvPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleCsv)(nil)).Elem()
}

func (o MonitoringScheduleCsvPtrOutput) ToMonitoringScheduleCsvPtrOutput() MonitoringScheduleCsvPtrOutput {
	return o
}

func (o MonitoringScheduleCsvPtrOutput) ToMonitoringScheduleCsvPtrOutputWithContext(ctx context.Context) MonitoringScheduleCsvPtrOutput {
	return o
}

func (o MonitoringScheduleCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleCsv] {
	return pulumix.Output[*MonitoringScheduleCsv]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleCsvPtrOutput) Elem() MonitoringScheduleCsvOutput {
	return o.ApplyT(func(v *MonitoringScheduleCsv) MonitoringScheduleCsv {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleCsv
		return ret
	}).(MonitoringScheduleCsvOutput)
}

// A boolean flag indicating if given CSV has header
func (o MonitoringScheduleCsvPtrOutput) Header() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleCsv) *bool {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.BoolPtrOutput)
}

// The dataset format of the data to monitor
type MonitoringScheduleDatasetFormat struct {
	Csv     *MonitoringScheduleCsv  `pulumi:"csv"`
	Json    *MonitoringScheduleJson `pulumi:"json"`
	Parquet *bool                   `pulumi:"parquet"`
}

// MonitoringScheduleDatasetFormatInput is an input type that accepts MonitoringScheduleDatasetFormatArgs and MonitoringScheduleDatasetFormatOutput values.
// You can construct a concrete instance of `MonitoringScheduleDatasetFormatInput` via:
//
//	MonitoringScheduleDatasetFormatArgs{...}
type MonitoringScheduleDatasetFormatInput interface {
	pulumi.Input

	ToMonitoringScheduleDatasetFormatOutput() MonitoringScheduleDatasetFormatOutput
	ToMonitoringScheduleDatasetFormatOutputWithContext(context.Context) MonitoringScheduleDatasetFormatOutput
}

// The dataset format of the data to monitor
type MonitoringScheduleDatasetFormatArgs struct {
	Csv     MonitoringScheduleCsvPtrInput  `pulumi:"csv"`
	Json    MonitoringScheduleJsonPtrInput `pulumi:"json"`
	Parquet pulumi.BoolPtrInput            `pulumi:"parquet"`
}

func (MonitoringScheduleDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleDatasetFormat)(nil)).Elem()
}

func (i MonitoringScheduleDatasetFormatArgs) ToMonitoringScheduleDatasetFormatOutput() MonitoringScheduleDatasetFormatOutput {
	return i.ToMonitoringScheduleDatasetFormatOutputWithContext(context.Background())
}

func (i MonitoringScheduleDatasetFormatArgs) ToMonitoringScheduleDatasetFormatOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleDatasetFormatOutput)
}

func (i MonitoringScheduleDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleDatasetFormat] {
	return pulumix.Output[MonitoringScheduleDatasetFormat]{
		OutputState: i.ToMonitoringScheduleDatasetFormatOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleDatasetFormatArgs) ToMonitoringScheduleDatasetFormatPtrOutput() MonitoringScheduleDatasetFormatPtrOutput {
	return i.ToMonitoringScheduleDatasetFormatPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleDatasetFormatArgs) ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleDatasetFormatOutput).ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx)
}

// MonitoringScheduleDatasetFormatPtrInput is an input type that accepts MonitoringScheduleDatasetFormatArgs, MonitoringScheduleDatasetFormatPtr and MonitoringScheduleDatasetFormatPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleDatasetFormatPtrInput` via:
//
//	        MonitoringScheduleDatasetFormatArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleDatasetFormatPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleDatasetFormatPtrOutput() MonitoringScheduleDatasetFormatPtrOutput
	ToMonitoringScheduleDatasetFormatPtrOutputWithContext(context.Context) MonitoringScheduleDatasetFormatPtrOutput
}

type monitoringScheduleDatasetFormatPtrType MonitoringScheduleDatasetFormatArgs

func MonitoringScheduleDatasetFormatPtr(v *MonitoringScheduleDatasetFormatArgs) MonitoringScheduleDatasetFormatPtrInput {
	return (*monitoringScheduleDatasetFormatPtrType)(v)
}

func (*monitoringScheduleDatasetFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleDatasetFormat)(nil)).Elem()
}

func (i *monitoringScheduleDatasetFormatPtrType) ToMonitoringScheduleDatasetFormatPtrOutput() MonitoringScheduleDatasetFormatPtrOutput {
	return i.ToMonitoringScheduleDatasetFormatPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleDatasetFormatPtrType) ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleDatasetFormatPtrOutput)
}

func (i *monitoringScheduleDatasetFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleDatasetFormat] {
	return pulumix.Output[*MonitoringScheduleDatasetFormat]{
		OutputState: i.ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The dataset format of the data to monitor
type MonitoringScheduleDatasetFormatOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleDatasetFormat)(nil)).Elem()
}

func (o MonitoringScheduleDatasetFormatOutput) ToMonitoringScheduleDatasetFormatOutput() MonitoringScheduleDatasetFormatOutput {
	return o
}

func (o MonitoringScheduleDatasetFormatOutput) ToMonitoringScheduleDatasetFormatOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatOutput {
	return o
}

func (o MonitoringScheduleDatasetFormatOutput) ToMonitoringScheduleDatasetFormatPtrOutput() MonitoringScheduleDatasetFormatPtrOutput {
	return o.ToMonitoringScheduleDatasetFormatPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleDatasetFormatOutput) ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleDatasetFormat) *MonitoringScheduleDatasetFormat {
		return &v
	}).(MonitoringScheduleDatasetFormatPtrOutput)
}

func (o MonitoringScheduleDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleDatasetFormat] {
	return pulumix.Output[MonitoringScheduleDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleDatasetFormatOutput) Csv() MonitoringScheduleCsvPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleDatasetFormat) *MonitoringScheduleCsv { return v.Csv }).(MonitoringScheduleCsvPtrOutput)
}

func (o MonitoringScheduleDatasetFormatOutput) Json() MonitoringScheduleJsonPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleDatasetFormat) *MonitoringScheduleJson { return v.Json }).(MonitoringScheduleJsonPtrOutput)
}

func (o MonitoringScheduleDatasetFormatOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleDatasetFormat) *bool { return v.Parquet }).(pulumi.BoolPtrOutput)
}

type MonitoringScheduleDatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleDatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleDatasetFormat)(nil)).Elem()
}

func (o MonitoringScheduleDatasetFormatPtrOutput) ToMonitoringScheduleDatasetFormatPtrOutput() MonitoringScheduleDatasetFormatPtrOutput {
	return o
}

func (o MonitoringScheduleDatasetFormatPtrOutput) ToMonitoringScheduleDatasetFormatPtrOutputWithContext(ctx context.Context) MonitoringScheduleDatasetFormatPtrOutput {
	return o
}

func (o MonitoringScheduleDatasetFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleDatasetFormat] {
	return pulumix.Output[*MonitoringScheduleDatasetFormat]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleDatasetFormatPtrOutput) Elem() MonitoringScheduleDatasetFormatOutput {
	return o.ApplyT(func(v *MonitoringScheduleDatasetFormat) MonitoringScheduleDatasetFormat {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleDatasetFormat
		return ret
	}).(MonitoringScheduleDatasetFormatOutput)
}

func (o MonitoringScheduleDatasetFormatPtrOutput) Csv() MonitoringScheduleCsvPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleDatasetFormat) *MonitoringScheduleCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(MonitoringScheduleCsvPtrOutput)
}

func (o MonitoringScheduleDatasetFormatPtrOutput) Json() MonitoringScheduleJsonPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleDatasetFormat) *MonitoringScheduleJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(MonitoringScheduleJsonPtrOutput)
}

func (o MonitoringScheduleDatasetFormatPtrOutput) Parquet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleDatasetFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Parquet
	}).(pulumi.BoolPtrOutput)
}

// The endpoint for a monitoring job.
type MonitoringScheduleEndpointInput struct {
	EndpointName string `pulumi:"endpointName"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute *string `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType *MonitoringScheduleEndpointInputS3DataDistributionType `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode *MonitoringScheduleEndpointInputS3InputMode `pulumi:"s3InputMode"`
}

// MonitoringScheduleEndpointInputInput is an input type that accepts MonitoringScheduleEndpointInputArgs and MonitoringScheduleEndpointInputOutput values.
// You can construct a concrete instance of `MonitoringScheduleEndpointInputInput` via:
//
//	MonitoringScheduleEndpointInputArgs{...}
type MonitoringScheduleEndpointInputInput interface {
	pulumi.Input

	ToMonitoringScheduleEndpointInputOutput() MonitoringScheduleEndpointInputOutput
	ToMonitoringScheduleEndpointInputOutputWithContext(context.Context) MonitoringScheduleEndpointInputOutput
}

// The endpoint for a monitoring job.
type MonitoringScheduleEndpointInputArgs struct {
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Indexes or names of the features to be excluded from analysis
	ExcludeFeaturesAttribute pulumi.StringPtrInput `pulumi:"excludeFeaturesAttribute"`
	// Path to the filesystem where the endpoint data is available to the container.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
	S3DataDistributionType MonitoringScheduleEndpointInputS3DataDistributionTypePtrInput `pulumi:"s3DataDistributionType"`
	// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
	S3InputMode MonitoringScheduleEndpointInputS3InputModePtrInput `pulumi:"s3InputMode"`
}

func (MonitoringScheduleEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleEndpointInput)(nil)).Elem()
}

func (i MonitoringScheduleEndpointInputArgs) ToMonitoringScheduleEndpointInputOutput() MonitoringScheduleEndpointInputOutput {
	return i.ToMonitoringScheduleEndpointInputOutputWithContext(context.Background())
}

func (i MonitoringScheduleEndpointInputArgs) ToMonitoringScheduleEndpointInputOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleEndpointInputOutput)
}

func (i MonitoringScheduleEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleEndpointInput] {
	return pulumix.Output[MonitoringScheduleEndpointInput]{
		OutputState: i.ToMonitoringScheduleEndpointInputOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleEndpointInputArgs) ToMonitoringScheduleEndpointInputPtrOutput() MonitoringScheduleEndpointInputPtrOutput {
	return i.ToMonitoringScheduleEndpointInputPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleEndpointInputArgs) ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleEndpointInputOutput).ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx)
}

// MonitoringScheduleEndpointInputPtrInput is an input type that accepts MonitoringScheduleEndpointInputArgs, MonitoringScheduleEndpointInputPtr and MonitoringScheduleEndpointInputPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleEndpointInputPtrInput` via:
//
//	        MonitoringScheduleEndpointInputArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleEndpointInputPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleEndpointInputPtrOutput() MonitoringScheduleEndpointInputPtrOutput
	ToMonitoringScheduleEndpointInputPtrOutputWithContext(context.Context) MonitoringScheduleEndpointInputPtrOutput
}

type monitoringScheduleEndpointInputPtrType MonitoringScheduleEndpointInputArgs

func MonitoringScheduleEndpointInputPtr(v *MonitoringScheduleEndpointInputArgs) MonitoringScheduleEndpointInputPtrInput {
	return (*monitoringScheduleEndpointInputPtrType)(v)
}

func (*monitoringScheduleEndpointInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleEndpointInput)(nil)).Elem()
}

func (i *monitoringScheduleEndpointInputPtrType) ToMonitoringScheduleEndpointInputPtrOutput() MonitoringScheduleEndpointInputPtrOutput {
	return i.ToMonitoringScheduleEndpointInputPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleEndpointInputPtrType) ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleEndpointInputPtrOutput)
}

func (i *monitoringScheduleEndpointInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleEndpointInput] {
	return pulumix.Output[*MonitoringScheduleEndpointInput]{
		OutputState: i.ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The endpoint for a monitoring job.
type MonitoringScheduleEndpointInputOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleEndpointInput)(nil)).Elem()
}

func (o MonitoringScheduleEndpointInputOutput) ToMonitoringScheduleEndpointInputOutput() MonitoringScheduleEndpointInputOutput {
	return o
}

func (o MonitoringScheduleEndpointInputOutput) ToMonitoringScheduleEndpointInputOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputOutput {
	return o
}

func (o MonitoringScheduleEndpointInputOutput) ToMonitoringScheduleEndpointInputPtrOutput() MonitoringScheduleEndpointInputPtrOutput {
	return o.ToMonitoringScheduleEndpointInputPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleEndpointInputOutput) ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleEndpointInput) *MonitoringScheduleEndpointInput {
		return &v
	}).(MonitoringScheduleEndpointInputPtrOutput)
}

func (o MonitoringScheduleEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleEndpointInput] {
	return pulumix.Output[MonitoringScheduleEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleEndpointInputOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleEndpointInput) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o MonitoringScheduleEndpointInputOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleEndpointInput) *string { return v.ExcludeFeaturesAttribute }).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o MonitoringScheduleEndpointInputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleEndpointInput) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o MonitoringScheduleEndpointInputOutput) S3DataDistributionType() MonitoringScheduleEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleEndpointInput) *MonitoringScheduleEndpointInputS3DataDistributionType {
		return v.S3DataDistributionType
	}).(MonitoringScheduleEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o MonitoringScheduleEndpointInputOutput) S3InputMode() MonitoringScheduleEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleEndpointInput) *MonitoringScheduleEndpointInputS3InputMode {
		return v.S3InputMode
	}).(MonitoringScheduleEndpointInputS3InputModePtrOutput)
}

type MonitoringScheduleEndpointInputPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleEndpointInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleEndpointInput)(nil)).Elem()
}

func (o MonitoringScheduleEndpointInputPtrOutput) ToMonitoringScheduleEndpointInputPtrOutput() MonitoringScheduleEndpointInputPtrOutput {
	return o
}

func (o MonitoringScheduleEndpointInputPtrOutput) ToMonitoringScheduleEndpointInputPtrOutputWithContext(ctx context.Context) MonitoringScheduleEndpointInputPtrOutput {
	return o
}

func (o MonitoringScheduleEndpointInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleEndpointInput] {
	return pulumix.Output[*MonitoringScheduleEndpointInput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleEndpointInputPtrOutput) Elem() MonitoringScheduleEndpointInputOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) MonitoringScheduleEndpointInput {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleEndpointInput
		return ret
	}).(MonitoringScheduleEndpointInputOutput)
}

func (o MonitoringScheduleEndpointInputPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Indexes or names of the features to be excluded from analysis
func (o MonitoringScheduleEndpointInputPtrOutput) ExcludeFeaturesAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeFeaturesAttribute
	}).(pulumi.StringPtrOutput)
}

// Path to the filesystem where the endpoint data is available to the container.
func (o MonitoringScheduleEndpointInputPtrOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) *string {
		if v == nil {
			return nil
		}
		return &v.LocalPath
	}).(pulumi.StringPtrOutput)
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
func (o MonitoringScheduleEndpointInputPtrOutput) S3DataDistributionType() MonitoringScheduleEndpointInputS3DataDistributionTypePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) *MonitoringScheduleEndpointInputS3DataDistributionType {
		if v == nil {
			return nil
		}
		return v.S3DataDistributionType
	}).(MonitoringScheduleEndpointInputS3DataDistributionTypePtrOutput)
}

// Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
func (o MonitoringScheduleEndpointInputPtrOutput) S3InputMode() MonitoringScheduleEndpointInputS3InputModePtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleEndpointInput) *MonitoringScheduleEndpointInputS3InputMode {
		if v == nil {
			return nil
		}
		return v.S3InputMode
	}).(MonitoringScheduleEndpointInputS3InputModePtrOutput)
}

// The Json format
type MonitoringScheduleJson struct {
	// A boolean flag indicating if it is JSON line format
	Line *bool `pulumi:"line"`
}

// MonitoringScheduleJsonInput is an input type that accepts MonitoringScheduleJsonArgs and MonitoringScheduleJsonOutput values.
// You can construct a concrete instance of `MonitoringScheduleJsonInput` via:
//
//	MonitoringScheduleJsonArgs{...}
type MonitoringScheduleJsonInput interface {
	pulumi.Input

	ToMonitoringScheduleJsonOutput() MonitoringScheduleJsonOutput
	ToMonitoringScheduleJsonOutputWithContext(context.Context) MonitoringScheduleJsonOutput
}

// The Json format
type MonitoringScheduleJsonArgs struct {
	// A boolean flag indicating if it is JSON line format
	Line pulumi.BoolPtrInput `pulumi:"line"`
}

func (MonitoringScheduleJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleJson)(nil)).Elem()
}

func (i MonitoringScheduleJsonArgs) ToMonitoringScheduleJsonOutput() MonitoringScheduleJsonOutput {
	return i.ToMonitoringScheduleJsonOutputWithContext(context.Background())
}

func (i MonitoringScheduleJsonArgs) ToMonitoringScheduleJsonOutputWithContext(ctx context.Context) MonitoringScheduleJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleJsonOutput)
}

func (i MonitoringScheduleJsonArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleJson] {
	return pulumix.Output[MonitoringScheduleJson]{
		OutputState: i.ToMonitoringScheduleJsonOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleJsonArgs) ToMonitoringScheduleJsonPtrOutput() MonitoringScheduleJsonPtrOutput {
	return i.ToMonitoringScheduleJsonPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleJsonArgs) ToMonitoringScheduleJsonPtrOutputWithContext(ctx context.Context) MonitoringScheduleJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleJsonOutput).ToMonitoringScheduleJsonPtrOutputWithContext(ctx)
}

// MonitoringScheduleJsonPtrInput is an input type that accepts MonitoringScheduleJsonArgs, MonitoringScheduleJsonPtr and MonitoringScheduleJsonPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleJsonPtrInput` via:
//
//	        MonitoringScheduleJsonArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleJsonPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleJsonPtrOutput() MonitoringScheduleJsonPtrOutput
	ToMonitoringScheduleJsonPtrOutputWithContext(context.Context) MonitoringScheduleJsonPtrOutput
}

type monitoringScheduleJsonPtrType MonitoringScheduleJsonArgs

func MonitoringScheduleJsonPtr(v *MonitoringScheduleJsonArgs) MonitoringScheduleJsonPtrInput {
	return (*monitoringScheduleJsonPtrType)(v)
}

func (*monitoringScheduleJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleJson)(nil)).Elem()
}

func (i *monitoringScheduleJsonPtrType) ToMonitoringScheduleJsonPtrOutput() MonitoringScheduleJsonPtrOutput {
	return i.ToMonitoringScheduleJsonPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleJsonPtrType) ToMonitoringScheduleJsonPtrOutputWithContext(ctx context.Context) MonitoringScheduleJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleJsonPtrOutput)
}

func (i *monitoringScheduleJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleJson] {
	return pulumix.Output[*MonitoringScheduleJson]{
		OutputState: i.ToMonitoringScheduleJsonPtrOutputWithContext(ctx).OutputState,
	}
}

// The Json format
type MonitoringScheduleJsonOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleJson)(nil)).Elem()
}

func (o MonitoringScheduleJsonOutput) ToMonitoringScheduleJsonOutput() MonitoringScheduleJsonOutput {
	return o
}

func (o MonitoringScheduleJsonOutput) ToMonitoringScheduleJsonOutputWithContext(ctx context.Context) MonitoringScheduleJsonOutput {
	return o
}

func (o MonitoringScheduleJsonOutput) ToMonitoringScheduleJsonPtrOutput() MonitoringScheduleJsonPtrOutput {
	return o.ToMonitoringScheduleJsonPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleJsonOutput) ToMonitoringScheduleJsonPtrOutputWithContext(ctx context.Context) MonitoringScheduleJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleJson) *MonitoringScheduleJson {
		return &v
	}).(MonitoringScheduleJsonPtrOutput)
}

func (o MonitoringScheduleJsonOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleJson] {
	return pulumix.Output[MonitoringScheduleJson]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating if it is JSON line format
func (o MonitoringScheduleJsonOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleJson) *bool { return v.Line }).(pulumi.BoolPtrOutput)
}

type MonitoringScheduleJsonPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleJson)(nil)).Elem()
}

func (o MonitoringScheduleJsonPtrOutput) ToMonitoringScheduleJsonPtrOutput() MonitoringScheduleJsonPtrOutput {
	return o
}

func (o MonitoringScheduleJsonPtrOutput) ToMonitoringScheduleJsonPtrOutputWithContext(ctx context.Context) MonitoringScheduleJsonPtrOutput {
	return o
}

func (o MonitoringScheduleJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleJson] {
	return pulumix.Output[*MonitoringScheduleJson]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleJsonPtrOutput) Elem() MonitoringScheduleJsonOutput {
	return o.ApplyT(func(v *MonitoringScheduleJson) MonitoringScheduleJson {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleJson
		return ret
	}).(MonitoringScheduleJsonOutput)
}

// A boolean flag indicating if it is JSON line format
func (o MonitoringScheduleJsonPtrOutput) Line() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleJson) *bool {
		if v == nil {
			return nil
		}
		return v.Line
	}).(pulumi.BoolPtrOutput)
}

// Container image configuration object for the monitoring job.
type MonitoringScheduleMonitoringAppSpecification struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments []string `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint []string `pulumi:"containerEntrypoint"`
	// The container image to be run by the monitoring job.
	ImageUri string `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri *string `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri *string `pulumi:"recordPreprocessorSourceUri"`
}

// MonitoringScheduleMonitoringAppSpecificationInput is an input type that accepts MonitoringScheduleMonitoringAppSpecificationArgs and MonitoringScheduleMonitoringAppSpecificationOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringAppSpecificationInput` via:
//
//	MonitoringScheduleMonitoringAppSpecificationArgs{...}
type MonitoringScheduleMonitoringAppSpecificationInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringAppSpecificationOutput() MonitoringScheduleMonitoringAppSpecificationOutput
	ToMonitoringScheduleMonitoringAppSpecificationOutputWithContext(context.Context) MonitoringScheduleMonitoringAppSpecificationOutput
}

// Container image configuration object for the monitoring job.
type MonitoringScheduleMonitoringAppSpecificationArgs struct {
	// An array of arguments for the container used to run the monitoring job.
	ContainerArguments pulumi.StringArrayInput `pulumi:"containerArguments"`
	// Specifies the entrypoint for a container used to run the monitoring job.
	ContainerEntrypoint pulumi.StringArrayInput `pulumi:"containerEntrypoint"`
	// The container image to be run by the monitoring job.
	ImageUri pulumi.StringInput `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri pulumi.StringPtrInput `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
	RecordPreprocessorSourceUri pulumi.StringPtrInput `pulumi:"recordPreprocessorSourceUri"`
}

func (MonitoringScheduleMonitoringAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringAppSpecification)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringAppSpecificationArgs) ToMonitoringScheduleMonitoringAppSpecificationOutput() MonitoringScheduleMonitoringAppSpecificationOutput {
	return i.ToMonitoringScheduleMonitoringAppSpecificationOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringAppSpecificationArgs) ToMonitoringScheduleMonitoringAppSpecificationOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringAppSpecificationOutput)
}

func (i MonitoringScheduleMonitoringAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringAppSpecification] {
	return pulumix.Output[MonitoringScheduleMonitoringAppSpecification]{
		OutputState: i.ToMonitoringScheduleMonitoringAppSpecificationOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleMonitoringAppSpecificationArgs) ToMonitoringScheduleMonitoringAppSpecificationPtrOutput() MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return i.ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringAppSpecificationArgs) ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringAppSpecificationOutput).ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx)
}

// MonitoringScheduleMonitoringAppSpecificationPtrInput is an input type that accepts MonitoringScheduleMonitoringAppSpecificationArgs, MonitoringScheduleMonitoringAppSpecificationPtr and MonitoringScheduleMonitoringAppSpecificationPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringAppSpecificationPtrInput` via:
//
//	        MonitoringScheduleMonitoringAppSpecificationArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleMonitoringAppSpecificationPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringAppSpecificationPtrOutput() MonitoringScheduleMonitoringAppSpecificationPtrOutput
	ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(context.Context) MonitoringScheduleMonitoringAppSpecificationPtrOutput
}

type monitoringScheduleMonitoringAppSpecificationPtrType MonitoringScheduleMonitoringAppSpecificationArgs

func MonitoringScheduleMonitoringAppSpecificationPtr(v *MonitoringScheduleMonitoringAppSpecificationArgs) MonitoringScheduleMonitoringAppSpecificationPtrInput {
	return (*monitoringScheduleMonitoringAppSpecificationPtrType)(v)
}

func (*monitoringScheduleMonitoringAppSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringAppSpecification)(nil)).Elem()
}

func (i *monitoringScheduleMonitoringAppSpecificationPtrType) ToMonitoringScheduleMonitoringAppSpecificationPtrOutput() MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return i.ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleMonitoringAppSpecificationPtrType) ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringAppSpecificationPtrOutput)
}

func (i *monitoringScheduleMonitoringAppSpecificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringAppSpecification] {
	return pulumix.Output[*MonitoringScheduleMonitoringAppSpecification]{
		OutputState: i.ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx).OutputState,
	}
}

// Container image configuration object for the monitoring job.
type MonitoringScheduleMonitoringAppSpecificationOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringAppSpecification)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringAppSpecificationOutput) ToMonitoringScheduleMonitoringAppSpecificationOutput() MonitoringScheduleMonitoringAppSpecificationOutput {
	return o
}

func (o MonitoringScheduleMonitoringAppSpecificationOutput) ToMonitoringScheduleMonitoringAppSpecificationOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationOutput {
	return o
}

func (o MonitoringScheduleMonitoringAppSpecificationOutput) ToMonitoringScheduleMonitoringAppSpecificationPtrOutput() MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return o.ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleMonitoringAppSpecificationOutput) ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleMonitoringAppSpecification) *MonitoringScheduleMonitoringAppSpecification {
		return &v
	}).(MonitoringScheduleMonitoringAppSpecificationPtrOutput)
}

func (o MonitoringScheduleMonitoringAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringAppSpecification] {
	return pulumix.Output[MonitoringScheduleMonitoringAppSpecification]{
		OutputState: o.OutputState,
	}
}

// An array of arguments for the container used to run the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationOutput) ContainerArguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringAppSpecification) []string { return v.ContainerArguments }).(pulumi.StringArrayOutput)
}

// Specifies the entrypoint for a container used to run the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationOutput) ContainerEntrypoint() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringAppSpecification) []string { return v.ContainerEntrypoint }).(pulumi.StringArrayOutput)
}

// The container image to be run by the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringAppSpecification) string { return v.ImageUri }).(pulumi.StringOutput)
}

// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
func (o MonitoringScheduleMonitoringAppSpecificationOutput) PostAnalyticsProcessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringAppSpecification) *string { return v.PostAnalyticsProcessorSourceUri }).(pulumi.StringPtrOutput)
}

// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
func (o MonitoringScheduleMonitoringAppSpecificationOutput) RecordPreprocessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringAppSpecification) *string { return v.RecordPreprocessorSourceUri }).(pulumi.StringPtrOutput)
}

type MonitoringScheduleMonitoringAppSpecificationPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringAppSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringAppSpecification)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ToMonitoringScheduleMonitoringAppSpecificationPtrOutput() MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ToMonitoringScheduleMonitoringAppSpecificationPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringAppSpecification] {
	return pulumix.Output[*MonitoringScheduleMonitoringAppSpecification]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) Elem() MonitoringScheduleMonitoringAppSpecificationOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) MonitoringScheduleMonitoringAppSpecification {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleMonitoringAppSpecification
		return ret
	}).(MonitoringScheduleMonitoringAppSpecificationOutput)
}

// An array of arguments for the container used to run the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ContainerArguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) []string {
		if v == nil {
			return nil
		}
		return v.ContainerArguments
	}).(pulumi.StringArrayOutput)
}

// Specifies the entrypoint for a container used to run the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ContainerEntrypoint() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) []string {
		if v == nil {
			return nil
		}
		return v.ContainerEntrypoint
	}).(pulumi.StringArrayOutput)
}

// The container image to be run by the monitoring job.
func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.ImageUri
	}).(pulumi.StringPtrOutput)
}

// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) PostAnalyticsProcessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) *string {
		if v == nil {
			return nil
		}
		return v.PostAnalyticsProcessorSourceUri
	}).(pulumi.StringPtrOutput)
}

// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
func (o MonitoringScheduleMonitoringAppSpecificationPtrOutput) RecordPreprocessorSourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringAppSpecification) *string {
		if v == nil {
			return nil
		}
		return v.RecordPreprocessorSourceUri
	}).(pulumi.StringPtrOutput)
}

// Summary of information about monitoring job
type MonitoringScheduleMonitoringExecutionSummary struct {
	// The time at which the monitoring job was created.
	CreationTime string  `pulumi:"creationTime"`
	EndpointName *string `pulumi:"endpointName"`
	// Contains the reason a monitoring job failed, if it failed.
	FailureReason *string `pulumi:"failureReason"`
	// A timestamp that indicates the last time the monitoring job was modified.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The status of the monitoring job.
	MonitoringExecutionStatus MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus `pulumi:"monitoringExecutionStatus"`
	MonitoringScheduleName    string                                                                `pulumi:"monitoringScheduleName"`
	// The Amazon Resource Name (ARN) of the monitoring job.
	ProcessingJobArn *string `pulumi:"processingJobArn"`
	// The time the monitoring job was scheduled.
	ScheduledTime string `pulumi:"scheduledTime"`
}

// MonitoringScheduleMonitoringExecutionSummaryInput is an input type that accepts MonitoringScheduleMonitoringExecutionSummaryArgs and MonitoringScheduleMonitoringExecutionSummaryOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringExecutionSummaryInput` via:
//
//	MonitoringScheduleMonitoringExecutionSummaryArgs{...}
type MonitoringScheduleMonitoringExecutionSummaryInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringExecutionSummaryOutput() MonitoringScheduleMonitoringExecutionSummaryOutput
	ToMonitoringScheduleMonitoringExecutionSummaryOutputWithContext(context.Context) MonitoringScheduleMonitoringExecutionSummaryOutput
}

// Summary of information about monitoring job
type MonitoringScheduleMonitoringExecutionSummaryArgs struct {
	// The time at which the monitoring job was created.
	CreationTime pulumi.StringInput    `pulumi:"creationTime"`
	EndpointName pulumi.StringPtrInput `pulumi:"endpointName"`
	// Contains the reason a monitoring job failed, if it failed.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// A timestamp that indicates the last time the monitoring job was modified.
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// The status of the monitoring job.
	MonitoringExecutionStatus MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatusInput `pulumi:"monitoringExecutionStatus"`
	MonitoringScheduleName    pulumi.StringInput                                                         `pulumi:"monitoringScheduleName"`
	// The Amazon Resource Name (ARN) of the monitoring job.
	ProcessingJobArn pulumi.StringPtrInput `pulumi:"processingJobArn"`
	// The time the monitoring job was scheduled.
	ScheduledTime pulumi.StringInput `pulumi:"scheduledTime"`
}

func (MonitoringScheduleMonitoringExecutionSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringExecutionSummary)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringExecutionSummaryArgs) ToMonitoringScheduleMonitoringExecutionSummaryOutput() MonitoringScheduleMonitoringExecutionSummaryOutput {
	return i.ToMonitoringScheduleMonitoringExecutionSummaryOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringExecutionSummaryArgs) ToMonitoringScheduleMonitoringExecutionSummaryOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringExecutionSummaryOutput)
}

func (i MonitoringScheduleMonitoringExecutionSummaryArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringExecutionSummary] {
	return pulumix.Output[MonitoringScheduleMonitoringExecutionSummary]{
		OutputState: i.ToMonitoringScheduleMonitoringExecutionSummaryOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleMonitoringExecutionSummaryArgs) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutput() MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return i.ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringExecutionSummaryArgs) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringExecutionSummaryOutput).ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx)
}

// MonitoringScheduleMonitoringExecutionSummaryPtrInput is an input type that accepts MonitoringScheduleMonitoringExecutionSummaryArgs, MonitoringScheduleMonitoringExecutionSummaryPtr and MonitoringScheduleMonitoringExecutionSummaryPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringExecutionSummaryPtrInput` via:
//
//	        MonitoringScheduleMonitoringExecutionSummaryArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleMonitoringExecutionSummaryPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringExecutionSummaryPtrOutput() MonitoringScheduleMonitoringExecutionSummaryPtrOutput
	ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(context.Context) MonitoringScheduleMonitoringExecutionSummaryPtrOutput
}

type monitoringScheduleMonitoringExecutionSummaryPtrType MonitoringScheduleMonitoringExecutionSummaryArgs

func MonitoringScheduleMonitoringExecutionSummaryPtr(v *MonitoringScheduleMonitoringExecutionSummaryArgs) MonitoringScheduleMonitoringExecutionSummaryPtrInput {
	return (*monitoringScheduleMonitoringExecutionSummaryPtrType)(v)
}

func (*monitoringScheduleMonitoringExecutionSummaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringExecutionSummary)(nil)).Elem()
}

func (i *monitoringScheduleMonitoringExecutionSummaryPtrType) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutput() MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return i.ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleMonitoringExecutionSummaryPtrType) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringExecutionSummaryPtrOutput)
}

func (i *monitoringScheduleMonitoringExecutionSummaryPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringExecutionSummary] {
	return pulumix.Output[*MonitoringScheduleMonitoringExecutionSummary]{
		OutputState: i.ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx).OutputState,
	}
}

// Summary of information about monitoring job
type MonitoringScheduleMonitoringExecutionSummaryOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringExecutionSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringExecutionSummary)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ToMonitoringScheduleMonitoringExecutionSummaryOutput() MonitoringScheduleMonitoringExecutionSummaryOutput {
	return o
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ToMonitoringScheduleMonitoringExecutionSummaryOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryOutput {
	return o
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutput() MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return o.ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleMonitoringExecutionSummary) *MonitoringScheduleMonitoringExecutionSummary {
		return &v
	}).(MonitoringScheduleMonitoringExecutionSummaryPtrOutput)
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringExecutionSummary] {
	return pulumix.Output[MonitoringScheduleMonitoringExecutionSummary]{
		OutputState: o.OutputState,
	}
}

// The time at which the monitoring job was created.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

// Contains the reason a monitoring job failed, if it failed.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// A timestamp that indicates the last time the monitoring job was modified.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The status of the monitoring job.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) MonitoringExecutionStatus() MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatusOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus {
		return v.MonitoringExecutionStatus
	}).(MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatusOutput)
}

func (o MonitoringScheduleMonitoringExecutionSummaryOutput) MonitoringScheduleName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) string { return v.MonitoringScheduleName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the monitoring job.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ProcessingJobArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) *string { return v.ProcessingJobArn }).(pulumi.StringPtrOutput)
}

// The time the monitoring job was scheduled.
func (o MonitoringScheduleMonitoringExecutionSummaryOutput) ScheduledTime() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringExecutionSummary) string { return v.ScheduledTime }).(pulumi.StringOutput)
}

type MonitoringScheduleMonitoringExecutionSummaryPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringExecutionSummary)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutput() MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ToMonitoringScheduleMonitoringExecutionSummaryPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringExecutionSummaryPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringExecutionSummary] {
	return pulumix.Output[*MonitoringScheduleMonitoringExecutionSummary]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) Elem() MonitoringScheduleMonitoringExecutionSummaryOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) MonitoringScheduleMonitoringExecutionSummary {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleMonitoringExecutionSummary
		return ret
	}).(MonitoringScheduleMonitoringExecutionSummaryOutput)
}

// The time at which the monitoring job was created.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// Contains the reason a monitoring job failed, if it failed.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return v.FailureReason
	}).(pulumi.StringPtrOutput)
}

// A timestamp that indicates the last time the monitoring job was modified.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return &v.LastModifiedTime
	}).(pulumi.StringPtrOutput)
}

// The status of the monitoring job.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) MonitoringExecutionStatus() MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatusPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus {
		if v == nil {
			return nil
		}
		return &v.MonitoringExecutionStatus
	}).(MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatusPtrOutput)
}

func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) MonitoringScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringScheduleName
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the monitoring job.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ProcessingJobArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return v.ProcessingJobArn
	}).(pulumi.StringPtrOutput)
}

// The time the monitoring job was scheduled.
func (o MonitoringScheduleMonitoringExecutionSummaryPtrOutput) ScheduledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringExecutionSummary) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduledTime
	}).(pulumi.StringPtrOutput)
}

// The inputs for a monitoring job.
type MonitoringScheduleMonitoringInput struct {
	BatchTransformInput *MonitoringScheduleBatchTransformInput `pulumi:"batchTransformInput"`
	EndpointInput       *MonitoringScheduleEndpointInput       `pulumi:"endpointInput"`
}

// MonitoringScheduleMonitoringInputInput is an input type that accepts MonitoringScheduleMonitoringInputArgs and MonitoringScheduleMonitoringInputOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringInputInput` via:
//
//	MonitoringScheduleMonitoringInputArgs{...}
type MonitoringScheduleMonitoringInputInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringInputOutput() MonitoringScheduleMonitoringInputOutput
	ToMonitoringScheduleMonitoringInputOutputWithContext(context.Context) MonitoringScheduleMonitoringInputOutput
}

// The inputs for a monitoring job.
type MonitoringScheduleMonitoringInputArgs struct {
	BatchTransformInput MonitoringScheduleBatchTransformInputPtrInput `pulumi:"batchTransformInput"`
	EndpointInput       MonitoringScheduleEndpointInputPtrInput       `pulumi:"endpointInput"`
}

func (MonitoringScheduleMonitoringInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringInput)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringInputArgs) ToMonitoringScheduleMonitoringInputOutput() MonitoringScheduleMonitoringInputOutput {
	return i.ToMonitoringScheduleMonitoringInputOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringInputArgs) ToMonitoringScheduleMonitoringInputOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringInputOutput)
}

func (i MonitoringScheduleMonitoringInputArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringInput] {
	return pulumix.Output[MonitoringScheduleMonitoringInput]{
		OutputState: i.ToMonitoringScheduleMonitoringInputOutputWithContext(ctx).OutputState,
	}
}

// MonitoringScheduleMonitoringInputArrayInput is an input type that accepts MonitoringScheduleMonitoringInputArray and MonitoringScheduleMonitoringInputArrayOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringInputArrayInput` via:
//
//	MonitoringScheduleMonitoringInputArray{ MonitoringScheduleMonitoringInputArgs{...} }
type MonitoringScheduleMonitoringInputArrayInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringInputArrayOutput() MonitoringScheduleMonitoringInputArrayOutput
	ToMonitoringScheduleMonitoringInputArrayOutputWithContext(context.Context) MonitoringScheduleMonitoringInputArrayOutput
}

type MonitoringScheduleMonitoringInputArray []MonitoringScheduleMonitoringInputInput

func (MonitoringScheduleMonitoringInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleMonitoringInput)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringInputArray) ToMonitoringScheduleMonitoringInputArrayOutput() MonitoringScheduleMonitoringInputArrayOutput {
	return i.ToMonitoringScheduleMonitoringInputArrayOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringInputArray) ToMonitoringScheduleMonitoringInputArrayOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringInputArrayOutput)
}

func (i MonitoringScheduleMonitoringInputArray) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleMonitoringInput] {
	return pulumix.Output[[]MonitoringScheduleMonitoringInput]{
		OutputState: i.ToMonitoringScheduleMonitoringInputArrayOutputWithContext(ctx).OutputState,
	}
}

// The inputs for a monitoring job.
type MonitoringScheduleMonitoringInputOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringInput)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringInputOutput) ToMonitoringScheduleMonitoringInputOutput() MonitoringScheduleMonitoringInputOutput {
	return o
}

func (o MonitoringScheduleMonitoringInputOutput) ToMonitoringScheduleMonitoringInputOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringInputOutput {
	return o
}

func (o MonitoringScheduleMonitoringInputOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringInput] {
	return pulumix.Output[MonitoringScheduleMonitoringInput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringInputOutput) BatchTransformInput() MonitoringScheduleBatchTransformInputPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringInput) *MonitoringScheduleBatchTransformInput {
		return v.BatchTransformInput
	}).(MonitoringScheduleBatchTransformInputPtrOutput)
}

func (o MonitoringScheduleMonitoringInputOutput) EndpointInput() MonitoringScheduleEndpointInputPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringInput) *MonitoringScheduleEndpointInput { return v.EndpointInput }).(MonitoringScheduleEndpointInputPtrOutput)
}

type MonitoringScheduleMonitoringInputArrayOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleMonitoringInput)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringInputArrayOutput) ToMonitoringScheduleMonitoringInputArrayOutput() MonitoringScheduleMonitoringInputArrayOutput {
	return o
}

func (o MonitoringScheduleMonitoringInputArrayOutput) ToMonitoringScheduleMonitoringInputArrayOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringInputArrayOutput {
	return o
}

func (o MonitoringScheduleMonitoringInputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleMonitoringInput] {
	return pulumix.Output[[]MonitoringScheduleMonitoringInput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringInputArrayOutput) Index(i pulumi.IntInput) MonitoringScheduleMonitoringInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoringScheduleMonitoringInput {
		return vs[0].([]MonitoringScheduleMonitoringInput)[vs[1].(int)]
	}).(MonitoringScheduleMonitoringInputOutput)
}

// Defines the monitoring job.
type MonitoringScheduleMonitoringJobDefinition struct {
	BaselineConfig *MonitoringScheduleBaselineConfig `pulumi:"baselineConfig"`
	// Sets the environment variables in the Docker container
	Environment                interface{}                                  `pulumi:"environment"`
	MonitoringAppSpecification MonitoringScheduleMonitoringAppSpecification `pulumi:"monitoringAppSpecification"`
	MonitoringInputs           []MonitoringScheduleMonitoringInput          `pulumi:"monitoringInputs"`
	MonitoringOutputConfig     MonitoringScheduleMonitoringOutputConfig     `pulumi:"monitoringOutputConfig"`
	MonitoringResources        MonitoringScheduleMonitoringResources        `pulumi:"monitoringResources"`
	NetworkConfig              *MonitoringScheduleNetworkConfig             `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn           string                               `pulumi:"roleArn"`
	StoppingCondition *MonitoringScheduleStoppingCondition `pulumi:"stoppingCondition"`
}

// MonitoringScheduleMonitoringJobDefinitionInput is an input type that accepts MonitoringScheduleMonitoringJobDefinitionArgs and MonitoringScheduleMonitoringJobDefinitionOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringJobDefinitionInput` via:
//
//	MonitoringScheduleMonitoringJobDefinitionArgs{...}
type MonitoringScheduleMonitoringJobDefinitionInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringJobDefinitionOutput() MonitoringScheduleMonitoringJobDefinitionOutput
	ToMonitoringScheduleMonitoringJobDefinitionOutputWithContext(context.Context) MonitoringScheduleMonitoringJobDefinitionOutput
}

// Defines the monitoring job.
type MonitoringScheduleMonitoringJobDefinitionArgs struct {
	BaselineConfig MonitoringScheduleBaselineConfigPtrInput `pulumi:"baselineConfig"`
	// Sets the environment variables in the Docker container
	Environment                pulumi.Input                                      `pulumi:"environment"`
	MonitoringAppSpecification MonitoringScheduleMonitoringAppSpecificationInput `pulumi:"monitoringAppSpecification"`
	MonitoringInputs           MonitoringScheduleMonitoringInputArrayInput       `pulumi:"monitoringInputs"`
	MonitoringOutputConfig     MonitoringScheduleMonitoringOutputConfigInput     `pulumi:"monitoringOutputConfig"`
	MonitoringResources        MonitoringScheduleMonitoringResourcesInput        `pulumi:"monitoringResources"`
	NetworkConfig              MonitoringScheduleNetworkConfigPtrInput           `pulumi:"networkConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
	RoleArn           pulumi.StringInput                          `pulumi:"roleArn"`
	StoppingCondition MonitoringScheduleStoppingConditionPtrInput `pulumi:"stoppingCondition"`
}

func (MonitoringScheduleMonitoringJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringJobDefinition)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringJobDefinitionArgs) ToMonitoringScheduleMonitoringJobDefinitionOutput() MonitoringScheduleMonitoringJobDefinitionOutput {
	return i.ToMonitoringScheduleMonitoringJobDefinitionOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringJobDefinitionArgs) ToMonitoringScheduleMonitoringJobDefinitionOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringJobDefinitionOutput)
}

func (i MonitoringScheduleMonitoringJobDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringJobDefinition] {
	return pulumix.Output[MonitoringScheduleMonitoringJobDefinition]{
		OutputState: i.ToMonitoringScheduleMonitoringJobDefinitionOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleMonitoringJobDefinitionArgs) ToMonitoringScheduleMonitoringJobDefinitionPtrOutput() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return i.ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringJobDefinitionArgs) ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringJobDefinitionOutput).ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx)
}

// MonitoringScheduleMonitoringJobDefinitionPtrInput is an input type that accepts MonitoringScheduleMonitoringJobDefinitionArgs, MonitoringScheduleMonitoringJobDefinitionPtr and MonitoringScheduleMonitoringJobDefinitionPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringJobDefinitionPtrInput` via:
//
//	        MonitoringScheduleMonitoringJobDefinitionArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleMonitoringJobDefinitionPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringJobDefinitionPtrOutput() MonitoringScheduleMonitoringJobDefinitionPtrOutput
	ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(context.Context) MonitoringScheduleMonitoringJobDefinitionPtrOutput
}

type monitoringScheduleMonitoringJobDefinitionPtrType MonitoringScheduleMonitoringJobDefinitionArgs

func MonitoringScheduleMonitoringJobDefinitionPtr(v *MonitoringScheduleMonitoringJobDefinitionArgs) MonitoringScheduleMonitoringJobDefinitionPtrInput {
	return (*monitoringScheduleMonitoringJobDefinitionPtrType)(v)
}

func (*monitoringScheduleMonitoringJobDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringJobDefinition)(nil)).Elem()
}

func (i *monitoringScheduleMonitoringJobDefinitionPtrType) ToMonitoringScheduleMonitoringJobDefinitionPtrOutput() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return i.ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleMonitoringJobDefinitionPtrType) ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringJobDefinitionPtrOutput)
}

func (i *monitoringScheduleMonitoringJobDefinitionPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringJobDefinition] {
	return pulumix.Output[*MonitoringScheduleMonitoringJobDefinition]{
		OutputState: i.ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx).OutputState,
	}
}

// Defines the monitoring job.
type MonitoringScheduleMonitoringJobDefinitionOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringJobDefinition)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) ToMonitoringScheduleMonitoringJobDefinitionOutput() MonitoringScheduleMonitoringJobDefinitionOutput {
	return o
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) ToMonitoringScheduleMonitoringJobDefinitionOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionOutput {
	return o
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) ToMonitoringScheduleMonitoringJobDefinitionPtrOutput() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o.ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleMonitoringJobDefinition {
		return &v
	}).(MonitoringScheduleMonitoringJobDefinitionPtrOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringJobDefinition] {
	return pulumix.Output[MonitoringScheduleMonitoringJobDefinition]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) BaselineConfig() MonitoringScheduleBaselineConfigPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleBaselineConfig {
		return v.BaselineConfig
	}).(MonitoringScheduleBaselineConfigPtrOutput)
}

// Sets the environment variables in the Docker container
func (o MonitoringScheduleMonitoringJobDefinitionOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) interface{} { return v.Environment }).(pulumi.AnyOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) MonitoringAppSpecification() MonitoringScheduleMonitoringAppSpecificationOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) MonitoringScheduleMonitoringAppSpecification {
		return v.MonitoringAppSpecification
	}).(MonitoringScheduleMonitoringAppSpecificationOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) MonitoringInputs() MonitoringScheduleMonitoringInputArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) []MonitoringScheduleMonitoringInput {
		return v.MonitoringInputs
	}).(MonitoringScheduleMonitoringInputArrayOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) MonitoringOutputConfig() MonitoringScheduleMonitoringOutputConfigOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) MonitoringScheduleMonitoringOutputConfig {
		return v.MonitoringOutputConfig
	}).(MonitoringScheduleMonitoringOutputConfigOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) MonitoringResources() MonitoringScheduleMonitoringResourcesOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) MonitoringScheduleMonitoringResources {
		return v.MonitoringResources
	}).(MonitoringScheduleMonitoringResourcesOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) NetworkConfig() MonitoringScheduleNetworkConfigPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleNetworkConfig {
		return v.NetworkConfig
	}).(MonitoringScheduleNetworkConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
func (o MonitoringScheduleMonitoringJobDefinitionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionOutput) StoppingCondition() MonitoringScheduleStoppingConditionPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleStoppingCondition {
		return v.StoppingCondition
	}).(MonitoringScheduleStoppingConditionPtrOutput)
}

type MonitoringScheduleMonitoringJobDefinitionPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringJobDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringJobDefinition)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) ToMonitoringScheduleMonitoringJobDefinitionPtrOutput() MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) ToMonitoringScheduleMonitoringJobDefinitionPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringJobDefinitionPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringJobDefinition] {
	return pulumix.Output[*MonitoringScheduleMonitoringJobDefinition]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) Elem() MonitoringScheduleMonitoringJobDefinitionOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) MonitoringScheduleMonitoringJobDefinition {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleMonitoringJobDefinition
		return ret
	}).(MonitoringScheduleMonitoringJobDefinitionOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) BaselineConfig() MonitoringScheduleBaselineConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleBaselineConfig {
		if v == nil {
			return nil
		}
		return v.BaselineConfig
	}).(MonitoringScheduleBaselineConfigPtrOutput)
}

// Sets the environment variables in the Docker container
func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) Environment() pulumi.AnyOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) interface{} {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.AnyOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) MonitoringAppSpecification() MonitoringScheduleMonitoringAppSpecificationPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleMonitoringAppSpecification {
		if v == nil {
			return nil
		}
		return &v.MonitoringAppSpecification
	}).(MonitoringScheduleMonitoringAppSpecificationPtrOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) MonitoringInputs() MonitoringScheduleMonitoringInputArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) []MonitoringScheduleMonitoringInput {
		if v == nil {
			return nil
		}
		return v.MonitoringInputs
	}).(MonitoringScheduleMonitoringInputArrayOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) MonitoringOutputConfig() MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleMonitoringOutputConfig {
		if v == nil {
			return nil
		}
		return &v.MonitoringOutputConfig
	}).(MonitoringScheduleMonitoringOutputConfigPtrOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) MonitoringResources() MonitoringScheduleMonitoringResourcesPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleMonitoringResources {
		if v == nil {
			return nil
		}
		return &v.MonitoringResources
	}).(MonitoringScheduleMonitoringResourcesPtrOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) NetworkConfig() MonitoringScheduleNetworkConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleNetworkConfig {
		if v == nil {
			return nil
		}
		return v.NetworkConfig
	}).(MonitoringScheduleNetworkConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o MonitoringScheduleMonitoringJobDefinitionPtrOutput) StoppingCondition() MonitoringScheduleStoppingConditionPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringJobDefinition) *MonitoringScheduleStoppingCondition {
		if v == nil {
			return nil
		}
		return v.StoppingCondition
	}).(MonitoringScheduleStoppingConditionPtrOutput)
}

// The output object for a monitoring job.
type MonitoringScheduleMonitoringOutput struct {
	S3Output MonitoringScheduleS3Output `pulumi:"s3Output"`
}

// MonitoringScheduleMonitoringOutputInput is an input type that accepts MonitoringScheduleMonitoringOutputArgs and MonitoringScheduleMonitoringOutputOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringOutputInput` via:
//
//	MonitoringScheduleMonitoringOutputArgs{...}
type MonitoringScheduleMonitoringOutputInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringOutputOutput() MonitoringScheduleMonitoringOutputOutput
	ToMonitoringScheduleMonitoringOutputOutputWithContext(context.Context) MonitoringScheduleMonitoringOutputOutput
}

// The output object for a monitoring job.
type MonitoringScheduleMonitoringOutputArgs struct {
	S3Output MonitoringScheduleS3OutputInput `pulumi:"s3Output"`
}

func (MonitoringScheduleMonitoringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringOutput)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringOutputArgs) ToMonitoringScheduleMonitoringOutputOutput() MonitoringScheduleMonitoringOutputOutput {
	return i.ToMonitoringScheduleMonitoringOutputOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringOutputArgs) ToMonitoringScheduleMonitoringOutputOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringOutputOutput)
}

func (i MonitoringScheduleMonitoringOutputArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringOutput] {
	return pulumix.Output[MonitoringScheduleMonitoringOutput]{
		OutputState: i.ToMonitoringScheduleMonitoringOutputOutputWithContext(ctx).OutputState,
	}
}

// MonitoringScheduleMonitoringOutputArrayInput is an input type that accepts MonitoringScheduleMonitoringOutputArray and MonitoringScheduleMonitoringOutputArrayOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringOutputArrayInput` via:
//
//	MonitoringScheduleMonitoringOutputArray{ MonitoringScheduleMonitoringOutputArgs{...} }
type MonitoringScheduleMonitoringOutputArrayInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringOutputArrayOutput() MonitoringScheduleMonitoringOutputArrayOutput
	ToMonitoringScheduleMonitoringOutputArrayOutputWithContext(context.Context) MonitoringScheduleMonitoringOutputArrayOutput
}

type MonitoringScheduleMonitoringOutputArray []MonitoringScheduleMonitoringOutputInput

func (MonitoringScheduleMonitoringOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleMonitoringOutput)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringOutputArray) ToMonitoringScheduleMonitoringOutputArrayOutput() MonitoringScheduleMonitoringOutputArrayOutput {
	return i.ToMonitoringScheduleMonitoringOutputArrayOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringOutputArray) ToMonitoringScheduleMonitoringOutputArrayOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringOutputArrayOutput)
}

func (i MonitoringScheduleMonitoringOutputArray) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleMonitoringOutput] {
	return pulumix.Output[[]MonitoringScheduleMonitoringOutput]{
		OutputState: i.ToMonitoringScheduleMonitoringOutputArrayOutputWithContext(ctx).OutputState,
	}
}

// The output object for a monitoring job.
type MonitoringScheduleMonitoringOutputOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringOutput)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringOutputOutput) ToMonitoringScheduleMonitoringOutputOutput() MonitoringScheduleMonitoringOutputOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputOutput) ToMonitoringScheduleMonitoringOutputOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringOutput] {
	return pulumix.Output[MonitoringScheduleMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringOutputOutput) S3Output() MonitoringScheduleS3OutputOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringOutput) MonitoringScheduleS3Output { return v.S3Output }).(MonitoringScheduleS3OutputOutput)
}

type MonitoringScheduleMonitoringOutputArrayOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleMonitoringOutput)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringOutputArrayOutput) ToMonitoringScheduleMonitoringOutputArrayOutput() MonitoringScheduleMonitoringOutputArrayOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputArrayOutput) ToMonitoringScheduleMonitoringOutputArrayOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputArrayOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleMonitoringOutput] {
	return pulumix.Output[[]MonitoringScheduleMonitoringOutput]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringOutputArrayOutput) Index(i pulumi.IntInput) MonitoringScheduleMonitoringOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoringScheduleMonitoringOutput {
		return vs[0].([]MonitoringScheduleMonitoringOutput)[vs[1].(int)]
	}).(MonitoringScheduleMonitoringOutputOutput)
}

// The output configuration for monitoring jobs.
type MonitoringScheduleMonitoringOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs []MonitoringScheduleMonitoringOutput `pulumi:"monitoringOutputs"`
}

// MonitoringScheduleMonitoringOutputConfigInput is an input type that accepts MonitoringScheduleMonitoringOutputConfigArgs and MonitoringScheduleMonitoringOutputConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringOutputConfigInput` via:
//
//	MonitoringScheduleMonitoringOutputConfigArgs{...}
type MonitoringScheduleMonitoringOutputConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringOutputConfigOutput() MonitoringScheduleMonitoringOutputConfigOutput
	ToMonitoringScheduleMonitoringOutputConfigOutputWithContext(context.Context) MonitoringScheduleMonitoringOutputConfigOutput
}

// The output configuration for monitoring jobs.
type MonitoringScheduleMonitoringOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
	MonitoringOutputs MonitoringScheduleMonitoringOutputArrayInput `pulumi:"monitoringOutputs"`
}

func (MonitoringScheduleMonitoringOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringOutputConfig)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringOutputConfigArgs) ToMonitoringScheduleMonitoringOutputConfigOutput() MonitoringScheduleMonitoringOutputConfigOutput {
	return i.ToMonitoringScheduleMonitoringOutputConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringOutputConfigArgs) ToMonitoringScheduleMonitoringOutputConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringOutputConfigOutput)
}

func (i MonitoringScheduleMonitoringOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringOutputConfig] {
	return pulumix.Output[MonitoringScheduleMonitoringOutputConfig]{
		OutputState: i.ToMonitoringScheduleMonitoringOutputConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleMonitoringOutputConfigArgs) ToMonitoringScheduleMonitoringOutputConfigPtrOutput() MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return i.ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringOutputConfigArgs) ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringOutputConfigOutput).ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleMonitoringOutputConfigPtrInput is an input type that accepts MonitoringScheduleMonitoringOutputConfigArgs, MonitoringScheduleMonitoringOutputConfigPtr and MonitoringScheduleMonitoringOutputConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringOutputConfigPtrInput` via:
//
//	        MonitoringScheduleMonitoringOutputConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleMonitoringOutputConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringOutputConfigPtrOutput() MonitoringScheduleMonitoringOutputConfigPtrOutput
	ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(context.Context) MonitoringScheduleMonitoringOutputConfigPtrOutput
}

type monitoringScheduleMonitoringOutputConfigPtrType MonitoringScheduleMonitoringOutputConfigArgs

func MonitoringScheduleMonitoringOutputConfigPtr(v *MonitoringScheduleMonitoringOutputConfigArgs) MonitoringScheduleMonitoringOutputConfigPtrInput {
	return (*monitoringScheduleMonitoringOutputConfigPtrType)(v)
}

func (*monitoringScheduleMonitoringOutputConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringOutputConfig)(nil)).Elem()
}

func (i *monitoringScheduleMonitoringOutputConfigPtrType) ToMonitoringScheduleMonitoringOutputConfigPtrOutput() MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return i.ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleMonitoringOutputConfigPtrType) ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringOutputConfigPtrOutput)
}

func (i *monitoringScheduleMonitoringOutputConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringOutputConfig] {
	return pulumix.Output[*MonitoringScheduleMonitoringOutputConfig]{
		OutputState: i.ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// The output configuration for monitoring jobs.
type MonitoringScheduleMonitoringOutputConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringOutputConfig)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringOutputConfigOutput) ToMonitoringScheduleMonitoringOutputConfigOutput() MonitoringScheduleMonitoringOutputConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputConfigOutput) ToMonitoringScheduleMonitoringOutputConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputConfigOutput) ToMonitoringScheduleMonitoringOutputConfigPtrOutput() MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return o.ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleMonitoringOutputConfigOutput) ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleMonitoringOutputConfig) *MonitoringScheduleMonitoringOutputConfig {
		return &v
	}).(MonitoringScheduleMonitoringOutputConfigPtrOutput)
}

func (o MonitoringScheduleMonitoringOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringOutputConfig] {
	return pulumix.Output[MonitoringScheduleMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o MonitoringScheduleMonitoringOutputConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringOutputConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o MonitoringScheduleMonitoringOutputConfigOutput) MonitoringOutputs() MonitoringScheduleMonitoringOutputArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringOutputConfig) []MonitoringScheduleMonitoringOutput {
		return v.MonitoringOutputs
	}).(MonitoringScheduleMonitoringOutputArrayOutput)
}

type MonitoringScheduleMonitoringOutputConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringOutputConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringOutputConfig)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) ToMonitoringScheduleMonitoringOutputConfigPtrOutput() MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) ToMonitoringScheduleMonitoringOutputConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringOutputConfigPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringOutputConfig] {
	return pulumix.Output[*MonitoringScheduleMonitoringOutputConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) Elem() MonitoringScheduleMonitoringOutputConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringOutputConfig) MonitoringScheduleMonitoringOutputConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleMonitoringOutputConfig
		return ret
	}).(MonitoringScheduleMonitoringOutputConfigOutput)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringOutputConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
func (o MonitoringScheduleMonitoringOutputConfigPtrOutput) MonitoringOutputs() MonitoringScheduleMonitoringOutputArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringOutputConfig) []MonitoringScheduleMonitoringOutput {
		if v == nil {
			return nil
		}
		return v.MonitoringOutputs
	}).(MonitoringScheduleMonitoringOutputArrayOutput)
}

// Identifies the resources to deploy for a monitoring job.
type MonitoringScheduleMonitoringResources struct {
	ClusterConfig MonitoringScheduleClusterConfig `pulumi:"clusterConfig"`
}

// MonitoringScheduleMonitoringResourcesInput is an input type that accepts MonitoringScheduleMonitoringResourcesArgs and MonitoringScheduleMonitoringResourcesOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringResourcesInput` via:
//
//	MonitoringScheduleMonitoringResourcesArgs{...}
type MonitoringScheduleMonitoringResourcesInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringResourcesOutput() MonitoringScheduleMonitoringResourcesOutput
	ToMonitoringScheduleMonitoringResourcesOutputWithContext(context.Context) MonitoringScheduleMonitoringResourcesOutput
}

// Identifies the resources to deploy for a monitoring job.
type MonitoringScheduleMonitoringResourcesArgs struct {
	ClusterConfig MonitoringScheduleClusterConfigInput `pulumi:"clusterConfig"`
}

func (MonitoringScheduleMonitoringResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringResources)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringResourcesArgs) ToMonitoringScheduleMonitoringResourcesOutput() MonitoringScheduleMonitoringResourcesOutput {
	return i.ToMonitoringScheduleMonitoringResourcesOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringResourcesArgs) ToMonitoringScheduleMonitoringResourcesOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringResourcesOutput)
}

func (i MonitoringScheduleMonitoringResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringResources] {
	return pulumix.Output[MonitoringScheduleMonitoringResources]{
		OutputState: i.ToMonitoringScheduleMonitoringResourcesOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleMonitoringResourcesArgs) ToMonitoringScheduleMonitoringResourcesPtrOutput() MonitoringScheduleMonitoringResourcesPtrOutput {
	return i.ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringResourcesArgs) ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringResourcesOutput).ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx)
}

// MonitoringScheduleMonitoringResourcesPtrInput is an input type that accepts MonitoringScheduleMonitoringResourcesArgs, MonitoringScheduleMonitoringResourcesPtr and MonitoringScheduleMonitoringResourcesPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleMonitoringResourcesPtrInput` via:
//
//	        MonitoringScheduleMonitoringResourcesArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleMonitoringResourcesPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleMonitoringResourcesPtrOutput() MonitoringScheduleMonitoringResourcesPtrOutput
	ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(context.Context) MonitoringScheduleMonitoringResourcesPtrOutput
}

type monitoringScheduleMonitoringResourcesPtrType MonitoringScheduleMonitoringResourcesArgs

func MonitoringScheduleMonitoringResourcesPtr(v *MonitoringScheduleMonitoringResourcesArgs) MonitoringScheduleMonitoringResourcesPtrInput {
	return (*monitoringScheduleMonitoringResourcesPtrType)(v)
}

func (*monitoringScheduleMonitoringResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringResources)(nil)).Elem()
}

func (i *monitoringScheduleMonitoringResourcesPtrType) ToMonitoringScheduleMonitoringResourcesPtrOutput() MonitoringScheduleMonitoringResourcesPtrOutput {
	return i.ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleMonitoringResourcesPtrType) ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringResourcesPtrOutput)
}

func (i *monitoringScheduleMonitoringResourcesPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringResources] {
	return pulumix.Output[*MonitoringScheduleMonitoringResources]{
		OutputState: i.ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx).OutputState,
	}
}

// Identifies the resources to deploy for a monitoring job.
type MonitoringScheduleMonitoringResourcesOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringResources)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringResourcesOutput) ToMonitoringScheduleMonitoringResourcesOutput() MonitoringScheduleMonitoringResourcesOutput {
	return o
}

func (o MonitoringScheduleMonitoringResourcesOutput) ToMonitoringScheduleMonitoringResourcesOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesOutput {
	return o
}

func (o MonitoringScheduleMonitoringResourcesOutput) ToMonitoringScheduleMonitoringResourcesPtrOutput() MonitoringScheduleMonitoringResourcesPtrOutput {
	return o.ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleMonitoringResourcesOutput) ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleMonitoringResources) *MonitoringScheduleMonitoringResources {
		return &v
	}).(MonitoringScheduleMonitoringResourcesPtrOutput)
}

func (o MonitoringScheduleMonitoringResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringResources] {
	return pulumix.Output[MonitoringScheduleMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringResourcesOutput) ClusterConfig() MonitoringScheduleClusterConfigOutput {
	return o.ApplyT(func(v MonitoringScheduleMonitoringResources) MonitoringScheduleClusterConfig { return v.ClusterConfig }).(MonitoringScheduleClusterConfigOutput)
}

type MonitoringScheduleMonitoringResourcesPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleMonitoringResources)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringResourcesPtrOutput) ToMonitoringScheduleMonitoringResourcesPtrOutput() MonitoringScheduleMonitoringResourcesPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringResourcesPtrOutput) ToMonitoringScheduleMonitoringResourcesPtrOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringResourcesPtrOutput {
	return o
}

func (o MonitoringScheduleMonitoringResourcesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringResources] {
	return pulumix.Output[*MonitoringScheduleMonitoringResources]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleMonitoringResourcesPtrOutput) Elem() MonitoringScheduleMonitoringResourcesOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringResources) MonitoringScheduleMonitoringResources {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleMonitoringResources
		return ret
	}).(MonitoringScheduleMonitoringResourcesOutput)
}

func (o MonitoringScheduleMonitoringResourcesPtrOutput) ClusterConfig() MonitoringScheduleClusterConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleMonitoringResources) *MonitoringScheduleClusterConfig {
		if v == nil {
			return nil
		}
		return &v.ClusterConfig
	}).(MonitoringScheduleClusterConfigPtrOutput)
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type MonitoringScheduleNetworkConfig struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation *bool                        `pulumi:"enableNetworkIsolation"`
	VpcConfig              *MonitoringScheduleVpcConfig `pulumi:"vpcConfig"`
}

// MonitoringScheduleNetworkConfigInput is an input type that accepts MonitoringScheduleNetworkConfigArgs and MonitoringScheduleNetworkConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleNetworkConfigInput` via:
//
//	MonitoringScheduleNetworkConfigArgs{...}
type MonitoringScheduleNetworkConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleNetworkConfigOutput() MonitoringScheduleNetworkConfigOutput
	ToMonitoringScheduleNetworkConfigOutputWithContext(context.Context) MonitoringScheduleNetworkConfigOutput
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type MonitoringScheduleNetworkConfigArgs struct {
	// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumi.BoolPtrInput `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
	EnableNetworkIsolation pulumi.BoolPtrInput                 `pulumi:"enableNetworkIsolation"`
	VpcConfig              MonitoringScheduleVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (MonitoringScheduleNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleNetworkConfig)(nil)).Elem()
}

func (i MonitoringScheduleNetworkConfigArgs) ToMonitoringScheduleNetworkConfigOutput() MonitoringScheduleNetworkConfigOutput {
	return i.ToMonitoringScheduleNetworkConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleNetworkConfigArgs) ToMonitoringScheduleNetworkConfigOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleNetworkConfigOutput)
}

func (i MonitoringScheduleNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleNetworkConfig] {
	return pulumix.Output[MonitoringScheduleNetworkConfig]{
		OutputState: i.ToMonitoringScheduleNetworkConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleNetworkConfigArgs) ToMonitoringScheduleNetworkConfigPtrOutput() MonitoringScheduleNetworkConfigPtrOutput {
	return i.ToMonitoringScheduleNetworkConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleNetworkConfigArgs) ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleNetworkConfigOutput).ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleNetworkConfigPtrInput is an input type that accepts MonitoringScheduleNetworkConfigArgs, MonitoringScheduleNetworkConfigPtr and MonitoringScheduleNetworkConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleNetworkConfigPtrInput` via:
//
//	        MonitoringScheduleNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleNetworkConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleNetworkConfigPtrOutput() MonitoringScheduleNetworkConfigPtrOutput
	ToMonitoringScheduleNetworkConfigPtrOutputWithContext(context.Context) MonitoringScheduleNetworkConfigPtrOutput
}

type monitoringScheduleNetworkConfigPtrType MonitoringScheduleNetworkConfigArgs

func MonitoringScheduleNetworkConfigPtr(v *MonitoringScheduleNetworkConfigArgs) MonitoringScheduleNetworkConfigPtrInput {
	return (*monitoringScheduleNetworkConfigPtrType)(v)
}

func (*monitoringScheduleNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleNetworkConfig)(nil)).Elem()
}

func (i *monitoringScheduleNetworkConfigPtrType) ToMonitoringScheduleNetworkConfigPtrOutput() MonitoringScheduleNetworkConfigPtrOutput {
	return i.ToMonitoringScheduleNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleNetworkConfigPtrType) ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleNetworkConfigPtrOutput)
}

func (i *monitoringScheduleNetworkConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleNetworkConfig] {
	return pulumix.Output[*MonitoringScheduleNetworkConfig]{
		OutputState: i.ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
type MonitoringScheduleNetworkConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleNetworkConfig)(nil)).Elem()
}

func (o MonitoringScheduleNetworkConfigOutput) ToMonitoringScheduleNetworkConfigOutput() MonitoringScheduleNetworkConfigOutput {
	return o
}

func (o MonitoringScheduleNetworkConfigOutput) ToMonitoringScheduleNetworkConfigOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigOutput {
	return o
}

func (o MonitoringScheduleNetworkConfigOutput) ToMonitoringScheduleNetworkConfigPtrOutput() MonitoringScheduleNetworkConfigPtrOutput {
	return o.ToMonitoringScheduleNetworkConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleNetworkConfigOutput) ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleNetworkConfig) *MonitoringScheduleNetworkConfig {
		return &v
	}).(MonitoringScheduleNetworkConfigPtrOutput)
}

func (o MonitoringScheduleNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleNetworkConfig] {
	return pulumix.Output[MonitoringScheduleNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o MonitoringScheduleNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleNetworkConfig) *bool { return v.EnableInterContainerTrafficEncryption }).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o MonitoringScheduleNetworkConfigOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleNetworkConfig) *bool { return v.EnableNetworkIsolation }).(pulumi.BoolPtrOutput)
}

func (o MonitoringScheduleNetworkConfigOutput) VpcConfig() MonitoringScheduleVpcConfigPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleNetworkConfig) *MonitoringScheduleVpcConfig { return v.VpcConfig }).(MonitoringScheduleVpcConfigPtrOutput)
}

type MonitoringScheduleNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleNetworkConfig)(nil)).Elem()
}

func (o MonitoringScheduleNetworkConfigPtrOutput) ToMonitoringScheduleNetworkConfigPtrOutput() MonitoringScheduleNetworkConfigPtrOutput {
	return o
}

func (o MonitoringScheduleNetworkConfigPtrOutput) ToMonitoringScheduleNetworkConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleNetworkConfigPtrOutput {
	return o
}

func (o MonitoringScheduleNetworkConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleNetworkConfig] {
	return pulumix.Output[*MonitoringScheduleNetworkConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleNetworkConfigPtrOutput) Elem() MonitoringScheduleNetworkConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleNetworkConfig) MonitoringScheduleNetworkConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleNetworkConfig
		return ret
	}).(MonitoringScheduleNetworkConfigOutput)
}

// Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
func (o MonitoringScheduleNetworkConfigPtrOutput) EnableInterContainerTrafficEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInterContainerTrafficEncryption
	}).(pulumi.BoolPtrOutput)
}

// Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
func (o MonitoringScheduleNetworkConfigPtrOutput) EnableNetworkIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkIsolation
	}).(pulumi.BoolPtrOutput)
}

func (o MonitoringScheduleNetworkConfigPtrOutput) VpcConfig() MonitoringScheduleVpcConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleNetworkConfig) *MonitoringScheduleVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(MonitoringScheduleVpcConfigPtrOutput)
}

// Information about where and how to store the results of a monitoring job.
type MonitoringScheduleS3Output struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode *MonitoringScheduleS3OutputS3UploadMode `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri string `pulumi:"s3Uri"`
}

// MonitoringScheduleS3OutputInput is an input type that accepts MonitoringScheduleS3OutputArgs and MonitoringScheduleS3OutputOutput values.
// You can construct a concrete instance of `MonitoringScheduleS3OutputInput` via:
//
//	MonitoringScheduleS3OutputArgs{...}
type MonitoringScheduleS3OutputInput interface {
	pulumi.Input

	ToMonitoringScheduleS3OutputOutput() MonitoringScheduleS3OutputOutput
	ToMonitoringScheduleS3OutputOutputWithContext(context.Context) MonitoringScheduleS3OutputOutput
}

// Information about where and how to store the results of a monitoring job.
type MonitoringScheduleS3OutputArgs struct {
	// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
	LocalPath pulumi.StringInput `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes.
	S3UploadMode MonitoringScheduleS3OutputS3UploadModePtrInput `pulumi:"s3UploadMode"`
	// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (MonitoringScheduleS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleS3Output)(nil)).Elem()
}

func (i MonitoringScheduleS3OutputArgs) ToMonitoringScheduleS3OutputOutput() MonitoringScheduleS3OutputOutput {
	return i.ToMonitoringScheduleS3OutputOutputWithContext(context.Background())
}

func (i MonitoringScheduleS3OutputArgs) ToMonitoringScheduleS3OutputOutputWithContext(ctx context.Context) MonitoringScheduleS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleS3OutputOutput)
}

func (i MonitoringScheduleS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleS3Output] {
	return pulumix.Output[MonitoringScheduleS3Output]{
		OutputState: i.ToMonitoringScheduleS3OutputOutputWithContext(ctx).OutputState,
	}
}

// Information about where and how to store the results of a monitoring job.
type MonitoringScheduleS3OutputOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleS3Output)(nil)).Elem()
}

func (o MonitoringScheduleS3OutputOutput) ToMonitoringScheduleS3OutputOutput() MonitoringScheduleS3OutputOutput {
	return o
}

func (o MonitoringScheduleS3OutputOutput) ToMonitoringScheduleS3OutputOutputWithContext(ctx context.Context) MonitoringScheduleS3OutputOutput {
	return o
}

func (o MonitoringScheduleS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleS3Output] {
	return pulumix.Output[MonitoringScheduleS3Output]{
		OutputState: o.OutputState,
	}
}

// The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
func (o MonitoringScheduleS3OutputOutput) LocalPath() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleS3Output) string { return v.LocalPath }).(pulumi.StringOutput)
}

// Whether to upload the results of the monitoring job continuously or after the job completes.
func (o MonitoringScheduleS3OutputOutput) S3UploadMode() MonitoringScheduleS3OutputS3UploadModePtrOutput {
	return o.ApplyT(func(v MonitoringScheduleS3Output) *MonitoringScheduleS3OutputS3UploadMode { return v.S3UploadMode }).(MonitoringScheduleS3OutputS3UploadModePtrOutput)
}

// A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
func (o MonitoringScheduleS3OutputOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleS3Output) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Configuration details about the monitoring schedule.
type MonitoringScheduleScheduleConfig struct {
	// Data Analysis end time, e.g. PT0H
	DataAnalysisEndTime *string `pulumi:"dataAnalysisEndTime"`
	// Data Analysis start time, e.g. -PT1H
	DataAnalysisStartTime *string `pulumi:"dataAnalysisStartTime"`
	// A cron expression or 'NOW' that describes details about the monitoring schedule.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// MonitoringScheduleScheduleConfigInput is an input type that accepts MonitoringScheduleScheduleConfigArgs and MonitoringScheduleScheduleConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleScheduleConfigInput` via:
//
//	MonitoringScheduleScheduleConfigArgs{...}
type MonitoringScheduleScheduleConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleScheduleConfigOutput() MonitoringScheduleScheduleConfigOutput
	ToMonitoringScheduleScheduleConfigOutputWithContext(context.Context) MonitoringScheduleScheduleConfigOutput
}

// Configuration details about the monitoring schedule.
type MonitoringScheduleScheduleConfigArgs struct {
	// Data Analysis end time, e.g. PT0H
	DataAnalysisEndTime pulumi.StringPtrInput `pulumi:"dataAnalysisEndTime"`
	// Data Analysis start time, e.g. -PT1H
	DataAnalysisStartTime pulumi.StringPtrInput `pulumi:"dataAnalysisStartTime"`
	// A cron expression or 'NOW' that describes details about the monitoring schedule.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (MonitoringScheduleScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleScheduleConfig)(nil)).Elem()
}

func (i MonitoringScheduleScheduleConfigArgs) ToMonitoringScheduleScheduleConfigOutput() MonitoringScheduleScheduleConfigOutput {
	return i.ToMonitoringScheduleScheduleConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleScheduleConfigArgs) ToMonitoringScheduleScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleScheduleConfigOutput)
}

func (i MonitoringScheduleScheduleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleScheduleConfig] {
	return pulumix.Output[MonitoringScheduleScheduleConfig]{
		OutputState: i.ToMonitoringScheduleScheduleConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleScheduleConfigArgs) ToMonitoringScheduleScheduleConfigPtrOutput() MonitoringScheduleScheduleConfigPtrOutput {
	return i.ToMonitoringScheduleScheduleConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleScheduleConfigArgs) ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleScheduleConfigOutput).ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleScheduleConfigPtrInput is an input type that accepts MonitoringScheduleScheduleConfigArgs, MonitoringScheduleScheduleConfigPtr and MonitoringScheduleScheduleConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleScheduleConfigPtrInput` via:
//
//	        MonitoringScheduleScheduleConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleScheduleConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleScheduleConfigPtrOutput() MonitoringScheduleScheduleConfigPtrOutput
	ToMonitoringScheduleScheduleConfigPtrOutputWithContext(context.Context) MonitoringScheduleScheduleConfigPtrOutput
}

type monitoringScheduleScheduleConfigPtrType MonitoringScheduleScheduleConfigArgs

func MonitoringScheduleScheduleConfigPtr(v *MonitoringScheduleScheduleConfigArgs) MonitoringScheduleScheduleConfigPtrInput {
	return (*monitoringScheduleScheduleConfigPtrType)(v)
}

func (*monitoringScheduleScheduleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleScheduleConfig)(nil)).Elem()
}

func (i *monitoringScheduleScheduleConfigPtrType) ToMonitoringScheduleScheduleConfigPtrOutput() MonitoringScheduleScheduleConfigPtrOutput {
	return i.ToMonitoringScheduleScheduleConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleScheduleConfigPtrType) ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleScheduleConfigPtrOutput)
}

func (i *monitoringScheduleScheduleConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleScheduleConfig] {
	return pulumix.Output[*MonitoringScheduleScheduleConfig]{
		OutputState: i.ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Configuration details about the monitoring schedule.
type MonitoringScheduleScheduleConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleScheduleConfigOutput) ToMonitoringScheduleScheduleConfigOutput() MonitoringScheduleScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleScheduleConfigOutput) ToMonitoringScheduleScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleScheduleConfigOutput) ToMonitoringScheduleScheduleConfigPtrOutput() MonitoringScheduleScheduleConfigPtrOutput {
	return o.ToMonitoringScheduleScheduleConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleScheduleConfigOutput) ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleScheduleConfig) *MonitoringScheduleScheduleConfig {
		return &v
	}).(MonitoringScheduleScheduleConfigPtrOutput)
}

func (o MonitoringScheduleScheduleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleScheduleConfig] {
	return pulumix.Output[MonitoringScheduleScheduleConfig]{
		OutputState: o.OutputState,
	}
}

// Data Analysis end time, e.g. PT0H
func (o MonitoringScheduleScheduleConfigOutput) DataAnalysisEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleScheduleConfig) *string { return v.DataAnalysisEndTime }).(pulumi.StringPtrOutput)
}

// Data Analysis start time, e.g. -PT1H
func (o MonitoringScheduleScheduleConfigOutput) DataAnalysisStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleScheduleConfig) *string { return v.DataAnalysisStartTime }).(pulumi.StringPtrOutput)
}

// A cron expression or 'NOW' that describes details about the monitoring schedule.
func (o MonitoringScheduleScheduleConfigOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleScheduleConfig) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type MonitoringScheduleScheduleConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleScheduleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleScheduleConfigPtrOutput) ToMonitoringScheduleScheduleConfigPtrOutput() MonitoringScheduleScheduleConfigPtrOutput {
	return o
}

func (o MonitoringScheduleScheduleConfigPtrOutput) ToMonitoringScheduleScheduleConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleScheduleConfigPtrOutput {
	return o
}

func (o MonitoringScheduleScheduleConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleScheduleConfig] {
	return pulumix.Output[*MonitoringScheduleScheduleConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleScheduleConfigPtrOutput) Elem() MonitoringScheduleScheduleConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleScheduleConfig) MonitoringScheduleScheduleConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleScheduleConfig
		return ret
	}).(MonitoringScheduleScheduleConfigOutput)
}

// Data Analysis end time, e.g. PT0H
func (o MonitoringScheduleScheduleConfigPtrOutput) DataAnalysisEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataAnalysisEndTime
	}).(pulumi.StringPtrOutput)
}

// Data Analysis start time, e.g. -PT1H
func (o MonitoringScheduleScheduleConfigPtrOutput) DataAnalysisStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataAnalysisStartTime
	}).(pulumi.StringPtrOutput)
}

// A cron expression or 'NOW' that describes details about the monitoring schedule.
func (o MonitoringScheduleScheduleConfigPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleScheduleConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

// The baseline statistics resource for a monitoring job.
type MonitoringScheduleStatisticsResource struct {
	// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
	S3Uri *string `pulumi:"s3Uri"`
}

// MonitoringScheduleStatisticsResourceInput is an input type that accepts MonitoringScheduleStatisticsResourceArgs and MonitoringScheduleStatisticsResourceOutput values.
// You can construct a concrete instance of `MonitoringScheduleStatisticsResourceInput` via:
//
//	MonitoringScheduleStatisticsResourceArgs{...}
type MonitoringScheduleStatisticsResourceInput interface {
	pulumi.Input

	ToMonitoringScheduleStatisticsResourceOutput() MonitoringScheduleStatisticsResourceOutput
	ToMonitoringScheduleStatisticsResourceOutputWithContext(context.Context) MonitoringScheduleStatisticsResourceOutput
}

// The baseline statistics resource for a monitoring job.
type MonitoringScheduleStatisticsResourceArgs struct {
	// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
	S3Uri pulumi.StringPtrInput `pulumi:"s3Uri"`
}

func (MonitoringScheduleStatisticsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleStatisticsResource)(nil)).Elem()
}

func (i MonitoringScheduleStatisticsResourceArgs) ToMonitoringScheduleStatisticsResourceOutput() MonitoringScheduleStatisticsResourceOutput {
	return i.ToMonitoringScheduleStatisticsResourceOutputWithContext(context.Background())
}

func (i MonitoringScheduleStatisticsResourceArgs) ToMonitoringScheduleStatisticsResourceOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStatisticsResourceOutput)
}

func (i MonitoringScheduleStatisticsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleStatisticsResource] {
	return pulumix.Output[MonitoringScheduleStatisticsResource]{
		OutputState: i.ToMonitoringScheduleStatisticsResourceOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleStatisticsResourceArgs) ToMonitoringScheduleStatisticsResourcePtrOutput() MonitoringScheduleStatisticsResourcePtrOutput {
	return i.ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleStatisticsResourceArgs) ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStatisticsResourceOutput).ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx)
}

// MonitoringScheduleStatisticsResourcePtrInput is an input type that accepts MonitoringScheduleStatisticsResourceArgs, MonitoringScheduleStatisticsResourcePtr and MonitoringScheduleStatisticsResourcePtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleStatisticsResourcePtrInput` via:
//
//	        MonitoringScheduleStatisticsResourceArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleStatisticsResourcePtrInput interface {
	pulumi.Input

	ToMonitoringScheduleStatisticsResourcePtrOutput() MonitoringScheduleStatisticsResourcePtrOutput
	ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(context.Context) MonitoringScheduleStatisticsResourcePtrOutput
}

type monitoringScheduleStatisticsResourcePtrType MonitoringScheduleStatisticsResourceArgs

func MonitoringScheduleStatisticsResourcePtr(v *MonitoringScheduleStatisticsResourceArgs) MonitoringScheduleStatisticsResourcePtrInput {
	return (*monitoringScheduleStatisticsResourcePtrType)(v)
}

func (*monitoringScheduleStatisticsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleStatisticsResource)(nil)).Elem()
}

func (i *monitoringScheduleStatisticsResourcePtrType) ToMonitoringScheduleStatisticsResourcePtrOutput() MonitoringScheduleStatisticsResourcePtrOutput {
	return i.ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleStatisticsResourcePtrType) ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStatisticsResourcePtrOutput)
}

func (i *monitoringScheduleStatisticsResourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleStatisticsResource] {
	return pulumix.Output[*MonitoringScheduleStatisticsResource]{
		OutputState: i.ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The baseline statistics resource for a monitoring job.
type MonitoringScheduleStatisticsResourceOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleStatisticsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleStatisticsResource)(nil)).Elem()
}

func (o MonitoringScheduleStatisticsResourceOutput) ToMonitoringScheduleStatisticsResourceOutput() MonitoringScheduleStatisticsResourceOutput {
	return o
}

func (o MonitoringScheduleStatisticsResourceOutput) ToMonitoringScheduleStatisticsResourceOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourceOutput {
	return o
}

func (o MonitoringScheduleStatisticsResourceOutput) ToMonitoringScheduleStatisticsResourcePtrOutput() MonitoringScheduleStatisticsResourcePtrOutput {
	return o.ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleStatisticsResourceOutput) ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleStatisticsResource) *MonitoringScheduleStatisticsResource {
		return &v
	}).(MonitoringScheduleStatisticsResourcePtrOutput)
}

func (o MonitoringScheduleStatisticsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleStatisticsResource] {
	return pulumix.Output[MonitoringScheduleStatisticsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
func (o MonitoringScheduleStatisticsResourceOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoringScheduleStatisticsResource) *string { return v.S3Uri }).(pulumi.StringPtrOutput)
}

type MonitoringScheduleStatisticsResourcePtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleStatisticsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleStatisticsResource)(nil)).Elem()
}

func (o MonitoringScheduleStatisticsResourcePtrOutput) ToMonitoringScheduleStatisticsResourcePtrOutput() MonitoringScheduleStatisticsResourcePtrOutput {
	return o
}

func (o MonitoringScheduleStatisticsResourcePtrOutput) ToMonitoringScheduleStatisticsResourcePtrOutputWithContext(ctx context.Context) MonitoringScheduleStatisticsResourcePtrOutput {
	return o
}

func (o MonitoringScheduleStatisticsResourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleStatisticsResource] {
	return pulumix.Output[*MonitoringScheduleStatisticsResource]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleStatisticsResourcePtrOutput) Elem() MonitoringScheduleStatisticsResourceOutput {
	return o.ApplyT(func(v *MonitoringScheduleStatisticsResource) MonitoringScheduleStatisticsResource {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleStatisticsResource
		return ret
	}).(MonitoringScheduleStatisticsResourceOutput)
}

// The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
func (o MonitoringScheduleStatisticsResourcePtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleStatisticsResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Uri
	}).(pulumi.StringPtrOutput)
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type MonitoringScheduleStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds int `pulumi:"maxRuntimeInSeconds"`
}

// MonitoringScheduleStoppingConditionInput is an input type that accepts MonitoringScheduleStoppingConditionArgs and MonitoringScheduleStoppingConditionOutput values.
// You can construct a concrete instance of `MonitoringScheduleStoppingConditionInput` via:
//
//	MonitoringScheduleStoppingConditionArgs{...}
type MonitoringScheduleStoppingConditionInput interface {
	pulumi.Input

	ToMonitoringScheduleStoppingConditionOutput() MonitoringScheduleStoppingConditionOutput
	ToMonitoringScheduleStoppingConditionOutputWithContext(context.Context) MonitoringScheduleStoppingConditionOutput
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type MonitoringScheduleStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumi.IntInput `pulumi:"maxRuntimeInSeconds"`
}

func (MonitoringScheduleStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleStoppingCondition)(nil)).Elem()
}

func (i MonitoringScheduleStoppingConditionArgs) ToMonitoringScheduleStoppingConditionOutput() MonitoringScheduleStoppingConditionOutput {
	return i.ToMonitoringScheduleStoppingConditionOutputWithContext(context.Background())
}

func (i MonitoringScheduleStoppingConditionArgs) ToMonitoringScheduleStoppingConditionOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStoppingConditionOutput)
}

func (i MonitoringScheduleStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleStoppingCondition] {
	return pulumix.Output[MonitoringScheduleStoppingCondition]{
		OutputState: i.ToMonitoringScheduleStoppingConditionOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleStoppingConditionArgs) ToMonitoringScheduleStoppingConditionPtrOutput() MonitoringScheduleStoppingConditionPtrOutput {
	return i.ToMonitoringScheduleStoppingConditionPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleStoppingConditionArgs) ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStoppingConditionOutput).ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx)
}

// MonitoringScheduleStoppingConditionPtrInput is an input type that accepts MonitoringScheduleStoppingConditionArgs, MonitoringScheduleStoppingConditionPtr and MonitoringScheduleStoppingConditionPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleStoppingConditionPtrInput` via:
//
//	        MonitoringScheduleStoppingConditionArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleStoppingConditionPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleStoppingConditionPtrOutput() MonitoringScheduleStoppingConditionPtrOutput
	ToMonitoringScheduleStoppingConditionPtrOutputWithContext(context.Context) MonitoringScheduleStoppingConditionPtrOutput
}

type monitoringScheduleStoppingConditionPtrType MonitoringScheduleStoppingConditionArgs

func MonitoringScheduleStoppingConditionPtr(v *MonitoringScheduleStoppingConditionArgs) MonitoringScheduleStoppingConditionPtrInput {
	return (*monitoringScheduleStoppingConditionPtrType)(v)
}

func (*monitoringScheduleStoppingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleStoppingCondition)(nil)).Elem()
}

func (i *monitoringScheduleStoppingConditionPtrType) ToMonitoringScheduleStoppingConditionPtrOutput() MonitoringScheduleStoppingConditionPtrOutput {
	return i.ToMonitoringScheduleStoppingConditionPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleStoppingConditionPtrType) ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleStoppingConditionPtrOutput)
}

func (i *monitoringScheduleStoppingConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleStoppingCondition] {
	return pulumix.Output[*MonitoringScheduleStoppingCondition]{
		OutputState: i.ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a time limit for how long the monitoring job is allowed to run.
type MonitoringScheduleStoppingConditionOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleStoppingCondition)(nil)).Elem()
}

func (o MonitoringScheduleStoppingConditionOutput) ToMonitoringScheduleStoppingConditionOutput() MonitoringScheduleStoppingConditionOutput {
	return o
}

func (o MonitoringScheduleStoppingConditionOutput) ToMonitoringScheduleStoppingConditionOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionOutput {
	return o
}

func (o MonitoringScheduleStoppingConditionOutput) ToMonitoringScheduleStoppingConditionPtrOutput() MonitoringScheduleStoppingConditionPtrOutput {
	return o.ToMonitoringScheduleStoppingConditionPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleStoppingConditionOutput) ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleStoppingCondition) *MonitoringScheduleStoppingCondition {
		return &v
	}).(MonitoringScheduleStoppingConditionPtrOutput)
}

func (o MonitoringScheduleStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleStoppingCondition] {
	return pulumix.Output[MonitoringScheduleStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o MonitoringScheduleStoppingConditionOutput) MaxRuntimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v MonitoringScheduleStoppingCondition) int { return v.MaxRuntimeInSeconds }).(pulumi.IntOutput)
}

type MonitoringScheduleStoppingConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleStoppingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleStoppingCondition)(nil)).Elem()
}

func (o MonitoringScheduleStoppingConditionPtrOutput) ToMonitoringScheduleStoppingConditionPtrOutput() MonitoringScheduleStoppingConditionPtrOutput {
	return o
}

func (o MonitoringScheduleStoppingConditionPtrOutput) ToMonitoringScheduleStoppingConditionPtrOutputWithContext(ctx context.Context) MonitoringScheduleStoppingConditionPtrOutput {
	return o
}

func (o MonitoringScheduleStoppingConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleStoppingCondition] {
	return pulumix.Output[*MonitoringScheduleStoppingCondition]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleStoppingConditionPtrOutput) Elem() MonitoringScheduleStoppingConditionOutput {
	return o.ApplyT(func(v *MonitoringScheduleStoppingCondition) MonitoringScheduleStoppingCondition {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleStoppingCondition
		return ret
	}).(MonitoringScheduleStoppingConditionOutput)
}

// The maximum runtime allowed in seconds.
func (o MonitoringScheduleStoppingConditionPtrOutput) MaxRuntimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitoringScheduleStoppingCondition) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRuntimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type MonitoringScheduleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// MonitoringScheduleTagInput is an input type that accepts MonitoringScheduleTagArgs and MonitoringScheduleTagOutput values.
// You can construct a concrete instance of `MonitoringScheduleTagInput` via:
//
//	MonitoringScheduleTagArgs{...}
type MonitoringScheduleTagInput interface {
	pulumi.Input

	ToMonitoringScheduleTagOutput() MonitoringScheduleTagOutput
	ToMonitoringScheduleTagOutputWithContext(context.Context) MonitoringScheduleTagOutput
}

// A key-value pair to associate with a resource.
type MonitoringScheduleTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (MonitoringScheduleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleTag)(nil)).Elem()
}

func (i MonitoringScheduleTagArgs) ToMonitoringScheduleTagOutput() MonitoringScheduleTagOutput {
	return i.ToMonitoringScheduleTagOutputWithContext(context.Background())
}

func (i MonitoringScheduleTagArgs) ToMonitoringScheduleTagOutputWithContext(ctx context.Context) MonitoringScheduleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleTagOutput)
}

func (i MonitoringScheduleTagArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleTag] {
	return pulumix.Output[MonitoringScheduleTag]{
		OutputState: i.ToMonitoringScheduleTagOutputWithContext(ctx).OutputState,
	}
}

// MonitoringScheduleTagArrayInput is an input type that accepts MonitoringScheduleTagArray and MonitoringScheduleTagArrayOutput values.
// You can construct a concrete instance of `MonitoringScheduleTagArrayInput` via:
//
//	MonitoringScheduleTagArray{ MonitoringScheduleTagArgs{...} }
type MonitoringScheduleTagArrayInput interface {
	pulumi.Input

	ToMonitoringScheduleTagArrayOutput() MonitoringScheduleTagArrayOutput
	ToMonitoringScheduleTagArrayOutputWithContext(context.Context) MonitoringScheduleTagArrayOutput
}

type MonitoringScheduleTagArray []MonitoringScheduleTagInput

func (MonitoringScheduleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleTag)(nil)).Elem()
}

func (i MonitoringScheduleTagArray) ToMonitoringScheduleTagArrayOutput() MonitoringScheduleTagArrayOutput {
	return i.ToMonitoringScheduleTagArrayOutputWithContext(context.Background())
}

func (i MonitoringScheduleTagArray) ToMonitoringScheduleTagArrayOutputWithContext(ctx context.Context) MonitoringScheduleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleTagArrayOutput)
}

func (i MonitoringScheduleTagArray) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleTag] {
	return pulumix.Output[[]MonitoringScheduleTag]{
		OutputState: i.ToMonitoringScheduleTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type MonitoringScheduleTagOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleTag)(nil)).Elem()
}

func (o MonitoringScheduleTagOutput) ToMonitoringScheduleTagOutput() MonitoringScheduleTagOutput {
	return o
}

func (o MonitoringScheduleTagOutput) ToMonitoringScheduleTagOutputWithContext(ctx context.Context) MonitoringScheduleTagOutput {
	return o
}

func (o MonitoringScheduleTagOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleTag] {
	return pulumix.Output[MonitoringScheduleTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o MonitoringScheduleTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o MonitoringScheduleTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoringScheduleTag) string { return v.Value }).(pulumi.StringOutput)
}

type MonitoringScheduleTagArrayOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoringScheduleTag)(nil)).Elem()
}

func (o MonitoringScheduleTagArrayOutput) ToMonitoringScheduleTagArrayOutput() MonitoringScheduleTagArrayOutput {
	return o
}

func (o MonitoringScheduleTagArrayOutput) ToMonitoringScheduleTagArrayOutputWithContext(ctx context.Context) MonitoringScheduleTagArrayOutput {
	return o
}

func (o MonitoringScheduleTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]MonitoringScheduleTag] {
	return pulumix.Output[[]MonitoringScheduleTag]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleTagArrayOutput) Index(i pulumi.IntInput) MonitoringScheduleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoringScheduleTag {
		return vs[0].([]MonitoringScheduleTag)[vs[1].(int)]
	}).(MonitoringScheduleTagOutput)
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type MonitoringScheduleVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets []string `pulumi:"subnets"`
}

// MonitoringScheduleVpcConfigInput is an input type that accepts MonitoringScheduleVpcConfigArgs and MonitoringScheduleVpcConfigOutput values.
// You can construct a concrete instance of `MonitoringScheduleVpcConfigInput` via:
//
//	MonitoringScheduleVpcConfigArgs{...}
type MonitoringScheduleVpcConfigInput interface {
	pulumi.Input

	ToMonitoringScheduleVpcConfigOutput() MonitoringScheduleVpcConfigOutput
	ToMonitoringScheduleVpcConfigOutputWithContext(context.Context) MonitoringScheduleVpcConfigOutput
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type MonitoringScheduleVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (MonitoringScheduleVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleVpcConfig)(nil)).Elem()
}

func (i MonitoringScheduleVpcConfigArgs) ToMonitoringScheduleVpcConfigOutput() MonitoringScheduleVpcConfigOutput {
	return i.ToMonitoringScheduleVpcConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleVpcConfigArgs) ToMonitoringScheduleVpcConfigOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleVpcConfigOutput)
}

func (i MonitoringScheduleVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleVpcConfig] {
	return pulumix.Output[MonitoringScheduleVpcConfig]{
		OutputState: i.ToMonitoringScheduleVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i MonitoringScheduleVpcConfigArgs) ToMonitoringScheduleVpcConfigPtrOutput() MonitoringScheduleVpcConfigPtrOutput {
	return i.ToMonitoringScheduleVpcConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringScheduleVpcConfigArgs) ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleVpcConfigOutput).ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx)
}

// MonitoringScheduleVpcConfigPtrInput is an input type that accepts MonitoringScheduleVpcConfigArgs, MonitoringScheduleVpcConfigPtr and MonitoringScheduleVpcConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringScheduleVpcConfigPtrInput` via:
//
//	        MonitoringScheduleVpcConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringScheduleVpcConfigPtrInput interface {
	pulumi.Input

	ToMonitoringScheduleVpcConfigPtrOutput() MonitoringScheduleVpcConfigPtrOutput
	ToMonitoringScheduleVpcConfigPtrOutputWithContext(context.Context) MonitoringScheduleVpcConfigPtrOutput
}

type monitoringScheduleVpcConfigPtrType MonitoringScheduleVpcConfigArgs

func MonitoringScheduleVpcConfigPtr(v *MonitoringScheduleVpcConfigArgs) MonitoringScheduleVpcConfigPtrInput {
	return (*monitoringScheduleVpcConfigPtrType)(v)
}

func (*monitoringScheduleVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleVpcConfig)(nil)).Elem()
}

func (i *monitoringScheduleVpcConfigPtrType) ToMonitoringScheduleVpcConfigPtrOutput() MonitoringScheduleVpcConfigPtrOutput {
	return i.ToMonitoringScheduleVpcConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringScheduleVpcConfigPtrType) ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleVpcConfigPtrOutput)
}

func (i *monitoringScheduleVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleVpcConfig] {
	return pulumix.Output[*MonitoringScheduleVpcConfig]{
		OutputState: i.ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
type MonitoringScheduleVpcConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleVpcConfig)(nil)).Elem()
}

func (o MonitoringScheduleVpcConfigOutput) ToMonitoringScheduleVpcConfigOutput() MonitoringScheduleVpcConfigOutput {
	return o
}

func (o MonitoringScheduleVpcConfigOutput) ToMonitoringScheduleVpcConfigOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigOutput {
	return o
}

func (o MonitoringScheduleVpcConfigOutput) ToMonitoringScheduleVpcConfigPtrOutput() MonitoringScheduleVpcConfigPtrOutput {
	return o.ToMonitoringScheduleVpcConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringScheduleVpcConfigOutput) ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringScheduleVpcConfig) *MonitoringScheduleVpcConfig {
		return &v
	}).(MonitoringScheduleVpcConfigPtrOutput)
}

func (o MonitoringScheduleVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleVpcConfig] {
	return pulumix.Output[MonitoringScheduleVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o MonitoringScheduleVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o MonitoringScheduleVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoringScheduleVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type MonitoringScheduleVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringScheduleVpcConfig)(nil)).Elem()
}

func (o MonitoringScheduleVpcConfigPtrOutput) ToMonitoringScheduleVpcConfigPtrOutput() MonitoringScheduleVpcConfigPtrOutput {
	return o
}

func (o MonitoringScheduleVpcConfigPtrOutput) ToMonitoringScheduleVpcConfigPtrOutputWithContext(ctx context.Context) MonitoringScheduleVpcConfigPtrOutput {
	return o
}

func (o MonitoringScheduleVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleVpcConfig] {
	return pulumix.Output[*MonitoringScheduleVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o MonitoringScheduleVpcConfigPtrOutput) Elem() MonitoringScheduleVpcConfigOutput {
	return o.ApplyT(func(v *MonitoringScheduleVpcConfig) MonitoringScheduleVpcConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringScheduleVpcConfig
		return ret
	}).(MonitoringScheduleVpcConfigOutput)
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
func (o MonitoringScheduleVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
func (o MonitoringScheduleVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringScheduleVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type NotebookInstanceInstanceMetadataServiceConfiguration struct {
	MinimumInstanceMetadataServiceVersion string `pulumi:"minimumInstanceMetadataServiceVersion"`
}

// NotebookInstanceInstanceMetadataServiceConfigurationInput is an input type that accepts NotebookInstanceInstanceMetadataServiceConfigurationArgs and NotebookInstanceInstanceMetadataServiceConfigurationOutput values.
// You can construct a concrete instance of `NotebookInstanceInstanceMetadataServiceConfigurationInput` via:
//
//	NotebookInstanceInstanceMetadataServiceConfigurationArgs{...}
type NotebookInstanceInstanceMetadataServiceConfigurationInput interface {
	pulumi.Input

	ToNotebookInstanceInstanceMetadataServiceConfigurationOutput() NotebookInstanceInstanceMetadataServiceConfigurationOutput
	ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(context.Context) NotebookInstanceInstanceMetadataServiceConfigurationOutput
}

type NotebookInstanceInstanceMetadataServiceConfigurationArgs struct {
	MinimumInstanceMetadataServiceVersion pulumi.StringInput `pulumi:"minimumInstanceMetadataServiceVersion"`
}

func (NotebookInstanceInstanceMetadataServiceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationOutput() NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return i.ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(context.Background())
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceInstanceMetadataServiceConfigurationOutput)
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration] {
	return pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration]{
		OutputState: i.ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutput() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return i.ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(context.Background())
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceInstanceMetadataServiceConfigurationOutput).ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx)
}

// NotebookInstanceInstanceMetadataServiceConfigurationPtrInput is an input type that accepts NotebookInstanceInstanceMetadataServiceConfigurationArgs, NotebookInstanceInstanceMetadataServiceConfigurationPtr and NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput values.
// You can construct a concrete instance of `NotebookInstanceInstanceMetadataServiceConfigurationPtrInput` via:
//
//	        NotebookInstanceInstanceMetadataServiceConfigurationArgs{...}
//
//	or:
//
//	        nil
type NotebookInstanceInstanceMetadataServiceConfigurationPtrInput interface {
	pulumi.Input

	ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutput() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput
	ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(context.Context) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput
}

type notebookInstanceInstanceMetadataServiceConfigurationPtrType NotebookInstanceInstanceMetadataServiceConfigurationArgs

func NotebookInstanceInstanceMetadataServiceConfigurationPtr(v *NotebookInstanceInstanceMetadataServiceConfigurationArgs) NotebookInstanceInstanceMetadataServiceConfigurationPtrInput {
	return (*notebookInstanceInstanceMetadataServiceConfigurationPtrType)(v)
}

func (*notebookInstanceInstanceMetadataServiceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (i *notebookInstanceInstanceMetadataServiceConfigurationPtrType) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutput() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return i.ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(context.Background())
}

func (i *notebookInstanceInstanceMetadataServiceConfigurationPtrType) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput)
}

func (i *notebookInstanceInstanceMetadataServiceConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*NotebookInstanceInstanceMetadataServiceConfiguration] {
	return pulumix.Output[*NotebookInstanceInstanceMetadataServiceConfiguration]{
		OutputState: i.ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type NotebookInstanceInstanceMetadataServiceConfigurationOutput struct{ *pulumi.OutputState }

func (NotebookInstanceInstanceMetadataServiceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationOutput() NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutput() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return o.ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(context.Background())
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotebookInstanceInstanceMetadataServiceConfiguration) *NotebookInstanceInstanceMetadataServiceConfiguration {
		return &v
	}).(NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput)
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration] {
	return pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) MinimumInstanceMetadataServiceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v NotebookInstanceInstanceMetadataServiceConfiguration) string {
		return v.MinimumInstanceMetadataServiceVersion
	}).(pulumi.StringOutput)
}

type NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutput() NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationPtrOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*NotebookInstanceInstanceMetadataServiceConfiguration] {
	return pulumix.Output[*NotebookInstanceInstanceMetadataServiceConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) Elem() NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return o.ApplyT(func(v *NotebookInstanceInstanceMetadataServiceConfiguration) NotebookInstanceInstanceMetadataServiceConfiguration {
		if v != nil {
			return *v
		}
		var ret NotebookInstanceInstanceMetadataServiceConfiguration
		return ret
	}).(NotebookInstanceInstanceMetadataServiceConfigurationOutput)
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput) MinimumInstanceMetadataServiceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotebookInstanceInstanceMetadataServiceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.MinimumInstanceMetadataServiceVersion
	}).(pulumi.StringPtrOutput)
}

type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook struct {
	Content *string `pulumi:"content"`
}

// NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookInput is an input type that accepts NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs and NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput values.
// You can construct a concrete instance of `NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookInput` via:
//
//	NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs{...}
type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookInput interface {
	pulumi.Input

	ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput
	ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutputWithContext(context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput
}

type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs struct {
	Content pulumi.StringPtrInput `pulumi:"content"`
}

func (NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook)(nil)).Elem()
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput {
	return i.ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutputWithContext(context.Background())
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutputWithContext(ctx context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput)
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook] {
	return pulumix.Output[NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook]{
		OutputState: i.ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutputWithContext(ctx).OutputState,
	}
}

// NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayInput is an input type that accepts NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray and NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput values.
// You can construct a concrete instance of `NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayInput` via:
//
//	NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray{ NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs{...} }
type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayInput interface {
	pulumi.Input

	ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput
	ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutputWithContext(context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput
}

type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray []NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookInput

func (NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook)(nil)).Elem()
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput {
	return i.ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutputWithContext(context.Background())
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutputWithContext(ctx context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput)
}

func (i NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray) ToOutput(ctx context.Context) pulumix.Output[[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook] {
	return pulumix.Output[[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook]{
		OutputState: i.ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutputWithContext(ctx).OutputState,
	}
}

type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput struct{ *pulumi.OutputState }

func (NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook)(nil)).Elem()
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutputWithContext(ctx context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook] {
	return pulumix.Output[NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook) *string { return v.Content }).(pulumi.StringPtrOutput)
}

type NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput struct{ *pulumi.OutputState }

func (NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook)(nil)).Elem()
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput() NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput) ToNotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutputWithContext(ctx context.Context) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook] {
	return pulumix.Output[[]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput) Index(i pulumi.IntInput) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook {
		return vs[0].([]NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook)[vs[1].(int)]
	}).(NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput)
}

type NotebookInstanceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// NotebookInstanceTagInput is an input type that accepts NotebookInstanceTagArgs and NotebookInstanceTagOutput values.
// You can construct a concrete instance of `NotebookInstanceTagInput` via:
//
//	NotebookInstanceTagArgs{...}
type NotebookInstanceTagInput interface {
	pulumi.Input

	ToNotebookInstanceTagOutput() NotebookInstanceTagOutput
	ToNotebookInstanceTagOutputWithContext(context.Context) NotebookInstanceTagOutput
}

type NotebookInstanceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotebookInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceTag)(nil)).Elem()
}

func (i NotebookInstanceTagArgs) ToNotebookInstanceTagOutput() NotebookInstanceTagOutput {
	return i.ToNotebookInstanceTagOutputWithContext(context.Background())
}

func (i NotebookInstanceTagArgs) ToNotebookInstanceTagOutputWithContext(ctx context.Context) NotebookInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceTagOutput)
}

func (i NotebookInstanceTagArgs) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceTag] {
	return pulumix.Output[NotebookInstanceTag]{
		OutputState: i.ToNotebookInstanceTagOutputWithContext(ctx).OutputState,
	}
}

// NotebookInstanceTagArrayInput is an input type that accepts NotebookInstanceTagArray and NotebookInstanceTagArrayOutput values.
// You can construct a concrete instance of `NotebookInstanceTagArrayInput` via:
//
//	NotebookInstanceTagArray{ NotebookInstanceTagArgs{...} }
type NotebookInstanceTagArrayInput interface {
	pulumi.Input

	ToNotebookInstanceTagArrayOutput() NotebookInstanceTagArrayOutput
	ToNotebookInstanceTagArrayOutputWithContext(context.Context) NotebookInstanceTagArrayOutput
}

type NotebookInstanceTagArray []NotebookInstanceTagInput

func (NotebookInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotebookInstanceTag)(nil)).Elem()
}

func (i NotebookInstanceTagArray) ToNotebookInstanceTagArrayOutput() NotebookInstanceTagArrayOutput {
	return i.ToNotebookInstanceTagArrayOutputWithContext(context.Background())
}

func (i NotebookInstanceTagArray) ToNotebookInstanceTagArrayOutputWithContext(ctx context.Context) NotebookInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceTagArrayOutput)
}

func (i NotebookInstanceTagArray) ToOutput(ctx context.Context) pulumix.Output[[]NotebookInstanceTag] {
	return pulumix.Output[[]NotebookInstanceTag]{
		OutputState: i.ToNotebookInstanceTagArrayOutputWithContext(ctx).OutputState,
	}
}

type NotebookInstanceTagOutput struct{ *pulumi.OutputState }

func (NotebookInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceTag)(nil)).Elem()
}

func (o NotebookInstanceTagOutput) ToNotebookInstanceTagOutput() NotebookInstanceTagOutput {
	return o
}

func (o NotebookInstanceTagOutput) ToNotebookInstanceTagOutputWithContext(ctx context.Context) NotebookInstanceTagOutput {
	return o
}

func (o NotebookInstanceTagOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceTag] {
	return pulumix.Output[NotebookInstanceTag]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NotebookInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o NotebookInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotebookInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type NotebookInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (NotebookInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotebookInstanceTag)(nil)).Elem()
}

func (o NotebookInstanceTagArrayOutput) ToNotebookInstanceTagArrayOutput() NotebookInstanceTagArrayOutput {
	return o
}

func (o NotebookInstanceTagArrayOutput) ToNotebookInstanceTagArrayOutputWithContext(ctx context.Context) NotebookInstanceTagArrayOutput {
	return o
}

func (o NotebookInstanceTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NotebookInstanceTag] {
	return pulumix.Output[[]NotebookInstanceTag]{
		OutputState: o.OutputState,
	}
}

func (o NotebookInstanceTagArrayOutput) Index(i pulumi.IntInput) NotebookInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotebookInstanceTag {
		return vs[0].([]NotebookInstanceTag)[vs[1].(int)]
	}).(NotebookInstanceTagOutput)
}

type OfflineStoreConfigProperties struct {
	DataCatalogConfig        *FeatureGroupDataCatalogConfig `pulumi:"dataCatalogConfig"`
	DisableGlueTableCreation *bool                          `pulumi:"disableGlueTableCreation"`
	S3StorageConfig          FeatureGroupS3StorageConfig    `pulumi:"s3StorageConfig"`
	TableFormat              *FeatureGroupTableFormat       `pulumi:"tableFormat"`
}

// OfflineStoreConfigPropertiesInput is an input type that accepts OfflineStoreConfigPropertiesArgs and OfflineStoreConfigPropertiesOutput values.
// You can construct a concrete instance of `OfflineStoreConfigPropertiesInput` via:
//
//	OfflineStoreConfigPropertiesArgs{...}
type OfflineStoreConfigPropertiesInput interface {
	pulumi.Input

	ToOfflineStoreConfigPropertiesOutput() OfflineStoreConfigPropertiesOutput
	ToOfflineStoreConfigPropertiesOutputWithContext(context.Context) OfflineStoreConfigPropertiesOutput
}

type OfflineStoreConfigPropertiesArgs struct {
	DataCatalogConfig        FeatureGroupDataCatalogConfigPtrInput `pulumi:"dataCatalogConfig"`
	DisableGlueTableCreation pulumi.BoolPtrInput                   `pulumi:"disableGlueTableCreation"`
	S3StorageConfig          FeatureGroupS3StorageConfigInput      `pulumi:"s3StorageConfig"`
	TableFormat              FeatureGroupTableFormatPtrInput       `pulumi:"tableFormat"`
}

func (OfflineStoreConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfflineStoreConfigProperties)(nil)).Elem()
}

func (i OfflineStoreConfigPropertiesArgs) ToOfflineStoreConfigPropertiesOutput() OfflineStoreConfigPropertiesOutput {
	return i.ToOfflineStoreConfigPropertiesOutputWithContext(context.Background())
}

func (i OfflineStoreConfigPropertiesArgs) ToOfflineStoreConfigPropertiesOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfflineStoreConfigPropertiesOutput)
}

func (i OfflineStoreConfigPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[OfflineStoreConfigProperties] {
	return pulumix.Output[OfflineStoreConfigProperties]{
		OutputState: i.ToOfflineStoreConfigPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i OfflineStoreConfigPropertiesArgs) ToOfflineStoreConfigPropertiesPtrOutput() OfflineStoreConfigPropertiesPtrOutput {
	return i.ToOfflineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i OfflineStoreConfigPropertiesArgs) ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfflineStoreConfigPropertiesOutput).ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx)
}

// OfflineStoreConfigPropertiesPtrInput is an input type that accepts OfflineStoreConfigPropertiesArgs, OfflineStoreConfigPropertiesPtr and OfflineStoreConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `OfflineStoreConfigPropertiesPtrInput` via:
//
//	        OfflineStoreConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type OfflineStoreConfigPropertiesPtrInput interface {
	pulumi.Input

	ToOfflineStoreConfigPropertiesPtrOutput() OfflineStoreConfigPropertiesPtrOutput
	ToOfflineStoreConfigPropertiesPtrOutputWithContext(context.Context) OfflineStoreConfigPropertiesPtrOutput
}

type offlineStoreConfigPropertiesPtrType OfflineStoreConfigPropertiesArgs

func OfflineStoreConfigPropertiesPtr(v *OfflineStoreConfigPropertiesArgs) OfflineStoreConfigPropertiesPtrInput {
	return (*offlineStoreConfigPropertiesPtrType)(v)
}

func (*offlineStoreConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OfflineStoreConfigProperties)(nil)).Elem()
}

func (i *offlineStoreConfigPropertiesPtrType) ToOfflineStoreConfigPropertiesPtrOutput() OfflineStoreConfigPropertiesPtrOutput {
	return i.ToOfflineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *offlineStoreConfigPropertiesPtrType) ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfflineStoreConfigPropertiesPtrOutput)
}

func (i *offlineStoreConfigPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*OfflineStoreConfigProperties] {
	return pulumix.Output[*OfflineStoreConfigProperties]{
		OutputState: i.ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type OfflineStoreConfigPropertiesOutput struct{ *pulumi.OutputState }

func (OfflineStoreConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfflineStoreConfigProperties)(nil)).Elem()
}

func (o OfflineStoreConfigPropertiesOutput) ToOfflineStoreConfigPropertiesOutput() OfflineStoreConfigPropertiesOutput {
	return o
}

func (o OfflineStoreConfigPropertiesOutput) ToOfflineStoreConfigPropertiesOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesOutput {
	return o
}

func (o OfflineStoreConfigPropertiesOutput) ToOfflineStoreConfigPropertiesPtrOutput() OfflineStoreConfigPropertiesPtrOutput {
	return o.ToOfflineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o OfflineStoreConfigPropertiesOutput) ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OfflineStoreConfigProperties) *OfflineStoreConfigProperties {
		return &v
	}).(OfflineStoreConfigPropertiesPtrOutput)
}

func (o OfflineStoreConfigPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[OfflineStoreConfigProperties] {
	return pulumix.Output[OfflineStoreConfigProperties]{
		OutputState: o.OutputState,
	}
}

func (o OfflineStoreConfigPropertiesOutput) DataCatalogConfig() FeatureGroupDataCatalogConfigPtrOutput {
	return o.ApplyT(func(v OfflineStoreConfigProperties) *FeatureGroupDataCatalogConfig { return v.DataCatalogConfig }).(FeatureGroupDataCatalogConfigPtrOutput)
}

func (o OfflineStoreConfigPropertiesOutput) DisableGlueTableCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OfflineStoreConfigProperties) *bool { return v.DisableGlueTableCreation }).(pulumi.BoolPtrOutput)
}

func (o OfflineStoreConfigPropertiesOutput) S3StorageConfig() FeatureGroupS3StorageConfigOutput {
	return o.ApplyT(func(v OfflineStoreConfigProperties) FeatureGroupS3StorageConfig { return v.S3StorageConfig }).(FeatureGroupS3StorageConfigOutput)
}

func (o OfflineStoreConfigPropertiesOutput) TableFormat() FeatureGroupTableFormatPtrOutput {
	return o.ApplyT(func(v OfflineStoreConfigProperties) *FeatureGroupTableFormat { return v.TableFormat }).(FeatureGroupTableFormatPtrOutput)
}

type OfflineStoreConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OfflineStoreConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OfflineStoreConfigProperties)(nil)).Elem()
}

func (o OfflineStoreConfigPropertiesPtrOutput) ToOfflineStoreConfigPropertiesPtrOutput() OfflineStoreConfigPropertiesPtrOutput {
	return o
}

func (o OfflineStoreConfigPropertiesPtrOutput) ToOfflineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OfflineStoreConfigPropertiesPtrOutput {
	return o
}

func (o OfflineStoreConfigPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OfflineStoreConfigProperties] {
	return pulumix.Output[*OfflineStoreConfigProperties]{
		OutputState: o.OutputState,
	}
}

func (o OfflineStoreConfigPropertiesPtrOutput) Elem() OfflineStoreConfigPropertiesOutput {
	return o.ApplyT(func(v *OfflineStoreConfigProperties) OfflineStoreConfigProperties {
		if v != nil {
			return *v
		}
		var ret OfflineStoreConfigProperties
		return ret
	}).(OfflineStoreConfigPropertiesOutput)
}

func (o OfflineStoreConfigPropertiesPtrOutput) DataCatalogConfig() FeatureGroupDataCatalogConfigPtrOutput {
	return o.ApplyT(func(v *OfflineStoreConfigProperties) *FeatureGroupDataCatalogConfig {
		if v == nil {
			return nil
		}
		return v.DataCatalogConfig
	}).(FeatureGroupDataCatalogConfigPtrOutput)
}

func (o OfflineStoreConfigPropertiesPtrOutput) DisableGlueTableCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OfflineStoreConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableGlueTableCreation
	}).(pulumi.BoolPtrOutput)
}

func (o OfflineStoreConfigPropertiesPtrOutput) S3StorageConfig() FeatureGroupS3StorageConfigPtrOutput {
	return o.ApplyT(func(v *OfflineStoreConfigProperties) *FeatureGroupS3StorageConfig {
		if v == nil {
			return nil
		}
		return &v.S3StorageConfig
	}).(FeatureGroupS3StorageConfigPtrOutput)
}

func (o OfflineStoreConfigPropertiesPtrOutput) TableFormat() FeatureGroupTableFormatPtrOutput {
	return o.ApplyT(func(v *OfflineStoreConfigProperties) *FeatureGroupTableFormat {
		if v == nil {
			return nil
		}
		return v.TableFormat
	}).(FeatureGroupTableFormatPtrOutput)
}

type OnlineStoreConfigProperties struct {
	EnableOnlineStore *bool                                  `pulumi:"enableOnlineStore"`
	SecurityConfig    *FeatureGroupOnlineStoreSecurityConfig `pulumi:"securityConfig"`
	StorageType       *FeatureGroupStorageType               `pulumi:"storageType"`
}

// OnlineStoreConfigPropertiesInput is an input type that accepts OnlineStoreConfigPropertiesArgs and OnlineStoreConfigPropertiesOutput values.
// You can construct a concrete instance of `OnlineStoreConfigPropertiesInput` via:
//
//	OnlineStoreConfigPropertiesArgs{...}
type OnlineStoreConfigPropertiesInput interface {
	pulumi.Input

	ToOnlineStoreConfigPropertiesOutput() OnlineStoreConfigPropertiesOutput
	ToOnlineStoreConfigPropertiesOutputWithContext(context.Context) OnlineStoreConfigPropertiesOutput
}

type OnlineStoreConfigPropertiesArgs struct {
	EnableOnlineStore pulumi.BoolPtrInput                           `pulumi:"enableOnlineStore"`
	SecurityConfig    FeatureGroupOnlineStoreSecurityConfigPtrInput `pulumi:"securityConfig"`
	StorageType       FeatureGroupStorageTypePtrInput               `pulumi:"storageType"`
}

func (OnlineStoreConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineStoreConfigProperties)(nil)).Elem()
}

func (i OnlineStoreConfigPropertiesArgs) ToOnlineStoreConfigPropertiesOutput() OnlineStoreConfigPropertiesOutput {
	return i.ToOnlineStoreConfigPropertiesOutputWithContext(context.Background())
}

func (i OnlineStoreConfigPropertiesArgs) ToOnlineStoreConfigPropertiesOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineStoreConfigPropertiesOutput)
}

func (i OnlineStoreConfigPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[OnlineStoreConfigProperties] {
	return pulumix.Output[OnlineStoreConfigProperties]{
		OutputState: i.ToOnlineStoreConfigPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i OnlineStoreConfigPropertiesArgs) ToOnlineStoreConfigPropertiesPtrOutput() OnlineStoreConfigPropertiesPtrOutput {
	return i.ToOnlineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i OnlineStoreConfigPropertiesArgs) ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineStoreConfigPropertiesOutput).ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx)
}

// OnlineStoreConfigPropertiesPtrInput is an input type that accepts OnlineStoreConfigPropertiesArgs, OnlineStoreConfigPropertiesPtr and OnlineStoreConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `OnlineStoreConfigPropertiesPtrInput` via:
//
//	        OnlineStoreConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type OnlineStoreConfigPropertiesPtrInput interface {
	pulumi.Input

	ToOnlineStoreConfigPropertiesPtrOutput() OnlineStoreConfigPropertiesPtrOutput
	ToOnlineStoreConfigPropertiesPtrOutputWithContext(context.Context) OnlineStoreConfigPropertiesPtrOutput
}

type onlineStoreConfigPropertiesPtrType OnlineStoreConfigPropertiesArgs

func OnlineStoreConfigPropertiesPtr(v *OnlineStoreConfigPropertiesArgs) OnlineStoreConfigPropertiesPtrInput {
	return (*onlineStoreConfigPropertiesPtrType)(v)
}

func (*onlineStoreConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineStoreConfigProperties)(nil)).Elem()
}

func (i *onlineStoreConfigPropertiesPtrType) ToOnlineStoreConfigPropertiesPtrOutput() OnlineStoreConfigPropertiesPtrOutput {
	return i.ToOnlineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *onlineStoreConfigPropertiesPtrType) ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineStoreConfigPropertiesPtrOutput)
}

func (i *onlineStoreConfigPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*OnlineStoreConfigProperties] {
	return pulumix.Output[*OnlineStoreConfigProperties]{
		OutputState: i.ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type OnlineStoreConfigPropertiesOutput struct{ *pulumi.OutputState }

func (OnlineStoreConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineStoreConfigProperties)(nil)).Elem()
}

func (o OnlineStoreConfigPropertiesOutput) ToOnlineStoreConfigPropertiesOutput() OnlineStoreConfigPropertiesOutput {
	return o
}

func (o OnlineStoreConfigPropertiesOutput) ToOnlineStoreConfigPropertiesOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesOutput {
	return o
}

func (o OnlineStoreConfigPropertiesOutput) ToOnlineStoreConfigPropertiesPtrOutput() OnlineStoreConfigPropertiesPtrOutput {
	return o.ToOnlineStoreConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o OnlineStoreConfigPropertiesOutput) ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineStoreConfigProperties) *OnlineStoreConfigProperties {
		return &v
	}).(OnlineStoreConfigPropertiesPtrOutput)
}

func (o OnlineStoreConfigPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[OnlineStoreConfigProperties] {
	return pulumix.Output[OnlineStoreConfigProperties]{
		OutputState: o.OutputState,
	}
}

func (o OnlineStoreConfigPropertiesOutput) EnableOnlineStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnlineStoreConfigProperties) *bool { return v.EnableOnlineStore }).(pulumi.BoolPtrOutput)
}

func (o OnlineStoreConfigPropertiesOutput) SecurityConfig() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o.ApplyT(func(v OnlineStoreConfigProperties) *FeatureGroupOnlineStoreSecurityConfig { return v.SecurityConfig }).(FeatureGroupOnlineStoreSecurityConfigPtrOutput)
}

func (o OnlineStoreConfigPropertiesOutput) StorageType() FeatureGroupStorageTypePtrOutput {
	return o.ApplyT(func(v OnlineStoreConfigProperties) *FeatureGroupStorageType { return v.StorageType }).(FeatureGroupStorageTypePtrOutput)
}

type OnlineStoreConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OnlineStoreConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineStoreConfigProperties)(nil)).Elem()
}

func (o OnlineStoreConfigPropertiesPtrOutput) ToOnlineStoreConfigPropertiesPtrOutput() OnlineStoreConfigPropertiesPtrOutput {
	return o
}

func (o OnlineStoreConfigPropertiesPtrOutput) ToOnlineStoreConfigPropertiesPtrOutputWithContext(ctx context.Context) OnlineStoreConfigPropertiesPtrOutput {
	return o
}

func (o OnlineStoreConfigPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OnlineStoreConfigProperties] {
	return pulumix.Output[*OnlineStoreConfigProperties]{
		OutputState: o.OutputState,
	}
}

func (o OnlineStoreConfigPropertiesPtrOutput) Elem() OnlineStoreConfigPropertiesOutput {
	return o.ApplyT(func(v *OnlineStoreConfigProperties) OnlineStoreConfigProperties {
		if v != nil {
			return *v
		}
		var ret OnlineStoreConfigProperties
		return ret
	}).(OnlineStoreConfigPropertiesOutput)
}

func (o OnlineStoreConfigPropertiesPtrOutput) EnableOnlineStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnlineStoreConfigProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableOnlineStore
	}).(pulumi.BoolPtrOutput)
}

func (o OnlineStoreConfigPropertiesPtrOutput) SecurityConfig() FeatureGroupOnlineStoreSecurityConfigPtrOutput {
	return o.ApplyT(func(v *OnlineStoreConfigProperties) *FeatureGroupOnlineStoreSecurityConfig {
		if v == nil {
			return nil
		}
		return v.SecurityConfig
	}).(FeatureGroupOnlineStoreSecurityConfigPtrOutput)
}

func (o OnlineStoreConfigPropertiesPtrOutput) StorageType() FeatureGroupStorageTypePtrOutput {
	return o.ApplyT(func(v *OnlineStoreConfigProperties) *FeatureGroupStorageType {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(FeatureGroupStorageTypePtrOutput)
}

type ParallelismConfigurationProperties struct {
	// Maximum parallel execution steps
	MaxParallelExecutionSteps int `pulumi:"maxParallelExecutionSteps"`
}

// ParallelismConfigurationPropertiesInput is an input type that accepts ParallelismConfigurationPropertiesArgs and ParallelismConfigurationPropertiesOutput values.
// You can construct a concrete instance of `ParallelismConfigurationPropertiesInput` via:
//
//	ParallelismConfigurationPropertiesArgs{...}
type ParallelismConfigurationPropertiesInput interface {
	pulumi.Input

	ToParallelismConfigurationPropertiesOutput() ParallelismConfigurationPropertiesOutput
	ToParallelismConfigurationPropertiesOutputWithContext(context.Context) ParallelismConfigurationPropertiesOutput
}

type ParallelismConfigurationPropertiesArgs struct {
	// Maximum parallel execution steps
	MaxParallelExecutionSteps pulumi.IntInput `pulumi:"maxParallelExecutionSteps"`
}

func (ParallelismConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParallelismConfigurationProperties)(nil)).Elem()
}

func (i ParallelismConfigurationPropertiesArgs) ToParallelismConfigurationPropertiesOutput() ParallelismConfigurationPropertiesOutput {
	return i.ToParallelismConfigurationPropertiesOutputWithContext(context.Background())
}

func (i ParallelismConfigurationPropertiesArgs) ToParallelismConfigurationPropertiesOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParallelismConfigurationPropertiesOutput)
}

func (i ParallelismConfigurationPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ParallelismConfigurationProperties] {
	return pulumix.Output[ParallelismConfigurationProperties]{
		OutputState: i.ToParallelismConfigurationPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ParallelismConfigurationPropertiesArgs) ToParallelismConfigurationPropertiesPtrOutput() ParallelismConfigurationPropertiesPtrOutput {
	return i.ToParallelismConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i ParallelismConfigurationPropertiesArgs) ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParallelismConfigurationPropertiesOutput).ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx)
}

// ParallelismConfigurationPropertiesPtrInput is an input type that accepts ParallelismConfigurationPropertiesArgs, ParallelismConfigurationPropertiesPtr and ParallelismConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `ParallelismConfigurationPropertiesPtrInput` via:
//
//	        ParallelismConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type ParallelismConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToParallelismConfigurationPropertiesPtrOutput() ParallelismConfigurationPropertiesPtrOutput
	ToParallelismConfigurationPropertiesPtrOutputWithContext(context.Context) ParallelismConfigurationPropertiesPtrOutput
}

type parallelismConfigurationPropertiesPtrType ParallelismConfigurationPropertiesArgs

func ParallelismConfigurationPropertiesPtr(v *ParallelismConfigurationPropertiesArgs) ParallelismConfigurationPropertiesPtrInput {
	return (*parallelismConfigurationPropertiesPtrType)(v)
}

func (*parallelismConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParallelismConfigurationProperties)(nil)).Elem()
}

func (i *parallelismConfigurationPropertiesPtrType) ToParallelismConfigurationPropertiesPtrOutput() ParallelismConfigurationPropertiesPtrOutput {
	return i.ToParallelismConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *parallelismConfigurationPropertiesPtrType) ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParallelismConfigurationPropertiesPtrOutput)
}

func (i *parallelismConfigurationPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ParallelismConfigurationProperties] {
	return pulumix.Output[*ParallelismConfigurationProperties]{
		OutputState: i.ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ParallelismConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (ParallelismConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParallelismConfigurationProperties)(nil)).Elem()
}

func (o ParallelismConfigurationPropertiesOutput) ToParallelismConfigurationPropertiesOutput() ParallelismConfigurationPropertiesOutput {
	return o
}

func (o ParallelismConfigurationPropertiesOutput) ToParallelismConfigurationPropertiesOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesOutput {
	return o
}

func (o ParallelismConfigurationPropertiesOutput) ToParallelismConfigurationPropertiesPtrOutput() ParallelismConfigurationPropertiesPtrOutput {
	return o.ToParallelismConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o ParallelismConfigurationPropertiesOutput) ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParallelismConfigurationProperties) *ParallelismConfigurationProperties {
		return &v
	}).(ParallelismConfigurationPropertiesPtrOutput)
}

func (o ParallelismConfigurationPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ParallelismConfigurationProperties] {
	return pulumix.Output[ParallelismConfigurationProperties]{
		OutputState: o.OutputState,
	}
}

// Maximum parallel execution steps
func (o ParallelismConfigurationPropertiesOutput) MaxParallelExecutionSteps() pulumi.IntOutput {
	return o.ApplyT(func(v ParallelismConfigurationProperties) int { return v.MaxParallelExecutionSteps }).(pulumi.IntOutput)
}

type ParallelismConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ParallelismConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParallelismConfigurationProperties)(nil)).Elem()
}

func (o ParallelismConfigurationPropertiesPtrOutput) ToParallelismConfigurationPropertiesPtrOutput() ParallelismConfigurationPropertiesPtrOutput {
	return o
}

func (o ParallelismConfigurationPropertiesPtrOutput) ToParallelismConfigurationPropertiesPtrOutputWithContext(ctx context.Context) ParallelismConfigurationPropertiesPtrOutput {
	return o
}

func (o ParallelismConfigurationPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ParallelismConfigurationProperties] {
	return pulumix.Output[*ParallelismConfigurationProperties]{
		OutputState: o.OutputState,
	}
}

func (o ParallelismConfigurationPropertiesPtrOutput) Elem() ParallelismConfigurationPropertiesOutput {
	return o.ApplyT(func(v *ParallelismConfigurationProperties) ParallelismConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret ParallelismConfigurationProperties
		return ret
	}).(ParallelismConfigurationPropertiesOutput)
}

// Maximum parallel execution steps
func (o ParallelismConfigurationPropertiesPtrOutput) MaxParallelExecutionSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ParallelismConfigurationProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaxParallelExecutionSteps
	}).(pulumi.IntPtrOutput)
}

type PipelineDefinition0Properties struct {
	// A specification that defines the pipeline in JSON format.
	PipelineDefinitionBody string `pulumi:"pipelineDefinitionBody"`
}

type PipelineDefinition1Properties struct {
	PipelineDefinitionS3Location PipelineS3Location `pulumi:"pipelineDefinitionS3Location"`
}

type PipelineS3Location struct {
	// The name of the S3 bucket where the PipelineDefinition file is stored.
	Bucket string `pulumi:"bucket"`
	// The Amazon S3 ETag (a file checksum) of the PipelineDefinition file. If you don't specify a value, SageMaker skips ETag validation of your PipelineDefinition file.
	ETag *string `pulumi:"eTag"`
	// The file name of the PipelineDefinition file (Amazon S3 object name).
	Key string `pulumi:"key"`
	// For versioning-enabled buckets, a specific version of the PipelineDefinition file.
	Version *string `pulumi:"version"`
}

type PipelineTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PipelineTagInput is an input type that accepts PipelineTagArgs and PipelineTagOutput values.
// You can construct a concrete instance of `PipelineTagInput` via:
//
//	PipelineTagArgs{...}
type PipelineTagInput interface {
	pulumi.Input

	ToPipelineTagOutput() PipelineTagOutput
	ToPipelineTagOutputWithContext(context.Context) PipelineTagOutput
}

type PipelineTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PipelineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (i PipelineTagArgs) ToPipelineTagOutput() PipelineTagOutput {
	return i.ToPipelineTagOutputWithContext(context.Background())
}

func (i PipelineTagArgs) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagOutput)
}

func (i PipelineTagArgs) ToOutput(ctx context.Context) pulumix.Output[PipelineTag] {
	return pulumix.Output[PipelineTag]{
		OutputState: i.ToPipelineTagOutputWithContext(ctx).OutputState,
	}
}

// PipelineTagArrayInput is an input type that accepts PipelineTagArray and PipelineTagArrayOutput values.
// You can construct a concrete instance of `PipelineTagArrayInput` via:
//
//	PipelineTagArray{ PipelineTagArgs{...} }
type PipelineTagArrayInput interface {
	pulumi.Input

	ToPipelineTagArrayOutput() PipelineTagArrayOutput
	ToPipelineTagArrayOutputWithContext(context.Context) PipelineTagArrayOutput
}

type PipelineTagArray []PipelineTagInput

func (PipelineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (i PipelineTagArray) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return i.ToPipelineTagArrayOutputWithContext(context.Background())
}

func (i PipelineTagArray) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagArrayOutput)
}

func (i PipelineTagArray) ToOutput(ctx context.Context) pulumix.Output[[]PipelineTag] {
	return pulumix.Output[[]PipelineTag]{
		OutputState: i.ToPipelineTagArrayOutputWithContext(ctx).OutputState,
	}
}

type PipelineTagOutput struct{ *pulumi.OutputState }

func (PipelineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (o PipelineTagOutput) ToPipelineTagOutput() PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToOutput(ctx context.Context) pulumix.Output[PipelineTag] {
	return pulumix.Output[PipelineTag]{
		OutputState: o.OutputState,
	}
}

func (o PipelineTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PipelineTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Value }).(pulumi.StringOutput)
}

type PipelineTagArrayOutput struct{ *pulumi.OutputState }

func (PipelineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]PipelineTag] {
	return pulumix.Output[[]PipelineTag]{
		OutputState: o.OutputState,
	}
}

func (o PipelineTagArrayOutput) Index(i pulumi.IntInput) PipelineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTag {
		return vs[0].([]PipelineTag)[vs[1].(int)]
	}).(PipelineTagOutput)
}

// Information about a parameter used to provision a product.
type ProjectProvisioningParameter struct {
	// The parameter key.
	Key string `pulumi:"key"`
	// The parameter value.
	Value string `pulumi:"value"`
}

// ProjectProvisioningParameterInput is an input type that accepts ProjectProvisioningParameterArgs and ProjectProvisioningParameterOutput values.
// You can construct a concrete instance of `ProjectProvisioningParameterInput` via:
//
//	ProjectProvisioningParameterArgs{...}
type ProjectProvisioningParameterInput interface {
	pulumi.Input

	ToProjectProvisioningParameterOutput() ProjectProvisioningParameterOutput
	ToProjectProvisioningParameterOutputWithContext(context.Context) ProjectProvisioningParameterOutput
}

// Information about a parameter used to provision a product.
type ProjectProvisioningParameterArgs struct {
	// The parameter key.
	Key pulumi.StringInput `pulumi:"key"`
	// The parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectProvisioningParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProvisioningParameter)(nil)).Elem()
}

func (i ProjectProvisioningParameterArgs) ToProjectProvisioningParameterOutput() ProjectProvisioningParameterOutput {
	return i.ToProjectProvisioningParameterOutputWithContext(context.Background())
}

func (i ProjectProvisioningParameterArgs) ToProjectProvisioningParameterOutputWithContext(ctx context.Context) ProjectProvisioningParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProvisioningParameterOutput)
}

func (i ProjectProvisioningParameterArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectProvisioningParameter] {
	return pulumix.Output[ProjectProvisioningParameter]{
		OutputState: i.ToProjectProvisioningParameterOutputWithContext(ctx).OutputState,
	}
}

// ProjectProvisioningParameterArrayInput is an input type that accepts ProjectProvisioningParameterArray and ProjectProvisioningParameterArrayOutput values.
// You can construct a concrete instance of `ProjectProvisioningParameterArrayInput` via:
//
//	ProjectProvisioningParameterArray{ ProjectProvisioningParameterArgs{...} }
type ProjectProvisioningParameterArrayInput interface {
	pulumi.Input

	ToProjectProvisioningParameterArrayOutput() ProjectProvisioningParameterArrayOutput
	ToProjectProvisioningParameterArrayOutputWithContext(context.Context) ProjectProvisioningParameterArrayOutput
}

type ProjectProvisioningParameterArray []ProjectProvisioningParameterInput

func (ProjectProvisioningParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectProvisioningParameter)(nil)).Elem()
}

func (i ProjectProvisioningParameterArray) ToProjectProvisioningParameterArrayOutput() ProjectProvisioningParameterArrayOutput {
	return i.ToProjectProvisioningParameterArrayOutputWithContext(context.Background())
}

func (i ProjectProvisioningParameterArray) ToProjectProvisioningParameterArrayOutputWithContext(ctx context.Context) ProjectProvisioningParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectProvisioningParameterArrayOutput)
}

func (i ProjectProvisioningParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectProvisioningParameter] {
	return pulumix.Output[[]ProjectProvisioningParameter]{
		OutputState: i.ToProjectProvisioningParameterArrayOutputWithContext(ctx).OutputState,
	}
}

// Information about a parameter used to provision a product.
type ProjectProvisioningParameterOutput struct{ *pulumi.OutputState }

func (ProjectProvisioningParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProvisioningParameter)(nil)).Elem()
}

func (o ProjectProvisioningParameterOutput) ToProjectProvisioningParameterOutput() ProjectProvisioningParameterOutput {
	return o
}

func (o ProjectProvisioningParameterOutput) ToProjectProvisioningParameterOutputWithContext(ctx context.Context) ProjectProvisioningParameterOutput {
	return o
}

func (o ProjectProvisioningParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectProvisioningParameter] {
	return pulumix.Output[ProjectProvisioningParameter]{
		OutputState: o.OutputState,
	}
}

// The parameter key.
func (o ProjectProvisioningParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectProvisioningParameter) string { return v.Key }).(pulumi.StringOutput)
}

// The parameter value.
func (o ProjectProvisioningParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectProvisioningParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectProvisioningParameterArrayOutput struct{ *pulumi.OutputState }

func (ProjectProvisioningParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectProvisioningParameter)(nil)).Elem()
}

func (o ProjectProvisioningParameterArrayOutput) ToProjectProvisioningParameterArrayOutput() ProjectProvisioningParameterArrayOutput {
	return o
}

func (o ProjectProvisioningParameterArrayOutput) ToProjectProvisioningParameterArrayOutputWithContext(ctx context.Context) ProjectProvisioningParameterArrayOutput {
	return o
}

func (o ProjectProvisioningParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectProvisioningParameter] {
	return pulumix.Output[[]ProjectProvisioningParameter]{
		OutputState: o.OutputState,
	}
}

func (o ProjectProvisioningParameterArrayOutput) Index(i pulumi.IntInput) ProjectProvisioningParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectProvisioningParameter {
		return vs[0].([]ProjectProvisioningParameter)[vs[1].(int)]
	}).(ProjectProvisioningParameterOutput)
}

// A key-value pair to associate with a resource.
type ProjectTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ProjectTagInput is an input type that accepts ProjectTagArgs and ProjectTagOutput values.
// You can construct a concrete instance of `ProjectTagInput` via:
//
//	ProjectTagArgs{...}
type ProjectTagInput interface {
	pulumi.Input

	ToProjectTagOutput() ProjectTagOutput
	ToProjectTagOutputWithContext(context.Context) ProjectTagOutput
}

// A key-value pair to associate with a resource.
type ProjectTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTag)(nil)).Elem()
}

func (i ProjectTagArgs) ToProjectTagOutput() ProjectTagOutput {
	return i.ToProjectTagOutputWithContext(context.Background())
}

func (i ProjectTagArgs) ToProjectTagOutputWithContext(ctx context.Context) ProjectTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagOutput)
}

func (i ProjectTagArgs) ToOutput(ctx context.Context) pulumix.Output[ProjectTag] {
	return pulumix.Output[ProjectTag]{
		OutputState: i.ToProjectTagOutputWithContext(ctx).OutputState,
	}
}

// ProjectTagArrayInput is an input type that accepts ProjectTagArray and ProjectTagArrayOutput values.
// You can construct a concrete instance of `ProjectTagArrayInput` via:
//
//	ProjectTagArray{ ProjectTagArgs{...} }
type ProjectTagArrayInput interface {
	pulumi.Input

	ToProjectTagArrayOutput() ProjectTagArrayOutput
	ToProjectTagArrayOutputWithContext(context.Context) ProjectTagArrayOutput
}

type ProjectTagArray []ProjectTagInput

func (ProjectTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTag)(nil)).Elem()
}

func (i ProjectTagArray) ToProjectTagArrayOutput() ProjectTagArrayOutput {
	return i.ToProjectTagArrayOutputWithContext(context.Background())
}

func (i ProjectTagArray) ToProjectTagArrayOutputWithContext(ctx context.Context) ProjectTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagArrayOutput)
}

func (i ProjectTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ProjectTag] {
	return pulumix.Output[[]ProjectTag]{
		OutputState: i.ToProjectTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ProjectTagOutput struct{ *pulumi.OutputState }

func (ProjectTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTag)(nil)).Elem()
}

func (o ProjectTagOutput) ToProjectTagOutput() ProjectTagOutput {
	return o
}

func (o ProjectTagOutput) ToProjectTagOutputWithContext(ctx context.Context) ProjectTagOutput {
	return o
}

func (o ProjectTagOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectTag] {
	return pulumix.Output[ProjectTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ProjectTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ProjectTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTag) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectTagArrayOutput struct{ *pulumi.OutputState }

func (ProjectTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTag)(nil)).Elem()
}

func (o ProjectTagArrayOutput) ToProjectTagArrayOutput() ProjectTagArrayOutput {
	return o
}

func (o ProjectTagArrayOutput) ToProjectTagArrayOutputWithContext(ctx context.Context) ProjectTagArrayOutput {
	return o
}

func (o ProjectTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ProjectTag] {
	return pulumix.Output[[]ProjectTag]{
		OutputState: o.OutputState,
	}
}

func (o ProjectTagArrayOutput) Index(i pulumi.IntInput) ProjectTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTag {
		return vs[0].([]ProjectTag)[vs[1].(int)]
	}).(ProjectTagOutput)
}

// Provisioned ServiceCatalog  Details
type ServiceCatalogProvisionedProductDetailsProperties struct {
	ProvisionedProductId            *string `pulumi:"provisionedProductId"`
	ProvisionedProductStatusMessage *string `pulumi:"provisionedProductStatusMessage"`
}

// ServiceCatalogProvisionedProductDetailsPropertiesInput is an input type that accepts ServiceCatalogProvisionedProductDetailsPropertiesArgs and ServiceCatalogProvisionedProductDetailsPropertiesOutput values.
// You can construct a concrete instance of `ServiceCatalogProvisionedProductDetailsPropertiesInput` via:
//
//	ServiceCatalogProvisionedProductDetailsPropertiesArgs{...}
type ServiceCatalogProvisionedProductDetailsPropertiesInput interface {
	pulumi.Input

	ToServiceCatalogProvisionedProductDetailsPropertiesOutput() ServiceCatalogProvisionedProductDetailsPropertiesOutput
	ToServiceCatalogProvisionedProductDetailsPropertiesOutputWithContext(context.Context) ServiceCatalogProvisionedProductDetailsPropertiesOutput
}

// Provisioned ServiceCatalog  Details
type ServiceCatalogProvisionedProductDetailsPropertiesArgs struct {
	ProvisionedProductId            pulumi.StringPtrInput `pulumi:"provisionedProductId"`
	ProvisionedProductStatusMessage pulumi.StringPtrInput `pulumi:"provisionedProductStatusMessage"`
}

func (ServiceCatalogProvisionedProductDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogProvisionedProductDetailsProperties)(nil)).Elem()
}

func (i ServiceCatalogProvisionedProductDetailsPropertiesArgs) ToServiceCatalogProvisionedProductDetailsPropertiesOutput() ServiceCatalogProvisionedProductDetailsPropertiesOutput {
	return i.ToServiceCatalogProvisionedProductDetailsPropertiesOutputWithContext(context.Background())
}

func (i ServiceCatalogProvisionedProductDetailsPropertiesArgs) ToServiceCatalogProvisionedProductDetailsPropertiesOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogProvisionedProductDetailsPropertiesOutput)
}

func (i ServiceCatalogProvisionedProductDetailsPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ServiceCatalogProvisionedProductDetailsProperties] {
	return pulumix.Output[ServiceCatalogProvisionedProductDetailsProperties]{
		OutputState: i.ToServiceCatalogProvisionedProductDetailsPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ServiceCatalogProvisionedProductDetailsPropertiesArgs) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutput() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return i.ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i ServiceCatalogProvisionedProductDetailsPropertiesArgs) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogProvisionedProductDetailsPropertiesOutput).ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx)
}

// ServiceCatalogProvisionedProductDetailsPropertiesPtrInput is an input type that accepts ServiceCatalogProvisionedProductDetailsPropertiesArgs, ServiceCatalogProvisionedProductDetailsPropertiesPtr and ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `ServiceCatalogProvisionedProductDetailsPropertiesPtrInput` via:
//
//	        ServiceCatalogProvisionedProductDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type ServiceCatalogProvisionedProductDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutput() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput
	ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(context.Context) ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput
}

type serviceCatalogProvisionedProductDetailsPropertiesPtrType ServiceCatalogProvisionedProductDetailsPropertiesArgs

func ServiceCatalogProvisionedProductDetailsPropertiesPtr(v *ServiceCatalogProvisionedProductDetailsPropertiesArgs) ServiceCatalogProvisionedProductDetailsPropertiesPtrInput {
	return (*serviceCatalogProvisionedProductDetailsPropertiesPtrType)(v)
}

func (*serviceCatalogProvisionedProductDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogProvisionedProductDetailsProperties)(nil)).Elem()
}

func (i *serviceCatalogProvisionedProductDetailsPropertiesPtrType) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutput() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return i.ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *serviceCatalogProvisionedProductDetailsPropertiesPtrType) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput)
}

func (i *serviceCatalogProvisionedProductDetailsPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServiceCatalogProvisionedProductDetailsProperties] {
	return pulumix.Output[*ServiceCatalogProvisionedProductDetailsProperties]{
		OutputState: i.ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

// Provisioned ServiceCatalog  Details
type ServiceCatalogProvisionedProductDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (ServiceCatalogProvisionedProductDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogProvisionedProductDetailsProperties)(nil)).Elem()
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ToServiceCatalogProvisionedProductDetailsPropertiesOutput() ServiceCatalogProvisionedProductDetailsPropertiesOutput {
	return o
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ToServiceCatalogProvisionedProductDetailsPropertiesOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesOutput {
	return o
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutput() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return o.ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceCatalogProvisionedProductDetailsProperties) *ServiceCatalogProvisionedProductDetailsProperties {
		return &v
	}).(ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput)
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceCatalogProvisionedProductDetailsProperties] {
	return pulumix.Output[ServiceCatalogProvisionedProductDetailsProperties]{
		OutputState: o.OutputState,
	}
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ProvisionedProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCatalogProvisionedProductDetailsProperties) *string { return v.ProvisionedProductId }).(pulumi.StringPtrOutput)
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesOutput) ProvisionedProductStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCatalogProvisionedProductDetailsProperties) *string {
		return v.ProvisionedProductStatusMessage
	}).(pulumi.StringPtrOutput)
}

type ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCatalogProvisionedProductDetailsProperties)(nil)).Elem()
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutput() ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return o
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ToServiceCatalogProvisionedProductDetailsPropertiesPtrOutputWithContext(ctx context.Context) ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput {
	return o
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceCatalogProvisionedProductDetailsProperties] {
	return pulumix.Output[*ServiceCatalogProvisionedProductDetailsProperties]{
		OutputState: o.OutputState,
	}
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) Elem() ServiceCatalogProvisionedProductDetailsPropertiesOutput {
	return o.ApplyT(func(v *ServiceCatalogProvisionedProductDetailsProperties) ServiceCatalogProvisionedProductDetailsProperties {
		if v != nil {
			return *v
		}
		var ret ServiceCatalogProvisionedProductDetailsProperties
		return ret
	}).(ServiceCatalogProvisionedProductDetailsPropertiesOutput)
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ProvisionedProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCatalogProvisionedProductDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisionedProductId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput) ProvisionedProductStatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCatalogProvisionedProductDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisionedProductStatusMessage
	}).(pulumi.StringPtrOutput)
}

// Input ServiceCatalog Provisioning Details
type ServiceCatalogProvisioningDetailsProperties struct {
	PathId                 *string `pulumi:"pathId"`
	ProductId              string  `pulumi:"productId"`
	ProvisioningArtifactId *string `pulumi:"provisioningArtifactId"`
	// Parameters specified by the administrator that are required for provisioning the product.
	ProvisioningParameters []ProjectProvisioningParameter `pulumi:"provisioningParameters"`
}

// ServiceCatalogProvisioningDetailsPropertiesInput is an input type that accepts ServiceCatalogProvisioningDetailsPropertiesArgs and ServiceCatalogProvisioningDetailsPropertiesOutput values.
// You can construct a concrete instance of `ServiceCatalogProvisioningDetailsPropertiesInput` via:
//
//	ServiceCatalogProvisioningDetailsPropertiesArgs{...}
type ServiceCatalogProvisioningDetailsPropertiesInput interface {
	pulumi.Input

	ToServiceCatalogProvisioningDetailsPropertiesOutput() ServiceCatalogProvisioningDetailsPropertiesOutput
	ToServiceCatalogProvisioningDetailsPropertiesOutputWithContext(context.Context) ServiceCatalogProvisioningDetailsPropertiesOutput
}

// Input ServiceCatalog Provisioning Details
type ServiceCatalogProvisioningDetailsPropertiesArgs struct {
	PathId                 pulumi.StringPtrInput `pulumi:"pathId"`
	ProductId              pulumi.StringInput    `pulumi:"productId"`
	ProvisioningArtifactId pulumi.StringPtrInput `pulumi:"provisioningArtifactId"`
	// Parameters specified by the administrator that are required for provisioning the product.
	ProvisioningParameters ProjectProvisioningParameterArrayInput `pulumi:"provisioningParameters"`
}

func (ServiceCatalogProvisioningDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogProvisioningDetailsProperties)(nil)).Elem()
}

func (i ServiceCatalogProvisioningDetailsPropertiesArgs) ToServiceCatalogProvisioningDetailsPropertiesOutput() ServiceCatalogProvisioningDetailsPropertiesOutput {
	return i.ToServiceCatalogProvisioningDetailsPropertiesOutputWithContext(context.Background())
}

func (i ServiceCatalogProvisioningDetailsPropertiesArgs) ToServiceCatalogProvisioningDetailsPropertiesOutputWithContext(ctx context.Context) ServiceCatalogProvisioningDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCatalogProvisioningDetailsPropertiesOutput)
}

func (i ServiceCatalogProvisioningDetailsPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ServiceCatalogProvisioningDetailsProperties] {
	return pulumix.Output[ServiceCatalogProvisioningDetailsProperties]{
		OutputState: i.ToServiceCatalogProvisioningDetailsPropertiesOutputWithContext(ctx).OutputState,
	}
}

// Input ServiceCatalog Provisioning Details
type ServiceCatalogProvisioningDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (ServiceCatalogProvisioningDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCatalogProvisioningDetailsProperties)(nil)).Elem()
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ToServiceCatalogProvisioningDetailsPropertiesOutput() ServiceCatalogProvisioningDetailsPropertiesOutput {
	return o
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ToServiceCatalogProvisioningDetailsPropertiesOutputWithContext(ctx context.Context) ServiceCatalogProvisioningDetailsPropertiesOutput {
	return o
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceCatalogProvisioningDetailsProperties] {
	return pulumix.Output[ServiceCatalogProvisioningDetailsProperties]{
		OutputState: o.OutputState,
	}
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) PathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCatalogProvisioningDetailsProperties) *string { return v.PathId }).(pulumi.StringPtrOutput)
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCatalogProvisioningDetailsProperties) string { return v.ProductId }).(pulumi.StringOutput)
}

func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ProvisioningArtifactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCatalogProvisioningDetailsProperties) *string { return v.ProvisioningArtifactId }).(pulumi.StringPtrOutput)
}

// Parameters specified by the administrator that are required for provisioning the product.
func (o ServiceCatalogProvisioningDetailsPropertiesOutput) ProvisioningParameters() ProjectProvisioningParameterArrayOutput {
	return o.ApplyT(func(v ServiceCatalogProvisioningDetailsProperties) []ProjectProvisioningParameter {
		return v.ProvisioningParameters
	}).(ProjectProvisioningParameterArrayOutput)
}

// A custom SageMaker image.
type SpaceCustomImage struct {
	// The Name of the AppImageConfig.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName string `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

// SpaceCustomImageInput is an input type that accepts SpaceCustomImageArgs and SpaceCustomImageOutput values.
// You can construct a concrete instance of `SpaceCustomImageInput` via:
//
//	SpaceCustomImageArgs{...}
type SpaceCustomImageInput interface {
	pulumi.Input

	ToSpaceCustomImageOutput() SpaceCustomImageOutput
	ToSpaceCustomImageOutputWithContext(context.Context) SpaceCustomImageOutput
}

// A custom SageMaker image.
type SpaceCustomImageArgs struct {
	// The Name of the AppImageConfig.
	AppImageConfigName pulumi.StringInput `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber pulumi.IntPtrInput `pulumi:"imageVersionNumber"`
}

func (SpaceCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceCustomImage)(nil)).Elem()
}

func (i SpaceCustomImageArgs) ToSpaceCustomImageOutput() SpaceCustomImageOutput {
	return i.ToSpaceCustomImageOutputWithContext(context.Background())
}

func (i SpaceCustomImageArgs) ToSpaceCustomImageOutputWithContext(ctx context.Context) SpaceCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceCustomImageOutput)
}

func (i SpaceCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceCustomImage] {
	return pulumix.Output[SpaceCustomImage]{
		OutputState: i.ToSpaceCustomImageOutputWithContext(ctx).OutputState,
	}
}

// SpaceCustomImageArrayInput is an input type that accepts SpaceCustomImageArray and SpaceCustomImageArrayOutput values.
// You can construct a concrete instance of `SpaceCustomImageArrayInput` via:
//
//	SpaceCustomImageArray{ SpaceCustomImageArgs{...} }
type SpaceCustomImageArrayInput interface {
	pulumi.Input

	ToSpaceCustomImageArrayOutput() SpaceCustomImageArrayOutput
	ToSpaceCustomImageArrayOutputWithContext(context.Context) SpaceCustomImageArrayOutput
}

type SpaceCustomImageArray []SpaceCustomImageInput

func (SpaceCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpaceCustomImage)(nil)).Elem()
}

func (i SpaceCustomImageArray) ToSpaceCustomImageArrayOutput() SpaceCustomImageArrayOutput {
	return i.ToSpaceCustomImageArrayOutputWithContext(context.Background())
}

func (i SpaceCustomImageArray) ToSpaceCustomImageArrayOutputWithContext(ctx context.Context) SpaceCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceCustomImageArrayOutput)
}

func (i SpaceCustomImageArray) ToOutput(ctx context.Context) pulumix.Output[[]SpaceCustomImage] {
	return pulumix.Output[[]SpaceCustomImage]{
		OutputState: i.ToSpaceCustomImageArrayOutputWithContext(ctx).OutputState,
	}
}

// A custom SageMaker image.
type SpaceCustomImageOutput struct{ *pulumi.OutputState }

func (SpaceCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceCustomImage)(nil)).Elem()
}

func (o SpaceCustomImageOutput) ToSpaceCustomImageOutput() SpaceCustomImageOutput {
	return o
}

func (o SpaceCustomImageOutput) ToSpaceCustomImageOutputWithContext(ctx context.Context) SpaceCustomImageOutput {
	return o
}

func (o SpaceCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceCustomImage] {
	return pulumix.Output[SpaceCustomImage]{
		OutputState: o.OutputState,
	}
}

// The Name of the AppImageConfig.
func (o SpaceCustomImageOutput) AppImageConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v SpaceCustomImage) string { return v.AppImageConfigName }).(pulumi.StringOutput)
}

// The name of the CustomImage. Must be unique to your account.
func (o SpaceCustomImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v SpaceCustomImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The version number of the CustomImage.
func (o SpaceCustomImageOutput) ImageVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpaceCustomImage) *int { return v.ImageVersionNumber }).(pulumi.IntPtrOutput)
}

type SpaceCustomImageArrayOutput struct{ *pulumi.OutputState }

func (SpaceCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpaceCustomImage)(nil)).Elem()
}

func (o SpaceCustomImageArrayOutput) ToSpaceCustomImageArrayOutput() SpaceCustomImageArrayOutput {
	return o
}

func (o SpaceCustomImageArrayOutput) ToSpaceCustomImageArrayOutputWithContext(ctx context.Context) SpaceCustomImageArrayOutput {
	return o
}

func (o SpaceCustomImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpaceCustomImage] {
	return pulumix.Output[[]SpaceCustomImage]{
		OutputState: o.OutputState,
	}
}

func (o SpaceCustomImageArrayOutput) Index(i pulumi.IntInput) SpaceCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpaceCustomImage {
		return vs[0].([]SpaceCustomImage)[vs[1].(int)]
	}).(SpaceCustomImageOutput)
}

// The JupyterServer app settings.
type SpaceJupyterServerAppSettings struct {
	DefaultResourceSpec *SpaceResourceSpec `pulumi:"defaultResourceSpec"`
}

// SpaceJupyterServerAppSettingsInput is an input type that accepts SpaceJupyterServerAppSettingsArgs and SpaceJupyterServerAppSettingsOutput values.
// You can construct a concrete instance of `SpaceJupyterServerAppSettingsInput` via:
//
//	SpaceJupyterServerAppSettingsArgs{...}
type SpaceJupyterServerAppSettingsInput interface {
	pulumi.Input

	ToSpaceJupyterServerAppSettingsOutput() SpaceJupyterServerAppSettingsOutput
	ToSpaceJupyterServerAppSettingsOutputWithContext(context.Context) SpaceJupyterServerAppSettingsOutput
}

// The JupyterServer app settings.
type SpaceJupyterServerAppSettingsArgs struct {
	DefaultResourceSpec SpaceResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (SpaceJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceJupyterServerAppSettings)(nil)).Elem()
}

func (i SpaceJupyterServerAppSettingsArgs) ToSpaceJupyterServerAppSettingsOutput() SpaceJupyterServerAppSettingsOutput {
	return i.ToSpaceJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i SpaceJupyterServerAppSettingsArgs) ToSpaceJupyterServerAppSettingsOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceJupyterServerAppSettingsOutput)
}

func (i SpaceJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceJupyterServerAppSettings] {
	return pulumix.Output[SpaceJupyterServerAppSettings]{
		OutputState: i.ToSpaceJupyterServerAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SpaceJupyterServerAppSettingsArgs) ToSpaceJupyterServerAppSettingsPtrOutput() SpaceJupyterServerAppSettingsPtrOutput {
	return i.ToSpaceJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i SpaceJupyterServerAppSettingsArgs) ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceJupyterServerAppSettingsOutput).ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx)
}

// SpaceJupyterServerAppSettingsPtrInput is an input type that accepts SpaceJupyterServerAppSettingsArgs, SpaceJupyterServerAppSettingsPtr and SpaceJupyterServerAppSettingsPtrOutput values.
// You can construct a concrete instance of `SpaceJupyterServerAppSettingsPtrInput` via:
//
//	        SpaceJupyterServerAppSettingsArgs{...}
//
//	or:
//
//	        nil
type SpaceJupyterServerAppSettingsPtrInput interface {
	pulumi.Input

	ToSpaceJupyterServerAppSettingsPtrOutput() SpaceJupyterServerAppSettingsPtrOutput
	ToSpaceJupyterServerAppSettingsPtrOutputWithContext(context.Context) SpaceJupyterServerAppSettingsPtrOutput
}

type spaceJupyterServerAppSettingsPtrType SpaceJupyterServerAppSettingsArgs

func SpaceJupyterServerAppSettingsPtr(v *SpaceJupyterServerAppSettingsArgs) SpaceJupyterServerAppSettingsPtrInput {
	return (*spaceJupyterServerAppSettingsPtrType)(v)
}

func (*spaceJupyterServerAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceJupyterServerAppSettings)(nil)).Elem()
}

func (i *spaceJupyterServerAppSettingsPtrType) ToSpaceJupyterServerAppSettingsPtrOutput() SpaceJupyterServerAppSettingsPtrOutput {
	return i.ToSpaceJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i *spaceJupyterServerAppSettingsPtrType) ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceJupyterServerAppSettingsPtrOutput)
}

func (i *spaceJupyterServerAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpaceJupyterServerAppSettings] {
	return pulumix.Output[*SpaceJupyterServerAppSettings]{
		OutputState: i.ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The JupyterServer app settings.
type SpaceJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (SpaceJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceJupyterServerAppSettings)(nil)).Elem()
}

func (o SpaceJupyterServerAppSettingsOutput) ToSpaceJupyterServerAppSettingsOutput() SpaceJupyterServerAppSettingsOutput {
	return o
}

func (o SpaceJupyterServerAppSettingsOutput) ToSpaceJupyterServerAppSettingsOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsOutput {
	return o
}

func (o SpaceJupyterServerAppSettingsOutput) ToSpaceJupyterServerAppSettingsPtrOutput() SpaceJupyterServerAppSettingsPtrOutput {
	return o.ToSpaceJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (o SpaceJupyterServerAppSettingsOutput) ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpaceJupyterServerAppSettings) *SpaceJupyterServerAppSettings {
		return &v
	}).(SpaceJupyterServerAppSettingsPtrOutput)
}

func (o SpaceJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceJupyterServerAppSettings] {
	return pulumix.Output[SpaceJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o SpaceJupyterServerAppSettingsOutput) DefaultResourceSpec() SpaceResourceSpecPtrOutput {
	return o.ApplyT(func(v SpaceJupyterServerAppSettings) *SpaceResourceSpec { return v.DefaultResourceSpec }).(SpaceResourceSpecPtrOutput)
}

type SpaceJupyterServerAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (SpaceJupyterServerAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceJupyterServerAppSettings)(nil)).Elem()
}

func (o SpaceJupyterServerAppSettingsPtrOutput) ToSpaceJupyterServerAppSettingsPtrOutput() SpaceJupyterServerAppSettingsPtrOutput {
	return o
}

func (o SpaceJupyterServerAppSettingsPtrOutput) ToSpaceJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) SpaceJupyterServerAppSettingsPtrOutput {
	return o
}

func (o SpaceJupyterServerAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpaceJupyterServerAppSettings] {
	return pulumix.Output[*SpaceJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o SpaceJupyterServerAppSettingsPtrOutput) Elem() SpaceJupyterServerAppSettingsOutput {
	return o.ApplyT(func(v *SpaceJupyterServerAppSettings) SpaceJupyterServerAppSettings {
		if v != nil {
			return *v
		}
		var ret SpaceJupyterServerAppSettings
		return ret
	}).(SpaceJupyterServerAppSettingsOutput)
}

func (o SpaceJupyterServerAppSettingsPtrOutput) DefaultResourceSpec() SpaceResourceSpecPtrOutput {
	return o.ApplyT(func(v *SpaceJupyterServerAppSettings) *SpaceResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(SpaceResourceSpecPtrOutput)
}

// The kernel gateway app settings.
type SpaceKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages []SpaceCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec *SpaceResourceSpec `pulumi:"defaultResourceSpec"`
}

// SpaceKernelGatewayAppSettingsInput is an input type that accepts SpaceKernelGatewayAppSettingsArgs and SpaceKernelGatewayAppSettingsOutput values.
// You can construct a concrete instance of `SpaceKernelGatewayAppSettingsInput` via:
//
//	SpaceKernelGatewayAppSettingsArgs{...}
type SpaceKernelGatewayAppSettingsInput interface {
	pulumi.Input

	ToSpaceKernelGatewayAppSettingsOutput() SpaceKernelGatewayAppSettingsOutput
	ToSpaceKernelGatewayAppSettingsOutputWithContext(context.Context) SpaceKernelGatewayAppSettingsOutput
}

// The kernel gateway app settings.
type SpaceKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages SpaceCustomImageArrayInput `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec SpaceResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (SpaceKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceKernelGatewayAppSettings)(nil)).Elem()
}

func (i SpaceKernelGatewayAppSettingsArgs) ToSpaceKernelGatewayAppSettingsOutput() SpaceKernelGatewayAppSettingsOutput {
	return i.ToSpaceKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i SpaceKernelGatewayAppSettingsArgs) ToSpaceKernelGatewayAppSettingsOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceKernelGatewayAppSettingsOutput)
}

func (i SpaceKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceKernelGatewayAppSettings] {
	return pulumix.Output[SpaceKernelGatewayAppSettings]{
		OutputState: i.ToSpaceKernelGatewayAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SpaceKernelGatewayAppSettingsArgs) ToSpaceKernelGatewayAppSettingsPtrOutput() SpaceKernelGatewayAppSettingsPtrOutput {
	return i.ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i SpaceKernelGatewayAppSettingsArgs) ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceKernelGatewayAppSettingsOutput).ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx)
}

// SpaceKernelGatewayAppSettingsPtrInput is an input type that accepts SpaceKernelGatewayAppSettingsArgs, SpaceKernelGatewayAppSettingsPtr and SpaceKernelGatewayAppSettingsPtrOutput values.
// You can construct a concrete instance of `SpaceKernelGatewayAppSettingsPtrInput` via:
//
//	        SpaceKernelGatewayAppSettingsArgs{...}
//
//	or:
//
//	        nil
type SpaceKernelGatewayAppSettingsPtrInput interface {
	pulumi.Input

	ToSpaceKernelGatewayAppSettingsPtrOutput() SpaceKernelGatewayAppSettingsPtrOutput
	ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(context.Context) SpaceKernelGatewayAppSettingsPtrOutput
}

type spaceKernelGatewayAppSettingsPtrType SpaceKernelGatewayAppSettingsArgs

func SpaceKernelGatewayAppSettingsPtr(v *SpaceKernelGatewayAppSettingsArgs) SpaceKernelGatewayAppSettingsPtrInput {
	return (*spaceKernelGatewayAppSettingsPtrType)(v)
}

func (*spaceKernelGatewayAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceKernelGatewayAppSettings)(nil)).Elem()
}

func (i *spaceKernelGatewayAppSettingsPtrType) ToSpaceKernelGatewayAppSettingsPtrOutput() SpaceKernelGatewayAppSettingsPtrOutput {
	return i.ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i *spaceKernelGatewayAppSettingsPtrType) ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceKernelGatewayAppSettingsPtrOutput)
}

func (i *spaceKernelGatewayAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpaceKernelGatewayAppSettings] {
	return pulumix.Output[*SpaceKernelGatewayAppSettings]{
		OutputState: i.ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The kernel gateway app settings.
type SpaceKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (SpaceKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceKernelGatewayAppSettings)(nil)).Elem()
}

func (o SpaceKernelGatewayAppSettingsOutput) ToSpaceKernelGatewayAppSettingsOutput() SpaceKernelGatewayAppSettingsOutput {
	return o
}

func (o SpaceKernelGatewayAppSettingsOutput) ToSpaceKernelGatewayAppSettingsOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsOutput {
	return o
}

func (o SpaceKernelGatewayAppSettingsOutput) ToSpaceKernelGatewayAppSettingsPtrOutput() SpaceKernelGatewayAppSettingsPtrOutput {
	return o.ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (o SpaceKernelGatewayAppSettingsOutput) ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpaceKernelGatewayAppSettings) *SpaceKernelGatewayAppSettings {
		return &v
	}).(SpaceKernelGatewayAppSettingsPtrOutput)
}

func (o SpaceKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceKernelGatewayAppSettings] {
	return pulumix.Output[SpaceKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o SpaceKernelGatewayAppSettingsOutput) CustomImages() SpaceCustomImageArrayOutput {
	return o.ApplyT(func(v SpaceKernelGatewayAppSettings) []SpaceCustomImage { return v.CustomImages }).(SpaceCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o SpaceKernelGatewayAppSettingsOutput) DefaultResourceSpec() SpaceResourceSpecPtrOutput {
	return o.ApplyT(func(v SpaceKernelGatewayAppSettings) *SpaceResourceSpec { return v.DefaultResourceSpec }).(SpaceResourceSpecPtrOutput)
}

type SpaceKernelGatewayAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (SpaceKernelGatewayAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceKernelGatewayAppSettings)(nil)).Elem()
}

func (o SpaceKernelGatewayAppSettingsPtrOutput) ToSpaceKernelGatewayAppSettingsPtrOutput() SpaceKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o SpaceKernelGatewayAppSettingsPtrOutput) ToSpaceKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) SpaceKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o SpaceKernelGatewayAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpaceKernelGatewayAppSettings] {
	return pulumix.Output[*SpaceKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o SpaceKernelGatewayAppSettingsPtrOutput) Elem() SpaceKernelGatewayAppSettingsOutput {
	return o.ApplyT(func(v *SpaceKernelGatewayAppSettings) SpaceKernelGatewayAppSettings {
		if v != nil {
			return *v
		}
		var ret SpaceKernelGatewayAppSettings
		return ret
	}).(SpaceKernelGatewayAppSettingsOutput)
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o SpaceKernelGatewayAppSettingsPtrOutput) CustomImages() SpaceCustomImageArrayOutput {
	return o.ApplyT(func(v *SpaceKernelGatewayAppSettings) []SpaceCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(SpaceCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o SpaceKernelGatewayAppSettingsPtrOutput) DefaultResourceSpec() SpaceResourceSpecPtrOutput {
	return o.ApplyT(func(v *SpaceKernelGatewayAppSettings) *SpaceResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(SpaceResourceSpecPtrOutput)
}

type SpaceResourceSpec struct {
	// The instance type that the image version runs on.
	InstanceType *SpaceResourceSpecInstanceType `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// SpaceResourceSpecInput is an input type that accepts SpaceResourceSpecArgs and SpaceResourceSpecOutput values.
// You can construct a concrete instance of `SpaceResourceSpecInput` via:
//
//	SpaceResourceSpecArgs{...}
type SpaceResourceSpecInput interface {
	pulumi.Input

	ToSpaceResourceSpecOutput() SpaceResourceSpecOutput
	ToSpaceResourceSpecOutputWithContext(context.Context) SpaceResourceSpecOutput
}

type SpaceResourceSpecArgs struct {
	// The instance type that the image version runs on.
	InstanceType SpaceResourceSpecInstanceTypePtrInput `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn pulumi.StringPtrInput `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn pulumi.StringPtrInput `pulumi:"sageMakerImageVersionArn"`
}

func (SpaceResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceResourceSpec)(nil)).Elem()
}

func (i SpaceResourceSpecArgs) ToSpaceResourceSpecOutput() SpaceResourceSpecOutput {
	return i.ToSpaceResourceSpecOutputWithContext(context.Background())
}

func (i SpaceResourceSpecArgs) ToSpaceResourceSpecOutputWithContext(ctx context.Context) SpaceResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceResourceSpecOutput)
}

func (i SpaceResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceResourceSpec] {
	return pulumix.Output[SpaceResourceSpec]{
		OutputState: i.ToSpaceResourceSpecOutputWithContext(ctx).OutputState,
	}
}

func (i SpaceResourceSpecArgs) ToSpaceResourceSpecPtrOutput() SpaceResourceSpecPtrOutput {
	return i.ToSpaceResourceSpecPtrOutputWithContext(context.Background())
}

func (i SpaceResourceSpecArgs) ToSpaceResourceSpecPtrOutputWithContext(ctx context.Context) SpaceResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceResourceSpecOutput).ToSpaceResourceSpecPtrOutputWithContext(ctx)
}

// SpaceResourceSpecPtrInput is an input type that accepts SpaceResourceSpecArgs, SpaceResourceSpecPtr and SpaceResourceSpecPtrOutput values.
// You can construct a concrete instance of `SpaceResourceSpecPtrInput` via:
//
//	        SpaceResourceSpecArgs{...}
//
//	or:
//
//	        nil
type SpaceResourceSpecPtrInput interface {
	pulumi.Input

	ToSpaceResourceSpecPtrOutput() SpaceResourceSpecPtrOutput
	ToSpaceResourceSpecPtrOutputWithContext(context.Context) SpaceResourceSpecPtrOutput
}

type spaceResourceSpecPtrType SpaceResourceSpecArgs

func SpaceResourceSpecPtr(v *SpaceResourceSpecArgs) SpaceResourceSpecPtrInput {
	return (*spaceResourceSpecPtrType)(v)
}

func (*spaceResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceResourceSpec)(nil)).Elem()
}

func (i *spaceResourceSpecPtrType) ToSpaceResourceSpecPtrOutput() SpaceResourceSpecPtrOutput {
	return i.ToSpaceResourceSpecPtrOutputWithContext(context.Background())
}

func (i *spaceResourceSpecPtrType) ToSpaceResourceSpecPtrOutputWithContext(ctx context.Context) SpaceResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceResourceSpecPtrOutput)
}

func (i *spaceResourceSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpaceResourceSpec] {
	return pulumix.Output[*SpaceResourceSpec]{
		OutputState: i.ToSpaceResourceSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type SpaceResourceSpecOutput struct{ *pulumi.OutputState }

func (SpaceResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceResourceSpec)(nil)).Elem()
}

func (o SpaceResourceSpecOutput) ToSpaceResourceSpecOutput() SpaceResourceSpecOutput {
	return o
}

func (o SpaceResourceSpecOutput) ToSpaceResourceSpecOutputWithContext(ctx context.Context) SpaceResourceSpecOutput {
	return o
}

func (o SpaceResourceSpecOutput) ToSpaceResourceSpecPtrOutput() SpaceResourceSpecPtrOutput {
	return o.ToSpaceResourceSpecPtrOutputWithContext(context.Background())
}

func (o SpaceResourceSpecOutput) ToSpaceResourceSpecPtrOutputWithContext(ctx context.Context) SpaceResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpaceResourceSpec) *SpaceResourceSpec {
		return &v
	}).(SpaceResourceSpecPtrOutput)
}

func (o SpaceResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceResourceSpec] {
	return pulumix.Output[SpaceResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.
func (o SpaceResourceSpecOutput) InstanceType() SpaceResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v SpaceResourceSpec) *SpaceResourceSpecInstanceType { return v.InstanceType }).(SpaceResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o SpaceResourceSpecOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpaceResourceSpec) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o SpaceResourceSpecOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpaceResourceSpec) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type SpaceResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (SpaceResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceResourceSpec)(nil)).Elem()
}

func (o SpaceResourceSpecPtrOutput) ToSpaceResourceSpecPtrOutput() SpaceResourceSpecPtrOutput {
	return o
}

func (o SpaceResourceSpecPtrOutput) ToSpaceResourceSpecPtrOutputWithContext(ctx context.Context) SpaceResourceSpecPtrOutput {
	return o
}

func (o SpaceResourceSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpaceResourceSpec] {
	return pulumix.Output[*SpaceResourceSpec]{
		OutputState: o.OutputState,
	}
}

func (o SpaceResourceSpecPtrOutput) Elem() SpaceResourceSpecOutput {
	return o.ApplyT(func(v *SpaceResourceSpec) SpaceResourceSpec {
		if v != nil {
			return *v
		}
		var ret SpaceResourceSpec
		return ret
	}).(SpaceResourceSpecOutput)
}

// The instance type that the image version runs on.
func (o SpaceResourceSpecPtrOutput) InstanceType() SpaceResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v *SpaceResourceSpec) *SpaceResourceSpecInstanceType {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(SpaceResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o SpaceResourceSpecPtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpaceResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o SpaceResourceSpecPtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpaceResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the CreateSpace API is called.
type SpaceSettings struct {
	// The Jupyter server's app settings.
	JupyterServerAppSettings *SpaceJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings *SpaceKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
}

// SpaceSettingsInput is an input type that accepts SpaceSettingsArgs and SpaceSettingsOutput values.
// You can construct a concrete instance of `SpaceSettingsInput` via:
//
//	SpaceSettingsArgs{...}
type SpaceSettingsInput interface {
	pulumi.Input

	ToSpaceSettingsOutput() SpaceSettingsOutput
	ToSpaceSettingsOutputWithContext(context.Context) SpaceSettingsOutput
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the CreateSpace API is called.
type SpaceSettingsArgs struct {
	// The Jupyter server's app settings.
	JupyterServerAppSettings SpaceJupyterServerAppSettingsPtrInput `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings SpaceKernelGatewayAppSettingsPtrInput `pulumi:"kernelGatewayAppSettings"`
}

func (SpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSettings)(nil)).Elem()
}

func (i SpaceSettingsArgs) ToSpaceSettingsOutput() SpaceSettingsOutput {
	return i.ToSpaceSettingsOutputWithContext(context.Background())
}

func (i SpaceSettingsArgs) ToSpaceSettingsOutputWithContext(ctx context.Context) SpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSettingsOutput)
}

func (i SpaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceSettings] {
	return pulumix.Output[SpaceSettings]{
		OutputState: i.ToSpaceSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i SpaceSettingsArgs) ToSpaceSettingsPtrOutput() SpaceSettingsPtrOutput {
	return i.ToSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i SpaceSettingsArgs) ToSpaceSettingsPtrOutputWithContext(ctx context.Context) SpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSettingsOutput).ToSpaceSettingsPtrOutputWithContext(ctx)
}

// SpaceSettingsPtrInput is an input type that accepts SpaceSettingsArgs, SpaceSettingsPtr and SpaceSettingsPtrOutput values.
// You can construct a concrete instance of `SpaceSettingsPtrInput` via:
//
//	        SpaceSettingsArgs{...}
//
//	or:
//
//	        nil
type SpaceSettingsPtrInput interface {
	pulumi.Input

	ToSpaceSettingsPtrOutput() SpaceSettingsPtrOutput
	ToSpaceSettingsPtrOutputWithContext(context.Context) SpaceSettingsPtrOutput
}

type spaceSettingsPtrType SpaceSettingsArgs

func SpaceSettingsPtr(v *SpaceSettingsArgs) SpaceSettingsPtrInput {
	return (*spaceSettingsPtrType)(v)
}

func (*spaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceSettings)(nil)).Elem()
}

func (i *spaceSettingsPtrType) ToSpaceSettingsPtrOutput() SpaceSettingsPtrOutput {
	return i.ToSpaceSettingsPtrOutputWithContext(context.Background())
}

func (i *spaceSettingsPtrType) ToSpaceSettingsPtrOutputWithContext(ctx context.Context) SpaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSettingsPtrOutput)
}

func (i *spaceSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SpaceSettings] {
	return pulumix.Output[*SpaceSettings]{
		OutputState: i.ToSpaceSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the CreateSpace API is called.
type SpaceSettingsOutput struct{ *pulumi.OutputState }

func (SpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSettings)(nil)).Elem()
}

func (o SpaceSettingsOutput) ToSpaceSettingsOutput() SpaceSettingsOutput {
	return o
}

func (o SpaceSettingsOutput) ToSpaceSettingsOutputWithContext(ctx context.Context) SpaceSettingsOutput {
	return o
}

func (o SpaceSettingsOutput) ToSpaceSettingsPtrOutput() SpaceSettingsPtrOutput {
	return o.ToSpaceSettingsPtrOutputWithContext(context.Background())
}

func (o SpaceSettingsOutput) ToSpaceSettingsPtrOutputWithContext(ctx context.Context) SpaceSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpaceSettings) *SpaceSettings {
		return &v
	}).(SpaceSettingsPtrOutput)
}

func (o SpaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSettings] {
	return pulumix.Output[SpaceSettings]{
		OutputState: o.OutputState,
	}
}

// The Jupyter server's app settings.
func (o SpaceSettingsOutput) JupyterServerAppSettings() SpaceJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v SpaceSettings) *SpaceJupyterServerAppSettings { return v.JupyterServerAppSettings }).(SpaceJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o SpaceSettingsOutput) KernelGatewayAppSettings() SpaceKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v SpaceSettings) *SpaceKernelGatewayAppSettings { return v.KernelGatewayAppSettings }).(SpaceKernelGatewayAppSettingsPtrOutput)
}

type SpaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (SpaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpaceSettings)(nil)).Elem()
}

func (o SpaceSettingsPtrOutput) ToSpaceSettingsPtrOutput() SpaceSettingsPtrOutput {
	return o
}

func (o SpaceSettingsPtrOutput) ToSpaceSettingsPtrOutputWithContext(ctx context.Context) SpaceSettingsPtrOutput {
	return o
}

func (o SpaceSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SpaceSettings] {
	return pulumix.Output[*SpaceSettings]{
		OutputState: o.OutputState,
	}
}

func (o SpaceSettingsPtrOutput) Elem() SpaceSettingsOutput {
	return o.ApplyT(func(v *SpaceSettings) SpaceSettings {
		if v != nil {
			return *v
		}
		var ret SpaceSettings
		return ret
	}).(SpaceSettingsOutput)
}

// The Jupyter server's app settings.
func (o SpaceSettingsPtrOutput) JupyterServerAppSettings() SpaceJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v *SpaceSettings) *SpaceJupyterServerAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterServerAppSettings
	}).(SpaceJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o SpaceSettingsPtrOutput) KernelGatewayAppSettings() SpaceKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v *SpaceSettings) *SpaceKernelGatewayAppSettings {
		if v == nil {
			return nil
		}
		return v.KernelGatewayAppSettings
	}).(SpaceKernelGatewayAppSettingsPtrOutput)
}

type SpaceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// SpaceTagInput is an input type that accepts SpaceTagArgs and SpaceTagOutput values.
// You can construct a concrete instance of `SpaceTagInput` via:
//
//	SpaceTagArgs{...}
type SpaceTagInput interface {
	pulumi.Input

	ToSpaceTagOutput() SpaceTagOutput
	ToSpaceTagOutputWithContext(context.Context) SpaceTagOutput
}

type SpaceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (SpaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceTag)(nil)).Elem()
}

func (i SpaceTagArgs) ToSpaceTagOutput() SpaceTagOutput {
	return i.ToSpaceTagOutputWithContext(context.Background())
}

func (i SpaceTagArgs) ToSpaceTagOutputWithContext(ctx context.Context) SpaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceTagOutput)
}

func (i SpaceTagArgs) ToOutput(ctx context.Context) pulumix.Output[SpaceTag] {
	return pulumix.Output[SpaceTag]{
		OutputState: i.ToSpaceTagOutputWithContext(ctx).OutputState,
	}
}

// SpaceTagArrayInput is an input type that accepts SpaceTagArray and SpaceTagArrayOutput values.
// You can construct a concrete instance of `SpaceTagArrayInput` via:
//
//	SpaceTagArray{ SpaceTagArgs{...} }
type SpaceTagArrayInput interface {
	pulumi.Input

	ToSpaceTagArrayOutput() SpaceTagArrayOutput
	ToSpaceTagArrayOutputWithContext(context.Context) SpaceTagArrayOutput
}

type SpaceTagArray []SpaceTagInput

func (SpaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpaceTag)(nil)).Elem()
}

func (i SpaceTagArray) ToSpaceTagArrayOutput() SpaceTagArrayOutput {
	return i.ToSpaceTagArrayOutputWithContext(context.Background())
}

func (i SpaceTagArray) ToSpaceTagArrayOutputWithContext(ctx context.Context) SpaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceTagArrayOutput)
}

func (i SpaceTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SpaceTag] {
	return pulumix.Output[[]SpaceTag]{
		OutputState: i.ToSpaceTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SpaceTagOutput struct{ *pulumi.OutputState }

func (SpaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceTag)(nil)).Elem()
}

func (o SpaceTagOutput) ToSpaceTagOutput() SpaceTagOutput {
	return o
}

func (o SpaceTagOutput) ToSpaceTagOutputWithContext(ctx context.Context) SpaceTagOutput {
	return o
}

func (o SpaceTagOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceTag] {
	return pulumix.Output[SpaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SpaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SpaceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o SpaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SpaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type SpaceTagArrayOutput struct{ *pulumi.OutputState }

func (SpaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpaceTag)(nil)).Elem()
}

func (o SpaceTagArrayOutput) ToSpaceTagArrayOutput() SpaceTagArrayOutput {
	return o
}

func (o SpaceTagArrayOutput) ToSpaceTagArrayOutputWithContext(ctx context.Context) SpaceTagArrayOutput {
	return o
}

func (o SpaceTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SpaceTag] {
	return pulumix.Output[[]SpaceTag]{
		OutputState: o.OutputState,
	}
}

func (o SpaceTagArrayOutput) Index(i pulumi.IntInput) SpaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpaceTag {
		return vs[0].([]SpaceTag)[vs[1].(int)]
	}).(SpaceTagOutput)
}

// The CodeEditor app settings.
type UserProfileCodeEditorAppSettings struct {
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
	DefaultResourceSpec *UserProfileResourceSpec `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with CodeEditor apps.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

// UserProfileCodeEditorAppSettingsInput is an input type that accepts UserProfileCodeEditorAppSettingsArgs and UserProfileCodeEditorAppSettingsOutput values.
// You can construct a concrete instance of `UserProfileCodeEditorAppSettingsInput` via:
//
//	UserProfileCodeEditorAppSettingsArgs{...}
type UserProfileCodeEditorAppSettingsInput interface {
	pulumi.Input

	ToUserProfileCodeEditorAppSettingsOutput() UserProfileCodeEditorAppSettingsOutput
	ToUserProfileCodeEditorAppSettingsOutputWithContext(context.Context) UserProfileCodeEditorAppSettingsOutput
}

// The CodeEditor app settings.
type UserProfileCodeEditorAppSettingsArgs struct {
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
	DefaultResourceSpec UserProfileResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with CodeEditor apps.
	LifecycleConfigArns pulumi.StringArrayInput `pulumi:"lifecycleConfigArns"`
}

func (UserProfileCodeEditorAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCodeEditorAppSettings)(nil)).Elem()
}

func (i UserProfileCodeEditorAppSettingsArgs) ToUserProfileCodeEditorAppSettingsOutput() UserProfileCodeEditorAppSettingsOutput {
	return i.ToUserProfileCodeEditorAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileCodeEditorAppSettingsArgs) ToUserProfileCodeEditorAppSettingsOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCodeEditorAppSettingsOutput)
}

func (i UserProfileCodeEditorAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileCodeEditorAppSettings] {
	return pulumix.Output[UserProfileCodeEditorAppSettings]{
		OutputState: i.ToUserProfileCodeEditorAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileCodeEditorAppSettingsArgs) ToUserProfileCodeEditorAppSettingsPtrOutput() UserProfileCodeEditorAppSettingsPtrOutput {
	return i.ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileCodeEditorAppSettingsArgs) ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCodeEditorAppSettingsOutput).ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx)
}

// UserProfileCodeEditorAppSettingsPtrInput is an input type that accepts UserProfileCodeEditorAppSettingsArgs, UserProfileCodeEditorAppSettingsPtr and UserProfileCodeEditorAppSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileCodeEditorAppSettingsPtrInput` via:
//
//	        UserProfileCodeEditorAppSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileCodeEditorAppSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileCodeEditorAppSettingsPtrOutput() UserProfileCodeEditorAppSettingsPtrOutput
	ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(context.Context) UserProfileCodeEditorAppSettingsPtrOutput
}

type userProfileCodeEditorAppSettingsPtrType UserProfileCodeEditorAppSettingsArgs

func UserProfileCodeEditorAppSettingsPtr(v *UserProfileCodeEditorAppSettingsArgs) UserProfileCodeEditorAppSettingsPtrInput {
	return (*userProfileCodeEditorAppSettingsPtrType)(v)
}

func (*userProfileCodeEditorAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileCodeEditorAppSettings)(nil)).Elem()
}

func (i *userProfileCodeEditorAppSettingsPtrType) ToUserProfileCodeEditorAppSettingsPtrOutput() UserProfileCodeEditorAppSettingsPtrOutput {
	return i.ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileCodeEditorAppSettingsPtrType) ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCodeEditorAppSettingsPtrOutput)
}

func (i *userProfileCodeEditorAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileCodeEditorAppSettings] {
	return pulumix.Output[*UserProfileCodeEditorAppSettings]{
		OutputState: i.ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The CodeEditor app settings.
type UserProfileCodeEditorAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileCodeEditorAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCodeEditorAppSettings)(nil)).Elem()
}

func (o UserProfileCodeEditorAppSettingsOutput) ToUserProfileCodeEditorAppSettingsOutput() UserProfileCodeEditorAppSettingsOutput {
	return o
}

func (o UserProfileCodeEditorAppSettingsOutput) ToUserProfileCodeEditorAppSettingsOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsOutput {
	return o
}

func (o UserProfileCodeEditorAppSettingsOutput) ToUserProfileCodeEditorAppSettingsPtrOutput() UserProfileCodeEditorAppSettingsPtrOutput {
	return o.ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileCodeEditorAppSettingsOutput) ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileCodeEditorAppSettings) *UserProfileCodeEditorAppSettings {
		return &v
	}).(UserProfileCodeEditorAppSettingsPtrOutput)
}

func (o UserProfileCodeEditorAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileCodeEditorAppSettings] {
	return pulumix.Output[UserProfileCodeEditorAppSettings]{
		OutputState: o.OutputState,
	}
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
func (o UserProfileCodeEditorAppSettingsOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v UserProfileCodeEditorAppSettings) *UserProfileResourceSpec { return v.DefaultResourceSpec }).(UserProfileResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with CodeEditor apps.
func (o UserProfileCodeEditorAppSettingsOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserProfileCodeEditorAppSettings) []string { return v.LifecycleConfigArns }).(pulumi.StringArrayOutput)
}

type UserProfileCodeEditorAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileCodeEditorAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileCodeEditorAppSettings)(nil)).Elem()
}

func (o UserProfileCodeEditorAppSettingsPtrOutput) ToUserProfileCodeEditorAppSettingsPtrOutput() UserProfileCodeEditorAppSettingsPtrOutput {
	return o
}

func (o UserProfileCodeEditorAppSettingsPtrOutput) ToUserProfileCodeEditorAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileCodeEditorAppSettingsPtrOutput {
	return o
}

func (o UserProfileCodeEditorAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileCodeEditorAppSettings] {
	return pulumix.Output[*UserProfileCodeEditorAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCodeEditorAppSettingsPtrOutput) Elem() UserProfileCodeEditorAppSettingsOutput {
	return o.ApplyT(func(v *UserProfileCodeEditorAppSettings) UserProfileCodeEditorAppSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileCodeEditorAppSettings
		return ret
	}).(UserProfileCodeEditorAppSettingsOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
func (o UserProfileCodeEditorAppSettingsPtrOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v *UserProfileCodeEditorAppSettings) *UserProfileResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(UserProfileResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with CodeEditor apps.
func (o UserProfileCodeEditorAppSettingsPtrOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserProfileCodeEditorAppSettings) []string {
		if v == nil {
			return nil
		}
		return v.LifecycleConfigArns
	}).(pulumi.StringArrayOutput)
}

type UserProfileCodeRepository struct {
	// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

// UserProfileCodeRepositoryInput is an input type that accepts UserProfileCodeRepositoryArgs and UserProfileCodeRepositoryOutput values.
// You can construct a concrete instance of `UserProfileCodeRepositoryInput` via:
//
//	UserProfileCodeRepositoryArgs{...}
type UserProfileCodeRepositoryInput interface {
	pulumi.Input

	ToUserProfileCodeRepositoryOutput() UserProfileCodeRepositoryOutput
	ToUserProfileCodeRepositoryOutputWithContext(context.Context) UserProfileCodeRepositoryOutput
}

type UserProfileCodeRepositoryArgs struct {
	// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
}

func (UserProfileCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCodeRepository)(nil)).Elem()
}

func (i UserProfileCodeRepositoryArgs) ToUserProfileCodeRepositoryOutput() UserProfileCodeRepositoryOutput {
	return i.ToUserProfileCodeRepositoryOutputWithContext(context.Background())
}

func (i UserProfileCodeRepositoryArgs) ToUserProfileCodeRepositoryOutputWithContext(ctx context.Context) UserProfileCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCodeRepositoryOutput)
}

func (i UserProfileCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileCodeRepository] {
	return pulumix.Output[UserProfileCodeRepository]{
		OutputState: i.ToUserProfileCodeRepositoryOutputWithContext(ctx).OutputState,
	}
}

// UserProfileCodeRepositoryArrayInput is an input type that accepts UserProfileCodeRepositoryArray and UserProfileCodeRepositoryArrayOutput values.
// You can construct a concrete instance of `UserProfileCodeRepositoryArrayInput` via:
//
//	UserProfileCodeRepositoryArray{ UserProfileCodeRepositoryArgs{...} }
type UserProfileCodeRepositoryArrayInput interface {
	pulumi.Input

	ToUserProfileCodeRepositoryArrayOutput() UserProfileCodeRepositoryArrayOutput
	ToUserProfileCodeRepositoryArrayOutputWithContext(context.Context) UserProfileCodeRepositoryArrayOutput
}

type UserProfileCodeRepositoryArray []UserProfileCodeRepositoryInput

func (UserProfileCodeRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCodeRepository)(nil)).Elem()
}

func (i UserProfileCodeRepositoryArray) ToUserProfileCodeRepositoryArrayOutput() UserProfileCodeRepositoryArrayOutput {
	return i.ToUserProfileCodeRepositoryArrayOutputWithContext(context.Background())
}

func (i UserProfileCodeRepositoryArray) ToUserProfileCodeRepositoryArrayOutputWithContext(ctx context.Context) UserProfileCodeRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCodeRepositoryArrayOutput)
}

func (i UserProfileCodeRepositoryArray) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCodeRepository] {
	return pulumix.Output[[]UserProfileCodeRepository]{
		OutputState: i.ToUserProfileCodeRepositoryArrayOutputWithContext(ctx).OutputState,
	}
}

type UserProfileCodeRepositoryOutput struct{ *pulumi.OutputState }

func (UserProfileCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCodeRepository)(nil)).Elem()
}

func (o UserProfileCodeRepositoryOutput) ToUserProfileCodeRepositoryOutput() UserProfileCodeRepositoryOutput {
	return o
}

func (o UserProfileCodeRepositoryOutput) ToUserProfileCodeRepositoryOutputWithContext(ctx context.Context) UserProfileCodeRepositoryOutput {
	return o
}

func (o UserProfileCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileCodeRepository] {
	return pulumix.Output[UserProfileCodeRepository]{
		OutputState: o.OutputState,
	}
}

// A CodeRepository (valid URL) to be used within Jupyter's Git extension.
func (o UserProfileCodeRepositoryOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileCodeRepository) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

type UserProfileCodeRepositoryArrayOutput struct{ *pulumi.OutputState }

func (UserProfileCodeRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCodeRepository)(nil)).Elem()
}

func (o UserProfileCodeRepositoryArrayOutput) ToUserProfileCodeRepositoryArrayOutput() UserProfileCodeRepositoryArrayOutput {
	return o
}

func (o UserProfileCodeRepositoryArrayOutput) ToUserProfileCodeRepositoryArrayOutputWithContext(ctx context.Context) UserProfileCodeRepositoryArrayOutput {
	return o
}

func (o UserProfileCodeRepositoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCodeRepository] {
	return pulumix.Output[[]UserProfileCodeRepository]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCodeRepositoryArrayOutput) Index(i pulumi.IntInput) UserProfileCodeRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserProfileCodeRepository {
		return vs[0].([]UserProfileCodeRepository)[vs[1].(int)]
	}).(UserProfileCodeRepositoryOutput)
}

type UserProfileCustomFileSystemConfig struct {
	EfsFileSystemConfig *UserProfileEfsFileSystemConfig `pulumi:"efsFileSystemConfig"`
}

// UserProfileCustomFileSystemConfigInput is an input type that accepts UserProfileCustomFileSystemConfigArgs and UserProfileCustomFileSystemConfigOutput values.
// You can construct a concrete instance of `UserProfileCustomFileSystemConfigInput` via:
//
//	UserProfileCustomFileSystemConfigArgs{...}
type UserProfileCustomFileSystemConfigInput interface {
	pulumi.Input

	ToUserProfileCustomFileSystemConfigOutput() UserProfileCustomFileSystemConfigOutput
	ToUserProfileCustomFileSystemConfigOutputWithContext(context.Context) UserProfileCustomFileSystemConfigOutput
}

type UserProfileCustomFileSystemConfigArgs struct {
	EfsFileSystemConfig UserProfileEfsFileSystemConfigPtrInput `pulumi:"efsFileSystemConfig"`
}

func (UserProfileCustomFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomFileSystemConfig)(nil)).Elem()
}

func (i UserProfileCustomFileSystemConfigArgs) ToUserProfileCustomFileSystemConfigOutput() UserProfileCustomFileSystemConfigOutput {
	return i.ToUserProfileCustomFileSystemConfigOutputWithContext(context.Background())
}

func (i UserProfileCustomFileSystemConfigArgs) ToUserProfileCustomFileSystemConfigOutputWithContext(ctx context.Context) UserProfileCustomFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomFileSystemConfigOutput)
}

func (i UserProfileCustomFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomFileSystemConfig] {
	return pulumix.Output[UserProfileCustomFileSystemConfig]{
		OutputState: i.ToUserProfileCustomFileSystemConfigOutputWithContext(ctx).OutputState,
	}
}

// UserProfileCustomFileSystemConfigArrayInput is an input type that accepts UserProfileCustomFileSystemConfigArray and UserProfileCustomFileSystemConfigArrayOutput values.
// You can construct a concrete instance of `UserProfileCustomFileSystemConfigArrayInput` via:
//
//	UserProfileCustomFileSystemConfigArray{ UserProfileCustomFileSystemConfigArgs{...} }
type UserProfileCustomFileSystemConfigArrayInput interface {
	pulumi.Input

	ToUserProfileCustomFileSystemConfigArrayOutput() UserProfileCustomFileSystemConfigArrayOutput
	ToUserProfileCustomFileSystemConfigArrayOutputWithContext(context.Context) UserProfileCustomFileSystemConfigArrayOutput
}

type UserProfileCustomFileSystemConfigArray []UserProfileCustomFileSystemConfigInput

func (UserProfileCustomFileSystemConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCustomFileSystemConfig)(nil)).Elem()
}

func (i UserProfileCustomFileSystemConfigArray) ToUserProfileCustomFileSystemConfigArrayOutput() UserProfileCustomFileSystemConfigArrayOutput {
	return i.ToUserProfileCustomFileSystemConfigArrayOutputWithContext(context.Background())
}

func (i UserProfileCustomFileSystemConfigArray) ToUserProfileCustomFileSystemConfigArrayOutputWithContext(ctx context.Context) UserProfileCustomFileSystemConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomFileSystemConfigArrayOutput)
}

func (i UserProfileCustomFileSystemConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCustomFileSystemConfig] {
	return pulumix.Output[[]UserProfileCustomFileSystemConfig]{
		OutputState: i.ToUserProfileCustomFileSystemConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type UserProfileCustomFileSystemConfigOutput struct{ *pulumi.OutputState }

func (UserProfileCustomFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomFileSystemConfig)(nil)).Elem()
}

func (o UserProfileCustomFileSystemConfigOutput) ToUserProfileCustomFileSystemConfigOutput() UserProfileCustomFileSystemConfigOutput {
	return o
}

func (o UserProfileCustomFileSystemConfigOutput) ToUserProfileCustomFileSystemConfigOutputWithContext(ctx context.Context) UserProfileCustomFileSystemConfigOutput {
	return o
}

func (o UserProfileCustomFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomFileSystemConfig] {
	return pulumix.Output[UserProfileCustomFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCustomFileSystemConfigOutput) EfsFileSystemConfig() UserProfileEfsFileSystemConfigPtrOutput {
	return o.ApplyT(func(v UserProfileCustomFileSystemConfig) *UserProfileEfsFileSystemConfig {
		return v.EfsFileSystemConfig
	}).(UserProfileEfsFileSystemConfigPtrOutput)
}

type UserProfileCustomFileSystemConfigArrayOutput struct{ *pulumi.OutputState }

func (UserProfileCustomFileSystemConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCustomFileSystemConfig)(nil)).Elem()
}

func (o UserProfileCustomFileSystemConfigArrayOutput) ToUserProfileCustomFileSystemConfigArrayOutput() UserProfileCustomFileSystemConfigArrayOutput {
	return o
}

func (o UserProfileCustomFileSystemConfigArrayOutput) ToUserProfileCustomFileSystemConfigArrayOutputWithContext(ctx context.Context) UserProfileCustomFileSystemConfigArrayOutput {
	return o
}

func (o UserProfileCustomFileSystemConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCustomFileSystemConfig] {
	return pulumix.Output[[]UserProfileCustomFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCustomFileSystemConfigArrayOutput) Index(i pulumi.IntInput) UserProfileCustomFileSystemConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserProfileCustomFileSystemConfig {
		return vs[0].([]UserProfileCustomFileSystemConfig)[vs[1].(int)]
	}).(UserProfileCustomFileSystemConfigOutput)
}

// A custom SageMaker image.
type UserProfileCustomImage struct {
	// The Name of the AppImageConfig.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName string `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

// UserProfileCustomImageInput is an input type that accepts UserProfileCustomImageArgs and UserProfileCustomImageOutput values.
// You can construct a concrete instance of `UserProfileCustomImageInput` via:
//
//	UserProfileCustomImageArgs{...}
type UserProfileCustomImageInput interface {
	pulumi.Input

	ToUserProfileCustomImageOutput() UserProfileCustomImageOutput
	ToUserProfileCustomImageOutputWithContext(context.Context) UserProfileCustomImageOutput
}

// A custom SageMaker image.
type UserProfileCustomImageArgs struct {
	// The Name of the AppImageConfig.
	AppImageConfigName pulumi.StringInput `pulumi:"appImageConfigName"`
	// The name of the CustomImage. Must be unique to your account.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The version number of the CustomImage.
	ImageVersionNumber pulumi.IntPtrInput `pulumi:"imageVersionNumber"`
}

func (UserProfileCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomImage)(nil)).Elem()
}

func (i UserProfileCustomImageArgs) ToUserProfileCustomImageOutput() UserProfileCustomImageOutput {
	return i.ToUserProfileCustomImageOutputWithContext(context.Background())
}

func (i UserProfileCustomImageArgs) ToUserProfileCustomImageOutputWithContext(ctx context.Context) UserProfileCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomImageOutput)
}

func (i UserProfileCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomImage] {
	return pulumix.Output[UserProfileCustomImage]{
		OutputState: i.ToUserProfileCustomImageOutputWithContext(ctx).OutputState,
	}
}

// UserProfileCustomImageArrayInput is an input type that accepts UserProfileCustomImageArray and UserProfileCustomImageArrayOutput values.
// You can construct a concrete instance of `UserProfileCustomImageArrayInput` via:
//
//	UserProfileCustomImageArray{ UserProfileCustomImageArgs{...} }
type UserProfileCustomImageArrayInput interface {
	pulumi.Input

	ToUserProfileCustomImageArrayOutput() UserProfileCustomImageArrayOutput
	ToUserProfileCustomImageArrayOutputWithContext(context.Context) UserProfileCustomImageArrayOutput
}

type UserProfileCustomImageArray []UserProfileCustomImageInput

func (UserProfileCustomImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCustomImage)(nil)).Elem()
}

func (i UserProfileCustomImageArray) ToUserProfileCustomImageArrayOutput() UserProfileCustomImageArrayOutput {
	return i.ToUserProfileCustomImageArrayOutputWithContext(context.Background())
}

func (i UserProfileCustomImageArray) ToUserProfileCustomImageArrayOutputWithContext(ctx context.Context) UserProfileCustomImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomImageArrayOutput)
}

func (i UserProfileCustomImageArray) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCustomImage] {
	return pulumix.Output[[]UserProfileCustomImage]{
		OutputState: i.ToUserProfileCustomImageArrayOutputWithContext(ctx).OutputState,
	}
}

// A custom SageMaker image.
type UserProfileCustomImageOutput struct{ *pulumi.OutputState }

func (UserProfileCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomImage)(nil)).Elem()
}

func (o UserProfileCustomImageOutput) ToUserProfileCustomImageOutput() UserProfileCustomImageOutput {
	return o
}

func (o UserProfileCustomImageOutput) ToUserProfileCustomImageOutputWithContext(ctx context.Context) UserProfileCustomImageOutput {
	return o
}

func (o UserProfileCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomImage] {
	return pulumix.Output[UserProfileCustomImage]{
		OutputState: o.OutputState,
	}
}

// The Name of the AppImageConfig.
func (o UserProfileCustomImageOutput) AppImageConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileCustomImage) string { return v.AppImageConfigName }).(pulumi.StringOutput)
}

// The name of the CustomImage. Must be unique to your account.
func (o UserProfileCustomImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileCustomImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The version number of the CustomImage.
func (o UserProfileCustomImageOutput) ImageVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserProfileCustomImage) *int { return v.ImageVersionNumber }).(pulumi.IntPtrOutput)
}

type UserProfileCustomImageArrayOutput struct{ *pulumi.OutputState }

func (UserProfileCustomImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileCustomImage)(nil)).Elem()
}

func (o UserProfileCustomImageArrayOutput) ToUserProfileCustomImageArrayOutput() UserProfileCustomImageArrayOutput {
	return o
}

func (o UserProfileCustomImageArrayOutput) ToUserProfileCustomImageArrayOutputWithContext(ctx context.Context) UserProfileCustomImageArrayOutput {
	return o
}

func (o UserProfileCustomImageArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileCustomImage] {
	return pulumix.Output[[]UserProfileCustomImage]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCustomImageArrayOutput) Index(i pulumi.IntInput) UserProfileCustomImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserProfileCustomImage {
		return vs[0].([]UserProfileCustomImage)[vs[1].(int)]
	}).(UserProfileCustomImageOutput)
}

type UserProfileCustomPosixUserConfig struct {
	Gid int `pulumi:"gid"`
	Uid int `pulumi:"uid"`
}

// UserProfileCustomPosixUserConfigInput is an input type that accepts UserProfileCustomPosixUserConfigArgs and UserProfileCustomPosixUserConfigOutput values.
// You can construct a concrete instance of `UserProfileCustomPosixUserConfigInput` via:
//
//	UserProfileCustomPosixUserConfigArgs{...}
type UserProfileCustomPosixUserConfigInput interface {
	pulumi.Input

	ToUserProfileCustomPosixUserConfigOutput() UserProfileCustomPosixUserConfigOutput
	ToUserProfileCustomPosixUserConfigOutputWithContext(context.Context) UserProfileCustomPosixUserConfigOutput
}

type UserProfileCustomPosixUserConfigArgs struct {
	Gid pulumi.IntInput `pulumi:"gid"`
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (UserProfileCustomPosixUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomPosixUserConfig)(nil)).Elem()
}

func (i UserProfileCustomPosixUserConfigArgs) ToUserProfileCustomPosixUserConfigOutput() UserProfileCustomPosixUserConfigOutput {
	return i.ToUserProfileCustomPosixUserConfigOutputWithContext(context.Background())
}

func (i UserProfileCustomPosixUserConfigArgs) ToUserProfileCustomPosixUserConfigOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomPosixUserConfigOutput)
}

func (i UserProfileCustomPosixUserConfigArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomPosixUserConfig] {
	return pulumix.Output[UserProfileCustomPosixUserConfig]{
		OutputState: i.ToUserProfileCustomPosixUserConfigOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileCustomPosixUserConfigArgs) ToUserProfileCustomPosixUserConfigPtrOutput() UserProfileCustomPosixUserConfigPtrOutput {
	return i.ToUserProfileCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (i UserProfileCustomPosixUserConfigArgs) ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomPosixUserConfigOutput).ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx)
}

// UserProfileCustomPosixUserConfigPtrInput is an input type that accepts UserProfileCustomPosixUserConfigArgs, UserProfileCustomPosixUserConfigPtr and UserProfileCustomPosixUserConfigPtrOutput values.
// You can construct a concrete instance of `UserProfileCustomPosixUserConfigPtrInput` via:
//
//	        UserProfileCustomPosixUserConfigArgs{...}
//
//	or:
//
//	        nil
type UserProfileCustomPosixUserConfigPtrInput interface {
	pulumi.Input

	ToUserProfileCustomPosixUserConfigPtrOutput() UserProfileCustomPosixUserConfigPtrOutput
	ToUserProfileCustomPosixUserConfigPtrOutputWithContext(context.Context) UserProfileCustomPosixUserConfigPtrOutput
}

type userProfileCustomPosixUserConfigPtrType UserProfileCustomPosixUserConfigArgs

func UserProfileCustomPosixUserConfigPtr(v *UserProfileCustomPosixUserConfigArgs) UserProfileCustomPosixUserConfigPtrInput {
	return (*userProfileCustomPosixUserConfigPtrType)(v)
}

func (*userProfileCustomPosixUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileCustomPosixUserConfig)(nil)).Elem()
}

func (i *userProfileCustomPosixUserConfigPtrType) ToUserProfileCustomPosixUserConfigPtrOutput() UserProfileCustomPosixUserConfigPtrOutput {
	return i.ToUserProfileCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (i *userProfileCustomPosixUserConfigPtrType) ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileCustomPosixUserConfigPtrOutput)
}

func (i *userProfileCustomPosixUserConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileCustomPosixUserConfig] {
	return pulumix.Output[*UserProfileCustomPosixUserConfig]{
		OutputState: i.ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type UserProfileCustomPosixUserConfigOutput struct{ *pulumi.OutputState }

func (UserProfileCustomPosixUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileCustomPosixUserConfig)(nil)).Elem()
}

func (o UserProfileCustomPosixUserConfigOutput) ToUserProfileCustomPosixUserConfigOutput() UserProfileCustomPosixUserConfigOutput {
	return o
}

func (o UserProfileCustomPosixUserConfigOutput) ToUserProfileCustomPosixUserConfigOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigOutput {
	return o
}

func (o UserProfileCustomPosixUserConfigOutput) ToUserProfileCustomPosixUserConfigPtrOutput() UserProfileCustomPosixUserConfigPtrOutput {
	return o.ToUserProfileCustomPosixUserConfigPtrOutputWithContext(context.Background())
}

func (o UserProfileCustomPosixUserConfigOutput) ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileCustomPosixUserConfig) *UserProfileCustomPosixUserConfig {
		return &v
	}).(UserProfileCustomPosixUserConfigPtrOutput)
}

func (o UserProfileCustomPosixUserConfigOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileCustomPosixUserConfig] {
	return pulumix.Output[UserProfileCustomPosixUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCustomPosixUserConfigOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v UserProfileCustomPosixUserConfig) int { return v.Gid }).(pulumi.IntOutput)
}

func (o UserProfileCustomPosixUserConfigOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v UserProfileCustomPosixUserConfig) int { return v.Uid }).(pulumi.IntOutput)
}

type UserProfileCustomPosixUserConfigPtrOutput struct{ *pulumi.OutputState }

func (UserProfileCustomPosixUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileCustomPosixUserConfig)(nil)).Elem()
}

func (o UserProfileCustomPosixUserConfigPtrOutput) ToUserProfileCustomPosixUserConfigPtrOutput() UserProfileCustomPosixUserConfigPtrOutput {
	return o
}

func (o UserProfileCustomPosixUserConfigPtrOutput) ToUserProfileCustomPosixUserConfigPtrOutputWithContext(ctx context.Context) UserProfileCustomPosixUserConfigPtrOutput {
	return o
}

func (o UserProfileCustomPosixUserConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileCustomPosixUserConfig] {
	return pulumix.Output[*UserProfileCustomPosixUserConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileCustomPosixUserConfigPtrOutput) Elem() UserProfileCustomPosixUserConfigOutput {
	return o.ApplyT(func(v *UserProfileCustomPosixUserConfig) UserProfileCustomPosixUserConfig {
		if v != nil {
			return *v
		}
		var ret UserProfileCustomPosixUserConfig
		return ret
	}).(UserProfileCustomPosixUserConfigOutput)
}

func (o UserProfileCustomPosixUserConfigPtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserProfileCustomPosixUserConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.IntPtrOutput)
}

func (o UserProfileCustomPosixUserConfigPtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserProfileCustomPosixUserConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.IntPtrOutput)
}

// Properties related to the Amazon Elastic Block Store volume.
type UserProfileDefaultEbsStorageSettings struct {
	// Default size of the Amazon EBS volume in Gb
	DefaultEbsVolumeSizeInGb int `pulumi:"defaultEbsVolumeSizeInGb"`
	// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
	MaximumEbsVolumeSizeInGb int `pulumi:"maximumEbsVolumeSizeInGb"`
}

// UserProfileDefaultEbsStorageSettingsInput is an input type that accepts UserProfileDefaultEbsStorageSettingsArgs and UserProfileDefaultEbsStorageSettingsOutput values.
// You can construct a concrete instance of `UserProfileDefaultEbsStorageSettingsInput` via:
//
//	UserProfileDefaultEbsStorageSettingsArgs{...}
type UserProfileDefaultEbsStorageSettingsInput interface {
	pulumi.Input

	ToUserProfileDefaultEbsStorageSettingsOutput() UserProfileDefaultEbsStorageSettingsOutput
	ToUserProfileDefaultEbsStorageSettingsOutputWithContext(context.Context) UserProfileDefaultEbsStorageSettingsOutput
}

// Properties related to the Amazon Elastic Block Store volume.
type UserProfileDefaultEbsStorageSettingsArgs struct {
	// Default size of the Amazon EBS volume in Gb
	DefaultEbsVolumeSizeInGb pulumi.IntInput `pulumi:"defaultEbsVolumeSizeInGb"`
	// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
	MaximumEbsVolumeSizeInGb pulumi.IntInput `pulumi:"maximumEbsVolumeSizeInGb"`
}

func (UserProfileDefaultEbsStorageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileDefaultEbsStorageSettings)(nil)).Elem()
}

func (i UserProfileDefaultEbsStorageSettingsArgs) ToUserProfileDefaultEbsStorageSettingsOutput() UserProfileDefaultEbsStorageSettingsOutput {
	return i.ToUserProfileDefaultEbsStorageSettingsOutputWithContext(context.Background())
}

func (i UserProfileDefaultEbsStorageSettingsArgs) ToUserProfileDefaultEbsStorageSettingsOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultEbsStorageSettingsOutput)
}

func (i UserProfileDefaultEbsStorageSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileDefaultEbsStorageSettings] {
	return pulumix.Output[UserProfileDefaultEbsStorageSettings]{
		OutputState: i.ToUserProfileDefaultEbsStorageSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileDefaultEbsStorageSettingsArgs) ToUserProfileDefaultEbsStorageSettingsPtrOutput() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return i.ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileDefaultEbsStorageSettingsArgs) ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultEbsStorageSettingsOutput).ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx)
}

// UserProfileDefaultEbsStorageSettingsPtrInput is an input type that accepts UserProfileDefaultEbsStorageSettingsArgs, UserProfileDefaultEbsStorageSettingsPtr and UserProfileDefaultEbsStorageSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileDefaultEbsStorageSettingsPtrInput` via:
//
//	        UserProfileDefaultEbsStorageSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileDefaultEbsStorageSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileDefaultEbsStorageSettingsPtrOutput() UserProfileDefaultEbsStorageSettingsPtrOutput
	ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(context.Context) UserProfileDefaultEbsStorageSettingsPtrOutput
}

type userProfileDefaultEbsStorageSettingsPtrType UserProfileDefaultEbsStorageSettingsArgs

func UserProfileDefaultEbsStorageSettingsPtr(v *UserProfileDefaultEbsStorageSettingsArgs) UserProfileDefaultEbsStorageSettingsPtrInput {
	return (*userProfileDefaultEbsStorageSettingsPtrType)(v)
}

func (*userProfileDefaultEbsStorageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileDefaultEbsStorageSettings)(nil)).Elem()
}

func (i *userProfileDefaultEbsStorageSettingsPtrType) ToUserProfileDefaultEbsStorageSettingsPtrOutput() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return i.ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileDefaultEbsStorageSettingsPtrType) ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultEbsStorageSettingsPtrOutput)
}

func (i *userProfileDefaultEbsStorageSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileDefaultEbsStorageSettings] {
	return pulumix.Output[*UserProfileDefaultEbsStorageSettings]{
		OutputState: i.ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Properties related to the Amazon Elastic Block Store volume.
type UserProfileDefaultEbsStorageSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileDefaultEbsStorageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileDefaultEbsStorageSettings)(nil)).Elem()
}

func (o UserProfileDefaultEbsStorageSettingsOutput) ToUserProfileDefaultEbsStorageSettingsOutput() UserProfileDefaultEbsStorageSettingsOutput {
	return o
}

func (o UserProfileDefaultEbsStorageSettingsOutput) ToUserProfileDefaultEbsStorageSettingsOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsOutput {
	return o
}

func (o UserProfileDefaultEbsStorageSettingsOutput) ToUserProfileDefaultEbsStorageSettingsPtrOutput() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o.ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileDefaultEbsStorageSettingsOutput) ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileDefaultEbsStorageSettings) *UserProfileDefaultEbsStorageSettings {
		return &v
	}).(UserProfileDefaultEbsStorageSettingsPtrOutput)
}

func (o UserProfileDefaultEbsStorageSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileDefaultEbsStorageSettings] {
	return pulumix.Output[UserProfileDefaultEbsStorageSettings]{
		OutputState: o.OutputState,
	}
}

// Default size of the Amazon EBS volume in Gb
func (o UserProfileDefaultEbsStorageSettingsOutput) DefaultEbsVolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v UserProfileDefaultEbsStorageSettings) int { return v.DefaultEbsVolumeSizeInGb }).(pulumi.IntOutput)
}

// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
func (o UserProfileDefaultEbsStorageSettingsOutput) MaximumEbsVolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v UserProfileDefaultEbsStorageSettings) int { return v.MaximumEbsVolumeSizeInGb }).(pulumi.IntOutput)
}

type UserProfileDefaultEbsStorageSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileDefaultEbsStorageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileDefaultEbsStorageSettings)(nil)).Elem()
}

func (o UserProfileDefaultEbsStorageSettingsPtrOutput) ToUserProfileDefaultEbsStorageSettingsPtrOutput() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o
}

func (o UserProfileDefaultEbsStorageSettingsPtrOutput) ToUserProfileDefaultEbsStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o
}

func (o UserProfileDefaultEbsStorageSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileDefaultEbsStorageSettings] {
	return pulumix.Output[*UserProfileDefaultEbsStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileDefaultEbsStorageSettingsPtrOutput) Elem() UserProfileDefaultEbsStorageSettingsOutput {
	return o.ApplyT(func(v *UserProfileDefaultEbsStorageSettings) UserProfileDefaultEbsStorageSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileDefaultEbsStorageSettings
		return ret
	}).(UserProfileDefaultEbsStorageSettingsOutput)
}

// Default size of the Amazon EBS volume in Gb
func (o UserProfileDefaultEbsStorageSettingsPtrOutput) DefaultEbsVolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserProfileDefaultEbsStorageSettings) *int {
		if v == nil {
			return nil
		}
		return &v.DefaultEbsVolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

// Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
func (o UserProfileDefaultEbsStorageSettingsPtrOutput) MaximumEbsVolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserProfileDefaultEbsStorageSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumEbsVolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

// Default storage settings for a space.
type UserProfileDefaultSpaceStorageSettings struct {
	DefaultEbsStorageSettings *UserProfileDefaultEbsStorageSettings `pulumi:"defaultEbsStorageSettings"`
}

// UserProfileDefaultSpaceStorageSettingsInput is an input type that accepts UserProfileDefaultSpaceStorageSettingsArgs and UserProfileDefaultSpaceStorageSettingsOutput values.
// You can construct a concrete instance of `UserProfileDefaultSpaceStorageSettingsInput` via:
//
//	UserProfileDefaultSpaceStorageSettingsArgs{...}
type UserProfileDefaultSpaceStorageSettingsInput interface {
	pulumi.Input

	ToUserProfileDefaultSpaceStorageSettingsOutput() UserProfileDefaultSpaceStorageSettingsOutput
	ToUserProfileDefaultSpaceStorageSettingsOutputWithContext(context.Context) UserProfileDefaultSpaceStorageSettingsOutput
}

// Default storage settings for a space.
type UserProfileDefaultSpaceStorageSettingsArgs struct {
	DefaultEbsStorageSettings UserProfileDefaultEbsStorageSettingsPtrInput `pulumi:"defaultEbsStorageSettings"`
}

func (UserProfileDefaultSpaceStorageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileDefaultSpaceStorageSettings)(nil)).Elem()
}

func (i UserProfileDefaultSpaceStorageSettingsArgs) ToUserProfileDefaultSpaceStorageSettingsOutput() UserProfileDefaultSpaceStorageSettingsOutput {
	return i.ToUserProfileDefaultSpaceStorageSettingsOutputWithContext(context.Background())
}

func (i UserProfileDefaultSpaceStorageSettingsArgs) ToUserProfileDefaultSpaceStorageSettingsOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultSpaceStorageSettingsOutput)
}

func (i UserProfileDefaultSpaceStorageSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileDefaultSpaceStorageSettings] {
	return pulumix.Output[UserProfileDefaultSpaceStorageSettings]{
		OutputState: i.ToUserProfileDefaultSpaceStorageSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileDefaultSpaceStorageSettingsArgs) ToUserProfileDefaultSpaceStorageSettingsPtrOutput() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return i.ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileDefaultSpaceStorageSettingsArgs) ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultSpaceStorageSettingsOutput).ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx)
}

// UserProfileDefaultSpaceStorageSettingsPtrInput is an input type that accepts UserProfileDefaultSpaceStorageSettingsArgs, UserProfileDefaultSpaceStorageSettingsPtr and UserProfileDefaultSpaceStorageSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileDefaultSpaceStorageSettingsPtrInput` via:
//
//	        UserProfileDefaultSpaceStorageSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileDefaultSpaceStorageSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileDefaultSpaceStorageSettingsPtrOutput() UserProfileDefaultSpaceStorageSettingsPtrOutput
	ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(context.Context) UserProfileDefaultSpaceStorageSettingsPtrOutput
}

type userProfileDefaultSpaceStorageSettingsPtrType UserProfileDefaultSpaceStorageSettingsArgs

func UserProfileDefaultSpaceStorageSettingsPtr(v *UserProfileDefaultSpaceStorageSettingsArgs) UserProfileDefaultSpaceStorageSettingsPtrInput {
	return (*userProfileDefaultSpaceStorageSettingsPtrType)(v)
}

func (*userProfileDefaultSpaceStorageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileDefaultSpaceStorageSettings)(nil)).Elem()
}

func (i *userProfileDefaultSpaceStorageSettingsPtrType) ToUserProfileDefaultSpaceStorageSettingsPtrOutput() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return i.ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileDefaultSpaceStorageSettingsPtrType) ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileDefaultSpaceStorageSettingsPtrOutput)
}

func (i *userProfileDefaultSpaceStorageSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileDefaultSpaceStorageSettings] {
	return pulumix.Output[*UserProfileDefaultSpaceStorageSettings]{
		OutputState: i.ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Default storage settings for a space.
type UserProfileDefaultSpaceStorageSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileDefaultSpaceStorageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileDefaultSpaceStorageSettings)(nil)).Elem()
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) ToUserProfileDefaultSpaceStorageSettingsOutput() UserProfileDefaultSpaceStorageSettingsOutput {
	return o
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) ToUserProfileDefaultSpaceStorageSettingsOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsOutput {
	return o
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) ToUserProfileDefaultSpaceStorageSettingsPtrOutput() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o.ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileDefaultSpaceStorageSettings) *UserProfileDefaultSpaceStorageSettings {
		return &v
	}).(UserProfileDefaultSpaceStorageSettingsPtrOutput)
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileDefaultSpaceStorageSettings] {
	return pulumix.Output[UserProfileDefaultSpaceStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileDefaultSpaceStorageSettingsOutput) DefaultEbsStorageSettings() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileDefaultSpaceStorageSettings) *UserProfileDefaultEbsStorageSettings {
		return v.DefaultEbsStorageSettings
	}).(UserProfileDefaultEbsStorageSettingsPtrOutput)
}

type UserProfileDefaultSpaceStorageSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileDefaultSpaceStorageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileDefaultSpaceStorageSettings)(nil)).Elem()
}

func (o UserProfileDefaultSpaceStorageSettingsPtrOutput) ToUserProfileDefaultSpaceStorageSettingsPtrOutput() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o
}

func (o UserProfileDefaultSpaceStorageSettingsPtrOutput) ToUserProfileDefaultSpaceStorageSettingsPtrOutputWithContext(ctx context.Context) UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o
}

func (o UserProfileDefaultSpaceStorageSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileDefaultSpaceStorageSettings] {
	return pulumix.Output[*UserProfileDefaultSpaceStorageSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileDefaultSpaceStorageSettingsPtrOutput) Elem() UserProfileDefaultSpaceStorageSettingsOutput {
	return o.ApplyT(func(v *UserProfileDefaultSpaceStorageSettings) UserProfileDefaultSpaceStorageSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileDefaultSpaceStorageSettings
		return ret
	}).(UserProfileDefaultSpaceStorageSettingsOutput)
}

func (o UserProfileDefaultSpaceStorageSettingsPtrOutput) DefaultEbsStorageSettings() UserProfileDefaultEbsStorageSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileDefaultSpaceStorageSettings) *UserProfileDefaultEbsStorageSettings {
		if v == nil {
			return nil
		}
		return v.DefaultEbsStorageSettings
	}).(UserProfileDefaultEbsStorageSettingsPtrOutput)
}

type UserProfileEfsFileSystemConfig struct {
	FileSystemId   string  `pulumi:"fileSystemId"`
	FileSystemPath *string `pulumi:"fileSystemPath"`
}

// UserProfileEfsFileSystemConfigInput is an input type that accepts UserProfileEfsFileSystemConfigArgs and UserProfileEfsFileSystemConfigOutput values.
// You can construct a concrete instance of `UserProfileEfsFileSystemConfigInput` via:
//
//	UserProfileEfsFileSystemConfigArgs{...}
type UserProfileEfsFileSystemConfigInput interface {
	pulumi.Input

	ToUserProfileEfsFileSystemConfigOutput() UserProfileEfsFileSystemConfigOutput
	ToUserProfileEfsFileSystemConfigOutputWithContext(context.Context) UserProfileEfsFileSystemConfigOutput
}

type UserProfileEfsFileSystemConfigArgs struct {
	FileSystemId   pulumi.StringInput    `pulumi:"fileSystemId"`
	FileSystemPath pulumi.StringPtrInput `pulumi:"fileSystemPath"`
}

func (UserProfileEfsFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileEfsFileSystemConfig)(nil)).Elem()
}

func (i UserProfileEfsFileSystemConfigArgs) ToUserProfileEfsFileSystemConfigOutput() UserProfileEfsFileSystemConfigOutput {
	return i.ToUserProfileEfsFileSystemConfigOutputWithContext(context.Background())
}

func (i UserProfileEfsFileSystemConfigArgs) ToUserProfileEfsFileSystemConfigOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileEfsFileSystemConfigOutput)
}

func (i UserProfileEfsFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileEfsFileSystemConfig] {
	return pulumix.Output[UserProfileEfsFileSystemConfig]{
		OutputState: i.ToUserProfileEfsFileSystemConfigOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileEfsFileSystemConfigArgs) ToUserProfileEfsFileSystemConfigPtrOutput() UserProfileEfsFileSystemConfigPtrOutput {
	return i.ToUserProfileEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i UserProfileEfsFileSystemConfigArgs) ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileEfsFileSystemConfigOutput).ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx)
}

// UserProfileEfsFileSystemConfigPtrInput is an input type that accepts UserProfileEfsFileSystemConfigArgs, UserProfileEfsFileSystemConfigPtr and UserProfileEfsFileSystemConfigPtrOutput values.
// You can construct a concrete instance of `UserProfileEfsFileSystemConfigPtrInput` via:
//
//	        UserProfileEfsFileSystemConfigArgs{...}
//
//	or:
//
//	        nil
type UserProfileEfsFileSystemConfigPtrInput interface {
	pulumi.Input

	ToUserProfileEfsFileSystemConfigPtrOutput() UserProfileEfsFileSystemConfigPtrOutput
	ToUserProfileEfsFileSystemConfigPtrOutputWithContext(context.Context) UserProfileEfsFileSystemConfigPtrOutput
}

type userProfileEfsFileSystemConfigPtrType UserProfileEfsFileSystemConfigArgs

func UserProfileEfsFileSystemConfigPtr(v *UserProfileEfsFileSystemConfigArgs) UserProfileEfsFileSystemConfigPtrInput {
	return (*userProfileEfsFileSystemConfigPtrType)(v)
}

func (*userProfileEfsFileSystemConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileEfsFileSystemConfig)(nil)).Elem()
}

func (i *userProfileEfsFileSystemConfigPtrType) ToUserProfileEfsFileSystemConfigPtrOutput() UserProfileEfsFileSystemConfigPtrOutput {
	return i.ToUserProfileEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i *userProfileEfsFileSystemConfigPtrType) ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileEfsFileSystemConfigPtrOutput)
}

func (i *userProfileEfsFileSystemConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileEfsFileSystemConfig] {
	return pulumix.Output[*UserProfileEfsFileSystemConfig]{
		OutputState: i.ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type UserProfileEfsFileSystemConfigOutput struct{ *pulumi.OutputState }

func (UserProfileEfsFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileEfsFileSystemConfig)(nil)).Elem()
}

func (o UserProfileEfsFileSystemConfigOutput) ToUserProfileEfsFileSystemConfigOutput() UserProfileEfsFileSystemConfigOutput {
	return o
}

func (o UserProfileEfsFileSystemConfigOutput) ToUserProfileEfsFileSystemConfigOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigOutput {
	return o
}

func (o UserProfileEfsFileSystemConfigOutput) ToUserProfileEfsFileSystemConfigPtrOutput() UserProfileEfsFileSystemConfigPtrOutput {
	return o.ToUserProfileEfsFileSystemConfigPtrOutputWithContext(context.Background())
}

func (o UserProfileEfsFileSystemConfigOutput) ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileEfsFileSystemConfig) *UserProfileEfsFileSystemConfig {
		return &v
	}).(UserProfileEfsFileSystemConfigPtrOutput)
}

func (o UserProfileEfsFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileEfsFileSystemConfig] {
	return pulumix.Output[UserProfileEfsFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileEfsFileSystemConfigOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileEfsFileSystemConfig) string { return v.FileSystemId }).(pulumi.StringOutput)
}

func (o UserProfileEfsFileSystemConfigOutput) FileSystemPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileEfsFileSystemConfig) *string { return v.FileSystemPath }).(pulumi.StringPtrOutput)
}

type UserProfileEfsFileSystemConfigPtrOutput struct{ *pulumi.OutputState }

func (UserProfileEfsFileSystemConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileEfsFileSystemConfig)(nil)).Elem()
}

func (o UserProfileEfsFileSystemConfigPtrOutput) ToUserProfileEfsFileSystemConfigPtrOutput() UserProfileEfsFileSystemConfigPtrOutput {
	return o
}

func (o UserProfileEfsFileSystemConfigPtrOutput) ToUserProfileEfsFileSystemConfigPtrOutputWithContext(ctx context.Context) UserProfileEfsFileSystemConfigPtrOutput {
	return o
}

func (o UserProfileEfsFileSystemConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileEfsFileSystemConfig] {
	return pulumix.Output[*UserProfileEfsFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileEfsFileSystemConfigPtrOutput) Elem() UserProfileEfsFileSystemConfigOutput {
	return o.ApplyT(func(v *UserProfileEfsFileSystemConfig) UserProfileEfsFileSystemConfig {
		if v != nil {
			return *v
		}
		var ret UserProfileEfsFileSystemConfig
		return ret
	}).(UserProfileEfsFileSystemConfigOutput)
}

func (o UserProfileEfsFileSystemConfigPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileEfsFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

func (o UserProfileEfsFileSystemConfigPtrOutput) FileSystemPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileEfsFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemPath
	}).(pulumi.StringPtrOutput)
}

// The JupyterLab app settings.
type UserProfileJupyterLabAppSettings struct {
	// A list of CodeRepositories available for use with JupyterLab apps.
	CodeRepositories []UserProfileCodeRepository `pulumi:"codeRepositories"`
	// A list of custom images available for use for JupyterLab apps
	CustomImages []UserProfileCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
	DefaultResourceSpec *UserProfileResourceSpec `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with JupyterLab apps.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

// UserProfileJupyterLabAppSettingsInput is an input type that accepts UserProfileJupyterLabAppSettingsArgs and UserProfileJupyterLabAppSettingsOutput values.
// You can construct a concrete instance of `UserProfileJupyterLabAppSettingsInput` via:
//
//	UserProfileJupyterLabAppSettingsArgs{...}
type UserProfileJupyterLabAppSettingsInput interface {
	pulumi.Input

	ToUserProfileJupyterLabAppSettingsOutput() UserProfileJupyterLabAppSettingsOutput
	ToUserProfileJupyterLabAppSettingsOutputWithContext(context.Context) UserProfileJupyterLabAppSettingsOutput
}

// The JupyterLab app settings.
type UserProfileJupyterLabAppSettingsArgs struct {
	// A list of CodeRepositories available for use with JupyterLab apps.
	CodeRepositories UserProfileCodeRepositoryArrayInput `pulumi:"codeRepositories"`
	// A list of custom images available for use for JupyterLab apps
	CustomImages UserProfileCustomImageArrayInput `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
	DefaultResourceSpec UserProfileResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
	// A list of LifecycleConfigArns available for use with JupyterLab apps.
	LifecycleConfigArns pulumi.StringArrayInput `pulumi:"lifecycleConfigArns"`
}

func (UserProfileJupyterLabAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileJupyterLabAppSettings)(nil)).Elem()
}

func (i UserProfileJupyterLabAppSettingsArgs) ToUserProfileJupyterLabAppSettingsOutput() UserProfileJupyterLabAppSettingsOutput {
	return i.ToUserProfileJupyterLabAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileJupyterLabAppSettingsArgs) ToUserProfileJupyterLabAppSettingsOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterLabAppSettingsOutput)
}

func (i UserProfileJupyterLabAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileJupyterLabAppSettings] {
	return pulumix.Output[UserProfileJupyterLabAppSettings]{
		OutputState: i.ToUserProfileJupyterLabAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileJupyterLabAppSettingsArgs) ToUserProfileJupyterLabAppSettingsPtrOutput() UserProfileJupyterLabAppSettingsPtrOutput {
	return i.ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileJupyterLabAppSettingsArgs) ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterLabAppSettingsOutput).ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx)
}

// UserProfileJupyterLabAppSettingsPtrInput is an input type that accepts UserProfileJupyterLabAppSettingsArgs, UserProfileJupyterLabAppSettingsPtr and UserProfileJupyterLabAppSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileJupyterLabAppSettingsPtrInput` via:
//
//	        UserProfileJupyterLabAppSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileJupyterLabAppSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileJupyterLabAppSettingsPtrOutput() UserProfileJupyterLabAppSettingsPtrOutput
	ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(context.Context) UserProfileJupyterLabAppSettingsPtrOutput
}

type userProfileJupyterLabAppSettingsPtrType UserProfileJupyterLabAppSettingsArgs

func UserProfileJupyterLabAppSettingsPtr(v *UserProfileJupyterLabAppSettingsArgs) UserProfileJupyterLabAppSettingsPtrInput {
	return (*userProfileJupyterLabAppSettingsPtrType)(v)
}

func (*userProfileJupyterLabAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileJupyterLabAppSettings)(nil)).Elem()
}

func (i *userProfileJupyterLabAppSettingsPtrType) ToUserProfileJupyterLabAppSettingsPtrOutput() UserProfileJupyterLabAppSettingsPtrOutput {
	return i.ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileJupyterLabAppSettingsPtrType) ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterLabAppSettingsPtrOutput)
}

func (i *userProfileJupyterLabAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileJupyterLabAppSettings] {
	return pulumix.Output[*UserProfileJupyterLabAppSettings]{
		OutputState: i.ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The JupyterLab app settings.
type UserProfileJupyterLabAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileJupyterLabAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileJupyterLabAppSettings)(nil)).Elem()
}

func (o UserProfileJupyterLabAppSettingsOutput) ToUserProfileJupyterLabAppSettingsOutput() UserProfileJupyterLabAppSettingsOutput {
	return o
}

func (o UserProfileJupyterLabAppSettingsOutput) ToUserProfileJupyterLabAppSettingsOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsOutput {
	return o
}

func (o UserProfileJupyterLabAppSettingsOutput) ToUserProfileJupyterLabAppSettingsPtrOutput() UserProfileJupyterLabAppSettingsPtrOutput {
	return o.ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileJupyterLabAppSettingsOutput) ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileJupyterLabAppSettings) *UserProfileJupyterLabAppSettings {
		return &v
	}).(UserProfileJupyterLabAppSettingsPtrOutput)
}

func (o UserProfileJupyterLabAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileJupyterLabAppSettings] {
	return pulumix.Output[UserProfileJupyterLabAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of CodeRepositories available for use with JupyterLab apps.
func (o UserProfileJupyterLabAppSettingsOutput) CodeRepositories() UserProfileCodeRepositoryArrayOutput {
	return o.ApplyT(func(v UserProfileJupyterLabAppSettings) []UserProfileCodeRepository { return v.CodeRepositories }).(UserProfileCodeRepositoryArrayOutput)
}

// A list of custom images available for use for JupyterLab apps
func (o UserProfileJupyterLabAppSettingsOutput) CustomImages() UserProfileCustomImageArrayOutput {
	return o.ApplyT(func(v UserProfileJupyterLabAppSettings) []UserProfileCustomImage { return v.CustomImages }).(UserProfileCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
func (o UserProfileJupyterLabAppSettingsOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v UserProfileJupyterLabAppSettings) *UserProfileResourceSpec { return v.DefaultResourceSpec }).(UserProfileResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with JupyterLab apps.
func (o UserProfileJupyterLabAppSettingsOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserProfileJupyterLabAppSettings) []string { return v.LifecycleConfigArns }).(pulumi.StringArrayOutput)
}

type UserProfileJupyterLabAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileJupyterLabAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileJupyterLabAppSettings)(nil)).Elem()
}

func (o UserProfileJupyterLabAppSettingsPtrOutput) ToUserProfileJupyterLabAppSettingsPtrOutput() UserProfileJupyterLabAppSettingsPtrOutput {
	return o
}

func (o UserProfileJupyterLabAppSettingsPtrOutput) ToUserProfileJupyterLabAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterLabAppSettingsPtrOutput {
	return o
}

func (o UserProfileJupyterLabAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileJupyterLabAppSettings] {
	return pulumix.Output[*UserProfileJupyterLabAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileJupyterLabAppSettingsPtrOutput) Elem() UserProfileJupyterLabAppSettingsOutput {
	return o.ApplyT(func(v *UserProfileJupyterLabAppSettings) UserProfileJupyterLabAppSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileJupyterLabAppSettings
		return ret
	}).(UserProfileJupyterLabAppSettingsOutput)
}

// A list of CodeRepositories available for use with JupyterLab apps.
func (o UserProfileJupyterLabAppSettingsPtrOutput) CodeRepositories() UserProfileCodeRepositoryArrayOutput {
	return o.ApplyT(func(v *UserProfileJupyterLabAppSettings) []UserProfileCodeRepository {
		if v == nil {
			return nil
		}
		return v.CodeRepositories
	}).(UserProfileCodeRepositoryArrayOutput)
}

// A list of custom images available for use for JupyterLab apps
func (o UserProfileJupyterLabAppSettingsPtrOutput) CustomImages() UserProfileCustomImageArrayOutput {
	return o.ApplyT(func(v *UserProfileJupyterLabAppSettings) []UserProfileCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(UserProfileCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
func (o UserProfileJupyterLabAppSettingsPtrOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v *UserProfileJupyterLabAppSettings) *UserProfileResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(UserProfileResourceSpecPtrOutput)
}

// A list of LifecycleConfigArns available for use with JupyterLab apps.
func (o UserProfileJupyterLabAppSettingsPtrOutput) LifecycleConfigArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserProfileJupyterLabAppSettings) []string {
		if v == nil {
			return nil
		}
		return v.LifecycleConfigArns
	}).(pulumi.StringArrayOutput)
}

// The JupyterServer app settings.
type UserProfileJupyterServerAppSettings struct {
	DefaultResourceSpec *UserProfileResourceSpec `pulumi:"defaultResourceSpec"`
}

// UserProfileJupyterServerAppSettingsInput is an input type that accepts UserProfileJupyterServerAppSettingsArgs and UserProfileJupyterServerAppSettingsOutput values.
// You can construct a concrete instance of `UserProfileJupyterServerAppSettingsInput` via:
//
//	UserProfileJupyterServerAppSettingsArgs{...}
type UserProfileJupyterServerAppSettingsInput interface {
	pulumi.Input

	ToUserProfileJupyterServerAppSettingsOutput() UserProfileJupyterServerAppSettingsOutput
	ToUserProfileJupyterServerAppSettingsOutputWithContext(context.Context) UserProfileJupyterServerAppSettingsOutput
}

// The JupyterServer app settings.
type UserProfileJupyterServerAppSettingsArgs struct {
	DefaultResourceSpec UserProfileResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (UserProfileJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileJupyterServerAppSettings)(nil)).Elem()
}

func (i UserProfileJupyterServerAppSettingsArgs) ToUserProfileJupyterServerAppSettingsOutput() UserProfileJupyterServerAppSettingsOutput {
	return i.ToUserProfileJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileJupyterServerAppSettingsArgs) ToUserProfileJupyterServerAppSettingsOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterServerAppSettingsOutput)
}

func (i UserProfileJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileJupyterServerAppSettings] {
	return pulumix.Output[UserProfileJupyterServerAppSettings]{
		OutputState: i.ToUserProfileJupyterServerAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileJupyterServerAppSettingsArgs) ToUserProfileJupyterServerAppSettingsPtrOutput() UserProfileJupyterServerAppSettingsPtrOutput {
	return i.ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileJupyterServerAppSettingsArgs) ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterServerAppSettingsOutput).ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx)
}

// UserProfileJupyterServerAppSettingsPtrInput is an input type that accepts UserProfileJupyterServerAppSettingsArgs, UserProfileJupyterServerAppSettingsPtr and UserProfileJupyterServerAppSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileJupyterServerAppSettingsPtrInput` via:
//
//	        UserProfileJupyterServerAppSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileJupyterServerAppSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileJupyterServerAppSettingsPtrOutput() UserProfileJupyterServerAppSettingsPtrOutput
	ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(context.Context) UserProfileJupyterServerAppSettingsPtrOutput
}

type userProfileJupyterServerAppSettingsPtrType UserProfileJupyterServerAppSettingsArgs

func UserProfileJupyterServerAppSettingsPtr(v *UserProfileJupyterServerAppSettingsArgs) UserProfileJupyterServerAppSettingsPtrInput {
	return (*userProfileJupyterServerAppSettingsPtrType)(v)
}

func (*userProfileJupyterServerAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileJupyterServerAppSettings)(nil)).Elem()
}

func (i *userProfileJupyterServerAppSettingsPtrType) ToUserProfileJupyterServerAppSettingsPtrOutput() UserProfileJupyterServerAppSettingsPtrOutput {
	return i.ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileJupyterServerAppSettingsPtrType) ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileJupyterServerAppSettingsPtrOutput)
}

func (i *userProfileJupyterServerAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileJupyterServerAppSettings] {
	return pulumix.Output[*UserProfileJupyterServerAppSettings]{
		OutputState: i.ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The JupyterServer app settings.
type UserProfileJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileJupyterServerAppSettings)(nil)).Elem()
}

func (o UserProfileJupyterServerAppSettingsOutput) ToUserProfileJupyterServerAppSettingsOutput() UserProfileJupyterServerAppSettingsOutput {
	return o
}

func (o UserProfileJupyterServerAppSettingsOutput) ToUserProfileJupyterServerAppSettingsOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsOutput {
	return o
}

func (o UserProfileJupyterServerAppSettingsOutput) ToUserProfileJupyterServerAppSettingsPtrOutput() UserProfileJupyterServerAppSettingsPtrOutput {
	return o.ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileJupyterServerAppSettingsOutput) ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileJupyterServerAppSettings) *UserProfileJupyterServerAppSettings {
		return &v
	}).(UserProfileJupyterServerAppSettingsPtrOutput)
}

func (o UserProfileJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileJupyterServerAppSettings] {
	return pulumix.Output[UserProfileJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileJupyterServerAppSettingsOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v UserProfileJupyterServerAppSettings) *UserProfileResourceSpec { return v.DefaultResourceSpec }).(UserProfileResourceSpecPtrOutput)
}

type UserProfileJupyterServerAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileJupyterServerAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileJupyterServerAppSettings)(nil)).Elem()
}

func (o UserProfileJupyterServerAppSettingsPtrOutput) ToUserProfileJupyterServerAppSettingsPtrOutput() UserProfileJupyterServerAppSettingsPtrOutput {
	return o
}

func (o UserProfileJupyterServerAppSettingsPtrOutput) ToUserProfileJupyterServerAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileJupyterServerAppSettingsPtrOutput {
	return o
}

func (o UserProfileJupyterServerAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileJupyterServerAppSettings] {
	return pulumix.Output[*UserProfileJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileJupyterServerAppSettingsPtrOutput) Elem() UserProfileJupyterServerAppSettingsOutput {
	return o.ApplyT(func(v *UserProfileJupyterServerAppSettings) UserProfileJupyterServerAppSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileJupyterServerAppSettings
		return ret
	}).(UserProfileJupyterServerAppSettingsOutput)
}

func (o UserProfileJupyterServerAppSettingsPtrOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v *UserProfileJupyterServerAppSettings) *UserProfileResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(UserProfileResourceSpecPtrOutput)
}

// The kernel gateway app settings.
type UserProfileKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages []UserProfileCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec *UserProfileResourceSpec `pulumi:"defaultResourceSpec"`
}

// UserProfileKernelGatewayAppSettingsInput is an input type that accepts UserProfileKernelGatewayAppSettingsArgs and UserProfileKernelGatewayAppSettingsOutput values.
// You can construct a concrete instance of `UserProfileKernelGatewayAppSettingsInput` via:
//
//	UserProfileKernelGatewayAppSettingsArgs{...}
type UserProfileKernelGatewayAppSettingsInput interface {
	pulumi.Input

	ToUserProfileKernelGatewayAppSettingsOutput() UserProfileKernelGatewayAppSettingsOutput
	ToUserProfileKernelGatewayAppSettingsOutputWithContext(context.Context) UserProfileKernelGatewayAppSettingsOutput
}

// The kernel gateway app settings.
type UserProfileKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app.
	CustomImages UserProfileCustomImageArrayInput `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
	DefaultResourceSpec UserProfileResourceSpecPtrInput `pulumi:"defaultResourceSpec"`
}

func (UserProfileKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileKernelGatewayAppSettings)(nil)).Elem()
}

func (i UserProfileKernelGatewayAppSettingsArgs) ToUserProfileKernelGatewayAppSettingsOutput() UserProfileKernelGatewayAppSettingsOutput {
	return i.ToUserProfileKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileKernelGatewayAppSettingsArgs) ToUserProfileKernelGatewayAppSettingsOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileKernelGatewayAppSettingsOutput)
}

func (i UserProfileKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileKernelGatewayAppSettings] {
	return pulumix.Output[UserProfileKernelGatewayAppSettings]{
		OutputState: i.ToUserProfileKernelGatewayAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileKernelGatewayAppSettingsArgs) ToUserProfileKernelGatewayAppSettingsPtrOutput() UserProfileKernelGatewayAppSettingsPtrOutput {
	return i.ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileKernelGatewayAppSettingsArgs) ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileKernelGatewayAppSettingsOutput).ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx)
}

// UserProfileKernelGatewayAppSettingsPtrInput is an input type that accepts UserProfileKernelGatewayAppSettingsArgs, UserProfileKernelGatewayAppSettingsPtr and UserProfileKernelGatewayAppSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileKernelGatewayAppSettingsPtrInput` via:
//
//	        UserProfileKernelGatewayAppSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileKernelGatewayAppSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileKernelGatewayAppSettingsPtrOutput() UserProfileKernelGatewayAppSettingsPtrOutput
	ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(context.Context) UserProfileKernelGatewayAppSettingsPtrOutput
}

type userProfileKernelGatewayAppSettingsPtrType UserProfileKernelGatewayAppSettingsArgs

func UserProfileKernelGatewayAppSettingsPtr(v *UserProfileKernelGatewayAppSettingsArgs) UserProfileKernelGatewayAppSettingsPtrInput {
	return (*userProfileKernelGatewayAppSettingsPtrType)(v)
}

func (*userProfileKernelGatewayAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileKernelGatewayAppSettings)(nil)).Elem()
}

func (i *userProfileKernelGatewayAppSettingsPtrType) ToUserProfileKernelGatewayAppSettingsPtrOutput() UserProfileKernelGatewayAppSettingsPtrOutput {
	return i.ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileKernelGatewayAppSettingsPtrType) ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileKernelGatewayAppSettingsPtrOutput)
}

func (i *userProfileKernelGatewayAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileKernelGatewayAppSettings] {
	return pulumix.Output[*UserProfileKernelGatewayAppSettings]{
		OutputState: i.ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// The kernel gateway app settings.
type UserProfileKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileKernelGatewayAppSettings)(nil)).Elem()
}

func (o UserProfileKernelGatewayAppSettingsOutput) ToUserProfileKernelGatewayAppSettingsOutput() UserProfileKernelGatewayAppSettingsOutput {
	return o
}

func (o UserProfileKernelGatewayAppSettingsOutput) ToUserProfileKernelGatewayAppSettingsOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsOutput {
	return o
}

func (o UserProfileKernelGatewayAppSettingsOutput) ToUserProfileKernelGatewayAppSettingsPtrOutput() UserProfileKernelGatewayAppSettingsPtrOutput {
	return o.ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileKernelGatewayAppSettingsOutput) ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileKernelGatewayAppSettings) *UserProfileKernelGatewayAppSettings {
		return &v
	}).(UserProfileKernelGatewayAppSettingsPtrOutput)
}

func (o UserProfileKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileKernelGatewayAppSettings] {
	return pulumix.Output[UserProfileKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o UserProfileKernelGatewayAppSettingsOutput) CustomImages() UserProfileCustomImageArrayOutput {
	return o.ApplyT(func(v UserProfileKernelGatewayAppSettings) []UserProfileCustomImage { return v.CustomImages }).(UserProfileCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o UserProfileKernelGatewayAppSettingsOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v UserProfileKernelGatewayAppSettings) *UserProfileResourceSpec { return v.DefaultResourceSpec }).(UserProfileResourceSpecPtrOutput)
}

type UserProfileKernelGatewayAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileKernelGatewayAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileKernelGatewayAppSettings)(nil)).Elem()
}

func (o UserProfileKernelGatewayAppSettingsPtrOutput) ToUserProfileKernelGatewayAppSettingsPtrOutput() UserProfileKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o UserProfileKernelGatewayAppSettingsPtrOutput) ToUserProfileKernelGatewayAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileKernelGatewayAppSettingsPtrOutput {
	return o
}

func (o UserProfileKernelGatewayAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileKernelGatewayAppSettings] {
	return pulumix.Output[*UserProfileKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileKernelGatewayAppSettingsPtrOutput) Elem() UserProfileKernelGatewayAppSettingsOutput {
	return o.ApplyT(func(v *UserProfileKernelGatewayAppSettings) UserProfileKernelGatewayAppSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileKernelGatewayAppSettings
		return ret
	}).(UserProfileKernelGatewayAppSettingsOutput)
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app.
func (o UserProfileKernelGatewayAppSettingsPtrOutput) CustomImages() UserProfileCustomImageArrayOutput {
	return o.ApplyT(func(v *UserProfileKernelGatewayAppSettings) []UserProfileCustomImage {
		if v == nil {
			return nil
		}
		return v.CustomImages
	}).(UserProfileCustomImageArrayOutput)
}

// The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
func (o UserProfileKernelGatewayAppSettingsPtrOutput) DefaultResourceSpec() UserProfileResourceSpecPtrOutput {
	return o.ApplyT(func(v *UserProfileKernelGatewayAppSettings) *UserProfileResourceSpec {
		if v == nil {
			return nil
		}
		return v.DefaultResourceSpec
	}).(UserProfileResourceSpecPtrOutput)
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type UserProfileRStudioServerProAppSettings struct {
	// Indicates whether the current user has access to the RStudioServerPro app.
	AccessStatus *UserProfileRStudioServerProAppSettingsAccessStatus `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
	UserGroup *UserProfileRStudioServerProAppSettingsUserGroup `pulumi:"userGroup"`
}

// UserProfileRStudioServerProAppSettingsInput is an input type that accepts UserProfileRStudioServerProAppSettingsArgs and UserProfileRStudioServerProAppSettingsOutput values.
// You can construct a concrete instance of `UserProfileRStudioServerProAppSettingsInput` via:
//
//	UserProfileRStudioServerProAppSettingsArgs{...}
type UserProfileRStudioServerProAppSettingsInput interface {
	pulumi.Input

	ToUserProfileRStudioServerProAppSettingsOutput() UserProfileRStudioServerProAppSettingsOutput
	ToUserProfileRStudioServerProAppSettingsOutputWithContext(context.Context) UserProfileRStudioServerProAppSettingsOutput
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type UserProfileRStudioServerProAppSettingsArgs struct {
	// Indicates whether the current user has access to the RStudioServerPro app.
	AccessStatus UserProfileRStudioServerProAppSettingsAccessStatusPtrInput `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
	UserGroup UserProfileRStudioServerProAppSettingsUserGroupPtrInput `pulumi:"userGroup"`
}

func (UserProfileRStudioServerProAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileRStudioServerProAppSettings)(nil)).Elem()
}

func (i UserProfileRStudioServerProAppSettingsArgs) ToUserProfileRStudioServerProAppSettingsOutput() UserProfileRStudioServerProAppSettingsOutput {
	return i.ToUserProfileRStudioServerProAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileRStudioServerProAppSettingsArgs) ToUserProfileRStudioServerProAppSettingsOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileRStudioServerProAppSettingsOutput)
}

func (i UserProfileRStudioServerProAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileRStudioServerProAppSettings] {
	return pulumix.Output[UserProfileRStudioServerProAppSettings]{
		OutputState: i.ToUserProfileRStudioServerProAppSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileRStudioServerProAppSettingsArgs) ToUserProfileRStudioServerProAppSettingsPtrOutput() UserProfileRStudioServerProAppSettingsPtrOutput {
	return i.ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileRStudioServerProAppSettingsArgs) ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileRStudioServerProAppSettingsOutput).ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx)
}

// UserProfileRStudioServerProAppSettingsPtrInput is an input type that accepts UserProfileRStudioServerProAppSettingsArgs, UserProfileRStudioServerProAppSettingsPtr and UserProfileRStudioServerProAppSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileRStudioServerProAppSettingsPtrInput` via:
//
//	        UserProfileRStudioServerProAppSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileRStudioServerProAppSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileRStudioServerProAppSettingsPtrOutput() UserProfileRStudioServerProAppSettingsPtrOutput
	ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(context.Context) UserProfileRStudioServerProAppSettingsPtrOutput
}

type userProfileRStudioServerProAppSettingsPtrType UserProfileRStudioServerProAppSettingsArgs

func UserProfileRStudioServerProAppSettingsPtr(v *UserProfileRStudioServerProAppSettingsArgs) UserProfileRStudioServerProAppSettingsPtrInput {
	return (*userProfileRStudioServerProAppSettingsPtrType)(v)
}

func (*userProfileRStudioServerProAppSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileRStudioServerProAppSettings)(nil)).Elem()
}

func (i *userProfileRStudioServerProAppSettingsPtrType) ToUserProfileRStudioServerProAppSettingsPtrOutput() UserProfileRStudioServerProAppSettingsPtrOutput {
	return i.ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileRStudioServerProAppSettingsPtrType) ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileRStudioServerProAppSettingsPtrOutput)
}

func (i *userProfileRStudioServerProAppSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileRStudioServerProAppSettings] {
	return pulumix.Output[*UserProfileRStudioServerProAppSettings]{
		OutputState: i.ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that configure user interaction with the RStudioServerPro app.
type UserProfileRStudioServerProAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileRStudioServerProAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileRStudioServerProAppSettings)(nil)).Elem()
}

func (o UserProfileRStudioServerProAppSettingsOutput) ToUserProfileRStudioServerProAppSettingsOutput() UserProfileRStudioServerProAppSettingsOutput {
	return o
}

func (o UserProfileRStudioServerProAppSettingsOutput) ToUserProfileRStudioServerProAppSettingsOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsOutput {
	return o
}

func (o UserProfileRStudioServerProAppSettingsOutput) ToUserProfileRStudioServerProAppSettingsPtrOutput() UserProfileRStudioServerProAppSettingsPtrOutput {
	return o.ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileRStudioServerProAppSettingsOutput) ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileRStudioServerProAppSettings) *UserProfileRStudioServerProAppSettings {
		return &v
	}).(UserProfileRStudioServerProAppSettingsPtrOutput)
}

func (o UserProfileRStudioServerProAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileRStudioServerProAppSettings] {
	return pulumix.Output[UserProfileRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the current user has access to the RStudioServerPro app.
func (o UserProfileRStudioServerProAppSettingsOutput) AccessStatus() UserProfileRStudioServerProAppSettingsAccessStatusPtrOutput {
	return o.ApplyT(func(v UserProfileRStudioServerProAppSettings) *UserProfileRStudioServerProAppSettingsAccessStatus {
		return v.AccessStatus
	}).(UserProfileRStudioServerProAppSettingsAccessStatusPtrOutput)
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
func (o UserProfileRStudioServerProAppSettingsOutput) UserGroup() UserProfileRStudioServerProAppSettingsUserGroupPtrOutput {
	return o.ApplyT(func(v UserProfileRStudioServerProAppSettings) *UserProfileRStudioServerProAppSettingsUserGroup {
		return v.UserGroup
	}).(UserProfileRStudioServerProAppSettingsUserGroupPtrOutput)
}

type UserProfileRStudioServerProAppSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileRStudioServerProAppSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileRStudioServerProAppSettings)(nil)).Elem()
}

func (o UserProfileRStudioServerProAppSettingsPtrOutput) ToUserProfileRStudioServerProAppSettingsPtrOutput() UserProfileRStudioServerProAppSettingsPtrOutput {
	return o
}

func (o UserProfileRStudioServerProAppSettingsPtrOutput) ToUserProfileRStudioServerProAppSettingsPtrOutputWithContext(ctx context.Context) UserProfileRStudioServerProAppSettingsPtrOutput {
	return o
}

func (o UserProfileRStudioServerProAppSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileRStudioServerProAppSettings] {
	return pulumix.Output[*UserProfileRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileRStudioServerProAppSettingsPtrOutput) Elem() UserProfileRStudioServerProAppSettingsOutput {
	return o.ApplyT(func(v *UserProfileRStudioServerProAppSettings) UserProfileRStudioServerProAppSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileRStudioServerProAppSettings
		return ret
	}).(UserProfileRStudioServerProAppSettingsOutput)
}

// Indicates whether the current user has access to the RStudioServerPro app.
func (o UserProfileRStudioServerProAppSettingsPtrOutput) AccessStatus() UserProfileRStudioServerProAppSettingsAccessStatusPtrOutput {
	return o.ApplyT(func(v *UserProfileRStudioServerProAppSettings) *UserProfileRStudioServerProAppSettingsAccessStatus {
		if v == nil {
			return nil
		}
		return v.AccessStatus
	}).(UserProfileRStudioServerProAppSettingsAccessStatusPtrOutput)
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
func (o UserProfileRStudioServerProAppSettingsPtrOutput) UserGroup() UserProfileRStudioServerProAppSettingsUserGroupPtrOutput {
	return o.ApplyT(func(v *UserProfileRStudioServerProAppSettings) *UserProfileRStudioServerProAppSettingsUserGroup {
		if v == nil {
			return nil
		}
		return v.UserGroup
	}).(UserProfileRStudioServerProAppSettingsUserGroupPtrOutput)
}

type UserProfileResourceSpec struct {
	// The instance type that the image version runs on.
	InstanceType *UserProfileResourceSpecInstanceType `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn *string `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn *string `pulumi:"sageMakerImageVersionArn"`
}

// UserProfileResourceSpecInput is an input type that accepts UserProfileResourceSpecArgs and UserProfileResourceSpecOutput values.
// You can construct a concrete instance of `UserProfileResourceSpecInput` via:
//
//	UserProfileResourceSpecArgs{...}
type UserProfileResourceSpecInput interface {
	pulumi.Input

	ToUserProfileResourceSpecOutput() UserProfileResourceSpecOutput
	ToUserProfileResourceSpecOutputWithContext(context.Context) UserProfileResourceSpecOutput
}

type UserProfileResourceSpecArgs struct {
	// The instance type that the image version runs on.
	InstanceType UserProfileResourceSpecInstanceTypePtrInput `pulumi:"instanceType"`
	// The ARN of the SageMaker image that the image version belongs to.
	SageMakerImageArn pulumi.StringPtrInput `pulumi:"sageMakerImageArn"`
	// The ARN of the image version created on the instance.
	SageMakerImageVersionArn pulumi.StringPtrInput `pulumi:"sageMakerImageVersionArn"`
}

func (UserProfileResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileResourceSpec)(nil)).Elem()
}

func (i UserProfileResourceSpecArgs) ToUserProfileResourceSpecOutput() UserProfileResourceSpecOutput {
	return i.ToUserProfileResourceSpecOutputWithContext(context.Background())
}

func (i UserProfileResourceSpecArgs) ToUserProfileResourceSpecOutputWithContext(ctx context.Context) UserProfileResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileResourceSpecOutput)
}

func (i UserProfileResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileResourceSpec] {
	return pulumix.Output[UserProfileResourceSpec]{
		OutputState: i.ToUserProfileResourceSpecOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileResourceSpecArgs) ToUserProfileResourceSpecPtrOutput() UserProfileResourceSpecPtrOutput {
	return i.ToUserProfileResourceSpecPtrOutputWithContext(context.Background())
}

func (i UserProfileResourceSpecArgs) ToUserProfileResourceSpecPtrOutputWithContext(ctx context.Context) UserProfileResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileResourceSpecOutput).ToUserProfileResourceSpecPtrOutputWithContext(ctx)
}

// UserProfileResourceSpecPtrInput is an input type that accepts UserProfileResourceSpecArgs, UserProfileResourceSpecPtr and UserProfileResourceSpecPtrOutput values.
// You can construct a concrete instance of `UserProfileResourceSpecPtrInput` via:
//
//	        UserProfileResourceSpecArgs{...}
//
//	or:
//
//	        nil
type UserProfileResourceSpecPtrInput interface {
	pulumi.Input

	ToUserProfileResourceSpecPtrOutput() UserProfileResourceSpecPtrOutput
	ToUserProfileResourceSpecPtrOutputWithContext(context.Context) UserProfileResourceSpecPtrOutput
}

type userProfileResourceSpecPtrType UserProfileResourceSpecArgs

func UserProfileResourceSpecPtr(v *UserProfileResourceSpecArgs) UserProfileResourceSpecPtrInput {
	return (*userProfileResourceSpecPtrType)(v)
}

func (*userProfileResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileResourceSpec)(nil)).Elem()
}

func (i *userProfileResourceSpecPtrType) ToUserProfileResourceSpecPtrOutput() UserProfileResourceSpecPtrOutput {
	return i.ToUserProfileResourceSpecPtrOutputWithContext(context.Background())
}

func (i *userProfileResourceSpecPtrType) ToUserProfileResourceSpecPtrOutputWithContext(ctx context.Context) UserProfileResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileResourceSpecPtrOutput)
}

func (i *userProfileResourceSpecPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileResourceSpec] {
	return pulumix.Output[*UserProfileResourceSpec]{
		OutputState: i.ToUserProfileResourceSpecPtrOutputWithContext(ctx).OutputState,
	}
}

type UserProfileResourceSpecOutput struct{ *pulumi.OutputState }

func (UserProfileResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileResourceSpec)(nil)).Elem()
}

func (o UserProfileResourceSpecOutput) ToUserProfileResourceSpecOutput() UserProfileResourceSpecOutput {
	return o
}

func (o UserProfileResourceSpecOutput) ToUserProfileResourceSpecOutputWithContext(ctx context.Context) UserProfileResourceSpecOutput {
	return o
}

func (o UserProfileResourceSpecOutput) ToUserProfileResourceSpecPtrOutput() UserProfileResourceSpecPtrOutput {
	return o.ToUserProfileResourceSpecPtrOutputWithContext(context.Background())
}

func (o UserProfileResourceSpecOutput) ToUserProfileResourceSpecPtrOutputWithContext(ctx context.Context) UserProfileResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileResourceSpec) *UserProfileResourceSpec {
		return &v
	}).(UserProfileResourceSpecPtrOutput)
}

func (o UserProfileResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileResourceSpec] {
	return pulumix.Output[UserProfileResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.
func (o UserProfileResourceSpecOutput) InstanceType() UserProfileResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v UserProfileResourceSpec) *UserProfileResourceSpecInstanceType { return v.InstanceType }).(UserProfileResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o UserProfileResourceSpecOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileResourceSpec) *string { return v.SageMakerImageArn }).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o UserProfileResourceSpecOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileResourceSpec) *string { return v.SageMakerImageVersionArn }).(pulumi.StringPtrOutput)
}

type UserProfileResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (UserProfileResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileResourceSpec)(nil)).Elem()
}

func (o UserProfileResourceSpecPtrOutput) ToUserProfileResourceSpecPtrOutput() UserProfileResourceSpecPtrOutput {
	return o
}

func (o UserProfileResourceSpecPtrOutput) ToUserProfileResourceSpecPtrOutputWithContext(ctx context.Context) UserProfileResourceSpecPtrOutput {
	return o
}

func (o UserProfileResourceSpecPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileResourceSpec] {
	return pulumix.Output[*UserProfileResourceSpec]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileResourceSpecPtrOutput) Elem() UserProfileResourceSpecOutput {
	return o.ApplyT(func(v *UserProfileResourceSpec) UserProfileResourceSpec {
		if v != nil {
			return *v
		}
		var ret UserProfileResourceSpec
		return ret
	}).(UserProfileResourceSpecOutput)
}

// The instance type that the image version runs on.
func (o UserProfileResourceSpecPtrOutput) InstanceType() UserProfileResourceSpecInstanceTypePtrOutput {
	return o.ApplyT(func(v *UserProfileResourceSpec) *UserProfileResourceSpecInstanceType {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(UserProfileResourceSpecInstanceTypePtrOutput)
}

// The ARN of the SageMaker image that the image version belongs to.
func (o UserProfileResourceSpecPtrOutput) SageMakerImageArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the image version created on the instance.
func (o UserProfileResourceSpecPtrOutput) SageMakerImageVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SageMakerImageVersionArn
	}).(pulumi.StringPtrOutput)
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type UserProfileSharingSettings struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
	NotebookOutputOption *UserProfileSharingSettingsNotebookOutputOption `pulumi:"notebookOutputOption"`
	// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
	// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
	S3OutputPath *string `pulumi:"s3OutputPath"`
}

// UserProfileSharingSettingsInput is an input type that accepts UserProfileSharingSettingsArgs and UserProfileSharingSettingsOutput values.
// You can construct a concrete instance of `UserProfileSharingSettingsInput` via:
//
//	UserProfileSharingSettingsArgs{...}
type UserProfileSharingSettingsInput interface {
	pulumi.Input

	ToUserProfileSharingSettingsOutput() UserProfileSharingSettingsOutput
	ToUserProfileSharingSettingsOutputWithContext(context.Context) UserProfileSharingSettingsOutput
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type UserProfileSharingSettingsArgs struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
	NotebookOutputOption UserProfileSharingSettingsNotebookOutputOptionPtrInput `pulumi:"notebookOutputOption"`
	// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId pulumi.StringPtrInput `pulumi:"s3KmsKeyId"`
	// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
	S3OutputPath pulumi.StringPtrInput `pulumi:"s3OutputPath"`
}

func (UserProfileSharingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileSharingSettings)(nil)).Elem()
}

func (i UserProfileSharingSettingsArgs) ToUserProfileSharingSettingsOutput() UserProfileSharingSettingsOutput {
	return i.ToUserProfileSharingSettingsOutputWithContext(context.Background())
}

func (i UserProfileSharingSettingsArgs) ToUserProfileSharingSettingsOutputWithContext(ctx context.Context) UserProfileSharingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileSharingSettingsOutput)
}

func (i UserProfileSharingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileSharingSettings] {
	return pulumix.Output[UserProfileSharingSettings]{
		OutputState: i.ToUserProfileSharingSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileSharingSettingsArgs) ToUserProfileSharingSettingsPtrOutput() UserProfileSharingSettingsPtrOutput {
	return i.ToUserProfileSharingSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileSharingSettingsArgs) ToUserProfileSharingSettingsPtrOutputWithContext(ctx context.Context) UserProfileSharingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileSharingSettingsOutput).ToUserProfileSharingSettingsPtrOutputWithContext(ctx)
}

// UserProfileSharingSettingsPtrInput is an input type that accepts UserProfileSharingSettingsArgs, UserProfileSharingSettingsPtr and UserProfileSharingSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileSharingSettingsPtrInput` via:
//
//	        UserProfileSharingSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileSharingSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileSharingSettingsPtrOutput() UserProfileSharingSettingsPtrOutput
	ToUserProfileSharingSettingsPtrOutputWithContext(context.Context) UserProfileSharingSettingsPtrOutput
}

type userProfileSharingSettingsPtrType UserProfileSharingSettingsArgs

func UserProfileSharingSettingsPtr(v *UserProfileSharingSettingsArgs) UserProfileSharingSettingsPtrInput {
	return (*userProfileSharingSettingsPtrType)(v)
}

func (*userProfileSharingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileSharingSettings)(nil)).Elem()
}

func (i *userProfileSharingSettingsPtrType) ToUserProfileSharingSettingsPtrOutput() UserProfileSharingSettingsPtrOutput {
	return i.ToUserProfileSharingSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileSharingSettingsPtrType) ToUserProfileSharingSettingsPtrOutputWithContext(ctx context.Context) UserProfileSharingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileSharingSettingsPtrOutput)
}

func (i *userProfileSharingSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileSharingSettings] {
	return pulumix.Output[*UserProfileSharingSettings]{
		OutputState: i.ToUserProfileSharingSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
type UserProfileSharingSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileSharingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileSharingSettings)(nil)).Elem()
}

func (o UserProfileSharingSettingsOutput) ToUserProfileSharingSettingsOutput() UserProfileSharingSettingsOutput {
	return o
}

func (o UserProfileSharingSettingsOutput) ToUserProfileSharingSettingsOutputWithContext(ctx context.Context) UserProfileSharingSettingsOutput {
	return o
}

func (o UserProfileSharingSettingsOutput) ToUserProfileSharingSettingsPtrOutput() UserProfileSharingSettingsPtrOutput {
	return o.ToUserProfileSharingSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileSharingSettingsOutput) ToUserProfileSharingSettingsPtrOutputWithContext(ctx context.Context) UserProfileSharingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileSharingSettings) *UserProfileSharingSettings {
		return &v
	}).(UserProfileSharingSettingsPtrOutput)
}

func (o UserProfileSharingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileSharingSettings] {
	return pulumix.Output[UserProfileSharingSettings]{
		OutputState: o.OutputState,
	}
}

// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
func (o UserProfileSharingSettingsOutput) NotebookOutputOption() UserProfileSharingSettingsNotebookOutputOptionPtrOutput {
	return o.ApplyT(func(v UserProfileSharingSettings) *UserProfileSharingSettingsNotebookOutputOption {
		return v.NotebookOutputOption
	}).(UserProfileSharingSettingsNotebookOutputOptionPtrOutput)
}

// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o UserProfileSharingSettingsOutput) S3KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileSharingSettings) *string { return v.S3KmsKeyId }).(pulumi.StringPtrOutput)
}

// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
func (o UserProfileSharingSettingsOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileSharingSettings) *string { return v.S3OutputPath }).(pulumi.StringPtrOutput)
}

type UserProfileSharingSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileSharingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileSharingSettings)(nil)).Elem()
}

func (o UserProfileSharingSettingsPtrOutput) ToUserProfileSharingSettingsPtrOutput() UserProfileSharingSettingsPtrOutput {
	return o
}

func (o UserProfileSharingSettingsPtrOutput) ToUserProfileSharingSettingsPtrOutputWithContext(ctx context.Context) UserProfileSharingSettingsPtrOutput {
	return o
}

func (o UserProfileSharingSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileSharingSettings] {
	return pulumix.Output[*UserProfileSharingSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileSharingSettingsPtrOutput) Elem() UserProfileSharingSettingsOutput {
	return o.ApplyT(func(v *UserProfileSharingSettings) UserProfileSharingSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileSharingSettings
		return ret
	}).(UserProfileSharingSettingsOutput)
}

// Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
func (o UserProfileSharingSettingsPtrOutput) NotebookOutputOption() UserProfileSharingSettingsNotebookOutputOptionPtrOutput {
	return o.ApplyT(func(v *UserProfileSharingSettings) *UserProfileSharingSettingsNotebookOutputOption {
		if v == nil {
			return nil
		}
		return v.NotebookOutputOption
	}).(UserProfileSharingSettingsNotebookOutputOptionPtrOutput)
}

// When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o UserProfileSharingSettingsPtrOutput) S3KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileSharingSettings) *string {
		if v == nil {
			return nil
		}
		return v.S3KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
func (o UserProfileSharingSettingsPtrOutput) S3OutputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileSharingSettings) *string {
		if v == nil {
			return nil
		}
		return v.S3OutputPath
	}).(pulumi.StringPtrOutput)
}

type UserProfileTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// UserProfileTagInput is an input type that accepts UserProfileTagArgs and UserProfileTagOutput values.
// You can construct a concrete instance of `UserProfileTagInput` via:
//
//	UserProfileTagArgs{...}
type UserProfileTagInput interface {
	pulumi.Input

	ToUserProfileTagOutput() UserProfileTagOutput
	ToUserProfileTagOutputWithContext(context.Context) UserProfileTagOutput
}

type UserProfileTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (UserProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileTag)(nil)).Elem()
}

func (i UserProfileTagArgs) ToUserProfileTagOutput() UserProfileTagOutput {
	return i.ToUserProfileTagOutputWithContext(context.Background())
}

func (i UserProfileTagArgs) ToUserProfileTagOutputWithContext(ctx context.Context) UserProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileTagOutput)
}

func (i UserProfileTagArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileTag] {
	return pulumix.Output[UserProfileTag]{
		OutputState: i.ToUserProfileTagOutputWithContext(ctx).OutputState,
	}
}

// UserProfileTagArrayInput is an input type that accepts UserProfileTagArray and UserProfileTagArrayOutput values.
// You can construct a concrete instance of `UserProfileTagArrayInput` via:
//
//	UserProfileTagArray{ UserProfileTagArgs{...} }
type UserProfileTagArrayInput interface {
	pulumi.Input

	ToUserProfileTagArrayOutput() UserProfileTagArrayOutput
	ToUserProfileTagArrayOutputWithContext(context.Context) UserProfileTagArrayOutput
}

type UserProfileTagArray []UserProfileTagInput

func (UserProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileTag)(nil)).Elem()
}

func (i UserProfileTagArray) ToUserProfileTagArrayOutput() UserProfileTagArrayOutput {
	return i.ToUserProfileTagArrayOutputWithContext(context.Background())
}

func (i UserProfileTagArray) ToUserProfileTagArrayOutputWithContext(ctx context.Context) UserProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileTagArrayOutput)
}

func (i UserProfileTagArray) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileTag] {
	return pulumix.Output[[]UserProfileTag]{
		OutputState: i.ToUserProfileTagArrayOutputWithContext(ctx).OutputState,
	}
}

type UserProfileTagOutput struct{ *pulumi.OutputState }

func (UserProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileTag)(nil)).Elem()
}

func (o UserProfileTagOutput) ToUserProfileTagOutput() UserProfileTagOutput {
	return o
}

func (o UserProfileTagOutput) ToUserProfileTagOutputWithContext(ctx context.Context) UserProfileTagOutput {
	return o
}

func (o UserProfileTagOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileTag] {
	return pulumix.Output[UserProfileTag]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o UserProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type UserProfileTagArrayOutput struct{ *pulumi.OutputState }

func (UserProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProfileTag)(nil)).Elem()
}

func (o UserProfileTagArrayOutput) ToUserProfileTagArrayOutput() UserProfileTagArrayOutput {
	return o
}

func (o UserProfileTagArrayOutput) ToUserProfileTagArrayOutputWithContext(ctx context.Context) UserProfileTagArrayOutput {
	return o
}

func (o UserProfileTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserProfileTag] {
	return pulumix.Output[[]UserProfileTag]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileTagArrayOutput) Index(i pulumi.IntInput) UserProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserProfileTag {
		return vs[0].([]UserProfileTag)[vs[1].(int)]
	}).(UserProfileTagOutput)
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type UserProfileUserSettings struct {
	CodeEditorAppSettings   *UserProfileCodeEditorAppSettings   `pulumi:"codeEditorAppSettings"`
	CustomFileSystemConfigs []UserProfileCustomFileSystemConfig `pulumi:"customFileSystemConfigs"`
	CustomPosixUserConfig   *UserProfileCustomPosixUserConfig   `pulumi:"customPosixUserConfig"`
	// Defines which Amazon SageMaker application users are directed to by default.
	DefaultLandingUri *string `pulumi:"defaultLandingUri"`
	// The user profile Amazon Resource Name (ARN).
	ExecutionRole         *string                           `pulumi:"executionRole"`
	JupyterLabAppSettings *UserProfileJupyterLabAppSettings `pulumi:"jupyterLabAppSettings"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings *UserProfileJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings    *UserProfileKernelGatewayAppSettings    `pulumi:"kernelGatewayAppSettings"`
	RStudioServerProAppSettings *UserProfileRStudioServerProAppSettings `pulumi:"rStudioServerProAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The sharing settings.
	SharingSettings      *UserProfileSharingSettings             `pulumi:"sharingSettings"`
	SpaceStorageSettings *UserProfileDefaultSpaceStorageSettings `pulumi:"spaceStorageSettings"`
	// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
	StudioWebPortal *UserProfileUserSettingsStudioWebPortal `pulumi:"studioWebPortal"`
}

// UserProfileUserSettingsInput is an input type that accepts UserProfileUserSettingsArgs and UserProfileUserSettingsOutput values.
// You can construct a concrete instance of `UserProfileUserSettingsInput` via:
//
//	UserProfileUserSettingsArgs{...}
type UserProfileUserSettingsInput interface {
	pulumi.Input

	ToUserProfileUserSettingsOutput() UserProfileUserSettingsOutput
	ToUserProfileUserSettingsOutputWithContext(context.Context) UserProfileUserSettingsOutput
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type UserProfileUserSettingsArgs struct {
	CodeEditorAppSettings   UserProfileCodeEditorAppSettingsPtrInput    `pulumi:"codeEditorAppSettings"`
	CustomFileSystemConfigs UserProfileCustomFileSystemConfigArrayInput `pulumi:"customFileSystemConfigs"`
	CustomPosixUserConfig   UserProfileCustomPosixUserConfigPtrInput    `pulumi:"customPosixUserConfig"`
	// Defines which Amazon SageMaker application users are directed to by default.
	DefaultLandingUri pulumi.StringPtrInput `pulumi:"defaultLandingUri"`
	// The user profile Amazon Resource Name (ARN).
	ExecutionRole         pulumi.StringPtrInput                    `pulumi:"executionRole"`
	JupyterLabAppSettings UserProfileJupyterLabAppSettingsPtrInput `pulumi:"jupyterLabAppSettings"`
	// The Jupyter server's app settings.
	JupyterServerAppSettings UserProfileJupyterServerAppSettingsPtrInput `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings.
	KernelGatewayAppSettings    UserProfileKernelGatewayAppSettingsPtrInput    `pulumi:"kernelGatewayAppSettings"`
	RStudioServerProAppSettings UserProfileRStudioServerProAppSettingsPtrInput `pulumi:"rStudioServerProAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The sharing settings.
	SharingSettings      UserProfileSharingSettingsPtrInput             `pulumi:"sharingSettings"`
	SpaceStorageSettings UserProfileDefaultSpaceStorageSettingsPtrInput `pulumi:"spaceStorageSettings"`
	// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
	StudioWebPortal UserProfileUserSettingsStudioWebPortalPtrInput `pulumi:"studioWebPortal"`
}

func (UserProfileUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsOutput() UserProfileUserSettingsOutput {
	return i.ToUserProfileUserSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsOutput)
}

func (i UserProfileUserSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettings] {
	return pulumix.Output[UserProfileUserSettings]{
		OutputState: i.ToUserProfileUserSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsPtrOutput() UserProfileUserSettingsPtrOutput {
	return i.ToUserProfileUserSettingsPtrOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsPtrOutputWithContext(ctx context.Context) UserProfileUserSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsOutput).ToUserProfileUserSettingsPtrOutputWithContext(ctx)
}

// UserProfileUserSettingsPtrInput is an input type that accepts UserProfileUserSettingsArgs, UserProfileUserSettingsPtr and UserProfileUserSettingsPtrOutput values.
// You can construct a concrete instance of `UserProfileUserSettingsPtrInput` via:
//
//	        UserProfileUserSettingsArgs{...}
//
//	or:
//
//	        nil
type UserProfileUserSettingsPtrInput interface {
	pulumi.Input

	ToUserProfileUserSettingsPtrOutput() UserProfileUserSettingsPtrOutput
	ToUserProfileUserSettingsPtrOutputWithContext(context.Context) UserProfileUserSettingsPtrOutput
}

type userProfileUserSettingsPtrType UserProfileUserSettingsArgs

func UserProfileUserSettingsPtr(v *UserProfileUserSettingsArgs) UserProfileUserSettingsPtrInput {
	return (*userProfileUserSettingsPtrType)(v)
}

func (*userProfileUserSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileUserSettings)(nil)).Elem()
}

func (i *userProfileUserSettingsPtrType) ToUserProfileUserSettingsPtrOutput() UserProfileUserSettingsPtrOutput {
	return i.ToUserProfileUserSettingsPtrOutputWithContext(context.Background())
}

func (i *userProfileUserSettingsPtrType) ToUserProfileUserSettingsPtrOutputWithContext(ctx context.Context) UserProfileUserSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsPtrOutput)
}

func (i *userProfileUserSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettings] {
	return pulumix.Output[*UserProfileUserSettings]{
		OutputState: i.ToUserProfileUserSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
type UserProfileUserSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsOutput() UserProfileUserSettingsOutput {
	return o
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsOutput {
	return o
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsPtrOutput() UserProfileUserSettingsPtrOutput {
	return o.ToUserProfileUserSettingsPtrOutputWithContext(context.Background())
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsPtrOutputWithContext(ctx context.Context) UserProfileUserSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserProfileUserSettings) *UserProfileUserSettings {
		return &v
	}).(UserProfileUserSettingsPtrOutput)
}

func (o UserProfileUserSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettings] {
	return pulumix.Output[UserProfileUserSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileUserSettingsOutput) CodeEditorAppSettings() UserProfileCodeEditorAppSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileCodeEditorAppSettings { return v.CodeEditorAppSettings }).(UserProfileCodeEditorAppSettingsPtrOutput)
}

func (o UserProfileUserSettingsOutput) CustomFileSystemConfigs() UserProfileCustomFileSystemConfigArrayOutput {
	return o.ApplyT(func(v UserProfileUserSettings) []UserProfileCustomFileSystemConfig { return v.CustomFileSystemConfigs }).(UserProfileCustomFileSystemConfigArrayOutput)
}

func (o UserProfileUserSettingsOutput) CustomPosixUserConfig() UserProfileCustomPosixUserConfigPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileCustomPosixUserConfig { return v.CustomPosixUserConfig }).(UserProfileCustomPosixUserConfigPtrOutput)
}

// Defines which Amazon SageMaker application users are directed to by default.
func (o UserProfileUserSettingsOutput) DefaultLandingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *string { return v.DefaultLandingUri }).(pulumi.StringPtrOutput)
}

// The user profile Amazon Resource Name (ARN).
func (o UserProfileUserSettingsOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *string { return v.ExecutionRole }).(pulumi.StringPtrOutput)
}

func (o UserProfileUserSettingsOutput) JupyterLabAppSettings() UserProfileJupyterLabAppSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileJupyterLabAppSettings { return v.JupyterLabAppSettings }).(UserProfileJupyterLabAppSettingsPtrOutput)
}

// The Jupyter server's app settings.
func (o UserProfileUserSettingsOutput) JupyterServerAppSettings() UserProfileJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileJupyterServerAppSettings {
		return v.JupyterServerAppSettings
	}).(UserProfileJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o UserProfileUserSettingsOutput) KernelGatewayAppSettings() UserProfileKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileKernelGatewayAppSettings {
		return v.KernelGatewayAppSettings
	}).(UserProfileKernelGatewayAppSettingsPtrOutput)
}

func (o UserProfileUserSettingsOutput) RStudioServerProAppSettings() UserProfileRStudioServerProAppSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileRStudioServerProAppSettings {
		return v.RStudioServerProAppSettings
	}).(UserProfileRStudioServerProAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o UserProfileUserSettingsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserProfileUserSettings) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The sharing settings.
func (o UserProfileUserSettingsOutput) SharingSettings() UserProfileSharingSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileSharingSettings { return v.SharingSettings }).(UserProfileSharingSettingsPtrOutput)
}

func (o UserProfileUserSettingsOutput) SpaceStorageSettings() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileDefaultSpaceStorageSettings { return v.SpaceStorageSettings }).(UserProfileDefaultSpaceStorageSettingsPtrOutput)
}

// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
func (o UserProfileUserSettingsOutput) StudioWebPortal() UserProfileUserSettingsStudioWebPortalPtrOutput {
	return o.ApplyT(func(v UserProfileUserSettings) *UserProfileUserSettingsStudioWebPortal { return v.StudioWebPortal }).(UserProfileUserSettingsStudioWebPortalPtrOutput)
}

type UserProfileUserSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserProfileUserSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsPtrOutput) ToUserProfileUserSettingsPtrOutput() UserProfileUserSettingsPtrOutput {
	return o
}

func (o UserProfileUserSettingsPtrOutput) ToUserProfileUserSettingsPtrOutputWithContext(ctx context.Context) UserProfileUserSettingsPtrOutput {
	return o
}

func (o UserProfileUserSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettings] {
	return pulumix.Output[*UserProfileUserSettings]{
		OutputState: o.OutputState,
	}
}

func (o UserProfileUserSettingsPtrOutput) Elem() UserProfileUserSettingsOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) UserProfileUserSettings {
		if v != nil {
			return *v
		}
		var ret UserProfileUserSettings
		return ret
	}).(UserProfileUserSettingsOutput)
}

func (o UserProfileUserSettingsPtrOutput) CodeEditorAppSettings() UserProfileCodeEditorAppSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileCodeEditorAppSettings {
		if v == nil {
			return nil
		}
		return v.CodeEditorAppSettings
	}).(UserProfileCodeEditorAppSettingsPtrOutput)
}

func (o UserProfileUserSettingsPtrOutput) CustomFileSystemConfigs() UserProfileCustomFileSystemConfigArrayOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) []UserProfileCustomFileSystemConfig {
		if v == nil {
			return nil
		}
		return v.CustomFileSystemConfigs
	}).(UserProfileCustomFileSystemConfigArrayOutput)
}

func (o UserProfileUserSettingsPtrOutput) CustomPosixUserConfig() UserProfileCustomPosixUserConfigPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileCustomPosixUserConfig {
		if v == nil {
			return nil
		}
		return v.CustomPosixUserConfig
	}).(UserProfileCustomPosixUserConfigPtrOutput)
}

// Defines which Amazon SageMaker application users are directed to by default.
func (o UserProfileUserSettingsPtrOutput) DefaultLandingUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLandingUri
	}).(pulumi.StringPtrOutput)
}

// The user profile Amazon Resource Name (ARN).
func (o UserProfileUserSettingsPtrOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionRole
	}).(pulumi.StringPtrOutput)
}

func (o UserProfileUserSettingsPtrOutput) JupyterLabAppSettings() UserProfileJupyterLabAppSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileJupyterLabAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterLabAppSettings
	}).(UserProfileJupyterLabAppSettingsPtrOutput)
}

// The Jupyter server's app settings.
func (o UserProfileUserSettingsPtrOutput) JupyterServerAppSettings() UserProfileJupyterServerAppSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileJupyterServerAppSettings {
		if v == nil {
			return nil
		}
		return v.JupyterServerAppSettings
	}).(UserProfileJupyterServerAppSettingsPtrOutput)
}

// The kernel gateway app settings.
func (o UserProfileUserSettingsPtrOutput) KernelGatewayAppSettings() UserProfileKernelGatewayAppSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileKernelGatewayAppSettings {
		if v == nil {
			return nil
		}
		return v.KernelGatewayAppSettings
	}).(UserProfileKernelGatewayAppSettingsPtrOutput)
}

func (o UserProfileUserSettingsPtrOutput) RStudioServerProAppSettings() UserProfileRStudioServerProAppSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileRStudioServerProAppSettings {
		if v == nil {
			return nil
		}
		return v.RStudioServerProAppSettings
	}).(UserProfileRStudioServerProAppSettingsPtrOutput)
}

// The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
func (o UserProfileUserSettingsPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The sharing settings.
func (o UserProfileUserSettingsPtrOutput) SharingSettings() UserProfileSharingSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileSharingSettings {
		if v == nil {
			return nil
		}
		return v.SharingSettings
	}).(UserProfileSharingSettingsPtrOutput)
}

func (o UserProfileUserSettingsPtrOutput) SpaceStorageSettings() UserProfileDefaultSpaceStorageSettingsPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileDefaultSpaceStorageSettings {
		if v == nil {
			return nil
		}
		return v.SpaceStorageSettings
	}).(UserProfileDefaultSpaceStorageSettingsPtrOutput)
}

// Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
func (o UserProfileUserSettingsPtrOutput) StudioWebPortal() UserProfileUserSettingsStudioWebPortalPtrOutput {
	return o.ApplyT(func(v *UserProfileUserSettings) *UserProfileUserSettingsStudioWebPortal {
		if v == nil {
			return nil
		}
		return v.StudioWebPortal
	}).(UserProfileUserSettingsStudioWebPortalPtrOutput)
}

type WorkteamCognitoMemberDefinition struct {
	CognitoClientId  string `pulumi:"cognitoClientId"`
	CognitoUserGroup string `pulumi:"cognitoUserGroup"`
	CognitoUserPool  string `pulumi:"cognitoUserPool"`
}

// WorkteamCognitoMemberDefinitionInput is an input type that accepts WorkteamCognitoMemberDefinitionArgs and WorkteamCognitoMemberDefinitionOutput values.
// You can construct a concrete instance of `WorkteamCognitoMemberDefinitionInput` via:
//
//	WorkteamCognitoMemberDefinitionArgs{...}
type WorkteamCognitoMemberDefinitionInput interface {
	pulumi.Input

	ToWorkteamCognitoMemberDefinitionOutput() WorkteamCognitoMemberDefinitionOutput
	ToWorkteamCognitoMemberDefinitionOutputWithContext(context.Context) WorkteamCognitoMemberDefinitionOutput
}

type WorkteamCognitoMemberDefinitionArgs struct {
	CognitoClientId  pulumi.StringInput `pulumi:"cognitoClientId"`
	CognitoUserGroup pulumi.StringInput `pulumi:"cognitoUserGroup"`
	CognitoUserPool  pulumi.StringInput `pulumi:"cognitoUserPool"`
}

func (WorkteamCognitoMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamCognitoMemberDefinition)(nil)).Elem()
}

func (i WorkteamCognitoMemberDefinitionArgs) ToWorkteamCognitoMemberDefinitionOutput() WorkteamCognitoMemberDefinitionOutput {
	return i.ToWorkteamCognitoMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamCognitoMemberDefinitionArgs) ToWorkteamCognitoMemberDefinitionOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamCognitoMemberDefinitionOutput)
}

func (i WorkteamCognitoMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkteamCognitoMemberDefinition] {
	return pulumix.Output[WorkteamCognitoMemberDefinition]{
		OutputState: i.ToWorkteamCognitoMemberDefinitionOutputWithContext(ctx).OutputState,
	}
}

func (i WorkteamCognitoMemberDefinitionArgs) ToWorkteamCognitoMemberDefinitionPtrOutput() WorkteamCognitoMemberDefinitionPtrOutput {
	return i.ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(context.Background())
}

func (i WorkteamCognitoMemberDefinitionArgs) ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamCognitoMemberDefinitionOutput).ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx)
}

// WorkteamCognitoMemberDefinitionPtrInput is an input type that accepts WorkteamCognitoMemberDefinitionArgs, WorkteamCognitoMemberDefinitionPtr and WorkteamCognitoMemberDefinitionPtrOutput values.
// You can construct a concrete instance of `WorkteamCognitoMemberDefinitionPtrInput` via:
//
//	        WorkteamCognitoMemberDefinitionArgs{...}
//
//	or:
//
//	        nil
type WorkteamCognitoMemberDefinitionPtrInput interface {
	pulumi.Input

	ToWorkteamCognitoMemberDefinitionPtrOutput() WorkteamCognitoMemberDefinitionPtrOutput
	ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(context.Context) WorkteamCognitoMemberDefinitionPtrOutput
}

type workteamCognitoMemberDefinitionPtrType WorkteamCognitoMemberDefinitionArgs

func WorkteamCognitoMemberDefinitionPtr(v *WorkteamCognitoMemberDefinitionArgs) WorkteamCognitoMemberDefinitionPtrInput {
	return (*workteamCognitoMemberDefinitionPtrType)(v)
}

func (*workteamCognitoMemberDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamCognitoMemberDefinition)(nil)).Elem()
}

func (i *workteamCognitoMemberDefinitionPtrType) ToWorkteamCognitoMemberDefinitionPtrOutput() WorkteamCognitoMemberDefinitionPtrOutput {
	return i.ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(context.Background())
}

func (i *workteamCognitoMemberDefinitionPtrType) ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamCognitoMemberDefinitionPtrOutput)
}

func (i *workteamCognitoMemberDefinitionPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkteamCognitoMemberDefinition] {
	return pulumix.Output[*WorkteamCognitoMemberDefinition]{
		OutputState: i.ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkteamCognitoMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamCognitoMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamCognitoMemberDefinition)(nil)).Elem()
}

func (o WorkteamCognitoMemberDefinitionOutput) ToWorkteamCognitoMemberDefinitionOutput() WorkteamCognitoMemberDefinitionOutput {
	return o
}

func (o WorkteamCognitoMemberDefinitionOutput) ToWorkteamCognitoMemberDefinitionOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionOutput {
	return o
}

func (o WorkteamCognitoMemberDefinitionOutput) ToWorkteamCognitoMemberDefinitionPtrOutput() WorkteamCognitoMemberDefinitionPtrOutput {
	return o.ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(context.Background())
}

func (o WorkteamCognitoMemberDefinitionOutput) ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkteamCognitoMemberDefinition) *WorkteamCognitoMemberDefinition {
		return &v
	}).(WorkteamCognitoMemberDefinitionPtrOutput)
}

func (o WorkteamCognitoMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamCognitoMemberDefinition] {
	return pulumix.Output[WorkteamCognitoMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamCognitoMemberDefinitionOutput) CognitoClientId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamCognitoMemberDefinition) string { return v.CognitoClientId }).(pulumi.StringOutput)
}

func (o WorkteamCognitoMemberDefinitionOutput) CognitoUserGroup() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamCognitoMemberDefinition) string { return v.CognitoUserGroup }).(pulumi.StringOutput)
}

func (o WorkteamCognitoMemberDefinitionOutput) CognitoUserPool() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamCognitoMemberDefinition) string { return v.CognitoUserPool }).(pulumi.StringOutput)
}

type WorkteamCognitoMemberDefinitionPtrOutput struct{ *pulumi.OutputState }

func (WorkteamCognitoMemberDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamCognitoMemberDefinition)(nil)).Elem()
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) ToWorkteamCognitoMemberDefinitionPtrOutput() WorkteamCognitoMemberDefinitionPtrOutput {
	return o
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) ToWorkteamCognitoMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamCognitoMemberDefinitionPtrOutput {
	return o
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkteamCognitoMemberDefinition] {
	return pulumix.Output[*WorkteamCognitoMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) Elem() WorkteamCognitoMemberDefinitionOutput {
	return o.ApplyT(func(v *WorkteamCognitoMemberDefinition) WorkteamCognitoMemberDefinition {
		if v != nil {
			return *v
		}
		var ret WorkteamCognitoMemberDefinition
		return ret
	}).(WorkteamCognitoMemberDefinitionOutput)
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) CognitoClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkteamCognitoMemberDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.CognitoClientId
	}).(pulumi.StringPtrOutput)
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) CognitoUserGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkteamCognitoMemberDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.CognitoUserGroup
	}).(pulumi.StringPtrOutput)
}

func (o WorkteamCognitoMemberDefinitionPtrOutput) CognitoUserPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkteamCognitoMemberDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.CognitoUserPool
	}).(pulumi.StringPtrOutput)
}

type WorkteamMemberDefinition struct {
	CognitoMemberDefinition *WorkteamCognitoMemberDefinition `pulumi:"cognitoMemberDefinition"`
	OidcMemberDefinition    *WorkteamOidcMemberDefinition    `pulumi:"oidcMemberDefinition"`
}

// WorkteamMemberDefinitionInput is an input type that accepts WorkteamMemberDefinitionArgs and WorkteamMemberDefinitionOutput values.
// You can construct a concrete instance of `WorkteamMemberDefinitionInput` via:
//
//	WorkteamMemberDefinitionArgs{...}
type WorkteamMemberDefinitionInput interface {
	pulumi.Input

	ToWorkteamMemberDefinitionOutput() WorkteamMemberDefinitionOutput
	ToWorkteamMemberDefinitionOutputWithContext(context.Context) WorkteamMemberDefinitionOutput
}

type WorkteamMemberDefinitionArgs struct {
	CognitoMemberDefinition WorkteamCognitoMemberDefinitionPtrInput `pulumi:"cognitoMemberDefinition"`
	OidcMemberDefinition    WorkteamOidcMemberDefinitionPtrInput    `pulumi:"oidcMemberDefinition"`
}

func (WorkteamMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinition)(nil)).Elem()
}

func (i WorkteamMemberDefinitionArgs) ToWorkteamMemberDefinitionOutput() WorkteamMemberDefinitionOutput {
	return i.ToWorkteamMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamMemberDefinitionArgs) ToWorkteamMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamMemberDefinitionOutput)
}

func (i WorkteamMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkteamMemberDefinition] {
	return pulumix.Output[WorkteamMemberDefinition]{
		OutputState: i.ToWorkteamMemberDefinitionOutputWithContext(ctx).OutputState,
	}
}

// WorkteamMemberDefinitionArrayInput is an input type that accepts WorkteamMemberDefinitionArray and WorkteamMemberDefinitionArrayOutput values.
// You can construct a concrete instance of `WorkteamMemberDefinitionArrayInput` via:
//
//	WorkteamMemberDefinitionArray{ WorkteamMemberDefinitionArgs{...} }
type WorkteamMemberDefinitionArrayInput interface {
	pulumi.Input

	ToWorkteamMemberDefinitionArrayOutput() WorkteamMemberDefinitionArrayOutput
	ToWorkteamMemberDefinitionArrayOutputWithContext(context.Context) WorkteamMemberDefinitionArrayOutput
}

type WorkteamMemberDefinitionArray []WorkteamMemberDefinitionInput

func (WorkteamMemberDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkteamMemberDefinition)(nil)).Elem()
}

func (i WorkteamMemberDefinitionArray) ToWorkteamMemberDefinitionArrayOutput() WorkteamMemberDefinitionArrayOutput {
	return i.ToWorkteamMemberDefinitionArrayOutputWithContext(context.Background())
}

func (i WorkteamMemberDefinitionArray) ToWorkteamMemberDefinitionArrayOutputWithContext(ctx context.Context) WorkteamMemberDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamMemberDefinitionArrayOutput)
}

func (i WorkteamMemberDefinitionArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkteamMemberDefinition] {
	return pulumix.Output[[]WorkteamMemberDefinition]{
		OutputState: i.ToWorkteamMemberDefinitionArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkteamMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinition)(nil)).Elem()
}

func (o WorkteamMemberDefinitionOutput) ToWorkteamMemberDefinitionOutput() WorkteamMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOutput) ToWorkteamMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamMemberDefinition] {
	return pulumix.Output[WorkteamMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamMemberDefinitionOutput) CognitoMemberDefinition() WorkteamCognitoMemberDefinitionPtrOutput {
	return o.ApplyT(func(v WorkteamMemberDefinition) *WorkteamCognitoMemberDefinition { return v.CognitoMemberDefinition }).(WorkteamCognitoMemberDefinitionPtrOutput)
}

func (o WorkteamMemberDefinitionOutput) OidcMemberDefinition() WorkteamOidcMemberDefinitionPtrOutput {
	return o.ApplyT(func(v WorkteamMemberDefinition) *WorkteamOidcMemberDefinition { return v.OidcMemberDefinition }).(WorkteamOidcMemberDefinitionPtrOutput)
}

type WorkteamMemberDefinitionArrayOutput struct{ *pulumi.OutputState }

func (WorkteamMemberDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkteamMemberDefinition)(nil)).Elem()
}

func (o WorkteamMemberDefinitionArrayOutput) ToWorkteamMemberDefinitionArrayOutput() WorkteamMemberDefinitionArrayOutput {
	return o
}

func (o WorkteamMemberDefinitionArrayOutput) ToWorkteamMemberDefinitionArrayOutputWithContext(ctx context.Context) WorkteamMemberDefinitionArrayOutput {
	return o
}

func (o WorkteamMemberDefinitionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkteamMemberDefinition] {
	return pulumix.Output[[]WorkteamMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamMemberDefinitionArrayOutput) Index(i pulumi.IntInput) WorkteamMemberDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkteamMemberDefinition {
		return vs[0].([]WorkteamMemberDefinition)[vs[1].(int)]
	}).(WorkteamMemberDefinitionOutput)
}

type WorkteamNotificationConfiguration struct {
	NotificationTopicArn string `pulumi:"notificationTopicArn"`
}

// WorkteamNotificationConfigurationInput is an input type that accepts WorkteamNotificationConfigurationArgs and WorkteamNotificationConfigurationOutput values.
// You can construct a concrete instance of `WorkteamNotificationConfigurationInput` via:
//
//	WorkteamNotificationConfigurationArgs{...}
type WorkteamNotificationConfigurationInput interface {
	pulumi.Input

	ToWorkteamNotificationConfigurationOutput() WorkteamNotificationConfigurationOutput
	ToWorkteamNotificationConfigurationOutputWithContext(context.Context) WorkteamNotificationConfigurationOutput
}

type WorkteamNotificationConfigurationArgs struct {
	NotificationTopicArn pulumi.StringInput `pulumi:"notificationTopicArn"`
}

func (WorkteamNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamNotificationConfiguration)(nil)).Elem()
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationOutput() WorkteamNotificationConfigurationOutput {
	return i.ToWorkteamNotificationConfigurationOutputWithContext(context.Background())
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamNotificationConfigurationOutput)
}

func (i WorkteamNotificationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[WorkteamNotificationConfiguration] {
	return pulumix.Output[WorkteamNotificationConfiguration]{
		OutputState: i.ToWorkteamNotificationConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationPtrOutput() WorkteamNotificationConfigurationPtrOutput {
	return i.ToWorkteamNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamNotificationConfigurationOutput).ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx)
}

// WorkteamNotificationConfigurationPtrInput is an input type that accepts WorkteamNotificationConfigurationArgs, WorkteamNotificationConfigurationPtr and WorkteamNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkteamNotificationConfigurationPtrInput` via:
//
//	        WorkteamNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkteamNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToWorkteamNotificationConfigurationPtrOutput() WorkteamNotificationConfigurationPtrOutput
	ToWorkteamNotificationConfigurationPtrOutputWithContext(context.Context) WorkteamNotificationConfigurationPtrOutput
}

type workteamNotificationConfigurationPtrType WorkteamNotificationConfigurationArgs

func WorkteamNotificationConfigurationPtr(v *WorkteamNotificationConfigurationArgs) WorkteamNotificationConfigurationPtrInput {
	return (*workteamNotificationConfigurationPtrType)(v)
}

func (*workteamNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamNotificationConfiguration)(nil)).Elem()
}

func (i *workteamNotificationConfigurationPtrType) ToWorkteamNotificationConfigurationPtrOutput() WorkteamNotificationConfigurationPtrOutput {
	return i.ToWorkteamNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *workteamNotificationConfigurationPtrType) ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamNotificationConfigurationPtrOutput)
}

func (i *workteamNotificationConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkteamNotificationConfiguration] {
	return pulumix.Output[*WorkteamNotificationConfiguration]{
		OutputState: i.ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkteamNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (WorkteamNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamNotificationConfiguration)(nil)).Elem()
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationOutput() WorkteamNotificationConfigurationOutput {
	return o
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationOutput {
	return o
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationPtrOutput() WorkteamNotificationConfigurationPtrOutput {
	return o.ToWorkteamNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkteamNotificationConfiguration) *WorkteamNotificationConfiguration {
		return &v
	}).(WorkteamNotificationConfigurationPtrOutput)
}

func (o WorkteamNotificationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamNotificationConfiguration] {
	return pulumix.Output[WorkteamNotificationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamNotificationConfigurationOutput) NotificationTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamNotificationConfiguration) string { return v.NotificationTopicArn }).(pulumi.StringOutput)
}

type WorkteamNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkteamNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamNotificationConfiguration)(nil)).Elem()
}

func (o WorkteamNotificationConfigurationPtrOutput) ToWorkteamNotificationConfigurationPtrOutput() WorkteamNotificationConfigurationPtrOutput {
	return o
}

func (o WorkteamNotificationConfigurationPtrOutput) ToWorkteamNotificationConfigurationPtrOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationPtrOutput {
	return o
}

func (o WorkteamNotificationConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkteamNotificationConfiguration] {
	return pulumix.Output[*WorkteamNotificationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamNotificationConfigurationPtrOutput) Elem() WorkteamNotificationConfigurationOutput {
	return o.ApplyT(func(v *WorkteamNotificationConfiguration) WorkteamNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkteamNotificationConfiguration
		return ret
	}).(WorkteamNotificationConfigurationOutput)
}

func (o WorkteamNotificationConfigurationPtrOutput) NotificationTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkteamNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.NotificationTopicArn
	}).(pulumi.StringPtrOutput)
}

type WorkteamOidcMemberDefinition struct {
	OidcGroups []string `pulumi:"oidcGroups"`
}

// WorkteamOidcMemberDefinitionInput is an input type that accepts WorkteamOidcMemberDefinitionArgs and WorkteamOidcMemberDefinitionOutput values.
// You can construct a concrete instance of `WorkteamOidcMemberDefinitionInput` via:
//
//	WorkteamOidcMemberDefinitionArgs{...}
type WorkteamOidcMemberDefinitionInput interface {
	pulumi.Input

	ToWorkteamOidcMemberDefinitionOutput() WorkteamOidcMemberDefinitionOutput
	ToWorkteamOidcMemberDefinitionOutputWithContext(context.Context) WorkteamOidcMemberDefinitionOutput
}

type WorkteamOidcMemberDefinitionArgs struct {
	OidcGroups pulumi.StringArrayInput `pulumi:"oidcGroups"`
}

func (WorkteamOidcMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamOidcMemberDefinition)(nil)).Elem()
}

func (i WorkteamOidcMemberDefinitionArgs) ToWorkteamOidcMemberDefinitionOutput() WorkteamOidcMemberDefinitionOutput {
	return i.ToWorkteamOidcMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamOidcMemberDefinitionArgs) ToWorkteamOidcMemberDefinitionOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamOidcMemberDefinitionOutput)
}

func (i WorkteamOidcMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkteamOidcMemberDefinition] {
	return pulumix.Output[WorkteamOidcMemberDefinition]{
		OutputState: i.ToWorkteamOidcMemberDefinitionOutputWithContext(ctx).OutputState,
	}
}

func (i WorkteamOidcMemberDefinitionArgs) ToWorkteamOidcMemberDefinitionPtrOutput() WorkteamOidcMemberDefinitionPtrOutput {
	return i.ToWorkteamOidcMemberDefinitionPtrOutputWithContext(context.Background())
}

func (i WorkteamOidcMemberDefinitionArgs) ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamOidcMemberDefinitionOutput).ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx)
}

// WorkteamOidcMemberDefinitionPtrInput is an input type that accepts WorkteamOidcMemberDefinitionArgs, WorkteamOidcMemberDefinitionPtr and WorkteamOidcMemberDefinitionPtrOutput values.
// You can construct a concrete instance of `WorkteamOidcMemberDefinitionPtrInput` via:
//
//	        WorkteamOidcMemberDefinitionArgs{...}
//
//	or:
//
//	        nil
type WorkteamOidcMemberDefinitionPtrInput interface {
	pulumi.Input

	ToWorkteamOidcMemberDefinitionPtrOutput() WorkteamOidcMemberDefinitionPtrOutput
	ToWorkteamOidcMemberDefinitionPtrOutputWithContext(context.Context) WorkteamOidcMemberDefinitionPtrOutput
}

type workteamOidcMemberDefinitionPtrType WorkteamOidcMemberDefinitionArgs

func WorkteamOidcMemberDefinitionPtr(v *WorkteamOidcMemberDefinitionArgs) WorkteamOidcMemberDefinitionPtrInput {
	return (*workteamOidcMemberDefinitionPtrType)(v)
}

func (*workteamOidcMemberDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamOidcMemberDefinition)(nil)).Elem()
}

func (i *workteamOidcMemberDefinitionPtrType) ToWorkteamOidcMemberDefinitionPtrOutput() WorkteamOidcMemberDefinitionPtrOutput {
	return i.ToWorkteamOidcMemberDefinitionPtrOutputWithContext(context.Background())
}

func (i *workteamOidcMemberDefinitionPtrType) ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamOidcMemberDefinitionPtrOutput)
}

func (i *workteamOidcMemberDefinitionPtrType) ToOutput(ctx context.Context) pulumix.Output[*WorkteamOidcMemberDefinition] {
	return pulumix.Output[*WorkteamOidcMemberDefinition]{
		OutputState: i.ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx).OutputState,
	}
}

type WorkteamOidcMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamOidcMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamOidcMemberDefinition)(nil)).Elem()
}

func (o WorkteamOidcMemberDefinitionOutput) ToWorkteamOidcMemberDefinitionOutput() WorkteamOidcMemberDefinitionOutput {
	return o
}

func (o WorkteamOidcMemberDefinitionOutput) ToWorkteamOidcMemberDefinitionOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionOutput {
	return o
}

func (o WorkteamOidcMemberDefinitionOutput) ToWorkteamOidcMemberDefinitionPtrOutput() WorkteamOidcMemberDefinitionPtrOutput {
	return o.ToWorkteamOidcMemberDefinitionPtrOutputWithContext(context.Background())
}

func (o WorkteamOidcMemberDefinitionOutput) ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkteamOidcMemberDefinition) *WorkteamOidcMemberDefinition {
		return &v
	}).(WorkteamOidcMemberDefinitionPtrOutput)
}

func (o WorkteamOidcMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamOidcMemberDefinition] {
	return pulumix.Output[WorkteamOidcMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamOidcMemberDefinitionOutput) OidcGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkteamOidcMemberDefinition) []string { return v.OidcGroups }).(pulumi.StringArrayOutput)
}

type WorkteamOidcMemberDefinitionPtrOutput struct{ *pulumi.OutputState }

func (WorkteamOidcMemberDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkteamOidcMemberDefinition)(nil)).Elem()
}

func (o WorkteamOidcMemberDefinitionPtrOutput) ToWorkteamOidcMemberDefinitionPtrOutput() WorkteamOidcMemberDefinitionPtrOutput {
	return o
}

func (o WorkteamOidcMemberDefinitionPtrOutput) ToWorkteamOidcMemberDefinitionPtrOutputWithContext(ctx context.Context) WorkteamOidcMemberDefinitionPtrOutput {
	return o
}

func (o WorkteamOidcMemberDefinitionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkteamOidcMemberDefinition] {
	return pulumix.Output[*WorkteamOidcMemberDefinition]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamOidcMemberDefinitionPtrOutput) Elem() WorkteamOidcMemberDefinitionOutput {
	return o.ApplyT(func(v *WorkteamOidcMemberDefinition) WorkteamOidcMemberDefinition {
		if v != nil {
			return *v
		}
		var ret WorkteamOidcMemberDefinition
		return ret
	}).(WorkteamOidcMemberDefinitionOutput)
}

func (o WorkteamOidcMemberDefinitionPtrOutput) OidcGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkteamOidcMemberDefinition) []string {
		if v == nil {
			return nil
		}
		return v.OidcGroups
	}).(pulumi.StringArrayOutput)
}

type WorkteamTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// WorkteamTagInput is an input type that accepts WorkteamTagArgs and WorkteamTagOutput values.
// You can construct a concrete instance of `WorkteamTagInput` via:
//
//	WorkteamTagArgs{...}
type WorkteamTagInput interface {
	pulumi.Input

	ToWorkteamTagOutput() WorkteamTagOutput
	ToWorkteamTagOutputWithContext(context.Context) WorkteamTagOutput
}

type WorkteamTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkteamTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamTag)(nil)).Elem()
}

func (i WorkteamTagArgs) ToWorkteamTagOutput() WorkteamTagOutput {
	return i.ToWorkteamTagOutputWithContext(context.Background())
}

func (i WorkteamTagArgs) ToWorkteamTagOutputWithContext(ctx context.Context) WorkteamTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamTagOutput)
}

func (i WorkteamTagArgs) ToOutput(ctx context.Context) pulumix.Output[WorkteamTag] {
	return pulumix.Output[WorkteamTag]{
		OutputState: i.ToWorkteamTagOutputWithContext(ctx).OutputState,
	}
}

// WorkteamTagArrayInput is an input type that accepts WorkteamTagArray and WorkteamTagArrayOutput values.
// You can construct a concrete instance of `WorkteamTagArrayInput` via:
//
//	WorkteamTagArray{ WorkteamTagArgs{...} }
type WorkteamTagArrayInput interface {
	pulumi.Input

	ToWorkteamTagArrayOutput() WorkteamTagArrayOutput
	ToWorkteamTagArrayOutputWithContext(context.Context) WorkteamTagArrayOutput
}

type WorkteamTagArray []WorkteamTagInput

func (WorkteamTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkteamTag)(nil)).Elem()
}

func (i WorkteamTagArray) ToWorkteamTagArrayOutput() WorkteamTagArrayOutput {
	return i.ToWorkteamTagArrayOutputWithContext(context.Background())
}

func (i WorkteamTagArray) ToWorkteamTagArrayOutputWithContext(ctx context.Context) WorkteamTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamTagArrayOutput)
}

func (i WorkteamTagArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkteamTag] {
	return pulumix.Output[[]WorkteamTag]{
		OutputState: i.ToWorkteamTagArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkteamTagOutput struct{ *pulumi.OutputState }

func (WorkteamTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamTag)(nil)).Elem()
}

func (o WorkteamTagOutput) ToWorkteamTagOutput() WorkteamTagOutput {
	return o
}

func (o WorkteamTagOutput) ToWorkteamTagOutputWithContext(ctx context.Context) WorkteamTagOutput {
	return o
}

func (o WorkteamTagOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamTag] {
	return pulumix.Output[WorkteamTag]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o WorkteamTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkteamTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkteamTagArrayOutput struct{ *pulumi.OutputState }

func (WorkteamTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkteamTag)(nil)).Elem()
}

func (o WorkteamTagArrayOutput) ToWorkteamTagArrayOutput() WorkteamTagArrayOutput {
	return o
}

func (o WorkteamTagArrayOutput) ToWorkteamTagArrayOutputWithContext(ctx context.Context) WorkteamTagArrayOutput {
	return o
}

func (o WorkteamTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkteamTag] {
	return pulumix.Output[[]WorkteamTag]{
		OutputState: o.OutputState,
	}
}

func (o WorkteamTagArrayOutput) Index(i pulumi.IntInput) WorkteamTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkteamTag {
		return vs[0].([]WorkteamTag)[vs[1].(int)]
	}).(WorkteamTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigFileSystemConfigInput)(nil)).Elem(), AppImageConfigFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigFileSystemConfigPtrInput)(nil)).Elem(), AppImageConfigFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigInput)(nil)).Elem(), AppImageConfigKernelGatewayImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigPtrInput)(nil)).Elem(), AppImageConfigKernelGatewayImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigKernelSpecInput)(nil)).Elem(), AppImageConfigKernelSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigKernelSpecArrayInput)(nil)).Elem(), AppImageConfigKernelSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigTagInput)(nil)).Elem(), AppImageConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppImageConfigTagArrayInput)(nil)).Elem(), AppImageConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppResourceSpecInput)(nil)).Elem(), AppResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppResourceSpecPtrInput)(nil)).Elem(), AppResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTagInput)(nil)).Elem(), AppTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTagArrayInput)(nil)).Elem(), AppTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeRepositoryGitConfigInput)(nil)).Elem(), CodeRepositoryGitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeRepositoryTagInput)(nil)).Elem(), CodeRepositoryTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeRepositoryTagArrayInput)(nil)).Elem(), CodeRepositoryTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionBatchTransformInputInput)(nil)).Elem(), DataQualityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionBatchTransformInputPtrInput)(nil)).Elem(), DataQualityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionClusterConfigInput)(nil)).Elem(), DataQualityJobDefinitionClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionConstraintsResourceInput)(nil)).Elem(), DataQualityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionConstraintsResourcePtrInput)(nil)).Elem(), DataQualityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionCsvInput)(nil)).Elem(), DataQualityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionCsvPtrInput)(nil)).Elem(), DataQualityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDataQualityAppSpecificationInput)(nil)).Elem(), DataQualityJobDefinitionDataQualityAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigInput)(nil)).Elem(), DataQualityJobDefinitionDataQualityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigPtrInput)(nil)).Elem(), DataQualityJobDefinitionDataQualityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputInput)(nil)).Elem(), DataQualityJobDefinitionDataQualityJobInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDatasetFormatInput)(nil)).Elem(), DataQualityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionDatasetFormatPtrInput)(nil)).Elem(), DataQualityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionEndpointInputInput)(nil)).Elem(), DataQualityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionEndpointInputPtrInput)(nil)).Elem(), DataQualityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionJsonInput)(nil)).Elem(), DataQualityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionJsonPtrInput)(nil)).Elem(), DataQualityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutputInput)(nil)).Elem(), DataQualityJobDefinitionMonitoringOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutputArrayInput)(nil)).Elem(), DataQualityJobDefinitionMonitoringOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionMonitoringOutputConfigInput)(nil)).Elem(), DataQualityJobDefinitionMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionMonitoringResourcesInput)(nil)).Elem(), DataQualityJobDefinitionMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionNetworkConfigInput)(nil)).Elem(), DataQualityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionNetworkConfigPtrInput)(nil)).Elem(), DataQualityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionS3OutputInput)(nil)).Elem(), DataQualityJobDefinitionS3OutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionStatisticsResourceInput)(nil)).Elem(), DataQualityJobDefinitionStatisticsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionStatisticsResourcePtrInput)(nil)).Elem(), DataQualityJobDefinitionStatisticsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionStoppingConditionInput)(nil)).Elem(), DataQualityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionStoppingConditionPtrInput)(nil)).Elem(), DataQualityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionTagInput)(nil)).Elem(), DataQualityJobDefinitionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionTagArrayInput)(nil)).Elem(), DataQualityJobDefinitionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionVpcConfigInput)(nil)).Elem(), DataQualityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataQualityJobDefinitionVpcConfigPtrInput)(nil)).Elem(), DataQualityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTypeInput)(nil)).Elem(), DeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTypePtrInput)(nil)).Elem(), DeviceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceFleetEdgeOutputConfigInput)(nil)).Elem(), DeviceFleetEdgeOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceFleetTagInput)(nil)).Elem(), DeviceFleetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceFleetTagArrayInput)(nil)).Elem(), DeviceFleetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTagInput)(nil)).Elem(), DeviceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTagArrayInput)(nil)).Elem(), DeviceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCodeEditorAppSettingsInput)(nil)).Elem(), DomainCodeEditorAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCodeEditorAppSettingsPtrInput)(nil)).Elem(), DomainCodeEditorAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCodeRepositoryInput)(nil)).Elem(), DomainCodeRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCodeRepositoryArrayInput)(nil)).Elem(), DomainCodeRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomFileSystemConfigInput)(nil)).Elem(), DomainCustomFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomFileSystemConfigArrayInput)(nil)).Elem(), DomainCustomFileSystemConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomImageInput)(nil)).Elem(), DomainCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomImageArrayInput)(nil)).Elem(), DomainCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomPosixUserConfigInput)(nil)).Elem(), DomainCustomPosixUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomPosixUserConfigPtrInput)(nil)).Elem(), DomainCustomPosixUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultEbsStorageSettingsInput)(nil)).Elem(), DomainDefaultEbsStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultEbsStorageSettingsPtrInput)(nil)).Elem(), DomainDefaultEbsStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultSpaceSettingsInput)(nil)).Elem(), DomainDefaultSpaceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultSpaceSettingsPtrInput)(nil)).Elem(), DomainDefaultSpaceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultSpaceStorageSettingsInput)(nil)).Elem(), DomainDefaultSpaceStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDefaultSpaceStorageSettingsPtrInput)(nil)).Elem(), DomainDefaultSpaceStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEfsFileSystemConfigInput)(nil)).Elem(), DomainEfsFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEfsFileSystemConfigPtrInput)(nil)).Elem(), DomainEfsFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJupyterLabAppSettingsInput)(nil)).Elem(), DomainJupyterLabAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJupyterLabAppSettingsPtrInput)(nil)).Elem(), DomainJupyterLabAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJupyterServerAppSettingsInput)(nil)).Elem(), DomainJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJupyterServerAppSettingsPtrInput)(nil)).Elem(), DomainJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainKernelGatewayAppSettingsInput)(nil)).Elem(), DomainKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainKernelGatewayAppSettingsPtrInput)(nil)).Elem(), DomainKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRSessionAppSettingsInput)(nil)).Elem(), DomainRSessionAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRSessionAppSettingsPtrInput)(nil)).Elem(), DomainRSessionAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRStudioServerProAppSettingsInput)(nil)).Elem(), DomainRStudioServerProAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRStudioServerProAppSettingsPtrInput)(nil)).Elem(), DomainRStudioServerProAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRStudioServerProDomainSettingsInput)(nil)).Elem(), DomainRStudioServerProDomainSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRStudioServerProDomainSettingsPtrInput)(nil)).Elem(), DomainRStudioServerProDomainSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceSpecInput)(nil)).Elem(), DomainResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainResourceSpecPtrInput)(nil)).Elem(), DomainResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSettingsInput)(nil)).Elem(), DomainSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSettingsPtrInput)(nil)).Elem(), DomainSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSharingSettingsInput)(nil)).Elem(), DomainSharingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSharingSettingsPtrInput)(nil)).Elem(), DomainSharingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagInput)(nil)).Elem(), DomainTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagArrayInput)(nil)).Elem(), DomainTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainUserSettingsInput)(nil)).Elem(), DomainUserSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAlarmInput)(nil)).Elem(), EndpointAlarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAlarmArrayInput)(nil)).Elem(), EndpointAlarmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAutoRollbackConfigInput)(nil)).Elem(), EndpointAutoRollbackConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAutoRollbackConfigPtrInput)(nil)).Elem(), EndpointAutoRollbackConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointBlueGreenUpdatePolicyInput)(nil)).Elem(), EndpointBlueGreenUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointBlueGreenUpdatePolicyPtrInput)(nil)).Elem(), EndpointBlueGreenUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCapacitySizeInput)(nil)).Elem(), EndpointCapacitySizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCapacitySizePtrInput)(nil)).Elem(), EndpointCapacitySizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceClientConfigInput)(nil)).Elem(), EndpointConfigAsyncInferenceClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceClientConfigPtrInput)(nil)).Elem(), EndpointConfigAsyncInferenceClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceConfigInput)(nil)).Elem(), EndpointConfigAsyncInferenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceConfigPtrInput)(nil)).Elem(), EndpointConfigAsyncInferenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceNotificationConfigInput)(nil)).Elem(), EndpointConfigAsyncInferenceNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceNotificationConfigPtrInput)(nil)).Elem(), EndpointConfigAsyncInferenceNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceOutputConfigInput)(nil)).Elem(), EndpointConfigAsyncInferenceOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigAsyncInferenceOutputConfigPtrInput)(nil)).Elem(), EndpointConfigAsyncInferenceOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigCaptureContentTypeHeaderInput)(nil)).Elem(), EndpointConfigCaptureContentTypeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigCaptureContentTypeHeaderPtrInput)(nil)).Elem(), EndpointConfigCaptureContentTypeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigCaptureOptionInput)(nil)).Elem(), EndpointConfigCaptureOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigCaptureOptionArrayInput)(nil)).Elem(), EndpointConfigCaptureOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyExplainerConfigInput)(nil)).Elem(), EndpointConfigClarifyExplainerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyExplainerConfigPtrInput)(nil)).Elem(), EndpointConfigClarifyExplainerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyFeatureTypeInput)(nil)).Elem(), EndpointConfigClarifyFeatureTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyFeatureTypeArrayInput)(nil)).Elem(), EndpointConfigClarifyFeatureTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyHeaderInput)(nil)).Elem(), EndpointConfigClarifyHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyHeaderArrayInput)(nil)).Elem(), EndpointConfigClarifyHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyInferenceConfigInput)(nil)).Elem(), EndpointConfigClarifyInferenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyInferenceConfigPtrInput)(nil)).Elem(), EndpointConfigClarifyInferenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyShapBaselineConfigInput)(nil)).Elem(), EndpointConfigClarifyShapBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyShapBaselineConfigPtrInput)(nil)).Elem(), EndpointConfigClarifyShapBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyShapConfigInput)(nil)).Elem(), EndpointConfigClarifyShapConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyShapConfigPtrInput)(nil)).Elem(), EndpointConfigClarifyShapConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyTextConfigInput)(nil)).Elem(), EndpointConfigClarifyTextConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigClarifyTextConfigPtrInput)(nil)).Elem(), EndpointConfigClarifyTextConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigDataCaptureConfigInput)(nil)).Elem(), EndpointConfigDataCaptureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigDataCaptureConfigPtrInput)(nil)).Elem(), EndpointConfigDataCaptureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigExplainerConfigInput)(nil)).Elem(), EndpointConfigExplainerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigExplainerConfigPtrInput)(nil)).Elem(), EndpointConfigExplainerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigManagedInstanceScalingInput)(nil)).Elem(), EndpointConfigManagedInstanceScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigManagedInstanceScalingPtrInput)(nil)).Elem(), EndpointConfigManagedInstanceScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigProductionVariantInput)(nil)).Elem(), EndpointConfigProductionVariantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigProductionVariantArrayInput)(nil)).Elem(), EndpointConfigProductionVariantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigRoutingConfigInput)(nil)).Elem(), EndpointConfigRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigRoutingConfigPtrInput)(nil)).Elem(), EndpointConfigRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigServerlessConfigInput)(nil)).Elem(), EndpointConfigServerlessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigServerlessConfigPtrInput)(nil)).Elem(), EndpointConfigServerlessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigTagInput)(nil)).Elem(), EndpointConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigTagArrayInput)(nil)).Elem(), EndpointConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigVpcConfigInput)(nil)).Elem(), EndpointConfigVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigVpcConfigPtrInput)(nil)).Elem(), EndpointConfigVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDeploymentConfigInput)(nil)).Elem(), EndpointDeploymentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDeploymentConfigPtrInput)(nil)).Elem(), EndpointDeploymentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRollingUpdatePolicyInput)(nil)).Elem(), EndpointRollingUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRollingUpdatePolicyPtrInput)(nil)).Elem(), EndpointRollingUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTagInput)(nil)).Elem(), EndpointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTagArrayInput)(nil)).Elem(), EndpointTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTrafficRoutingConfigInput)(nil)).Elem(), EndpointTrafficRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTrafficRoutingConfigPtrInput)(nil)).Elem(), EndpointTrafficRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointVariantPropertyInput)(nil)).Elem(), EndpointVariantPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointVariantPropertyArrayInput)(nil)).Elem(), EndpointVariantPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupDataCatalogConfigInput)(nil)).Elem(), FeatureGroupDataCatalogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupDataCatalogConfigPtrInput)(nil)).Elem(), FeatureGroupDataCatalogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupFeatureDefinitionInput)(nil)).Elem(), FeatureGroupFeatureDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupFeatureDefinitionArrayInput)(nil)).Elem(), FeatureGroupFeatureDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupOnlineStoreSecurityConfigInput)(nil)).Elem(), FeatureGroupOnlineStoreSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupOnlineStoreSecurityConfigPtrInput)(nil)).Elem(), FeatureGroupOnlineStoreSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupS3StorageConfigInput)(nil)).Elem(), FeatureGroupS3StorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupS3StorageConfigPtrInput)(nil)).Elem(), FeatureGroupS3StorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupTagInput)(nil)).Elem(), FeatureGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureGroupTagArrayInput)(nil)).Elem(), FeatureGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageTagInput)(nil)).Elem(), ImageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageTagArrayInput)(nil)).Elem(), ImageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentComputeResourceRequirementsInput)(nil)).Elem(), InferenceComponentComputeResourceRequirementsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentContainerSpecificationInput)(nil)).Elem(), InferenceComponentContainerSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentContainerSpecificationPtrInput)(nil)).Elem(), InferenceComponentContainerSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentDeployedImageInput)(nil)).Elem(), InferenceComponentDeployedImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentDeployedImagePtrInput)(nil)).Elem(), InferenceComponentDeployedImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentEnvironmentMapInput)(nil)).Elem(), InferenceComponentEnvironmentMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentEnvironmentMapPtrInput)(nil)).Elem(), InferenceComponentEnvironmentMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentRuntimeConfigInput)(nil)).Elem(), InferenceComponentRuntimeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentSpecificationInput)(nil)).Elem(), InferenceComponentSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentStartupParametersInput)(nil)).Elem(), InferenceComponentStartupParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentStartupParametersPtrInput)(nil)).Elem(), InferenceComponentStartupParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentTagInput)(nil)).Elem(), InferenceComponentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceComponentTagArrayInput)(nil)).Elem(), InferenceComponentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentCaptureContentTypeHeaderInput)(nil)).Elem(), InferenceExperimentCaptureContentTypeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentCaptureContentTypeHeaderPtrInput)(nil)).Elem(), InferenceExperimentCaptureContentTypeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentDataStorageConfigInput)(nil)).Elem(), InferenceExperimentDataStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentDataStorageConfigPtrInput)(nil)).Elem(), InferenceExperimentDataStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentModelInfrastructureConfigInput)(nil)).Elem(), InferenceExperimentModelInfrastructureConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentModelVariantConfigInput)(nil)).Elem(), InferenceExperimentModelVariantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentModelVariantConfigArrayInput)(nil)).Elem(), InferenceExperimentModelVariantConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentRealTimeInferenceConfigInput)(nil)).Elem(), InferenceExperimentRealTimeInferenceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentScheduleInput)(nil)).Elem(), InferenceExperimentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentSchedulePtrInput)(nil)).Elem(), InferenceExperimentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentShadowModeConfigInput)(nil)).Elem(), InferenceExperimentShadowModeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentShadowModeConfigPtrInput)(nil)).Elem(), InferenceExperimentShadowModeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentShadowModelVariantConfigInput)(nil)).Elem(), InferenceExperimentShadowModelVariantConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentShadowModelVariantConfigArrayInput)(nil)).Elem(), InferenceExperimentShadowModelVariantConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentTagInput)(nil)).Elem(), InferenceExperimentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InferenceExperimentTagArrayInput)(nil)).Elem(), InferenceExperimentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionBatchTransformInputInput)(nil)).Elem(), ModelBiasJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionBatchTransformInputPtrInput)(nil)).Elem(), ModelBiasJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionClusterConfigInput)(nil)).Elem(), ModelBiasJobDefinitionClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionConstraintsResourceInput)(nil)).Elem(), ModelBiasJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionConstraintsResourcePtrInput)(nil)).Elem(), ModelBiasJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionCsvInput)(nil)).Elem(), ModelBiasJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionCsvPtrInput)(nil)).Elem(), ModelBiasJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionDatasetFormatInput)(nil)).Elem(), ModelBiasJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionDatasetFormatPtrInput)(nil)).Elem(), ModelBiasJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionEndpointInputInput)(nil)).Elem(), ModelBiasJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionEndpointInputPtrInput)(nil)).Elem(), ModelBiasJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionJsonInput)(nil)).Elem(), ModelBiasJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionJsonPtrInput)(nil)).Elem(), ModelBiasJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionModelBiasAppSpecificationInput)(nil)).Elem(), ModelBiasJobDefinitionModelBiasAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionModelBiasBaselineConfigInput)(nil)).Elem(), ModelBiasJobDefinitionModelBiasBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionModelBiasBaselineConfigPtrInput)(nil)).Elem(), ModelBiasJobDefinitionModelBiasBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionModelBiasJobInputInput)(nil)).Elem(), ModelBiasJobDefinitionModelBiasJobInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionMonitoringGroundTruthS3InputInput)(nil)).Elem(), ModelBiasJobDefinitionMonitoringGroundTruthS3InputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutputInput)(nil)).Elem(), ModelBiasJobDefinitionMonitoringOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutputArrayInput)(nil)).Elem(), ModelBiasJobDefinitionMonitoringOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionMonitoringOutputConfigInput)(nil)).Elem(), ModelBiasJobDefinitionMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionMonitoringResourcesInput)(nil)).Elem(), ModelBiasJobDefinitionMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionNetworkConfigInput)(nil)).Elem(), ModelBiasJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionNetworkConfigPtrInput)(nil)).Elem(), ModelBiasJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionS3OutputInput)(nil)).Elem(), ModelBiasJobDefinitionS3OutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionStoppingConditionInput)(nil)).Elem(), ModelBiasJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionStoppingConditionPtrInput)(nil)).Elem(), ModelBiasJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionTagInput)(nil)).Elem(), ModelBiasJobDefinitionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionTagArrayInput)(nil)).Elem(), ModelBiasJobDefinitionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionVpcConfigInput)(nil)).Elem(), ModelBiasJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelBiasJobDefinitionVpcConfigPtrInput)(nil)).Elem(), ModelBiasJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardAdditionalInformationInput)(nil)).Elem(), ModelCardAdditionalInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardAdditionalInformationPtrInput)(nil)).Elem(), ModelCardAdditionalInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardBusinessDetailsInput)(nil)).Elem(), ModelCardBusinessDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardBusinessDetailsPtrInput)(nil)).Elem(), ModelCardBusinessDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardContainerInput)(nil)).Elem(), ModelCardContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardContainerArrayInput)(nil)).Elem(), ModelCardContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardContentInput)(nil)).Elem(), ModelCardContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardEvaluationDetailInput)(nil)).Elem(), ModelCardEvaluationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardEvaluationDetailArrayInput)(nil)).Elem(), ModelCardEvaluationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardInferenceSpecificationInput)(nil)).Elem(), ModelCardInferenceSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardInferenceSpecificationPtrInput)(nil)).Elem(), ModelCardInferenceSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardIntendedUsesInput)(nil)).Elem(), ModelCardIntendedUsesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardIntendedUsesPtrInput)(nil)).Elem(), ModelCardIntendedUsesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardMetricGroupInput)(nil)).Elem(), ModelCardMetricGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardMetricGroupArrayInput)(nil)).Elem(), ModelCardMetricGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelOverviewInput)(nil)).Elem(), ModelCardModelOverviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelOverviewPtrInput)(nil)).Elem(), ModelCardModelOverviewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelOverviewInferenceEnvironmentPropertiesInput)(nil)).Elem(), ModelCardModelOverviewInferenceEnvironmentPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelOverviewInferenceEnvironmentPropertiesPtrInput)(nil)).Elem(), ModelCardModelOverviewInferenceEnvironmentPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelPackageCreatorInput)(nil)).Elem(), ModelCardModelPackageCreatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelPackageCreatorPtrInput)(nil)).Elem(), ModelCardModelPackageCreatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelPackageDetailsInput)(nil)).Elem(), ModelCardModelPackageDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardModelPackageDetailsPtrInput)(nil)).Elem(), ModelCardModelPackageDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardObjectiveFunctionInput)(nil)).Elem(), ModelCardObjectiveFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardObjectiveFunctionPtrInput)(nil)).Elem(), ModelCardObjectiveFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardObjectiveFunctionFunctionPropertiesInput)(nil)).Elem(), ModelCardObjectiveFunctionFunctionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardObjectiveFunctionFunctionPropertiesPtrInput)(nil)).Elem(), ModelCardObjectiveFunctionFunctionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardSecurityConfigInput)(nil)).Elem(), ModelCardSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardSecurityConfigPtrInput)(nil)).Elem(), ModelCardSecurityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardSourceAlgorithmInput)(nil)).Elem(), ModelCardSourceAlgorithmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardSourceAlgorithmArrayInput)(nil)).Elem(), ModelCardSourceAlgorithmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTagInput)(nil)).Elem(), ModelCardTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTagArrayInput)(nil)).Elem(), ModelCardTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsInput)(nil)).Elem(), ModelCardTrainingDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsPtrInput)(nil)).Elem(), ModelCardTrainingDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesInput)(nil)).Elem(), ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrInput)(nil)).Elem(), ModelCardTrainingDetailsTrainingJobDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesInput)(nil)).Elem(), ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrInput)(nil)).Elem(), ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingHyperParameterInput)(nil)).Elem(), ModelCardTrainingHyperParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingHyperParameterArrayInput)(nil)).Elem(), ModelCardTrainingHyperParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingMetricInput)(nil)).Elem(), ModelCardTrainingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardTrainingMetricArrayInput)(nil)).Elem(), ModelCardTrainingMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardUserContextInput)(nil)).Elem(), ModelCardUserContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCardUserContextPtrInput)(nil)).Elem(), ModelCardUserContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelContainerDefinitionInput)(nil)).Elem(), ModelContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelContainerDefinitionPtrInput)(nil)).Elem(), ModelContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelContainerDefinitionArrayInput)(nil)).Elem(), ModelContainerDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelDataSourceInput)(nil)).Elem(), ModelDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelDataSourcePtrInput)(nil)).Elem(), ModelDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionBatchTransformInputInput)(nil)).Elem(), ModelExplainabilityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionBatchTransformInputPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionClusterConfigInput)(nil)).Elem(), ModelExplainabilityJobDefinitionClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionConstraintsResourceInput)(nil)).Elem(), ModelExplainabilityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionConstraintsResourcePtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionCsvInput)(nil)).Elem(), ModelExplainabilityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionCsvPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionDatasetFormatInput)(nil)).Elem(), ModelExplainabilityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionDatasetFormatPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionEndpointInputInput)(nil)).Elem(), ModelExplainabilityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionEndpointInputPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionJsonInput)(nil)).Elem(), ModelExplainabilityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionJsonPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationInput)(nil)).Elem(), ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigInput)(nil)).Elem(), ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionModelExplainabilityJobInputInput)(nil)).Elem(), ModelExplainabilityJobDefinitionModelExplainabilityJobInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutputInput)(nil)).Elem(), ModelExplainabilityJobDefinitionMonitoringOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutputArrayInput)(nil)).Elem(), ModelExplainabilityJobDefinitionMonitoringOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringOutputConfigInput)(nil)).Elem(), ModelExplainabilityJobDefinitionMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionMonitoringResourcesInput)(nil)).Elem(), ModelExplainabilityJobDefinitionMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionNetworkConfigInput)(nil)).Elem(), ModelExplainabilityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionNetworkConfigPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionS3OutputInput)(nil)).Elem(), ModelExplainabilityJobDefinitionS3OutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionStoppingConditionInput)(nil)).Elem(), ModelExplainabilityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionStoppingConditionPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionTagInput)(nil)).Elem(), ModelExplainabilityJobDefinitionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionTagArrayInput)(nil)).Elem(), ModelExplainabilityJobDefinitionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionVpcConfigInput)(nil)).Elem(), ModelExplainabilityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelExplainabilityJobDefinitionVpcConfigPtrInput)(nil)).Elem(), ModelExplainabilityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelImageConfigInput)(nil)).Elem(), ModelImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelImageConfigPtrInput)(nil)).Elem(), ModelImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelInferenceExecutionConfigInput)(nil)).Elem(), ModelInferenceExecutionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelInferenceExecutionConfigPtrInput)(nil)).Elem(), ModelInferenceExecutionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMultiModelConfigInput)(nil)).Elem(), ModelMultiModelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelMultiModelConfigPtrInput)(nil)).Elem(), ModelMultiModelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageAdditionalInferenceSpecificationDefinitionInput)(nil)).Elem(), ModelPackageAdditionalInferenceSpecificationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageAdditionalInferenceSpecificationDefinitionArrayInput)(nil)).Elem(), ModelPackageAdditionalInferenceSpecificationDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageBiasInput)(nil)).Elem(), ModelPackageBiasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageBiasPtrInput)(nil)).Elem(), ModelPackageBiasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageContainerDefinitionInput)(nil)).Elem(), ModelPackageContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageContainerDefinitionArrayInput)(nil)).Elem(), ModelPackageContainerDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageContainerDefinitionModelInputPropertiesInput)(nil)).Elem(), ModelPackageContainerDefinitionModelInputPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageContainerDefinitionModelInputPropertiesPtrInput)(nil)).Elem(), ModelPackageContainerDefinitionModelInputPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageCustomerMetadataPropertiesInput)(nil)).Elem(), ModelPackageCustomerMetadataPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageCustomerMetadataPropertiesPtrInput)(nil)).Elem(), ModelPackageCustomerMetadataPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDataSourceInput)(nil)).Elem(), ModelPackageDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckBaselinesInput)(nil)).Elem(), ModelPackageDriftCheckBaselinesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckBaselinesPtrInput)(nil)).Elem(), ModelPackageDriftCheckBaselinesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckBiasInput)(nil)).Elem(), ModelPackageDriftCheckBiasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckBiasPtrInput)(nil)).Elem(), ModelPackageDriftCheckBiasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckExplainabilityInput)(nil)).Elem(), ModelPackageDriftCheckExplainabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckExplainabilityPtrInput)(nil)).Elem(), ModelPackageDriftCheckExplainabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckModelDataQualityInput)(nil)).Elem(), ModelPackageDriftCheckModelDataQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckModelDataQualityPtrInput)(nil)).Elem(), ModelPackageDriftCheckModelDataQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckModelQualityInput)(nil)).Elem(), ModelPackageDriftCheckModelQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageDriftCheckModelQualityPtrInput)(nil)).Elem(), ModelPackageDriftCheckModelQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageEnvironmentInput)(nil)).Elem(), ModelPackageEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageEnvironmentPtrInput)(nil)).Elem(), ModelPackageEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageExplainabilityInput)(nil)).Elem(), ModelPackageExplainabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageExplainabilityPtrInput)(nil)).Elem(), ModelPackageExplainabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageFileSourceInput)(nil)).Elem(), ModelPackageFileSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageFileSourcePtrInput)(nil)).Elem(), ModelPackageFileSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageGroupTagInput)(nil)).Elem(), ModelPackageGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageGroupTagArrayInput)(nil)).Elem(), ModelPackageGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageInferenceSpecificationInput)(nil)).Elem(), ModelPackageInferenceSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageInferenceSpecificationPtrInput)(nil)).Elem(), ModelPackageInferenceSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageMetadataPropertiesInput)(nil)).Elem(), ModelPackageMetadataPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageMetadataPropertiesPtrInput)(nil)).Elem(), ModelPackageMetadataPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageMetricsSourceInput)(nil)).Elem(), ModelPackageMetricsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageMetricsSourcePtrInput)(nil)).Elem(), ModelPackageMetricsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelDataQualityInput)(nil)).Elem(), ModelPackageModelDataQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelDataQualityPtrInput)(nil)).Elem(), ModelPackageModelDataQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelMetricsInput)(nil)).Elem(), ModelPackageModelMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelMetricsPtrInput)(nil)).Elem(), ModelPackageModelMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelQualityInput)(nil)).Elem(), ModelPackageModelQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageModelQualityPtrInput)(nil)).Elem(), ModelPackageModelQualityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageS3DataSourceInput)(nil)).Elem(), ModelPackageS3DataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageSourceAlgorithmInput)(nil)).Elem(), ModelPackageSourceAlgorithmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageSourceAlgorithmArrayInput)(nil)).Elem(), ModelPackageSourceAlgorithmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageSourceAlgorithmSpecificationInput)(nil)).Elem(), ModelPackageSourceAlgorithmSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageSourceAlgorithmSpecificationPtrInput)(nil)).Elem(), ModelPackageSourceAlgorithmSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageStatusDetailsInput)(nil)).Elem(), ModelPackageStatusDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageStatusDetailsPtrInput)(nil)).Elem(), ModelPackageStatusDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageStatusItemInput)(nil)).Elem(), ModelPackageStatusItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageStatusItemArrayInput)(nil)).Elem(), ModelPackageStatusItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTagInput)(nil)).Elem(), ModelPackageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTagArrayInput)(nil)).Elem(), ModelPackageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTransformInputInput)(nil)).Elem(), ModelPackageTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTransformJobDefinitionInput)(nil)).Elem(), ModelPackageTransformJobDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTransformOutputInput)(nil)).Elem(), ModelPackageTransformOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageTransformResourcesInput)(nil)).Elem(), ModelPackageTransformResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageValidationProfileInput)(nil)).Elem(), ModelPackageValidationProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageValidationProfileArrayInput)(nil)).Elem(), ModelPackageValidationProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageValidationSpecificationInput)(nil)).Elem(), ModelPackageValidationSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelPackageValidationSpecificationPtrInput)(nil)).Elem(), ModelPackageValidationSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionBatchTransformInputInput)(nil)).Elem(), ModelQualityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionBatchTransformInputPtrInput)(nil)).Elem(), ModelQualityJobDefinitionBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionClusterConfigInput)(nil)).Elem(), ModelQualityJobDefinitionClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionConstraintsResourceInput)(nil)).Elem(), ModelQualityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionConstraintsResourcePtrInput)(nil)).Elem(), ModelQualityJobDefinitionConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionCsvInput)(nil)).Elem(), ModelQualityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionCsvPtrInput)(nil)).Elem(), ModelQualityJobDefinitionCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionDatasetFormatInput)(nil)).Elem(), ModelQualityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionDatasetFormatPtrInput)(nil)).Elem(), ModelQualityJobDefinitionDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionEndpointInputInput)(nil)).Elem(), ModelQualityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionEndpointInputPtrInput)(nil)).Elem(), ModelQualityJobDefinitionEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionJsonInput)(nil)).Elem(), ModelQualityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionJsonPtrInput)(nil)).Elem(), ModelQualityJobDefinitionJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionModelQualityAppSpecificationInput)(nil)).Elem(), ModelQualityJobDefinitionModelQualityAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionModelQualityBaselineConfigInput)(nil)).Elem(), ModelQualityJobDefinitionModelQualityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionModelQualityBaselineConfigPtrInput)(nil)).Elem(), ModelQualityJobDefinitionModelQualityBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionModelQualityJobInputInput)(nil)).Elem(), ModelQualityJobDefinitionModelQualityJobInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionMonitoringGroundTruthS3InputInput)(nil)).Elem(), ModelQualityJobDefinitionMonitoringGroundTruthS3InputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutputInput)(nil)).Elem(), ModelQualityJobDefinitionMonitoringOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutputArrayInput)(nil)).Elem(), ModelQualityJobDefinitionMonitoringOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionMonitoringOutputConfigInput)(nil)).Elem(), ModelQualityJobDefinitionMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionMonitoringResourcesInput)(nil)).Elem(), ModelQualityJobDefinitionMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionNetworkConfigInput)(nil)).Elem(), ModelQualityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionNetworkConfigPtrInput)(nil)).Elem(), ModelQualityJobDefinitionNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionS3OutputInput)(nil)).Elem(), ModelQualityJobDefinitionS3OutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionStoppingConditionInput)(nil)).Elem(), ModelQualityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionStoppingConditionPtrInput)(nil)).Elem(), ModelQualityJobDefinitionStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionTagInput)(nil)).Elem(), ModelQualityJobDefinitionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionTagArrayInput)(nil)).Elem(), ModelQualityJobDefinitionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionVpcConfigInput)(nil)).Elem(), ModelQualityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelQualityJobDefinitionVpcConfigPtrInput)(nil)).Elem(), ModelQualityJobDefinitionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelRepositoryAuthConfigInput)(nil)).Elem(), ModelRepositoryAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelRepositoryAuthConfigPtrInput)(nil)).Elem(), ModelRepositoryAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelS3DataSourceInput)(nil)).Elem(), ModelS3DataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelS3DataSourcePtrInput)(nil)).Elem(), ModelS3DataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTagInput)(nil)).Elem(), ModelTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelTagArrayInput)(nil)).Elem(), ModelTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelVpcConfigInput)(nil)).Elem(), ModelVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelVpcConfigPtrInput)(nil)).Elem(), ModelVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleBaselineConfigInput)(nil)).Elem(), MonitoringScheduleBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleBaselineConfigPtrInput)(nil)).Elem(), MonitoringScheduleBaselineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleBatchTransformInputInput)(nil)).Elem(), MonitoringScheduleBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleBatchTransformInputPtrInput)(nil)).Elem(), MonitoringScheduleBatchTransformInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleClusterConfigInput)(nil)).Elem(), MonitoringScheduleClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleClusterConfigPtrInput)(nil)).Elem(), MonitoringScheduleClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleConfigInput)(nil)).Elem(), MonitoringScheduleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleConstraintsResourceInput)(nil)).Elem(), MonitoringScheduleConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleConstraintsResourcePtrInput)(nil)).Elem(), MonitoringScheduleConstraintsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleCsvInput)(nil)).Elem(), MonitoringScheduleCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleCsvPtrInput)(nil)).Elem(), MonitoringScheduleCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleDatasetFormatInput)(nil)).Elem(), MonitoringScheduleDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleDatasetFormatPtrInput)(nil)).Elem(), MonitoringScheduleDatasetFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleEndpointInputInput)(nil)).Elem(), MonitoringScheduleEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleEndpointInputPtrInput)(nil)).Elem(), MonitoringScheduleEndpointInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleJsonInput)(nil)).Elem(), MonitoringScheduleJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleJsonPtrInput)(nil)).Elem(), MonitoringScheduleJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringAppSpecificationInput)(nil)).Elem(), MonitoringScheduleMonitoringAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringAppSpecificationPtrInput)(nil)).Elem(), MonitoringScheduleMonitoringAppSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringExecutionSummaryInput)(nil)).Elem(), MonitoringScheduleMonitoringExecutionSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringExecutionSummaryPtrInput)(nil)).Elem(), MonitoringScheduleMonitoringExecutionSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringInputInput)(nil)).Elem(), MonitoringScheduleMonitoringInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringInputArrayInput)(nil)).Elem(), MonitoringScheduleMonitoringInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringJobDefinitionInput)(nil)).Elem(), MonitoringScheduleMonitoringJobDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringJobDefinitionPtrInput)(nil)).Elem(), MonitoringScheduleMonitoringJobDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringOutputInput)(nil)).Elem(), MonitoringScheduleMonitoringOutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringOutputArrayInput)(nil)).Elem(), MonitoringScheduleMonitoringOutputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringOutputConfigInput)(nil)).Elem(), MonitoringScheduleMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringOutputConfigPtrInput)(nil)).Elem(), MonitoringScheduleMonitoringOutputConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringResourcesInput)(nil)).Elem(), MonitoringScheduleMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleMonitoringResourcesPtrInput)(nil)).Elem(), MonitoringScheduleMonitoringResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleNetworkConfigInput)(nil)).Elem(), MonitoringScheduleNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleNetworkConfigPtrInput)(nil)).Elem(), MonitoringScheduleNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleS3OutputInput)(nil)).Elem(), MonitoringScheduleS3OutputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleScheduleConfigInput)(nil)).Elem(), MonitoringScheduleScheduleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleScheduleConfigPtrInput)(nil)).Elem(), MonitoringScheduleScheduleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleStatisticsResourceInput)(nil)).Elem(), MonitoringScheduleStatisticsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleStatisticsResourcePtrInput)(nil)).Elem(), MonitoringScheduleStatisticsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleStoppingConditionInput)(nil)).Elem(), MonitoringScheduleStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleStoppingConditionPtrInput)(nil)).Elem(), MonitoringScheduleStoppingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleTagInput)(nil)).Elem(), MonitoringScheduleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleTagArrayInput)(nil)).Elem(), MonitoringScheduleTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleVpcConfigInput)(nil)).Elem(), MonitoringScheduleVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringScheduleVpcConfigPtrInput)(nil)).Elem(), MonitoringScheduleVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfigurationInput)(nil)).Elem(), NotebookInstanceInstanceMetadataServiceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfigurationPtrInput)(nil)).Elem(), NotebookInstanceInstanceMetadataServiceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookInput)(nil)).Elem(), NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayInput)(nil)).Elem(), NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceTagInput)(nil)).Elem(), NotebookInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotebookInstanceTagArrayInput)(nil)).Elem(), NotebookInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OfflineStoreConfigPropertiesInput)(nil)).Elem(), OfflineStoreConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OfflineStoreConfigPropertiesPtrInput)(nil)).Elem(), OfflineStoreConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineStoreConfigPropertiesInput)(nil)).Elem(), OnlineStoreConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineStoreConfigPropertiesPtrInput)(nil)).Elem(), OnlineStoreConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParallelismConfigurationPropertiesInput)(nil)).Elem(), ParallelismConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParallelismConfigurationPropertiesPtrInput)(nil)).Elem(), ParallelismConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagInput)(nil)).Elem(), PipelineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagArrayInput)(nil)).Elem(), PipelineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectProvisioningParameterInput)(nil)).Elem(), ProjectProvisioningParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectProvisioningParameterArrayInput)(nil)).Elem(), ProjectProvisioningParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagInput)(nil)).Elem(), ProjectTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagArrayInput)(nil)).Elem(), ProjectTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCatalogProvisionedProductDetailsPropertiesInput)(nil)).Elem(), ServiceCatalogProvisionedProductDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCatalogProvisionedProductDetailsPropertiesPtrInput)(nil)).Elem(), ServiceCatalogProvisionedProductDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCatalogProvisioningDetailsPropertiesInput)(nil)).Elem(), ServiceCatalogProvisioningDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceCustomImageInput)(nil)).Elem(), SpaceCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceCustomImageArrayInput)(nil)).Elem(), SpaceCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceJupyterServerAppSettingsInput)(nil)).Elem(), SpaceJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceJupyterServerAppSettingsPtrInput)(nil)).Elem(), SpaceJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceKernelGatewayAppSettingsInput)(nil)).Elem(), SpaceKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceKernelGatewayAppSettingsPtrInput)(nil)).Elem(), SpaceKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceResourceSpecInput)(nil)).Elem(), SpaceResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceResourceSpecPtrInput)(nil)).Elem(), SpaceResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceSettingsInput)(nil)).Elem(), SpaceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceSettingsPtrInput)(nil)).Elem(), SpaceSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceTagInput)(nil)).Elem(), SpaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpaceTagArrayInput)(nil)).Elem(), SpaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCodeEditorAppSettingsInput)(nil)).Elem(), UserProfileCodeEditorAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCodeEditorAppSettingsPtrInput)(nil)).Elem(), UserProfileCodeEditorAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCodeRepositoryInput)(nil)).Elem(), UserProfileCodeRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCodeRepositoryArrayInput)(nil)).Elem(), UserProfileCodeRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomFileSystemConfigInput)(nil)).Elem(), UserProfileCustomFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomFileSystemConfigArrayInput)(nil)).Elem(), UserProfileCustomFileSystemConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomImageInput)(nil)).Elem(), UserProfileCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomImageArrayInput)(nil)).Elem(), UserProfileCustomImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomPosixUserConfigInput)(nil)).Elem(), UserProfileCustomPosixUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileCustomPosixUserConfigPtrInput)(nil)).Elem(), UserProfileCustomPosixUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileDefaultEbsStorageSettingsInput)(nil)).Elem(), UserProfileDefaultEbsStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileDefaultEbsStorageSettingsPtrInput)(nil)).Elem(), UserProfileDefaultEbsStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileDefaultSpaceStorageSettingsInput)(nil)).Elem(), UserProfileDefaultSpaceStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileDefaultSpaceStorageSettingsPtrInput)(nil)).Elem(), UserProfileDefaultSpaceStorageSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileEfsFileSystemConfigInput)(nil)).Elem(), UserProfileEfsFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileEfsFileSystemConfigPtrInput)(nil)).Elem(), UserProfileEfsFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileJupyterLabAppSettingsInput)(nil)).Elem(), UserProfileJupyterLabAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileJupyterLabAppSettingsPtrInput)(nil)).Elem(), UserProfileJupyterLabAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileJupyterServerAppSettingsInput)(nil)).Elem(), UserProfileJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileJupyterServerAppSettingsPtrInput)(nil)).Elem(), UserProfileJupyterServerAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileKernelGatewayAppSettingsInput)(nil)).Elem(), UserProfileKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileKernelGatewayAppSettingsPtrInput)(nil)).Elem(), UserProfileKernelGatewayAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileRStudioServerProAppSettingsInput)(nil)).Elem(), UserProfileRStudioServerProAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileRStudioServerProAppSettingsPtrInput)(nil)).Elem(), UserProfileRStudioServerProAppSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileResourceSpecInput)(nil)).Elem(), UserProfileResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileResourceSpecPtrInput)(nil)).Elem(), UserProfileResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileSharingSettingsInput)(nil)).Elem(), UserProfileSharingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileSharingSettingsPtrInput)(nil)).Elem(), UserProfileSharingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileTagInput)(nil)).Elem(), UserProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileTagArrayInput)(nil)).Elem(), UserProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileUserSettingsInput)(nil)).Elem(), UserProfileUserSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProfileUserSettingsPtrInput)(nil)).Elem(), UserProfileUserSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamCognitoMemberDefinitionInput)(nil)).Elem(), WorkteamCognitoMemberDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamCognitoMemberDefinitionPtrInput)(nil)).Elem(), WorkteamCognitoMemberDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamMemberDefinitionInput)(nil)).Elem(), WorkteamMemberDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamMemberDefinitionArrayInput)(nil)).Elem(), WorkteamMemberDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamNotificationConfigurationInput)(nil)).Elem(), WorkteamNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamNotificationConfigurationPtrInput)(nil)).Elem(), WorkteamNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamOidcMemberDefinitionInput)(nil)).Elem(), WorkteamOidcMemberDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamOidcMemberDefinitionPtrInput)(nil)).Elem(), WorkteamOidcMemberDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamTagInput)(nil)).Elem(), WorkteamTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkteamTagArrayInput)(nil)).Elem(), WorkteamTagArray{})
	pulumi.RegisterOutputType(AppImageConfigFileSystemConfigOutput{})
	pulumi.RegisterOutputType(AppImageConfigFileSystemConfigPtrOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelGatewayImageConfigOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelGatewayImageConfigPtrOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelSpecOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelSpecArrayOutput{})
	pulumi.RegisterOutputType(AppImageConfigTagOutput{})
	pulumi.RegisterOutputType(AppImageConfigTagArrayOutput{})
	pulumi.RegisterOutputType(AppResourceSpecOutput{})
	pulumi.RegisterOutputType(AppResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(AppTagOutput{})
	pulumi.RegisterOutputType(AppTagArrayOutput{})
	pulumi.RegisterOutputType(CodeRepositoryGitConfigOutput{})
	pulumi.RegisterOutputType(CodeRepositoryGitConfigPtrOutput{})
	pulumi.RegisterOutputType(CodeRepositoryTagOutput{})
	pulumi.RegisterOutputType(CodeRepositoryTagArrayOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionBatchTransformInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionBatchTransformInputPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionClusterConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionConstraintsResourceOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionConstraintsResourcePtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionCsvOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionCsvPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityAppSpecificationOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityBaselineConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDatasetFormatOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionEndpointInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionEndpointInputPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionJsonOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionJsonPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionMonitoringOutputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionMonitoringOutputArrayOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionMonitoringOutputConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionMonitoringResourcesOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionNetworkConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionS3OutputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionStatisticsResourceOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionStatisticsResourcePtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionStoppingConditionOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionStoppingConditionPtrOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionTagOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionTagArrayOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionVpcConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(DeviceTypeOutput{})
	pulumi.RegisterOutputType(DeviceTypePtrOutput{})
	pulumi.RegisterOutputType(DeviceFleetEdgeOutputConfigOutput{})
	pulumi.RegisterOutputType(DeviceFleetEdgeOutputConfigPtrOutput{})
	pulumi.RegisterOutputType(DeviceFleetTagOutput{})
	pulumi.RegisterOutputType(DeviceFleetTagArrayOutput{})
	pulumi.RegisterOutputType(DeviceTagOutput{})
	pulumi.RegisterOutputType(DeviceTagArrayOutput{})
	pulumi.RegisterOutputType(DomainCodeEditorAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainCodeEditorAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainCodeRepositoryOutput{})
	pulumi.RegisterOutputType(DomainCodeRepositoryArrayOutput{})
	pulumi.RegisterOutputType(DomainCustomFileSystemConfigOutput{})
	pulumi.RegisterOutputType(DomainCustomFileSystemConfigArrayOutput{})
	pulumi.RegisterOutputType(DomainCustomImageOutput{})
	pulumi.RegisterOutputType(DomainCustomImageArrayOutput{})
	pulumi.RegisterOutputType(DomainCustomPosixUserConfigOutput{})
	pulumi.RegisterOutputType(DomainCustomPosixUserConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainDefaultEbsStorageSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultEbsStorageSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceStorageSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceStorageSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainEfsFileSystemConfigOutput{})
	pulumi.RegisterOutputType(DomainEfsFileSystemConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainJupyterLabAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainJupyterLabAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainJupyterServerAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainKernelGatewayAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainRSessionAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainRSessionAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainRStudioServerProAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainRStudioServerProAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainRStudioServerProDomainSettingsOutput{})
	pulumi.RegisterOutputType(DomainRStudioServerProDomainSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(DomainSettingsOutput{})
	pulumi.RegisterOutputType(DomainSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainSharingSettingsOutput{})
	pulumi.RegisterOutputType(DomainSharingSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainTagOutput{})
	pulumi.RegisterOutputType(DomainTagArrayOutput{})
	pulumi.RegisterOutputType(DomainUserSettingsOutput{})
	pulumi.RegisterOutputType(DomainUserSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointAlarmOutput{})
	pulumi.RegisterOutputType(EndpointAlarmArrayOutput{})
	pulumi.RegisterOutputType(EndpointAutoRollbackConfigOutput{})
	pulumi.RegisterOutputType(EndpointAutoRollbackConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointBlueGreenUpdatePolicyOutput{})
	pulumi.RegisterOutputType(EndpointBlueGreenUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointCapacitySizeOutput{})
	pulumi.RegisterOutputType(EndpointCapacitySizePtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceClientConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceClientConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceNotificationConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceNotificationConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceOutputConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigAsyncInferenceOutputConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigCaptureContentTypeHeaderOutput{})
	pulumi.RegisterOutputType(EndpointConfigCaptureContentTypeHeaderPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigCaptureOptionOutput{})
	pulumi.RegisterOutputType(EndpointConfigCaptureOptionArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyExplainerConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyExplainerConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyFeatureTypeOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyFeatureTypeArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyHeaderOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyHeaderArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyInferenceConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyInferenceConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyShapBaselineConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyShapBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyShapConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyShapConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyTextConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigClarifyTextConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigDataCaptureConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigDataCaptureConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigExplainerConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigExplainerConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigManagedInstanceScalingOutput{})
	pulumi.RegisterOutputType(EndpointConfigManagedInstanceScalingPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigProductionVariantOutput{})
	pulumi.RegisterOutputType(EndpointConfigProductionVariantArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigRoutingConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigServerlessConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigServerlessConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointConfigTagOutput{})
	pulumi.RegisterOutputType(EndpointConfigTagArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigVpcConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointRollingUpdatePolicyOutput{})
	pulumi.RegisterOutputType(EndpointRollingUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointTagOutput{})
	pulumi.RegisterOutputType(EndpointTagArrayOutput{})
	pulumi.RegisterOutputType(EndpointTrafficRoutingConfigOutput{})
	pulumi.RegisterOutputType(EndpointTrafficRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(EndpointVariantPropertyOutput{})
	pulumi.RegisterOutputType(EndpointVariantPropertyArrayOutput{})
	pulumi.RegisterOutputType(FeatureGroupDataCatalogConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupDataCatalogConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureGroupFeatureDefinitionOutput{})
	pulumi.RegisterOutputType(FeatureGroupFeatureDefinitionArrayOutput{})
	pulumi.RegisterOutputType(FeatureGroupOnlineStoreSecurityConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupOnlineStoreSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureGroupS3StorageConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupS3StorageConfigPtrOutput{})
	pulumi.RegisterOutputType(FeatureGroupTagOutput{})
	pulumi.RegisterOutputType(FeatureGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ImageTagOutput{})
	pulumi.RegisterOutputType(ImageTagArrayOutput{})
	pulumi.RegisterOutputType(InferenceComponentComputeResourceRequirementsOutput{})
	pulumi.RegisterOutputType(InferenceComponentComputeResourceRequirementsPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentContainerSpecificationOutput{})
	pulumi.RegisterOutputType(InferenceComponentContainerSpecificationPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentDeployedImageOutput{})
	pulumi.RegisterOutputType(InferenceComponentDeployedImagePtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentEnvironmentMapOutput{})
	pulumi.RegisterOutputType(InferenceComponentEnvironmentMapPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentRuntimeConfigOutput{})
	pulumi.RegisterOutputType(InferenceComponentRuntimeConfigPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentSpecificationOutput{})
	pulumi.RegisterOutputType(InferenceComponentSpecificationPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentStartupParametersOutput{})
	pulumi.RegisterOutputType(InferenceComponentStartupParametersPtrOutput{})
	pulumi.RegisterOutputType(InferenceComponentTagOutput{})
	pulumi.RegisterOutputType(InferenceComponentTagArrayOutput{})
	pulumi.RegisterOutputType(InferenceExperimentCaptureContentTypeHeaderOutput{})
	pulumi.RegisterOutputType(InferenceExperimentCaptureContentTypeHeaderPtrOutput{})
	pulumi.RegisterOutputType(InferenceExperimentDataStorageConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentDataStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(InferenceExperimentEndpointMetadataOutput{})
	pulumi.RegisterOutputType(InferenceExperimentEndpointMetadataPtrOutput{})
	pulumi.RegisterOutputType(InferenceExperimentModelInfrastructureConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentModelVariantConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentModelVariantConfigArrayOutput{})
	pulumi.RegisterOutputType(InferenceExperimentRealTimeInferenceConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentScheduleOutput{})
	pulumi.RegisterOutputType(InferenceExperimentSchedulePtrOutput{})
	pulumi.RegisterOutputType(InferenceExperimentShadowModeConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentShadowModeConfigPtrOutput{})
	pulumi.RegisterOutputType(InferenceExperimentShadowModelVariantConfigOutput{})
	pulumi.RegisterOutputType(InferenceExperimentShadowModelVariantConfigArrayOutput{})
	pulumi.RegisterOutputType(InferenceExperimentTagOutput{})
	pulumi.RegisterOutputType(InferenceExperimentTagArrayOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionBatchTransformInputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionBatchTransformInputPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionClusterConfigOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionConstraintsResourceOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionConstraintsResourcePtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionCsvOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionCsvPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionDatasetFormatOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionDatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionEndpointInputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionEndpointInputPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionJsonOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionJsonPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionModelBiasAppSpecificationOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionModelBiasBaselineConfigOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionModelBiasBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionModelBiasJobInputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionMonitoringGroundTruthS3InputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionMonitoringOutputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionMonitoringOutputArrayOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionMonitoringOutputConfigOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionMonitoringResourcesOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionNetworkConfigOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionS3OutputOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionStoppingConditionOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionStoppingConditionPtrOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionTagOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionTagArrayOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionVpcConfigOutput{})
	pulumi.RegisterOutputType(ModelBiasJobDefinitionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelCardAdditionalInformationOutput{})
	pulumi.RegisterOutputType(ModelCardAdditionalInformationPtrOutput{})
	pulumi.RegisterOutputType(ModelCardBusinessDetailsOutput{})
	pulumi.RegisterOutputType(ModelCardBusinessDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelCardContainerOutput{})
	pulumi.RegisterOutputType(ModelCardContainerArrayOutput{})
	pulumi.RegisterOutputType(ModelCardContentOutput{})
	pulumi.RegisterOutputType(ModelCardContentPtrOutput{})
	pulumi.RegisterOutputType(ModelCardEvaluationDetailOutput{})
	pulumi.RegisterOutputType(ModelCardEvaluationDetailArrayOutput{})
	pulumi.RegisterOutputType(ModelCardInferenceSpecificationOutput{})
	pulumi.RegisterOutputType(ModelCardInferenceSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ModelCardIntendedUsesOutput{})
	pulumi.RegisterOutputType(ModelCardIntendedUsesPtrOutput{})
	pulumi.RegisterOutputType(ModelCardMetricGroupOutput{})
	pulumi.RegisterOutputType(ModelCardMetricGroupArrayOutput{})
	pulumi.RegisterOutputType(ModelCardModelOverviewOutput{})
	pulumi.RegisterOutputType(ModelCardModelOverviewPtrOutput{})
	pulumi.RegisterOutputType(ModelCardModelOverviewInferenceEnvironmentPropertiesOutput{})
	pulumi.RegisterOutputType(ModelCardModelOverviewInferenceEnvironmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelCardModelPackageCreatorOutput{})
	pulumi.RegisterOutputType(ModelCardModelPackageCreatorPtrOutput{})
	pulumi.RegisterOutputType(ModelCardModelPackageDetailsOutput{})
	pulumi.RegisterOutputType(ModelCardModelPackageDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelCardObjectiveFunctionOutput{})
	pulumi.RegisterOutputType(ModelCardObjectiveFunctionPtrOutput{})
	pulumi.RegisterOutputType(ModelCardObjectiveFunctionFunctionPropertiesOutput{})
	pulumi.RegisterOutputType(ModelCardObjectiveFunctionFunctionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelCardSecurityConfigOutput{})
	pulumi.RegisterOutputType(ModelCardSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelCardSourceAlgorithmOutput{})
	pulumi.RegisterOutputType(ModelCardSourceAlgorithmArrayOutput{})
	pulumi.RegisterOutputType(ModelCardTagOutput{})
	pulumi.RegisterOutputType(ModelCardTagArrayOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsTrainingJobDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsTrainingJobDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingDetailsTrainingJobDetailsPropertiesTrainingEnvironmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingHyperParameterOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingHyperParameterArrayOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingMetricOutput{})
	pulumi.RegisterOutputType(ModelCardTrainingMetricArrayOutput{})
	pulumi.RegisterOutputType(ModelCardUserContextOutput{})
	pulumi.RegisterOutputType(ModelCardUserContextPtrOutput{})
	pulumi.RegisterOutputType(ModelContainerDefinitionOutput{})
	pulumi.RegisterOutputType(ModelContainerDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ModelContainerDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ModelDataSourceOutput{})
	pulumi.RegisterOutputType(ModelDataSourcePtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionBatchTransformInputOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionBatchTransformInputPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionClusterConfigOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionConstraintsResourceOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionConstraintsResourcePtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionCsvOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionCsvPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionDatasetFormatOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionDatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionEndpointInputOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionEndpointInputPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionJsonOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionJsonPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionModelExplainabilityAppSpecificationOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionModelExplainabilityJobInputOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionMonitoringOutputOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionMonitoringOutputArrayOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionMonitoringOutputConfigOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionMonitoringResourcesOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionNetworkConfigOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionS3OutputOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionStoppingConditionOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionStoppingConditionPtrOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionTagOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionTagArrayOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionVpcConfigOutput{})
	pulumi.RegisterOutputType(ModelExplainabilityJobDefinitionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelImageConfigOutput{})
	pulumi.RegisterOutputType(ModelImageConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelInferenceExecutionConfigOutput{})
	pulumi.RegisterOutputType(ModelInferenceExecutionConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelMultiModelConfigOutput{})
	pulumi.RegisterOutputType(ModelMultiModelConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageAdditionalInferenceSpecificationDefinitionOutput{})
	pulumi.RegisterOutputType(ModelPackageAdditionalInferenceSpecificationDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageBiasOutput{})
	pulumi.RegisterOutputType(ModelPackageBiasPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageContainerDefinitionOutput{})
	pulumi.RegisterOutputType(ModelPackageContainerDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageContainerDefinitionModelInputPropertiesOutput{})
	pulumi.RegisterOutputType(ModelPackageContainerDefinitionModelInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageCustomerMetadataPropertiesOutput{})
	pulumi.RegisterOutputType(ModelPackageCustomerMetadataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageDataSourceOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckBaselinesOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckBaselinesPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckBiasOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckBiasPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckExplainabilityOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckExplainabilityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckModelDataQualityOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckModelDataQualityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckModelQualityOutput{})
	pulumi.RegisterOutputType(ModelPackageDriftCheckModelQualityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageEnvironmentOutput{})
	pulumi.RegisterOutputType(ModelPackageEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageExplainabilityOutput{})
	pulumi.RegisterOutputType(ModelPackageExplainabilityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageFileSourceOutput{})
	pulumi.RegisterOutputType(ModelPackageFileSourcePtrOutput{})
	pulumi.RegisterOutputType(ModelPackageGroupTagOutput{})
	pulumi.RegisterOutputType(ModelPackageGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageInferenceSpecificationOutput{})
	pulumi.RegisterOutputType(ModelPackageInferenceSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageMetadataPropertiesOutput{})
	pulumi.RegisterOutputType(ModelPackageMetadataPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageMetricsSourceOutput{})
	pulumi.RegisterOutputType(ModelPackageMetricsSourcePtrOutput{})
	pulumi.RegisterOutputType(ModelPackageModelDataQualityOutput{})
	pulumi.RegisterOutputType(ModelPackageModelDataQualityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageModelMetricsOutput{})
	pulumi.RegisterOutputType(ModelPackageModelMetricsPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageModelQualityOutput{})
	pulumi.RegisterOutputType(ModelPackageModelQualityPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageS3DataSourceOutput{})
	pulumi.RegisterOutputType(ModelPackageSourceAlgorithmOutput{})
	pulumi.RegisterOutputType(ModelPackageSourceAlgorithmArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageSourceAlgorithmSpecificationOutput{})
	pulumi.RegisterOutputType(ModelPackageSourceAlgorithmSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageStatusDetailsOutput{})
	pulumi.RegisterOutputType(ModelPackageStatusDetailsPtrOutput{})
	pulumi.RegisterOutputType(ModelPackageStatusItemOutput{})
	pulumi.RegisterOutputType(ModelPackageStatusItemArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageTagOutput{})
	pulumi.RegisterOutputType(ModelPackageTagArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageTransformInputOutput{})
	pulumi.RegisterOutputType(ModelPackageTransformJobDefinitionOutput{})
	pulumi.RegisterOutputType(ModelPackageTransformOutputOutput{})
	pulumi.RegisterOutputType(ModelPackageTransformResourcesOutput{})
	pulumi.RegisterOutputType(ModelPackageValidationProfileOutput{})
	pulumi.RegisterOutputType(ModelPackageValidationProfileArrayOutput{})
	pulumi.RegisterOutputType(ModelPackageValidationSpecificationOutput{})
	pulumi.RegisterOutputType(ModelPackageValidationSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionBatchTransformInputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionBatchTransformInputPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionClusterConfigOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionConstraintsResourceOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionConstraintsResourcePtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionCsvOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionCsvPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionDatasetFormatOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionDatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionEndpointInputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionEndpointInputPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionJsonOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionJsonPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionModelQualityAppSpecificationOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionModelQualityBaselineConfigOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionModelQualityBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionModelQualityJobInputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionMonitoringGroundTruthS3InputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionMonitoringOutputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionMonitoringOutputArrayOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionMonitoringOutputConfigOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionMonitoringResourcesOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionNetworkConfigOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionS3OutputOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionStoppingConditionOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionStoppingConditionPtrOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionTagOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionTagArrayOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionVpcConfigOutput{})
	pulumi.RegisterOutputType(ModelQualityJobDefinitionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelRepositoryAuthConfigOutput{})
	pulumi.RegisterOutputType(ModelRepositoryAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(ModelS3DataSourceOutput{})
	pulumi.RegisterOutputType(ModelS3DataSourcePtrOutput{})
	pulumi.RegisterOutputType(ModelTagOutput{})
	pulumi.RegisterOutputType(ModelTagArrayOutput{})
	pulumi.RegisterOutputType(ModelVpcConfigOutput{})
	pulumi.RegisterOutputType(ModelVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleBaselineConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleBaselineConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleBatchTransformInputOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleBatchTransformInputPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleClusterConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleConstraintsResourceOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleConstraintsResourcePtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleCsvOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleCsvPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleDatasetFormatOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleDatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleEndpointInputOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleEndpointInputPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleJsonOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleJsonPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringAppSpecificationOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringAppSpecificationPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringExecutionSummaryOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringExecutionSummaryPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringInputOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringInputArrayOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringJobDefinitionOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringJobDefinitionPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringOutputOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringOutputArrayOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringOutputConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringOutputConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringResourcesOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringResourcesPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleNetworkConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleS3OutputOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleScheduleConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleScheduleConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleStatisticsResourceOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleStatisticsResourcePtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleStoppingConditionOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleStoppingConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleTagOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleTagArrayOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleVpcConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(NotebookInstanceInstanceMetadataServiceConfigurationOutput{})
	pulumi.RegisterOutputType(NotebookInstanceInstanceMetadataServiceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookOutput{})
	pulumi.RegisterOutputType(NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHookArrayOutput{})
	pulumi.RegisterOutputType(NotebookInstanceTagOutput{})
	pulumi.RegisterOutputType(NotebookInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(OfflineStoreConfigPropertiesOutput{})
	pulumi.RegisterOutputType(OfflineStoreConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OnlineStoreConfigPropertiesOutput{})
	pulumi.RegisterOutputType(OnlineStoreConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ParallelismConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(ParallelismConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PipelineTagOutput{})
	pulumi.RegisterOutputType(PipelineTagArrayOutput{})
	pulumi.RegisterOutputType(ProjectProvisioningParameterOutput{})
	pulumi.RegisterOutputType(ProjectProvisioningParameterArrayOutput{})
	pulumi.RegisterOutputType(ProjectTagOutput{})
	pulumi.RegisterOutputType(ProjectTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceCatalogProvisionedProductDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(ServiceCatalogProvisionedProductDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ServiceCatalogProvisioningDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(SpaceCustomImageOutput{})
	pulumi.RegisterOutputType(SpaceCustomImageArrayOutput{})
	pulumi.RegisterOutputType(SpaceJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(SpaceJupyterServerAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(SpaceKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(SpaceKernelGatewayAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(SpaceResourceSpecOutput{})
	pulumi.RegisterOutputType(SpaceResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(SpaceSettingsOutput{})
	pulumi.RegisterOutputType(SpaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(SpaceTagOutput{})
	pulumi.RegisterOutputType(SpaceTagArrayOutput{})
	pulumi.RegisterOutputType(UserProfileCodeEditorAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileCodeEditorAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileCodeRepositoryOutput{})
	pulumi.RegisterOutputType(UserProfileCodeRepositoryArrayOutput{})
	pulumi.RegisterOutputType(UserProfileCustomFileSystemConfigOutput{})
	pulumi.RegisterOutputType(UserProfileCustomFileSystemConfigArrayOutput{})
	pulumi.RegisterOutputType(UserProfileCustomImageOutput{})
	pulumi.RegisterOutputType(UserProfileCustomImageArrayOutput{})
	pulumi.RegisterOutputType(UserProfileCustomPosixUserConfigOutput{})
	pulumi.RegisterOutputType(UserProfileCustomPosixUserConfigPtrOutput{})
	pulumi.RegisterOutputType(UserProfileDefaultEbsStorageSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileDefaultEbsStorageSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileDefaultSpaceStorageSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileDefaultSpaceStorageSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileEfsFileSystemConfigOutput{})
	pulumi.RegisterOutputType(UserProfileEfsFileSystemConfigPtrOutput{})
	pulumi.RegisterOutputType(UserProfileJupyterLabAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileJupyterLabAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileJupyterServerAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileKernelGatewayAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileRStudioServerProAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileRStudioServerProAppSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileResourceSpecOutput{})
	pulumi.RegisterOutputType(UserProfileResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(UserProfileSharingSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileSharingSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserProfileTagOutput{})
	pulumi.RegisterOutputType(UserProfileTagArrayOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsPtrOutput{})
	pulumi.RegisterOutputType(WorkteamCognitoMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamCognitoMemberDefinitionPtrOutput{})
	pulumi.RegisterOutputType(WorkteamMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamMemberDefinitionArrayOutput{})
	pulumi.RegisterOutputType(WorkteamNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(WorkteamNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkteamOidcMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamOidcMemberDefinitionPtrOutput{})
	pulumi.RegisterOutputType(WorkteamTagOutput{})
	pulumi.RegisterOutputType(WorkteamTagArrayOutput{})
}
