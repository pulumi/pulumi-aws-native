// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::PartnerApp
func LookupPartnerApp(ctx *pulumi.Context, args *LookupPartnerAppArgs, opts ...pulumi.InvokeOption) (*LookupPartnerAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPartnerAppResult
	err := ctx.Invoke("aws-native:sagemaker:getPartnerApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPartnerAppArgs struct {
	// The Amazon Resource Name (ARN) of the created PartnerApp.
	Arn string `pulumi:"arn"`
}

type LookupPartnerAppResult struct {
	// A collection of settings that specify the maintenance schedule for the PartnerApp.
	ApplicationConfig *PartnerAppConfig `pulumi:"applicationConfig"`
	// The Amazon Resource Name (ARN) of the created PartnerApp.
	Arn *string `pulumi:"arn"`
	// The AppServerUrl based on app and account-info.
	BaseUrl *string `pulumi:"baseUrl"`
	// Enables IAM Session based Identity for PartnerApp.
	EnableIamSessionBasedIdentity *bool `pulumi:"enableIamSessionBasedIdentity"`
	// A collection of settings that specify the maintenance schedule for the PartnerApp.
	MaintenanceConfig *PartnerAppMaintenanceConfig `pulumi:"maintenanceConfig"`
	// A list of tags to apply to the PartnerApp.
	Tags []aws.Tag `pulumi:"tags"`
	// The tier of the PartnerApp.
	Tier *string `pulumi:"tier"`
}

func LookupPartnerAppOutput(ctx *pulumi.Context, args LookupPartnerAppOutputArgs, opts ...pulumi.InvokeOption) LookupPartnerAppResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPartnerAppResultOutput, error) {
			args := v.(LookupPartnerAppArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:sagemaker:getPartnerApp", args, LookupPartnerAppResultOutput{}, options).(LookupPartnerAppResultOutput), nil
		}).(LookupPartnerAppResultOutput)
}

type LookupPartnerAppOutputArgs struct {
	// The Amazon Resource Name (ARN) of the created PartnerApp.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupPartnerAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPartnerAppArgs)(nil)).Elem()
}

type LookupPartnerAppResultOutput struct{ *pulumi.OutputState }

func (LookupPartnerAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPartnerAppResult)(nil)).Elem()
}

func (o LookupPartnerAppResultOutput) ToLookupPartnerAppResultOutput() LookupPartnerAppResultOutput {
	return o
}

func (o LookupPartnerAppResultOutput) ToLookupPartnerAppResultOutputWithContext(ctx context.Context) LookupPartnerAppResultOutput {
	return o
}

// A collection of settings that specify the maintenance schedule for the PartnerApp.
func (o LookupPartnerAppResultOutput) ApplicationConfig() PartnerAppConfigPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *PartnerAppConfig { return v.ApplicationConfig }).(PartnerAppConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the created PartnerApp.
func (o LookupPartnerAppResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The AppServerUrl based on app and account-info.
func (o LookupPartnerAppResultOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

// Enables IAM Session based Identity for PartnerApp.
func (o LookupPartnerAppResultOutput) EnableIamSessionBasedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *bool { return v.EnableIamSessionBasedIdentity }).(pulumi.BoolPtrOutput)
}

// A collection of settings that specify the maintenance schedule for the PartnerApp.
func (o LookupPartnerAppResultOutput) MaintenanceConfig() PartnerAppMaintenanceConfigPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *PartnerAppMaintenanceConfig { return v.MaintenanceConfig }).(PartnerAppMaintenanceConfigPtrOutput)
}

// A list of tags to apply to the PartnerApp.
func (o LookupPartnerAppResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The tier of the PartnerApp.
func (o LookupPartnerAppResultOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnerAppResult) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPartnerAppResultOutput{})
}
