// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html
type MonitoringSchedule struct {
	pulumi.CustomResourceState

	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-endpointname
	EndpointName pulumi.StringPtrOutput `pulumi:"endpointName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-failurereason
	FailureReason    pulumi.StringPtrOutput `pulumi:"failureReason"`
	LastModifiedTime pulumi.StringOutput    `pulumi:"lastModifiedTime"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary
	LastMonitoringExecutionSummary MonitoringScheduleMonitoringExecutionSummaryPtrOutput `pulumi:"lastMonitoringExecutionSummary"`
	MonitoringScheduleArn          pulumi.StringOutput                                   `pulumi:"monitoringScheduleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig
	MonitoringScheduleConfig MonitoringScheduleMonitoringScheduleConfigOutput `pulumi:"monitoringScheduleConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulename
	MonitoringScheduleName pulumi.StringOutput `pulumi:"monitoringScheduleName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulestatus
	MonitoringScheduleStatus pulumi.StringPtrOutput `pulumi:"monitoringScheduleStatus"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewMonitoringSchedule registers a new resource with the given unique name, arguments, and options.
func NewMonitoringSchedule(ctx *pulumi.Context,
	name string, args *MonitoringScheduleArgs, opts ...pulumi.ResourceOption) (*MonitoringSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MonitoringScheduleConfig == nil {
		return nil, errors.New("invalid value for required argument 'MonitoringScheduleConfig'")
	}
	if args.MonitoringScheduleName == nil {
		return nil, errors.New("invalid value for required argument 'MonitoringScheduleName'")
	}
	var resource MonitoringSchedule
	err := ctx.RegisterResource("aws-native:sagemaker:MonitoringSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitoringSchedule gets an existing MonitoringSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitoringSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitoringScheduleState, opts ...pulumi.ResourceOption) (*MonitoringSchedule, error) {
	var resource MonitoringSchedule
	err := ctx.ReadResource("aws-native:sagemaker:MonitoringSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitoringSchedule resources.
type monitoringScheduleState struct {
}

type MonitoringScheduleState struct {
}

func (MonitoringScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringScheduleState)(nil)).Elem()
}

type monitoringScheduleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-endpointname
	EndpointName *string `pulumi:"endpointName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-failurereason
	FailureReason *string `pulumi:"failureReason"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary
	LastMonitoringExecutionSummary *MonitoringScheduleMonitoringExecutionSummary `pulumi:"lastMonitoringExecutionSummary"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig
	MonitoringScheduleConfig MonitoringScheduleMonitoringScheduleConfig `pulumi:"monitoringScheduleConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulename
	MonitoringScheduleName string `pulumi:"monitoringScheduleName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulestatus
	MonitoringScheduleStatus *string `pulumi:"monitoringScheduleStatus"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a MonitoringSchedule resource.
type MonitoringScheduleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-endpointname
	EndpointName pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-failurereason
	FailureReason pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary
	LastMonitoringExecutionSummary MonitoringScheduleMonitoringExecutionSummaryPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig
	MonitoringScheduleConfig MonitoringScheduleMonitoringScheduleConfigInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulename
	MonitoringScheduleName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulestatus
	MonitoringScheduleStatus pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-tags
	Tags aws.TagArrayInput
}

func (MonitoringScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringScheduleArgs)(nil)).Elem()
}

type MonitoringScheduleInput interface {
	pulumi.Input

	ToMonitoringScheduleOutput() MonitoringScheduleOutput
	ToMonitoringScheduleOutputWithContext(ctx context.Context) MonitoringScheduleOutput
}

func (*MonitoringSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSchedule)(nil))
}

func (i *MonitoringSchedule) ToMonitoringScheduleOutput() MonitoringScheduleOutput {
	return i.ToMonitoringScheduleOutputWithContext(context.Background())
}

func (i *MonitoringSchedule) ToMonitoringScheduleOutputWithContext(ctx context.Context) MonitoringScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleOutput)
}

type MonitoringScheduleOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSchedule)(nil))
}

func (o MonitoringScheduleOutput) ToMonitoringScheduleOutput() MonitoringScheduleOutput {
	return o
}

func (o MonitoringScheduleOutput) ToMonitoringScheduleOutputWithContext(ctx context.Context) MonitoringScheduleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MonitoringScheduleOutput{})
}
