// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html
type AppImageConfig struct {
	pulumi.CustomResourceState

	AppImageConfigArn pulumi.StringOutput `pulumi:"appImageConfigArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-appimageconfigname
	AppImageConfigName pulumi.StringOutput `pulumi:"appImageConfigName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig
	KernelGatewayImageConfig AppImageConfigKernelGatewayImageConfigPtrOutput `pulumi:"kernelGatewayImageConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewAppImageConfig registers a new resource with the given unique name, arguments, and options.
func NewAppImageConfig(ctx *pulumi.Context,
	name string, args *AppImageConfigArgs, opts ...pulumi.ResourceOption) (*AppImageConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppImageConfigName == nil {
		return nil, errors.New("invalid value for required argument 'AppImageConfigName'")
	}
	var resource AppImageConfig
	err := ctx.RegisterResource("aws-native:sagemaker:AppImageConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppImageConfig gets an existing AppImageConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppImageConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppImageConfigState, opts ...pulumi.ResourceOption) (*AppImageConfig, error) {
	var resource AppImageConfig
	err := ctx.ReadResource("aws-native:sagemaker:AppImageConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppImageConfig resources.
type appImageConfigState struct {
}

type AppImageConfigState struct {
}

func (AppImageConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*appImageConfigState)(nil)).Elem()
}

type appImageConfigArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-appimageconfigname
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig
	KernelGatewayImageConfig *AppImageConfigKernelGatewayImageConfig `pulumi:"kernelGatewayImageConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a AppImageConfig resource.
type AppImageConfigArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-appimageconfigname
	AppImageConfigName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig
	KernelGatewayImageConfig AppImageConfigKernelGatewayImageConfigPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-tags
	Tags aws.TagArrayInput
}

func (AppImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appImageConfigArgs)(nil)).Elem()
}

type AppImageConfigInput interface {
	pulumi.Input

	ToAppImageConfigOutput() AppImageConfigOutput
	ToAppImageConfigOutputWithContext(ctx context.Context) AppImageConfigOutput
}

func (*AppImageConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfig)(nil))
}

func (i *AppImageConfig) ToAppImageConfigOutput() AppImageConfigOutput {
	return i.ToAppImageConfigOutputWithContext(context.Background())
}

func (i *AppImageConfig) ToAppImageConfigOutputWithContext(ctx context.Context) AppImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigOutput)
}

type AppImageConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfig)(nil))
}

func (o AppImageConfigOutput) ToAppImageConfigOutput() AppImageConfigOutput {
	return o
}

func (o AppImageConfigOutput) ToAppImageConfigOutputWithContext(ctx context.Context) AppImageConfigOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AppImageConfigOutput{})
}
