// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SageMaker::FeatureGroup
func LookupFeatureGroup(ctx *pulumi.Context, args *LookupFeatureGroupArgs, opts ...pulumi.InvokeOption) (*LookupFeatureGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFeatureGroupResult
	err := ctx.Invoke("aws-native:sagemaker:getFeatureGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeatureGroupArgs struct {
	// The Name of the FeatureGroup.
	FeatureGroupName string `pulumi:"featureGroupName"`
}

type LookupFeatureGroupResult struct {
	// An Array of Feature Definition
	FeatureDefinitions []FeatureGroupFeatureDefinition `pulumi:"featureDefinitions"`
}

func LookupFeatureGroupOutput(ctx *pulumi.Context, args LookupFeatureGroupOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureGroupResult, error) {
			args := v.(LookupFeatureGroupArgs)
			r, err := LookupFeatureGroup(ctx, &args, opts...)
			var s LookupFeatureGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFeatureGroupResultOutput)
}

type LookupFeatureGroupOutputArgs struct {
	// The Name of the FeatureGroup.
	FeatureGroupName pulumi.StringInput `pulumi:"featureGroupName"`
}

func (LookupFeatureGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureGroupArgs)(nil)).Elem()
}

type LookupFeatureGroupResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureGroupResult)(nil)).Elem()
}

func (o LookupFeatureGroupResultOutput) ToLookupFeatureGroupResultOutput() LookupFeatureGroupResultOutput {
	return o
}

func (o LookupFeatureGroupResultOutput) ToLookupFeatureGroupResultOutputWithContext(ctx context.Context) LookupFeatureGroupResultOutput {
	return o
}

// An Array of Feature Definition
func (o LookupFeatureGroupResultOutput) FeatureDefinitions() FeatureGroupFeatureDefinitionArrayOutput {
	return o.ApplyT(func(v LookupFeatureGroupResult) []FeatureGroupFeatureDefinition { return v.FeatureDefinitions }).(FeatureGroupFeatureDefinitionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureGroupResultOutput{})
}
