// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource schema for AWSLogs QueryDefinition
func LookupQueryDefinition(ctx *pulumi.Context, args *LookupQueryDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupQueryDefinitionResult, error) {
	var rv LookupQueryDefinitionResult
	err := ctx.Invoke("aws-native:logs:getQueryDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupQueryDefinitionArgs struct {
	// Unique identifier of a query definition
	QueryDefinitionId string `pulumi:"queryDefinitionId"`
}

type LookupQueryDefinitionResult struct {
	// Optionally define specific log groups as part of your query definition
	LogGroupNames []string `pulumi:"logGroupNames"`
	// A name for the saved query definition
	Name *string `pulumi:"name"`
	// Unique identifier of a query definition
	QueryDefinitionId *string `pulumi:"queryDefinitionId"`
	// The query string to use for this definition
	QueryString *string `pulumi:"queryString"`
}

func LookupQueryDefinitionOutput(ctx *pulumi.Context, args LookupQueryDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupQueryDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueryDefinitionResult, error) {
			args := v.(LookupQueryDefinitionArgs)
			r, err := LookupQueryDefinition(ctx, &args, opts...)
			var s LookupQueryDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueryDefinitionResultOutput)
}

type LookupQueryDefinitionOutputArgs struct {
	// Unique identifier of a query definition
	QueryDefinitionId pulumi.StringInput `pulumi:"queryDefinitionId"`
}

func (LookupQueryDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryDefinitionArgs)(nil)).Elem()
}

type LookupQueryDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupQueryDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueryDefinitionResult)(nil)).Elem()
}

func (o LookupQueryDefinitionResultOutput) ToLookupQueryDefinitionResultOutput() LookupQueryDefinitionResultOutput {
	return o
}

func (o LookupQueryDefinitionResultOutput) ToLookupQueryDefinitionResultOutputWithContext(ctx context.Context) LookupQueryDefinitionResultOutput {
	return o
}

// Optionally define specific log groups as part of your query definition
func (o LookupQueryDefinitionResultOutput) LogGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupQueryDefinitionResult) []string { return v.LogGroupNames }).(pulumi.StringArrayOutput)
}

// A name for the saved query definition
func (o LookupQueryDefinitionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueryDefinitionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of a query definition
func (o LookupQueryDefinitionResultOutput) QueryDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueryDefinitionResult) *string { return v.QueryDefinitionId }).(pulumi.StringPtrOutput)
}

// The query string to use for this definition
func (o LookupQueryDefinitionResultOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueryDefinitionResult) *string { return v.QueryString }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueryDefinitionResultOutput{})
}
