// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Logs::LogStream
func LookupLogStream(ctx *pulumi.Context, args *LookupLogStreamArgs, opts ...pulumi.InvokeOption) (*LookupLogStreamResult, error) {
	var rv LookupLogStreamResult
	err := ctx.Invoke("aws-native:logs:getLogStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLogStreamArgs struct {
	Id string `pulumi:"id"`
}

type LookupLogStreamResult struct {
	Id *string `pulumi:"id"`
}

func LookupLogStreamOutput(ctx *pulumi.Context, args LookupLogStreamOutputArgs, opts ...pulumi.InvokeOption) LookupLogStreamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogStreamResult, error) {
			args := v.(LookupLogStreamArgs)
			r, err := LookupLogStream(ctx, &args, opts...)
			var s LookupLogStreamResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLogStreamResultOutput)
}

type LookupLogStreamOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupLogStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogStreamArgs)(nil)).Elem()
}

type LookupLogStreamResultOutput struct{ *pulumi.OutputState }

func (LookupLogStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogStreamResult)(nil)).Elem()
}

func (o LookupLogStreamResultOutput) ToLookupLogStreamResultOutput() LookupLogStreamResultOutput {
	return o
}

func (o LookupLogStreamResultOutput) ToLookupLogStreamResultOutputWithContext(ctx context.Context) LookupLogStreamResultOutput {
	return o
}

func (o LookupLogStreamResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLogStreamResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogStreamResultOutput{})
}
