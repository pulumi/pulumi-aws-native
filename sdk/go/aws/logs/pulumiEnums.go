// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The unit to assign to the metric. If you omit this, the unit is set as None.
type MetricFilterMetricTransformationUnit string

const (
	MetricFilterMetricTransformationUnitSeconds         = MetricFilterMetricTransformationUnit("Seconds")
	MetricFilterMetricTransformationUnitMicroseconds    = MetricFilterMetricTransformationUnit("Microseconds")
	MetricFilterMetricTransformationUnitMilliseconds    = MetricFilterMetricTransformationUnit("Milliseconds")
	MetricFilterMetricTransformationUnitBytes           = MetricFilterMetricTransformationUnit("Bytes")
	MetricFilterMetricTransformationUnitKilobytes       = MetricFilterMetricTransformationUnit("Kilobytes")
	MetricFilterMetricTransformationUnitMegabytes       = MetricFilterMetricTransformationUnit("Megabytes")
	MetricFilterMetricTransformationUnitGigabytes       = MetricFilterMetricTransformationUnit("Gigabytes")
	MetricFilterMetricTransformationUnitTerabytes       = MetricFilterMetricTransformationUnit("Terabytes")
	MetricFilterMetricTransformationUnitBits            = MetricFilterMetricTransformationUnit("Bits")
	MetricFilterMetricTransformationUnitKilobits        = MetricFilterMetricTransformationUnit("Kilobits")
	MetricFilterMetricTransformationUnitMegabits        = MetricFilterMetricTransformationUnit("Megabits")
	MetricFilterMetricTransformationUnitGigabits        = MetricFilterMetricTransformationUnit("Gigabits")
	MetricFilterMetricTransformationUnitTerabits        = MetricFilterMetricTransformationUnit("Terabits")
	MetricFilterMetricTransformationUnitPercent         = MetricFilterMetricTransformationUnit("Percent")
	MetricFilterMetricTransformationUnitCount           = MetricFilterMetricTransformationUnit("Count")
	MetricFilterMetricTransformationUnitBytesSecond     = MetricFilterMetricTransformationUnit("Bytes/Second")
	MetricFilterMetricTransformationUnitKilobytesSecond = MetricFilterMetricTransformationUnit("Kilobytes/Second")
	MetricFilterMetricTransformationUnitMegabytesSecond = MetricFilterMetricTransformationUnit("Megabytes/Second")
	MetricFilterMetricTransformationUnitGigabytesSecond = MetricFilterMetricTransformationUnit("Gigabytes/Second")
	MetricFilterMetricTransformationUnitTerabytesSecond = MetricFilterMetricTransformationUnit("Terabytes/Second")
	MetricFilterMetricTransformationUnitBitsSecond      = MetricFilterMetricTransformationUnit("Bits/Second")
	MetricFilterMetricTransformationUnitKilobitsSecond  = MetricFilterMetricTransformationUnit("Kilobits/Second")
	MetricFilterMetricTransformationUnitMegabitsSecond  = MetricFilterMetricTransformationUnit("Megabits/Second")
	MetricFilterMetricTransformationUnitGigabitsSecond  = MetricFilterMetricTransformationUnit("Gigabits/Second")
	MetricFilterMetricTransformationUnitTerabitsSecond  = MetricFilterMetricTransformationUnit("Terabits/Second")
	MetricFilterMetricTransformationUnitCountSecond     = MetricFilterMetricTransformationUnit("Count/Second")
	MetricFilterMetricTransformationUnitNone            = MetricFilterMetricTransformationUnit("None")
)

func (MetricFilterMetricTransformationUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricFilterMetricTransformationUnit)(nil)).Elem()
}

func (e MetricFilterMetricTransformationUnit) ToMetricFilterMetricTransformationUnitOutput() MetricFilterMetricTransformationUnitOutput {
	return pulumi.ToOutput(e).(MetricFilterMetricTransformationUnitOutput)
}

func (e MetricFilterMetricTransformationUnit) ToMetricFilterMetricTransformationUnitOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetricFilterMetricTransformationUnitOutput)
}

func (e MetricFilterMetricTransformationUnit) ToMetricFilterMetricTransformationUnitPtrOutput() MetricFilterMetricTransformationUnitPtrOutput {
	return e.ToMetricFilterMetricTransformationUnitPtrOutputWithContext(context.Background())
}

func (e MetricFilterMetricTransformationUnit) ToMetricFilterMetricTransformationUnitPtrOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitPtrOutput {
	return MetricFilterMetricTransformationUnit(e).ToMetricFilterMetricTransformationUnitOutputWithContext(ctx).ToMetricFilterMetricTransformationUnitPtrOutputWithContext(ctx)
}

func (e MetricFilterMetricTransformationUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricFilterMetricTransformationUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetricFilterMetricTransformationUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetricFilterMetricTransformationUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetricFilterMetricTransformationUnitOutput struct{ *pulumi.OutputState }

func (MetricFilterMetricTransformationUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricFilterMetricTransformationUnit)(nil)).Elem()
}

func (o MetricFilterMetricTransformationUnitOutput) ToMetricFilterMetricTransformationUnitOutput() MetricFilterMetricTransformationUnitOutput {
	return o
}

func (o MetricFilterMetricTransformationUnitOutput) ToMetricFilterMetricTransformationUnitOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitOutput {
	return o
}

func (o MetricFilterMetricTransformationUnitOutput) ToMetricFilterMetricTransformationUnitPtrOutput() MetricFilterMetricTransformationUnitPtrOutput {
	return o.ToMetricFilterMetricTransformationUnitPtrOutputWithContext(context.Background())
}

func (o MetricFilterMetricTransformationUnitOutput) ToMetricFilterMetricTransformationUnitPtrOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricFilterMetricTransformationUnit) *MetricFilterMetricTransformationUnit {
		return &v
	}).(MetricFilterMetricTransformationUnitPtrOutput)
}

func (o MetricFilterMetricTransformationUnitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetricFilterMetricTransformationUnitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricFilterMetricTransformationUnit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetricFilterMetricTransformationUnitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricFilterMetricTransformationUnitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetricFilterMetricTransformationUnit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetricFilterMetricTransformationUnitPtrOutput struct{ *pulumi.OutputState }

func (MetricFilterMetricTransformationUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricFilterMetricTransformationUnit)(nil)).Elem()
}

func (o MetricFilterMetricTransformationUnitPtrOutput) ToMetricFilterMetricTransformationUnitPtrOutput() MetricFilterMetricTransformationUnitPtrOutput {
	return o
}

func (o MetricFilterMetricTransformationUnitPtrOutput) ToMetricFilterMetricTransformationUnitPtrOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitPtrOutput {
	return o
}

func (o MetricFilterMetricTransformationUnitPtrOutput) Elem() MetricFilterMetricTransformationUnitOutput {
	return o.ApplyT(func(v *MetricFilterMetricTransformationUnit) MetricFilterMetricTransformationUnit {
		if v != nil {
			return *v
		}
		var ret MetricFilterMetricTransformationUnit
		return ret
	}).(MetricFilterMetricTransformationUnitOutput)
}

func (o MetricFilterMetricTransformationUnitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetricFilterMetricTransformationUnitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetricFilterMetricTransformationUnit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetricFilterMetricTransformationUnitInput is an input type that accepts MetricFilterMetricTransformationUnitArgs and MetricFilterMetricTransformationUnitOutput values.
// You can construct a concrete instance of `MetricFilterMetricTransformationUnitInput` via:
//
//	MetricFilterMetricTransformationUnitArgs{...}
type MetricFilterMetricTransformationUnitInput interface {
	pulumi.Input

	ToMetricFilterMetricTransformationUnitOutput() MetricFilterMetricTransformationUnitOutput
	ToMetricFilterMetricTransformationUnitOutputWithContext(context.Context) MetricFilterMetricTransformationUnitOutput
}

var metricFilterMetricTransformationUnitPtrType = reflect.TypeOf((**MetricFilterMetricTransformationUnit)(nil)).Elem()

type MetricFilterMetricTransformationUnitPtrInput interface {
	pulumi.Input

	ToMetricFilterMetricTransformationUnitPtrOutput() MetricFilterMetricTransformationUnitPtrOutput
	ToMetricFilterMetricTransformationUnitPtrOutputWithContext(context.Context) MetricFilterMetricTransformationUnitPtrOutput
}

type metricFilterMetricTransformationUnitPtr string

func MetricFilterMetricTransformationUnitPtr(v string) MetricFilterMetricTransformationUnitPtrInput {
	return (*metricFilterMetricTransformationUnitPtr)(&v)
}

func (*metricFilterMetricTransformationUnitPtr) ElementType() reflect.Type {
	return metricFilterMetricTransformationUnitPtrType
}

func (in *metricFilterMetricTransformationUnitPtr) ToMetricFilterMetricTransformationUnitPtrOutput() MetricFilterMetricTransformationUnitPtrOutput {
	return pulumi.ToOutput(in).(MetricFilterMetricTransformationUnitPtrOutput)
}

func (in *metricFilterMetricTransformationUnitPtr) ToMetricFilterMetricTransformationUnitPtrOutputWithContext(ctx context.Context) MetricFilterMetricTransformationUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetricFilterMetricTransformationUnitPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MetricFilterMetricTransformationUnitInput)(nil)).Elem(), MetricFilterMetricTransformationUnit("Seconds"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetricFilterMetricTransformationUnitPtrInput)(nil)).Elem(), MetricFilterMetricTransformationUnit("Seconds"))
	pulumi.RegisterOutputType(MetricFilterMetricTransformationUnitOutput{})
	pulumi.RegisterOutputType(MetricFilterMetricTransformationUnitPtrOutput{})
}
