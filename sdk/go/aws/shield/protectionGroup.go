// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package shield

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A grouping of protected resources so they can be handled as a collective. This resource grouping improves the accuracy of detection and reduces false positives.
type ProtectionGroup struct {
	pulumi.CustomResourceState

	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	// * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
	// * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
	// * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
	Aggregation ProtectionGroupAggregationOutput `pulumi:"aggregation"`
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
	Pattern ProtectionGroupPatternOutput `pulumi:"pattern"`
	// The ARN (Amazon Resource Name) of the protection group.
	ProtectionGroupArn pulumi.StringOutput `pulumi:"protectionGroupArn"`
	// The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
	ProtectionGroupId pulumi.StringOutput `pulumi:"protectionGroupId"`
	// The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
	ResourceType ProtectionGroupResourceTypePtrOutput `pulumi:"resourceType"`
	// One or more tag key-value pairs for the Protection object.
	Tags ProtectionGroupTagArrayOutput `pulumi:"tags"`
}

// NewProtectionGroup registers a new resource with the given unique name, arguments, and options.
func NewProtectionGroup(ctx *pulumi.Context,
	name string, args *ProtectionGroupArgs, opts ...pulumi.ResourceOption) (*ProtectionGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Aggregation == nil {
		return nil, errors.New("invalid value for required argument 'Aggregation'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	if args.ProtectionGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ProtectionGroupId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"protectionGroupId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProtectionGroup
	err := ctx.RegisterResource("aws-native:shield:ProtectionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectionGroup gets an existing ProtectionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionGroupState, opts ...pulumi.ResourceOption) (*ProtectionGroup, error) {
	var resource ProtectionGroup
	err := ctx.ReadResource("aws-native:shield:ProtectionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectionGroup resources.
type protectionGroupState struct {
}

type ProtectionGroupState struct {
}

func (ProtectionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionGroupState)(nil)).Elem()
}

type protectionGroupArgs struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	// * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
	// * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
	// * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
	Aggregation ProtectionGroupAggregation `pulumi:"aggregation"`
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
	Members []string `pulumi:"members"`
	// The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
	Pattern ProtectionGroupPattern `pulumi:"pattern"`
	// The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
	ProtectionGroupId string `pulumi:"protectionGroupId"`
	// The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
	ResourceType *ProtectionGroupResourceType `pulumi:"resourceType"`
	// One or more tag key-value pairs for the Protection object.
	Tags []ProtectionGroupTag `pulumi:"tags"`
}

// The set of arguments for constructing a ProtectionGroup resource.
type ProtectionGroupArgs struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	// * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
	// * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
	// * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
	Aggregation ProtectionGroupAggregationInput
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
	Members pulumi.StringArrayInput
	// The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
	Pattern ProtectionGroupPatternInput
	// The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
	ProtectionGroupId pulumi.StringInput
	// The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
	ResourceType ProtectionGroupResourceTypePtrInput
	// One or more tag key-value pairs for the Protection object.
	Tags ProtectionGroupTagArrayInput
}

func (ProtectionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionGroupArgs)(nil)).Elem()
}

type ProtectionGroupInput interface {
	pulumi.Input

	ToProtectionGroupOutput() ProtectionGroupOutput
	ToProtectionGroupOutputWithContext(ctx context.Context) ProtectionGroupOutput
}

func (*ProtectionGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionGroup)(nil)).Elem()
}

func (i *ProtectionGroup) ToProtectionGroupOutput() ProtectionGroupOutput {
	return i.ToProtectionGroupOutputWithContext(context.Background())
}

func (i *ProtectionGroup) ToProtectionGroupOutputWithContext(ctx context.Context) ProtectionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionGroupOutput)
}

type ProtectionGroupOutput struct{ *pulumi.OutputState }

func (ProtectionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionGroup)(nil)).Elem()
}

func (o ProtectionGroupOutput) ToProtectionGroupOutput() ProtectionGroupOutput {
	return o
}

func (o ProtectionGroupOutput) ToProtectionGroupOutputWithContext(ctx context.Context) ProtectionGroupOutput {
	return o
}

// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
// * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
// * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
// * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
func (o ProtectionGroupOutput) Aggregation() ProtectionGroupAggregationOutput {
	return o.ApplyT(func(v *ProtectionGroup) ProtectionGroupAggregationOutput { return v.Aggregation }).(ProtectionGroupAggregationOutput)
}

// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
func (o ProtectionGroupOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProtectionGroup) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
func (o ProtectionGroupOutput) Pattern() ProtectionGroupPatternOutput {
	return o.ApplyT(func(v *ProtectionGroup) ProtectionGroupPatternOutput { return v.Pattern }).(ProtectionGroupPatternOutput)
}

// The ARN (Amazon Resource Name) of the protection group.
func (o ProtectionGroupOutput) ProtectionGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionGroup) pulumi.StringOutput { return v.ProtectionGroupArn }).(pulumi.StringOutput)
}

// The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
func (o ProtectionGroupOutput) ProtectionGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionGroup) pulumi.StringOutput { return v.ProtectionGroupId }).(pulumi.StringOutput)
}

// The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
func (o ProtectionGroupOutput) ResourceType() ProtectionGroupResourceTypePtrOutput {
	return o.ApplyT(func(v *ProtectionGroup) ProtectionGroupResourceTypePtrOutput { return v.ResourceType }).(ProtectionGroupResourceTypePtrOutput)
}

// One or more tag key-value pairs for the Protection object.
func (o ProtectionGroupOutput) Tags() ProtectionGroupTagArrayOutput {
	return o.ApplyT(func(v *ProtectionGroup) ProtectionGroupTagArrayOutput { return v.Tags }).(ProtectionGroupTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionGroupInput)(nil)).Elem(), &ProtectionGroup{})
	pulumi.RegisterOutputType(ProtectionGroupOutput{})
}
