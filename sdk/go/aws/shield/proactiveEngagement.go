// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package shield

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Authorizes the Shield Response Team (SRT) to use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
type ProactiveEngagement struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
	// To enable proactive engagement, the contact list must include at least one phone number.
	EmergencyContactList ProactiveEngagementEmergencyContactArrayOutput `pulumi:"emergencyContactList"`
	// If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
	// If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
	ProactiveEngagementStatus ProactiveEngagementStatusOutput `pulumi:"proactiveEngagementStatus"`
}

// NewProactiveEngagement registers a new resource with the given unique name, arguments, and options.
func NewProactiveEngagement(ctx *pulumi.Context,
	name string, args *ProactiveEngagementArgs, opts ...pulumi.ResourceOption) (*ProactiveEngagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmergencyContactList == nil {
		return nil, errors.New("invalid value for required argument 'EmergencyContactList'")
	}
	if args.ProactiveEngagementStatus == nil {
		return nil, errors.New("invalid value for required argument 'ProactiveEngagementStatus'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProactiveEngagement
	err := ctx.RegisterResource("aws-native:shield:ProactiveEngagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProactiveEngagement gets an existing ProactiveEngagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProactiveEngagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProactiveEngagementState, opts ...pulumi.ResourceOption) (*ProactiveEngagement, error) {
	var resource ProactiveEngagement
	err := ctx.ReadResource("aws-native:shield:ProactiveEngagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProactiveEngagement resources.
type proactiveEngagementState struct {
}

type ProactiveEngagementState struct {
}

func (ProactiveEngagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*proactiveEngagementState)(nil)).Elem()
}

type proactiveEngagementArgs struct {
	// A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
	// To enable proactive engagement, the contact list must include at least one phone number.
	EmergencyContactList []ProactiveEngagementEmergencyContact `pulumi:"emergencyContactList"`
	// If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
	// If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
	ProactiveEngagementStatus ProactiveEngagementStatus `pulumi:"proactiveEngagementStatus"`
}

// The set of arguments for constructing a ProactiveEngagement resource.
type ProactiveEngagementArgs struct {
	// A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
	// To enable proactive engagement, the contact list must include at least one phone number.
	EmergencyContactList ProactiveEngagementEmergencyContactArrayInput
	// If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
	// If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
	ProactiveEngagementStatus ProactiveEngagementStatusInput
}

func (ProactiveEngagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proactiveEngagementArgs)(nil)).Elem()
}

type ProactiveEngagementInput interface {
	pulumi.Input

	ToProactiveEngagementOutput() ProactiveEngagementOutput
	ToProactiveEngagementOutputWithContext(ctx context.Context) ProactiveEngagementOutput
}

func (*ProactiveEngagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ProactiveEngagement)(nil)).Elem()
}

func (i *ProactiveEngagement) ToProactiveEngagementOutput() ProactiveEngagementOutput {
	return i.ToProactiveEngagementOutputWithContext(context.Background())
}

func (i *ProactiveEngagement) ToProactiveEngagementOutputWithContext(ctx context.Context) ProactiveEngagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProactiveEngagementOutput)
}

func (i *ProactiveEngagement) ToOutput(ctx context.Context) pulumix.Output[*ProactiveEngagement] {
	return pulumix.Output[*ProactiveEngagement]{
		OutputState: i.ToProactiveEngagementOutputWithContext(ctx).OutputState,
	}
}

type ProactiveEngagementOutput struct{ *pulumi.OutputState }

func (ProactiveEngagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProactiveEngagement)(nil)).Elem()
}

func (o ProactiveEngagementOutput) ToProactiveEngagementOutput() ProactiveEngagementOutput {
	return o
}

func (o ProactiveEngagementOutput) ToProactiveEngagementOutputWithContext(ctx context.Context) ProactiveEngagementOutput {
	return o
}

func (o ProactiveEngagementOutput) ToOutput(ctx context.Context) pulumix.Output[*ProactiveEngagement] {
	return pulumix.Output[*ProactiveEngagement]{
		OutputState: o.OutputState,
	}
}

func (o ProactiveEngagementOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProactiveEngagement) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
// To enable proactive engagement, the contact list must include at least one phone number.
func (o ProactiveEngagementOutput) EmergencyContactList() ProactiveEngagementEmergencyContactArrayOutput {
	return o.ApplyT(func(v *ProactiveEngagement) ProactiveEngagementEmergencyContactArrayOutput {
		return v.EmergencyContactList
	}).(ProactiveEngagementEmergencyContactArrayOutput)
}

// If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
// If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
func (o ProactiveEngagementOutput) ProactiveEngagementStatus() ProactiveEngagementStatusOutput {
	return o.ApplyT(func(v *ProactiveEngagement) ProactiveEngagementStatusOutput { return v.ProactiveEngagementStatus }).(ProactiveEngagementStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProactiveEngagementInput)(nil)).Elem(), &ProactiveEngagement{})
	pulumi.RegisterOutputType(ProactiveEngagementOutput{})
}
