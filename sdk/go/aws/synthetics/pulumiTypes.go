// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CanaryArtifactConfig struct {
	// Encryption configuration for uploading artifacts to S3
	S3Encryption *CanaryS3Encryption `pulumi:"s3Encryption"`
}

// CanaryArtifactConfigInput is an input type that accepts CanaryArtifactConfigArgs and CanaryArtifactConfigOutput values.
// You can construct a concrete instance of `CanaryArtifactConfigInput` via:
//
//          CanaryArtifactConfigArgs{...}
type CanaryArtifactConfigInput interface {
	pulumi.Input

	ToCanaryArtifactConfigOutput() CanaryArtifactConfigOutput
	ToCanaryArtifactConfigOutputWithContext(context.Context) CanaryArtifactConfigOutput
}

type CanaryArtifactConfigArgs struct {
	// Encryption configuration for uploading artifacts to S3
	S3Encryption CanaryS3EncryptionPtrInput `pulumi:"s3Encryption"`
}

func (CanaryArtifactConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryArtifactConfig)(nil)).Elem()
}

func (i CanaryArtifactConfigArgs) ToCanaryArtifactConfigOutput() CanaryArtifactConfigOutput {
	return i.ToCanaryArtifactConfigOutputWithContext(context.Background())
}

func (i CanaryArtifactConfigArgs) ToCanaryArtifactConfigOutputWithContext(ctx context.Context) CanaryArtifactConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryArtifactConfigOutput)
}

func (i CanaryArtifactConfigArgs) ToCanaryArtifactConfigPtrOutput() CanaryArtifactConfigPtrOutput {
	return i.ToCanaryArtifactConfigPtrOutputWithContext(context.Background())
}

func (i CanaryArtifactConfigArgs) ToCanaryArtifactConfigPtrOutputWithContext(ctx context.Context) CanaryArtifactConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryArtifactConfigOutput).ToCanaryArtifactConfigPtrOutputWithContext(ctx)
}

// CanaryArtifactConfigPtrInput is an input type that accepts CanaryArtifactConfigArgs, CanaryArtifactConfigPtr and CanaryArtifactConfigPtrOutput values.
// You can construct a concrete instance of `CanaryArtifactConfigPtrInput` via:
//
//          CanaryArtifactConfigArgs{...}
//
//  or:
//
//          nil
type CanaryArtifactConfigPtrInput interface {
	pulumi.Input

	ToCanaryArtifactConfigPtrOutput() CanaryArtifactConfigPtrOutput
	ToCanaryArtifactConfigPtrOutputWithContext(context.Context) CanaryArtifactConfigPtrOutput
}

type canaryArtifactConfigPtrType CanaryArtifactConfigArgs

func CanaryArtifactConfigPtr(v *CanaryArtifactConfigArgs) CanaryArtifactConfigPtrInput {
	return (*canaryArtifactConfigPtrType)(v)
}

func (*canaryArtifactConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryArtifactConfig)(nil)).Elem()
}

func (i *canaryArtifactConfigPtrType) ToCanaryArtifactConfigPtrOutput() CanaryArtifactConfigPtrOutput {
	return i.ToCanaryArtifactConfigPtrOutputWithContext(context.Background())
}

func (i *canaryArtifactConfigPtrType) ToCanaryArtifactConfigPtrOutputWithContext(ctx context.Context) CanaryArtifactConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryArtifactConfigPtrOutput)
}

type CanaryArtifactConfigOutput struct{ *pulumi.OutputState }

func (CanaryArtifactConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryArtifactConfig)(nil)).Elem()
}

func (o CanaryArtifactConfigOutput) ToCanaryArtifactConfigOutput() CanaryArtifactConfigOutput {
	return o
}

func (o CanaryArtifactConfigOutput) ToCanaryArtifactConfigOutputWithContext(ctx context.Context) CanaryArtifactConfigOutput {
	return o
}

func (o CanaryArtifactConfigOutput) ToCanaryArtifactConfigPtrOutput() CanaryArtifactConfigPtrOutput {
	return o.ToCanaryArtifactConfigPtrOutputWithContext(context.Background())
}

func (o CanaryArtifactConfigOutput) ToCanaryArtifactConfigPtrOutputWithContext(ctx context.Context) CanaryArtifactConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryArtifactConfig) *CanaryArtifactConfig {
		return &v
	}).(CanaryArtifactConfigPtrOutput)
}

// Encryption configuration for uploading artifacts to S3
func (o CanaryArtifactConfigOutput) S3Encryption() CanaryS3EncryptionPtrOutput {
	return o.ApplyT(func(v CanaryArtifactConfig) *CanaryS3Encryption { return v.S3Encryption }).(CanaryS3EncryptionPtrOutput)
}

type CanaryArtifactConfigPtrOutput struct{ *pulumi.OutputState }

func (CanaryArtifactConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryArtifactConfig)(nil)).Elem()
}

func (o CanaryArtifactConfigPtrOutput) ToCanaryArtifactConfigPtrOutput() CanaryArtifactConfigPtrOutput {
	return o
}

func (o CanaryArtifactConfigPtrOutput) ToCanaryArtifactConfigPtrOutputWithContext(ctx context.Context) CanaryArtifactConfigPtrOutput {
	return o
}

func (o CanaryArtifactConfigPtrOutput) Elem() CanaryArtifactConfigOutput {
	return o.ApplyT(func(v *CanaryArtifactConfig) CanaryArtifactConfig {
		if v != nil {
			return *v
		}
		var ret CanaryArtifactConfig
		return ret
	}).(CanaryArtifactConfigOutput)
}

// Encryption configuration for uploading artifacts to S3
func (o CanaryArtifactConfigPtrOutput) S3Encryption() CanaryS3EncryptionPtrOutput {
	return o.ApplyT(func(v *CanaryArtifactConfig) *CanaryS3Encryption {
		if v == nil {
			return nil
		}
		return v.S3Encryption
	}).(CanaryS3EncryptionPtrOutput)
}

type CanaryBaseScreenshot struct {
	// List of coordinates of rectangles to be ignored during visual testing
	IgnoreCoordinates []string `pulumi:"ignoreCoordinates"`
	// Name of the screenshot to be used as base reference for visual testing
	ScreenshotName string `pulumi:"screenshotName"`
}

// CanaryBaseScreenshotInput is an input type that accepts CanaryBaseScreenshotArgs and CanaryBaseScreenshotOutput values.
// You can construct a concrete instance of `CanaryBaseScreenshotInput` via:
//
//          CanaryBaseScreenshotArgs{...}
type CanaryBaseScreenshotInput interface {
	pulumi.Input

	ToCanaryBaseScreenshotOutput() CanaryBaseScreenshotOutput
	ToCanaryBaseScreenshotOutputWithContext(context.Context) CanaryBaseScreenshotOutput
}

type CanaryBaseScreenshotArgs struct {
	// List of coordinates of rectangles to be ignored during visual testing
	IgnoreCoordinates pulumi.StringArrayInput `pulumi:"ignoreCoordinates"`
	// Name of the screenshot to be used as base reference for visual testing
	ScreenshotName pulumi.StringInput `pulumi:"screenshotName"`
}

func (CanaryBaseScreenshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryBaseScreenshot)(nil)).Elem()
}

func (i CanaryBaseScreenshotArgs) ToCanaryBaseScreenshotOutput() CanaryBaseScreenshotOutput {
	return i.ToCanaryBaseScreenshotOutputWithContext(context.Background())
}

func (i CanaryBaseScreenshotArgs) ToCanaryBaseScreenshotOutputWithContext(ctx context.Context) CanaryBaseScreenshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryBaseScreenshotOutput)
}

// CanaryBaseScreenshotArrayInput is an input type that accepts CanaryBaseScreenshotArray and CanaryBaseScreenshotArrayOutput values.
// You can construct a concrete instance of `CanaryBaseScreenshotArrayInput` via:
//
//          CanaryBaseScreenshotArray{ CanaryBaseScreenshotArgs{...} }
type CanaryBaseScreenshotArrayInput interface {
	pulumi.Input

	ToCanaryBaseScreenshotArrayOutput() CanaryBaseScreenshotArrayOutput
	ToCanaryBaseScreenshotArrayOutputWithContext(context.Context) CanaryBaseScreenshotArrayOutput
}

type CanaryBaseScreenshotArray []CanaryBaseScreenshotInput

func (CanaryBaseScreenshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CanaryBaseScreenshot)(nil)).Elem()
}

func (i CanaryBaseScreenshotArray) ToCanaryBaseScreenshotArrayOutput() CanaryBaseScreenshotArrayOutput {
	return i.ToCanaryBaseScreenshotArrayOutputWithContext(context.Background())
}

func (i CanaryBaseScreenshotArray) ToCanaryBaseScreenshotArrayOutputWithContext(ctx context.Context) CanaryBaseScreenshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryBaseScreenshotArrayOutput)
}

type CanaryBaseScreenshotOutput struct{ *pulumi.OutputState }

func (CanaryBaseScreenshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryBaseScreenshot)(nil)).Elem()
}

func (o CanaryBaseScreenshotOutput) ToCanaryBaseScreenshotOutput() CanaryBaseScreenshotOutput {
	return o
}

func (o CanaryBaseScreenshotOutput) ToCanaryBaseScreenshotOutputWithContext(ctx context.Context) CanaryBaseScreenshotOutput {
	return o
}

// List of coordinates of rectangles to be ignored during visual testing
func (o CanaryBaseScreenshotOutput) IgnoreCoordinates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CanaryBaseScreenshot) []string { return v.IgnoreCoordinates }).(pulumi.StringArrayOutput)
}

// Name of the screenshot to be used as base reference for visual testing
func (o CanaryBaseScreenshotOutput) ScreenshotName() pulumi.StringOutput {
	return o.ApplyT(func(v CanaryBaseScreenshot) string { return v.ScreenshotName }).(pulumi.StringOutput)
}

type CanaryBaseScreenshotArrayOutput struct{ *pulumi.OutputState }

func (CanaryBaseScreenshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CanaryBaseScreenshot)(nil)).Elem()
}

func (o CanaryBaseScreenshotArrayOutput) ToCanaryBaseScreenshotArrayOutput() CanaryBaseScreenshotArrayOutput {
	return o
}

func (o CanaryBaseScreenshotArrayOutput) ToCanaryBaseScreenshotArrayOutputWithContext(ctx context.Context) CanaryBaseScreenshotArrayOutput {
	return o
}

func (o CanaryBaseScreenshotArrayOutput) Index(i pulumi.IntInput) CanaryBaseScreenshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CanaryBaseScreenshot {
		return vs[0].([]CanaryBaseScreenshot)[vs[1].(int)]
	}).(CanaryBaseScreenshotOutput)
}

type CanaryCode struct {
	Handler         string  `pulumi:"handler"`
	S3Bucket        *string `pulumi:"s3Bucket"`
	S3Key           *string `pulumi:"s3Key"`
	S3ObjectVersion *string `pulumi:"s3ObjectVersion"`
	Script          *string `pulumi:"script"`
}

// CanaryCodeInput is an input type that accepts CanaryCodeArgs and CanaryCodeOutput values.
// You can construct a concrete instance of `CanaryCodeInput` via:
//
//          CanaryCodeArgs{...}
type CanaryCodeInput interface {
	pulumi.Input

	ToCanaryCodeOutput() CanaryCodeOutput
	ToCanaryCodeOutputWithContext(context.Context) CanaryCodeOutput
}

type CanaryCodeArgs struct {
	Handler         pulumi.StringInput    `pulumi:"handler"`
	S3Bucket        pulumi.StringPtrInput `pulumi:"s3Bucket"`
	S3Key           pulumi.StringPtrInput `pulumi:"s3Key"`
	S3ObjectVersion pulumi.StringPtrInput `pulumi:"s3ObjectVersion"`
	Script          pulumi.StringPtrInput `pulumi:"script"`
}

func (CanaryCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryCode)(nil)).Elem()
}

func (i CanaryCodeArgs) ToCanaryCodeOutput() CanaryCodeOutput {
	return i.ToCanaryCodeOutputWithContext(context.Background())
}

func (i CanaryCodeArgs) ToCanaryCodeOutputWithContext(ctx context.Context) CanaryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryCodeOutput)
}

func (i CanaryCodeArgs) ToCanaryCodePtrOutput() CanaryCodePtrOutput {
	return i.ToCanaryCodePtrOutputWithContext(context.Background())
}

func (i CanaryCodeArgs) ToCanaryCodePtrOutputWithContext(ctx context.Context) CanaryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryCodeOutput).ToCanaryCodePtrOutputWithContext(ctx)
}

// CanaryCodePtrInput is an input type that accepts CanaryCodeArgs, CanaryCodePtr and CanaryCodePtrOutput values.
// You can construct a concrete instance of `CanaryCodePtrInput` via:
//
//          CanaryCodeArgs{...}
//
//  or:
//
//          nil
type CanaryCodePtrInput interface {
	pulumi.Input

	ToCanaryCodePtrOutput() CanaryCodePtrOutput
	ToCanaryCodePtrOutputWithContext(context.Context) CanaryCodePtrOutput
}

type canaryCodePtrType CanaryCodeArgs

func CanaryCodePtr(v *CanaryCodeArgs) CanaryCodePtrInput {
	return (*canaryCodePtrType)(v)
}

func (*canaryCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryCode)(nil)).Elem()
}

func (i *canaryCodePtrType) ToCanaryCodePtrOutput() CanaryCodePtrOutput {
	return i.ToCanaryCodePtrOutputWithContext(context.Background())
}

func (i *canaryCodePtrType) ToCanaryCodePtrOutputWithContext(ctx context.Context) CanaryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryCodePtrOutput)
}

type CanaryCodeOutput struct{ *pulumi.OutputState }

func (CanaryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryCode)(nil)).Elem()
}

func (o CanaryCodeOutput) ToCanaryCodeOutput() CanaryCodeOutput {
	return o
}

func (o CanaryCodeOutput) ToCanaryCodeOutputWithContext(ctx context.Context) CanaryCodeOutput {
	return o
}

func (o CanaryCodeOutput) ToCanaryCodePtrOutput() CanaryCodePtrOutput {
	return o.ToCanaryCodePtrOutputWithContext(context.Background())
}

func (o CanaryCodeOutput) ToCanaryCodePtrOutputWithContext(ctx context.Context) CanaryCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryCode) *CanaryCode {
		return &v
	}).(CanaryCodePtrOutput)
}

func (o CanaryCodeOutput) Handler() pulumi.StringOutput {
	return o.ApplyT(func(v CanaryCode) string { return v.Handler }).(pulumi.StringOutput)
}

func (o CanaryCodeOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryCode) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

func (o CanaryCodeOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryCode) *string { return v.S3Key }).(pulumi.StringPtrOutput)
}

func (o CanaryCodeOutput) S3ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryCode) *string { return v.S3ObjectVersion }).(pulumi.StringPtrOutput)
}

func (o CanaryCodeOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryCode) *string { return v.Script }).(pulumi.StringPtrOutput)
}

type CanaryCodePtrOutput struct{ *pulumi.OutputState }

func (CanaryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryCode)(nil)).Elem()
}

func (o CanaryCodePtrOutput) ToCanaryCodePtrOutput() CanaryCodePtrOutput {
	return o
}

func (o CanaryCodePtrOutput) ToCanaryCodePtrOutputWithContext(ctx context.Context) CanaryCodePtrOutput {
	return o
}

func (o CanaryCodePtrOutput) Elem() CanaryCodeOutput {
	return o.ApplyT(func(v *CanaryCode) CanaryCode {
		if v != nil {
			return *v
		}
		var ret CanaryCode
		return ret
	}).(CanaryCodeOutput)
}

func (o CanaryCodePtrOutput) Handler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryCode) *string {
		if v == nil {
			return nil
		}
		return &v.Handler
	}).(pulumi.StringPtrOutput)
}

func (o CanaryCodePtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryCode) *string {
		if v == nil {
			return nil
		}
		return v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

func (o CanaryCodePtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryCode) *string {
		if v == nil {
			return nil
		}
		return v.S3Key
	}).(pulumi.StringPtrOutput)
}

func (o CanaryCodePtrOutput) S3ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryCode) *string {
		if v == nil {
			return nil
		}
		return v.S3ObjectVersion
	}).(pulumi.StringPtrOutput)
}

func (o CanaryCodePtrOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryCode) *string {
		if v == nil {
			return nil
		}
		return v.Script
	}).(pulumi.StringPtrOutput)
}

type CanaryRunConfig struct {
	// Enable active tracing if set to true
	ActiveTracing *bool `pulumi:"activeTracing"`
	// Environment variable key-value pairs.
	EnvironmentVariables interface{} `pulumi:"environmentVariables"`
	// Provide maximum memory available for canary in MB
	MemoryInMB *int `pulumi:"memoryInMB"`
	// Provide maximum canary timeout per run in seconds
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// CanaryRunConfigInput is an input type that accepts CanaryRunConfigArgs and CanaryRunConfigOutput values.
// You can construct a concrete instance of `CanaryRunConfigInput` via:
//
//          CanaryRunConfigArgs{...}
type CanaryRunConfigInput interface {
	pulumi.Input

	ToCanaryRunConfigOutput() CanaryRunConfigOutput
	ToCanaryRunConfigOutputWithContext(context.Context) CanaryRunConfigOutput
}

type CanaryRunConfigArgs struct {
	// Enable active tracing if set to true
	ActiveTracing pulumi.BoolPtrInput `pulumi:"activeTracing"`
	// Environment variable key-value pairs.
	EnvironmentVariables pulumi.Input `pulumi:"environmentVariables"`
	// Provide maximum memory available for canary in MB
	MemoryInMB pulumi.IntPtrInput `pulumi:"memoryInMB"`
	// Provide maximum canary timeout per run in seconds
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
}

func (CanaryRunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryRunConfig)(nil)).Elem()
}

func (i CanaryRunConfigArgs) ToCanaryRunConfigOutput() CanaryRunConfigOutput {
	return i.ToCanaryRunConfigOutputWithContext(context.Background())
}

func (i CanaryRunConfigArgs) ToCanaryRunConfigOutputWithContext(ctx context.Context) CanaryRunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryRunConfigOutput)
}

func (i CanaryRunConfigArgs) ToCanaryRunConfigPtrOutput() CanaryRunConfigPtrOutput {
	return i.ToCanaryRunConfigPtrOutputWithContext(context.Background())
}

func (i CanaryRunConfigArgs) ToCanaryRunConfigPtrOutputWithContext(ctx context.Context) CanaryRunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryRunConfigOutput).ToCanaryRunConfigPtrOutputWithContext(ctx)
}

// CanaryRunConfigPtrInput is an input type that accepts CanaryRunConfigArgs, CanaryRunConfigPtr and CanaryRunConfigPtrOutput values.
// You can construct a concrete instance of `CanaryRunConfigPtrInput` via:
//
//          CanaryRunConfigArgs{...}
//
//  or:
//
//          nil
type CanaryRunConfigPtrInput interface {
	pulumi.Input

	ToCanaryRunConfigPtrOutput() CanaryRunConfigPtrOutput
	ToCanaryRunConfigPtrOutputWithContext(context.Context) CanaryRunConfigPtrOutput
}

type canaryRunConfigPtrType CanaryRunConfigArgs

func CanaryRunConfigPtr(v *CanaryRunConfigArgs) CanaryRunConfigPtrInput {
	return (*canaryRunConfigPtrType)(v)
}

func (*canaryRunConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryRunConfig)(nil)).Elem()
}

func (i *canaryRunConfigPtrType) ToCanaryRunConfigPtrOutput() CanaryRunConfigPtrOutput {
	return i.ToCanaryRunConfigPtrOutputWithContext(context.Background())
}

func (i *canaryRunConfigPtrType) ToCanaryRunConfigPtrOutputWithContext(ctx context.Context) CanaryRunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryRunConfigPtrOutput)
}

type CanaryRunConfigOutput struct{ *pulumi.OutputState }

func (CanaryRunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryRunConfig)(nil)).Elem()
}

func (o CanaryRunConfigOutput) ToCanaryRunConfigOutput() CanaryRunConfigOutput {
	return o
}

func (o CanaryRunConfigOutput) ToCanaryRunConfigOutputWithContext(ctx context.Context) CanaryRunConfigOutput {
	return o
}

func (o CanaryRunConfigOutput) ToCanaryRunConfigPtrOutput() CanaryRunConfigPtrOutput {
	return o.ToCanaryRunConfigPtrOutputWithContext(context.Background())
}

func (o CanaryRunConfigOutput) ToCanaryRunConfigPtrOutputWithContext(ctx context.Context) CanaryRunConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryRunConfig) *CanaryRunConfig {
		return &v
	}).(CanaryRunConfigPtrOutput)
}

// Enable active tracing if set to true
func (o CanaryRunConfigOutput) ActiveTracing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CanaryRunConfig) *bool { return v.ActiveTracing }).(pulumi.BoolPtrOutput)
}

// Environment variable key-value pairs.
func (o CanaryRunConfigOutput) EnvironmentVariables() pulumi.AnyOutput {
	return o.ApplyT(func(v CanaryRunConfig) interface{} { return v.EnvironmentVariables }).(pulumi.AnyOutput)
}

// Provide maximum memory available for canary in MB
func (o CanaryRunConfigOutput) MemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CanaryRunConfig) *int { return v.MemoryInMB }).(pulumi.IntPtrOutput)
}

// Provide maximum canary timeout per run in seconds
func (o CanaryRunConfigOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CanaryRunConfig) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type CanaryRunConfigPtrOutput struct{ *pulumi.OutputState }

func (CanaryRunConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryRunConfig)(nil)).Elem()
}

func (o CanaryRunConfigPtrOutput) ToCanaryRunConfigPtrOutput() CanaryRunConfigPtrOutput {
	return o
}

func (o CanaryRunConfigPtrOutput) ToCanaryRunConfigPtrOutputWithContext(ctx context.Context) CanaryRunConfigPtrOutput {
	return o
}

func (o CanaryRunConfigPtrOutput) Elem() CanaryRunConfigOutput {
	return o.ApplyT(func(v *CanaryRunConfig) CanaryRunConfig {
		if v != nil {
			return *v
		}
		var ret CanaryRunConfig
		return ret
	}).(CanaryRunConfigOutput)
}

// Enable active tracing if set to true
func (o CanaryRunConfigPtrOutput) ActiveTracing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CanaryRunConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveTracing
	}).(pulumi.BoolPtrOutput)
}

// Environment variable key-value pairs.
func (o CanaryRunConfigPtrOutput) EnvironmentVariables() pulumi.AnyOutput {
	return o.ApplyT(func(v *CanaryRunConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.AnyOutput)
}

// Provide maximum memory available for canary in MB
func (o CanaryRunConfigPtrOutput) MemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CanaryRunConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryInMB
	}).(pulumi.IntPtrOutput)
}

// Provide maximum canary timeout per run in seconds
func (o CanaryRunConfigPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CanaryRunConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type CanaryS3Encryption struct {
	// Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.
	EncryptionMode *string `pulumi:"encryptionMode"`
	// KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
}

// CanaryS3EncryptionInput is an input type that accepts CanaryS3EncryptionArgs and CanaryS3EncryptionOutput values.
// You can construct a concrete instance of `CanaryS3EncryptionInput` via:
//
//          CanaryS3EncryptionArgs{...}
type CanaryS3EncryptionInput interface {
	pulumi.Input

	ToCanaryS3EncryptionOutput() CanaryS3EncryptionOutput
	ToCanaryS3EncryptionOutputWithContext(context.Context) CanaryS3EncryptionOutput
}

type CanaryS3EncryptionArgs struct {
	// Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.
	EncryptionMode pulumi.StringPtrInput `pulumi:"encryptionMode"`
	// KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (CanaryS3EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryS3Encryption)(nil)).Elem()
}

func (i CanaryS3EncryptionArgs) ToCanaryS3EncryptionOutput() CanaryS3EncryptionOutput {
	return i.ToCanaryS3EncryptionOutputWithContext(context.Background())
}

func (i CanaryS3EncryptionArgs) ToCanaryS3EncryptionOutputWithContext(ctx context.Context) CanaryS3EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryS3EncryptionOutput)
}

func (i CanaryS3EncryptionArgs) ToCanaryS3EncryptionPtrOutput() CanaryS3EncryptionPtrOutput {
	return i.ToCanaryS3EncryptionPtrOutputWithContext(context.Background())
}

func (i CanaryS3EncryptionArgs) ToCanaryS3EncryptionPtrOutputWithContext(ctx context.Context) CanaryS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryS3EncryptionOutput).ToCanaryS3EncryptionPtrOutputWithContext(ctx)
}

// CanaryS3EncryptionPtrInput is an input type that accepts CanaryS3EncryptionArgs, CanaryS3EncryptionPtr and CanaryS3EncryptionPtrOutput values.
// You can construct a concrete instance of `CanaryS3EncryptionPtrInput` via:
//
//          CanaryS3EncryptionArgs{...}
//
//  or:
//
//          nil
type CanaryS3EncryptionPtrInput interface {
	pulumi.Input

	ToCanaryS3EncryptionPtrOutput() CanaryS3EncryptionPtrOutput
	ToCanaryS3EncryptionPtrOutputWithContext(context.Context) CanaryS3EncryptionPtrOutput
}

type canaryS3EncryptionPtrType CanaryS3EncryptionArgs

func CanaryS3EncryptionPtr(v *CanaryS3EncryptionArgs) CanaryS3EncryptionPtrInput {
	return (*canaryS3EncryptionPtrType)(v)
}

func (*canaryS3EncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryS3Encryption)(nil)).Elem()
}

func (i *canaryS3EncryptionPtrType) ToCanaryS3EncryptionPtrOutput() CanaryS3EncryptionPtrOutput {
	return i.ToCanaryS3EncryptionPtrOutputWithContext(context.Background())
}

func (i *canaryS3EncryptionPtrType) ToCanaryS3EncryptionPtrOutputWithContext(ctx context.Context) CanaryS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryS3EncryptionPtrOutput)
}

type CanaryS3EncryptionOutput struct{ *pulumi.OutputState }

func (CanaryS3EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryS3Encryption)(nil)).Elem()
}

func (o CanaryS3EncryptionOutput) ToCanaryS3EncryptionOutput() CanaryS3EncryptionOutput {
	return o
}

func (o CanaryS3EncryptionOutput) ToCanaryS3EncryptionOutputWithContext(ctx context.Context) CanaryS3EncryptionOutput {
	return o
}

func (o CanaryS3EncryptionOutput) ToCanaryS3EncryptionPtrOutput() CanaryS3EncryptionPtrOutput {
	return o.ToCanaryS3EncryptionPtrOutputWithContext(context.Background())
}

func (o CanaryS3EncryptionOutput) ToCanaryS3EncryptionPtrOutputWithContext(ctx context.Context) CanaryS3EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryS3Encryption) *CanaryS3Encryption {
		return &v
	}).(CanaryS3EncryptionPtrOutput)
}

// Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.
func (o CanaryS3EncryptionOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryS3Encryption) *string { return v.EncryptionMode }).(pulumi.StringPtrOutput)
}

// KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.
func (o CanaryS3EncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryS3Encryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type CanaryS3EncryptionPtrOutput struct{ *pulumi.OutputState }

func (CanaryS3EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryS3Encryption)(nil)).Elem()
}

func (o CanaryS3EncryptionPtrOutput) ToCanaryS3EncryptionPtrOutput() CanaryS3EncryptionPtrOutput {
	return o
}

func (o CanaryS3EncryptionPtrOutput) ToCanaryS3EncryptionPtrOutputWithContext(ctx context.Context) CanaryS3EncryptionPtrOutput {
	return o
}

func (o CanaryS3EncryptionPtrOutput) Elem() CanaryS3EncryptionOutput {
	return o.ApplyT(func(v *CanaryS3Encryption) CanaryS3Encryption {
		if v != nil {
			return *v
		}
		var ret CanaryS3Encryption
		return ret
	}).(CanaryS3EncryptionOutput)
}

// Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.
func (o CanaryS3EncryptionPtrOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionMode
	}).(pulumi.StringPtrOutput)
}

// KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.
func (o CanaryS3EncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type CanarySchedule struct {
	DurationInSeconds *string `pulumi:"durationInSeconds"`
	Expression        string  `pulumi:"expression"`
}

// CanaryScheduleInput is an input type that accepts CanaryScheduleArgs and CanaryScheduleOutput values.
// You can construct a concrete instance of `CanaryScheduleInput` via:
//
//          CanaryScheduleArgs{...}
type CanaryScheduleInput interface {
	pulumi.Input

	ToCanaryScheduleOutput() CanaryScheduleOutput
	ToCanaryScheduleOutputWithContext(context.Context) CanaryScheduleOutput
}

type CanaryScheduleArgs struct {
	DurationInSeconds pulumi.StringPtrInput `pulumi:"durationInSeconds"`
	Expression        pulumi.StringInput    `pulumi:"expression"`
}

func (CanaryScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanarySchedule)(nil)).Elem()
}

func (i CanaryScheduleArgs) ToCanaryScheduleOutput() CanaryScheduleOutput {
	return i.ToCanaryScheduleOutputWithContext(context.Background())
}

func (i CanaryScheduleArgs) ToCanaryScheduleOutputWithContext(ctx context.Context) CanaryScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryScheduleOutput)
}

func (i CanaryScheduleArgs) ToCanarySchedulePtrOutput() CanarySchedulePtrOutput {
	return i.ToCanarySchedulePtrOutputWithContext(context.Background())
}

func (i CanaryScheduleArgs) ToCanarySchedulePtrOutputWithContext(ctx context.Context) CanarySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryScheduleOutput).ToCanarySchedulePtrOutputWithContext(ctx)
}

// CanarySchedulePtrInput is an input type that accepts CanaryScheduleArgs, CanarySchedulePtr and CanarySchedulePtrOutput values.
// You can construct a concrete instance of `CanarySchedulePtrInput` via:
//
//          CanaryScheduleArgs{...}
//
//  or:
//
//          nil
type CanarySchedulePtrInput interface {
	pulumi.Input

	ToCanarySchedulePtrOutput() CanarySchedulePtrOutput
	ToCanarySchedulePtrOutputWithContext(context.Context) CanarySchedulePtrOutput
}

type canarySchedulePtrType CanaryScheduleArgs

func CanarySchedulePtr(v *CanaryScheduleArgs) CanarySchedulePtrInput {
	return (*canarySchedulePtrType)(v)
}

func (*canarySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanarySchedule)(nil)).Elem()
}

func (i *canarySchedulePtrType) ToCanarySchedulePtrOutput() CanarySchedulePtrOutput {
	return i.ToCanarySchedulePtrOutputWithContext(context.Background())
}

func (i *canarySchedulePtrType) ToCanarySchedulePtrOutputWithContext(ctx context.Context) CanarySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanarySchedulePtrOutput)
}

type CanaryScheduleOutput struct{ *pulumi.OutputState }

func (CanaryScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanarySchedule)(nil)).Elem()
}

func (o CanaryScheduleOutput) ToCanaryScheduleOutput() CanaryScheduleOutput {
	return o
}

func (o CanaryScheduleOutput) ToCanaryScheduleOutputWithContext(ctx context.Context) CanaryScheduleOutput {
	return o
}

func (o CanaryScheduleOutput) ToCanarySchedulePtrOutput() CanarySchedulePtrOutput {
	return o.ToCanarySchedulePtrOutputWithContext(context.Background())
}

func (o CanaryScheduleOutput) ToCanarySchedulePtrOutputWithContext(ctx context.Context) CanarySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanarySchedule) *CanarySchedule {
		return &v
	}).(CanarySchedulePtrOutput)
}

func (o CanaryScheduleOutput) DurationInSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanarySchedule) *string { return v.DurationInSeconds }).(pulumi.StringPtrOutput)
}

func (o CanaryScheduleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CanarySchedule) string { return v.Expression }).(pulumi.StringOutput)
}

type CanarySchedulePtrOutput struct{ *pulumi.OutputState }

func (CanarySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanarySchedule)(nil)).Elem()
}

func (o CanarySchedulePtrOutput) ToCanarySchedulePtrOutput() CanarySchedulePtrOutput {
	return o
}

func (o CanarySchedulePtrOutput) ToCanarySchedulePtrOutputWithContext(ctx context.Context) CanarySchedulePtrOutput {
	return o
}

func (o CanarySchedulePtrOutput) Elem() CanaryScheduleOutput {
	return o.ApplyT(func(v *CanarySchedule) CanarySchedule {
		if v != nil {
			return *v
		}
		var ret CanarySchedule
		return ret
	}).(CanaryScheduleOutput)
}

func (o CanarySchedulePtrOutput) DurationInSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanarySchedule) *string {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.StringPtrOutput)
}

func (o CanarySchedulePtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanarySchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type CanaryTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// CanaryTagInput is an input type that accepts CanaryTagArgs and CanaryTagOutput values.
// You can construct a concrete instance of `CanaryTagInput` via:
//
//          CanaryTagArgs{...}
type CanaryTagInput interface {
	pulumi.Input

	ToCanaryTagOutput() CanaryTagOutput
	ToCanaryTagOutputWithContext(context.Context) CanaryTagOutput
}

// A key-value pair to associate with a resource.
type CanaryTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CanaryTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryTag)(nil)).Elem()
}

func (i CanaryTagArgs) ToCanaryTagOutput() CanaryTagOutput {
	return i.ToCanaryTagOutputWithContext(context.Background())
}

func (i CanaryTagArgs) ToCanaryTagOutputWithContext(ctx context.Context) CanaryTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryTagOutput)
}

// CanaryTagArrayInput is an input type that accepts CanaryTagArray and CanaryTagArrayOutput values.
// You can construct a concrete instance of `CanaryTagArrayInput` via:
//
//          CanaryTagArray{ CanaryTagArgs{...} }
type CanaryTagArrayInput interface {
	pulumi.Input

	ToCanaryTagArrayOutput() CanaryTagArrayOutput
	ToCanaryTagArrayOutputWithContext(context.Context) CanaryTagArrayOutput
}

type CanaryTagArray []CanaryTagInput

func (CanaryTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CanaryTag)(nil)).Elem()
}

func (i CanaryTagArray) ToCanaryTagArrayOutput() CanaryTagArrayOutput {
	return i.ToCanaryTagArrayOutputWithContext(context.Background())
}

func (i CanaryTagArray) ToCanaryTagArrayOutputWithContext(ctx context.Context) CanaryTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryTagArrayOutput)
}

// A key-value pair to associate with a resource.
type CanaryTagOutput struct{ *pulumi.OutputState }

func (CanaryTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryTag)(nil)).Elem()
}

func (o CanaryTagOutput) ToCanaryTagOutput() CanaryTagOutput {
	return o
}

func (o CanaryTagOutput) ToCanaryTagOutputWithContext(ctx context.Context) CanaryTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CanaryTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CanaryTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o CanaryTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CanaryTag) string { return v.Value }).(pulumi.StringOutput)
}

type CanaryTagArrayOutput struct{ *pulumi.OutputState }

func (CanaryTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CanaryTag)(nil)).Elem()
}

func (o CanaryTagArrayOutput) ToCanaryTagArrayOutput() CanaryTagArrayOutput {
	return o
}

func (o CanaryTagArrayOutput) ToCanaryTagArrayOutputWithContext(ctx context.Context) CanaryTagArrayOutput {
	return o
}

func (o CanaryTagArrayOutput) Index(i pulumi.IntInput) CanaryTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CanaryTag {
		return vs[0].([]CanaryTag)[vs[1].(int)]
	}).(CanaryTagOutput)
}

type CanaryVPCConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
	VpcId            *string  `pulumi:"vpcId"`
}

// CanaryVPCConfigInput is an input type that accepts CanaryVPCConfigArgs and CanaryVPCConfigOutput values.
// You can construct a concrete instance of `CanaryVPCConfigInput` via:
//
//          CanaryVPCConfigArgs{...}
type CanaryVPCConfigInput interface {
	pulumi.Input

	ToCanaryVPCConfigOutput() CanaryVPCConfigOutput
	ToCanaryVPCConfigOutputWithContext(context.Context) CanaryVPCConfigOutput
}

type CanaryVPCConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId            pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (CanaryVPCConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryVPCConfig)(nil)).Elem()
}

func (i CanaryVPCConfigArgs) ToCanaryVPCConfigOutput() CanaryVPCConfigOutput {
	return i.ToCanaryVPCConfigOutputWithContext(context.Background())
}

func (i CanaryVPCConfigArgs) ToCanaryVPCConfigOutputWithContext(ctx context.Context) CanaryVPCConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVPCConfigOutput)
}

func (i CanaryVPCConfigArgs) ToCanaryVPCConfigPtrOutput() CanaryVPCConfigPtrOutput {
	return i.ToCanaryVPCConfigPtrOutputWithContext(context.Background())
}

func (i CanaryVPCConfigArgs) ToCanaryVPCConfigPtrOutputWithContext(ctx context.Context) CanaryVPCConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVPCConfigOutput).ToCanaryVPCConfigPtrOutputWithContext(ctx)
}

// CanaryVPCConfigPtrInput is an input type that accepts CanaryVPCConfigArgs, CanaryVPCConfigPtr and CanaryVPCConfigPtrOutput values.
// You can construct a concrete instance of `CanaryVPCConfigPtrInput` via:
//
//          CanaryVPCConfigArgs{...}
//
//  or:
//
//          nil
type CanaryVPCConfigPtrInput interface {
	pulumi.Input

	ToCanaryVPCConfigPtrOutput() CanaryVPCConfigPtrOutput
	ToCanaryVPCConfigPtrOutputWithContext(context.Context) CanaryVPCConfigPtrOutput
}

type canaryVPCConfigPtrType CanaryVPCConfigArgs

func CanaryVPCConfigPtr(v *CanaryVPCConfigArgs) CanaryVPCConfigPtrInput {
	return (*canaryVPCConfigPtrType)(v)
}

func (*canaryVPCConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryVPCConfig)(nil)).Elem()
}

func (i *canaryVPCConfigPtrType) ToCanaryVPCConfigPtrOutput() CanaryVPCConfigPtrOutput {
	return i.ToCanaryVPCConfigPtrOutputWithContext(context.Background())
}

func (i *canaryVPCConfigPtrType) ToCanaryVPCConfigPtrOutputWithContext(ctx context.Context) CanaryVPCConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVPCConfigPtrOutput)
}

type CanaryVPCConfigOutput struct{ *pulumi.OutputState }

func (CanaryVPCConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryVPCConfig)(nil)).Elem()
}

func (o CanaryVPCConfigOutput) ToCanaryVPCConfigOutput() CanaryVPCConfigOutput {
	return o
}

func (o CanaryVPCConfigOutput) ToCanaryVPCConfigOutputWithContext(ctx context.Context) CanaryVPCConfigOutput {
	return o
}

func (o CanaryVPCConfigOutput) ToCanaryVPCConfigPtrOutput() CanaryVPCConfigPtrOutput {
	return o.ToCanaryVPCConfigPtrOutputWithContext(context.Background())
}

func (o CanaryVPCConfigOutput) ToCanaryVPCConfigPtrOutputWithContext(ctx context.Context) CanaryVPCConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryVPCConfig) *CanaryVPCConfig {
		return &v
	}).(CanaryVPCConfigPtrOutput)
}

func (o CanaryVPCConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CanaryVPCConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o CanaryVPCConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CanaryVPCConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o CanaryVPCConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CanaryVPCConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type CanaryVPCConfigPtrOutput struct{ *pulumi.OutputState }

func (CanaryVPCConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryVPCConfig)(nil)).Elem()
}

func (o CanaryVPCConfigPtrOutput) ToCanaryVPCConfigPtrOutput() CanaryVPCConfigPtrOutput {
	return o
}

func (o CanaryVPCConfigPtrOutput) ToCanaryVPCConfigPtrOutputWithContext(ctx context.Context) CanaryVPCConfigPtrOutput {
	return o
}

func (o CanaryVPCConfigPtrOutput) Elem() CanaryVPCConfigOutput {
	return o.ApplyT(func(v *CanaryVPCConfig) CanaryVPCConfig {
		if v != nil {
			return *v
		}
		var ret CanaryVPCConfig
		return ret
	}).(CanaryVPCConfigOutput)
}

func (o CanaryVPCConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CanaryVPCConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o CanaryVPCConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CanaryVPCConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o CanaryVPCConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryVPCConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type CanaryVisualReference struct {
	// Canary run id to be used as base reference for visual testing
	BaseCanaryRunId string `pulumi:"baseCanaryRunId"`
	// List of screenshots used as base reference for visual testing
	BaseScreenshots []CanaryBaseScreenshot `pulumi:"baseScreenshots"`
}

// CanaryVisualReferenceInput is an input type that accepts CanaryVisualReferenceArgs and CanaryVisualReferenceOutput values.
// You can construct a concrete instance of `CanaryVisualReferenceInput` via:
//
//          CanaryVisualReferenceArgs{...}
type CanaryVisualReferenceInput interface {
	pulumi.Input

	ToCanaryVisualReferenceOutput() CanaryVisualReferenceOutput
	ToCanaryVisualReferenceOutputWithContext(context.Context) CanaryVisualReferenceOutput
}

type CanaryVisualReferenceArgs struct {
	// Canary run id to be used as base reference for visual testing
	BaseCanaryRunId pulumi.StringInput `pulumi:"baseCanaryRunId"`
	// List of screenshots used as base reference for visual testing
	BaseScreenshots CanaryBaseScreenshotArrayInput `pulumi:"baseScreenshots"`
}

func (CanaryVisualReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryVisualReference)(nil)).Elem()
}

func (i CanaryVisualReferenceArgs) ToCanaryVisualReferenceOutput() CanaryVisualReferenceOutput {
	return i.ToCanaryVisualReferenceOutputWithContext(context.Background())
}

func (i CanaryVisualReferenceArgs) ToCanaryVisualReferenceOutputWithContext(ctx context.Context) CanaryVisualReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVisualReferenceOutput)
}

func (i CanaryVisualReferenceArgs) ToCanaryVisualReferencePtrOutput() CanaryVisualReferencePtrOutput {
	return i.ToCanaryVisualReferencePtrOutputWithContext(context.Background())
}

func (i CanaryVisualReferenceArgs) ToCanaryVisualReferencePtrOutputWithContext(ctx context.Context) CanaryVisualReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVisualReferenceOutput).ToCanaryVisualReferencePtrOutputWithContext(ctx)
}

// CanaryVisualReferencePtrInput is an input type that accepts CanaryVisualReferenceArgs, CanaryVisualReferencePtr and CanaryVisualReferencePtrOutput values.
// You can construct a concrete instance of `CanaryVisualReferencePtrInput` via:
//
//          CanaryVisualReferenceArgs{...}
//
//  or:
//
//          nil
type CanaryVisualReferencePtrInput interface {
	pulumi.Input

	ToCanaryVisualReferencePtrOutput() CanaryVisualReferencePtrOutput
	ToCanaryVisualReferencePtrOutputWithContext(context.Context) CanaryVisualReferencePtrOutput
}

type canaryVisualReferencePtrType CanaryVisualReferenceArgs

func CanaryVisualReferencePtr(v *CanaryVisualReferenceArgs) CanaryVisualReferencePtrInput {
	return (*canaryVisualReferencePtrType)(v)
}

func (*canaryVisualReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryVisualReference)(nil)).Elem()
}

func (i *canaryVisualReferencePtrType) ToCanaryVisualReferencePtrOutput() CanaryVisualReferencePtrOutput {
	return i.ToCanaryVisualReferencePtrOutputWithContext(context.Background())
}

func (i *canaryVisualReferencePtrType) ToCanaryVisualReferencePtrOutputWithContext(ctx context.Context) CanaryVisualReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CanaryVisualReferencePtrOutput)
}

type CanaryVisualReferenceOutput struct{ *pulumi.OutputState }

func (CanaryVisualReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CanaryVisualReference)(nil)).Elem()
}

func (o CanaryVisualReferenceOutput) ToCanaryVisualReferenceOutput() CanaryVisualReferenceOutput {
	return o
}

func (o CanaryVisualReferenceOutput) ToCanaryVisualReferenceOutputWithContext(ctx context.Context) CanaryVisualReferenceOutput {
	return o
}

func (o CanaryVisualReferenceOutput) ToCanaryVisualReferencePtrOutput() CanaryVisualReferencePtrOutput {
	return o.ToCanaryVisualReferencePtrOutputWithContext(context.Background())
}

func (o CanaryVisualReferenceOutput) ToCanaryVisualReferencePtrOutputWithContext(ctx context.Context) CanaryVisualReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CanaryVisualReference) *CanaryVisualReference {
		return &v
	}).(CanaryVisualReferencePtrOutput)
}

// Canary run id to be used as base reference for visual testing
func (o CanaryVisualReferenceOutput) BaseCanaryRunId() pulumi.StringOutput {
	return o.ApplyT(func(v CanaryVisualReference) string { return v.BaseCanaryRunId }).(pulumi.StringOutput)
}

// List of screenshots used as base reference for visual testing
func (o CanaryVisualReferenceOutput) BaseScreenshots() CanaryBaseScreenshotArrayOutput {
	return o.ApplyT(func(v CanaryVisualReference) []CanaryBaseScreenshot { return v.BaseScreenshots }).(CanaryBaseScreenshotArrayOutput)
}

type CanaryVisualReferencePtrOutput struct{ *pulumi.OutputState }

func (CanaryVisualReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CanaryVisualReference)(nil)).Elem()
}

func (o CanaryVisualReferencePtrOutput) ToCanaryVisualReferencePtrOutput() CanaryVisualReferencePtrOutput {
	return o
}

func (o CanaryVisualReferencePtrOutput) ToCanaryVisualReferencePtrOutputWithContext(ctx context.Context) CanaryVisualReferencePtrOutput {
	return o
}

func (o CanaryVisualReferencePtrOutput) Elem() CanaryVisualReferenceOutput {
	return o.ApplyT(func(v *CanaryVisualReference) CanaryVisualReference {
		if v != nil {
			return *v
		}
		var ret CanaryVisualReference
		return ret
	}).(CanaryVisualReferenceOutput)
}

// Canary run id to be used as base reference for visual testing
func (o CanaryVisualReferencePtrOutput) BaseCanaryRunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CanaryVisualReference) *string {
		if v == nil {
			return nil
		}
		return &v.BaseCanaryRunId
	}).(pulumi.StringPtrOutput)
}

// List of screenshots used as base reference for visual testing
func (o CanaryVisualReferencePtrOutput) BaseScreenshots() CanaryBaseScreenshotArrayOutput {
	return o.ApplyT(func(v *CanaryVisualReference) []CanaryBaseScreenshot {
		if v == nil {
			return nil
		}
		return v.BaseScreenshots
	}).(CanaryBaseScreenshotArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryArtifactConfigInput)(nil)).Elem(), CanaryArtifactConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryArtifactConfigPtrInput)(nil)).Elem(), CanaryArtifactConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryBaseScreenshotInput)(nil)).Elem(), CanaryBaseScreenshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryBaseScreenshotArrayInput)(nil)).Elem(), CanaryBaseScreenshotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryCodeInput)(nil)).Elem(), CanaryCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryCodePtrInput)(nil)).Elem(), CanaryCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryRunConfigInput)(nil)).Elem(), CanaryRunConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryRunConfigPtrInput)(nil)).Elem(), CanaryRunConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryS3EncryptionInput)(nil)).Elem(), CanaryS3EncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryS3EncryptionPtrInput)(nil)).Elem(), CanaryS3EncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryScheduleInput)(nil)).Elem(), CanaryScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanarySchedulePtrInput)(nil)).Elem(), CanaryScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryTagInput)(nil)).Elem(), CanaryTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryTagArrayInput)(nil)).Elem(), CanaryTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryVPCConfigInput)(nil)).Elem(), CanaryVPCConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryVPCConfigPtrInput)(nil)).Elem(), CanaryVPCConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryVisualReferenceInput)(nil)).Elem(), CanaryVisualReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CanaryVisualReferencePtrInput)(nil)).Elem(), CanaryVisualReferenceArgs{})
	pulumi.RegisterOutputType(CanaryArtifactConfigOutput{})
	pulumi.RegisterOutputType(CanaryArtifactConfigPtrOutput{})
	pulumi.RegisterOutputType(CanaryBaseScreenshotOutput{})
	pulumi.RegisterOutputType(CanaryBaseScreenshotArrayOutput{})
	pulumi.RegisterOutputType(CanaryCodeOutput{})
	pulumi.RegisterOutputType(CanaryCodePtrOutput{})
	pulumi.RegisterOutputType(CanaryRunConfigOutput{})
	pulumi.RegisterOutputType(CanaryRunConfigPtrOutput{})
	pulumi.RegisterOutputType(CanaryS3EncryptionOutput{})
	pulumi.RegisterOutputType(CanaryS3EncryptionPtrOutput{})
	pulumi.RegisterOutputType(CanaryScheduleOutput{})
	pulumi.RegisterOutputType(CanarySchedulePtrOutput{})
	pulumi.RegisterOutputType(CanaryTagOutput{})
	pulumi.RegisterOutputType(CanaryTagArrayOutput{})
	pulumi.RegisterOutputType(CanaryVPCConfigOutput{})
	pulumi.RegisterOutputType(CanaryVPCConfigPtrOutput{})
	pulumi.RegisterOutputType(CanaryVisualReferenceOutput{})
	pulumi.RegisterOutputType(CanaryVisualReferencePtrOutput{})
}
