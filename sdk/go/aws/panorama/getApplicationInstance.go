// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package panorama

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an application instance and deploys it to a device.
func LookupApplicationInstance(ctx *pulumi.Context, args *LookupApplicationInstanceArgs, opts ...pulumi.InvokeOption) (*LookupApplicationInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationInstanceResult
	err := ctx.Invoke("aws-native:panorama:getApplicationInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationInstanceArgs struct {
	// The application instance's ID.
	ApplicationInstanceId string `pulumi:"applicationInstanceId"`
}

type LookupApplicationInstanceResult struct {
	// The application instance's ID.
	ApplicationInstanceId *string `pulumi:"applicationInstanceId"`
	// The application instance's ARN.
	Arn *string `pulumi:"arn"`
	// The application instance's created time.
	CreatedTime *int `pulumi:"createdTime"`
	// The application instance's default runtime context device name.
	DefaultRuntimeContextDeviceName *string `pulumi:"defaultRuntimeContextDeviceName"`
	// The application instance's health status.
	HealthStatus *ApplicationInstanceHealthStatus `pulumi:"healthStatus"`
	// The application instance's last updated time.
	LastUpdatedTime *int `pulumi:"lastUpdatedTime"`
	// The application instance's status.
	Status *ApplicationInstanceStatus `pulumi:"status"`
	// The application instance's status description.
	StatusDescription *string `pulumi:"statusDescription"`
	// Tags for the application instance.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupApplicationInstanceOutput(ctx *pulumi.Context, args LookupApplicationInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationInstanceResultOutput, error) {
			args := v.(LookupApplicationInstanceArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApplicationInstanceResult
			secret, err := ctx.InvokePackageRaw("aws-native:panorama:getApplicationInstance", args, &rv, "", opts...)
			if err != nil {
				return LookupApplicationInstanceResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApplicationInstanceResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApplicationInstanceResultOutput), nil
			}
			return output, nil
		}).(LookupApplicationInstanceResultOutput)
}

type LookupApplicationInstanceOutputArgs struct {
	// The application instance's ID.
	ApplicationInstanceId pulumi.StringInput `pulumi:"applicationInstanceId"`
}

func (LookupApplicationInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInstanceArgs)(nil)).Elem()
}

type LookupApplicationInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInstanceResult)(nil)).Elem()
}

func (o LookupApplicationInstanceResultOutput) ToLookupApplicationInstanceResultOutput() LookupApplicationInstanceResultOutput {
	return o
}

func (o LookupApplicationInstanceResultOutput) ToLookupApplicationInstanceResultOutputWithContext(ctx context.Context) LookupApplicationInstanceResultOutput {
	return o
}

// The application instance's ID.
func (o LookupApplicationInstanceResultOutput) ApplicationInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *string { return v.ApplicationInstanceId }).(pulumi.StringPtrOutput)
}

// The application instance's ARN.
func (o LookupApplicationInstanceResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The application instance's created time.
func (o LookupApplicationInstanceResultOutput) CreatedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *int { return v.CreatedTime }).(pulumi.IntPtrOutput)
}

// The application instance's default runtime context device name.
func (o LookupApplicationInstanceResultOutput) DefaultRuntimeContextDeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *string { return v.DefaultRuntimeContextDeviceName }).(pulumi.StringPtrOutput)
}

// The application instance's health status.
func (o LookupApplicationInstanceResultOutput) HealthStatus() ApplicationInstanceHealthStatusPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *ApplicationInstanceHealthStatus { return v.HealthStatus }).(ApplicationInstanceHealthStatusPtrOutput)
}

// The application instance's last updated time.
func (o LookupApplicationInstanceResultOutput) LastUpdatedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *int { return v.LastUpdatedTime }).(pulumi.IntPtrOutput)
}

// The application instance's status.
func (o LookupApplicationInstanceResultOutput) Status() ApplicationInstanceStatusPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *ApplicationInstanceStatus { return v.Status }).(ApplicationInstanceStatusPtrOutput)
}

// The application instance's status description.
func (o LookupApplicationInstanceResultOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) *string { return v.StatusDescription }).(pulumi.StringPtrOutput)
}

// Tags for the application instance.
func (o LookupApplicationInstanceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupApplicationInstanceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationInstanceResultOutput{})
}
