// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package panorama

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for ApplicationInstance CloudFormation Resource
type ApplicationInstance struct {
	pulumi.CustomResourceState

	// The application instance's ID.
	ApplicationInstanceId pulumi.StringOutput `pulumi:"applicationInstanceId"`
	// The ID of an application instance to replace with the new instance.
	ApplicationInstanceIdToReplace pulumi.StringPtrOutput `pulumi:"applicationInstanceIdToReplace"`
	// The application instance's ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The application instance's created time.
	CreatedTime pulumi.IntOutput `pulumi:"createdTime"`
	// The device's ID.
	DefaultRuntimeContextDevice pulumi.StringOutput `pulumi:"defaultRuntimeContextDevice"`
	// The application instance's default runtime context device name.
	DefaultRuntimeContextDeviceName pulumi.StringOutput `pulumi:"defaultRuntimeContextDeviceName"`
	// A description for the application instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The application instance's health status.
	HealthStatus ApplicationInstanceHealthStatusOutput `pulumi:"healthStatus"`
	// The application instance's last updated time.
	LastUpdatedTime pulumi.IntOutput `pulumi:"lastUpdatedTime"`
	// Parameter overrides for an application instance. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the overrides document.
	ManifestOverridesPayload ApplicationInstanceManifestOverridesPayloadPtrOutput `pulumi:"manifestOverridesPayload"`
	// A application verion's manifest file. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the application manifest ( `graph.json` ). This file is located in the `graphs` folder in your application source.
	ManifestPayload ApplicationInstanceManifestPayloadOutput `pulumi:"manifestPayload"`
	// A name for the application instance.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The ARN of a runtime role for the application instance.
	RuntimeRoleArn pulumi.StringPtrOutput `pulumi:"runtimeRoleArn"`
	// The application instance's status.
	Status ApplicationInstanceStatusOutput `pulumi:"status"`
	// The application instance's status description.
	StatusDescription pulumi.StringOutput `pulumi:"statusDescription"`
	// Tags for the application instance.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewApplicationInstance registers a new resource with the given unique name, arguments, and options.
func NewApplicationInstance(ctx *pulumi.Context,
	name string, args *ApplicationInstanceArgs, opts ...pulumi.ResourceOption) (*ApplicationInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultRuntimeContextDevice == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRuntimeContextDevice'")
	}
	if args.ManifestPayload == nil {
		return nil, errors.New("invalid value for required argument 'ManifestPayload'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationInstanceIdToReplace",
		"defaultRuntimeContextDevice",
		"description",
		"manifestOverridesPayload",
		"manifestPayload",
		"name",
		"runtimeRoleArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationInstance
	err := ctx.RegisterResource("aws-native:panorama:ApplicationInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationInstance gets an existing ApplicationInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationInstanceState, opts ...pulumi.ResourceOption) (*ApplicationInstance, error) {
	var resource ApplicationInstance
	err := ctx.ReadResource("aws-native:panorama:ApplicationInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationInstance resources.
type applicationInstanceState struct {
}

type ApplicationInstanceState struct {
}

func (ApplicationInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationInstanceState)(nil)).Elem()
}

type applicationInstanceArgs struct {
	// The ID of an application instance to replace with the new instance.
	ApplicationInstanceIdToReplace *string `pulumi:"applicationInstanceIdToReplace"`
	// The device's ID.
	DefaultRuntimeContextDevice string `pulumi:"defaultRuntimeContextDevice"`
	// A description for the application instance.
	Description *string `pulumi:"description"`
	// Parameter overrides for an application instance. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the overrides document.
	ManifestOverridesPayload *ApplicationInstanceManifestOverridesPayload `pulumi:"manifestOverridesPayload"`
	// A application verion's manifest file. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the application manifest ( `graph.json` ). This file is located in the `graphs` folder in your application source.
	ManifestPayload ApplicationInstanceManifestPayload `pulumi:"manifestPayload"`
	// A name for the application instance.
	Name *string `pulumi:"name"`
	// The ARN of a runtime role for the application instance.
	RuntimeRoleArn *string `pulumi:"runtimeRoleArn"`
	// Tags for the application instance.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ApplicationInstance resource.
type ApplicationInstanceArgs struct {
	// The ID of an application instance to replace with the new instance.
	ApplicationInstanceIdToReplace pulumi.StringPtrInput
	// The device's ID.
	DefaultRuntimeContextDevice pulumi.StringInput
	// A description for the application instance.
	Description pulumi.StringPtrInput
	// Parameter overrides for an application instance. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the overrides document.
	ManifestOverridesPayload ApplicationInstanceManifestOverridesPayloadPtrInput
	// A application verion's manifest file. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the application manifest ( `graph.json` ). This file is located in the `graphs` folder in your application source.
	ManifestPayload ApplicationInstanceManifestPayloadInput
	// A name for the application instance.
	Name pulumi.StringPtrInput
	// The ARN of a runtime role for the application instance.
	RuntimeRoleArn pulumi.StringPtrInput
	// Tags for the application instance.
	Tags aws.TagArrayInput
}

func (ApplicationInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationInstanceArgs)(nil)).Elem()
}

type ApplicationInstanceInput interface {
	pulumi.Input

	ToApplicationInstanceOutput() ApplicationInstanceOutput
	ToApplicationInstanceOutputWithContext(ctx context.Context) ApplicationInstanceOutput
}

func (*ApplicationInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInstance)(nil)).Elem()
}

func (i *ApplicationInstance) ToApplicationInstanceOutput() ApplicationInstanceOutput {
	return i.ToApplicationInstanceOutputWithContext(context.Background())
}

func (i *ApplicationInstance) ToApplicationInstanceOutputWithContext(ctx context.Context) ApplicationInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInstanceOutput)
}

type ApplicationInstanceOutput struct{ *pulumi.OutputState }

func (ApplicationInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInstance)(nil)).Elem()
}

func (o ApplicationInstanceOutput) ToApplicationInstanceOutput() ApplicationInstanceOutput {
	return o
}

func (o ApplicationInstanceOutput) ToApplicationInstanceOutputWithContext(ctx context.Context) ApplicationInstanceOutput {
	return o
}

// The application instance's ID.
func (o ApplicationInstanceOutput) ApplicationInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringOutput { return v.ApplicationInstanceId }).(pulumi.StringOutput)
}

// The ID of an application instance to replace with the new instance.
func (o ApplicationInstanceOutput) ApplicationInstanceIdToReplace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringPtrOutput { return v.ApplicationInstanceIdToReplace }).(pulumi.StringPtrOutput)
}

// The application instance's ARN.
func (o ApplicationInstanceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The application instance's created time.
func (o ApplicationInstanceOutput) CreatedTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.IntOutput { return v.CreatedTime }).(pulumi.IntOutput)
}

// The device's ID.
func (o ApplicationInstanceOutput) DefaultRuntimeContextDevice() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringOutput { return v.DefaultRuntimeContextDevice }).(pulumi.StringOutput)
}

// The application instance's default runtime context device name.
func (o ApplicationInstanceOutput) DefaultRuntimeContextDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringOutput { return v.DefaultRuntimeContextDeviceName }).(pulumi.StringOutput)
}

// A description for the application instance.
func (o ApplicationInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The application instance's health status.
func (o ApplicationInstanceOutput) HealthStatus() ApplicationInstanceHealthStatusOutput {
	return o.ApplyT(func(v *ApplicationInstance) ApplicationInstanceHealthStatusOutput { return v.HealthStatus }).(ApplicationInstanceHealthStatusOutput)
}

// The application instance's last updated time.
func (o ApplicationInstanceOutput) LastUpdatedTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.IntOutput { return v.LastUpdatedTime }).(pulumi.IntOutput)
}

// Parameter overrides for an application instance. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the overrides document.
func (o ApplicationInstanceOutput) ManifestOverridesPayload() ApplicationInstanceManifestOverridesPayloadPtrOutput {
	return o.ApplyT(func(v *ApplicationInstance) ApplicationInstanceManifestOverridesPayloadPtrOutput {
		return v.ManifestOverridesPayload
	}).(ApplicationInstanceManifestOverridesPayloadPtrOutput)
}

// A application verion's manifest file. This is a JSON document that has a single key ( `PayloadData` ) where the value is an escaped string representation of the application manifest ( `graph.json` ). This file is located in the `graphs` folder in your application source.
func (o ApplicationInstanceOutput) ManifestPayload() ApplicationInstanceManifestPayloadOutput {
	return o.ApplyT(func(v *ApplicationInstance) ApplicationInstanceManifestPayloadOutput { return v.ManifestPayload }).(ApplicationInstanceManifestPayloadOutput)
}

// A name for the application instance.
func (o ApplicationInstanceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The ARN of a runtime role for the application instance.
func (o ApplicationInstanceOutput) RuntimeRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringPtrOutput { return v.RuntimeRoleArn }).(pulumi.StringPtrOutput)
}

// The application instance's status.
func (o ApplicationInstanceOutput) Status() ApplicationInstanceStatusOutput {
	return o.ApplyT(func(v *ApplicationInstance) ApplicationInstanceStatusOutput { return v.Status }).(ApplicationInstanceStatusOutput)
}

// The application instance's status description.
func (o ApplicationInstanceOutput) StatusDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInstance) pulumi.StringOutput { return v.StatusDescription }).(pulumi.StringOutput)
}

// Tags for the application instance.
func (o ApplicationInstanceOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ApplicationInstance) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInstanceInput)(nil)).Elem(), &ApplicationInstance{})
	pulumi.RegisterOutputType(ApplicationInstanceOutput{})
}
