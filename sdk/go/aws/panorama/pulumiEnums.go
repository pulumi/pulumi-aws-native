// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package panorama

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type ApplicationInstanceHealthStatus string

const (
	ApplicationInstanceHealthStatusRunning      = ApplicationInstanceHealthStatus("RUNNING")
	ApplicationInstanceHealthStatusError        = ApplicationInstanceHealthStatus("ERROR")
	ApplicationInstanceHealthStatusNotAvailable = ApplicationInstanceHealthStatus("NOT_AVAILABLE")
)

type ApplicationInstanceHealthStatusOutput struct{ *pulumi.OutputState }

func (ApplicationInstanceHealthStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInstanceHealthStatus)(nil)).Elem()
}

func (o ApplicationInstanceHealthStatusOutput) ToApplicationInstanceHealthStatusOutput() ApplicationInstanceHealthStatusOutput {
	return o
}

func (o ApplicationInstanceHealthStatusOutput) ToApplicationInstanceHealthStatusOutputWithContext(ctx context.Context) ApplicationInstanceHealthStatusOutput {
	return o
}

func (o ApplicationInstanceHealthStatusOutput) ToApplicationInstanceHealthStatusPtrOutput() ApplicationInstanceHealthStatusPtrOutput {
	return o.ToApplicationInstanceHealthStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceHealthStatusOutput) ToApplicationInstanceHealthStatusPtrOutputWithContext(ctx context.Context) ApplicationInstanceHealthStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInstanceHealthStatus) *ApplicationInstanceHealthStatus {
		return &v
	}).(ApplicationInstanceHealthStatusPtrOutput)
}

func (o ApplicationInstanceHealthStatusOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInstanceHealthStatus] {
	return pulumix.Output[ApplicationInstanceHealthStatus]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInstanceHealthStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationInstanceHealthStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationInstanceHealthStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationInstanceHealthStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceHealthStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationInstanceHealthStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationInstanceHealthStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInstanceHealthStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInstanceHealthStatus)(nil)).Elem()
}

func (o ApplicationInstanceHealthStatusPtrOutput) ToApplicationInstanceHealthStatusPtrOutput() ApplicationInstanceHealthStatusPtrOutput {
	return o
}

func (o ApplicationInstanceHealthStatusPtrOutput) ToApplicationInstanceHealthStatusPtrOutputWithContext(ctx context.Context) ApplicationInstanceHealthStatusPtrOutput {
	return o
}

func (o ApplicationInstanceHealthStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationInstanceHealthStatus] {
	return pulumix.Output[*ApplicationInstanceHealthStatus]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInstanceHealthStatusPtrOutput) Elem() ApplicationInstanceHealthStatusOutput {
	return o.ApplyT(func(v *ApplicationInstanceHealthStatus) ApplicationInstanceHealthStatus {
		if v != nil {
			return *v
		}
		var ret ApplicationInstanceHealthStatus
		return ret
	}).(ApplicationInstanceHealthStatusOutput)
}

func (o ApplicationInstanceHealthStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceHealthStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationInstanceHealthStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationInstanceStatus string

const (
	ApplicationInstanceStatusDeploymentPending    = ApplicationInstanceStatus("DEPLOYMENT_PENDING")
	ApplicationInstanceStatusDeploymentRequested  = ApplicationInstanceStatus("DEPLOYMENT_REQUESTED")
	ApplicationInstanceStatusDeploymentInProgress = ApplicationInstanceStatus("DEPLOYMENT_IN_PROGRESS")
	ApplicationInstanceStatusDeploymentError      = ApplicationInstanceStatus("DEPLOYMENT_ERROR")
	ApplicationInstanceStatusDeploymentSucceeded  = ApplicationInstanceStatus("DEPLOYMENT_SUCCEEDED")
	ApplicationInstanceStatusRemovalPending       = ApplicationInstanceStatus("REMOVAL_PENDING")
	ApplicationInstanceStatusRemovalRequested     = ApplicationInstanceStatus("REMOVAL_REQUESTED")
	ApplicationInstanceStatusRemovalInProgress    = ApplicationInstanceStatus("REMOVAL_IN_PROGRESS")
	ApplicationInstanceStatusRemovalFailed        = ApplicationInstanceStatus("REMOVAL_FAILED")
	ApplicationInstanceStatusRemovalSucceeded     = ApplicationInstanceStatus("REMOVAL_SUCCEEDED")
)

type ApplicationInstanceStatusOutput struct{ *pulumi.OutputState }

func (ApplicationInstanceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInstanceStatus)(nil)).Elem()
}

func (o ApplicationInstanceStatusOutput) ToApplicationInstanceStatusOutput() ApplicationInstanceStatusOutput {
	return o
}

func (o ApplicationInstanceStatusOutput) ToApplicationInstanceStatusOutputWithContext(ctx context.Context) ApplicationInstanceStatusOutput {
	return o
}

func (o ApplicationInstanceStatusOutput) ToApplicationInstanceStatusPtrOutput() ApplicationInstanceStatusPtrOutput {
	return o.ToApplicationInstanceStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceStatusOutput) ToApplicationInstanceStatusPtrOutputWithContext(ctx context.Context) ApplicationInstanceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInstanceStatus) *ApplicationInstanceStatus {
		return &v
	}).(ApplicationInstanceStatusPtrOutput)
}

func (o ApplicationInstanceStatusOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInstanceStatus] {
	return pulumix.Output[ApplicationInstanceStatus]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInstanceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationInstanceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationInstanceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationInstanceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationInstanceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationInstanceStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInstanceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInstanceStatus)(nil)).Elem()
}

func (o ApplicationInstanceStatusPtrOutput) ToApplicationInstanceStatusPtrOutput() ApplicationInstanceStatusPtrOutput {
	return o
}

func (o ApplicationInstanceStatusPtrOutput) ToApplicationInstanceStatusPtrOutputWithContext(ctx context.Context) ApplicationInstanceStatusPtrOutput {
	return o
}

func (o ApplicationInstanceStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationInstanceStatus] {
	return pulumix.Output[*ApplicationInstanceStatus]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInstanceStatusPtrOutput) Elem() ApplicationInstanceStatusOutput {
	return o.ApplyT(func(v *ApplicationInstanceStatus) ApplicationInstanceStatus {
		if v != nil {
			return *v
		}
		var ret ApplicationInstanceStatus
		return ret
	}).(ApplicationInstanceStatusOutput)
}

func (o ApplicationInstanceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationInstanceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationInstanceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PackageVersionStatus string

const (
	PackageVersionStatusRegisterPending   = PackageVersionStatus("REGISTER_PENDING")
	PackageVersionStatusRegisterCompleted = PackageVersionStatus("REGISTER_COMPLETED")
	PackageVersionStatusFailed            = PackageVersionStatus("FAILED")
	PackageVersionStatusDeleting          = PackageVersionStatus("DELETING")
)

type PackageVersionStatusOutput struct{ *pulumi.OutputState }

func (PackageVersionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageVersionStatus)(nil)).Elem()
}

func (o PackageVersionStatusOutput) ToPackageVersionStatusOutput() PackageVersionStatusOutput {
	return o
}

func (o PackageVersionStatusOutput) ToPackageVersionStatusOutputWithContext(ctx context.Context) PackageVersionStatusOutput {
	return o
}

func (o PackageVersionStatusOutput) ToPackageVersionStatusPtrOutput() PackageVersionStatusPtrOutput {
	return o.ToPackageVersionStatusPtrOutputWithContext(context.Background())
}

func (o PackageVersionStatusOutput) ToPackageVersionStatusPtrOutputWithContext(ctx context.Context) PackageVersionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageVersionStatus) *PackageVersionStatus {
		return &v
	}).(PackageVersionStatusPtrOutput)
}

func (o PackageVersionStatusOutput) ToOutput(ctx context.Context) pulumix.Output[PackageVersionStatus] {
	return pulumix.Output[PackageVersionStatus]{
		OutputState: o.OutputState,
	}
}

func (o PackageVersionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PackageVersionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageVersionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PackageVersionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageVersionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PackageVersionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PackageVersionStatusPtrOutput struct{ *pulumi.OutputState }

func (PackageVersionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageVersionStatus)(nil)).Elem()
}

func (o PackageVersionStatusPtrOutput) ToPackageVersionStatusPtrOutput() PackageVersionStatusPtrOutput {
	return o
}

func (o PackageVersionStatusPtrOutput) ToPackageVersionStatusPtrOutputWithContext(ctx context.Context) PackageVersionStatusPtrOutput {
	return o
}

func (o PackageVersionStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PackageVersionStatus] {
	return pulumix.Output[*PackageVersionStatus]{
		OutputState: o.OutputState,
	}
}

func (o PackageVersionStatusPtrOutput) Elem() PackageVersionStatusOutput {
	return o.ApplyT(func(v *PackageVersionStatus) PackageVersionStatus {
		if v != nil {
			return *v
		}
		var ret PackageVersionStatus
		return ret
	}).(PackageVersionStatusOutput)
}

func (o PackageVersionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PackageVersionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PackageVersionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationInstanceHealthStatusOutput{})
	pulumi.RegisterOutputType(ApplicationInstanceHealthStatusPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInstanceStatusOutput{})
	pulumi.RegisterOutputType(ApplicationInstanceStatusPtrOutput{})
	pulumi.RegisterOutputType(PackageVersionStatusOutput{})
	pulumi.RegisterOutputType(PackageVersionStatusPtrOutput{})
}
