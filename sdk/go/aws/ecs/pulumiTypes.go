// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CapacityProviderAutoScalingGroupProvider struct {
	AutoScalingGroupArn          string                                                                `pulumi:"autoScalingGroupArn"`
	ManagedScaling               *CapacityProviderManagedScaling                                       `pulumi:"managedScaling"`
	ManagedTerminationProtection *CapacityProviderAutoScalingGroupProviderManagedTerminationProtection `pulumi:"managedTerminationProtection"`
}

// CapacityProviderAutoScalingGroupProviderInput is an input type that accepts CapacityProviderAutoScalingGroupProviderArgs and CapacityProviderAutoScalingGroupProviderOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderInput` via:
//
//          CapacityProviderAutoScalingGroupProviderArgs{...}
type CapacityProviderAutoScalingGroupProviderInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput
	ToCapacityProviderAutoScalingGroupProviderOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderOutput
}

type CapacityProviderAutoScalingGroupProviderArgs struct {
	AutoScalingGroupArn          pulumi.StringInput                                                           `pulumi:"autoScalingGroupArn"`
	ManagedScaling               CapacityProviderManagedScalingPtrInput                                       `pulumi:"managedScaling"`
	ManagedTerminationProtection CapacityProviderAutoScalingGroupProviderManagedTerminationProtectionPtrInput `pulumi:"managedTerminationProtection"`
}

func (CapacityProviderAutoScalingGroupProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderOutput)
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderOutput).ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx)
}

// CapacityProviderAutoScalingGroupProviderPtrInput is an input type that accepts CapacityProviderAutoScalingGroupProviderArgs, CapacityProviderAutoScalingGroupProviderPtr and CapacityProviderAutoScalingGroupProviderPtrOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderPtrInput` via:
//
//          CapacityProviderAutoScalingGroupProviderArgs{...}
//
//  or:
//
//          nil
type CapacityProviderAutoScalingGroupProviderPtrInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput
	ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput
}

type capacityProviderAutoScalingGroupProviderPtrType CapacityProviderAutoScalingGroupProviderArgs

func CapacityProviderAutoScalingGroupProviderPtr(v *CapacityProviderAutoScalingGroupProviderArgs) CapacityProviderAutoScalingGroupProviderPtrInput {
	return (*capacityProviderAutoScalingGroupProviderPtrType)(v)
}

func (*capacityProviderAutoScalingGroupProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (i *capacityProviderAutoScalingGroupProviderPtrType) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (i *capacityProviderAutoScalingGroupProviderPtrType) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProvider {
		return &v
	}).(CapacityProviderAutoScalingGroupProviderPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderOutput) AutoScalingGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) string { return v.AutoScalingGroupArn }).(pulumi.StringOutput)
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ManagedScaling() CapacityProviderManagedScalingPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *CapacityProviderManagedScaling {
		return v.ManagedScaling
	}).(CapacityProviderManagedScalingPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ManagedTerminationProtection() CapacityProviderAutoScalingGroupProviderManagedTerminationProtectionPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProviderManagedTerminationProtection {
		return v.ManagedTerminationProtection
	}).(CapacityProviderAutoScalingGroupProviderManagedTerminationProtectionPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderPtrOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) Elem() CapacityProviderAutoScalingGroupProviderOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProvider) CapacityProviderAutoScalingGroupProvider {
		if v != nil {
			return *v
		}
		var ret CapacityProviderAutoScalingGroupProvider
		return ret
	}).(CapacityProviderAutoScalingGroupProviderOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) AutoScalingGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProvider) *string {
		if v == nil {
			return nil
		}
		return &v.AutoScalingGroupArn
	}).(pulumi.StringPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ManagedScaling() CapacityProviderManagedScalingPtrOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProvider) *CapacityProviderManagedScaling {
		if v == nil {
			return nil
		}
		return v.ManagedScaling
	}).(CapacityProviderManagedScalingPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ManagedTerminationProtection() CapacityProviderAutoScalingGroupProviderManagedTerminationProtectionPtrOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProviderManagedTerminationProtection {
		if v == nil {
			return nil
		}
		return v.ManagedTerminationProtection
	}).(CapacityProviderAutoScalingGroupProviderManagedTerminationProtectionPtrOutput)
}

// The managed scaling settings for the Auto Scaling group capacity provider.
type CapacityProviderManagedScaling struct {
	InstanceWarmupPeriod   *int                                  `pulumi:"instanceWarmupPeriod"`
	MaximumScalingStepSize *int                                  `pulumi:"maximumScalingStepSize"`
	MinimumScalingStepSize *int                                  `pulumi:"minimumScalingStepSize"`
	Status                 *CapacityProviderManagedScalingStatus `pulumi:"status"`
	TargetCapacity         *int                                  `pulumi:"targetCapacity"`
}

// CapacityProviderManagedScalingInput is an input type that accepts CapacityProviderManagedScalingArgs and CapacityProviderManagedScalingOutput values.
// You can construct a concrete instance of `CapacityProviderManagedScalingInput` via:
//
//          CapacityProviderManagedScalingArgs{...}
type CapacityProviderManagedScalingInput interface {
	pulumi.Input

	ToCapacityProviderManagedScalingOutput() CapacityProviderManagedScalingOutput
	ToCapacityProviderManagedScalingOutputWithContext(context.Context) CapacityProviderManagedScalingOutput
}

// The managed scaling settings for the Auto Scaling group capacity provider.
type CapacityProviderManagedScalingArgs struct {
	InstanceWarmupPeriod   pulumi.IntPtrInput                           `pulumi:"instanceWarmupPeriod"`
	MaximumScalingStepSize pulumi.IntPtrInput                           `pulumi:"maximumScalingStepSize"`
	MinimumScalingStepSize pulumi.IntPtrInput                           `pulumi:"minimumScalingStepSize"`
	Status                 CapacityProviderManagedScalingStatusPtrInput `pulumi:"status"`
	TargetCapacity         pulumi.IntPtrInput                           `pulumi:"targetCapacity"`
}

func (CapacityProviderManagedScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderManagedScaling)(nil)).Elem()
}

func (i CapacityProviderManagedScalingArgs) ToCapacityProviderManagedScalingOutput() CapacityProviderManagedScalingOutput {
	return i.ToCapacityProviderManagedScalingOutputWithContext(context.Background())
}

func (i CapacityProviderManagedScalingArgs) ToCapacityProviderManagedScalingOutputWithContext(ctx context.Context) CapacityProviderManagedScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderManagedScalingOutput)
}

func (i CapacityProviderManagedScalingArgs) ToCapacityProviderManagedScalingPtrOutput() CapacityProviderManagedScalingPtrOutput {
	return i.ToCapacityProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (i CapacityProviderManagedScalingArgs) ToCapacityProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderManagedScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderManagedScalingOutput).ToCapacityProviderManagedScalingPtrOutputWithContext(ctx)
}

// CapacityProviderManagedScalingPtrInput is an input type that accepts CapacityProviderManagedScalingArgs, CapacityProviderManagedScalingPtr and CapacityProviderManagedScalingPtrOutput values.
// You can construct a concrete instance of `CapacityProviderManagedScalingPtrInput` via:
//
//          CapacityProviderManagedScalingArgs{...}
//
//  or:
//
//          nil
type CapacityProviderManagedScalingPtrInput interface {
	pulumi.Input

	ToCapacityProviderManagedScalingPtrOutput() CapacityProviderManagedScalingPtrOutput
	ToCapacityProviderManagedScalingPtrOutputWithContext(context.Context) CapacityProviderManagedScalingPtrOutput
}

type capacityProviderManagedScalingPtrType CapacityProviderManagedScalingArgs

func CapacityProviderManagedScalingPtr(v *CapacityProviderManagedScalingArgs) CapacityProviderManagedScalingPtrInput {
	return (*capacityProviderManagedScalingPtrType)(v)
}

func (*capacityProviderManagedScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderManagedScaling)(nil)).Elem()
}

func (i *capacityProviderManagedScalingPtrType) ToCapacityProviderManagedScalingPtrOutput() CapacityProviderManagedScalingPtrOutput {
	return i.ToCapacityProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (i *capacityProviderManagedScalingPtrType) ToCapacityProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderManagedScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderManagedScalingPtrOutput)
}

// The managed scaling settings for the Auto Scaling group capacity provider.
type CapacityProviderManagedScalingOutput struct{ *pulumi.OutputState }

func (CapacityProviderManagedScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderManagedScaling)(nil)).Elem()
}

func (o CapacityProviderManagedScalingOutput) ToCapacityProviderManagedScalingOutput() CapacityProviderManagedScalingOutput {
	return o
}

func (o CapacityProviderManagedScalingOutput) ToCapacityProviderManagedScalingOutputWithContext(ctx context.Context) CapacityProviderManagedScalingOutput {
	return o
}

func (o CapacityProviderManagedScalingOutput) ToCapacityProviderManagedScalingPtrOutput() CapacityProviderManagedScalingPtrOutput {
	return o.ToCapacityProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (o CapacityProviderManagedScalingOutput) ToCapacityProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderManagedScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityProviderManagedScaling) *CapacityProviderManagedScaling {
		return &v
	}).(CapacityProviderManagedScalingPtrOutput)
}

func (o CapacityProviderManagedScalingOutput) InstanceWarmupPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderManagedScaling) *int { return v.InstanceWarmupPeriod }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingOutput) MaximumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderManagedScaling) *int { return v.MaximumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingOutput) MinimumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderManagedScaling) *int { return v.MinimumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingOutput) Status() CapacityProviderManagedScalingStatusPtrOutput {
	return o.ApplyT(func(v CapacityProviderManagedScaling) *CapacityProviderManagedScalingStatus { return v.Status }).(CapacityProviderManagedScalingStatusPtrOutput)
}

func (o CapacityProviderManagedScalingOutput) TargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderManagedScaling) *int { return v.TargetCapacity }).(pulumi.IntPtrOutput)
}

type CapacityProviderManagedScalingPtrOutput struct{ *pulumi.OutputState }

func (CapacityProviderManagedScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderManagedScaling)(nil)).Elem()
}

func (o CapacityProviderManagedScalingPtrOutput) ToCapacityProviderManagedScalingPtrOutput() CapacityProviderManagedScalingPtrOutput {
	return o
}

func (o CapacityProviderManagedScalingPtrOutput) ToCapacityProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderManagedScalingPtrOutput {
	return o
}

func (o CapacityProviderManagedScalingPtrOutput) Elem() CapacityProviderManagedScalingOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) CapacityProviderManagedScaling {
		if v != nil {
			return *v
		}
		var ret CapacityProviderManagedScaling
		return ret
	}).(CapacityProviderManagedScalingOutput)
}

func (o CapacityProviderManagedScalingPtrOutput) InstanceWarmupPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) *int {
		if v == nil {
			return nil
		}
		return v.InstanceWarmupPeriod
	}).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingPtrOutput) MaximumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) *int {
		if v == nil {
			return nil
		}
		return v.MaximumScalingStepSize
	}).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingPtrOutput) MinimumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) *int {
		if v == nil {
			return nil
		}
		return v.MinimumScalingStepSize
	}).(pulumi.IntPtrOutput)
}

func (o CapacityProviderManagedScalingPtrOutput) Status() CapacityProviderManagedScalingStatusPtrOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) *CapacityProviderManagedScalingStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(CapacityProviderManagedScalingStatusPtrOutput)
}

func (o CapacityProviderManagedScalingPtrOutput) TargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CapacityProviderManagedScaling) *int {
		if v == nil {
			return nil
		}
		return v.TargetCapacity
	}).(pulumi.IntPtrOutput)
}

type CapacityProviderTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// CapacityProviderTagInput is an input type that accepts CapacityProviderTagArgs and CapacityProviderTagOutput values.
// You can construct a concrete instance of `CapacityProviderTagInput` via:
//
//          CapacityProviderTagArgs{...}
type CapacityProviderTagInput interface {
	pulumi.Input

	ToCapacityProviderTagOutput() CapacityProviderTagOutput
	ToCapacityProviderTagOutputWithContext(context.Context) CapacityProviderTagOutput
}

type CapacityProviderTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapacityProviderTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderTag)(nil)).Elem()
}

func (i CapacityProviderTagArgs) ToCapacityProviderTagOutput() CapacityProviderTagOutput {
	return i.ToCapacityProviderTagOutputWithContext(context.Background())
}

func (i CapacityProviderTagArgs) ToCapacityProviderTagOutputWithContext(ctx context.Context) CapacityProviderTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderTagOutput)
}

// CapacityProviderTagArrayInput is an input type that accepts CapacityProviderTagArray and CapacityProviderTagArrayOutput values.
// You can construct a concrete instance of `CapacityProviderTagArrayInput` via:
//
//          CapacityProviderTagArray{ CapacityProviderTagArgs{...} }
type CapacityProviderTagArrayInput interface {
	pulumi.Input

	ToCapacityProviderTagArrayOutput() CapacityProviderTagArrayOutput
	ToCapacityProviderTagArrayOutputWithContext(context.Context) CapacityProviderTagArrayOutput
}

type CapacityProviderTagArray []CapacityProviderTagInput

func (CapacityProviderTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapacityProviderTag)(nil)).Elem()
}

func (i CapacityProviderTagArray) ToCapacityProviderTagArrayOutput() CapacityProviderTagArrayOutput {
	return i.ToCapacityProviderTagArrayOutputWithContext(context.Background())
}

func (i CapacityProviderTagArray) ToCapacityProviderTagArrayOutputWithContext(ctx context.Context) CapacityProviderTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderTagArrayOutput)
}

type CapacityProviderTagOutput struct{ *pulumi.OutputState }

func (CapacityProviderTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderTag)(nil)).Elem()
}

func (o CapacityProviderTagOutput) ToCapacityProviderTagOutput() CapacityProviderTagOutput {
	return o
}

func (o CapacityProviderTagOutput) ToCapacityProviderTagOutputWithContext(ctx context.Context) CapacityProviderTagOutput {
	return o
}

func (o CapacityProviderTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o CapacityProviderTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapacityProviderTagArrayOutput struct{ *pulumi.OutputState }

func (CapacityProviderTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapacityProviderTag)(nil)).Elem()
}

func (o CapacityProviderTagArrayOutput) ToCapacityProviderTagArrayOutput() CapacityProviderTagArrayOutput {
	return o
}

func (o CapacityProviderTagArrayOutput) ToCapacityProviderTagArrayOutputWithContext(ctx context.Context) CapacityProviderTagArrayOutput {
	return o
}

func (o CapacityProviderTagArrayOutput) Index(i pulumi.IntInput) CapacityProviderTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapacityProviderTag {
		return vs[0].([]CapacityProviderTag)[vs[1].(int)]
	}).(CapacityProviderTagOutput)
}

type ClusterCapacityProviderAssociationsCapacityProviderStrategy struct {
	Base             *int   `pulumi:"base"`
	CapacityProvider string `pulumi:"capacityProvider"`
	Weight           *int   `pulumi:"weight"`
}

// ClusterCapacityProviderAssociationsCapacityProviderStrategyInput is an input type that accepts ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs and ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput values.
// You can construct a concrete instance of `ClusterCapacityProviderAssociationsCapacityProviderStrategyInput` via:
//
//          ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs{...}
type ClusterCapacityProviderAssociationsCapacityProviderStrategyInput interface {
	pulumi.Input

	ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput
	ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutputWithContext(context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput
}

type ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs struct {
	Base             pulumi.IntPtrInput `pulumi:"base"`
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput `pulumi:"weight"`
}

func (ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCapacityProviderAssociationsCapacityProviderStrategy)(nil)).Elem()
}

func (i ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs) ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput {
	return i.ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutputWithContext(context.Background())
}

func (i ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs) ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutputWithContext(ctx context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput)
}

// ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayInput is an input type that accepts ClusterCapacityProviderAssociationsCapacityProviderStrategyArray and ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput values.
// You can construct a concrete instance of `ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayInput` via:
//
//          ClusterCapacityProviderAssociationsCapacityProviderStrategyArray{ ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs{...} }
type ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayInput interface {
	pulumi.Input

	ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput
	ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutputWithContext(context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput
}

type ClusterCapacityProviderAssociationsCapacityProviderStrategyArray []ClusterCapacityProviderAssociationsCapacityProviderStrategyInput

func (ClusterCapacityProviderAssociationsCapacityProviderStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCapacityProviderAssociationsCapacityProviderStrategy)(nil)).Elem()
}

func (i ClusterCapacityProviderAssociationsCapacityProviderStrategyArray) ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput {
	return i.ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutputWithContext(context.Background())
}

func (i ClusterCapacityProviderAssociationsCapacityProviderStrategyArray) ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput)
}

type ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput struct{ *pulumi.OutputState }

func (ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCapacityProviderAssociationsCapacityProviderStrategy)(nil)).Elem()
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput {
	return o
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) ToClusterCapacityProviderAssociationsCapacityProviderStrategyOutputWithContext(ctx context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput {
	return o
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCapacityProviderAssociationsCapacityProviderStrategy) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCapacityProviderAssociationsCapacityProviderStrategy) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCapacityProviderAssociationsCapacityProviderStrategy) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput struct{ *pulumi.OutputState }

func (ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCapacityProviderAssociationsCapacityProviderStrategy)(nil)).Elem()
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput) ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput() ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput {
	return o
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput) ToClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput {
	return o
}

func (o ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput) Index(i pulumi.IntInput) ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCapacityProviderAssociationsCapacityProviderStrategy {
		return vs[0].([]ClusterCapacityProviderAssociationsCapacityProviderStrategy)[vs[1].(int)]
	}).(ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput)
}

// A capacity provider strategy consists of one or more capacity providers along with the `base` and `weight` to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an `ACTIVE` or `UPDATING` status can be used.
type ClusterCapacityProviderStrategyItem struct {
	Base             *int    `pulumi:"base"`
	CapacityProvider *string `pulumi:"capacityProvider"`
	Weight           *int    `pulumi:"weight"`
}

// ClusterCapacityProviderStrategyItemInput is an input type that accepts ClusterCapacityProviderStrategyItemArgs and ClusterCapacityProviderStrategyItemOutput values.
// You can construct a concrete instance of `ClusterCapacityProviderStrategyItemInput` via:
//
//          ClusterCapacityProviderStrategyItemArgs{...}
type ClusterCapacityProviderStrategyItemInput interface {
	pulumi.Input

	ToClusterCapacityProviderStrategyItemOutput() ClusterCapacityProviderStrategyItemOutput
	ToClusterCapacityProviderStrategyItemOutputWithContext(context.Context) ClusterCapacityProviderStrategyItemOutput
}

// A capacity provider strategy consists of one or more capacity providers along with the `base` and `weight` to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an `ACTIVE` or `UPDATING` status can be used.
type ClusterCapacityProviderStrategyItemArgs struct {
	Base             pulumi.IntPtrInput    `pulumi:"base"`
	CapacityProvider pulumi.StringPtrInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput    `pulumi:"weight"`
}

func (ClusterCapacityProviderStrategyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCapacityProviderStrategyItem)(nil)).Elem()
}

func (i ClusterCapacityProviderStrategyItemArgs) ToClusterCapacityProviderStrategyItemOutput() ClusterCapacityProviderStrategyItemOutput {
	return i.ToClusterCapacityProviderStrategyItemOutputWithContext(context.Background())
}

func (i ClusterCapacityProviderStrategyItemArgs) ToClusterCapacityProviderStrategyItemOutputWithContext(ctx context.Context) ClusterCapacityProviderStrategyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCapacityProviderStrategyItemOutput)
}

// ClusterCapacityProviderStrategyItemArrayInput is an input type that accepts ClusterCapacityProviderStrategyItemArray and ClusterCapacityProviderStrategyItemArrayOutput values.
// You can construct a concrete instance of `ClusterCapacityProviderStrategyItemArrayInput` via:
//
//          ClusterCapacityProviderStrategyItemArray{ ClusterCapacityProviderStrategyItemArgs{...} }
type ClusterCapacityProviderStrategyItemArrayInput interface {
	pulumi.Input

	ToClusterCapacityProviderStrategyItemArrayOutput() ClusterCapacityProviderStrategyItemArrayOutput
	ToClusterCapacityProviderStrategyItemArrayOutputWithContext(context.Context) ClusterCapacityProviderStrategyItemArrayOutput
}

type ClusterCapacityProviderStrategyItemArray []ClusterCapacityProviderStrategyItemInput

func (ClusterCapacityProviderStrategyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCapacityProviderStrategyItem)(nil)).Elem()
}

func (i ClusterCapacityProviderStrategyItemArray) ToClusterCapacityProviderStrategyItemArrayOutput() ClusterCapacityProviderStrategyItemArrayOutput {
	return i.ToClusterCapacityProviderStrategyItemArrayOutputWithContext(context.Background())
}

func (i ClusterCapacityProviderStrategyItemArray) ToClusterCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) ClusterCapacityProviderStrategyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCapacityProviderStrategyItemArrayOutput)
}

// A capacity provider strategy consists of one or more capacity providers along with the `base` and `weight` to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an `ACTIVE` or `UPDATING` status can be used.
type ClusterCapacityProviderStrategyItemOutput struct{ *pulumi.OutputState }

func (ClusterCapacityProviderStrategyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCapacityProviderStrategyItem)(nil)).Elem()
}

func (o ClusterCapacityProviderStrategyItemOutput) ToClusterCapacityProviderStrategyItemOutput() ClusterCapacityProviderStrategyItemOutput {
	return o
}

func (o ClusterCapacityProviderStrategyItemOutput) ToClusterCapacityProviderStrategyItemOutputWithContext(ctx context.Context) ClusterCapacityProviderStrategyItemOutput {
	return o
}

func (o ClusterCapacityProviderStrategyItemOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCapacityProviderStrategyItem) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ClusterCapacityProviderStrategyItemOutput) CapacityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCapacityProviderStrategyItem) *string { return v.CapacityProvider }).(pulumi.StringPtrOutput)
}

func (o ClusterCapacityProviderStrategyItemOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCapacityProviderStrategyItem) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ClusterCapacityProviderStrategyItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterCapacityProviderStrategyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCapacityProviderStrategyItem)(nil)).Elem()
}

func (o ClusterCapacityProviderStrategyItemArrayOutput) ToClusterCapacityProviderStrategyItemArrayOutput() ClusterCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o ClusterCapacityProviderStrategyItemArrayOutput) ToClusterCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) ClusterCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o ClusterCapacityProviderStrategyItemArrayOutput) Index(i pulumi.IntInput) ClusterCapacityProviderStrategyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCapacityProviderStrategyItem {
		return vs[0].([]ClusterCapacityProviderStrategyItem)[vs[1].(int)]
	}).(ClusterCapacityProviderStrategyItemOutput)
}

// The configurations to be set at cluster level.
type ClusterConfiguration struct {
	ExecuteCommandConfiguration *ClusterExecuteCommandConfiguration `pulumi:"executeCommandConfiguration"`
}

// ClusterConfigurationInput is an input type that accepts ClusterConfigurationArgs and ClusterConfigurationOutput values.
// You can construct a concrete instance of `ClusterConfigurationInput` via:
//
//          ClusterConfigurationArgs{...}
type ClusterConfigurationInput interface {
	pulumi.Input

	ToClusterConfigurationOutput() ClusterConfigurationOutput
	ToClusterConfigurationOutputWithContext(context.Context) ClusterConfigurationOutput
}

// The configurations to be set at cluster level.
type ClusterConfigurationArgs struct {
	ExecuteCommandConfiguration ClusterExecuteCommandConfigurationPtrInput `pulumi:"executeCommandConfiguration"`
}

func (ClusterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfiguration)(nil)).Elem()
}

func (i ClusterConfigurationArgs) ToClusterConfigurationOutput() ClusterConfigurationOutput {
	return i.ToClusterConfigurationOutputWithContext(context.Background())
}

func (i ClusterConfigurationArgs) ToClusterConfigurationOutputWithContext(ctx context.Context) ClusterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationOutput)
}

func (i ClusterConfigurationArgs) ToClusterConfigurationPtrOutput() ClusterConfigurationPtrOutput {
	return i.ToClusterConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterConfigurationArgs) ToClusterConfigurationPtrOutputWithContext(ctx context.Context) ClusterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationOutput).ToClusterConfigurationPtrOutputWithContext(ctx)
}

// ClusterConfigurationPtrInput is an input type that accepts ClusterConfigurationArgs, ClusterConfigurationPtr and ClusterConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterConfigurationPtrInput` via:
//
//          ClusterConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterConfigurationPtrInput interface {
	pulumi.Input

	ToClusterConfigurationPtrOutput() ClusterConfigurationPtrOutput
	ToClusterConfigurationPtrOutputWithContext(context.Context) ClusterConfigurationPtrOutput
}

type clusterConfigurationPtrType ClusterConfigurationArgs

func ClusterConfigurationPtr(v *ClusterConfigurationArgs) ClusterConfigurationPtrInput {
	return (*clusterConfigurationPtrType)(v)
}

func (*clusterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfiguration)(nil)).Elem()
}

func (i *clusterConfigurationPtrType) ToClusterConfigurationPtrOutput() ClusterConfigurationPtrOutput {
	return i.ToClusterConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterConfigurationPtrType) ToClusterConfigurationPtrOutputWithContext(ctx context.Context) ClusterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationPtrOutput)
}

// The configurations to be set at cluster level.
type ClusterConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfiguration)(nil)).Elem()
}

func (o ClusterConfigurationOutput) ToClusterConfigurationOutput() ClusterConfigurationOutput {
	return o
}

func (o ClusterConfigurationOutput) ToClusterConfigurationOutputWithContext(ctx context.Context) ClusterConfigurationOutput {
	return o
}

func (o ClusterConfigurationOutput) ToClusterConfigurationPtrOutput() ClusterConfigurationPtrOutput {
	return o.ToClusterConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterConfigurationOutput) ToClusterConfigurationPtrOutputWithContext(ctx context.Context) ClusterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterConfiguration) *ClusterConfiguration {
		return &v
	}).(ClusterConfigurationPtrOutput)
}

func (o ClusterConfigurationOutput) ExecuteCommandConfiguration() ClusterExecuteCommandConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterConfiguration) *ClusterExecuteCommandConfiguration { return v.ExecuteCommandConfiguration }).(ClusterExecuteCommandConfigurationPtrOutput)
}

type ClusterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfiguration)(nil)).Elem()
}

func (o ClusterConfigurationPtrOutput) ToClusterConfigurationPtrOutput() ClusterConfigurationPtrOutput {
	return o
}

func (o ClusterConfigurationPtrOutput) ToClusterConfigurationPtrOutputWithContext(ctx context.Context) ClusterConfigurationPtrOutput {
	return o
}

func (o ClusterConfigurationPtrOutput) Elem() ClusterConfigurationOutput {
	return o.ApplyT(func(v *ClusterConfiguration) ClusterConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterConfiguration
		return ret
	}).(ClusterConfigurationOutput)
}

func (o ClusterConfigurationPtrOutput) ExecuteCommandConfiguration() ClusterExecuteCommandConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterConfiguration) *ClusterExecuteCommandConfiguration {
		if v == nil {
			return nil
		}
		return v.ExecuteCommandConfiguration
	}).(ClusterExecuteCommandConfigurationPtrOutput)
}

// The configuration for ExecuteCommand.
type ClusterExecuteCommandConfiguration struct {
	KmsKeyId         *string                                `pulumi:"kmsKeyId"`
	LogConfiguration *ClusterExecuteCommandLogConfiguration `pulumi:"logConfiguration"`
	Logging          *string                                `pulumi:"logging"`
}

// ClusterExecuteCommandConfigurationInput is an input type that accepts ClusterExecuteCommandConfigurationArgs and ClusterExecuteCommandConfigurationOutput values.
// You can construct a concrete instance of `ClusterExecuteCommandConfigurationInput` via:
//
//          ClusterExecuteCommandConfigurationArgs{...}
type ClusterExecuteCommandConfigurationInput interface {
	pulumi.Input

	ToClusterExecuteCommandConfigurationOutput() ClusterExecuteCommandConfigurationOutput
	ToClusterExecuteCommandConfigurationOutputWithContext(context.Context) ClusterExecuteCommandConfigurationOutput
}

// The configuration for ExecuteCommand.
type ClusterExecuteCommandConfigurationArgs struct {
	KmsKeyId         pulumi.StringPtrInput                         `pulumi:"kmsKeyId"`
	LogConfiguration ClusterExecuteCommandLogConfigurationPtrInput `pulumi:"logConfiguration"`
	Logging          pulumi.StringPtrInput                         `pulumi:"logging"`
}

func (ClusterExecuteCommandConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExecuteCommandConfiguration)(nil)).Elem()
}

func (i ClusterExecuteCommandConfigurationArgs) ToClusterExecuteCommandConfigurationOutput() ClusterExecuteCommandConfigurationOutput {
	return i.ToClusterExecuteCommandConfigurationOutputWithContext(context.Background())
}

func (i ClusterExecuteCommandConfigurationArgs) ToClusterExecuteCommandConfigurationOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandConfigurationOutput)
}

func (i ClusterExecuteCommandConfigurationArgs) ToClusterExecuteCommandConfigurationPtrOutput() ClusterExecuteCommandConfigurationPtrOutput {
	return i.ToClusterExecuteCommandConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterExecuteCommandConfigurationArgs) ToClusterExecuteCommandConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandConfigurationOutput).ToClusterExecuteCommandConfigurationPtrOutputWithContext(ctx)
}

// ClusterExecuteCommandConfigurationPtrInput is an input type that accepts ClusterExecuteCommandConfigurationArgs, ClusterExecuteCommandConfigurationPtr and ClusterExecuteCommandConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterExecuteCommandConfigurationPtrInput` via:
//
//          ClusterExecuteCommandConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterExecuteCommandConfigurationPtrInput interface {
	pulumi.Input

	ToClusterExecuteCommandConfigurationPtrOutput() ClusterExecuteCommandConfigurationPtrOutput
	ToClusterExecuteCommandConfigurationPtrOutputWithContext(context.Context) ClusterExecuteCommandConfigurationPtrOutput
}

type clusterExecuteCommandConfigurationPtrType ClusterExecuteCommandConfigurationArgs

func ClusterExecuteCommandConfigurationPtr(v *ClusterExecuteCommandConfigurationArgs) ClusterExecuteCommandConfigurationPtrInput {
	return (*clusterExecuteCommandConfigurationPtrType)(v)
}

func (*clusterExecuteCommandConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExecuteCommandConfiguration)(nil)).Elem()
}

func (i *clusterExecuteCommandConfigurationPtrType) ToClusterExecuteCommandConfigurationPtrOutput() ClusterExecuteCommandConfigurationPtrOutput {
	return i.ToClusterExecuteCommandConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterExecuteCommandConfigurationPtrType) ToClusterExecuteCommandConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandConfigurationPtrOutput)
}

// The configuration for ExecuteCommand.
type ClusterExecuteCommandConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterExecuteCommandConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExecuteCommandConfiguration)(nil)).Elem()
}

func (o ClusterExecuteCommandConfigurationOutput) ToClusterExecuteCommandConfigurationOutput() ClusterExecuteCommandConfigurationOutput {
	return o
}

func (o ClusterExecuteCommandConfigurationOutput) ToClusterExecuteCommandConfigurationOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationOutput {
	return o
}

func (o ClusterExecuteCommandConfigurationOutput) ToClusterExecuteCommandConfigurationPtrOutput() ClusterExecuteCommandConfigurationPtrOutput {
	return o.ToClusterExecuteCommandConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterExecuteCommandConfigurationOutput) ToClusterExecuteCommandConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterExecuteCommandConfiguration) *ClusterExecuteCommandConfiguration {
		return &v
	}).(ClusterExecuteCommandConfigurationPtrOutput)
}

func (o ClusterExecuteCommandConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandConfigurationOutput) LogConfiguration() ClusterExecuteCommandLogConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandConfiguration) *ClusterExecuteCommandLogConfiguration {
		return v.LogConfiguration
	}).(ClusterExecuteCommandLogConfigurationPtrOutput)
}

func (o ClusterExecuteCommandConfigurationOutput) Logging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandConfiguration) *string { return v.Logging }).(pulumi.StringPtrOutput)
}

type ClusterExecuteCommandConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterExecuteCommandConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExecuteCommandConfiguration)(nil)).Elem()
}

func (o ClusterExecuteCommandConfigurationPtrOutput) ToClusterExecuteCommandConfigurationPtrOutput() ClusterExecuteCommandConfigurationPtrOutput {
	return o
}

func (o ClusterExecuteCommandConfigurationPtrOutput) ToClusterExecuteCommandConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandConfigurationPtrOutput {
	return o
}

func (o ClusterExecuteCommandConfigurationPtrOutput) Elem() ClusterExecuteCommandConfigurationOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandConfiguration) ClusterExecuteCommandConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterExecuteCommandConfiguration
		return ret
	}).(ClusterExecuteCommandConfigurationOutput)
}

func (o ClusterExecuteCommandConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandConfigurationPtrOutput) LogConfiguration() ClusterExecuteCommandLogConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandConfiguration) *ClusterExecuteCommandLogConfiguration {
		if v == nil {
			return nil
		}
		return v.LogConfiguration
	}).(ClusterExecuteCommandLogConfigurationPtrOutput)
}

func (o ClusterExecuteCommandConfigurationPtrOutput) Logging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(pulumi.StringPtrOutput)
}

// The session logging configuration for ExecuteCommand.
type ClusterExecuteCommandLogConfiguration struct {
	CloudWatchEncryptionEnabled *bool   `pulumi:"cloudWatchEncryptionEnabled"`
	CloudWatchLogGroupName      *string `pulumi:"cloudWatchLogGroupName"`
	S3BucketName                *string `pulumi:"s3BucketName"`
	S3EncryptionEnabled         *bool   `pulumi:"s3EncryptionEnabled"`
	S3KeyPrefix                 *string `pulumi:"s3KeyPrefix"`
}

// ClusterExecuteCommandLogConfigurationInput is an input type that accepts ClusterExecuteCommandLogConfigurationArgs and ClusterExecuteCommandLogConfigurationOutput values.
// You can construct a concrete instance of `ClusterExecuteCommandLogConfigurationInput` via:
//
//          ClusterExecuteCommandLogConfigurationArgs{...}
type ClusterExecuteCommandLogConfigurationInput interface {
	pulumi.Input

	ToClusterExecuteCommandLogConfigurationOutput() ClusterExecuteCommandLogConfigurationOutput
	ToClusterExecuteCommandLogConfigurationOutputWithContext(context.Context) ClusterExecuteCommandLogConfigurationOutput
}

// The session logging configuration for ExecuteCommand.
type ClusterExecuteCommandLogConfigurationArgs struct {
	CloudWatchEncryptionEnabled pulumi.BoolPtrInput   `pulumi:"cloudWatchEncryptionEnabled"`
	CloudWatchLogGroupName      pulumi.StringPtrInput `pulumi:"cloudWatchLogGroupName"`
	S3BucketName                pulumi.StringPtrInput `pulumi:"s3BucketName"`
	S3EncryptionEnabled         pulumi.BoolPtrInput   `pulumi:"s3EncryptionEnabled"`
	S3KeyPrefix                 pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (ClusterExecuteCommandLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExecuteCommandLogConfiguration)(nil)).Elem()
}

func (i ClusterExecuteCommandLogConfigurationArgs) ToClusterExecuteCommandLogConfigurationOutput() ClusterExecuteCommandLogConfigurationOutput {
	return i.ToClusterExecuteCommandLogConfigurationOutputWithContext(context.Background())
}

func (i ClusterExecuteCommandLogConfigurationArgs) ToClusterExecuteCommandLogConfigurationOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandLogConfigurationOutput)
}

func (i ClusterExecuteCommandLogConfigurationArgs) ToClusterExecuteCommandLogConfigurationPtrOutput() ClusterExecuteCommandLogConfigurationPtrOutput {
	return i.ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterExecuteCommandLogConfigurationArgs) ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandLogConfigurationOutput).ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(ctx)
}

// ClusterExecuteCommandLogConfigurationPtrInput is an input type that accepts ClusterExecuteCommandLogConfigurationArgs, ClusterExecuteCommandLogConfigurationPtr and ClusterExecuteCommandLogConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterExecuteCommandLogConfigurationPtrInput` via:
//
//          ClusterExecuteCommandLogConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterExecuteCommandLogConfigurationPtrInput interface {
	pulumi.Input

	ToClusterExecuteCommandLogConfigurationPtrOutput() ClusterExecuteCommandLogConfigurationPtrOutput
	ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(context.Context) ClusterExecuteCommandLogConfigurationPtrOutput
}

type clusterExecuteCommandLogConfigurationPtrType ClusterExecuteCommandLogConfigurationArgs

func ClusterExecuteCommandLogConfigurationPtr(v *ClusterExecuteCommandLogConfigurationArgs) ClusterExecuteCommandLogConfigurationPtrInput {
	return (*clusterExecuteCommandLogConfigurationPtrType)(v)
}

func (*clusterExecuteCommandLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExecuteCommandLogConfiguration)(nil)).Elem()
}

func (i *clusterExecuteCommandLogConfigurationPtrType) ToClusterExecuteCommandLogConfigurationPtrOutput() ClusterExecuteCommandLogConfigurationPtrOutput {
	return i.ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterExecuteCommandLogConfigurationPtrType) ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExecuteCommandLogConfigurationPtrOutput)
}

// The session logging configuration for ExecuteCommand.
type ClusterExecuteCommandLogConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterExecuteCommandLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExecuteCommandLogConfiguration)(nil)).Elem()
}

func (o ClusterExecuteCommandLogConfigurationOutput) ToClusterExecuteCommandLogConfigurationOutput() ClusterExecuteCommandLogConfigurationOutput {
	return o
}

func (o ClusterExecuteCommandLogConfigurationOutput) ToClusterExecuteCommandLogConfigurationOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationOutput {
	return o
}

func (o ClusterExecuteCommandLogConfigurationOutput) ToClusterExecuteCommandLogConfigurationPtrOutput() ClusterExecuteCommandLogConfigurationPtrOutput {
	return o.ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterExecuteCommandLogConfigurationOutput) ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterExecuteCommandLogConfiguration) *ClusterExecuteCommandLogConfiguration {
		return &v
	}).(ClusterExecuteCommandLogConfigurationPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationOutput) CloudWatchEncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandLogConfiguration) *bool { return v.CloudWatchEncryptionEnabled }).(pulumi.BoolPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationOutput) CloudWatchLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandLogConfiguration) *string { return v.CloudWatchLogGroupName }).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandLogConfiguration) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationOutput) S3EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandLogConfiguration) *bool { return v.S3EncryptionEnabled }).(pulumi.BoolPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExecuteCommandLogConfiguration) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type ClusterExecuteCommandLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterExecuteCommandLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExecuteCommandLogConfiguration)(nil)).Elem()
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) ToClusterExecuteCommandLogConfigurationPtrOutput() ClusterExecuteCommandLogConfigurationPtrOutput {
	return o
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) ToClusterExecuteCommandLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterExecuteCommandLogConfigurationPtrOutput {
	return o
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) Elem() ClusterExecuteCommandLogConfigurationOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) ClusterExecuteCommandLogConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterExecuteCommandLogConfiguration
		return ret
	}).(ClusterExecuteCommandLogConfigurationOutput)
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) CloudWatchEncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.CloudWatchEncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) CloudWatchLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogGroupName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) S3EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.S3EncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterExecuteCommandLogConfigurationPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExecuteCommandLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
type ClusterSettings struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// ClusterSettingsInput is an input type that accepts ClusterSettingsArgs and ClusterSettingsOutput values.
// You can construct a concrete instance of `ClusterSettingsInput` via:
//
//          ClusterSettingsArgs{...}
type ClusterSettingsInput interface {
	pulumi.Input

	ToClusterSettingsOutput() ClusterSettingsOutput
	ToClusterSettingsOutputWithContext(context.Context) ClusterSettingsOutput
}

// The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
type ClusterSettingsArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSettings)(nil)).Elem()
}

func (i ClusterSettingsArgs) ToClusterSettingsOutput() ClusterSettingsOutput {
	return i.ToClusterSettingsOutputWithContext(context.Background())
}

func (i ClusterSettingsArgs) ToClusterSettingsOutputWithContext(ctx context.Context) ClusterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSettingsOutput)
}

// ClusterSettingsArrayInput is an input type that accepts ClusterSettingsArray and ClusterSettingsArrayOutput values.
// You can construct a concrete instance of `ClusterSettingsArrayInput` via:
//
//          ClusterSettingsArray{ ClusterSettingsArgs{...} }
type ClusterSettingsArrayInput interface {
	pulumi.Input

	ToClusterSettingsArrayOutput() ClusterSettingsArrayOutput
	ToClusterSettingsArrayOutputWithContext(context.Context) ClusterSettingsArrayOutput
}

type ClusterSettingsArray []ClusterSettingsInput

func (ClusterSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSettings)(nil)).Elem()
}

func (i ClusterSettingsArray) ToClusterSettingsArrayOutput() ClusterSettingsArrayOutput {
	return i.ToClusterSettingsArrayOutputWithContext(context.Background())
}

func (i ClusterSettingsArray) ToClusterSettingsArrayOutputWithContext(ctx context.Context) ClusterSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSettingsArrayOutput)
}

// The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
type ClusterSettingsOutput struct{ *pulumi.OutputState }

func (ClusterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSettings)(nil)).Elem()
}

func (o ClusterSettingsOutput) ToClusterSettingsOutput() ClusterSettingsOutput {
	return o
}

func (o ClusterSettingsOutput) ToClusterSettingsOutputWithContext(ctx context.Context) ClusterSettingsOutput {
	return o
}

func (o ClusterSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterSettingsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSettings) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterSettingsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSettings)(nil)).Elem()
}

func (o ClusterSettingsArrayOutput) ToClusterSettingsArrayOutput() ClusterSettingsArrayOutput {
	return o
}

func (o ClusterSettingsArrayOutput) ToClusterSettingsArrayOutputWithContext(ctx context.Context) ClusterSettingsArrayOutput {
	return o
}

func (o ClusterSettingsArrayOutput) Index(i pulumi.IntInput) ClusterSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSettings {
		return vs[0].([]ClusterSettings)[vs[1].(int)]
	}).(ClusterSettingsOutput)
}

// The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
type ClusterTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// ClusterTagInput is an input type that accepts ClusterTagArgs and ClusterTagOutput values.
// You can construct a concrete instance of `ClusterTagInput` via:
//
//          ClusterTagArgs{...}
type ClusterTagInput interface {
	pulumi.Input

	ToClusterTagOutput() ClusterTagOutput
	ToClusterTagOutputWithContext(context.Context) ClusterTagOutput
}

// The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
type ClusterTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (i ClusterTagArgs) ToClusterTagOutput() ClusterTagOutput {
	return i.ToClusterTagOutputWithContext(context.Background())
}

func (i ClusterTagArgs) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagOutput)
}

// ClusterTagArrayInput is an input type that accepts ClusterTagArray and ClusterTagArrayOutput values.
// You can construct a concrete instance of `ClusterTagArrayInput` via:
//
//          ClusterTagArray{ ClusterTagArgs{...} }
type ClusterTagArrayInput interface {
	pulumi.Input

	ToClusterTagArrayOutput() ClusterTagArrayOutput
	ToClusterTagArrayOutputWithContext(context.Context) ClusterTagArrayOutput
}

type ClusterTagArray []ClusterTagInput

func (ClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (i ClusterTagArray) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return i.ToClusterTagArrayOutputWithContext(context.Background())
}

func (i ClusterTagArray) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagArrayOutput)
}

// The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
type ClusterTagOutput struct{ *pulumi.OutputState }

func (ClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (o ClusterTagOutput) ToClusterTagOutput() ClusterTagOutput {
	return o
}

func (o ClusterTagOutput) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return o
}

func (o ClusterTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ClusterTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) Index(i pulumi.IntInput) ClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterTag {
		return vs[0].([]ClusterTag)[vs[1].(int)]
	}).(ClusterTagOutput)
}

type ServiceAwsVpcConfiguration struct {
	AssignPublicIp *ServiceAwsVpcConfigurationAssignPublicIp `pulumi:"assignPublicIp"`
	SecurityGroups []string                                  `pulumi:"securityGroups"`
	Subnets        []string                                  `pulumi:"subnets"`
}

// ServiceAwsVpcConfigurationInput is an input type that accepts ServiceAwsVpcConfigurationArgs and ServiceAwsVpcConfigurationOutput values.
// You can construct a concrete instance of `ServiceAwsVpcConfigurationInput` via:
//
//          ServiceAwsVpcConfigurationArgs{...}
type ServiceAwsVpcConfigurationInput interface {
	pulumi.Input

	ToServiceAwsVpcConfigurationOutput() ServiceAwsVpcConfigurationOutput
	ToServiceAwsVpcConfigurationOutputWithContext(context.Context) ServiceAwsVpcConfigurationOutput
}

type ServiceAwsVpcConfigurationArgs struct {
	AssignPublicIp ServiceAwsVpcConfigurationAssignPublicIpPtrInput `pulumi:"assignPublicIp"`
	SecurityGroups pulumi.StringArrayInput                          `pulumi:"securityGroups"`
	Subnets        pulumi.StringArrayInput                          `pulumi:"subnets"`
}

func (ServiceAwsVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAwsVpcConfiguration)(nil)).Elem()
}

func (i ServiceAwsVpcConfigurationArgs) ToServiceAwsVpcConfigurationOutput() ServiceAwsVpcConfigurationOutput {
	return i.ToServiceAwsVpcConfigurationOutputWithContext(context.Background())
}

func (i ServiceAwsVpcConfigurationArgs) ToServiceAwsVpcConfigurationOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAwsVpcConfigurationOutput)
}

func (i ServiceAwsVpcConfigurationArgs) ToServiceAwsVpcConfigurationPtrOutput() ServiceAwsVpcConfigurationPtrOutput {
	return i.ToServiceAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceAwsVpcConfigurationArgs) ToServiceAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAwsVpcConfigurationOutput).ToServiceAwsVpcConfigurationPtrOutputWithContext(ctx)
}

// ServiceAwsVpcConfigurationPtrInput is an input type that accepts ServiceAwsVpcConfigurationArgs, ServiceAwsVpcConfigurationPtr and ServiceAwsVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceAwsVpcConfigurationPtrInput` via:
//
//          ServiceAwsVpcConfigurationArgs{...}
//
//  or:
//
//          nil
type ServiceAwsVpcConfigurationPtrInput interface {
	pulumi.Input

	ToServiceAwsVpcConfigurationPtrOutput() ServiceAwsVpcConfigurationPtrOutput
	ToServiceAwsVpcConfigurationPtrOutputWithContext(context.Context) ServiceAwsVpcConfigurationPtrOutput
}

type serviceAwsVpcConfigurationPtrType ServiceAwsVpcConfigurationArgs

func ServiceAwsVpcConfigurationPtr(v *ServiceAwsVpcConfigurationArgs) ServiceAwsVpcConfigurationPtrInput {
	return (*serviceAwsVpcConfigurationPtrType)(v)
}

func (*serviceAwsVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAwsVpcConfiguration)(nil)).Elem()
}

func (i *serviceAwsVpcConfigurationPtrType) ToServiceAwsVpcConfigurationPtrOutput() ServiceAwsVpcConfigurationPtrOutput {
	return i.ToServiceAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceAwsVpcConfigurationPtrType) ToServiceAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAwsVpcConfigurationPtrOutput)
}

type ServiceAwsVpcConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceAwsVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAwsVpcConfiguration)(nil)).Elem()
}

func (o ServiceAwsVpcConfigurationOutput) ToServiceAwsVpcConfigurationOutput() ServiceAwsVpcConfigurationOutput {
	return o
}

func (o ServiceAwsVpcConfigurationOutput) ToServiceAwsVpcConfigurationOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationOutput {
	return o
}

func (o ServiceAwsVpcConfigurationOutput) ToServiceAwsVpcConfigurationPtrOutput() ServiceAwsVpcConfigurationPtrOutput {
	return o.ToServiceAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceAwsVpcConfigurationOutput) ToServiceAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAwsVpcConfiguration) *ServiceAwsVpcConfiguration {
		return &v
	}).(ServiceAwsVpcConfigurationPtrOutput)
}

func (o ServiceAwsVpcConfigurationOutput) AssignPublicIp() ServiceAwsVpcConfigurationAssignPublicIpPtrOutput {
	return o.ApplyT(func(v ServiceAwsVpcConfiguration) *ServiceAwsVpcConfigurationAssignPublicIp { return v.AssignPublicIp }).(ServiceAwsVpcConfigurationAssignPublicIpPtrOutput)
}

func (o ServiceAwsVpcConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAwsVpcConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceAwsVpcConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAwsVpcConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ServiceAwsVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceAwsVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAwsVpcConfiguration)(nil)).Elem()
}

func (o ServiceAwsVpcConfigurationPtrOutput) ToServiceAwsVpcConfigurationPtrOutput() ServiceAwsVpcConfigurationPtrOutput {
	return o
}

func (o ServiceAwsVpcConfigurationPtrOutput) ToServiceAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) ServiceAwsVpcConfigurationPtrOutput {
	return o
}

func (o ServiceAwsVpcConfigurationPtrOutput) Elem() ServiceAwsVpcConfigurationOutput {
	return o.ApplyT(func(v *ServiceAwsVpcConfiguration) ServiceAwsVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceAwsVpcConfiguration
		return ret
	}).(ServiceAwsVpcConfigurationOutput)
}

func (o ServiceAwsVpcConfigurationPtrOutput) AssignPublicIp() ServiceAwsVpcConfigurationAssignPublicIpPtrOutput {
	return o.ApplyT(func(v *ServiceAwsVpcConfiguration) *ServiceAwsVpcConfigurationAssignPublicIp {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(ServiceAwsVpcConfigurationAssignPublicIpPtrOutput)
}

func (o ServiceAwsVpcConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

func (o ServiceAwsVpcConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ServiceCapacityProviderStrategyItem struct {
	Base             *int    `pulumi:"base"`
	CapacityProvider *string `pulumi:"capacityProvider"`
	Weight           *int    `pulumi:"weight"`
}

// ServiceCapacityProviderStrategyItemInput is an input type that accepts ServiceCapacityProviderStrategyItemArgs and ServiceCapacityProviderStrategyItemOutput values.
// You can construct a concrete instance of `ServiceCapacityProviderStrategyItemInput` via:
//
//          ServiceCapacityProviderStrategyItemArgs{...}
type ServiceCapacityProviderStrategyItemInput interface {
	pulumi.Input

	ToServiceCapacityProviderStrategyItemOutput() ServiceCapacityProviderStrategyItemOutput
	ToServiceCapacityProviderStrategyItemOutputWithContext(context.Context) ServiceCapacityProviderStrategyItemOutput
}

type ServiceCapacityProviderStrategyItemArgs struct {
	Base             pulumi.IntPtrInput    `pulumi:"base"`
	CapacityProvider pulumi.StringPtrInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput    `pulumi:"weight"`
}

func (ServiceCapacityProviderStrategyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCapacityProviderStrategyItem)(nil)).Elem()
}

func (i ServiceCapacityProviderStrategyItemArgs) ToServiceCapacityProviderStrategyItemOutput() ServiceCapacityProviderStrategyItemOutput {
	return i.ToServiceCapacityProviderStrategyItemOutputWithContext(context.Background())
}

func (i ServiceCapacityProviderStrategyItemArgs) ToServiceCapacityProviderStrategyItemOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCapacityProviderStrategyItemOutput)
}

// ServiceCapacityProviderStrategyItemArrayInput is an input type that accepts ServiceCapacityProviderStrategyItemArray and ServiceCapacityProviderStrategyItemArrayOutput values.
// You can construct a concrete instance of `ServiceCapacityProviderStrategyItemArrayInput` via:
//
//          ServiceCapacityProviderStrategyItemArray{ ServiceCapacityProviderStrategyItemArgs{...} }
type ServiceCapacityProviderStrategyItemArrayInput interface {
	pulumi.Input

	ToServiceCapacityProviderStrategyItemArrayOutput() ServiceCapacityProviderStrategyItemArrayOutput
	ToServiceCapacityProviderStrategyItemArrayOutputWithContext(context.Context) ServiceCapacityProviderStrategyItemArrayOutput
}

type ServiceCapacityProviderStrategyItemArray []ServiceCapacityProviderStrategyItemInput

func (ServiceCapacityProviderStrategyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCapacityProviderStrategyItem)(nil)).Elem()
}

func (i ServiceCapacityProviderStrategyItemArray) ToServiceCapacityProviderStrategyItemArrayOutput() ServiceCapacityProviderStrategyItemArrayOutput {
	return i.ToServiceCapacityProviderStrategyItemArrayOutputWithContext(context.Background())
}

func (i ServiceCapacityProviderStrategyItemArray) ToServiceCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCapacityProviderStrategyItemArrayOutput)
}

type ServiceCapacityProviderStrategyItemOutput struct{ *pulumi.OutputState }

func (ServiceCapacityProviderStrategyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCapacityProviderStrategyItem)(nil)).Elem()
}

func (o ServiceCapacityProviderStrategyItemOutput) ToServiceCapacityProviderStrategyItemOutput() ServiceCapacityProviderStrategyItemOutput {
	return o
}

func (o ServiceCapacityProviderStrategyItemOutput) ToServiceCapacityProviderStrategyItemOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyItemOutput {
	return o
}

func (o ServiceCapacityProviderStrategyItemOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategyItem) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ServiceCapacityProviderStrategyItemOutput) CapacityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategyItem) *string { return v.CapacityProvider }).(pulumi.StringPtrOutput)
}

func (o ServiceCapacityProviderStrategyItemOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategyItem) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServiceCapacityProviderStrategyItemArrayOutput struct{ *pulumi.OutputState }

func (ServiceCapacityProviderStrategyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCapacityProviderStrategyItem)(nil)).Elem()
}

func (o ServiceCapacityProviderStrategyItemArrayOutput) ToServiceCapacityProviderStrategyItemArrayOutput() ServiceCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o ServiceCapacityProviderStrategyItemArrayOutput) ToServiceCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o ServiceCapacityProviderStrategyItemArrayOutput) Index(i pulumi.IntInput) ServiceCapacityProviderStrategyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCapacityProviderStrategyItem {
		return vs[0].([]ServiceCapacityProviderStrategyItem)[vs[1].(int)]
	}).(ServiceCapacityProviderStrategyItemOutput)
}

type ServiceDeploymentCircuitBreaker struct {
	Enable   bool `pulumi:"enable"`
	Rollback bool `pulumi:"rollback"`
}

// ServiceDeploymentCircuitBreakerInput is an input type that accepts ServiceDeploymentCircuitBreakerArgs and ServiceDeploymentCircuitBreakerOutput values.
// You can construct a concrete instance of `ServiceDeploymentCircuitBreakerInput` via:
//
//          ServiceDeploymentCircuitBreakerArgs{...}
type ServiceDeploymentCircuitBreakerInput interface {
	pulumi.Input

	ToServiceDeploymentCircuitBreakerOutput() ServiceDeploymentCircuitBreakerOutput
	ToServiceDeploymentCircuitBreakerOutputWithContext(context.Context) ServiceDeploymentCircuitBreakerOutput
}

type ServiceDeploymentCircuitBreakerArgs struct {
	Enable   pulumi.BoolInput `pulumi:"enable"`
	Rollback pulumi.BoolInput `pulumi:"rollback"`
}

func (ServiceDeploymentCircuitBreakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentCircuitBreaker)(nil)).Elem()
}

func (i ServiceDeploymentCircuitBreakerArgs) ToServiceDeploymentCircuitBreakerOutput() ServiceDeploymentCircuitBreakerOutput {
	return i.ToServiceDeploymentCircuitBreakerOutputWithContext(context.Background())
}

func (i ServiceDeploymentCircuitBreakerArgs) ToServiceDeploymentCircuitBreakerOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentCircuitBreakerOutput)
}

func (i ServiceDeploymentCircuitBreakerArgs) ToServiceDeploymentCircuitBreakerPtrOutput() ServiceDeploymentCircuitBreakerPtrOutput {
	return i.ToServiceDeploymentCircuitBreakerPtrOutputWithContext(context.Background())
}

func (i ServiceDeploymentCircuitBreakerArgs) ToServiceDeploymentCircuitBreakerPtrOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentCircuitBreakerOutput).ToServiceDeploymentCircuitBreakerPtrOutputWithContext(ctx)
}

// ServiceDeploymentCircuitBreakerPtrInput is an input type that accepts ServiceDeploymentCircuitBreakerArgs, ServiceDeploymentCircuitBreakerPtr and ServiceDeploymentCircuitBreakerPtrOutput values.
// You can construct a concrete instance of `ServiceDeploymentCircuitBreakerPtrInput` via:
//
//          ServiceDeploymentCircuitBreakerArgs{...}
//
//  or:
//
//          nil
type ServiceDeploymentCircuitBreakerPtrInput interface {
	pulumi.Input

	ToServiceDeploymentCircuitBreakerPtrOutput() ServiceDeploymentCircuitBreakerPtrOutput
	ToServiceDeploymentCircuitBreakerPtrOutputWithContext(context.Context) ServiceDeploymentCircuitBreakerPtrOutput
}

type serviceDeploymentCircuitBreakerPtrType ServiceDeploymentCircuitBreakerArgs

func ServiceDeploymentCircuitBreakerPtr(v *ServiceDeploymentCircuitBreakerArgs) ServiceDeploymentCircuitBreakerPtrInput {
	return (*serviceDeploymentCircuitBreakerPtrType)(v)
}

func (*serviceDeploymentCircuitBreakerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentCircuitBreaker)(nil)).Elem()
}

func (i *serviceDeploymentCircuitBreakerPtrType) ToServiceDeploymentCircuitBreakerPtrOutput() ServiceDeploymentCircuitBreakerPtrOutput {
	return i.ToServiceDeploymentCircuitBreakerPtrOutputWithContext(context.Background())
}

func (i *serviceDeploymentCircuitBreakerPtrType) ToServiceDeploymentCircuitBreakerPtrOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentCircuitBreakerPtrOutput)
}

type ServiceDeploymentCircuitBreakerOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentCircuitBreakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentCircuitBreaker)(nil)).Elem()
}

func (o ServiceDeploymentCircuitBreakerOutput) ToServiceDeploymentCircuitBreakerOutput() ServiceDeploymentCircuitBreakerOutput {
	return o
}

func (o ServiceDeploymentCircuitBreakerOutput) ToServiceDeploymentCircuitBreakerOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerOutput {
	return o
}

func (o ServiceDeploymentCircuitBreakerOutput) ToServiceDeploymentCircuitBreakerPtrOutput() ServiceDeploymentCircuitBreakerPtrOutput {
	return o.ToServiceDeploymentCircuitBreakerPtrOutputWithContext(context.Background())
}

func (o ServiceDeploymentCircuitBreakerOutput) ToServiceDeploymentCircuitBreakerPtrOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDeploymentCircuitBreaker) *ServiceDeploymentCircuitBreaker {
		return &v
	}).(ServiceDeploymentCircuitBreakerPtrOutput)
}

func (o ServiceDeploymentCircuitBreakerOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceDeploymentCircuitBreaker) bool { return v.Enable }).(pulumi.BoolOutput)
}

func (o ServiceDeploymentCircuitBreakerOutput) Rollback() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceDeploymentCircuitBreaker) bool { return v.Rollback }).(pulumi.BoolOutput)
}

type ServiceDeploymentCircuitBreakerPtrOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentCircuitBreakerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentCircuitBreaker)(nil)).Elem()
}

func (o ServiceDeploymentCircuitBreakerPtrOutput) ToServiceDeploymentCircuitBreakerPtrOutput() ServiceDeploymentCircuitBreakerPtrOutput {
	return o
}

func (o ServiceDeploymentCircuitBreakerPtrOutput) ToServiceDeploymentCircuitBreakerPtrOutputWithContext(ctx context.Context) ServiceDeploymentCircuitBreakerPtrOutput {
	return o
}

func (o ServiceDeploymentCircuitBreakerPtrOutput) Elem() ServiceDeploymentCircuitBreakerOutput {
	return o.ApplyT(func(v *ServiceDeploymentCircuitBreaker) ServiceDeploymentCircuitBreaker {
		if v != nil {
			return *v
		}
		var ret ServiceDeploymentCircuitBreaker
		return ret
	}).(ServiceDeploymentCircuitBreakerOutput)
}

func (o ServiceDeploymentCircuitBreakerPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentCircuitBreaker) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

func (o ServiceDeploymentCircuitBreakerPtrOutput) Rollback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentCircuitBreaker) *bool {
		if v == nil {
			return nil
		}
		return &v.Rollback
	}).(pulumi.BoolPtrOutput)
}

type ServiceDeploymentConfiguration struct {
	DeploymentCircuitBreaker *ServiceDeploymentCircuitBreaker `pulumi:"deploymentCircuitBreaker"`
	MaximumPercent           *int                             `pulumi:"maximumPercent"`
	MinimumHealthyPercent    *int                             `pulumi:"minimumHealthyPercent"`
}

// ServiceDeploymentConfigurationInput is an input type that accepts ServiceDeploymentConfigurationArgs and ServiceDeploymentConfigurationOutput values.
// You can construct a concrete instance of `ServiceDeploymentConfigurationInput` via:
//
//          ServiceDeploymentConfigurationArgs{...}
type ServiceDeploymentConfigurationInput interface {
	pulumi.Input

	ToServiceDeploymentConfigurationOutput() ServiceDeploymentConfigurationOutput
	ToServiceDeploymentConfigurationOutputWithContext(context.Context) ServiceDeploymentConfigurationOutput
}

type ServiceDeploymentConfigurationArgs struct {
	DeploymentCircuitBreaker ServiceDeploymentCircuitBreakerPtrInput `pulumi:"deploymentCircuitBreaker"`
	MaximumPercent           pulumi.IntPtrInput                      `pulumi:"maximumPercent"`
	MinimumHealthyPercent    pulumi.IntPtrInput                      `pulumi:"minimumHealthyPercent"`
}

func (ServiceDeploymentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentConfiguration)(nil)).Elem()
}

func (i ServiceDeploymentConfigurationArgs) ToServiceDeploymentConfigurationOutput() ServiceDeploymentConfigurationOutput {
	return i.ToServiceDeploymentConfigurationOutputWithContext(context.Background())
}

func (i ServiceDeploymentConfigurationArgs) ToServiceDeploymentConfigurationOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentConfigurationOutput)
}

func (i ServiceDeploymentConfigurationArgs) ToServiceDeploymentConfigurationPtrOutput() ServiceDeploymentConfigurationPtrOutput {
	return i.ToServiceDeploymentConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceDeploymentConfigurationArgs) ToServiceDeploymentConfigurationPtrOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentConfigurationOutput).ToServiceDeploymentConfigurationPtrOutputWithContext(ctx)
}

// ServiceDeploymentConfigurationPtrInput is an input type that accepts ServiceDeploymentConfigurationArgs, ServiceDeploymentConfigurationPtr and ServiceDeploymentConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceDeploymentConfigurationPtrInput` via:
//
//          ServiceDeploymentConfigurationArgs{...}
//
//  or:
//
//          nil
type ServiceDeploymentConfigurationPtrInput interface {
	pulumi.Input

	ToServiceDeploymentConfigurationPtrOutput() ServiceDeploymentConfigurationPtrOutput
	ToServiceDeploymentConfigurationPtrOutputWithContext(context.Context) ServiceDeploymentConfigurationPtrOutput
}

type serviceDeploymentConfigurationPtrType ServiceDeploymentConfigurationArgs

func ServiceDeploymentConfigurationPtr(v *ServiceDeploymentConfigurationArgs) ServiceDeploymentConfigurationPtrInput {
	return (*serviceDeploymentConfigurationPtrType)(v)
}

func (*serviceDeploymentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentConfiguration)(nil)).Elem()
}

func (i *serviceDeploymentConfigurationPtrType) ToServiceDeploymentConfigurationPtrOutput() ServiceDeploymentConfigurationPtrOutput {
	return i.ToServiceDeploymentConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceDeploymentConfigurationPtrType) ToServiceDeploymentConfigurationPtrOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentConfigurationPtrOutput)
}

type ServiceDeploymentConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentConfiguration)(nil)).Elem()
}

func (o ServiceDeploymentConfigurationOutput) ToServiceDeploymentConfigurationOutput() ServiceDeploymentConfigurationOutput {
	return o
}

func (o ServiceDeploymentConfigurationOutput) ToServiceDeploymentConfigurationOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationOutput {
	return o
}

func (o ServiceDeploymentConfigurationOutput) ToServiceDeploymentConfigurationPtrOutput() ServiceDeploymentConfigurationPtrOutput {
	return o.ToServiceDeploymentConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceDeploymentConfigurationOutput) ToServiceDeploymentConfigurationPtrOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDeploymentConfiguration) *ServiceDeploymentConfiguration {
		return &v
	}).(ServiceDeploymentConfigurationPtrOutput)
}

func (o ServiceDeploymentConfigurationOutput) DeploymentCircuitBreaker() ServiceDeploymentCircuitBreakerPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentConfiguration) *ServiceDeploymentCircuitBreaker {
		return v.DeploymentCircuitBreaker
	}).(ServiceDeploymentCircuitBreakerPtrOutput)
}

func (o ServiceDeploymentConfigurationOutput) MaximumPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentConfiguration) *int { return v.MaximumPercent }).(pulumi.IntPtrOutput)
}

func (o ServiceDeploymentConfigurationOutput) MinimumHealthyPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentConfiguration) *int { return v.MinimumHealthyPercent }).(pulumi.IntPtrOutput)
}

type ServiceDeploymentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentConfiguration)(nil)).Elem()
}

func (o ServiceDeploymentConfigurationPtrOutput) ToServiceDeploymentConfigurationPtrOutput() ServiceDeploymentConfigurationPtrOutput {
	return o
}

func (o ServiceDeploymentConfigurationPtrOutput) ToServiceDeploymentConfigurationPtrOutputWithContext(ctx context.Context) ServiceDeploymentConfigurationPtrOutput {
	return o
}

func (o ServiceDeploymentConfigurationPtrOutput) Elem() ServiceDeploymentConfigurationOutput {
	return o.ApplyT(func(v *ServiceDeploymentConfiguration) ServiceDeploymentConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceDeploymentConfiguration
		return ret
	}).(ServiceDeploymentConfigurationOutput)
}

func (o ServiceDeploymentConfigurationPtrOutput) DeploymentCircuitBreaker() ServiceDeploymentCircuitBreakerPtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentConfiguration) *ServiceDeploymentCircuitBreaker {
		if v == nil {
			return nil
		}
		return v.DeploymentCircuitBreaker
	}).(ServiceDeploymentCircuitBreakerPtrOutput)
}

func (o ServiceDeploymentConfigurationPtrOutput) MaximumPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaximumPercent
	}).(pulumi.IntPtrOutput)
}

func (o ServiceDeploymentConfigurationPtrOutput) MinimumHealthyPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinimumHealthyPercent
	}).(pulumi.IntPtrOutput)
}

type ServiceDeploymentController struct {
	Type *ServiceDeploymentControllerType `pulumi:"type"`
}

// ServiceDeploymentControllerInput is an input type that accepts ServiceDeploymentControllerArgs and ServiceDeploymentControllerOutput values.
// You can construct a concrete instance of `ServiceDeploymentControllerInput` via:
//
//          ServiceDeploymentControllerArgs{...}
type ServiceDeploymentControllerInput interface {
	pulumi.Input

	ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput
	ToServiceDeploymentControllerOutputWithContext(context.Context) ServiceDeploymentControllerOutput
}

type ServiceDeploymentControllerArgs struct {
	Type ServiceDeploymentControllerTypePtrInput `pulumi:"type"`
}

func (ServiceDeploymentControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentController)(nil)).Elem()
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput {
	return i.ToServiceDeploymentControllerOutputWithContext(context.Background())
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerOutputWithContext(ctx context.Context) ServiceDeploymentControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerOutput)
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return i.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerOutput).ToServiceDeploymentControllerPtrOutputWithContext(ctx)
}

// ServiceDeploymentControllerPtrInput is an input type that accepts ServiceDeploymentControllerArgs, ServiceDeploymentControllerPtr and ServiceDeploymentControllerPtrOutput values.
// You can construct a concrete instance of `ServiceDeploymentControllerPtrInput` via:
//
//          ServiceDeploymentControllerArgs{...}
//
//  or:
//
//          nil
type ServiceDeploymentControllerPtrInput interface {
	pulumi.Input

	ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput
	ToServiceDeploymentControllerPtrOutputWithContext(context.Context) ServiceDeploymentControllerPtrOutput
}

type serviceDeploymentControllerPtrType ServiceDeploymentControllerArgs

func ServiceDeploymentControllerPtr(v *ServiceDeploymentControllerArgs) ServiceDeploymentControllerPtrInput {
	return (*serviceDeploymentControllerPtrType)(v)
}

func (*serviceDeploymentControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentController)(nil)).Elem()
}

func (i *serviceDeploymentControllerPtrType) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return i.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (i *serviceDeploymentControllerPtrType) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerPtrOutput)
}

type ServiceDeploymentControllerOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentController)(nil)).Elem()
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput {
	return o
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerOutputWithContext(ctx context.Context) ServiceDeploymentControllerOutput {
	return o
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return o.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDeploymentController) *ServiceDeploymentController {
		return &v
	}).(ServiceDeploymentControllerPtrOutput)
}

func (o ServiceDeploymentControllerOutput) Type() ServiceDeploymentControllerTypePtrOutput {
	return o.ApplyT(func(v ServiceDeploymentController) *ServiceDeploymentControllerType { return v.Type }).(ServiceDeploymentControllerTypePtrOutput)
}

type ServiceDeploymentControllerPtrOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentController)(nil)).Elem()
}

func (o ServiceDeploymentControllerPtrOutput) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return o
}

func (o ServiceDeploymentControllerPtrOutput) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return o
}

func (o ServiceDeploymentControllerPtrOutput) Elem() ServiceDeploymentControllerOutput {
	return o.ApplyT(func(v *ServiceDeploymentController) ServiceDeploymentController {
		if v != nil {
			return *v
		}
		var ret ServiceDeploymentController
		return ret
	}).(ServiceDeploymentControllerOutput)
}

func (o ServiceDeploymentControllerPtrOutput) Type() ServiceDeploymentControllerTypePtrOutput {
	return o.ApplyT(func(v *ServiceDeploymentController) *ServiceDeploymentControllerType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ServiceDeploymentControllerTypePtrOutput)
}

type ServiceLoadBalancer struct {
	ContainerName    *string `pulumi:"containerName"`
	ContainerPort    *int    `pulumi:"containerPort"`
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	TargetGroupArn   *string `pulumi:"targetGroupArn"`
}

// ServiceLoadBalancerInput is an input type that accepts ServiceLoadBalancerArgs and ServiceLoadBalancerOutput values.
// You can construct a concrete instance of `ServiceLoadBalancerInput` via:
//
//          ServiceLoadBalancerArgs{...}
type ServiceLoadBalancerInput interface {
	pulumi.Input

	ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput
	ToServiceLoadBalancerOutputWithContext(context.Context) ServiceLoadBalancerOutput
}

type ServiceLoadBalancerArgs struct {
	ContainerName    pulumi.StringPtrInput `pulumi:"containerName"`
	ContainerPort    pulumi.IntPtrInput    `pulumi:"containerPort"`
	LoadBalancerName pulumi.StringPtrInput `pulumi:"loadBalancerName"`
	TargetGroupArn   pulumi.StringPtrInput `pulumi:"targetGroupArn"`
}

func (ServiceLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadBalancer)(nil)).Elem()
}

func (i ServiceLoadBalancerArgs) ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput {
	return i.ToServiceLoadBalancerOutputWithContext(context.Background())
}

func (i ServiceLoadBalancerArgs) ToServiceLoadBalancerOutputWithContext(ctx context.Context) ServiceLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLoadBalancerOutput)
}

// ServiceLoadBalancerArrayInput is an input type that accepts ServiceLoadBalancerArray and ServiceLoadBalancerArrayOutput values.
// You can construct a concrete instance of `ServiceLoadBalancerArrayInput` via:
//
//          ServiceLoadBalancerArray{ ServiceLoadBalancerArgs{...} }
type ServiceLoadBalancerArrayInput interface {
	pulumi.Input

	ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput
	ToServiceLoadBalancerArrayOutputWithContext(context.Context) ServiceLoadBalancerArrayOutput
}

type ServiceLoadBalancerArray []ServiceLoadBalancerInput

func (ServiceLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLoadBalancer)(nil)).Elem()
}

func (i ServiceLoadBalancerArray) ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput {
	return i.ToServiceLoadBalancerArrayOutputWithContext(context.Background())
}

func (i ServiceLoadBalancerArray) ToServiceLoadBalancerArrayOutputWithContext(ctx context.Context) ServiceLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLoadBalancerArrayOutput)
}

type ServiceLoadBalancerOutput struct{ *pulumi.OutputState }

func (ServiceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadBalancer)(nil)).Elem()
}

func (o ServiceLoadBalancerOutput) ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput {
	return o
}

func (o ServiceLoadBalancerOutput) ToServiceLoadBalancerOutputWithContext(ctx context.Context) ServiceLoadBalancerOutput {
	return o
}

func (o ServiceLoadBalancerOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o ServiceLoadBalancerOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o ServiceLoadBalancerOutput) LoadBalancerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *string { return v.LoadBalancerName }).(pulumi.StringPtrOutput)
}

func (o ServiceLoadBalancerOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

type ServiceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (ServiceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLoadBalancer)(nil)).Elem()
}

func (o ServiceLoadBalancerArrayOutput) ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput {
	return o
}

func (o ServiceLoadBalancerArrayOutput) ToServiceLoadBalancerArrayOutputWithContext(ctx context.Context) ServiceLoadBalancerArrayOutput {
	return o
}

func (o ServiceLoadBalancerArrayOutput) Index(i pulumi.IntInput) ServiceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLoadBalancer {
		return vs[0].([]ServiceLoadBalancer)[vs[1].(int)]
	}).(ServiceLoadBalancerOutput)
}

type ServiceNetworkConfiguration struct {
	AwsvpcConfiguration *ServiceAwsVpcConfiguration `pulumi:"awsvpcConfiguration"`
}

// ServiceNetworkConfigurationInput is an input type that accepts ServiceNetworkConfigurationArgs and ServiceNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationInput` via:
//
//          ServiceNetworkConfigurationArgs{...}
type ServiceNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput
	ToServiceNetworkConfigurationOutputWithContext(context.Context) ServiceNetworkConfigurationOutput
}

type ServiceNetworkConfigurationArgs struct {
	AwsvpcConfiguration ServiceAwsVpcConfigurationPtrInput `pulumi:"awsvpcConfiguration"`
}

func (ServiceNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return i.ToServiceNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput)
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput).ToServiceNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceNetworkConfigurationPtrInput is an input type that accepts ServiceNetworkConfigurationArgs, ServiceNetworkConfigurationPtr and ServiceNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationPtrInput` via:
//
//          ServiceNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type ServiceNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput
	ToServiceNetworkConfigurationPtrOutputWithContext(context.Context) ServiceNetworkConfigurationPtrOutput
}

type serviceNetworkConfigurationPtrType ServiceNetworkConfigurationArgs

func ServiceNetworkConfigurationPtr(v *ServiceNetworkConfigurationArgs) ServiceNetworkConfigurationPtrInput {
	return (*serviceNetworkConfigurationPtrType)(v)
}

func (*serviceNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationPtrOutput)
}

type ServiceNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkConfiguration) *ServiceNetworkConfiguration {
		return &v
	}).(ServiceNetworkConfigurationPtrOutput)
}

func (o ServiceNetworkConfigurationOutput) AwsvpcConfiguration() ServiceAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *ServiceAwsVpcConfiguration { return v.AwsvpcConfiguration }).(ServiceAwsVpcConfigurationPtrOutput)
}

type ServiceNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) Elem() ServiceNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) ServiceNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkConfiguration
		return ret
	}).(ServiceNetworkConfigurationOutput)
}

func (o ServiceNetworkConfigurationPtrOutput) AwsvpcConfiguration() ServiceAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) *ServiceAwsVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.AwsvpcConfiguration
	}).(ServiceAwsVpcConfigurationPtrOutput)
}

type ServicePlacementConstraint struct {
	Expression *string                        `pulumi:"expression"`
	Type       ServicePlacementConstraintType `pulumi:"type"`
}

// ServicePlacementConstraintInput is an input type that accepts ServicePlacementConstraintArgs and ServicePlacementConstraintOutput values.
// You can construct a concrete instance of `ServicePlacementConstraintInput` via:
//
//          ServicePlacementConstraintArgs{...}
type ServicePlacementConstraintInput interface {
	pulumi.Input

	ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput
	ToServicePlacementConstraintOutputWithContext(context.Context) ServicePlacementConstraintOutput
}

type ServicePlacementConstraintArgs struct {
	Expression pulumi.StringPtrInput               `pulumi:"expression"`
	Type       ServicePlacementConstraintTypeInput `pulumi:"type"`
}

func (ServicePlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementConstraint)(nil)).Elem()
}

func (i ServicePlacementConstraintArgs) ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput {
	return i.ToServicePlacementConstraintOutputWithContext(context.Background())
}

func (i ServicePlacementConstraintArgs) ToServicePlacementConstraintOutputWithContext(ctx context.Context) ServicePlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementConstraintOutput)
}

// ServicePlacementConstraintArrayInput is an input type that accepts ServicePlacementConstraintArray and ServicePlacementConstraintArrayOutput values.
// You can construct a concrete instance of `ServicePlacementConstraintArrayInput` via:
//
//          ServicePlacementConstraintArray{ ServicePlacementConstraintArgs{...} }
type ServicePlacementConstraintArrayInput interface {
	pulumi.Input

	ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput
	ToServicePlacementConstraintArrayOutputWithContext(context.Context) ServicePlacementConstraintArrayOutput
}

type ServicePlacementConstraintArray []ServicePlacementConstraintInput

func (ServicePlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementConstraint)(nil)).Elem()
}

func (i ServicePlacementConstraintArray) ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput {
	return i.ToServicePlacementConstraintArrayOutputWithContext(context.Background())
}

func (i ServicePlacementConstraintArray) ToServicePlacementConstraintArrayOutputWithContext(ctx context.Context) ServicePlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementConstraintArrayOutput)
}

type ServicePlacementConstraintOutput struct{ *pulumi.OutputState }

func (ServicePlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementConstraint)(nil)).Elem()
}

func (o ServicePlacementConstraintOutput) ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput {
	return o
}

func (o ServicePlacementConstraintOutput) ToServicePlacementConstraintOutputWithContext(ctx context.Context) ServicePlacementConstraintOutput {
	return o
}

func (o ServicePlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o ServicePlacementConstraintOutput) Type() ServicePlacementConstraintTypeOutput {
	return o.ApplyT(func(v ServicePlacementConstraint) ServicePlacementConstraintType { return v.Type }).(ServicePlacementConstraintTypeOutput)
}

type ServicePlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (ServicePlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementConstraint)(nil)).Elem()
}

func (o ServicePlacementConstraintArrayOutput) ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput {
	return o
}

func (o ServicePlacementConstraintArrayOutput) ToServicePlacementConstraintArrayOutputWithContext(ctx context.Context) ServicePlacementConstraintArrayOutput {
	return o
}

func (o ServicePlacementConstraintArrayOutput) Index(i pulumi.IntInput) ServicePlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePlacementConstraint {
		return vs[0].([]ServicePlacementConstraint)[vs[1].(int)]
	}).(ServicePlacementConstraintOutput)
}

type ServicePlacementStrategy struct {
	Field *string                      `pulumi:"field"`
	Type  ServicePlacementStrategyType `pulumi:"type"`
}

// ServicePlacementStrategyInput is an input type that accepts ServicePlacementStrategyArgs and ServicePlacementStrategyOutput values.
// You can construct a concrete instance of `ServicePlacementStrategyInput` via:
//
//          ServicePlacementStrategyArgs{...}
type ServicePlacementStrategyInput interface {
	pulumi.Input

	ToServicePlacementStrategyOutput() ServicePlacementStrategyOutput
	ToServicePlacementStrategyOutputWithContext(context.Context) ServicePlacementStrategyOutput
}

type ServicePlacementStrategyArgs struct {
	Field pulumi.StringPtrInput             `pulumi:"field"`
	Type  ServicePlacementStrategyTypeInput `pulumi:"type"`
}

func (ServicePlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementStrategy)(nil)).Elem()
}

func (i ServicePlacementStrategyArgs) ToServicePlacementStrategyOutput() ServicePlacementStrategyOutput {
	return i.ToServicePlacementStrategyOutputWithContext(context.Background())
}

func (i ServicePlacementStrategyArgs) ToServicePlacementStrategyOutputWithContext(ctx context.Context) ServicePlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementStrategyOutput)
}

// ServicePlacementStrategyArrayInput is an input type that accepts ServicePlacementStrategyArray and ServicePlacementStrategyArrayOutput values.
// You can construct a concrete instance of `ServicePlacementStrategyArrayInput` via:
//
//          ServicePlacementStrategyArray{ ServicePlacementStrategyArgs{...} }
type ServicePlacementStrategyArrayInput interface {
	pulumi.Input

	ToServicePlacementStrategyArrayOutput() ServicePlacementStrategyArrayOutput
	ToServicePlacementStrategyArrayOutputWithContext(context.Context) ServicePlacementStrategyArrayOutput
}

type ServicePlacementStrategyArray []ServicePlacementStrategyInput

func (ServicePlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementStrategy)(nil)).Elem()
}

func (i ServicePlacementStrategyArray) ToServicePlacementStrategyArrayOutput() ServicePlacementStrategyArrayOutput {
	return i.ToServicePlacementStrategyArrayOutputWithContext(context.Background())
}

func (i ServicePlacementStrategyArray) ToServicePlacementStrategyArrayOutputWithContext(ctx context.Context) ServicePlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementStrategyArrayOutput)
}

type ServicePlacementStrategyOutput struct{ *pulumi.OutputState }

func (ServicePlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementStrategy)(nil)).Elem()
}

func (o ServicePlacementStrategyOutput) ToServicePlacementStrategyOutput() ServicePlacementStrategyOutput {
	return o
}

func (o ServicePlacementStrategyOutput) ToServicePlacementStrategyOutputWithContext(ctx context.Context) ServicePlacementStrategyOutput {
	return o
}

func (o ServicePlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o ServicePlacementStrategyOutput) Type() ServicePlacementStrategyTypeOutput {
	return o.ApplyT(func(v ServicePlacementStrategy) ServicePlacementStrategyType { return v.Type }).(ServicePlacementStrategyTypeOutput)
}

type ServicePlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (ServicePlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementStrategy)(nil)).Elem()
}

func (o ServicePlacementStrategyArrayOutput) ToServicePlacementStrategyArrayOutput() ServicePlacementStrategyArrayOutput {
	return o
}

func (o ServicePlacementStrategyArrayOutput) ToServicePlacementStrategyArrayOutputWithContext(ctx context.Context) ServicePlacementStrategyArrayOutput {
	return o
}

func (o ServicePlacementStrategyArrayOutput) Index(i pulumi.IntInput) ServicePlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePlacementStrategy {
		return vs[0].([]ServicePlacementStrategy)[vs[1].(int)]
	}).(ServicePlacementStrategyOutput)
}

type ServiceRegistry struct {
	ContainerName *string `pulumi:"containerName"`
	ContainerPort *int    `pulumi:"containerPort"`
	Port          *int    `pulumi:"port"`
	RegistryArn   *string `pulumi:"registryArn"`
}

// ServiceRegistryInput is an input type that accepts ServiceRegistryArgs and ServiceRegistryOutput values.
// You can construct a concrete instance of `ServiceRegistryInput` via:
//
//          ServiceRegistryArgs{...}
type ServiceRegistryInput interface {
	pulumi.Input

	ToServiceRegistryOutput() ServiceRegistryOutput
	ToServiceRegistryOutputWithContext(context.Context) ServiceRegistryOutput
}

type ServiceRegistryArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	ContainerPort pulumi.IntPtrInput    `pulumi:"containerPort"`
	Port          pulumi.IntPtrInput    `pulumi:"port"`
	RegistryArn   pulumi.StringPtrInput `pulumi:"registryArn"`
}

func (ServiceRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistry)(nil)).Elem()
}

func (i ServiceRegistryArgs) ToServiceRegistryOutput() ServiceRegistryOutput {
	return i.ToServiceRegistryOutputWithContext(context.Background())
}

func (i ServiceRegistryArgs) ToServiceRegistryOutputWithContext(ctx context.Context) ServiceRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRegistryOutput)
}

// ServiceRegistryArrayInput is an input type that accepts ServiceRegistryArray and ServiceRegistryArrayOutput values.
// You can construct a concrete instance of `ServiceRegistryArrayInput` via:
//
//          ServiceRegistryArray{ ServiceRegistryArgs{...} }
type ServiceRegistryArrayInput interface {
	pulumi.Input

	ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput
	ToServiceRegistryArrayOutputWithContext(context.Context) ServiceRegistryArrayOutput
}

type ServiceRegistryArray []ServiceRegistryInput

func (ServiceRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistry)(nil)).Elem()
}

func (i ServiceRegistryArray) ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput {
	return i.ToServiceRegistryArrayOutputWithContext(context.Background())
}

func (i ServiceRegistryArray) ToServiceRegistryArrayOutputWithContext(ctx context.Context) ServiceRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRegistryArrayOutput)
}

type ServiceRegistryOutput struct{ *pulumi.OutputState }

func (ServiceRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRegistry)(nil)).Elem()
}

func (o ServiceRegistryOutput) ToServiceRegistryOutput() ServiceRegistryOutput {
	return o
}

func (o ServiceRegistryOutput) ToServiceRegistryOutputWithContext(ctx context.Context) ServiceRegistryOutput {
	return o
}

func (o ServiceRegistryOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o ServiceRegistryOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o ServiceRegistryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ServiceRegistryOutput) RegistryArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRegistry) *string { return v.RegistryArn }).(pulumi.StringPtrOutput)
}

type ServiceRegistryArrayOutput struct{ *pulumi.OutputState }

func (ServiceRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRegistry)(nil)).Elem()
}

func (o ServiceRegistryArrayOutput) ToServiceRegistryArrayOutput() ServiceRegistryArrayOutput {
	return o
}

func (o ServiceRegistryArrayOutput) ToServiceRegistryArrayOutputWithContext(ctx context.Context) ServiceRegistryArrayOutput {
	return o
}

func (o ServiceRegistryArrayOutput) Index(i pulumi.IntInput) ServiceRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRegistry {
		return vs[0].([]ServiceRegistry)[vs[1].(int)]
	}).(ServiceRegistryOutput)
}

type ServiceTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// ServiceTagInput is an input type that accepts ServiceTagArgs and ServiceTagOutput values.
// You can construct a concrete instance of `ServiceTagInput` via:
//
//          ServiceTagArgs{...}
type ServiceTagInput interface {
	pulumi.Input

	ToServiceTagOutput() ServiceTagOutput
	ToServiceTagOutputWithContext(context.Context) ServiceTagOutput
}

type ServiceTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTag)(nil)).Elem()
}

func (i ServiceTagArgs) ToServiceTagOutput() ServiceTagOutput {
	return i.ToServiceTagOutputWithContext(context.Background())
}

func (i ServiceTagArgs) ToServiceTagOutputWithContext(ctx context.Context) ServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTagOutput)
}

// ServiceTagArrayInput is an input type that accepts ServiceTagArray and ServiceTagArrayOutput values.
// You can construct a concrete instance of `ServiceTagArrayInput` via:
//
//          ServiceTagArray{ ServiceTagArgs{...} }
type ServiceTagArrayInput interface {
	pulumi.Input

	ToServiceTagArrayOutput() ServiceTagArrayOutput
	ToServiceTagArrayOutputWithContext(context.Context) ServiceTagArrayOutput
}

type ServiceTagArray []ServiceTagInput

func (ServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTag)(nil)).Elem()
}

func (i ServiceTagArray) ToServiceTagArrayOutput() ServiceTagArrayOutput {
	return i.ToServiceTagArrayOutputWithContext(context.Background())
}

func (i ServiceTagArray) ToServiceTagArrayOutputWithContext(ctx context.Context) ServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTagArrayOutput)
}

type ServiceTagOutput struct{ *pulumi.OutputState }

func (ServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTag)(nil)).Elem()
}

func (o ServiceTagOutput) ToServiceTagOutput() ServiceTagOutput {
	return o
}

func (o ServiceTagOutput) ToServiceTagOutputWithContext(ctx context.Context) ServiceTagOutput {
	return o
}

func (o ServiceTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ServiceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTag)(nil)).Elem()
}

func (o ServiceTagArrayOutput) ToServiceTagArrayOutput() ServiceTagArrayOutput {
	return o
}

func (o ServiceTagArrayOutput) ToServiceTagArrayOutputWithContext(ctx context.Context) ServiceTagArrayOutput {
	return o
}

func (o ServiceTagArrayOutput) Index(i pulumi.IntInput) ServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTag {
		return vs[0].([]ServiceTag)[vs[1].(int)]
	}).(ServiceTagOutput)
}

type TaskDefinitionAuthorizationConfig struct {
	AccessPointId *string                               `pulumi:"accessPointId"`
	IAM           *TaskDefinitionAuthorizationConfigIAM `pulumi:"iAM"`
}

// TaskDefinitionAuthorizationConfigInput is an input type that accepts TaskDefinitionAuthorizationConfigArgs and TaskDefinitionAuthorizationConfigOutput values.
// You can construct a concrete instance of `TaskDefinitionAuthorizationConfigInput` via:
//
//          TaskDefinitionAuthorizationConfigArgs{...}
type TaskDefinitionAuthorizationConfigInput interface {
	pulumi.Input

	ToTaskDefinitionAuthorizationConfigOutput() TaskDefinitionAuthorizationConfigOutput
	ToTaskDefinitionAuthorizationConfigOutputWithContext(context.Context) TaskDefinitionAuthorizationConfigOutput
}

type TaskDefinitionAuthorizationConfigArgs struct {
	AccessPointId pulumi.StringPtrInput                        `pulumi:"accessPointId"`
	IAM           TaskDefinitionAuthorizationConfigIAMPtrInput `pulumi:"iAM"`
}

func (TaskDefinitionAuthorizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionAuthorizationConfig)(nil)).Elem()
}

func (i TaskDefinitionAuthorizationConfigArgs) ToTaskDefinitionAuthorizationConfigOutput() TaskDefinitionAuthorizationConfigOutput {
	return i.ToTaskDefinitionAuthorizationConfigOutputWithContext(context.Background())
}

func (i TaskDefinitionAuthorizationConfigArgs) ToTaskDefinitionAuthorizationConfigOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionAuthorizationConfigOutput)
}

func (i TaskDefinitionAuthorizationConfigArgs) ToTaskDefinitionAuthorizationConfigPtrOutput() TaskDefinitionAuthorizationConfigPtrOutput {
	return i.ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionAuthorizationConfigArgs) ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionAuthorizationConfigOutput).ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(ctx)
}

// TaskDefinitionAuthorizationConfigPtrInput is an input type that accepts TaskDefinitionAuthorizationConfigArgs, TaskDefinitionAuthorizationConfigPtr and TaskDefinitionAuthorizationConfigPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionAuthorizationConfigPtrInput` via:
//
//          TaskDefinitionAuthorizationConfigArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionAuthorizationConfigPtrInput interface {
	pulumi.Input

	ToTaskDefinitionAuthorizationConfigPtrOutput() TaskDefinitionAuthorizationConfigPtrOutput
	ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(context.Context) TaskDefinitionAuthorizationConfigPtrOutput
}

type taskDefinitionAuthorizationConfigPtrType TaskDefinitionAuthorizationConfigArgs

func TaskDefinitionAuthorizationConfigPtr(v *TaskDefinitionAuthorizationConfigArgs) TaskDefinitionAuthorizationConfigPtrInput {
	return (*taskDefinitionAuthorizationConfigPtrType)(v)
}

func (*taskDefinitionAuthorizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionAuthorizationConfig)(nil)).Elem()
}

func (i *taskDefinitionAuthorizationConfigPtrType) ToTaskDefinitionAuthorizationConfigPtrOutput() TaskDefinitionAuthorizationConfigPtrOutput {
	return i.ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionAuthorizationConfigPtrType) ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionAuthorizationConfigPtrOutput)
}

type TaskDefinitionAuthorizationConfigOutput struct{ *pulumi.OutputState }

func (TaskDefinitionAuthorizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionAuthorizationConfig)(nil)).Elem()
}

func (o TaskDefinitionAuthorizationConfigOutput) ToTaskDefinitionAuthorizationConfigOutput() TaskDefinitionAuthorizationConfigOutput {
	return o
}

func (o TaskDefinitionAuthorizationConfigOutput) ToTaskDefinitionAuthorizationConfigOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigOutput {
	return o
}

func (o TaskDefinitionAuthorizationConfigOutput) ToTaskDefinitionAuthorizationConfigPtrOutput() TaskDefinitionAuthorizationConfigPtrOutput {
	return o.ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionAuthorizationConfigOutput) ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionAuthorizationConfig) *TaskDefinitionAuthorizationConfig {
		return &v
	}).(TaskDefinitionAuthorizationConfigPtrOutput)
}

func (o TaskDefinitionAuthorizationConfigOutput) AccessPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionAuthorizationConfig) *string { return v.AccessPointId }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionAuthorizationConfigOutput) IAM() TaskDefinitionAuthorizationConfigIAMPtrOutput {
	return o.ApplyT(func(v TaskDefinitionAuthorizationConfig) *TaskDefinitionAuthorizationConfigIAM { return v.IAM }).(TaskDefinitionAuthorizationConfigIAMPtrOutput)
}

type TaskDefinitionAuthorizationConfigPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionAuthorizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionAuthorizationConfig)(nil)).Elem()
}

func (o TaskDefinitionAuthorizationConfigPtrOutput) ToTaskDefinitionAuthorizationConfigPtrOutput() TaskDefinitionAuthorizationConfigPtrOutput {
	return o
}

func (o TaskDefinitionAuthorizationConfigPtrOutput) ToTaskDefinitionAuthorizationConfigPtrOutputWithContext(ctx context.Context) TaskDefinitionAuthorizationConfigPtrOutput {
	return o
}

func (o TaskDefinitionAuthorizationConfigPtrOutput) Elem() TaskDefinitionAuthorizationConfigOutput {
	return o.ApplyT(func(v *TaskDefinitionAuthorizationConfig) TaskDefinitionAuthorizationConfig {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionAuthorizationConfig
		return ret
	}).(TaskDefinitionAuthorizationConfigOutput)
}

func (o TaskDefinitionAuthorizationConfigPtrOutput) AccessPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionAuthorizationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessPointId
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionAuthorizationConfigPtrOutput) IAM() TaskDefinitionAuthorizationConfigIAMPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionAuthorizationConfig) *TaskDefinitionAuthorizationConfigIAM {
		if v == nil {
			return nil
		}
		return v.IAM
	}).(TaskDefinitionAuthorizationConfigIAMPtrOutput)
}

// List of container definitions that are passed to the Docker daemon on a container instance
type TaskDefinitionContainerDefinition struct {
	Command               []string                            `pulumi:"command"`
	Cpu                   *int                                `pulumi:"cpu"`
	DependsOn             []TaskDefinitionContainerDependency `pulumi:"dependsOn"`
	DisableNetworking     *bool                               `pulumi:"disableNetworking"`
	DnsSearchDomains      []string                            `pulumi:"dnsSearchDomains"`
	DnsServers            []string                            `pulumi:"dnsServers"`
	DockerLabels          interface{}                         `pulumi:"dockerLabels"`
	DockerSecurityOptions []string                            `pulumi:"dockerSecurityOptions"`
	EntryPoint            []string                            `pulumi:"entryPoint"`
	// The environment variables to pass to a container
	Environment []TaskDefinitionKeyValuePair `pulumi:"environment"`
	// The list of one or more files that contain the environment variables to pass to a container
	EnvironmentFiles      []TaskDefinitionEnvironmentFile      `pulumi:"environmentFiles"`
	Essential             *bool                                `pulumi:"essential"`
	ExtraHosts            []TaskDefinitionHostEntry            `pulumi:"extraHosts"`
	FirelensConfiguration *TaskDefinitionFirelensConfiguration `pulumi:"firelensConfiguration"`
	HealthCheck           *TaskDefinitionHealthCheck           `pulumi:"healthCheck"`
	Hostname              *string                              `pulumi:"hostname"`
	// The image used to start a container. This string is passed directly to the Docker daemon.
	Image            *string                         `pulumi:"image"`
	Interactive      *bool                           `pulumi:"interactive"`
	Links            []string                        `pulumi:"links"`
	LinuxParameters  *TaskDefinitionLinuxParameters  `pulumi:"linuxParameters"`
	LogConfiguration *TaskDefinitionLogConfiguration `pulumi:"logConfiguration"`
	// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed.
	Memory            *int                       `pulumi:"memory"`
	MemoryReservation *int                       `pulumi:"memoryReservation"`
	MountPoints       []TaskDefinitionMountPoint `pulumi:"mountPoints"`
	// The name of a container. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed
	Name *string `pulumi:"name"`
	// Port mappings allow containers to access ports on the host container instance to send or receive traffic.
	PortMappings           []TaskDefinitionPortMapping          `pulumi:"portMappings"`
	Privileged             *bool                                `pulumi:"privileged"`
	PseudoTerminal         *bool                                `pulumi:"pseudoTerminal"`
	ReadonlyRootFilesystem *bool                                `pulumi:"readonlyRootFilesystem"`
	RepositoryCredentials  *TaskDefinitionRepositoryCredentials `pulumi:"repositoryCredentials"`
	ResourceRequirements   []TaskDefinitionResourceRequirement  `pulumi:"resourceRequirements"`
	Secrets                []TaskDefinitionSecret               `pulumi:"secrets"`
	StartTimeout           *int                                 `pulumi:"startTimeout"`
	StopTimeout            *int                                 `pulumi:"stopTimeout"`
	SystemControls         []TaskDefinitionSystemControl        `pulumi:"systemControls"`
	Ulimits                []TaskDefinitionUlimit               `pulumi:"ulimits"`
	User                   *string                              `pulumi:"user"`
	VolumesFrom            []TaskDefinitionVolumeFrom           `pulumi:"volumesFrom"`
	WorkingDirectory       *string                              `pulumi:"workingDirectory"`
}

// TaskDefinitionContainerDefinitionInput is an input type that accepts TaskDefinitionContainerDefinitionArgs and TaskDefinitionContainerDefinitionOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDefinitionInput` via:
//
//          TaskDefinitionContainerDefinitionArgs{...}
type TaskDefinitionContainerDefinitionInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput
	ToTaskDefinitionContainerDefinitionOutputWithContext(context.Context) TaskDefinitionContainerDefinitionOutput
}

// List of container definitions that are passed to the Docker daemon on a container instance
type TaskDefinitionContainerDefinitionArgs struct {
	Command               pulumi.StringArrayInput                     `pulumi:"command"`
	Cpu                   pulumi.IntPtrInput                          `pulumi:"cpu"`
	DependsOn             TaskDefinitionContainerDependencyArrayInput `pulumi:"dependsOn"`
	DisableNetworking     pulumi.BoolPtrInput                         `pulumi:"disableNetworking"`
	DnsSearchDomains      pulumi.StringArrayInput                     `pulumi:"dnsSearchDomains"`
	DnsServers            pulumi.StringArrayInput                     `pulumi:"dnsServers"`
	DockerLabels          pulumi.Input                                `pulumi:"dockerLabels"`
	DockerSecurityOptions pulumi.StringArrayInput                     `pulumi:"dockerSecurityOptions"`
	EntryPoint            pulumi.StringArrayInput                     `pulumi:"entryPoint"`
	// The environment variables to pass to a container
	Environment TaskDefinitionKeyValuePairArrayInput `pulumi:"environment"`
	// The list of one or more files that contain the environment variables to pass to a container
	EnvironmentFiles      TaskDefinitionEnvironmentFileArrayInput     `pulumi:"environmentFiles"`
	Essential             pulumi.BoolPtrInput                         `pulumi:"essential"`
	ExtraHosts            TaskDefinitionHostEntryArrayInput           `pulumi:"extraHosts"`
	FirelensConfiguration TaskDefinitionFirelensConfigurationPtrInput `pulumi:"firelensConfiguration"`
	HealthCheck           TaskDefinitionHealthCheckPtrInput           `pulumi:"healthCheck"`
	Hostname              pulumi.StringPtrInput                       `pulumi:"hostname"`
	// The image used to start a container. This string is passed directly to the Docker daemon.
	Image            pulumi.StringPtrInput                  `pulumi:"image"`
	Interactive      pulumi.BoolPtrInput                    `pulumi:"interactive"`
	Links            pulumi.StringArrayInput                `pulumi:"links"`
	LinuxParameters  TaskDefinitionLinuxParametersPtrInput  `pulumi:"linuxParameters"`
	LogConfiguration TaskDefinitionLogConfigurationPtrInput `pulumi:"logConfiguration"`
	// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed.
	Memory            pulumi.IntPtrInput                 `pulumi:"memory"`
	MemoryReservation pulumi.IntPtrInput                 `pulumi:"memoryReservation"`
	MountPoints       TaskDefinitionMountPointArrayInput `pulumi:"mountPoints"`
	// The name of a container. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port mappings allow containers to access ports on the host container instance to send or receive traffic.
	PortMappings           TaskDefinitionPortMappingArrayInput         `pulumi:"portMappings"`
	Privileged             pulumi.BoolPtrInput                         `pulumi:"privileged"`
	PseudoTerminal         pulumi.BoolPtrInput                         `pulumi:"pseudoTerminal"`
	ReadonlyRootFilesystem pulumi.BoolPtrInput                         `pulumi:"readonlyRootFilesystem"`
	RepositoryCredentials  TaskDefinitionRepositoryCredentialsPtrInput `pulumi:"repositoryCredentials"`
	ResourceRequirements   TaskDefinitionResourceRequirementArrayInput `pulumi:"resourceRequirements"`
	Secrets                TaskDefinitionSecretArrayInput              `pulumi:"secrets"`
	StartTimeout           pulumi.IntPtrInput                          `pulumi:"startTimeout"`
	StopTimeout            pulumi.IntPtrInput                          `pulumi:"stopTimeout"`
	SystemControls         TaskDefinitionSystemControlArrayInput       `pulumi:"systemControls"`
	Ulimits                TaskDefinitionUlimitArrayInput              `pulumi:"ulimits"`
	User                   pulumi.StringPtrInput                       `pulumi:"user"`
	VolumesFrom            TaskDefinitionVolumeFromArrayInput          `pulumi:"volumesFrom"`
	WorkingDirectory       pulumi.StringPtrInput                       `pulumi:"workingDirectory"`
}

func (TaskDefinitionContainerDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput {
	return i.ToTaskDefinitionContainerDefinitionOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDefinitionArgs) ToTaskDefinitionContainerDefinitionOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionOutput)
}

// TaskDefinitionContainerDefinitionArrayInput is an input type that accepts TaskDefinitionContainerDefinitionArray and TaskDefinitionContainerDefinitionArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDefinitionArrayInput` via:
//
//          TaskDefinitionContainerDefinitionArray{ TaskDefinitionContainerDefinitionArgs{...} }
type TaskDefinitionContainerDefinitionArrayInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDefinitionArrayOutput() TaskDefinitionContainerDefinitionArrayOutput
	ToTaskDefinitionContainerDefinitionArrayOutputWithContext(context.Context) TaskDefinitionContainerDefinitionArrayOutput
}

type TaskDefinitionContainerDefinitionArray []TaskDefinitionContainerDefinitionInput

func (TaskDefinitionContainerDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (i TaskDefinitionContainerDefinitionArray) ToTaskDefinitionContainerDefinitionArrayOutput() TaskDefinitionContainerDefinitionArrayOutput {
	return i.ToTaskDefinitionContainerDefinitionArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDefinitionArray) ToTaskDefinitionContainerDefinitionArrayOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDefinitionArrayOutput)
}

// List of container definitions that are passed to the Docker daemon on a container instance
type TaskDefinitionContainerDefinitionOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionOutput() TaskDefinitionContainerDefinitionOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionOutput) ToTaskDefinitionContainerDefinitionOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.Command }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DependsOn() TaskDefinitionContainerDependencyArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionContainerDependency { return v.DependsOn }).(TaskDefinitionContainerDependencyArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DisableNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.DisableNetworking }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DnsSearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.DnsSearchDomains }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DockerLabels() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) interface{} { return v.DockerLabels }).(pulumi.AnyOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) DockerSecurityOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.DockerSecurityOptions }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) EntryPoint() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.EntryPoint }).(pulumi.StringArrayOutput)
}

// The environment variables to pass to a container
func (o TaskDefinitionContainerDefinitionOutput) Environment() TaskDefinitionKeyValuePairArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionKeyValuePair { return v.Environment }).(TaskDefinitionKeyValuePairArrayOutput)
}

// The list of one or more files that contain the environment variables to pass to a container
func (o TaskDefinitionContainerDefinitionOutput) EnvironmentFiles() TaskDefinitionEnvironmentFileArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionEnvironmentFile { return v.EnvironmentFiles }).(TaskDefinitionEnvironmentFileArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Essential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.Essential }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) ExtraHosts() TaskDefinitionHostEntryArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionHostEntry { return v.ExtraHosts }).(TaskDefinitionHostEntryArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) FirelensConfiguration() TaskDefinitionFirelensConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *TaskDefinitionFirelensConfiguration {
		return v.FirelensConfiguration
	}).(TaskDefinitionFirelensConfigurationPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) HealthCheck() TaskDefinitionHealthCheckPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *TaskDefinitionHealthCheck { return v.HealthCheck }).(TaskDefinitionHealthCheckPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The image used to start a container. This string is passed directly to the Docker daemon.
func (o TaskDefinitionContainerDefinitionOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Interactive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.Interactive }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Links() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []string { return v.Links }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) LinuxParameters() TaskDefinitionLinuxParametersPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *TaskDefinitionLinuxParameters { return v.LinuxParameters }).(TaskDefinitionLinuxParametersPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) LogConfiguration() TaskDefinitionLogConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *TaskDefinitionLogConfiguration { return v.LogConfiguration }).(TaskDefinitionLogConfigurationPtrOutput)
}

// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed.
func (o TaskDefinitionContainerDefinitionOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) MemoryReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.MemoryReservation }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) MountPoints() TaskDefinitionMountPointArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionMountPoint { return v.MountPoints }).(TaskDefinitionMountPointArrayOutput)
}

// The name of a container. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed
func (o TaskDefinitionContainerDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port mappings allow containers to access ports on the host container instance to send or receive traffic.
func (o TaskDefinitionContainerDefinitionOutput) PortMappings() TaskDefinitionPortMappingArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionPortMapping { return v.PortMappings }).(TaskDefinitionPortMappingArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) PseudoTerminal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.PseudoTerminal }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) ReadonlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *bool { return v.ReadonlyRootFilesystem }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) RepositoryCredentials() TaskDefinitionRepositoryCredentialsPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *TaskDefinitionRepositoryCredentials {
		return v.RepositoryCredentials
	}).(TaskDefinitionRepositoryCredentialsPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) ResourceRequirements() TaskDefinitionResourceRequirementArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionResourceRequirement {
		return v.ResourceRequirements
	}).(TaskDefinitionResourceRequirementArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Secrets() TaskDefinitionSecretArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionSecret { return v.Secrets }).(TaskDefinitionSecretArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) StartTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.StartTimeout }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) StopTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *int { return v.StopTimeout }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) SystemControls() TaskDefinitionSystemControlArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionSystemControl { return v.SystemControls }).(TaskDefinitionSystemControlArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) Ulimits() TaskDefinitionUlimitArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionUlimit { return v.Ulimits }).(TaskDefinitionUlimitArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *string { return v.User }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) VolumesFrom() TaskDefinitionVolumeFromArrayOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) []TaskDefinitionVolumeFrom { return v.VolumesFrom }).(TaskDefinitionVolumeFromArrayOutput)
}

func (o TaskDefinitionContainerDefinitionOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDefinition) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type TaskDefinitionContainerDefinitionArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionContainerDefinition)(nil)).Elem()
}

func (o TaskDefinitionContainerDefinitionArrayOutput) ToTaskDefinitionContainerDefinitionArrayOutput() TaskDefinitionContainerDefinitionArrayOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionArrayOutput) ToTaskDefinitionContainerDefinitionArrayOutputWithContext(ctx context.Context) TaskDefinitionContainerDefinitionArrayOutput {
	return o
}

func (o TaskDefinitionContainerDefinitionArrayOutput) Index(i pulumi.IntInput) TaskDefinitionContainerDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionContainerDefinition {
		return vs[0].([]TaskDefinitionContainerDefinition)[vs[1].(int)]
	}).(TaskDefinitionContainerDefinitionOutput)
}

type TaskDefinitionContainerDependency struct {
	Condition     *string `pulumi:"condition"`
	ContainerName *string `pulumi:"containerName"`
}

// TaskDefinitionContainerDependencyInput is an input type that accepts TaskDefinitionContainerDependencyArgs and TaskDefinitionContainerDependencyOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDependencyInput` via:
//
//          TaskDefinitionContainerDependencyArgs{...}
type TaskDefinitionContainerDependencyInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDependencyOutput() TaskDefinitionContainerDependencyOutput
	ToTaskDefinitionContainerDependencyOutputWithContext(context.Context) TaskDefinitionContainerDependencyOutput
}

type TaskDefinitionContainerDependencyArgs struct {
	Condition     pulumi.StringPtrInput `pulumi:"condition"`
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
}

func (TaskDefinitionContainerDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDependency)(nil)).Elem()
}

func (i TaskDefinitionContainerDependencyArgs) ToTaskDefinitionContainerDependencyOutput() TaskDefinitionContainerDependencyOutput {
	return i.ToTaskDefinitionContainerDependencyOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDependencyArgs) ToTaskDefinitionContainerDependencyOutputWithContext(ctx context.Context) TaskDefinitionContainerDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDependencyOutput)
}

// TaskDefinitionContainerDependencyArrayInput is an input type that accepts TaskDefinitionContainerDependencyArray and TaskDefinitionContainerDependencyArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionContainerDependencyArrayInput` via:
//
//          TaskDefinitionContainerDependencyArray{ TaskDefinitionContainerDependencyArgs{...} }
type TaskDefinitionContainerDependencyArrayInput interface {
	pulumi.Input

	ToTaskDefinitionContainerDependencyArrayOutput() TaskDefinitionContainerDependencyArrayOutput
	ToTaskDefinitionContainerDependencyArrayOutputWithContext(context.Context) TaskDefinitionContainerDependencyArrayOutput
}

type TaskDefinitionContainerDependencyArray []TaskDefinitionContainerDependencyInput

func (TaskDefinitionContainerDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionContainerDependency)(nil)).Elem()
}

func (i TaskDefinitionContainerDependencyArray) ToTaskDefinitionContainerDependencyArrayOutput() TaskDefinitionContainerDependencyArrayOutput {
	return i.ToTaskDefinitionContainerDependencyArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionContainerDependencyArray) ToTaskDefinitionContainerDependencyArrayOutputWithContext(ctx context.Context) TaskDefinitionContainerDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionContainerDependencyArrayOutput)
}

type TaskDefinitionContainerDependencyOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionContainerDependency)(nil)).Elem()
}

func (o TaskDefinitionContainerDependencyOutput) ToTaskDefinitionContainerDependencyOutput() TaskDefinitionContainerDependencyOutput {
	return o
}

func (o TaskDefinitionContainerDependencyOutput) ToTaskDefinitionContainerDependencyOutputWithContext(ctx context.Context) TaskDefinitionContainerDependencyOutput {
	return o
}

func (o TaskDefinitionContainerDependencyOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDependency) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionContainerDependencyOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionContainerDependency) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

type TaskDefinitionContainerDependencyArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionContainerDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionContainerDependency)(nil)).Elem()
}

func (o TaskDefinitionContainerDependencyArrayOutput) ToTaskDefinitionContainerDependencyArrayOutput() TaskDefinitionContainerDependencyArrayOutput {
	return o
}

func (o TaskDefinitionContainerDependencyArrayOutput) ToTaskDefinitionContainerDependencyArrayOutputWithContext(ctx context.Context) TaskDefinitionContainerDependencyArrayOutput {
	return o
}

func (o TaskDefinitionContainerDependencyArrayOutput) Index(i pulumi.IntInput) TaskDefinitionContainerDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionContainerDependency {
		return vs[0].([]TaskDefinitionContainerDependency)[vs[1].(int)]
	}).(TaskDefinitionContainerDependencyOutput)
}

type TaskDefinitionDevice struct {
	ContainerPath *string  `pulumi:"containerPath"`
	HostPath      *string  `pulumi:"hostPath"`
	Permissions   []string `pulumi:"permissions"`
}

// TaskDefinitionDeviceInput is an input type that accepts TaskDefinitionDeviceArgs and TaskDefinitionDeviceOutput values.
// You can construct a concrete instance of `TaskDefinitionDeviceInput` via:
//
//          TaskDefinitionDeviceArgs{...}
type TaskDefinitionDeviceInput interface {
	pulumi.Input

	ToTaskDefinitionDeviceOutput() TaskDefinitionDeviceOutput
	ToTaskDefinitionDeviceOutputWithContext(context.Context) TaskDefinitionDeviceOutput
}

type TaskDefinitionDeviceArgs struct {
	ContainerPath pulumi.StringPtrInput   `pulumi:"containerPath"`
	HostPath      pulumi.StringPtrInput   `pulumi:"hostPath"`
	Permissions   pulumi.StringArrayInput `pulumi:"permissions"`
}

func (TaskDefinitionDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionDevice)(nil)).Elem()
}

func (i TaskDefinitionDeviceArgs) ToTaskDefinitionDeviceOutput() TaskDefinitionDeviceOutput {
	return i.ToTaskDefinitionDeviceOutputWithContext(context.Background())
}

func (i TaskDefinitionDeviceArgs) ToTaskDefinitionDeviceOutputWithContext(ctx context.Context) TaskDefinitionDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionDeviceOutput)
}

// TaskDefinitionDeviceArrayInput is an input type that accepts TaskDefinitionDeviceArray and TaskDefinitionDeviceArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionDeviceArrayInput` via:
//
//          TaskDefinitionDeviceArray{ TaskDefinitionDeviceArgs{...} }
type TaskDefinitionDeviceArrayInput interface {
	pulumi.Input

	ToTaskDefinitionDeviceArrayOutput() TaskDefinitionDeviceArrayOutput
	ToTaskDefinitionDeviceArrayOutputWithContext(context.Context) TaskDefinitionDeviceArrayOutput
}

type TaskDefinitionDeviceArray []TaskDefinitionDeviceInput

func (TaskDefinitionDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionDevice)(nil)).Elem()
}

func (i TaskDefinitionDeviceArray) ToTaskDefinitionDeviceArrayOutput() TaskDefinitionDeviceArrayOutput {
	return i.ToTaskDefinitionDeviceArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionDeviceArray) ToTaskDefinitionDeviceArrayOutputWithContext(ctx context.Context) TaskDefinitionDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionDeviceArrayOutput)
}

type TaskDefinitionDeviceOutput struct{ *pulumi.OutputState }

func (TaskDefinitionDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionDevice)(nil)).Elem()
}

func (o TaskDefinitionDeviceOutput) ToTaskDefinitionDeviceOutput() TaskDefinitionDeviceOutput {
	return o
}

func (o TaskDefinitionDeviceOutput) ToTaskDefinitionDeviceOutputWithContext(ctx context.Context) TaskDefinitionDeviceOutput {
	return o
}

func (o TaskDefinitionDeviceOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionDevice) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionDeviceOutput) HostPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionDevice) *string { return v.HostPath }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionDeviceOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionDevice) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

type TaskDefinitionDeviceArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionDevice)(nil)).Elem()
}

func (o TaskDefinitionDeviceArrayOutput) ToTaskDefinitionDeviceArrayOutput() TaskDefinitionDeviceArrayOutput {
	return o
}

func (o TaskDefinitionDeviceArrayOutput) ToTaskDefinitionDeviceArrayOutputWithContext(ctx context.Context) TaskDefinitionDeviceArrayOutput {
	return o
}

func (o TaskDefinitionDeviceArrayOutput) Index(i pulumi.IntInput) TaskDefinitionDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionDevice {
		return vs[0].([]TaskDefinitionDevice)[vs[1].(int)]
	}).(TaskDefinitionDeviceOutput)
}

type TaskDefinitionDockerVolumeConfiguration struct {
	Autoprovision *bool       `pulumi:"autoprovision"`
	Driver        *string     `pulumi:"driver"`
	DriverOpts    interface{} `pulumi:"driverOpts"`
	Labels        interface{} `pulumi:"labels"`
	Scope         *string     `pulumi:"scope"`
}

// TaskDefinitionDockerVolumeConfigurationInput is an input type that accepts TaskDefinitionDockerVolumeConfigurationArgs and TaskDefinitionDockerVolumeConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionDockerVolumeConfigurationInput` via:
//
//          TaskDefinitionDockerVolumeConfigurationArgs{...}
type TaskDefinitionDockerVolumeConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionDockerVolumeConfigurationOutput() TaskDefinitionDockerVolumeConfigurationOutput
	ToTaskDefinitionDockerVolumeConfigurationOutputWithContext(context.Context) TaskDefinitionDockerVolumeConfigurationOutput
}

type TaskDefinitionDockerVolumeConfigurationArgs struct {
	Autoprovision pulumi.BoolPtrInput   `pulumi:"autoprovision"`
	Driver        pulumi.StringPtrInput `pulumi:"driver"`
	DriverOpts    pulumi.Input          `pulumi:"driverOpts"`
	Labels        pulumi.Input          `pulumi:"labels"`
	Scope         pulumi.StringPtrInput `pulumi:"scope"`
}

func (TaskDefinitionDockerVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionDockerVolumeConfiguration)(nil)).Elem()
}

func (i TaskDefinitionDockerVolumeConfigurationArgs) ToTaskDefinitionDockerVolumeConfigurationOutput() TaskDefinitionDockerVolumeConfigurationOutput {
	return i.ToTaskDefinitionDockerVolumeConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionDockerVolumeConfigurationArgs) ToTaskDefinitionDockerVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionDockerVolumeConfigurationOutput)
}

func (i TaskDefinitionDockerVolumeConfigurationArgs) ToTaskDefinitionDockerVolumeConfigurationPtrOutput() TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionDockerVolumeConfigurationArgs) ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionDockerVolumeConfigurationOutput).ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionDockerVolumeConfigurationPtrInput is an input type that accepts TaskDefinitionDockerVolumeConfigurationArgs, TaskDefinitionDockerVolumeConfigurationPtr and TaskDefinitionDockerVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionDockerVolumeConfigurationPtrInput` via:
//
//          TaskDefinitionDockerVolumeConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionDockerVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionDockerVolumeConfigurationPtrOutput() TaskDefinitionDockerVolumeConfigurationPtrOutput
	ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(context.Context) TaskDefinitionDockerVolumeConfigurationPtrOutput
}

type taskDefinitionDockerVolumeConfigurationPtrType TaskDefinitionDockerVolumeConfigurationArgs

func TaskDefinitionDockerVolumeConfigurationPtr(v *TaskDefinitionDockerVolumeConfigurationArgs) TaskDefinitionDockerVolumeConfigurationPtrInput {
	return (*taskDefinitionDockerVolumeConfigurationPtrType)(v)
}

func (*taskDefinitionDockerVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionDockerVolumeConfiguration)(nil)).Elem()
}

func (i *taskDefinitionDockerVolumeConfigurationPtrType) ToTaskDefinitionDockerVolumeConfigurationPtrOutput() TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionDockerVolumeConfigurationPtrType) ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionDockerVolumeConfigurationPtrOutput)
}

type TaskDefinitionDockerVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionDockerVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionDockerVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) ToTaskDefinitionDockerVolumeConfigurationOutput() TaskDefinitionDockerVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) ToTaskDefinitionDockerVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) ToTaskDefinitionDockerVolumeConfigurationPtrOutput() TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return o.ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionDockerVolumeConfiguration) *TaskDefinitionDockerVolumeConfiguration {
		return &v
	}).(TaskDefinitionDockerVolumeConfigurationPtrOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) Autoprovision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionDockerVolumeConfiguration) *bool { return v.Autoprovision }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionDockerVolumeConfiguration) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) DriverOpts() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskDefinitionDockerVolumeConfiguration) interface{} { return v.DriverOpts }).(pulumi.AnyOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) Labels() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskDefinitionDockerVolumeConfiguration) interface{} { return v.Labels }).(pulumi.AnyOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionDockerVolumeConfiguration) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type TaskDefinitionDockerVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionDockerVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionDockerVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) ToTaskDefinitionDockerVolumeConfigurationPtrOutput() TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) ToTaskDefinitionDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) Elem() TaskDefinitionDockerVolumeConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) TaskDefinitionDockerVolumeConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionDockerVolumeConfiguration
		return ret
	}).(TaskDefinitionDockerVolumeConfigurationOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) Autoprovision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Autoprovision
	}).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) DriverOpts() pulumi.AnyOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.DriverOpts
	}).(pulumi.AnyOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) Labels() pulumi.AnyOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.AnyOutput)
}

func (o TaskDefinitionDockerVolumeConfigurationPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionDockerVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionEFSVolumeConfiguration struct {
	AuthorizationConfig   *TaskDefinitionAuthorizationConfig                     `pulumi:"authorizationConfig"`
	FilesystemId          string                                                 `pulumi:"filesystemId"`
	RootDirectory         *string                                                `pulumi:"rootDirectory"`
	TransitEncryption     *TaskDefinitionEFSVolumeConfigurationTransitEncryption `pulumi:"transitEncryption"`
	TransitEncryptionPort *int                                                   `pulumi:"transitEncryptionPort"`
}

// TaskDefinitionEFSVolumeConfigurationInput is an input type that accepts TaskDefinitionEFSVolumeConfigurationArgs and TaskDefinitionEFSVolumeConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionEFSVolumeConfigurationInput` via:
//
//          TaskDefinitionEFSVolumeConfigurationArgs{...}
type TaskDefinitionEFSVolumeConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionEFSVolumeConfigurationOutput() TaskDefinitionEFSVolumeConfigurationOutput
	ToTaskDefinitionEFSVolumeConfigurationOutputWithContext(context.Context) TaskDefinitionEFSVolumeConfigurationOutput
}

type TaskDefinitionEFSVolumeConfigurationArgs struct {
	AuthorizationConfig   TaskDefinitionAuthorizationConfigPtrInput                     `pulumi:"authorizationConfig"`
	FilesystemId          pulumi.StringInput                                            `pulumi:"filesystemId"`
	RootDirectory         pulumi.StringPtrInput                                         `pulumi:"rootDirectory"`
	TransitEncryption     TaskDefinitionEFSVolumeConfigurationTransitEncryptionPtrInput `pulumi:"transitEncryption"`
	TransitEncryptionPort pulumi.IntPtrInput                                            `pulumi:"transitEncryptionPort"`
}

func (TaskDefinitionEFSVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEFSVolumeConfiguration)(nil)).Elem()
}

func (i TaskDefinitionEFSVolumeConfigurationArgs) ToTaskDefinitionEFSVolumeConfigurationOutput() TaskDefinitionEFSVolumeConfigurationOutput {
	return i.ToTaskDefinitionEFSVolumeConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionEFSVolumeConfigurationArgs) ToTaskDefinitionEFSVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEFSVolumeConfigurationOutput)
}

func (i TaskDefinitionEFSVolumeConfigurationArgs) ToTaskDefinitionEFSVolumeConfigurationPtrOutput() TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionEFSVolumeConfigurationArgs) ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEFSVolumeConfigurationOutput).ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionEFSVolumeConfigurationPtrInput is an input type that accepts TaskDefinitionEFSVolumeConfigurationArgs, TaskDefinitionEFSVolumeConfigurationPtr and TaskDefinitionEFSVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionEFSVolumeConfigurationPtrInput` via:
//
//          TaskDefinitionEFSVolumeConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionEFSVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionEFSVolumeConfigurationPtrOutput() TaskDefinitionEFSVolumeConfigurationPtrOutput
	ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(context.Context) TaskDefinitionEFSVolumeConfigurationPtrOutput
}

type taskDefinitionEFSVolumeConfigurationPtrType TaskDefinitionEFSVolumeConfigurationArgs

func TaskDefinitionEFSVolumeConfigurationPtr(v *TaskDefinitionEFSVolumeConfigurationArgs) TaskDefinitionEFSVolumeConfigurationPtrInput {
	return (*taskDefinitionEFSVolumeConfigurationPtrType)(v)
}

func (*taskDefinitionEFSVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionEFSVolumeConfiguration)(nil)).Elem()
}

func (i *taskDefinitionEFSVolumeConfigurationPtrType) ToTaskDefinitionEFSVolumeConfigurationPtrOutput() TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionEFSVolumeConfigurationPtrType) ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEFSVolumeConfigurationPtrOutput)
}

type TaskDefinitionEFSVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEFSVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEFSVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) ToTaskDefinitionEFSVolumeConfigurationOutput() TaskDefinitionEFSVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) ToTaskDefinitionEFSVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) ToTaskDefinitionEFSVolumeConfigurationPtrOutput() TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return o.ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionEFSVolumeConfiguration) *TaskDefinitionEFSVolumeConfiguration {
		return &v
	}).(TaskDefinitionEFSVolumeConfigurationPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) AuthorizationConfig() TaskDefinitionAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEFSVolumeConfiguration) *TaskDefinitionAuthorizationConfig {
		return v.AuthorizationConfig
	}).(TaskDefinitionAuthorizationConfigPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) FilesystemId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionEFSVolumeConfiguration) string { return v.FilesystemId }).(pulumi.StringOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEFSVolumeConfiguration) *string { return v.RootDirectory }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) TransitEncryption() TaskDefinitionEFSVolumeConfigurationTransitEncryptionPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEFSVolumeConfiguration) *TaskDefinitionEFSVolumeConfigurationTransitEncryption {
		return v.TransitEncryption
	}).(TaskDefinitionEFSVolumeConfigurationTransitEncryptionPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationOutput) TransitEncryptionPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEFSVolumeConfiguration) *int { return v.TransitEncryptionPort }).(pulumi.IntPtrOutput)
}

type TaskDefinitionEFSVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEFSVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionEFSVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) ToTaskDefinitionEFSVolumeConfigurationPtrOutput() TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) ToTaskDefinitionEFSVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) Elem() TaskDefinitionEFSVolumeConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) TaskDefinitionEFSVolumeConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionEFSVolumeConfiguration
		return ret
	}).(TaskDefinitionEFSVolumeConfigurationOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) AuthorizationConfig() TaskDefinitionAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) *TaskDefinitionAuthorizationConfig {
		if v == nil {
			return nil
		}
		return v.AuthorizationConfig
	}).(TaskDefinitionAuthorizationConfigPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) FilesystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FilesystemId
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RootDirectory
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) TransitEncryption() TaskDefinitionEFSVolumeConfigurationTransitEncryptionPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) *TaskDefinitionEFSVolumeConfigurationTransitEncryption {
		if v == nil {
			return nil
		}
		return v.TransitEncryption
	}).(TaskDefinitionEFSVolumeConfigurationTransitEncryptionPtrOutput)
}

func (o TaskDefinitionEFSVolumeConfigurationPtrOutput) TransitEncryptionPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEFSVolumeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TransitEncryptionPort
	}).(pulumi.IntPtrOutput)
}

type TaskDefinitionEnvironmentFile struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// TaskDefinitionEnvironmentFileInput is an input type that accepts TaskDefinitionEnvironmentFileArgs and TaskDefinitionEnvironmentFileOutput values.
// You can construct a concrete instance of `TaskDefinitionEnvironmentFileInput` via:
//
//          TaskDefinitionEnvironmentFileArgs{...}
type TaskDefinitionEnvironmentFileInput interface {
	pulumi.Input

	ToTaskDefinitionEnvironmentFileOutput() TaskDefinitionEnvironmentFileOutput
	ToTaskDefinitionEnvironmentFileOutputWithContext(context.Context) TaskDefinitionEnvironmentFileOutput
}

type TaskDefinitionEnvironmentFileArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TaskDefinitionEnvironmentFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEnvironmentFile)(nil)).Elem()
}

func (i TaskDefinitionEnvironmentFileArgs) ToTaskDefinitionEnvironmentFileOutput() TaskDefinitionEnvironmentFileOutput {
	return i.ToTaskDefinitionEnvironmentFileOutputWithContext(context.Background())
}

func (i TaskDefinitionEnvironmentFileArgs) ToTaskDefinitionEnvironmentFileOutputWithContext(ctx context.Context) TaskDefinitionEnvironmentFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEnvironmentFileOutput)
}

// TaskDefinitionEnvironmentFileArrayInput is an input type that accepts TaskDefinitionEnvironmentFileArray and TaskDefinitionEnvironmentFileArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionEnvironmentFileArrayInput` via:
//
//          TaskDefinitionEnvironmentFileArray{ TaskDefinitionEnvironmentFileArgs{...} }
type TaskDefinitionEnvironmentFileArrayInput interface {
	pulumi.Input

	ToTaskDefinitionEnvironmentFileArrayOutput() TaskDefinitionEnvironmentFileArrayOutput
	ToTaskDefinitionEnvironmentFileArrayOutputWithContext(context.Context) TaskDefinitionEnvironmentFileArrayOutput
}

type TaskDefinitionEnvironmentFileArray []TaskDefinitionEnvironmentFileInput

func (TaskDefinitionEnvironmentFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionEnvironmentFile)(nil)).Elem()
}

func (i TaskDefinitionEnvironmentFileArray) ToTaskDefinitionEnvironmentFileArrayOutput() TaskDefinitionEnvironmentFileArrayOutput {
	return i.ToTaskDefinitionEnvironmentFileArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionEnvironmentFileArray) ToTaskDefinitionEnvironmentFileArrayOutputWithContext(ctx context.Context) TaskDefinitionEnvironmentFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEnvironmentFileArrayOutput)
}

type TaskDefinitionEnvironmentFileOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEnvironmentFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEnvironmentFile)(nil)).Elem()
}

func (o TaskDefinitionEnvironmentFileOutput) ToTaskDefinitionEnvironmentFileOutput() TaskDefinitionEnvironmentFileOutput {
	return o
}

func (o TaskDefinitionEnvironmentFileOutput) ToTaskDefinitionEnvironmentFileOutputWithContext(ctx context.Context) TaskDefinitionEnvironmentFileOutput {
	return o
}

func (o TaskDefinitionEnvironmentFileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEnvironmentFile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionEnvironmentFileOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEnvironmentFile) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaskDefinitionEnvironmentFileArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEnvironmentFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionEnvironmentFile)(nil)).Elem()
}

func (o TaskDefinitionEnvironmentFileArrayOutput) ToTaskDefinitionEnvironmentFileArrayOutput() TaskDefinitionEnvironmentFileArrayOutput {
	return o
}

func (o TaskDefinitionEnvironmentFileArrayOutput) ToTaskDefinitionEnvironmentFileArrayOutputWithContext(ctx context.Context) TaskDefinitionEnvironmentFileArrayOutput {
	return o
}

func (o TaskDefinitionEnvironmentFileArrayOutput) Index(i pulumi.IntInput) TaskDefinitionEnvironmentFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionEnvironmentFile {
		return vs[0].([]TaskDefinitionEnvironmentFile)[vs[1].(int)]
	}).(TaskDefinitionEnvironmentFileOutput)
}

type TaskDefinitionEphemeralStorage struct {
	SizeInGiB *int `pulumi:"sizeInGiB"`
}

// TaskDefinitionEphemeralStorageInput is an input type that accepts TaskDefinitionEphemeralStorageArgs and TaskDefinitionEphemeralStorageOutput values.
// You can construct a concrete instance of `TaskDefinitionEphemeralStorageInput` via:
//
//          TaskDefinitionEphemeralStorageArgs{...}
type TaskDefinitionEphemeralStorageInput interface {
	pulumi.Input

	ToTaskDefinitionEphemeralStorageOutput() TaskDefinitionEphemeralStorageOutput
	ToTaskDefinitionEphemeralStorageOutputWithContext(context.Context) TaskDefinitionEphemeralStorageOutput
}

type TaskDefinitionEphemeralStorageArgs struct {
	SizeInGiB pulumi.IntPtrInput `pulumi:"sizeInGiB"`
}

func (TaskDefinitionEphemeralStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEphemeralStorage)(nil)).Elem()
}

func (i TaskDefinitionEphemeralStorageArgs) ToTaskDefinitionEphemeralStorageOutput() TaskDefinitionEphemeralStorageOutput {
	return i.ToTaskDefinitionEphemeralStorageOutputWithContext(context.Background())
}

func (i TaskDefinitionEphemeralStorageArgs) ToTaskDefinitionEphemeralStorageOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEphemeralStorageOutput)
}

func (i TaskDefinitionEphemeralStorageArgs) ToTaskDefinitionEphemeralStoragePtrOutput() TaskDefinitionEphemeralStoragePtrOutput {
	return i.ToTaskDefinitionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i TaskDefinitionEphemeralStorageArgs) ToTaskDefinitionEphemeralStoragePtrOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEphemeralStorageOutput).ToTaskDefinitionEphemeralStoragePtrOutputWithContext(ctx)
}

// TaskDefinitionEphemeralStoragePtrInput is an input type that accepts TaskDefinitionEphemeralStorageArgs, TaskDefinitionEphemeralStoragePtr and TaskDefinitionEphemeralStoragePtrOutput values.
// You can construct a concrete instance of `TaskDefinitionEphemeralStoragePtrInput` via:
//
//          TaskDefinitionEphemeralStorageArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionEphemeralStoragePtrInput interface {
	pulumi.Input

	ToTaskDefinitionEphemeralStoragePtrOutput() TaskDefinitionEphemeralStoragePtrOutput
	ToTaskDefinitionEphemeralStoragePtrOutputWithContext(context.Context) TaskDefinitionEphemeralStoragePtrOutput
}

type taskDefinitionEphemeralStoragePtrType TaskDefinitionEphemeralStorageArgs

func TaskDefinitionEphemeralStoragePtr(v *TaskDefinitionEphemeralStorageArgs) TaskDefinitionEphemeralStoragePtrInput {
	return (*taskDefinitionEphemeralStoragePtrType)(v)
}

func (*taskDefinitionEphemeralStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionEphemeralStorage)(nil)).Elem()
}

func (i *taskDefinitionEphemeralStoragePtrType) ToTaskDefinitionEphemeralStoragePtrOutput() TaskDefinitionEphemeralStoragePtrOutput {
	return i.ToTaskDefinitionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i *taskDefinitionEphemeralStoragePtrType) ToTaskDefinitionEphemeralStoragePtrOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionEphemeralStoragePtrOutput)
}

type TaskDefinitionEphemeralStorageOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEphemeralStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionEphemeralStorage)(nil)).Elem()
}

func (o TaskDefinitionEphemeralStorageOutput) ToTaskDefinitionEphemeralStorageOutput() TaskDefinitionEphemeralStorageOutput {
	return o
}

func (o TaskDefinitionEphemeralStorageOutput) ToTaskDefinitionEphemeralStorageOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStorageOutput {
	return o
}

func (o TaskDefinitionEphemeralStorageOutput) ToTaskDefinitionEphemeralStoragePtrOutput() TaskDefinitionEphemeralStoragePtrOutput {
	return o.ToTaskDefinitionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (o TaskDefinitionEphemeralStorageOutput) ToTaskDefinitionEphemeralStoragePtrOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionEphemeralStorage) *TaskDefinitionEphemeralStorage {
		return &v
	}).(TaskDefinitionEphemeralStoragePtrOutput)
}

func (o TaskDefinitionEphemeralStorageOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionEphemeralStorage) *int { return v.SizeInGiB }).(pulumi.IntPtrOutput)
}

type TaskDefinitionEphemeralStoragePtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionEphemeralStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionEphemeralStorage)(nil)).Elem()
}

func (o TaskDefinitionEphemeralStoragePtrOutput) ToTaskDefinitionEphemeralStoragePtrOutput() TaskDefinitionEphemeralStoragePtrOutput {
	return o
}

func (o TaskDefinitionEphemeralStoragePtrOutput) ToTaskDefinitionEphemeralStoragePtrOutputWithContext(ctx context.Context) TaskDefinitionEphemeralStoragePtrOutput {
	return o
}

func (o TaskDefinitionEphemeralStoragePtrOutput) Elem() TaskDefinitionEphemeralStorageOutput {
	return o.ApplyT(func(v *TaskDefinitionEphemeralStorage) TaskDefinitionEphemeralStorage {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionEphemeralStorage
		return ret
	}).(TaskDefinitionEphemeralStorageOutput)
}

func (o TaskDefinitionEphemeralStoragePtrOutput) SizeInGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionEphemeralStorage) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGiB
	}).(pulumi.IntPtrOutput)
}

type TaskDefinitionFirelensConfiguration struct {
	Options interface{} `pulumi:"options"`
	Type    *string     `pulumi:"type"`
}

// TaskDefinitionFirelensConfigurationInput is an input type that accepts TaskDefinitionFirelensConfigurationArgs and TaskDefinitionFirelensConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionFirelensConfigurationInput` via:
//
//          TaskDefinitionFirelensConfigurationArgs{...}
type TaskDefinitionFirelensConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionFirelensConfigurationOutput() TaskDefinitionFirelensConfigurationOutput
	ToTaskDefinitionFirelensConfigurationOutputWithContext(context.Context) TaskDefinitionFirelensConfigurationOutput
}

type TaskDefinitionFirelensConfigurationArgs struct {
	Options pulumi.Input          `pulumi:"options"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (TaskDefinitionFirelensConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionFirelensConfiguration)(nil)).Elem()
}

func (i TaskDefinitionFirelensConfigurationArgs) ToTaskDefinitionFirelensConfigurationOutput() TaskDefinitionFirelensConfigurationOutput {
	return i.ToTaskDefinitionFirelensConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionFirelensConfigurationArgs) ToTaskDefinitionFirelensConfigurationOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionFirelensConfigurationOutput)
}

func (i TaskDefinitionFirelensConfigurationArgs) ToTaskDefinitionFirelensConfigurationPtrOutput() TaskDefinitionFirelensConfigurationPtrOutput {
	return i.ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionFirelensConfigurationArgs) ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionFirelensConfigurationOutput).ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionFirelensConfigurationPtrInput is an input type that accepts TaskDefinitionFirelensConfigurationArgs, TaskDefinitionFirelensConfigurationPtr and TaskDefinitionFirelensConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionFirelensConfigurationPtrInput` via:
//
//          TaskDefinitionFirelensConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionFirelensConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionFirelensConfigurationPtrOutput() TaskDefinitionFirelensConfigurationPtrOutput
	ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(context.Context) TaskDefinitionFirelensConfigurationPtrOutput
}

type taskDefinitionFirelensConfigurationPtrType TaskDefinitionFirelensConfigurationArgs

func TaskDefinitionFirelensConfigurationPtr(v *TaskDefinitionFirelensConfigurationArgs) TaskDefinitionFirelensConfigurationPtrInput {
	return (*taskDefinitionFirelensConfigurationPtrType)(v)
}

func (*taskDefinitionFirelensConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionFirelensConfiguration)(nil)).Elem()
}

func (i *taskDefinitionFirelensConfigurationPtrType) ToTaskDefinitionFirelensConfigurationPtrOutput() TaskDefinitionFirelensConfigurationPtrOutput {
	return i.ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionFirelensConfigurationPtrType) ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionFirelensConfigurationPtrOutput)
}

type TaskDefinitionFirelensConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionFirelensConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionFirelensConfiguration)(nil)).Elem()
}

func (o TaskDefinitionFirelensConfigurationOutput) ToTaskDefinitionFirelensConfigurationOutput() TaskDefinitionFirelensConfigurationOutput {
	return o
}

func (o TaskDefinitionFirelensConfigurationOutput) ToTaskDefinitionFirelensConfigurationOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationOutput {
	return o
}

func (o TaskDefinitionFirelensConfigurationOutput) ToTaskDefinitionFirelensConfigurationPtrOutput() TaskDefinitionFirelensConfigurationPtrOutput {
	return o.ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionFirelensConfigurationOutput) ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionFirelensConfiguration) *TaskDefinitionFirelensConfiguration {
		return &v
	}).(TaskDefinitionFirelensConfigurationPtrOutput)
}

func (o TaskDefinitionFirelensConfigurationOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskDefinitionFirelensConfiguration) interface{} { return v.Options }).(pulumi.AnyOutput)
}

func (o TaskDefinitionFirelensConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionFirelensConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionFirelensConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionFirelensConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionFirelensConfiguration)(nil)).Elem()
}

func (o TaskDefinitionFirelensConfigurationPtrOutput) ToTaskDefinitionFirelensConfigurationPtrOutput() TaskDefinitionFirelensConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionFirelensConfigurationPtrOutput) ToTaskDefinitionFirelensConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionFirelensConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionFirelensConfigurationPtrOutput) Elem() TaskDefinitionFirelensConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionFirelensConfiguration) TaskDefinitionFirelensConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionFirelensConfiguration
		return ret
	}).(TaskDefinitionFirelensConfigurationOutput)
}

func (o TaskDefinitionFirelensConfigurationPtrOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v *TaskDefinitionFirelensConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.AnyOutput)
}

func (o TaskDefinitionFirelensConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionFirelensConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The health check command and associated configuration parameters for the container.
type TaskDefinitionHealthCheck struct {
	// A string array representing the command that the container runs to determine if it is healthy.
	Command []string `pulumi:"command"`
	// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
	Interval *int `pulumi:"interval"`
	// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
	Retries *int `pulumi:"retries"`
	// The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
	StartPeriod *int `pulumi:"startPeriod"`
	// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
	Timeout *int `pulumi:"timeout"`
}

// TaskDefinitionHealthCheckInput is an input type that accepts TaskDefinitionHealthCheckArgs and TaskDefinitionHealthCheckOutput values.
// You can construct a concrete instance of `TaskDefinitionHealthCheckInput` via:
//
//          TaskDefinitionHealthCheckArgs{...}
type TaskDefinitionHealthCheckInput interface {
	pulumi.Input

	ToTaskDefinitionHealthCheckOutput() TaskDefinitionHealthCheckOutput
	ToTaskDefinitionHealthCheckOutputWithContext(context.Context) TaskDefinitionHealthCheckOutput
}

// The health check command and associated configuration parameters for the container.
type TaskDefinitionHealthCheckArgs struct {
	// A string array representing the command that the container runs to determine if it is healthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	// The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
	StartPeriod pulumi.IntPtrInput `pulumi:"startPeriod"`
	// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (TaskDefinitionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHealthCheck)(nil)).Elem()
}

func (i TaskDefinitionHealthCheckArgs) ToTaskDefinitionHealthCheckOutput() TaskDefinitionHealthCheckOutput {
	return i.ToTaskDefinitionHealthCheckOutputWithContext(context.Background())
}

func (i TaskDefinitionHealthCheckArgs) ToTaskDefinitionHealthCheckOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHealthCheckOutput)
}

func (i TaskDefinitionHealthCheckArgs) ToTaskDefinitionHealthCheckPtrOutput() TaskDefinitionHealthCheckPtrOutput {
	return i.ToTaskDefinitionHealthCheckPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionHealthCheckArgs) ToTaskDefinitionHealthCheckPtrOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHealthCheckOutput).ToTaskDefinitionHealthCheckPtrOutputWithContext(ctx)
}

// TaskDefinitionHealthCheckPtrInput is an input type that accepts TaskDefinitionHealthCheckArgs, TaskDefinitionHealthCheckPtr and TaskDefinitionHealthCheckPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionHealthCheckPtrInput` via:
//
//          TaskDefinitionHealthCheckArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionHealthCheckPtrInput interface {
	pulumi.Input

	ToTaskDefinitionHealthCheckPtrOutput() TaskDefinitionHealthCheckPtrOutput
	ToTaskDefinitionHealthCheckPtrOutputWithContext(context.Context) TaskDefinitionHealthCheckPtrOutput
}

type taskDefinitionHealthCheckPtrType TaskDefinitionHealthCheckArgs

func TaskDefinitionHealthCheckPtr(v *TaskDefinitionHealthCheckArgs) TaskDefinitionHealthCheckPtrInput {
	return (*taskDefinitionHealthCheckPtrType)(v)
}

func (*taskDefinitionHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionHealthCheck)(nil)).Elem()
}

func (i *taskDefinitionHealthCheckPtrType) ToTaskDefinitionHealthCheckPtrOutput() TaskDefinitionHealthCheckPtrOutput {
	return i.ToTaskDefinitionHealthCheckPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionHealthCheckPtrType) ToTaskDefinitionHealthCheckPtrOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHealthCheckPtrOutput)
}

// The health check command and associated configuration parameters for the container.
type TaskDefinitionHealthCheckOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHealthCheck)(nil)).Elem()
}

func (o TaskDefinitionHealthCheckOutput) ToTaskDefinitionHealthCheckOutput() TaskDefinitionHealthCheckOutput {
	return o
}

func (o TaskDefinitionHealthCheckOutput) ToTaskDefinitionHealthCheckOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckOutput {
	return o
}

func (o TaskDefinitionHealthCheckOutput) ToTaskDefinitionHealthCheckPtrOutput() TaskDefinitionHealthCheckPtrOutput {
	return o.ToTaskDefinitionHealthCheckPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionHealthCheckOutput) ToTaskDefinitionHealthCheckPtrOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionHealthCheck) *TaskDefinitionHealthCheck {
		return &v
	}).(TaskDefinitionHealthCheckPtrOutput)
}

// A string array representing the command that the container runs to determine if it is healthy.
func (o TaskDefinitionHealthCheckOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionHealthCheck) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
func (o TaskDefinitionHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
func (o TaskDefinitionHealthCheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHealthCheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

// The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
func (o TaskDefinitionHealthCheckOutput) StartPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHealthCheck) *int { return v.StartPeriod }).(pulumi.IntPtrOutput)
}

// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
func (o TaskDefinitionHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type TaskDefinitionHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionHealthCheck)(nil)).Elem()
}

func (o TaskDefinitionHealthCheckPtrOutput) ToTaskDefinitionHealthCheckPtrOutput() TaskDefinitionHealthCheckPtrOutput {
	return o
}

func (o TaskDefinitionHealthCheckPtrOutput) ToTaskDefinitionHealthCheckPtrOutputWithContext(ctx context.Context) TaskDefinitionHealthCheckPtrOutput {
	return o
}

func (o TaskDefinitionHealthCheckPtrOutput) Elem() TaskDefinitionHealthCheckOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) TaskDefinitionHealthCheck {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionHealthCheck
		return ret
	}).(TaskDefinitionHealthCheckOutput)
}

// A string array representing the command that the container runs to determine if it is healthy.
func (o TaskDefinitionHealthCheckPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
func (o TaskDefinitionHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
func (o TaskDefinitionHealthCheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

// The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
func (o TaskDefinitionHealthCheckPtrOutput) StartPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.StartPeriod
	}).(pulumi.IntPtrOutput)
}

// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
func (o TaskDefinitionHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type TaskDefinitionHostEntry struct {
	Hostname  *string `pulumi:"hostname"`
	IpAddress *string `pulumi:"ipAddress"`
}

// TaskDefinitionHostEntryInput is an input type that accepts TaskDefinitionHostEntryArgs and TaskDefinitionHostEntryOutput values.
// You can construct a concrete instance of `TaskDefinitionHostEntryInput` via:
//
//          TaskDefinitionHostEntryArgs{...}
type TaskDefinitionHostEntryInput interface {
	pulumi.Input

	ToTaskDefinitionHostEntryOutput() TaskDefinitionHostEntryOutput
	ToTaskDefinitionHostEntryOutputWithContext(context.Context) TaskDefinitionHostEntryOutput
}

type TaskDefinitionHostEntryArgs struct {
	Hostname  pulumi.StringPtrInput `pulumi:"hostname"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (TaskDefinitionHostEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHostEntry)(nil)).Elem()
}

func (i TaskDefinitionHostEntryArgs) ToTaskDefinitionHostEntryOutput() TaskDefinitionHostEntryOutput {
	return i.ToTaskDefinitionHostEntryOutputWithContext(context.Background())
}

func (i TaskDefinitionHostEntryArgs) ToTaskDefinitionHostEntryOutputWithContext(ctx context.Context) TaskDefinitionHostEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHostEntryOutput)
}

// TaskDefinitionHostEntryArrayInput is an input type that accepts TaskDefinitionHostEntryArray and TaskDefinitionHostEntryArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionHostEntryArrayInput` via:
//
//          TaskDefinitionHostEntryArray{ TaskDefinitionHostEntryArgs{...} }
type TaskDefinitionHostEntryArrayInput interface {
	pulumi.Input

	ToTaskDefinitionHostEntryArrayOutput() TaskDefinitionHostEntryArrayOutput
	ToTaskDefinitionHostEntryArrayOutputWithContext(context.Context) TaskDefinitionHostEntryArrayOutput
}

type TaskDefinitionHostEntryArray []TaskDefinitionHostEntryInput

func (TaskDefinitionHostEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionHostEntry)(nil)).Elem()
}

func (i TaskDefinitionHostEntryArray) ToTaskDefinitionHostEntryArrayOutput() TaskDefinitionHostEntryArrayOutput {
	return i.ToTaskDefinitionHostEntryArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionHostEntryArray) ToTaskDefinitionHostEntryArrayOutputWithContext(ctx context.Context) TaskDefinitionHostEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHostEntryArrayOutput)
}

type TaskDefinitionHostEntryOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHostEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHostEntry)(nil)).Elem()
}

func (o TaskDefinitionHostEntryOutput) ToTaskDefinitionHostEntryOutput() TaskDefinitionHostEntryOutput {
	return o
}

func (o TaskDefinitionHostEntryOutput) ToTaskDefinitionHostEntryOutputWithContext(ctx context.Context) TaskDefinitionHostEntryOutput {
	return o
}

func (o TaskDefinitionHostEntryOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHostEntry) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionHostEntryOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHostEntry) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type TaskDefinitionHostEntryArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHostEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionHostEntry)(nil)).Elem()
}

func (o TaskDefinitionHostEntryArrayOutput) ToTaskDefinitionHostEntryArrayOutput() TaskDefinitionHostEntryArrayOutput {
	return o
}

func (o TaskDefinitionHostEntryArrayOutput) ToTaskDefinitionHostEntryArrayOutputWithContext(ctx context.Context) TaskDefinitionHostEntryArrayOutput {
	return o
}

func (o TaskDefinitionHostEntryArrayOutput) Index(i pulumi.IntInput) TaskDefinitionHostEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionHostEntry {
		return vs[0].([]TaskDefinitionHostEntry)[vs[1].(int)]
	}).(TaskDefinitionHostEntryOutput)
}

type TaskDefinitionHostVolumeProperties struct {
	SourcePath *string `pulumi:"sourcePath"`
}

// TaskDefinitionHostVolumePropertiesInput is an input type that accepts TaskDefinitionHostVolumePropertiesArgs and TaskDefinitionHostVolumePropertiesOutput values.
// You can construct a concrete instance of `TaskDefinitionHostVolumePropertiesInput` via:
//
//          TaskDefinitionHostVolumePropertiesArgs{...}
type TaskDefinitionHostVolumePropertiesInput interface {
	pulumi.Input

	ToTaskDefinitionHostVolumePropertiesOutput() TaskDefinitionHostVolumePropertiesOutput
	ToTaskDefinitionHostVolumePropertiesOutputWithContext(context.Context) TaskDefinitionHostVolumePropertiesOutput
}

type TaskDefinitionHostVolumePropertiesArgs struct {
	SourcePath pulumi.StringPtrInput `pulumi:"sourcePath"`
}

func (TaskDefinitionHostVolumePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHostVolumeProperties)(nil)).Elem()
}

func (i TaskDefinitionHostVolumePropertiesArgs) ToTaskDefinitionHostVolumePropertiesOutput() TaskDefinitionHostVolumePropertiesOutput {
	return i.ToTaskDefinitionHostVolumePropertiesOutputWithContext(context.Background())
}

func (i TaskDefinitionHostVolumePropertiesArgs) ToTaskDefinitionHostVolumePropertiesOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHostVolumePropertiesOutput)
}

func (i TaskDefinitionHostVolumePropertiesArgs) ToTaskDefinitionHostVolumePropertiesPtrOutput() TaskDefinitionHostVolumePropertiesPtrOutput {
	return i.ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionHostVolumePropertiesArgs) ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHostVolumePropertiesOutput).ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(ctx)
}

// TaskDefinitionHostVolumePropertiesPtrInput is an input type that accepts TaskDefinitionHostVolumePropertiesArgs, TaskDefinitionHostVolumePropertiesPtr and TaskDefinitionHostVolumePropertiesPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionHostVolumePropertiesPtrInput` via:
//
//          TaskDefinitionHostVolumePropertiesArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionHostVolumePropertiesPtrInput interface {
	pulumi.Input

	ToTaskDefinitionHostVolumePropertiesPtrOutput() TaskDefinitionHostVolumePropertiesPtrOutput
	ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(context.Context) TaskDefinitionHostVolumePropertiesPtrOutput
}

type taskDefinitionHostVolumePropertiesPtrType TaskDefinitionHostVolumePropertiesArgs

func TaskDefinitionHostVolumePropertiesPtr(v *TaskDefinitionHostVolumePropertiesArgs) TaskDefinitionHostVolumePropertiesPtrInput {
	return (*taskDefinitionHostVolumePropertiesPtrType)(v)
}

func (*taskDefinitionHostVolumePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionHostVolumeProperties)(nil)).Elem()
}

func (i *taskDefinitionHostVolumePropertiesPtrType) ToTaskDefinitionHostVolumePropertiesPtrOutput() TaskDefinitionHostVolumePropertiesPtrOutput {
	return i.ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionHostVolumePropertiesPtrType) ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionHostVolumePropertiesPtrOutput)
}

type TaskDefinitionHostVolumePropertiesOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHostVolumePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionHostVolumeProperties)(nil)).Elem()
}

func (o TaskDefinitionHostVolumePropertiesOutput) ToTaskDefinitionHostVolumePropertiesOutput() TaskDefinitionHostVolumePropertiesOutput {
	return o
}

func (o TaskDefinitionHostVolumePropertiesOutput) ToTaskDefinitionHostVolumePropertiesOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesOutput {
	return o
}

func (o TaskDefinitionHostVolumePropertiesOutput) ToTaskDefinitionHostVolumePropertiesPtrOutput() TaskDefinitionHostVolumePropertiesPtrOutput {
	return o.ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionHostVolumePropertiesOutput) ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionHostVolumeProperties) *TaskDefinitionHostVolumeProperties {
		return &v
	}).(TaskDefinitionHostVolumePropertiesPtrOutput)
}

func (o TaskDefinitionHostVolumePropertiesOutput) SourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionHostVolumeProperties) *string { return v.SourcePath }).(pulumi.StringPtrOutput)
}

type TaskDefinitionHostVolumePropertiesPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionHostVolumePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionHostVolumeProperties)(nil)).Elem()
}

func (o TaskDefinitionHostVolumePropertiesPtrOutput) ToTaskDefinitionHostVolumePropertiesPtrOutput() TaskDefinitionHostVolumePropertiesPtrOutput {
	return o
}

func (o TaskDefinitionHostVolumePropertiesPtrOutput) ToTaskDefinitionHostVolumePropertiesPtrOutputWithContext(ctx context.Context) TaskDefinitionHostVolumePropertiesPtrOutput {
	return o
}

func (o TaskDefinitionHostVolumePropertiesPtrOutput) Elem() TaskDefinitionHostVolumePropertiesOutput {
	return o.ApplyT(func(v *TaskDefinitionHostVolumeProperties) TaskDefinitionHostVolumeProperties {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionHostVolumeProperties
		return ret
	}).(TaskDefinitionHostVolumePropertiesOutput)
}

func (o TaskDefinitionHostVolumePropertiesPtrOutput) SourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionHostVolumeProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourcePath
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionInferenceAccelerator struct {
	DeviceName *string `pulumi:"deviceName"`
	DeviceType *string `pulumi:"deviceType"`
}

// TaskDefinitionInferenceAcceleratorInput is an input type that accepts TaskDefinitionInferenceAcceleratorArgs and TaskDefinitionInferenceAcceleratorOutput values.
// You can construct a concrete instance of `TaskDefinitionInferenceAcceleratorInput` via:
//
//          TaskDefinitionInferenceAcceleratorArgs{...}
type TaskDefinitionInferenceAcceleratorInput interface {
	pulumi.Input

	ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput
	ToTaskDefinitionInferenceAcceleratorOutputWithContext(context.Context) TaskDefinitionInferenceAcceleratorOutput
}

type TaskDefinitionInferenceAcceleratorArgs struct {
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	DeviceType pulumi.StringPtrInput `pulumi:"deviceType"`
}

func (TaskDefinitionInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (i TaskDefinitionInferenceAcceleratorArgs) ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput {
	return i.ToTaskDefinitionInferenceAcceleratorOutputWithContext(context.Background())
}

func (i TaskDefinitionInferenceAcceleratorArgs) ToTaskDefinitionInferenceAcceleratorOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionInferenceAcceleratorOutput)
}

// TaskDefinitionInferenceAcceleratorArrayInput is an input type that accepts TaskDefinitionInferenceAcceleratorArray and TaskDefinitionInferenceAcceleratorArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionInferenceAcceleratorArrayInput` via:
//
//          TaskDefinitionInferenceAcceleratorArray{ TaskDefinitionInferenceAcceleratorArgs{...} }
type TaskDefinitionInferenceAcceleratorArrayInput interface {
	pulumi.Input

	ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput
	ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(context.Context) TaskDefinitionInferenceAcceleratorArrayOutput
}

type TaskDefinitionInferenceAcceleratorArray []TaskDefinitionInferenceAcceleratorInput

func (TaskDefinitionInferenceAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (i TaskDefinitionInferenceAcceleratorArray) ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput {
	return i.ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionInferenceAcceleratorArray) ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionInferenceAcceleratorArrayOutput)
}

type TaskDefinitionInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (TaskDefinitionInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (o TaskDefinitionInferenceAcceleratorOutput) ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorOutput) ToTaskDefinitionInferenceAcceleratorOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionInferenceAccelerator) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionInferenceAcceleratorOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionInferenceAccelerator) *string { return v.DeviceType }).(pulumi.StringPtrOutput)
}

type TaskDefinitionInferenceAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionInferenceAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorArrayOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) Index(i pulumi.IntInput) TaskDefinitionInferenceAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionInferenceAccelerator {
		return vs[0].([]TaskDefinitionInferenceAccelerator)[vs[1].(int)]
	}).(TaskDefinitionInferenceAcceleratorOutput)
}

type TaskDefinitionKernelCapabilities struct {
	Add  []string `pulumi:"add"`
	Drop []string `pulumi:"drop"`
}

// TaskDefinitionKernelCapabilitiesInput is an input type that accepts TaskDefinitionKernelCapabilitiesArgs and TaskDefinitionKernelCapabilitiesOutput values.
// You can construct a concrete instance of `TaskDefinitionKernelCapabilitiesInput` via:
//
//          TaskDefinitionKernelCapabilitiesArgs{...}
type TaskDefinitionKernelCapabilitiesInput interface {
	pulumi.Input

	ToTaskDefinitionKernelCapabilitiesOutput() TaskDefinitionKernelCapabilitiesOutput
	ToTaskDefinitionKernelCapabilitiesOutputWithContext(context.Context) TaskDefinitionKernelCapabilitiesOutput
}

type TaskDefinitionKernelCapabilitiesArgs struct {
	Add  pulumi.StringArrayInput `pulumi:"add"`
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (TaskDefinitionKernelCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionKernelCapabilities)(nil)).Elem()
}

func (i TaskDefinitionKernelCapabilitiesArgs) ToTaskDefinitionKernelCapabilitiesOutput() TaskDefinitionKernelCapabilitiesOutput {
	return i.ToTaskDefinitionKernelCapabilitiesOutputWithContext(context.Background())
}

func (i TaskDefinitionKernelCapabilitiesArgs) ToTaskDefinitionKernelCapabilitiesOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionKernelCapabilitiesOutput)
}

func (i TaskDefinitionKernelCapabilitiesArgs) ToTaskDefinitionKernelCapabilitiesPtrOutput() TaskDefinitionKernelCapabilitiesPtrOutput {
	return i.ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionKernelCapabilitiesArgs) ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionKernelCapabilitiesOutput).ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(ctx)
}

// TaskDefinitionKernelCapabilitiesPtrInput is an input type that accepts TaskDefinitionKernelCapabilitiesArgs, TaskDefinitionKernelCapabilitiesPtr and TaskDefinitionKernelCapabilitiesPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionKernelCapabilitiesPtrInput` via:
//
//          TaskDefinitionKernelCapabilitiesArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionKernelCapabilitiesPtrInput interface {
	pulumi.Input

	ToTaskDefinitionKernelCapabilitiesPtrOutput() TaskDefinitionKernelCapabilitiesPtrOutput
	ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(context.Context) TaskDefinitionKernelCapabilitiesPtrOutput
}

type taskDefinitionKernelCapabilitiesPtrType TaskDefinitionKernelCapabilitiesArgs

func TaskDefinitionKernelCapabilitiesPtr(v *TaskDefinitionKernelCapabilitiesArgs) TaskDefinitionKernelCapabilitiesPtrInput {
	return (*taskDefinitionKernelCapabilitiesPtrType)(v)
}

func (*taskDefinitionKernelCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionKernelCapabilities)(nil)).Elem()
}

func (i *taskDefinitionKernelCapabilitiesPtrType) ToTaskDefinitionKernelCapabilitiesPtrOutput() TaskDefinitionKernelCapabilitiesPtrOutput {
	return i.ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionKernelCapabilitiesPtrType) ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionKernelCapabilitiesPtrOutput)
}

type TaskDefinitionKernelCapabilitiesOutput struct{ *pulumi.OutputState }

func (TaskDefinitionKernelCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionKernelCapabilities)(nil)).Elem()
}

func (o TaskDefinitionKernelCapabilitiesOutput) ToTaskDefinitionKernelCapabilitiesOutput() TaskDefinitionKernelCapabilitiesOutput {
	return o
}

func (o TaskDefinitionKernelCapabilitiesOutput) ToTaskDefinitionKernelCapabilitiesOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesOutput {
	return o
}

func (o TaskDefinitionKernelCapabilitiesOutput) ToTaskDefinitionKernelCapabilitiesPtrOutput() TaskDefinitionKernelCapabilitiesPtrOutput {
	return o.ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionKernelCapabilitiesOutput) ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionKernelCapabilities) *TaskDefinitionKernelCapabilities {
		return &v
	}).(TaskDefinitionKernelCapabilitiesPtrOutput)
}

func (o TaskDefinitionKernelCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionKernelCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionKernelCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionKernelCapabilities) []string { return v.Drop }).(pulumi.StringArrayOutput)
}

type TaskDefinitionKernelCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionKernelCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionKernelCapabilities)(nil)).Elem()
}

func (o TaskDefinitionKernelCapabilitiesPtrOutput) ToTaskDefinitionKernelCapabilitiesPtrOutput() TaskDefinitionKernelCapabilitiesPtrOutput {
	return o
}

func (o TaskDefinitionKernelCapabilitiesPtrOutput) ToTaskDefinitionKernelCapabilitiesPtrOutputWithContext(ctx context.Context) TaskDefinitionKernelCapabilitiesPtrOutput {
	return o
}

func (o TaskDefinitionKernelCapabilitiesPtrOutput) Elem() TaskDefinitionKernelCapabilitiesOutput {
	return o.ApplyT(func(v *TaskDefinitionKernelCapabilities) TaskDefinitionKernelCapabilities {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionKernelCapabilities
		return ret
	}).(TaskDefinitionKernelCapabilitiesOutput)
}

func (o TaskDefinitionKernelCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionKernelCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionKernelCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionKernelCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

type TaskDefinitionKeyValuePair struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// TaskDefinitionKeyValuePairInput is an input type that accepts TaskDefinitionKeyValuePairArgs and TaskDefinitionKeyValuePairOutput values.
// You can construct a concrete instance of `TaskDefinitionKeyValuePairInput` via:
//
//          TaskDefinitionKeyValuePairArgs{...}
type TaskDefinitionKeyValuePairInput interface {
	pulumi.Input

	ToTaskDefinitionKeyValuePairOutput() TaskDefinitionKeyValuePairOutput
	ToTaskDefinitionKeyValuePairOutputWithContext(context.Context) TaskDefinitionKeyValuePairOutput
}

type TaskDefinitionKeyValuePairArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TaskDefinitionKeyValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionKeyValuePair)(nil)).Elem()
}

func (i TaskDefinitionKeyValuePairArgs) ToTaskDefinitionKeyValuePairOutput() TaskDefinitionKeyValuePairOutput {
	return i.ToTaskDefinitionKeyValuePairOutputWithContext(context.Background())
}

func (i TaskDefinitionKeyValuePairArgs) ToTaskDefinitionKeyValuePairOutputWithContext(ctx context.Context) TaskDefinitionKeyValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionKeyValuePairOutput)
}

// TaskDefinitionKeyValuePairArrayInput is an input type that accepts TaskDefinitionKeyValuePairArray and TaskDefinitionKeyValuePairArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionKeyValuePairArrayInput` via:
//
//          TaskDefinitionKeyValuePairArray{ TaskDefinitionKeyValuePairArgs{...} }
type TaskDefinitionKeyValuePairArrayInput interface {
	pulumi.Input

	ToTaskDefinitionKeyValuePairArrayOutput() TaskDefinitionKeyValuePairArrayOutput
	ToTaskDefinitionKeyValuePairArrayOutputWithContext(context.Context) TaskDefinitionKeyValuePairArrayOutput
}

type TaskDefinitionKeyValuePairArray []TaskDefinitionKeyValuePairInput

func (TaskDefinitionKeyValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionKeyValuePair)(nil)).Elem()
}

func (i TaskDefinitionKeyValuePairArray) ToTaskDefinitionKeyValuePairArrayOutput() TaskDefinitionKeyValuePairArrayOutput {
	return i.ToTaskDefinitionKeyValuePairArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionKeyValuePairArray) ToTaskDefinitionKeyValuePairArrayOutputWithContext(ctx context.Context) TaskDefinitionKeyValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionKeyValuePairArrayOutput)
}

type TaskDefinitionKeyValuePairOutput struct{ *pulumi.OutputState }

func (TaskDefinitionKeyValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionKeyValuePair)(nil)).Elem()
}

func (o TaskDefinitionKeyValuePairOutput) ToTaskDefinitionKeyValuePairOutput() TaskDefinitionKeyValuePairOutput {
	return o
}

func (o TaskDefinitionKeyValuePairOutput) ToTaskDefinitionKeyValuePairOutputWithContext(ctx context.Context) TaskDefinitionKeyValuePairOutput {
	return o
}

func (o TaskDefinitionKeyValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionKeyValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionKeyValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionKeyValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaskDefinitionKeyValuePairArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionKeyValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionKeyValuePair)(nil)).Elem()
}

func (o TaskDefinitionKeyValuePairArrayOutput) ToTaskDefinitionKeyValuePairArrayOutput() TaskDefinitionKeyValuePairArrayOutput {
	return o
}

func (o TaskDefinitionKeyValuePairArrayOutput) ToTaskDefinitionKeyValuePairArrayOutputWithContext(ctx context.Context) TaskDefinitionKeyValuePairArrayOutput {
	return o
}

func (o TaskDefinitionKeyValuePairArrayOutput) Index(i pulumi.IntInput) TaskDefinitionKeyValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionKeyValuePair {
		return vs[0].([]TaskDefinitionKeyValuePair)[vs[1].(int)]
	}).(TaskDefinitionKeyValuePairOutput)
}

type TaskDefinitionLinuxParameters struct {
	Capabilities       *TaskDefinitionKernelCapabilities `pulumi:"capabilities"`
	Devices            []TaskDefinitionDevice            `pulumi:"devices"`
	InitProcessEnabled *bool                             `pulumi:"initProcessEnabled"`
	MaxSwap            *int                              `pulumi:"maxSwap"`
	SharedMemorySize   *int                              `pulumi:"sharedMemorySize"`
	Swappiness         *int                              `pulumi:"swappiness"`
	Tmpfs              []TaskDefinitionTmpfs             `pulumi:"tmpfs"`
}

// TaskDefinitionLinuxParametersInput is an input type that accepts TaskDefinitionLinuxParametersArgs and TaskDefinitionLinuxParametersOutput values.
// You can construct a concrete instance of `TaskDefinitionLinuxParametersInput` via:
//
//          TaskDefinitionLinuxParametersArgs{...}
type TaskDefinitionLinuxParametersInput interface {
	pulumi.Input

	ToTaskDefinitionLinuxParametersOutput() TaskDefinitionLinuxParametersOutput
	ToTaskDefinitionLinuxParametersOutputWithContext(context.Context) TaskDefinitionLinuxParametersOutput
}

type TaskDefinitionLinuxParametersArgs struct {
	Capabilities       TaskDefinitionKernelCapabilitiesPtrInput `pulumi:"capabilities"`
	Devices            TaskDefinitionDeviceArrayInput           `pulumi:"devices"`
	InitProcessEnabled pulumi.BoolPtrInput                      `pulumi:"initProcessEnabled"`
	MaxSwap            pulumi.IntPtrInput                       `pulumi:"maxSwap"`
	SharedMemorySize   pulumi.IntPtrInput                       `pulumi:"sharedMemorySize"`
	Swappiness         pulumi.IntPtrInput                       `pulumi:"swappiness"`
	Tmpfs              TaskDefinitionTmpfsArrayInput            `pulumi:"tmpfs"`
}

func (TaskDefinitionLinuxParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionLinuxParameters)(nil)).Elem()
}

func (i TaskDefinitionLinuxParametersArgs) ToTaskDefinitionLinuxParametersOutput() TaskDefinitionLinuxParametersOutput {
	return i.ToTaskDefinitionLinuxParametersOutputWithContext(context.Background())
}

func (i TaskDefinitionLinuxParametersArgs) ToTaskDefinitionLinuxParametersOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLinuxParametersOutput)
}

func (i TaskDefinitionLinuxParametersArgs) ToTaskDefinitionLinuxParametersPtrOutput() TaskDefinitionLinuxParametersPtrOutput {
	return i.ToTaskDefinitionLinuxParametersPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionLinuxParametersArgs) ToTaskDefinitionLinuxParametersPtrOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLinuxParametersOutput).ToTaskDefinitionLinuxParametersPtrOutputWithContext(ctx)
}

// TaskDefinitionLinuxParametersPtrInput is an input type that accepts TaskDefinitionLinuxParametersArgs, TaskDefinitionLinuxParametersPtr and TaskDefinitionLinuxParametersPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionLinuxParametersPtrInput` via:
//
//          TaskDefinitionLinuxParametersArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionLinuxParametersPtrInput interface {
	pulumi.Input

	ToTaskDefinitionLinuxParametersPtrOutput() TaskDefinitionLinuxParametersPtrOutput
	ToTaskDefinitionLinuxParametersPtrOutputWithContext(context.Context) TaskDefinitionLinuxParametersPtrOutput
}

type taskDefinitionLinuxParametersPtrType TaskDefinitionLinuxParametersArgs

func TaskDefinitionLinuxParametersPtr(v *TaskDefinitionLinuxParametersArgs) TaskDefinitionLinuxParametersPtrInput {
	return (*taskDefinitionLinuxParametersPtrType)(v)
}

func (*taskDefinitionLinuxParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionLinuxParameters)(nil)).Elem()
}

func (i *taskDefinitionLinuxParametersPtrType) ToTaskDefinitionLinuxParametersPtrOutput() TaskDefinitionLinuxParametersPtrOutput {
	return i.ToTaskDefinitionLinuxParametersPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionLinuxParametersPtrType) ToTaskDefinitionLinuxParametersPtrOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLinuxParametersPtrOutput)
}

type TaskDefinitionLinuxParametersOutput struct{ *pulumi.OutputState }

func (TaskDefinitionLinuxParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionLinuxParameters)(nil)).Elem()
}

func (o TaskDefinitionLinuxParametersOutput) ToTaskDefinitionLinuxParametersOutput() TaskDefinitionLinuxParametersOutput {
	return o
}

func (o TaskDefinitionLinuxParametersOutput) ToTaskDefinitionLinuxParametersOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersOutput {
	return o
}

func (o TaskDefinitionLinuxParametersOutput) ToTaskDefinitionLinuxParametersPtrOutput() TaskDefinitionLinuxParametersPtrOutput {
	return o.ToTaskDefinitionLinuxParametersPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionLinuxParametersOutput) ToTaskDefinitionLinuxParametersPtrOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionLinuxParameters) *TaskDefinitionLinuxParameters {
		return &v
	}).(TaskDefinitionLinuxParametersPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) Capabilities() TaskDefinitionKernelCapabilitiesPtrOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) *TaskDefinitionKernelCapabilities { return v.Capabilities }).(TaskDefinitionKernelCapabilitiesPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) Devices() TaskDefinitionDeviceArrayOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) []TaskDefinitionDevice { return v.Devices }).(TaskDefinitionDeviceArrayOutput)
}

func (o TaskDefinitionLinuxParametersOutput) InitProcessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) *bool { return v.InitProcessEnabled }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) MaxSwap() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) *int { return v.MaxSwap }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) SharedMemorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) *int { return v.SharedMemorySize }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) Swappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) *int { return v.Swappiness }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersOutput) Tmpfs() TaskDefinitionTmpfsArrayOutput {
	return o.ApplyT(func(v TaskDefinitionLinuxParameters) []TaskDefinitionTmpfs { return v.Tmpfs }).(TaskDefinitionTmpfsArrayOutput)
}

type TaskDefinitionLinuxParametersPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionLinuxParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionLinuxParameters)(nil)).Elem()
}

func (o TaskDefinitionLinuxParametersPtrOutput) ToTaskDefinitionLinuxParametersPtrOutput() TaskDefinitionLinuxParametersPtrOutput {
	return o
}

func (o TaskDefinitionLinuxParametersPtrOutput) ToTaskDefinitionLinuxParametersPtrOutputWithContext(ctx context.Context) TaskDefinitionLinuxParametersPtrOutput {
	return o
}

func (o TaskDefinitionLinuxParametersPtrOutput) Elem() TaskDefinitionLinuxParametersOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) TaskDefinitionLinuxParameters {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionLinuxParameters
		return ret
	}).(TaskDefinitionLinuxParametersOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) Capabilities() TaskDefinitionKernelCapabilitiesPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) *TaskDefinitionKernelCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(TaskDefinitionKernelCapabilitiesPtrOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) Devices() TaskDefinitionDeviceArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) []TaskDefinitionDevice {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(TaskDefinitionDeviceArrayOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) InitProcessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) *bool {
		if v == nil {
			return nil
		}
		return v.InitProcessEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) MaxSwap() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxSwap
	}).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) SharedMemorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) *int {
		if v == nil {
			return nil
		}
		return v.SharedMemorySize
	}).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) Swappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) *int {
		if v == nil {
			return nil
		}
		return v.Swappiness
	}).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionLinuxParametersPtrOutput) Tmpfs() TaskDefinitionTmpfsArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionLinuxParameters) []TaskDefinitionTmpfs {
		if v == nil {
			return nil
		}
		return v.Tmpfs
	}).(TaskDefinitionTmpfsArrayOutput)
}

type TaskDefinitionLogConfiguration struct {
	LogDriver     string                 `pulumi:"logDriver"`
	Options       interface{}            `pulumi:"options"`
	SecretOptions []TaskDefinitionSecret `pulumi:"secretOptions"`
}

// TaskDefinitionLogConfigurationInput is an input type that accepts TaskDefinitionLogConfigurationArgs and TaskDefinitionLogConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionLogConfigurationInput` via:
//
//          TaskDefinitionLogConfigurationArgs{...}
type TaskDefinitionLogConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionLogConfigurationOutput() TaskDefinitionLogConfigurationOutput
	ToTaskDefinitionLogConfigurationOutputWithContext(context.Context) TaskDefinitionLogConfigurationOutput
}

type TaskDefinitionLogConfigurationArgs struct {
	LogDriver     pulumi.StringInput             `pulumi:"logDriver"`
	Options       pulumi.Input                   `pulumi:"options"`
	SecretOptions TaskDefinitionSecretArrayInput `pulumi:"secretOptions"`
}

func (TaskDefinitionLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionLogConfiguration)(nil)).Elem()
}

func (i TaskDefinitionLogConfigurationArgs) ToTaskDefinitionLogConfigurationOutput() TaskDefinitionLogConfigurationOutput {
	return i.ToTaskDefinitionLogConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionLogConfigurationArgs) ToTaskDefinitionLogConfigurationOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLogConfigurationOutput)
}

func (i TaskDefinitionLogConfigurationArgs) ToTaskDefinitionLogConfigurationPtrOutput() TaskDefinitionLogConfigurationPtrOutput {
	return i.ToTaskDefinitionLogConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionLogConfigurationArgs) ToTaskDefinitionLogConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLogConfigurationOutput).ToTaskDefinitionLogConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionLogConfigurationPtrInput is an input type that accepts TaskDefinitionLogConfigurationArgs, TaskDefinitionLogConfigurationPtr and TaskDefinitionLogConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionLogConfigurationPtrInput` via:
//
//          TaskDefinitionLogConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionLogConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionLogConfigurationPtrOutput() TaskDefinitionLogConfigurationPtrOutput
	ToTaskDefinitionLogConfigurationPtrOutputWithContext(context.Context) TaskDefinitionLogConfigurationPtrOutput
}

type taskDefinitionLogConfigurationPtrType TaskDefinitionLogConfigurationArgs

func TaskDefinitionLogConfigurationPtr(v *TaskDefinitionLogConfigurationArgs) TaskDefinitionLogConfigurationPtrInput {
	return (*taskDefinitionLogConfigurationPtrType)(v)
}

func (*taskDefinitionLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionLogConfiguration)(nil)).Elem()
}

func (i *taskDefinitionLogConfigurationPtrType) ToTaskDefinitionLogConfigurationPtrOutput() TaskDefinitionLogConfigurationPtrOutput {
	return i.ToTaskDefinitionLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionLogConfigurationPtrType) ToTaskDefinitionLogConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionLogConfigurationPtrOutput)
}

type TaskDefinitionLogConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionLogConfiguration)(nil)).Elem()
}

func (o TaskDefinitionLogConfigurationOutput) ToTaskDefinitionLogConfigurationOutput() TaskDefinitionLogConfigurationOutput {
	return o
}

func (o TaskDefinitionLogConfigurationOutput) ToTaskDefinitionLogConfigurationOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationOutput {
	return o
}

func (o TaskDefinitionLogConfigurationOutput) ToTaskDefinitionLogConfigurationPtrOutput() TaskDefinitionLogConfigurationPtrOutput {
	return o.ToTaskDefinitionLogConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionLogConfigurationOutput) ToTaskDefinitionLogConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionLogConfiguration) *TaskDefinitionLogConfiguration {
		return &v
	}).(TaskDefinitionLogConfigurationPtrOutput)
}

func (o TaskDefinitionLogConfigurationOutput) LogDriver() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionLogConfiguration) string { return v.LogDriver }).(pulumi.StringOutput)
}

func (o TaskDefinitionLogConfigurationOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v TaskDefinitionLogConfiguration) interface{} { return v.Options }).(pulumi.AnyOutput)
}

func (o TaskDefinitionLogConfigurationOutput) SecretOptions() TaskDefinitionSecretArrayOutput {
	return o.ApplyT(func(v TaskDefinitionLogConfiguration) []TaskDefinitionSecret { return v.SecretOptions }).(TaskDefinitionSecretArrayOutput)
}

type TaskDefinitionLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionLogConfiguration)(nil)).Elem()
}

func (o TaskDefinitionLogConfigurationPtrOutput) ToTaskDefinitionLogConfigurationPtrOutput() TaskDefinitionLogConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionLogConfigurationPtrOutput) ToTaskDefinitionLogConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionLogConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionLogConfigurationPtrOutput) Elem() TaskDefinitionLogConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionLogConfiguration) TaskDefinitionLogConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionLogConfiguration
		return ret
	}).(TaskDefinitionLogConfigurationOutput)
}

func (o TaskDefinitionLogConfigurationPtrOutput) LogDriver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LogDriver
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionLogConfigurationPtrOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v *TaskDefinitionLogConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.AnyOutput)
}

func (o TaskDefinitionLogConfigurationPtrOutput) SecretOptions() TaskDefinitionSecretArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionLogConfiguration) []TaskDefinitionSecret {
		if v == nil {
			return nil
		}
		return v.SecretOptions
	}).(TaskDefinitionSecretArrayOutput)
}

type TaskDefinitionMountPoint struct {
	ContainerPath *string `pulumi:"containerPath"`
	ReadOnly      *bool   `pulumi:"readOnly"`
	SourceVolume  *string `pulumi:"sourceVolume"`
}

// TaskDefinitionMountPointInput is an input type that accepts TaskDefinitionMountPointArgs and TaskDefinitionMountPointOutput values.
// You can construct a concrete instance of `TaskDefinitionMountPointInput` via:
//
//          TaskDefinitionMountPointArgs{...}
type TaskDefinitionMountPointInput interface {
	pulumi.Input

	ToTaskDefinitionMountPointOutput() TaskDefinitionMountPointOutput
	ToTaskDefinitionMountPointOutputWithContext(context.Context) TaskDefinitionMountPointOutput
}

type TaskDefinitionMountPointArgs struct {
	ContainerPath pulumi.StringPtrInput `pulumi:"containerPath"`
	ReadOnly      pulumi.BoolPtrInput   `pulumi:"readOnly"`
	SourceVolume  pulumi.StringPtrInput `pulumi:"sourceVolume"`
}

func (TaskDefinitionMountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionMountPoint)(nil)).Elem()
}

func (i TaskDefinitionMountPointArgs) ToTaskDefinitionMountPointOutput() TaskDefinitionMountPointOutput {
	return i.ToTaskDefinitionMountPointOutputWithContext(context.Background())
}

func (i TaskDefinitionMountPointArgs) ToTaskDefinitionMountPointOutputWithContext(ctx context.Context) TaskDefinitionMountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionMountPointOutput)
}

// TaskDefinitionMountPointArrayInput is an input type that accepts TaskDefinitionMountPointArray and TaskDefinitionMountPointArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionMountPointArrayInput` via:
//
//          TaskDefinitionMountPointArray{ TaskDefinitionMountPointArgs{...} }
type TaskDefinitionMountPointArrayInput interface {
	pulumi.Input

	ToTaskDefinitionMountPointArrayOutput() TaskDefinitionMountPointArrayOutput
	ToTaskDefinitionMountPointArrayOutputWithContext(context.Context) TaskDefinitionMountPointArrayOutput
}

type TaskDefinitionMountPointArray []TaskDefinitionMountPointInput

func (TaskDefinitionMountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionMountPoint)(nil)).Elem()
}

func (i TaskDefinitionMountPointArray) ToTaskDefinitionMountPointArrayOutput() TaskDefinitionMountPointArrayOutput {
	return i.ToTaskDefinitionMountPointArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionMountPointArray) ToTaskDefinitionMountPointArrayOutputWithContext(ctx context.Context) TaskDefinitionMountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionMountPointArrayOutput)
}

type TaskDefinitionMountPointOutput struct{ *pulumi.OutputState }

func (TaskDefinitionMountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionMountPoint)(nil)).Elem()
}

func (o TaskDefinitionMountPointOutput) ToTaskDefinitionMountPointOutput() TaskDefinitionMountPointOutput {
	return o
}

func (o TaskDefinitionMountPointOutput) ToTaskDefinitionMountPointOutputWithContext(ctx context.Context) TaskDefinitionMountPointOutput {
	return o
}

func (o TaskDefinitionMountPointOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionMountPoint) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionMountPointOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionMountPoint) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionMountPointOutput) SourceVolume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionMountPoint) *string { return v.SourceVolume }).(pulumi.StringPtrOutput)
}

type TaskDefinitionMountPointArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionMountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionMountPoint)(nil)).Elem()
}

func (o TaskDefinitionMountPointArrayOutput) ToTaskDefinitionMountPointArrayOutput() TaskDefinitionMountPointArrayOutput {
	return o
}

func (o TaskDefinitionMountPointArrayOutput) ToTaskDefinitionMountPointArrayOutputWithContext(ctx context.Context) TaskDefinitionMountPointArrayOutput {
	return o
}

func (o TaskDefinitionMountPointArrayOutput) Index(i pulumi.IntInput) TaskDefinitionMountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionMountPoint {
		return vs[0].([]TaskDefinitionMountPoint)[vs[1].(int)]
	}).(TaskDefinitionMountPointOutput)
}

type TaskDefinitionPlacementConstraint struct {
	Expression *string `pulumi:"expression"`
	Type       string  `pulumi:"type"`
}

// TaskDefinitionPlacementConstraintInput is an input type that accepts TaskDefinitionPlacementConstraintArgs and TaskDefinitionPlacementConstraintOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintInput` via:
//
//          TaskDefinitionPlacementConstraintArgs{...}
type TaskDefinitionPlacementConstraintInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput
	ToTaskDefinitionPlacementConstraintOutputWithContext(context.Context) TaskDefinitionPlacementConstraintOutput
}

type TaskDefinitionPlacementConstraintArgs struct {
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (TaskDefinitionPlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return i.ToTaskDefinitionPlacementConstraintOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintOutput)
}

// TaskDefinitionPlacementConstraintArrayInput is an input type that accepts TaskDefinitionPlacementConstraintArray and TaskDefinitionPlacementConstraintArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintArrayInput` via:
//
//          TaskDefinitionPlacementConstraintArray{ TaskDefinitionPlacementConstraintArgs{...} }
type TaskDefinitionPlacementConstraintArrayInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput
	ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Context) TaskDefinitionPlacementConstraintArrayOutput
}

type TaskDefinitionPlacementConstraintArray []TaskDefinitionPlacementConstraintInput

func (TaskDefinitionPlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return i.ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintArrayOutput)
}

type TaskDefinitionPlacementConstraintOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionPlacementConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) string { return v.Type }).(pulumi.StringOutput)
}

type TaskDefinitionPlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) Index(i pulumi.IntInput) TaskDefinitionPlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionPlacementConstraint {
		return vs[0].([]TaskDefinitionPlacementConstraint)[vs[1].(int)]
	}).(TaskDefinitionPlacementConstraintOutput)
}

type TaskDefinitionPortMapping struct {
	ContainerPort *int    `pulumi:"containerPort"`
	HostPort      *int    `pulumi:"hostPort"`
	Protocol      *string `pulumi:"protocol"`
}

// TaskDefinitionPortMappingInput is an input type that accepts TaskDefinitionPortMappingArgs and TaskDefinitionPortMappingOutput values.
// You can construct a concrete instance of `TaskDefinitionPortMappingInput` via:
//
//          TaskDefinitionPortMappingArgs{...}
type TaskDefinitionPortMappingInput interface {
	pulumi.Input

	ToTaskDefinitionPortMappingOutput() TaskDefinitionPortMappingOutput
	ToTaskDefinitionPortMappingOutputWithContext(context.Context) TaskDefinitionPortMappingOutput
}

type TaskDefinitionPortMappingArgs struct {
	ContainerPort pulumi.IntPtrInput    `pulumi:"containerPort"`
	HostPort      pulumi.IntPtrInput    `pulumi:"hostPort"`
	Protocol      pulumi.StringPtrInput `pulumi:"protocol"`
}

func (TaskDefinitionPortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPortMapping)(nil)).Elem()
}

func (i TaskDefinitionPortMappingArgs) ToTaskDefinitionPortMappingOutput() TaskDefinitionPortMappingOutput {
	return i.ToTaskDefinitionPortMappingOutputWithContext(context.Background())
}

func (i TaskDefinitionPortMappingArgs) ToTaskDefinitionPortMappingOutputWithContext(ctx context.Context) TaskDefinitionPortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPortMappingOutput)
}

// TaskDefinitionPortMappingArrayInput is an input type that accepts TaskDefinitionPortMappingArray and TaskDefinitionPortMappingArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionPortMappingArrayInput` via:
//
//          TaskDefinitionPortMappingArray{ TaskDefinitionPortMappingArgs{...} }
type TaskDefinitionPortMappingArrayInput interface {
	pulumi.Input

	ToTaskDefinitionPortMappingArrayOutput() TaskDefinitionPortMappingArrayOutput
	ToTaskDefinitionPortMappingArrayOutputWithContext(context.Context) TaskDefinitionPortMappingArrayOutput
}

type TaskDefinitionPortMappingArray []TaskDefinitionPortMappingInput

func (TaskDefinitionPortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPortMapping)(nil)).Elem()
}

func (i TaskDefinitionPortMappingArray) ToTaskDefinitionPortMappingArrayOutput() TaskDefinitionPortMappingArrayOutput {
	return i.ToTaskDefinitionPortMappingArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionPortMappingArray) ToTaskDefinitionPortMappingArrayOutputWithContext(ctx context.Context) TaskDefinitionPortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPortMappingArrayOutput)
}

type TaskDefinitionPortMappingOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPortMapping)(nil)).Elem()
}

func (o TaskDefinitionPortMappingOutput) ToTaskDefinitionPortMappingOutput() TaskDefinitionPortMappingOutput {
	return o
}

func (o TaskDefinitionPortMappingOutput) ToTaskDefinitionPortMappingOutputWithContext(ctx context.Context) TaskDefinitionPortMappingOutput {
	return o
}

func (o TaskDefinitionPortMappingOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPortMapping) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionPortMappingOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPortMapping) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

func (o TaskDefinitionPortMappingOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPortMapping) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type TaskDefinitionPortMappingArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPortMapping)(nil)).Elem()
}

func (o TaskDefinitionPortMappingArrayOutput) ToTaskDefinitionPortMappingArrayOutput() TaskDefinitionPortMappingArrayOutput {
	return o
}

func (o TaskDefinitionPortMappingArrayOutput) ToTaskDefinitionPortMappingArrayOutputWithContext(ctx context.Context) TaskDefinitionPortMappingArrayOutput {
	return o
}

func (o TaskDefinitionPortMappingArrayOutput) Index(i pulumi.IntInput) TaskDefinitionPortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionPortMapping {
		return vs[0].([]TaskDefinitionPortMapping)[vs[1].(int)]
	}).(TaskDefinitionPortMappingOutput)
}

type TaskDefinitionProxyConfiguration struct {
	ContainerName                string                       `pulumi:"containerName"`
	ProxyConfigurationProperties []TaskDefinitionKeyValuePair `pulumi:"proxyConfigurationProperties"`
	Type                         *string                      `pulumi:"type"`
}

// TaskDefinitionProxyConfigurationInput is an input type that accepts TaskDefinitionProxyConfigurationArgs and TaskDefinitionProxyConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionProxyConfigurationInput` via:
//
//          TaskDefinitionProxyConfigurationArgs{...}
type TaskDefinitionProxyConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput
	ToTaskDefinitionProxyConfigurationOutputWithContext(context.Context) TaskDefinitionProxyConfigurationOutput
}

type TaskDefinitionProxyConfigurationArgs struct {
	ContainerName                pulumi.StringInput                   `pulumi:"containerName"`
	ProxyConfigurationProperties TaskDefinitionKeyValuePairArrayInput `pulumi:"proxyConfigurationProperties"`
	Type                         pulumi.StringPtrInput                `pulumi:"type"`
}

func (TaskDefinitionProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput {
	return i.ToTaskDefinitionProxyConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationOutput)
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return i.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationOutput).ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionProxyConfigurationPtrInput is an input type that accepts TaskDefinitionProxyConfigurationArgs, TaskDefinitionProxyConfigurationPtr and TaskDefinitionProxyConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionProxyConfigurationPtrInput` via:
//
//          TaskDefinitionProxyConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionProxyConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput
	ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Context) TaskDefinitionProxyConfigurationPtrOutput
}

type taskDefinitionProxyConfigurationPtrType TaskDefinitionProxyConfigurationArgs

func TaskDefinitionProxyConfigurationPtr(v *TaskDefinitionProxyConfigurationArgs) TaskDefinitionProxyConfigurationPtrInput {
	return (*taskDefinitionProxyConfigurationPtrType)(v)
}

func (*taskDefinitionProxyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (i *taskDefinitionProxyConfigurationPtrType) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return i.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionProxyConfigurationPtrType) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationPtrOutput)
}

type TaskDefinitionProxyConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return o.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionProxyConfiguration) *TaskDefinitionProxyConfiguration {
		return &v
	}).(TaskDefinitionProxyConfigurationPtrOutput)
}

func (o TaskDefinitionProxyConfigurationOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o TaskDefinitionProxyConfigurationOutput) ProxyConfigurationProperties() TaskDefinitionKeyValuePairArrayOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) []TaskDefinitionKeyValuePair {
		return v.ProxyConfigurationProperties
	}).(TaskDefinitionKeyValuePairArrayOutput)
}

func (o TaskDefinitionProxyConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionProxyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionProxyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationPtrOutput) Elem() TaskDefinitionProxyConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionProxyConfiguration) TaskDefinitionProxyConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionProxyConfiguration
		return ret
	}).(TaskDefinitionProxyConfigurationOutput)
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ProxyConfigurationProperties() TaskDefinitionKeyValuePairArrayOutput {
	return o.ApplyT(func(v *TaskDefinitionProxyConfiguration) []TaskDefinitionKeyValuePair {
		if v == nil {
			return nil
		}
		return v.ProxyConfigurationProperties
	}).(TaskDefinitionKeyValuePairArrayOutput)
}

func (o TaskDefinitionProxyConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionRepositoryCredentials struct {
	CredentialsParameter *string `pulumi:"credentialsParameter"`
}

// TaskDefinitionRepositoryCredentialsInput is an input type that accepts TaskDefinitionRepositoryCredentialsArgs and TaskDefinitionRepositoryCredentialsOutput values.
// You can construct a concrete instance of `TaskDefinitionRepositoryCredentialsInput` via:
//
//          TaskDefinitionRepositoryCredentialsArgs{...}
type TaskDefinitionRepositoryCredentialsInput interface {
	pulumi.Input

	ToTaskDefinitionRepositoryCredentialsOutput() TaskDefinitionRepositoryCredentialsOutput
	ToTaskDefinitionRepositoryCredentialsOutputWithContext(context.Context) TaskDefinitionRepositoryCredentialsOutput
}

type TaskDefinitionRepositoryCredentialsArgs struct {
	CredentialsParameter pulumi.StringPtrInput `pulumi:"credentialsParameter"`
}

func (TaskDefinitionRepositoryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionRepositoryCredentials)(nil)).Elem()
}

func (i TaskDefinitionRepositoryCredentialsArgs) ToTaskDefinitionRepositoryCredentialsOutput() TaskDefinitionRepositoryCredentialsOutput {
	return i.ToTaskDefinitionRepositoryCredentialsOutputWithContext(context.Background())
}

func (i TaskDefinitionRepositoryCredentialsArgs) ToTaskDefinitionRepositoryCredentialsOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRepositoryCredentialsOutput)
}

func (i TaskDefinitionRepositoryCredentialsArgs) ToTaskDefinitionRepositoryCredentialsPtrOutput() TaskDefinitionRepositoryCredentialsPtrOutput {
	return i.ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionRepositoryCredentialsArgs) ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRepositoryCredentialsOutput).ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(ctx)
}

// TaskDefinitionRepositoryCredentialsPtrInput is an input type that accepts TaskDefinitionRepositoryCredentialsArgs, TaskDefinitionRepositoryCredentialsPtr and TaskDefinitionRepositoryCredentialsPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionRepositoryCredentialsPtrInput` via:
//
//          TaskDefinitionRepositoryCredentialsArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionRepositoryCredentialsPtrInput interface {
	pulumi.Input

	ToTaskDefinitionRepositoryCredentialsPtrOutput() TaskDefinitionRepositoryCredentialsPtrOutput
	ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(context.Context) TaskDefinitionRepositoryCredentialsPtrOutput
}

type taskDefinitionRepositoryCredentialsPtrType TaskDefinitionRepositoryCredentialsArgs

func TaskDefinitionRepositoryCredentialsPtr(v *TaskDefinitionRepositoryCredentialsArgs) TaskDefinitionRepositoryCredentialsPtrInput {
	return (*taskDefinitionRepositoryCredentialsPtrType)(v)
}

func (*taskDefinitionRepositoryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionRepositoryCredentials)(nil)).Elem()
}

func (i *taskDefinitionRepositoryCredentialsPtrType) ToTaskDefinitionRepositoryCredentialsPtrOutput() TaskDefinitionRepositoryCredentialsPtrOutput {
	return i.ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionRepositoryCredentialsPtrType) ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRepositoryCredentialsPtrOutput)
}

type TaskDefinitionRepositoryCredentialsOutput struct{ *pulumi.OutputState }

func (TaskDefinitionRepositoryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionRepositoryCredentials)(nil)).Elem()
}

func (o TaskDefinitionRepositoryCredentialsOutput) ToTaskDefinitionRepositoryCredentialsOutput() TaskDefinitionRepositoryCredentialsOutput {
	return o
}

func (o TaskDefinitionRepositoryCredentialsOutput) ToTaskDefinitionRepositoryCredentialsOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsOutput {
	return o
}

func (o TaskDefinitionRepositoryCredentialsOutput) ToTaskDefinitionRepositoryCredentialsPtrOutput() TaskDefinitionRepositoryCredentialsPtrOutput {
	return o.ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionRepositoryCredentialsOutput) ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionRepositoryCredentials) *TaskDefinitionRepositoryCredentials {
		return &v
	}).(TaskDefinitionRepositoryCredentialsPtrOutput)
}

func (o TaskDefinitionRepositoryCredentialsOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionRepositoryCredentials) *string { return v.CredentialsParameter }).(pulumi.StringPtrOutput)
}

type TaskDefinitionRepositoryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionRepositoryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionRepositoryCredentials)(nil)).Elem()
}

func (o TaskDefinitionRepositoryCredentialsPtrOutput) ToTaskDefinitionRepositoryCredentialsPtrOutput() TaskDefinitionRepositoryCredentialsPtrOutput {
	return o
}

func (o TaskDefinitionRepositoryCredentialsPtrOutput) ToTaskDefinitionRepositoryCredentialsPtrOutputWithContext(ctx context.Context) TaskDefinitionRepositoryCredentialsPtrOutput {
	return o
}

func (o TaskDefinitionRepositoryCredentialsPtrOutput) Elem() TaskDefinitionRepositoryCredentialsOutput {
	return o.ApplyT(func(v *TaskDefinitionRepositoryCredentials) TaskDefinitionRepositoryCredentials {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionRepositoryCredentials
		return ret
	}).(TaskDefinitionRepositoryCredentialsOutput)
}

func (o TaskDefinitionRepositoryCredentialsPtrOutput) CredentialsParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionRepositoryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsParameter
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionResourceRequirement struct {
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// TaskDefinitionResourceRequirementInput is an input type that accepts TaskDefinitionResourceRequirementArgs and TaskDefinitionResourceRequirementOutput values.
// You can construct a concrete instance of `TaskDefinitionResourceRequirementInput` via:
//
//          TaskDefinitionResourceRequirementArgs{...}
type TaskDefinitionResourceRequirementInput interface {
	pulumi.Input

	ToTaskDefinitionResourceRequirementOutput() TaskDefinitionResourceRequirementOutput
	ToTaskDefinitionResourceRequirementOutputWithContext(context.Context) TaskDefinitionResourceRequirementOutput
}

type TaskDefinitionResourceRequirementArgs struct {
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TaskDefinitionResourceRequirementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionResourceRequirement)(nil)).Elem()
}

func (i TaskDefinitionResourceRequirementArgs) ToTaskDefinitionResourceRequirementOutput() TaskDefinitionResourceRequirementOutput {
	return i.ToTaskDefinitionResourceRequirementOutputWithContext(context.Background())
}

func (i TaskDefinitionResourceRequirementArgs) ToTaskDefinitionResourceRequirementOutputWithContext(ctx context.Context) TaskDefinitionResourceRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionResourceRequirementOutput)
}

// TaskDefinitionResourceRequirementArrayInput is an input type that accepts TaskDefinitionResourceRequirementArray and TaskDefinitionResourceRequirementArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionResourceRequirementArrayInput` via:
//
//          TaskDefinitionResourceRequirementArray{ TaskDefinitionResourceRequirementArgs{...} }
type TaskDefinitionResourceRequirementArrayInput interface {
	pulumi.Input

	ToTaskDefinitionResourceRequirementArrayOutput() TaskDefinitionResourceRequirementArrayOutput
	ToTaskDefinitionResourceRequirementArrayOutputWithContext(context.Context) TaskDefinitionResourceRequirementArrayOutput
}

type TaskDefinitionResourceRequirementArray []TaskDefinitionResourceRequirementInput

func (TaskDefinitionResourceRequirementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionResourceRequirement)(nil)).Elem()
}

func (i TaskDefinitionResourceRequirementArray) ToTaskDefinitionResourceRequirementArrayOutput() TaskDefinitionResourceRequirementArrayOutput {
	return i.ToTaskDefinitionResourceRequirementArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionResourceRequirementArray) ToTaskDefinitionResourceRequirementArrayOutputWithContext(ctx context.Context) TaskDefinitionResourceRequirementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionResourceRequirementArrayOutput)
}

type TaskDefinitionResourceRequirementOutput struct{ *pulumi.OutputState }

func (TaskDefinitionResourceRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionResourceRequirement)(nil)).Elem()
}

func (o TaskDefinitionResourceRequirementOutput) ToTaskDefinitionResourceRequirementOutput() TaskDefinitionResourceRequirementOutput {
	return o
}

func (o TaskDefinitionResourceRequirementOutput) ToTaskDefinitionResourceRequirementOutputWithContext(ctx context.Context) TaskDefinitionResourceRequirementOutput {
	return o
}

func (o TaskDefinitionResourceRequirementOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionResourceRequirement) string { return v.Type }).(pulumi.StringOutput)
}

func (o TaskDefinitionResourceRequirementOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionResourceRequirement) string { return v.Value }).(pulumi.StringOutput)
}

type TaskDefinitionResourceRequirementArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionResourceRequirementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionResourceRequirement)(nil)).Elem()
}

func (o TaskDefinitionResourceRequirementArrayOutput) ToTaskDefinitionResourceRequirementArrayOutput() TaskDefinitionResourceRequirementArrayOutput {
	return o
}

func (o TaskDefinitionResourceRequirementArrayOutput) ToTaskDefinitionResourceRequirementArrayOutputWithContext(ctx context.Context) TaskDefinitionResourceRequirementArrayOutput {
	return o
}

func (o TaskDefinitionResourceRequirementArrayOutput) Index(i pulumi.IntInput) TaskDefinitionResourceRequirementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionResourceRequirement {
		return vs[0].([]TaskDefinitionResourceRequirement)[vs[1].(int)]
	}).(TaskDefinitionResourceRequirementOutput)
}

type TaskDefinitionRuntimePlatform struct {
	CpuArchitecture       *string `pulumi:"cpuArchitecture"`
	OperatingSystemFamily *string `pulumi:"operatingSystemFamily"`
}

// TaskDefinitionRuntimePlatformInput is an input type that accepts TaskDefinitionRuntimePlatformArgs and TaskDefinitionRuntimePlatformOutput values.
// You can construct a concrete instance of `TaskDefinitionRuntimePlatformInput` via:
//
//          TaskDefinitionRuntimePlatformArgs{...}
type TaskDefinitionRuntimePlatformInput interface {
	pulumi.Input

	ToTaskDefinitionRuntimePlatformOutput() TaskDefinitionRuntimePlatformOutput
	ToTaskDefinitionRuntimePlatformOutputWithContext(context.Context) TaskDefinitionRuntimePlatformOutput
}

type TaskDefinitionRuntimePlatformArgs struct {
	CpuArchitecture       pulumi.StringPtrInput `pulumi:"cpuArchitecture"`
	OperatingSystemFamily pulumi.StringPtrInput `pulumi:"operatingSystemFamily"`
}

func (TaskDefinitionRuntimePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionRuntimePlatform)(nil)).Elem()
}

func (i TaskDefinitionRuntimePlatformArgs) ToTaskDefinitionRuntimePlatformOutput() TaskDefinitionRuntimePlatformOutput {
	return i.ToTaskDefinitionRuntimePlatformOutputWithContext(context.Background())
}

func (i TaskDefinitionRuntimePlatformArgs) ToTaskDefinitionRuntimePlatformOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRuntimePlatformOutput)
}

func (i TaskDefinitionRuntimePlatformArgs) ToTaskDefinitionRuntimePlatformPtrOutput() TaskDefinitionRuntimePlatformPtrOutput {
	return i.ToTaskDefinitionRuntimePlatformPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionRuntimePlatformArgs) ToTaskDefinitionRuntimePlatformPtrOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRuntimePlatformOutput).ToTaskDefinitionRuntimePlatformPtrOutputWithContext(ctx)
}

// TaskDefinitionRuntimePlatformPtrInput is an input type that accepts TaskDefinitionRuntimePlatformArgs, TaskDefinitionRuntimePlatformPtr and TaskDefinitionRuntimePlatformPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionRuntimePlatformPtrInput` via:
//
//          TaskDefinitionRuntimePlatformArgs{...}
//
//  or:
//
//          nil
type TaskDefinitionRuntimePlatformPtrInput interface {
	pulumi.Input

	ToTaskDefinitionRuntimePlatformPtrOutput() TaskDefinitionRuntimePlatformPtrOutput
	ToTaskDefinitionRuntimePlatformPtrOutputWithContext(context.Context) TaskDefinitionRuntimePlatformPtrOutput
}

type taskDefinitionRuntimePlatformPtrType TaskDefinitionRuntimePlatformArgs

func TaskDefinitionRuntimePlatformPtr(v *TaskDefinitionRuntimePlatformArgs) TaskDefinitionRuntimePlatformPtrInput {
	return (*taskDefinitionRuntimePlatformPtrType)(v)
}

func (*taskDefinitionRuntimePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionRuntimePlatform)(nil)).Elem()
}

func (i *taskDefinitionRuntimePlatformPtrType) ToTaskDefinitionRuntimePlatformPtrOutput() TaskDefinitionRuntimePlatformPtrOutput {
	return i.ToTaskDefinitionRuntimePlatformPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionRuntimePlatformPtrType) ToTaskDefinitionRuntimePlatformPtrOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionRuntimePlatformPtrOutput)
}

type TaskDefinitionRuntimePlatformOutput struct{ *pulumi.OutputState }

func (TaskDefinitionRuntimePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionRuntimePlatform)(nil)).Elem()
}

func (o TaskDefinitionRuntimePlatformOutput) ToTaskDefinitionRuntimePlatformOutput() TaskDefinitionRuntimePlatformOutput {
	return o
}

func (o TaskDefinitionRuntimePlatformOutput) ToTaskDefinitionRuntimePlatformOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformOutput {
	return o
}

func (o TaskDefinitionRuntimePlatformOutput) ToTaskDefinitionRuntimePlatformPtrOutput() TaskDefinitionRuntimePlatformPtrOutput {
	return o.ToTaskDefinitionRuntimePlatformPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionRuntimePlatformOutput) ToTaskDefinitionRuntimePlatformPtrOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskDefinitionRuntimePlatform) *TaskDefinitionRuntimePlatform {
		return &v
	}).(TaskDefinitionRuntimePlatformPtrOutput)
}

func (o TaskDefinitionRuntimePlatformOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionRuntimePlatform) *string { return v.CpuArchitecture }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionRuntimePlatformOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionRuntimePlatform) *string { return v.OperatingSystemFamily }).(pulumi.StringPtrOutput)
}

type TaskDefinitionRuntimePlatformPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionRuntimePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionRuntimePlatform)(nil)).Elem()
}

func (o TaskDefinitionRuntimePlatformPtrOutput) ToTaskDefinitionRuntimePlatformPtrOutput() TaskDefinitionRuntimePlatformPtrOutput {
	return o
}

func (o TaskDefinitionRuntimePlatformPtrOutput) ToTaskDefinitionRuntimePlatformPtrOutputWithContext(ctx context.Context) TaskDefinitionRuntimePlatformPtrOutput {
	return o
}

func (o TaskDefinitionRuntimePlatformPtrOutput) Elem() TaskDefinitionRuntimePlatformOutput {
	return o.ApplyT(func(v *TaskDefinitionRuntimePlatform) TaskDefinitionRuntimePlatform {
		if v != nil {
			return *v
		}
		var ret TaskDefinitionRuntimePlatform
		return ret
	}).(TaskDefinitionRuntimePlatformOutput)
}

func (o TaskDefinitionRuntimePlatformPtrOutput) CpuArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionRuntimePlatform) *string {
		if v == nil {
			return nil
		}
		return v.CpuArchitecture
	}).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionRuntimePlatformPtrOutput) OperatingSystemFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinitionRuntimePlatform) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystemFamily
	}).(pulumi.StringPtrOutput)
}

type TaskDefinitionSecret struct {
	Name      string `pulumi:"name"`
	ValueFrom string `pulumi:"valueFrom"`
}

// TaskDefinitionSecretInput is an input type that accepts TaskDefinitionSecretArgs and TaskDefinitionSecretOutput values.
// You can construct a concrete instance of `TaskDefinitionSecretInput` via:
//
//          TaskDefinitionSecretArgs{...}
type TaskDefinitionSecretInput interface {
	pulumi.Input

	ToTaskDefinitionSecretOutput() TaskDefinitionSecretOutput
	ToTaskDefinitionSecretOutputWithContext(context.Context) TaskDefinitionSecretOutput
}

type TaskDefinitionSecretArgs struct {
	Name      pulumi.StringInput `pulumi:"name"`
	ValueFrom pulumi.StringInput `pulumi:"valueFrom"`
}

func (TaskDefinitionSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionSecret)(nil)).Elem()
}

func (i TaskDefinitionSecretArgs) ToTaskDefinitionSecretOutput() TaskDefinitionSecretOutput {
	return i.ToTaskDefinitionSecretOutputWithContext(context.Background())
}

func (i TaskDefinitionSecretArgs) ToTaskDefinitionSecretOutputWithContext(ctx context.Context) TaskDefinitionSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionSecretOutput)
}

// TaskDefinitionSecretArrayInput is an input type that accepts TaskDefinitionSecretArray and TaskDefinitionSecretArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionSecretArrayInput` via:
//
//          TaskDefinitionSecretArray{ TaskDefinitionSecretArgs{...} }
type TaskDefinitionSecretArrayInput interface {
	pulumi.Input

	ToTaskDefinitionSecretArrayOutput() TaskDefinitionSecretArrayOutput
	ToTaskDefinitionSecretArrayOutputWithContext(context.Context) TaskDefinitionSecretArrayOutput
}

type TaskDefinitionSecretArray []TaskDefinitionSecretInput

func (TaskDefinitionSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionSecret)(nil)).Elem()
}

func (i TaskDefinitionSecretArray) ToTaskDefinitionSecretArrayOutput() TaskDefinitionSecretArrayOutput {
	return i.ToTaskDefinitionSecretArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionSecretArray) ToTaskDefinitionSecretArrayOutputWithContext(ctx context.Context) TaskDefinitionSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionSecretArrayOutput)
}

type TaskDefinitionSecretOutput struct{ *pulumi.OutputState }

func (TaskDefinitionSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionSecret)(nil)).Elem()
}

func (o TaskDefinitionSecretOutput) ToTaskDefinitionSecretOutput() TaskDefinitionSecretOutput {
	return o
}

func (o TaskDefinitionSecretOutput) ToTaskDefinitionSecretOutputWithContext(ctx context.Context) TaskDefinitionSecretOutput {
	return o
}

func (o TaskDefinitionSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionSecret) string { return v.Name }).(pulumi.StringOutput)
}

func (o TaskDefinitionSecretOutput) ValueFrom() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionSecret) string { return v.ValueFrom }).(pulumi.StringOutput)
}

type TaskDefinitionSecretArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionSecret)(nil)).Elem()
}

func (o TaskDefinitionSecretArrayOutput) ToTaskDefinitionSecretArrayOutput() TaskDefinitionSecretArrayOutput {
	return o
}

func (o TaskDefinitionSecretArrayOutput) ToTaskDefinitionSecretArrayOutputWithContext(ctx context.Context) TaskDefinitionSecretArrayOutput {
	return o
}

func (o TaskDefinitionSecretArrayOutput) Index(i pulumi.IntInput) TaskDefinitionSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionSecret {
		return vs[0].([]TaskDefinitionSecret)[vs[1].(int)]
	}).(TaskDefinitionSecretOutput)
}

type TaskDefinitionSystemControl struct {
	Namespace *string `pulumi:"namespace"`
	Value     *string `pulumi:"value"`
}

// TaskDefinitionSystemControlInput is an input type that accepts TaskDefinitionSystemControlArgs and TaskDefinitionSystemControlOutput values.
// You can construct a concrete instance of `TaskDefinitionSystemControlInput` via:
//
//          TaskDefinitionSystemControlArgs{...}
type TaskDefinitionSystemControlInput interface {
	pulumi.Input

	ToTaskDefinitionSystemControlOutput() TaskDefinitionSystemControlOutput
	ToTaskDefinitionSystemControlOutputWithContext(context.Context) TaskDefinitionSystemControlOutput
}

type TaskDefinitionSystemControlArgs struct {
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Value     pulumi.StringPtrInput `pulumi:"value"`
}

func (TaskDefinitionSystemControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionSystemControl)(nil)).Elem()
}

func (i TaskDefinitionSystemControlArgs) ToTaskDefinitionSystemControlOutput() TaskDefinitionSystemControlOutput {
	return i.ToTaskDefinitionSystemControlOutputWithContext(context.Background())
}

func (i TaskDefinitionSystemControlArgs) ToTaskDefinitionSystemControlOutputWithContext(ctx context.Context) TaskDefinitionSystemControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionSystemControlOutput)
}

// TaskDefinitionSystemControlArrayInput is an input type that accepts TaskDefinitionSystemControlArray and TaskDefinitionSystemControlArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionSystemControlArrayInput` via:
//
//          TaskDefinitionSystemControlArray{ TaskDefinitionSystemControlArgs{...} }
type TaskDefinitionSystemControlArrayInput interface {
	pulumi.Input

	ToTaskDefinitionSystemControlArrayOutput() TaskDefinitionSystemControlArrayOutput
	ToTaskDefinitionSystemControlArrayOutputWithContext(context.Context) TaskDefinitionSystemControlArrayOutput
}

type TaskDefinitionSystemControlArray []TaskDefinitionSystemControlInput

func (TaskDefinitionSystemControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionSystemControl)(nil)).Elem()
}

func (i TaskDefinitionSystemControlArray) ToTaskDefinitionSystemControlArrayOutput() TaskDefinitionSystemControlArrayOutput {
	return i.ToTaskDefinitionSystemControlArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionSystemControlArray) ToTaskDefinitionSystemControlArrayOutputWithContext(ctx context.Context) TaskDefinitionSystemControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionSystemControlArrayOutput)
}

type TaskDefinitionSystemControlOutput struct{ *pulumi.OutputState }

func (TaskDefinitionSystemControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionSystemControl)(nil)).Elem()
}

func (o TaskDefinitionSystemControlOutput) ToTaskDefinitionSystemControlOutput() TaskDefinitionSystemControlOutput {
	return o
}

func (o TaskDefinitionSystemControlOutput) ToTaskDefinitionSystemControlOutputWithContext(ctx context.Context) TaskDefinitionSystemControlOutput {
	return o
}

func (o TaskDefinitionSystemControlOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionSystemControl) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionSystemControlOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionSystemControl) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaskDefinitionSystemControlArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionSystemControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionSystemControl)(nil)).Elem()
}

func (o TaskDefinitionSystemControlArrayOutput) ToTaskDefinitionSystemControlArrayOutput() TaskDefinitionSystemControlArrayOutput {
	return o
}

func (o TaskDefinitionSystemControlArrayOutput) ToTaskDefinitionSystemControlArrayOutputWithContext(ctx context.Context) TaskDefinitionSystemControlArrayOutput {
	return o
}

func (o TaskDefinitionSystemControlArrayOutput) Index(i pulumi.IntInput) TaskDefinitionSystemControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionSystemControl {
		return vs[0].([]TaskDefinitionSystemControl)[vs[1].(int)]
	}).(TaskDefinitionSystemControlOutput)
}

type TaskDefinitionTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// TaskDefinitionTagInput is an input type that accepts TaskDefinitionTagArgs and TaskDefinitionTagOutput values.
// You can construct a concrete instance of `TaskDefinitionTagInput` via:
//
//          TaskDefinitionTagArgs{...}
type TaskDefinitionTagInput interface {
	pulumi.Input

	ToTaskDefinitionTagOutput() TaskDefinitionTagOutput
	ToTaskDefinitionTagOutputWithContext(context.Context) TaskDefinitionTagOutput
}

type TaskDefinitionTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TaskDefinitionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTag)(nil)).Elem()
}

func (i TaskDefinitionTagArgs) ToTaskDefinitionTagOutput() TaskDefinitionTagOutput {
	return i.ToTaskDefinitionTagOutputWithContext(context.Background())
}

func (i TaskDefinitionTagArgs) ToTaskDefinitionTagOutputWithContext(ctx context.Context) TaskDefinitionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionTagOutput)
}

// TaskDefinitionTagArrayInput is an input type that accepts TaskDefinitionTagArray and TaskDefinitionTagArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionTagArrayInput` via:
//
//          TaskDefinitionTagArray{ TaskDefinitionTagArgs{...} }
type TaskDefinitionTagArrayInput interface {
	pulumi.Input

	ToTaskDefinitionTagArrayOutput() TaskDefinitionTagArrayOutput
	ToTaskDefinitionTagArrayOutputWithContext(context.Context) TaskDefinitionTagArrayOutput
}

type TaskDefinitionTagArray []TaskDefinitionTagInput

func (TaskDefinitionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionTag)(nil)).Elem()
}

func (i TaskDefinitionTagArray) ToTaskDefinitionTagArrayOutput() TaskDefinitionTagArrayOutput {
	return i.ToTaskDefinitionTagArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionTagArray) ToTaskDefinitionTagArrayOutputWithContext(ctx context.Context) TaskDefinitionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionTagArrayOutput)
}

type TaskDefinitionTagOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTag)(nil)).Elem()
}

func (o TaskDefinitionTagOutput) ToTaskDefinitionTagOutput() TaskDefinitionTagOutput {
	return o
}

func (o TaskDefinitionTagOutput) ToTaskDefinitionTagOutputWithContext(ctx context.Context) TaskDefinitionTagOutput {
	return o
}

func (o TaskDefinitionTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TaskDefinitionTagArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionTag)(nil)).Elem()
}

func (o TaskDefinitionTagArrayOutput) ToTaskDefinitionTagArrayOutput() TaskDefinitionTagArrayOutput {
	return o
}

func (o TaskDefinitionTagArrayOutput) ToTaskDefinitionTagArrayOutputWithContext(ctx context.Context) TaskDefinitionTagArrayOutput {
	return o
}

func (o TaskDefinitionTagArrayOutput) Index(i pulumi.IntInput) TaskDefinitionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionTag {
		return vs[0].([]TaskDefinitionTag)[vs[1].(int)]
	}).(TaskDefinitionTagOutput)
}

type TaskDefinitionTmpfs struct {
	ContainerPath *string  `pulumi:"containerPath"`
	MountOptions  []string `pulumi:"mountOptions"`
	Size          int      `pulumi:"size"`
}

// TaskDefinitionTmpfsInput is an input type that accepts TaskDefinitionTmpfsArgs and TaskDefinitionTmpfsOutput values.
// You can construct a concrete instance of `TaskDefinitionTmpfsInput` via:
//
//          TaskDefinitionTmpfsArgs{...}
type TaskDefinitionTmpfsInput interface {
	pulumi.Input

	ToTaskDefinitionTmpfsOutput() TaskDefinitionTmpfsOutput
	ToTaskDefinitionTmpfsOutputWithContext(context.Context) TaskDefinitionTmpfsOutput
}

type TaskDefinitionTmpfsArgs struct {
	ContainerPath pulumi.StringPtrInput   `pulumi:"containerPath"`
	MountOptions  pulumi.StringArrayInput `pulumi:"mountOptions"`
	Size          pulumi.IntInput         `pulumi:"size"`
}

func (TaskDefinitionTmpfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTmpfs)(nil)).Elem()
}

func (i TaskDefinitionTmpfsArgs) ToTaskDefinitionTmpfsOutput() TaskDefinitionTmpfsOutput {
	return i.ToTaskDefinitionTmpfsOutputWithContext(context.Background())
}

func (i TaskDefinitionTmpfsArgs) ToTaskDefinitionTmpfsOutputWithContext(ctx context.Context) TaskDefinitionTmpfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionTmpfsOutput)
}

// TaskDefinitionTmpfsArrayInput is an input type that accepts TaskDefinitionTmpfsArray and TaskDefinitionTmpfsArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionTmpfsArrayInput` via:
//
//          TaskDefinitionTmpfsArray{ TaskDefinitionTmpfsArgs{...} }
type TaskDefinitionTmpfsArrayInput interface {
	pulumi.Input

	ToTaskDefinitionTmpfsArrayOutput() TaskDefinitionTmpfsArrayOutput
	ToTaskDefinitionTmpfsArrayOutputWithContext(context.Context) TaskDefinitionTmpfsArrayOutput
}

type TaskDefinitionTmpfsArray []TaskDefinitionTmpfsInput

func (TaskDefinitionTmpfsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionTmpfs)(nil)).Elem()
}

func (i TaskDefinitionTmpfsArray) ToTaskDefinitionTmpfsArrayOutput() TaskDefinitionTmpfsArrayOutput {
	return i.ToTaskDefinitionTmpfsArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionTmpfsArray) ToTaskDefinitionTmpfsArrayOutputWithContext(ctx context.Context) TaskDefinitionTmpfsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionTmpfsArrayOutput)
}

type TaskDefinitionTmpfsOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTmpfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionTmpfs)(nil)).Elem()
}

func (o TaskDefinitionTmpfsOutput) ToTaskDefinitionTmpfsOutput() TaskDefinitionTmpfsOutput {
	return o
}

func (o TaskDefinitionTmpfsOutput) ToTaskDefinitionTmpfsOutputWithContext(ctx context.Context) TaskDefinitionTmpfsOutput {
	return o
}

func (o TaskDefinitionTmpfsOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionTmpfs) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionTmpfsOutput) MountOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskDefinitionTmpfs) []string { return v.MountOptions }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionTmpfsOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v TaskDefinitionTmpfs) int { return v.Size }).(pulumi.IntOutput)
}

type TaskDefinitionTmpfsArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionTmpfsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionTmpfs)(nil)).Elem()
}

func (o TaskDefinitionTmpfsArrayOutput) ToTaskDefinitionTmpfsArrayOutput() TaskDefinitionTmpfsArrayOutput {
	return o
}

func (o TaskDefinitionTmpfsArrayOutput) ToTaskDefinitionTmpfsArrayOutputWithContext(ctx context.Context) TaskDefinitionTmpfsArrayOutput {
	return o
}

func (o TaskDefinitionTmpfsArrayOutput) Index(i pulumi.IntInput) TaskDefinitionTmpfsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionTmpfs {
		return vs[0].([]TaskDefinitionTmpfs)[vs[1].(int)]
	}).(TaskDefinitionTmpfsOutput)
}

type TaskDefinitionUlimit struct {
	HardLimit int    `pulumi:"hardLimit"`
	Name      string `pulumi:"name"`
	SoftLimit int    `pulumi:"softLimit"`
}

// TaskDefinitionUlimitInput is an input type that accepts TaskDefinitionUlimitArgs and TaskDefinitionUlimitOutput values.
// You can construct a concrete instance of `TaskDefinitionUlimitInput` via:
//
//          TaskDefinitionUlimitArgs{...}
type TaskDefinitionUlimitInput interface {
	pulumi.Input

	ToTaskDefinitionUlimitOutput() TaskDefinitionUlimitOutput
	ToTaskDefinitionUlimitOutputWithContext(context.Context) TaskDefinitionUlimitOutput
}

type TaskDefinitionUlimitArgs struct {
	HardLimit pulumi.IntInput    `pulumi:"hardLimit"`
	Name      pulumi.StringInput `pulumi:"name"`
	SoftLimit pulumi.IntInput    `pulumi:"softLimit"`
}

func (TaskDefinitionUlimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionUlimit)(nil)).Elem()
}

func (i TaskDefinitionUlimitArgs) ToTaskDefinitionUlimitOutput() TaskDefinitionUlimitOutput {
	return i.ToTaskDefinitionUlimitOutputWithContext(context.Background())
}

func (i TaskDefinitionUlimitArgs) ToTaskDefinitionUlimitOutputWithContext(ctx context.Context) TaskDefinitionUlimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionUlimitOutput)
}

// TaskDefinitionUlimitArrayInput is an input type that accepts TaskDefinitionUlimitArray and TaskDefinitionUlimitArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionUlimitArrayInput` via:
//
//          TaskDefinitionUlimitArray{ TaskDefinitionUlimitArgs{...} }
type TaskDefinitionUlimitArrayInput interface {
	pulumi.Input

	ToTaskDefinitionUlimitArrayOutput() TaskDefinitionUlimitArrayOutput
	ToTaskDefinitionUlimitArrayOutputWithContext(context.Context) TaskDefinitionUlimitArrayOutput
}

type TaskDefinitionUlimitArray []TaskDefinitionUlimitInput

func (TaskDefinitionUlimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionUlimit)(nil)).Elem()
}

func (i TaskDefinitionUlimitArray) ToTaskDefinitionUlimitArrayOutput() TaskDefinitionUlimitArrayOutput {
	return i.ToTaskDefinitionUlimitArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionUlimitArray) ToTaskDefinitionUlimitArrayOutputWithContext(ctx context.Context) TaskDefinitionUlimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionUlimitArrayOutput)
}

type TaskDefinitionUlimitOutput struct{ *pulumi.OutputState }

func (TaskDefinitionUlimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionUlimit)(nil)).Elem()
}

func (o TaskDefinitionUlimitOutput) ToTaskDefinitionUlimitOutput() TaskDefinitionUlimitOutput {
	return o
}

func (o TaskDefinitionUlimitOutput) ToTaskDefinitionUlimitOutputWithContext(ctx context.Context) TaskDefinitionUlimitOutput {
	return o
}

func (o TaskDefinitionUlimitOutput) HardLimit() pulumi.IntOutput {
	return o.ApplyT(func(v TaskDefinitionUlimit) int { return v.HardLimit }).(pulumi.IntOutput)
}

func (o TaskDefinitionUlimitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionUlimit) string { return v.Name }).(pulumi.StringOutput)
}

func (o TaskDefinitionUlimitOutput) SoftLimit() pulumi.IntOutput {
	return o.ApplyT(func(v TaskDefinitionUlimit) int { return v.SoftLimit }).(pulumi.IntOutput)
}

type TaskDefinitionUlimitArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionUlimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionUlimit)(nil)).Elem()
}

func (o TaskDefinitionUlimitArrayOutput) ToTaskDefinitionUlimitArrayOutput() TaskDefinitionUlimitArrayOutput {
	return o
}

func (o TaskDefinitionUlimitArrayOutput) ToTaskDefinitionUlimitArrayOutputWithContext(ctx context.Context) TaskDefinitionUlimitArrayOutput {
	return o
}

func (o TaskDefinitionUlimitArrayOutput) Index(i pulumi.IntInput) TaskDefinitionUlimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionUlimit {
		return vs[0].([]TaskDefinitionUlimit)[vs[1].(int)]
	}).(TaskDefinitionUlimitOutput)
}

type TaskDefinitionVolume struct {
	DockerVolumeConfiguration *TaskDefinitionDockerVolumeConfiguration `pulumi:"dockerVolumeConfiguration"`
	EFSVolumeConfiguration    *TaskDefinitionEFSVolumeConfiguration    `pulumi:"eFSVolumeConfiguration"`
	Host                      *TaskDefinitionHostVolumeProperties      `pulumi:"host"`
	Name                      *string                                  `pulumi:"name"`
}

// TaskDefinitionVolumeInput is an input type that accepts TaskDefinitionVolumeArgs and TaskDefinitionVolumeOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeInput` via:
//
//          TaskDefinitionVolumeArgs{...}
type TaskDefinitionVolumeInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput
	ToTaskDefinitionVolumeOutputWithContext(context.Context) TaskDefinitionVolumeOutput
}

type TaskDefinitionVolumeArgs struct {
	DockerVolumeConfiguration TaskDefinitionDockerVolumeConfigurationPtrInput `pulumi:"dockerVolumeConfiguration"`
	EFSVolumeConfiguration    TaskDefinitionEFSVolumeConfigurationPtrInput    `pulumi:"eFSVolumeConfiguration"`
	Host                      TaskDefinitionHostVolumePropertiesPtrInput      `pulumi:"host"`
	Name                      pulumi.StringPtrInput                           `pulumi:"name"`
}

func (TaskDefinitionVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolume)(nil)).Elem()
}

func (i TaskDefinitionVolumeArgs) ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput {
	return i.ToTaskDefinitionVolumeOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeArgs) ToTaskDefinitionVolumeOutputWithContext(ctx context.Context) TaskDefinitionVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeOutput)
}

// TaskDefinitionVolumeArrayInput is an input type that accepts TaskDefinitionVolumeArray and TaskDefinitionVolumeArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeArrayInput` via:
//
//          TaskDefinitionVolumeArray{ TaskDefinitionVolumeArgs{...} }
type TaskDefinitionVolumeArrayInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput
	ToTaskDefinitionVolumeArrayOutputWithContext(context.Context) TaskDefinitionVolumeArrayOutput
}

type TaskDefinitionVolumeArray []TaskDefinitionVolumeInput

func (TaskDefinitionVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolume)(nil)).Elem()
}

func (i TaskDefinitionVolumeArray) ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput {
	return i.ToTaskDefinitionVolumeArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeArray) ToTaskDefinitionVolumeArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeArrayOutput)
}

type TaskDefinitionVolumeOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolume)(nil)).Elem()
}

func (o TaskDefinitionVolumeOutput) ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput {
	return o
}

func (o TaskDefinitionVolumeOutput) ToTaskDefinitionVolumeOutputWithContext(ctx context.Context) TaskDefinitionVolumeOutput {
	return o
}

func (o TaskDefinitionVolumeOutput) DockerVolumeConfiguration() TaskDefinitionDockerVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *TaskDefinitionDockerVolumeConfiguration {
		return v.DockerVolumeConfiguration
	}).(TaskDefinitionDockerVolumeConfigurationPtrOutput)
}

func (o TaskDefinitionVolumeOutput) EFSVolumeConfiguration() TaskDefinitionEFSVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *TaskDefinitionEFSVolumeConfiguration { return v.EFSVolumeConfiguration }).(TaskDefinitionEFSVolumeConfigurationPtrOutput)
}

func (o TaskDefinitionVolumeOutput) Host() TaskDefinitionHostVolumePropertiesPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *TaskDefinitionHostVolumeProperties { return v.Host }).(TaskDefinitionHostVolumePropertiesPtrOutput)
}

func (o TaskDefinitionVolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolumeArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolume)(nil)).Elem()
}

func (o TaskDefinitionVolumeArrayOutput) ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput {
	return o
}

func (o TaskDefinitionVolumeArrayOutput) ToTaskDefinitionVolumeArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeArrayOutput {
	return o
}

func (o TaskDefinitionVolumeArrayOutput) Index(i pulumi.IntInput) TaskDefinitionVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionVolume {
		return vs[0].([]TaskDefinitionVolume)[vs[1].(int)]
	}).(TaskDefinitionVolumeOutput)
}

type TaskDefinitionVolumeFrom struct {
	ReadOnly        *bool   `pulumi:"readOnly"`
	SourceContainer *string `pulumi:"sourceContainer"`
}

// TaskDefinitionVolumeFromInput is an input type that accepts TaskDefinitionVolumeFromArgs and TaskDefinitionVolumeFromOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeFromInput` via:
//
//          TaskDefinitionVolumeFromArgs{...}
type TaskDefinitionVolumeFromInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeFromOutput() TaskDefinitionVolumeFromOutput
	ToTaskDefinitionVolumeFromOutputWithContext(context.Context) TaskDefinitionVolumeFromOutput
}

type TaskDefinitionVolumeFromArgs struct {
	ReadOnly        pulumi.BoolPtrInput   `pulumi:"readOnly"`
	SourceContainer pulumi.StringPtrInput `pulumi:"sourceContainer"`
}

func (TaskDefinitionVolumeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeFrom)(nil)).Elem()
}

func (i TaskDefinitionVolumeFromArgs) ToTaskDefinitionVolumeFromOutput() TaskDefinitionVolumeFromOutput {
	return i.ToTaskDefinitionVolumeFromOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeFromArgs) ToTaskDefinitionVolumeFromOutputWithContext(ctx context.Context) TaskDefinitionVolumeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeFromOutput)
}

// TaskDefinitionVolumeFromArrayInput is an input type that accepts TaskDefinitionVolumeFromArray and TaskDefinitionVolumeFromArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeFromArrayInput` via:
//
//          TaskDefinitionVolumeFromArray{ TaskDefinitionVolumeFromArgs{...} }
type TaskDefinitionVolumeFromArrayInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeFromArrayOutput() TaskDefinitionVolumeFromArrayOutput
	ToTaskDefinitionVolumeFromArrayOutputWithContext(context.Context) TaskDefinitionVolumeFromArrayOutput
}

type TaskDefinitionVolumeFromArray []TaskDefinitionVolumeFromInput

func (TaskDefinitionVolumeFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolumeFrom)(nil)).Elem()
}

func (i TaskDefinitionVolumeFromArray) ToTaskDefinitionVolumeFromArrayOutput() TaskDefinitionVolumeFromArrayOutput {
	return i.ToTaskDefinitionVolumeFromArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeFromArray) ToTaskDefinitionVolumeFromArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeFromArrayOutput)
}

type TaskDefinitionVolumeFromOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeFrom)(nil)).Elem()
}

func (o TaskDefinitionVolumeFromOutput) ToTaskDefinitionVolumeFromOutput() TaskDefinitionVolumeFromOutput {
	return o
}

func (o TaskDefinitionVolumeFromOutput) ToTaskDefinitionVolumeFromOutputWithContext(ctx context.Context) TaskDefinitionVolumeFromOutput {
	return o
}

func (o TaskDefinitionVolumeFromOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeFrom) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionVolumeFromOutput) SourceContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeFrom) *string { return v.SourceContainer }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolumeFromArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolumeFrom)(nil)).Elem()
}

func (o TaskDefinitionVolumeFromArrayOutput) ToTaskDefinitionVolumeFromArrayOutput() TaskDefinitionVolumeFromArrayOutput {
	return o
}

func (o TaskDefinitionVolumeFromArrayOutput) ToTaskDefinitionVolumeFromArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeFromArrayOutput {
	return o
}

func (o TaskDefinitionVolumeFromArrayOutput) Index(i pulumi.IntInput) TaskDefinitionVolumeFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionVolumeFrom {
		return vs[0].([]TaskDefinitionVolumeFrom)[vs[1].(int)]
	}).(TaskDefinitionVolumeFromOutput)
}

// The VPC subnets and security groups associated with a task. All specified subnets and security groups must be from the same VPC.
type TaskSetAwsVpcConfiguration struct {
	// Whether the task's elastic network interface receives a public IP address. The default value is DISABLED.
	AssignPublicIp *TaskSetAwsVpcConfigurationAssignPublicIp `pulumi:"assignPublicIp"`
	// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration.
	Subnets []string `pulumi:"subnets"`
}

// TaskSetAwsVpcConfigurationInput is an input type that accepts TaskSetAwsVpcConfigurationArgs and TaskSetAwsVpcConfigurationOutput values.
// You can construct a concrete instance of `TaskSetAwsVpcConfigurationInput` via:
//
//          TaskSetAwsVpcConfigurationArgs{...}
type TaskSetAwsVpcConfigurationInput interface {
	pulumi.Input

	ToTaskSetAwsVpcConfigurationOutput() TaskSetAwsVpcConfigurationOutput
	ToTaskSetAwsVpcConfigurationOutputWithContext(context.Context) TaskSetAwsVpcConfigurationOutput
}

// The VPC subnets and security groups associated with a task. All specified subnets and security groups must be from the same VPC.
type TaskSetAwsVpcConfigurationArgs struct {
	// Whether the task's elastic network interface receives a public IP address. The default value is DISABLED.
	AssignPublicIp TaskSetAwsVpcConfigurationAssignPublicIpPtrInput `pulumi:"assignPublicIp"`
	// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (TaskSetAwsVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetAwsVpcConfiguration)(nil)).Elem()
}

func (i TaskSetAwsVpcConfigurationArgs) ToTaskSetAwsVpcConfigurationOutput() TaskSetAwsVpcConfigurationOutput {
	return i.ToTaskSetAwsVpcConfigurationOutputWithContext(context.Background())
}

func (i TaskSetAwsVpcConfigurationArgs) ToTaskSetAwsVpcConfigurationOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetAwsVpcConfigurationOutput)
}

func (i TaskSetAwsVpcConfigurationArgs) ToTaskSetAwsVpcConfigurationPtrOutput() TaskSetAwsVpcConfigurationPtrOutput {
	return i.ToTaskSetAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskSetAwsVpcConfigurationArgs) ToTaskSetAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetAwsVpcConfigurationOutput).ToTaskSetAwsVpcConfigurationPtrOutputWithContext(ctx)
}

// TaskSetAwsVpcConfigurationPtrInput is an input type that accepts TaskSetAwsVpcConfigurationArgs, TaskSetAwsVpcConfigurationPtr and TaskSetAwsVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskSetAwsVpcConfigurationPtrInput` via:
//
//          TaskSetAwsVpcConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskSetAwsVpcConfigurationPtrInput interface {
	pulumi.Input

	ToTaskSetAwsVpcConfigurationPtrOutput() TaskSetAwsVpcConfigurationPtrOutput
	ToTaskSetAwsVpcConfigurationPtrOutputWithContext(context.Context) TaskSetAwsVpcConfigurationPtrOutput
}

type taskSetAwsVpcConfigurationPtrType TaskSetAwsVpcConfigurationArgs

func TaskSetAwsVpcConfigurationPtr(v *TaskSetAwsVpcConfigurationArgs) TaskSetAwsVpcConfigurationPtrInput {
	return (*taskSetAwsVpcConfigurationPtrType)(v)
}

func (*taskSetAwsVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetAwsVpcConfiguration)(nil)).Elem()
}

func (i *taskSetAwsVpcConfigurationPtrType) ToTaskSetAwsVpcConfigurationPtrOutput() TaskSetAwsVpcConfigurationPtrOutput {
	return i.ToTaskSetAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskSetAwsVpcConfigurationPtrType) ToTaskSetAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetAwsVpcConfigurationPtrOutput)
}

// The VPC subnets and security groups associated with a task. All specified subnets and security groups must be from the same VPC.
type TaskSetAwsVpcConfigurationOutput struct{ *pulumi.OutputState }

func (TaskSetAwsVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetAwsVpcConfiguration)(nil)).Elem()
}

func (o TaskSetAwsVpcConfigurationOutput) ToTaskSetAwsVpcConfigurationOutput() TaskSetAwsVpcConfigurationOutput {
	return o
}

func (o TaskSetAwsVpcConfigurationOutput) ToTaskSetAwsVpcConfigurationOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationOutput {
	return o
}

func (o TaskSetAwsVpcConfigurationOutput) ToTaskSetAwsVpcConfigurationPtrOutput() TaskSetAwsVpcConfigurationPtrOutput {
	return o.ToTaskSetAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskSetAwsVpcConfigurationOutput) ToTaskSetAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskSetAwsVpcConfiguration) *TaskSetAwsVpcConfiguration {
		return &v
	}).(TaskSetAwsVpcConfigurationPtrOutput)
}

// Whether the task's elastic network interface receives a public IP address. The default value is DISABLED.
func (o TaskSetAwsVpcConfigurationOutput) AssignPublicIp() TaskSetAwsVpcConfigurationAssignPublicIpPtrOutput {
	return o.ApplyT(func(v TaskSetAwsVpcConfiguration) *TaskSetAwsVpcConfigurationAssignPublicIp { return v.AssignPublicIp }).(TaskSetAwsVpcConfigurationAssignPublicIpPtrOutput)
}

// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration.
func (o TaskSetAwsVpcConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskSetAwsVpcConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration.
func (o TaskSetAwsVpcConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskSetAwsVpcConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type TaskSetAwsVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskSetAwsVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetAwsVpcConfiguration)(nil)).Elem()
}

func (o TaskSetAwsVpcConfigurationPtrOutput) ToTaskSetAwsVpcConfigurationPtrOutput() TaskSetAwsVpcConfigurationPtrOutput {
	return o
}

func (o TaskSetAwsVpcConfigurationPtrOutput) ToTaskSetAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) TaskSetAwsVpcConfigurationPtrOutput {
	return o
}

func (o TaskSetAwsVpcConfigurationPtrOutput) Elem() TaskSetAwsVpcConfigurationOutput {
	return o.ApplyT(func(v *TaskSetAwsVpcConfiguration) TaskSetAwsVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskSetAwsVpcConfiguration
		return ret
	}).(TaskSetAwsVpcConfigurationOutput)
}

// Whether the task's elastic network interface receives a public IP address. The default value is DISABLED.
func (o TaskSetAwsVpcConfigurationPtrOutput) AssignPublicIp() TaskSetAwsVpcConfigurationAssignPublicIpPtrOutput {
	return o.ApplyT(func(v *TaskSetAwsVpcConfiguration) *TaskSetAwsVpcConfigurationAssignPublicIp {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(TaskSetAwsVpcConfigurationAssignPublicIpPtrOutput)
}

// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used. There is a limit of 5 security groups that can be specified per AwsVpcConfiguration.
func (o TaskSetAwsVpcConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskSetAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The subnets associated with the task or service. There is a limit of 16 subnets that can be specified per AwsVpcConfiguration.
func (o TaskSetAwsVpcConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskSetAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer.
type TaskSetLoadBalancer struct {
	// The name of the container (as it appears in a container definition) to associate with the load balancer.
	ContainerName *string `pulumi:"containerName"`
	// The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the hostPort of the port mapping.
	ContainerPort *int `pulumi:"containerPort"`
	// The name of the load balancer to associate with the Amazon ECS service or task set. A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer this should be omitted.
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer this should be omitted. For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html in the Amazon Elastic Container Service Developer Guide. For services using the CODE_DEPLOY deployment controller, you are required to define two target groups for the load balancer. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html in the Amazon Elastic Container Service Developer Guide. If your service's task definition uses the awsvpc network mode (which is required for the Fargate launch type), you must choose ip as the target type, not instance, when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
}

// TaskSetLoadBalancerInput is an input type that accepts TaskSetLoadBalancerArgs and TaskSetLoadBalancerOutput values.
// You can construct a concrete instance of `TaskSetLoadBalancerInput` via:
//
//          TaskSetLoadBalancerArgs{...}
type TaskSetLoadBalancerInput interface {
	pulumi.Input

	ToTaskSetLoadBalancerOutput() TaskSetLoadBalancerOutput
	ToTaskSetLoadBalancerOutputWithContext(context.Context) TaskSetLoadBalancerOutput
}

// A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer.
type TaskSetLoadBalancerArgs struct {
	// The name of the container (as it appears in a container definition) to associate with the load balancer.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the hostPort of the port mapping.
	ContainerPort pulumi.IntPtrInput `pulumi:"containerPort"`
	// The name of the load balancer to associate with the Amazon ECS service or task set. A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer this should be omitted.
	LoadBalancerName pulumi.StringPtrInput `pulumi:"loadBalancerName"`
	// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer this should be omitted. For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html in the Amazon Elastic Container Service Developer Guide. For services using the CODE_DEPLOY deployment controller, you are required to define two target groups for the load balancer. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html in the Amazon Elastic Container Service Developer Guide. If your service's task definition uses the awsvpc network mode (which is required for the Fargate launch type), you must choose ip as the target type, not instance, when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance.
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
}

func (TaskSetLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetLoadBalancer)(nil)).Elem()
}

func (i TaskSetLoadBalancerArgs) ToTaskSetLoadBalancerOutput() TaskSetLoadBalancerOutput {
	return i.ToTaskSetLoadBalancerOutputWithContext(context.Background())
}

func (i TaskSetLoadBalancerArgs) ToTaskSetLoadBalancerOutputWithContext(ctx context.Context) TaskSetLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetLoadBalancerOutput)
}

// TaskSetLoadBalancerArrayInput is an input type that accepts TaskSetLoadBalancerArray and TaskSetLoadBalancerArrayOutput values.
// You can construct a concrete instance of `TaskSetLoadBalancerArrayInput` via:
//
//          TaskSetLoadBalancerArray{ TaskSetLoadBalancerArgs{...} }
type TaskSetLoadBalancerArrayInput interface {
	pulumi.Input

	ToTaskSetLoadBalancerArrayOutput() TaskSetLoadBalancerArrayOutput
	ToTaskSetLoadBalancerArrayOutputWithContext(context.Context) TaskSetLoadBalancerArrayOutput
}

type TaskSetLoadBalancerArray []TaskSetLoadBalancerInput

func (TaskSetLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSetLoadBalancer)(nil)).Elem()
}

func (i TaskSetLoadBalancerArray) ToTaskSetLoadBalancerArrayOutput() TaskSetLoadBalancerArrayOutput {
	return i.ToTaskSetLoadBalancerArrayOutputWithContext(context.Background())
}

func (i TaskSetLoadBalancerArray) ToTaskSetLoadBalancerArrayOutputWithContext(ctx context.Context) TaskSetLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetLoadBalancerArrayOutput)
}

// A load balancer object representing the load balancer to use with the task set. The supported load balancer types are either an Application Load Balancer or a Network Load Balancer.
type TaskSetLoadBalancerOutput struct{ *pulumi.OutputState }

func (TaskSetLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetLoadBalancer)(nil)).Elem()
}

func (o TaskSetLoadBalancerOutput) ToTaskSetLoadBalancerOutput() TaskSetLoadBalancerOutput {
	return o
}

func (o TaskSetLoadBalancerOutput) ToTaskSetLoadBalancerOutputWithContext(ctx context.Context) TaskSetLoadBalancerOutput {
	return o
}

// The name of the container (as it appears in a container definition) to associate with the load balancer.
func (o TaskSetLoadBalancerOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSetLoadBalancer) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the hostPort of the port mapping.
func (o TaskSetLoadBalancerOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskSetLoadBalancer) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The name of the load balancer to associate with the Amazon ECS service or task set. A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer this should be omitted.
func (o TaskSetLoadBalancerOutput) LoadBalancerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSetLoadBalancer) *string { return v.LoadBalancerName }).(pulumi.StringPtrOutput)
}

// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you are using a Classic Load Balancer this should be omitted. For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html in the Amazon Elastic Container Service Developer Guide. For services using the CODE_DEPLOY deployment controller, you are required to define two target groups for the load balancer. For more information, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html in the Amazon Elastic Container Service Developer Guide. If your service's task definition uses the awsvpc network mode (which is required for the Fargate launch type), you must choose ip as the target type, not instance, when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance.
func (o TaskSetLoadBalancerOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSetLoadBalancer) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

type TaskSetLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (TaskSetLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSetLoadBalancer)(nil)).Elem()
}

func (o TaskSetLoadBalancerArrayOutput) ToTaskSetLoadBalancerArrayOutput() TaskSetLoadBalancerArrayOutput {
	return o
}

func (o TaskSetLoadBalancerArrayOutput) ToTaskSetLoadBalancerArrayOutputWithContext(ctx context.Context) TaskSetLoadBalancerArrayOutput {
	return o
}

func (o TaskSetLoadBalancerArrayOutput) Index(i pulumi.IntInput) TaskSetLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskSetLoadBalancer {
		return vs[0].([]TaskSetLoadBalancer)[vs[1].(int)]
	}).(TaskSetLoadBalancerOutput)
}

// An object representing the network configuration for a task or service.
type TaskSetNetworkConfiguration struct {
	AwsVpcConfiguration *TaskSetAwsVpcConfiguration `pulumi:"awsVpcConfiguration"`
}

// TaskSetNetworkConfigurationInput is an input type that accepts TaskSetNetworkConfigurationArgs and TaskSetNetworkConfigurationOutput values.
// You can construct a concrete instance of `TaskSetNetworkConfigurationInput` via:
//
//          TaskSetNetworkConfigurationArgs{...}
type TaskSetNetworkConfigurationInput interface {
	pulumi.Input

	ToTaskSetNetworkConfigurationOutput() TaskSetNetworkConfigurationOutput
	ToTaskSetNetworkConfigurationOutputWithContext(context.Context) TaskSetNetworkConfigurationOutput
}

// An object representing the network configuration for a task or service.
type TaskSetNetworkConfigurationArgs struct {
	AwsVpcConfiguration TaskSetAwsVpcConfigurationPtrInput `pulumi:"awsVpcConfiguration"`
}

func (TaskSetNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetNetworkConfiguration)(nil)).Elem()
}

func (i TaskSetNetworkConfigurationArgs) ToTaskSetNetworkConfigurationOutput() TaskSetNetworkConfigurationOutput {
	return i.ToTaskSetNetworkConfigurationOutputWithContext(context.Background())
}

func (i TaskSetNetworkConfigurationArgs) ToTaskSetNetworkConfigurationOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetNetworkConfigurationOutput)
}

func (i TaskSetNetworkConfigurationArgs) ToTaskSetNetworkConfigurationPtrOutput() TaskSetNetworkConfigurationPtrOutput {
	return i.ToTaskSetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskSetNetworkConfigurationArgs) ToTaskSetNetworkConfigurationPtrOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetNetworkConfigurationOutput).ToTaskSetNetworkConfigurationPtrOutputWithContext(ctx)
}

// TaskSetNetworkConfigurationPtrInput is an input type that accepts TaskSetNetworkConfigurationArgs, TaskSetNetworkConfigurationPtr and TaskSetNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskSetNetworkConfigurationPtrInput` via:
//
//          TaskSetNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type TaskSetNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToTaskSetNetworkConfigurationPtrOutput() TaskSetNetworkConfigurationPtrOutput
	ToTaskSetNetworkConfigurationPtrOutputWithContext(context.Context) TaskSetNetworkConfigurationPtrOutput
}

type taskSetNetworkConfigurationPtrType TaskSetNetworkConfigurationArgs

func TaskSetNetworkConfigurationPtr(v *TaskSetNetworkConfigurationArgs) TaskSetNetworkConfigurationPtrInput {
	return (*taskSetNetworkConfigurationPtrType)(v)
}

func (*taskSetNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetNetworkConfiguration)(nil)).Elem()
}

func (i *taskSetNetworkConfigurationPtrType) ToTaskSetNetworkConfigurationPtrOutput() TaskSetNetworkConfigurationPtrOutput {
	return i.ToTaskSetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskSetNetworkConfigurationPtrType) ToTaskSetNetworkConfigurationPtrOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetNetworkConfigurationPtrOutput)
}

// An object representing the network configuration for a task or service.
type TaskSetNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (TaskSetNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetNetworkConfiguration)(nil)).Elem()
}

func (o TaskSetNetworkConfigurationOutput) ToTaskSetNetworkConfigurationOutput() TaskSetNetworkConfigurationOutput {
	return o
}

func (o TaskSetNetworkConfigurationOutput) ToTaskSetNetworkConfigurationOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationOutput {
	return o
}

func (o TaskSetNetworkConfigurationOutput) ToTaskSetNetworkConfigurationPtrOutput() TaskSetNetworkConfigurationPtrOutput {
	return o.ToTaskSetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskSetNetworkConfigurationOutput) ToTaskSetNetworkConfigurationPtrOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskSetNetworkConfiguration) *TaskSetNetworkConfiguration {
		return &v
	}).(TaskSetNetworkConfigurationPtrOutput)
}

func (o TaskSetNetworkConfigurationOutput) AwsVpcConfiguration() TaskSetAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v TaskSetNetworkConfiguration) *TaskSetAwsVpcConfiguration { return v.AwsVpcConfiguration }).(TaskSetAwsVpcConfigurationPtrOutput)
}

type TaskSetNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskSetNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetNetworkConfiguration)(nil)).Elem()
}

func (o TaskSetNetworkConfigurationPtrOutput) ToTaskSetNetworkConfigurationPtrOutput() TaskSetNetworkConfigurationPtrOutput {
	return o
}

func (o TaskSetNetworkConfigurationPtrOutput) ToTaskSetNetworkConfigurationPtrOutputWithContext(ctx context.Context) TaskSetNetworkConfigurationPtrOutput {
	return o
}

func (o TaskSetNetworkConfigurationPtrOutput) Elem() TaskSetNetworkConfigurationOutput {
	return o.ApplyT(func(v *TaskSetNetworkConfiguration) TaskSetNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret TaskSetNetworkConfiguration
		return ret
	}).(TaskSetNetworkConfigurationOutput)
}

func (o TaskSetNetworkConfigurationPtrOutput) AwsVpcConfiguration() TaskSetAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *TaskSetNetworkConfiguration) *TaskSetAwsVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.AwsVpcConfiguration
	}).(TaskSetAwsVpcConfigurationPtrOutput)
}

type TaskSetScale struct {
	// The unit of measure for the scale value.
	Unit *TaskSetScaleUnit `pulumi:"unit"`
	// The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
	Value *float64 `pulumi:"value"`
}

// TaskSetScaleInput is an input type that accepts TaskSetScaleArgs and TaskSetScaleOutput values.
// You can construct a concrete instance of `TaskSetScaleInput` via:
//
//          TaskSetScaleArgs{...}
type TaskSetScaleInput interface {
	pulumi.Input

	ToTaskSetScaleOutput() TaskSetScaleOutput
	ToTaskSetScaleOutputWithContext(context.Context) TaskSetScaleOutput
}

type TaskSetScaleArgs struct {
	// The unit of measure for the scale value.
	Unit TaskSetScaleUnitPtrInput `pulumi:"unit"`
	// The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (TaskSetScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetScale)(nil)).Elem()
}

func (i TaskSetScaleArgs) ToTaskSetScaleOutput() TaskSetScaleOutput {
	return i.ToTaskSetScaleOutputWithContext(context.Background())
}

func (i TaskSetScaleArgs) ToTaskSetScaleOutputWithContext(ctx context.Context) TaskSetScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetScaleOutput)
}

func (i TaskSetScaleArgs) ToTaskSetScalePtrOutput() TaskSetScalePtrOutput {
	return i.ToTaskSetScalePtrOutputWithContext(context.Background())
}

func (i TaskSetScaleArgs) ToTaskSetScalePtrOutputWithContext(ctx context.Context) TaskSetScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetScaleOutput).ToTaskSetScalePtrOutputWithContext(ctx)
}

// TaskSetScalePtrInput is an input type that accepts TaskSetScaleArgs, TaskSetScalePtr and TaskSetScalePtrOutput values.
// You can construct a concrete instance of `TaskSetScalePtrInput` via:
//
//          TaskSetScaleArgs{...}
//
//  or:
//
//          nil
type TaskSetScalePtrInput interface {
	pulumi.Input

	ToTaskSetScalePtrOutput() TaskSetScalePtrOutput
	ToTaskSetScalePtrOutputWithContext(context.Context) TaskSetScalePtrOutput
}

type taskSetScalePtrType TaskSetScaleArgs

func TaskSetScalePtr(v *TaskSetScaleArgs) TaskSetScalePtrInput {
	return (*taskSetScalePtrType)(v)
}

func (*taskSetScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetScale)(nil)).Elem()
}

func (i *taskSetScalePtrType) ToTaskSetScalePtrOutput() TaskSetScalePtrOutput {
	return i.ToTaskSetScalePtrOutputWithContext(context.Background())
}

func (i *taskSetScalePtrType) ToTaskSetScalePtrOutputWithContext(ctx context.Context) TaskSetScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetScalePtrOutput)
}

type TaskSetScaleOutput struct{ *pulumi.OutputState }

func (TaskSetScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetScale)(nil)).Elem()
}

func (o TaskSetScaleOutput) ToTaskSetScaleOutput() TaskSetScaleOutput {
	return o
}

func (o TaskSetScaleOutput) ToTaskSetScaleOutputWithContext(ctx context.Context) TaskSetScaleOutput {
	return o
}

func (o TaskSetScaleOutput) ToTaskSetScalePtrOutput() TaskSetScalePtrOutput {
	return o.ToTaskSetScalePtrOutputWithContext(context.Background())
}

func (o TaskSetScaleOutput) ToTaskSetScalePtrOutputWithContext(ctx context.Context) TaskSetScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskSetScale) *TaskSetScale {
		return &v
	}).(TaskSetScalePtrOutput)
}

// The unit of measure for the scale value.
func (o TaskSetScaleOutput) Unit() TaskSetScaleUnitPtrOutput {
	return o.ApplyT(func(v TaskSetScale) *TaskSetScaleUnit { return v.Unit }).(TaskSetScaleUnitPtrOutput)
}

// The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
func (o TaskSetScaleOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TaskSetScale) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TaskSetScalePtrOutput struct{ *pulumi.OutputState }

func (TaskSetScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSetScale)(nil)).Elem()
}

func (o TaskSetScalePtrOutput) ToTaskSetScalePtrOutput() TaskSetScalePtrOutput {
	return o
}

func (o TaskSetScalePtrOutput) ToTaskSetScalePtrOutputWithContext(ctx context.Context) TaskSetScalePtrOutput {
	return o
}

func (o TaskSetScalePtrOutput) Elem() TaskSetScaleOutput {
	return o.ApplyT(func(v *TaskSetScale) TaskSetScale {
		if v != nil {
			return *v
		}
		var ret TaskSetScale
		return ret
	}).(TaskSetScaleOutput)
}

// The unit of measure for the scale value.
func (o TaskSetScalePtrOutput) Unit() TaskSetScaleUnitPtrOutput {
	return o.ApplyT(func(v *TaskSetScale) *TaskSetScaleUnit {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(TaskSetScaleUnitPtrOutput)
}

// The value, specified as a percent total of a service's desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
func (o TaskSetScalePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TaskSetScale) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TaskSetServiceRegistry struct {
	// The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
	ContainerName *string `pulumi:"containerName"`
	// The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
	ContainerPort *int `pulumi:"containerPort"`
	// The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used.
	Port *int `pulumi:"port"`
	// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html
	RegistryArn *string `pulumi:"registryArn"`
}

// TaskSetServiceRegistryInput is an input type that accepts TaskSetServiceRegistryArgs and TaskSetServiceRegistryOutput values.
// You can construct a concrete instance of `TaskSetServiceRegistryInput` via:
//
//          TaskSetServiceRegistryArgs{...}
type TaskSetServiceRegistryInput interface {
	pulumi.Input

	ToTaskSetServiceRegistryOutput() TaskSetServiceRegistryOutput
	ToTaskSetServiceRegistryOutputWithContext(context.Context) TaskSetServiceRegistryOutput
}

type TaskSetServiceRegistryArgs struct {
	// The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
	ContainerPort pulumi.IntPtrInput `pulumi:"containerPort"`
	// The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html
	RegistryArn pulumi.StringPtrInput `pulumi:"registryArn"`
}

func (TaskSetServiceRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetServiceRegistry)(nil)).Elem()
}

func (i TaskSetServiceRegistryArgs) ToTaskSetServiceRegistryOutput() TaskSetServiceRegistryOutput {
	return i.ToTaskSetServiceRegistryOutputWithContext(context.Background())
}

func (i TaskSetServiceRegistryArgs) ToTaskSetServiceRegistryOutputWithContext(ctx context.Context) TaskSetServiceRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetServiceRegistryOutput)
}

// TaskSetServiceRegistryArrayInput is an input type that accepts TaskSetServiceRegistryArray and TaskSetServiceRegistryArrayOutput values.
// You can construct a concrete instance of `TaskSetServiceRegistryArrayInput` via:
//
//          TaskSetServiceRegistryArray{ TaskSetServiceRegistryArgs{...} }
type TaskSetServiceRegistryArrayInput interface {
	pulumi.Input

	ToTaskSetServiceRegistryArrayOutput() TaskSetServiceRegistryArrayOutput
	ToTaskSetServiceRegistryArrayOutputWithContext(context.Context) TaskSetServiceRegistryArrayOutput
}

type TaskSetServiceRegistryArray []TaskSetServiceRegistryInput

func (TaskSetServiceRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSetServiceRegistry)(nil)).Elem()
}

func (i TaskSetServiceRegistryArray) ToTaskSetServiceRegistryArrayOutput() TaskSetServiceRegistryArrayOutput {
	return i.ToTaskSetServiceRegistryArrayOutputWithContext(context.Background())
}

func (i TaskSetServiceRegistryArray) ToTaskSetServiceRegistryArrayOutputWithContext(ctx context.Context) TaskSetServiceRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetServiceRegistryArrayOutput)
}

type TaskSetServiceRegistryOutput struct{ *pulumi.OutputState }

func (TaskSetServiceRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskSetServiceRegistry)(nil)).Elem()
}

func (o TaskSetServiceRegistryOutput) ToTaskSetServiceRegistryOutput() TaskSetServiceRegistryOutput {
	return o
}

func (o TaskSetServiceRegistryOutput) ToTaskSetServiceRegistryOutputWithContext(ctx context.Context) TaskSetServiceRegistryOutput {
	return o
}

// The container name value, already specified in the task definition, to be used for your service discovery service. If the task definition that your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition that your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
func (o TaskSetServiceRegistryOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSetServiceRegistry) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The port value, already specified in the task definition, to be used for your service discovery service. If the task definition your service task specifies uses the bridge or host network mode, you must specify a containerName and containerPort combination from the task definition. If the task definition your service task specifies uses the awsvpc network mode and a type SRV DNS record is used, you must specify either a containerName and containerPort combination or a port value, but not both.
func (o TaskSetServiceRegistryOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskSetServiceRegistry) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// The port value used if your service discovery service specified an SRV record. This field may be used if both the awsvpc network mode and SRV records are used.
func (o TaskSetServiceRegistryOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskSetServiceRegistry) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the service registry. The currently supported service registry is AWS Cloud Map. For more information, see https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html
func (o TaskSetServiceRegistryOutput) RegistryArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskSetServiceRegistry) *string { return v.RegistryArn }).(pulumi.StringPtrOutput)
}

type TaskSetServiceRegistryArrayOutput struct{ *pulumi.OutputState }

func (TaskSetServiceRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskSetServiceRegistry)(nil)).Elem()
}

func (o TaskSetServiceRegistryArrayOutput) ToTaskSetServiceRegistryArrayOutput() TaskSetServiceRegistryArrayOutput {
	return o
}

func (o TaskSetServiceRegistryArrayOutput) ToTaskSetServiceRegistryArrayOutputWithContext(ctx context.Context) TaskSetServiceRegistryArrayOutput {
	return o
}

func (o TaskSetServiceRegistryArrayOutput) Index(i pulumi.IntInput) TaskSetServiceRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskSetServiceRegistry {
		return vs[0].([]TaskSetServiceRegistry)[vs[1].(int)]
	}).(TaskSetServiceRegistryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderAutoScalingGroupProviderInput)(nil)).Elem(), CapacityProviderAutoScalingGroupProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderAutoScalingGroupProviderPtrInput)(nil)).Elem(), CapacityProviderAutoScalingGroupProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderManagedScalingInput)(nil)).Elem(), CapacityProviderManagedScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderManagedScalingPtrInput)(nil)).Elem(), CapacityProviderManagedScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderTagInput)(nil)).Elem(), CapacityProviderTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityProviderTagArrayInput)(nil)).Elem(), CapacityProviderTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCapacityProviderAssociationsCapacityProviderStrategyInput)(nil)).Elem(), ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayInput)(nil)).Elem(), ClusterCapacityProviderAssociationsCapacityProviderStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCapacityProviderStrategyItemInput)(nil)).Elem(), ClusterCapacityProviderStrategyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCapacityProviderStrategyItemArrayInput)(nil)).Elem(), ClusterCapacityProviderStrategyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigurationInput)(nil)).Elem(), ClusterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigurationPtrInput)(nil)).Elem(), ClusterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExecuteCommandConfigurationInput)(nil)).Elem(), ClusterExecuteCommandConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExecuteCommandConfigurationPtrInput)(nil)).Elem(), ClusterExecuteCommandConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExecuteCommandLogConfigurationInput)(nil)).Elem(), ClusterExecuteCommandLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExecuteCommandLogConfigurationPtrInput)(nil)).Elem(), ClusterExecuteCommandLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSettingsInput)(nil)).Elem(), ClusterSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSettingsArrayInput)(nil)).Elem(), ClusterSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagInput)(nil)).Elem(), ClusterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagArrayInput)(nil)).Elem(), ClusterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAwsVpcConfigurationInput)(nil)).Elem(), ServiceAwsVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAwsVpcConfigurationPtrInput)(nil)).Elem(), ServiceAwsVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCapacityProviderStrategyItemInput)(nil)).Elem(), ServiceCapacityProviderStrategyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCapacityProviderStrategyItemArrayInput)(nil)).Elem(), ServiceCapacityProviderStrategyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentCircuitBreakerInput)(nil)).Elem(), ServiceDeploymentCircuitBreakerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentCircuitBreakerPtrInput)(nil)).Elem(), ServiceDeploymentCircuitBreakerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentConfigurationInput)(nil)).Elem(), ServiceDeploymentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentConfigurationPtrInput)(nil)).Elem(), ServiceDeploymentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentControllerInput)(nil)).Elem(), ServiceDeploymentControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDeploymentControllerPtrInput)(nil)).Elem(), ServiceDeploymentControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLoadBalancerInput)(nil)).Elem(), ServiceLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLoadBalancerArrayInput)(nil)).Elem(), ServiceLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationInput)(nil)).Elem(), ServiceNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationPtrInput)(nil)).Elem(), ServiceNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlacementConstraintInput)(nil)).Elem(), ServicePlacementConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlacementConstraintArrayInput)(nil)).Elem(), ServicePlacementConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlacementStrategyInput)(nil)).Elem(), ServicePlacementStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlacementStrategyArrayInput)(nil)).Elem(), ServicePlacementStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRegistryInput)(nil)).Elem(), ServiceRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRegistryArrayInput)(nil)).Elem(), ServiceRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTagInput)(nil)).Elem(), ServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTagArrayInput)(nil)).Elem(), ServiceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionAuthorizationConfigInput)(nil)).Elem(), TaskDefinitionAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionAuthorizationConfigPtrInput)(nil)).Elem(), TaskDefinitionAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDefinitionInput)(nil)).Elem(), TaskDefinitionContainerDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDefinitionArrayInput)(nil)).Elem(), TaskDefinitionContainerDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDependencyInput)(nil)).Elem(), TaskDefinitionContainerDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionContainerDependencyArrayInput)(nil)).Elem(), TaskDefinitionContainerDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionDeviceInput)(nil)).Elem(), TaskDefinitionDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionDeviceArrayInput)(nil)).Elem(), TaskDefinitionDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionDockerVolumeConfigurationInput)(nil)).Elem(), TaskDefinitionDockerVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionDockerVolumeConfigurationPtrInput)(nil)).Elem(), TaskDefinitionDockerVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEFSVolumeConfigurationInput)(nil)).Elem(), TaskDefinitionEFSVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEFSVolumeConfigurationPtrInput)(nil)).Elem(), TaskDefinitionEFSVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEnvironmentFileInput)(nil)).Elem(), TaskDefinitionEnvironmentFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEnvironmentFileArrayInput)(nil)).Elem(), TaskDefinitionEnvironmentFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEphemeralStorageInput)(nil)).Elem(), TaskDefinitionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionEphemeralStoragePtrInput)(nil)).Elem(), TaskDefinitionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionFirelensConfigurationInput)(nil)).Elem(), TaskDefinitionFirelensConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionFirelensConfigurationPtrInput)(nil)).Elem(), TaskDefinitionFirelensConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHealthCheckInput)(nil)).Elem(), TaskDefinitionHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHealthCheckPtrInput)(nil)).Elem(), TaskDefinitionHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHostEntryInput)(nil)).Elem(), TaskDefinitionHostEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHostEntryArrayInput)(nil)).Elem(), TaskDefinitionHostEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHostVolumePropertiesInput)(nil)).Elem(), TaskDefinitionHostVolumePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionHostVolumePropertiesPtrInput)(nil)).Elem(), TaskDefinitionHostVolumePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionInferenceAcceleratorInput)(nil)).Elem(), TaskDefinitionInferenceAcceleratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionInferenceAcceleratorArrayInput)(nil)).Elem(), TaskDefinitionInferenceAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionKernelCapabilitiesInput)(nil)).Elem(), TaskDefinitionKernelCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionKernelCapabilitiesPtrInput)(nil)).Elem(), TaskDefinitionKernelCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionKeyValuePairInput)(nil)).Elem(), TaskDefinitionKeyValuePairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionKeyValuePairArrayInput)(nil)).Elem(), TaskDefinitionKeyValuePairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionLinuxParametersInput)(nil)).Elem(), TaskDefinitionLinuxParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionLinuxParametersPtrInput)(nil)).Elem(), TaskDefinitionLinuxParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionLogConfigurationInput)(nil)).Elem(), TaskDefinitionLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionLogConfigurationPtrInput)(nil)).Elem(), TaskDefinitionLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionMountPointInput)(nil)).Elem(), TaskDefinitionMountPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionMountPointArrayInput)(nil)).Elem(), TaskDefinitionMountPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionPlacementConstraintInput)(nil)).Elem(), TaskDefinitionPlacementConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionPlacementConstraintArrayInput)(nil)).Elem(), TaskDefinitionPlacementConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionPortMappingInput)(nil)).Elem(), TaskDefinitionPortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionPortMappingArrayInput)(nil)).Elem(), TaskDefinitionPortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionProxyConfigurationInput)(nil)).Elem(), TaskDefinitionProxyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionProxyConfigurationPtrInput)(nil)).Elem(), TaskDefinitionProxyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionRepositoryCredentialsInput)(nil)).Elem(), TaskDefinitionRepositoryCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionRepositoryCredentialsPtrInput)(nil)).Elem(), TaskDefinitionRepositoryCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionResourceRequirementInput)(nil)).Elem(), TaskDefinitionResourceRequirementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionResourceRequirementArrayInput)(nil)).Elem(), TaskDefinitionResourceRequirementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionRuntimePlatformInput)(nil)).Elem(), TaskDefinitionRuntimePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionRuntimePlatformPtrInput)(nil)).Elem(), TaskDefinitionRuntimePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionSecretInput)(nil)).Elem(), TaskDefinitionSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionSecretArrayInput)(nil)).Elem(), TaskDefinitionSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionSystemControlInput)(nil)).Elem(), TaskDefinitionSystemControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionSystemControlArrayInput)(nil)).Elem(), TaskDefinitionSystemControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionTagInput)(nil)).Elem(), TaskDefinitionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionTagArrayInput)(nil)).Elem(), TaskDefinitionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionTmpfsInput)(nil)).Elem(), TaskDefinitionTmpfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionTmpfsArrayInput)(nil)).Elem(), TaskDefinitionTmpfsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionUlimitInput)(nil)).Elem(), TaskDefinitionUlimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionUlimitArrayInput)(nil)).Elem(), TaskDefinitionUlimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionVolumeInput)(nil)).Elem(), TaskDefinitionVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionVolumeArrayInput)(nil)).Elem(), TaskDefinitionVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionVolumeFromInput)(nil)).Elem(), TaskDefinitionVolumeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionVolumeFromArrayInput)(nil)).Elem(), TaskDefinitionVolumeFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetAwsVpcConfigurationInput)(nil)).Elem(), TaskSetAwsVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetAwsVpcConfigurationPtrInput)(nil)).Elem(), TaskSetAwsVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetLoadBalancerInput)(nil)).Elem(), TaskSetLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetLoadBalancerArrayInput)(nil)).Elem(), TaskSetLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetNetworkConfigurationInput)(nil)).Elem(), TaskSetNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetNetworkConfigurationPtrInput)(nil)).Elem(), TaskSetNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetScaleInput)(nil)).Elem(), TaskSetScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetScalePtrInput)(nil)).Elem(), TaskSetScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetServiceRegistryInput)(nil)).Elem(), TaskSetServiceRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetServiceRegistryArrayInput)(nil)).Elem(), TaskSetServiceRegistryArray{})
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderOutput{})
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderPtrOutput{})
	pulumi.RegisterOutputType(CapacityProviderManagedScalingOutput{})
	pulumi.RegisterOutputType(CapacityProviderManagedScalingPtrOutput{})
	pulumi.RegisterOutputType(CapacityProviderTagOutput{})
	pulumi.RegisterOutputType(CapacityProviderTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterCapacityProviderAssociationsCapacityProviderStrategyOutput{})
	pulumi.RegisterOutputType(ClusterCapacityProviderAssociationsCapacityProviderStrategyArrayOutput{})
	pulumi.RegisterOutputType(ClusterCapacityProviderStrategyItemOutput{})
	pulumi.RegisterOutputType(ClusterCapacityProviderStrategyItemArrayOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterExecuteCommandConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterExecuteCommandConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterExecuteCommandLogConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterExecuteCommandLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterSettingsOutput{})
	pulumi.RegisterOutputType(ClusterSettingsArrayOutput{})
	pulumi.RegisterOutputType(ClusterTagOutput{})
	pulumi.RegisterOutputType(ClusterTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceAwsVpcConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceAwsVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceCapacityProviderStrategyItemOutput{})
	pulumi.RegisterOutputType(ServiceCapacityProviderStrategyItemArrayOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentCircuitBreakerOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentCircuitBreakerPtrOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentControllerOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentControllerPtrOutput{})
	pulumi.RegisterOutputType(ServiceLoadBalancerOutput{})
	pulumi.RegisterOutputType(ServiceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServicePlacementConstraintOutput{})
	pulumi.RegisterOutputType(ServicePlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(ServicePlacementStrategyOutput{})
	pulumi.RegisterOutputType(ServicePlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(ServiceRegistryOutput{})
	pulumi.RegisterOutputType(ServiceRegistryArrayOutput{})
	pulumi.RegisterOutputType(ServiceTagOutput{})
	pulumi.RegisterOutputType(ServiceTagArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionAuthorizationConfigOutput{})
	pulumi.RegisterOutputType(TaskDefinitionAuthorizationConfigPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDefinitionOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDefinitionArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDependencyOutput{})
	pulumi.RegisterOutputType(TaskDefinitionContainerDependencyArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionDeviceOutput{})
	pulumi.RegisterOutputType(TaskDefinitionDeviceArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionDockerVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionDockerVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEFSVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEFSVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEnvironmentFileOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEnvironmentFileArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEphemeralStorageOutput{})
	pulumi.RegisterOutputType(TaskDefinitionEphemeralStoragePtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionFirelensConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionFirelensConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHealthCheckOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHostEntryOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHostEntryArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHostVolumePropertiesOutput{})
	pulumi.RegisterOutputType(TaskDefinitionHostVolumePropertiesPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(TaskDefinitionInferenceAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionKernelCapabilitiesOutput{})
	pulumi.RegisterOutputType(TaskDefinitionKernelCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionKeyValuePairOutput{})
	pulumi.RegisterOutputType(TaskDefinitionKeyValuePairArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionLinuxParametersOutput{})
	pulumi.RegisterOutputType(TaskDefinitionLinuxParametersPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionLogConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionMountPointOutput{})
	pulumi.RegisterOutputType(TaskDefinitionMountPointArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPortMappingOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPortMappingArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionProxyConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionProxyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionRepositoryCredentialsOutput{})
	pulumi.RegisterOutputType(TaskDefinitionRepositoryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionResourceRequirementOutput{})
	pulumi.RegisterOutputType(TaskDefinitionResourceRequirementArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionRuntimePlatformOutput{})
	pulumi.RegisterOutputType(TaskDefinitionRuntimePlatformPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionSecretOutput{})
	pulumi.RegisterOutputType(TaskDefinitionSecretArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionSystemControlOutput{})
	pulumi.RegisterOutputType(TaskDefinitionSystemControlArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTagOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTagArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTmpfsOutput{})
	pulumi.RegisterOutputType(TaskDefinitionTmpfsArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionUlimitOutput{})
	pulumi.RegisterOutputType(TaskDefinitionUlimitArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeFromOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeFromArrayOutput{})
	pulumi.RegisterOutputType(TaskSetAwsVpcConfigurationOutput{})
	pulumi.RegisterOutputType(TaskSetAwsVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskSetLoadBalancerOutput{})
	pulumi.RegisterOutputType(TaskSetLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(TaskSetNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(TaskSetNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskSetScaleOutput{})
	pulumi.RegisterOutputType(TaskSetScalePtrOutput{})
	pulumi.RegisterOutputType(TaskSetServiceRegistryOutput{})
	pulumi.RegisterOutputType(TaskSetServiceRegistryArrayOutput{})
}
