// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ECS::CapacityProvider.
func LookupCapacityProvider(ctx *pulumi.Context, args *LookupCapacityProviderArgs, opts ...pulumi.InvokeOption) (*LookupCapacityProviderResult, error) {
	var rv LookupCapacityProviderResult
	err := ctx.Invoke("aws-native:ecs:getCapacityProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCapacityProviderArgs struct {
	Name string `pulumi:"name"`
}

type LookupCapacityProviderResult struct {
	AutoScalingGroupProvider *CapacityProviderAutoScalingGroupProvider `pulumi:"autoScalingGroupProvider"`
	Tags                     []CapacityProviderTag                     `pulumi:"tags"`
}

func LookupCapacityProviderOutput(ctx *pulumi.Context, args LookupCapacityProviderOutputArgs, opts ...pulumi.InvokeOption) LookupCapacityProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCapacityProviderResult, error) {
			args := v.(LookupCapacityProviderArgs)
			r, err := LookupCapacityProvider(ctx, &args, opts...)
			var s LookupCapacityProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCapacityProviderResultOutput)
}

type LookupCapacityProviderOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupCapacityProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityProviderArgs)(nil)).Elem()
}

type LookupCapacityProviderResultOutput struct{ *pulumi.OutputState }

func (LookupCapacityProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityProviderResult)(nil)).Elem()
}

func (o LookupCapacityProviderResultOutput) ToLookupCapacityProviderResultOutput() LookupCapacityProviderResultOutput {
	return o
}

func (o LookupCapacityProviderResultOutput) ToLookupCapacityProviderResultOutputWithContext(ctx context.Context) LookupCapacityProviderResultOutput {
	return o
}

func (o LookupCapacityProviderResultOutput) AutoScalingGroupProvider() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o.ApplyT(func(v LookupCapacityProviderResult) *CapacityProviderAutoScalingGroupProvider {
		return v.AutoScalingGroupProvider
	}).(CapacityProviderAutoScalingGroupProviderPtrOutput)
}

func (o LookupCapacityProviderResultOutput) Tags() CapacityProviderTagArrayOutput {
	return o.ApplyT(func(v LookupCapacityProviderResult) []CapacityProviderTag { return v.Tags }).(CapacityProviderTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCapacityProviderResultOutput{})
}
