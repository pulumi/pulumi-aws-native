// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ECS::Service
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	var rv LookupServiceResult
	err := ctx.Invoke("aws-native:ecs:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceArgs struct {
	Cluster    string `pulumi:"cluster"`
	ServiceArn string `pulumi:"serviceArn"`
}

type LookupServiceResult struct {
	CapacityProviderStrategy      []ServiceCapacityProviderStrategyItem `pulumi:"capacityProviderStrategy"`
	DeploymentConfiguration       *ServiceDeploymentConfiguration       `pulumi:"deploymentConfiguration"`
	DesiredCount                  *int                                  `pulumi:"desiredCount"`
	EnableECSManagedTags          *bool                                 `pulumi:"enableECSManagedTags"`
	EnableExecuteCommand          *bool                                 `pulumi:"enableExecuteCommand"`
	HealthCheckGracePeriodSeconds *int                                  `pulumi:"healthCheckGracePeriodSeconds"`
	LoadBalancers                 []ServiceLoadBalancer                 `pulumi:"loadBalancers"`
	Name                          *string                               `pulumi:"name"`
	NetworkConfiguration          *ServiceNetworkConfiguration          `pulumi:"networkConfiguration"`
	PlatformVersion               *string                               `pulumi:"platformVersion"`
	PropagateTags                 *ServicePropagateTags                 `pulumi:"propagateTags"`
	ServiceArn                    *string                               `pulumi:"serviceArn"`
	ServiceRegistries             []ServiceRegistry                     `pulumi:"serviceRegistries"`
	Tags                          []ServiceTag                          `pulumi:"tags"`
	TaskDefinition                *string                               `pulumi:"taskDefinition"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			return *r, err
		}).(LookupServiceResultOutput)
}

type LookupServiceOutputArgs struct {
	Cluster    pulumi.StringInput `pulumi:"cluster"`
	ServiceArn pulumi.StringInput `pulumi:"serviceArn"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) CapacityProviderStrategy() ServiceCapacityProviderStrategyItemArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []ServiceCapacityProviderStrategyItem { return v.CapacityProviderStrategy }).(ServiceCapacityProviderStrategyItemArrayOutput)
}

func (o LookupServiceResultOutput) DeploymentConfiguration() ServiceDeploymentConfigurationPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *ServiceDeploymentConfiguration { return v.DeploymentConfiguration }).(ServiceDeploymentConfigurationPtrOutput)
}

func (o LookupServiceResultOutput) DesiredCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *int { return v.DesiredCount }).(pulumi.IntPtrOutput)
}

func (o LookupServiceResultOutput) EnableECSManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *bool { return v.EnableECSManagedTags }).(pulumi.BoolPtrOutput)
}

func (o LookupServiceResultOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *bool { return v.EnableExecuteCommand }).(pulumi.BoolPtrOutput)
}

func (o LookupServiceResultOutput) HealthCheckGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *int { return v.HealthCheckGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o LookupServiceResultOutput) LoadBalancers() ServiceLoadBalancerArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []ServiceLoadBalancer { return v.LoadBalancers }).(ServiceLoadBalancerArrayOutput)
}

func (o LookupServiceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupServiceResultOutput) NetworkConfiguration() ServiceNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *ServiceNetworkConfiguration { return v.NetworkConfiguration }).(ServiceNetworkConfigurationPtrOutput)
}

func (o LookupServiceResultOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *string { return v.PlatformVersion }).(pulumi.StringPtrOutput)
}

func (o LookupServiceResultOutput) PropagateTags() ServicePropagateTagsPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *ServicePropagateTags { return v.PropagateTags }).(ServicePropagateTagsPtrOutput)
}

func (o LookupServiceResultOutput) ServiceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *string { return v.ServiceArn }).(pulumi.StringPtrOutput)
}

func (o LookupServiceResultOutput) ServiceRegistries() ServiceRegistryArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []ServiceRegistry { return v.ServiceRegistries }).(ServiceRegistryArrayOutput)
}

func (o LookupServiceResultOutput) Tags() ServiceTagArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []ServiceTag { return v.Tags }).(ServiceTagArrayOutput)
}

func (o LookupServiceResultOutput) TaskDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceResult) *string { return v.TaskDefinition }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
