// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package accessanalyzer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The criteria for an analysis rule for an analyzer.
type AnalyzerAnalysisRuleCriteria struct {
	// A list of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds []string `pulumi:"accountIds"`
	// An array of key-value pairs to match for your resources. You can use the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	//
	// For the tag key, you can specify a value that is 1 to 128 characters in length and cannot be prefixed with aws:.
	//
	// For the tag value, you can specify a value that is 0 to 256 characters in length. If the specified tag value is 0 characters, the rule is applied to all principals with the specified tag key.
	ResourceTags [][]AnalyzerTag `pulumi:"resourceTags"`
}

// AnalyzerAnalysisRuleCriteriaInput is an input type that accepts AnalyzerAnalysisRuleCriteriaArgs and AnalyzerAnalysisRuleCriteriaOutput values.
// You can construct a concrete instance of `AnalyzerAnalysisRuleCriteriaInput` via:
//
//	AnalyzerAnalysisRuleCriteriaArgs{...}
type AnalyzerAnalysisRuleCriteriaInput interface {
	pulumi.Input

	ToAnalyzerAnalysisRuleCriteriaOutput() AnalyzerAnalysisRuleCriteriaOutput
	ToAnalyzerAnalysisRuleCriteriaOutputWithContext(context.Context) AnalyzerAnalysisRuleCriteriaOutput
}

// The criteria for an analysis rule for an analyzer.
type AnalyzerAnalysisRuleCriteriaArgs struct {
	// A list of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// An array of key-value pairs to match for your resources. You can use the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	//
	// For the tag key, you can specify a value that is 1 to 128 characters in length and cannot be prefixed with aws:.
	//
	// For the tag value, you can specify a value that is 0 to 256 characters in length. If the specified tag value is 0 characters, the rule is applied to all principals with the specified tag key.
	ResourceTags AnalyzerTagArrayArrayInput `pulumi:"resourceTags"`
}

func (AnalyzerAnalysisRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerAnalysisRuleCriteria)(nil)).Elem()
}

func (i AnalyzerAnalysisRuleCriteriaArgs) ToAnalyzerAnalysisRuleCriteriaOutput() AnalyzerAnalysisRuleCriteriaOutput {
	return i.ToAnalyzerAnalysisRuleCriteriaOutputWithContext(context.Background())
}

func (i AnalyzerAnalysisRuleCriteriaArgs) ToAnalyzerAnalysisRuleCriteriaOutputWithContext(ctx context.Context) AnalyzerAnalysisRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerAnalysisRuleCriteriaOutput)
}

// AnalyzerAnalysisRuleCriteriaArrayInput is an input type that accepts AnalyzerAnalysisRuleCriteriaArray and AnalyzerAnalysisRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `AnalyzerAnalysisRuleCriteriaArrayInput` via:
//
//	AnalyzerAnalysisRuleCriteriaArray{ AnalyzerAnalysisRuleCriteriaArgs{...} }
type AnalyzerAnalysisRuleCriteriaArrayInput interface {
	pulumi.Input

	ToAnalyzerAnalysisRuleCriteriaArrayOutput() AnalyzerAnalysisRuleCriteriaArrayOutput
	ToAnalyzerAnalysisRuleCriteriaArrayOutputWithContext(context.Context) AnalyzerAnalysisRuleCriteriaArrayOutput
}

type AnalyzerAnalysisRuleCriteriaArray []AnalyzerAnalysisRuleCriteriaInput

func (AnalyzerAnalysisRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerAnalysisRuleCriteria)(nil)).Elem()
}

func (i AnalyzerAnalysisRuleCriteriaArray) ToAnalyzerAnalysisRuleCriteriaArrayOutput() AnalyzerAnalysisRuleCriteriaArrayOutput {
	return i.ToAnalyzerAnalysisRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i AnalyzerAnalysisRuleCriteriaArray) ToAnalyzerAnalysisRuleCriteriaArrayOutputWithContext(ctx context.Context) AnalyzerAnalysisRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerAnalysisRuleCriteriaArrayOutput)
}

// The criteria for an analysis rule for an analyzer.
type AnalyzerAnalysisRuleCriteriaOutput struct{ *pulumi.OutputState }

func (AnalyzerAnalysisRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerAnalysisRuleCriteria)(nil)).Elem()
}

func (o AnalyzerAnalysisRuleCriteriaOutput) ToAnalyzerAnalysisRuleCriteriaOutput() AnalyzerAnalysisRuleCriteriaOutput {
	return o
}

func (o AnalyzerAnalysisRuleCriteriaOutput) ToAnalyzerAnalysisRuleCriteriaOutputWithContext(ctx context.Context) AnalyzerAnalysisRuleCriteriaOutput {
	return o
}

// A list of AWS account IDs to apply to the analysis rule criteria. The accounts cannot include the organization analyzer owner account. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers.
func (o AnalyzerAnalysisRuleCriteriaOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerAnalysisRuleCriteria) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// An array of key-value pairs to match for your resources. You can use the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
//
// For the tag key, you can specify a value that is 1 to 128 characters in length and cannot be prefixed with aws:.
//
// For the tag value, you can specify a value that is 0 to 256 characters in length. If the specified tag value is 0 characters, the rule is applied to all principals with the specified tag key.
func (o AnalyzerAnalysisRuleCriteriaOutput) ResourceTags() AnalyzerTagArrayArrayOutput {
	return o.ApplyT(func(v AnalyzerAnalysisRuleCriteria) [][]AnalyzerTag { return v.ResourceTags }).(AnalyzerTagArrayArrayOutput)
}

type AnalyzerAnalysisRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerAnalysisRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerAnalysisRuleCriteria)(nil)).Elem()
}

func (o AnalyzerAnalysisRuleCriteriaArrayOutput) ToAnalyzerAnalysisRuleCriteriaArrayOutput() AnalyzerAnalysisRuleCriteriaArrayOutput {
	return o
}

func (o AnalyzerAnalysisRuleCriteriaArrayOutput) ToAnalyzerAnalysisRuleCriteriaArrayOutputWithContext(ctx context.Context) AnalyzerAnalysisRuleCriteriaArrayOutput {
	return o
}

func (o AnalyzerAnalysisRuleCriteriaArrayOutput) Index(i pulumi.IntInput) AnalyzerAnalysisRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyzerAnalysisRuleCriteria {
		return vs[0].([]AnalyzerAnalysisRuleCriteria)[vs[1].(int)]
	}).(AnalyzerAnalysisRuleCriteriaOutput)
}

// An Access Analyzer archive rule. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.
type AnalyzerArchiveRule struct {
	// The criteria for the rule.
	Filter []AnalyzerFilter `pulumi:"filter"`
	// The archive rule name
	RuleName string `pulumi:"ruleName"`
}

// AnalyzerArchiveRuleInput is an input type that accepts AnalyzerArchiveRuleArgs and AnalyzerArchiveRuleOutput values.
// You can construct a concrete instance of `AnalyzerArchiveRuleInput` via:
//
//	AnalyzerArchiveRuleArgs{...}
type AnalyzerArchiveRuleInput interface {
	pulumi.Input

	ToAnalyzerArchiveRuleOutput() AnalyzerArchiveRuleOutput
	ToAnalyzerArchiveRuleOutputWithContext(context.Context) AnalyzerArchiveRuleOutput
}

// An Access Analyzer archive rule. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.
type AnalyzerArchiveRuleArgs struct {
	// The criteria for the rule.
	Filter AnalyzerFilterArrayInput `pulumi:"filter"`
	// The archive rule name
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (AnalyzerArchiveRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerArchiveRule)(nil)).Elem()
}

func (i AnalyzerArchiveRuleArgs) ToAnalyzerArchiveRuleOutput() AnalyzerArchiveRuleOutput {
	return i.ToAnalyzerArchiveRuleOutputWithContext(context.Background())
}

func (i AnalyzerArchiveRuleArgs) ToAnalyzerArchiveRuleOutputWithContext(ctx context.Context) AnalyzerArchiveRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerArchiveRuleOutput)
}

// AnalyzerArchiveRuleArrayInput is an input type that accepts AnalyzerArchiveRuleArray and AnalyzerArchiveRuleArrayOutput values.
// You can construct a concrete instance of `AnalyzerArchiveRuleArrayInput` via:
//
//	AnalyzerArchiveRuleArray{ AnalyzerArchiveRuleArgs{...} }
type AnalyzerArchiveRuleArrayInput interface {
	pulumi.Input

	ToAnalyzerArchiveRuleArrayOutput() AnalyzerArchiveRuleArrayOutput
	ToAnalyzerArchiveRuleArrayOutputWithContext(context.Context) AnalyzerArchiveRuleArrayOutput
}

type AnalyzerArchiveRuleArray []AnalyzerArchiveRuleInput

func (AnalyzerArchiveRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerArchiveRule)(nil)).Elem()
}

func (i AnalyzerArchiveRuleArray) ToAnalyzerArchiveRuleArrayOutput() AnalyzerArchiveRuleArrayOutput {
	return i.ToAnalyzerArchiveRuleArrayOutputWithContext(context.Background())
}

func (i AnalyzerArchiveRuleArray) ToAnalyzerArchiveRuleArrayOutputWithContext(ctx context.Context) AnalyzerArchiveRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerArchiveRuleArrayOutput)
}

// An Access Analyzer archive rule. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.
type AnalyzerArchiveRuleOutput struct{ *pulumi.OutputState }

func (AnalyzerArchiveRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerArchiveRule)(nil)).Elem()
}

func (o AnalyzerArchiveRuleOutput) ToAnalyzerArchiveRuleOutput() AnalyzerArchiveRuleOutput {
	return o
}

func (o AnalyzerArchiveRuleOutput) ToAnalyzerArchiveRuleOutputWithContext(ctx context.Context) AnalyzerArchiveRuleOutput {
	return o
}

// The criteria for the rule.
func (o AnalyzerArchiveRuleOutput) Filter() AnalyzerFilterArrayOutput {
	return o.ApplyT(func(v AnalyzerArchiveRule) []AnalyzerFilter { return v.Filter }).(AnalyzerFilterArrayOutput)
}

// The archive rule name
func (o AnalyzerArchiveRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerArchiveRule) string { return v.RuleName }).(pulumi.StringOutput)
}

type AnalyzerArchiveRuleArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerArchiveRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerArchiveRule)(nil)).Elem()
}

func (o AnalyzerArchiveRuleArrayOutput) ToAnalyzerArchiveRuleArrayOutput() AnalyzerArchiveRuleArrayOutput {
	return o
}

func (o AnalyzerArchiveRuleArrayOutput) ToAnalyzerArchiveRuleArrayOutputWithContext(ctx context.Context) AnalyzerArchiveRuleArrayOutput {
	return o
}

func (o AnalyzerArchiveRuleArrayOutput) Index(i pulumi.IntInput) AnalyzerArchiveRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyzerArchiveRule {
		return vs[0].([]AnalyzerArchiveRule)[vs[1].(int)]
	}).(AnalyzerArchiveRuleOutput)
}

// The configuration for the analyzer
type AnalyzerConfigurationProperties struct {
	InternalAccessConfiguration *AnalyzerInternalAccessConfiguration `pulumi:"internalAccessConfiguration"`
	// Specifies the configuration of an unused access analyzer for an AWS organization or account.
	UnusedAccessConfiguration *AnalyzerUnusedAccessConfiguration `pulumi:"unusedAccessConfiguration"`
}

// AnalyzerConfigurationPropertiesInput is an input type that accepts AnalyzerConfigurationPropertiesArgs and AnalyzerConfigurationPropertiesOutput values.
// You can construct a concrete instance of `AnalyzerConfigurationPropertiesInput` via:
//
//	AnalyzerConfigurationPropertiesArgs{...}
type AnalyzerConfigurationPropertiesInput interface {
	pulumi.Input

	ToAnalyzerConfigurationPropertiesOutput() AnalyzerConfigurationPropertiesOutput
	ToAnalyzerConfigurationPropertiesOutputWithContext(context.Context) AnalyzerConfigurationPropertiesOutput
}

// The configuration for the analyzer
type AnalyzerConfigurationPropertiesArgs struct {
	InternalAccessConfiguration AnalyzerInternalAccessConfigurationPtrInput `pulumi:"internalAccessConfiguration"`
	// Specifies the configuration of an unused access analyzer for an AWS organization or account.
	UnusedAccessConfiguration AnalyzerUnusedAccessConfigurationPtrInput `pulumi:"unusedAccessConfiguration"`
}

func (AnalyzerConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerConfigurationProperties)(nil)).Elem()
}

func (i AnalyzerConfigurationPropertiesArgs) ToAnalyzerConfigurationPropertiesOutput() AnalyzerConfigurationPropertiesOutput {
	return i.ToAnalyzerConfigurationPropertiesOutputWithContext(context.Background())
}

func (i AnalyzerConfigurationPropertiesArgs) ToAnalyzerConfigurationPropertiesOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerConfigurationPropertiesOutput)
}

func (i AnalyzerConfigurationPropertiesArgs) ToAnalyzerConfigurationPropertiesPtrOutput() AnalyzerConfigurationPropertiesPtrOutput {
	return i.ToAnalyzerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i AnalyzerConfigurationPropertiesArgs) ToAnalyzerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerConfigurationPropertiesOutput).ToAnalyzerConfigurationPropertiesPtrOutputWithContext(ctx)
}

// AnalyzerConfigurationPropertiesPtrInput is an input type that accepts AnalyzerConfigurationPropertiesArgs, AnalyzerConfigurationPropertiesPtr and AnalyzerConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `AnalyzerConfigurationPropertiesPtrInput` via:
//
//	        AnalyzerConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type AnalyzerConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToAnalyzerConfigurationPropertiesPtrOutput() AnalyzerConfigurationPropertiesPtrOutput
	ToAnalyzerConfigurationPropertiesPtrOutputWithContext(context.Context) AnalyzerConfigurationPropertiesPtrOutput
}

type analyzerConfigurationPropertiesPtrType AnalyzerConfigurationPropertiesArgs

func AnalyzerConfigurationPropertiesPtr(v *AnalyzerConfigurationPropertiesArgs) AnalyzerConfigurationPropertiesPtrInput {
	return (*analyzerConfigurationPropertiesPtrType)(v)
}

func (*analyzerConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerConfigurationProperties)(nil)).Elem()
}

func (i *analyzerConfigurationPropertiesPtrType) ToAnalyzerConfigurationPropertiesPtrOutput() AnalyzerConfigurationPropertiesPtrOutput {
	return i.ToAnalyzerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *analyzerConfigurationPropertiesPtrType) ToAnalyzerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerConfigurationPropertiesPtrOutput)
}

// The configuration for the analyzer
type AnalyzerConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (AnalyzerConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerConfigurationProperties)(nil)).Elem()
}

func (o AnalyzerConfigurationPropertiesOutput) ToAnalyzerConfigurationPropertiesOutput() AnalyzerConfigurationPropertiesOutput {
	return o
}

func (o AnalyzerConfigurationPropertiesOutput) ToAnalyzerConfigurationPropertiesOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesOutput {
	return o
}

func (o AnalyzerConfigurationPropertiesOutput) ToAnalyzerConfigurationPropertiesPtrOutput() AnalyzerConfigurationPropertiesPtrOutput {
	return o.ToAnalyzerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o AnalyzerConfigurationPropertiesOutput) ToAnalyzerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerConfigurationProperties) *AnalyzerConfigurationProperties {
		return &v
	}).(AnalyzerConfigurationPropertiesPtrOutput)
}

func (o AnalyzerConfigurationPropertiesOutput) InternalAccessConfiguration() AnalyzerInternalAccessConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyzerConfigurationProperties) *AnalyzerInternalAccessConfiguration {
		return v.InternalAccessConfiguration
	}).(AnalyzerInternalAccessConfigurationPtrOutput)
}

// Specifies the configuration of an unused access analyzer for an AWS organization or account.
func (o AnalyzerConfigurationPropertiesOutput) UnusedAccessConfiguration() AnalyzerUnusedAccessConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyzerConfigurationProperties) *AnalyzerUnusedAccessConfiguration {
		return v.UnusedAccessConfiguration
	}).(AnalyzerUnusedAccessConfigurationPtrOutput)
}

type AnalyzerConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerConfigurationProperties)(nil)).Elem()
}

func (o AnalyzerConfigurationPropertiesPtrOutput) ToAnalyzerConfigurationPropertiesPtrOutput() AnalyzerConfigurationPropertiesPtrOutput {
	return o
}

func (o AnalyzerConfigurationPropertiesPtrOutput) ToAnalyzerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AnalyzerConfigurationPropertiesPtrOutput {
	return o
}

func (o AnalyzerConfigurationPropertiesPtrOutput) Elem() AnalyzerConfigurationPropertiesOutput {
	return o.ApplyT(func(v *AnalyzerConfigurationProperties) AnalyzerConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret AnalyzerConfigurationProperties
		return ret
	}).(AnalyzerConfigurationPropertiesOutput)
}

func (o AnalyzerConfigurationPropertiesPtrOutput) InternalAccessConfiguration() AnalyzerInternalAccessConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalyzerConfigurationProperties) *AnalyzerInternalAccessConfiguration {
		if v == nil {
			return nil
		}
		return v.InternalAccessConfiguration
	}).(AnalyzerInternalAccessConfigurationPtrOutput)
}

// Specifies the configuration of an unused access analyzer for an AWS organization or account.
func (o AnalyzerConfigurationPropertiesPtrOutput) UnusedAccessConfiguration() AnalyzerUnusedAccessConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalyzerConfigurationProperties) *AnalyzerUnusedAccessConfiguration {
		if v == nil {
			return nil
		}
		return v.UnusedAccessConfiguration
	}).(AnalyzerUnusedAccessConfigurationPtrOutput)
}

type AnalyzerFilter struct {
	// A "contains" condition to match for the rule.
	Contains []string `pulumi:"contains"`
	// An "equals" condition to match for the rule.
	Eq []string `pulumi:"eq"`
	// An "exists" condition to match for the rule.
	Exists *bool `pulumi:"exists"`
	// A "not equal" condition to match for the rule.
	Neq []string `pulumi:"neq"`
	// The property used to define the criteria in the filter for the rule.
	Property string `pulumi:"property"`
}

// AnalyzerFilterInput is an input type that accepts AnalyzerFilterArgs and AnalyzerFilterOutput values.
// You can construct a concrete instance of `AnalyzerFilterInput` via:
//
//	AnalyzerFilterArgs{...}
type AnalyzerFilterInput interface {
	pulumi.Input

	ToAnalyzerFilterOutput() AnalyzerFilterOutput
	ToAnalyzerFilterOutputWithContext(context.Context) AnalyzerFilterOutput
}

type AnalyzerFilterArgs struct {
	// A "contains" condition to match for the rule.
	Contains pulumi.StringArrayInput `pulumi:"contains"`
	// An "equals" condition to match for the rule.
	Eq pulumi.StringArrayInput `pulumi:"eq"`
	// An "exists" condition to match for the rule.
	Exists pulumi.BoolPtrInput `pulumi:"exists"`
	// A "not equal" condition to match for the rule.
	Neq pulumi.StringArrayInput `pulumi:"neq"`
	// The property used to define the criteria in the filter for the rule.
	Property pulumi.StringInput `pulumi:"property"`
}

func (AnalyzerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerFilter)(nil)).Elem()
}

func (i AnalyzerFilterArgs) ToAnalyzerFilterOutput() AnalyzerFilterOutput {
	return i.ToAnalyzerFilterOutputWithContext(context.Background())
}

func (i AnalyzerFilterArgs) ToAnalyzerFilterOutputWithContext(ctx context.Context) AnalyzerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerFilterOutput)
}

// AnalyzerFilterArrayInput is an input type that accepts AnalyzerFilterArray and AnalyzerFilterArrayOutput values.
// You can construct a concrete instance of `AnalyzerFilterArrayInput` via:
//
//	AnalyzerFilterArray{ AnalyzerFilterArgs{...} }
type AnalyzerFilterArrayInput interface {
	pulumi.Input

	ToAnalyzerFilterArrayOutput() AnalyzerFilterArrayOutput
	ToAnalyzerFilterArrayOutputWithContext(context.Context) AnalyzerFilterArrayOutput
}

type AnalyzerFilterArray []AnalyzerFilterInput

func (AnalyzerFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerFilter)(nil)).Elem()
}

func (i AnalyzerFilterArray) ToAnalyzerFilterArrayOutput() AnalyzerFilterArrayOutput {
	return i.ToAnalyzerFilterArrayOutputWithContext(context.Background())
}

func (i AnalyzerFilterArray) ToAnalyzerFilterArrayOutputWithContext(ctx context.Context) AnalyzerFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerFilterArrayOutput)
}

type AnalyzerFilterOutput struct{ *pulumi.OutputState }

func (AnalyzerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerFilter)(nil)).Elem()
}

func (o AnalyzerFilterOutput) ToAnalyzerFilterOutput() AnalyzerFilterOutput {
	return o
}

func (o AnalyzerFilterOutput) ToAnalyzerFilterOutputWithContext(ctx context.Context) AnalyzerFilterOutput {
	return o
}

// A "contains" condition to match for the rule.
func (o AnalyzerFilterOutput) Contains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerFilter) []string { return v.Contains }).(pulumi.StringArrayOutput)
}

// An "equals" condition to match for the rule.
func (o AnalyzerFilterOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerFilter) []string { return v.Eq }).(pulumi.StringArrayOutput)
}

// An "exists" condition to match for the rule.
func (o AnalyzerFilterOutput) Exists() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnalyzerFilter) *bool { return v.Exists }).(pulumi.BoolPtrOutput)
}

// A "not equal" condition to match for the rule.
func (o AnalyzerFilterOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerFilter) []string { return v.Neq }).(pulumi.StringArrayOutput)
}

// The property used to define the criteria in the filter for the rule.
func (o AnalyzerFilterOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerFilter) string { return v.Property }).(pulumi.StringOutput)
}

type AnalyzerFilterArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerFilter)(nil)).Elem()
}

func (o AnalyzerFilterArrayOutput) ToAnalyzerFilterArrayOutput() AnalyzerFilterArrayOutput {
	return o
}

func (o AnalyzerFilterArrayOutput) ToAnalyzerFilterArrayOutputWithContext(ctx context.Context) AnalyzerFilterArrayOutput {
	return o
}

func (o AnalyzerFilterArrayOutput) Index(i pulumi.IntInput) AnalyzerFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyzerFilter {
		return vs[0].([]AnalyzerFilter)[vs[1].(int)]
	}).(AnalyzerFilterOutput)
}

// The criteria for an analysis rule for an internal access analyzer.
type AnalyzerInternalAccessAnalysisRuleCriteria struct {
	// A list of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers and cannot include the organization owner account.
	AccountIds []string `pulumi:"accountIds"`
	// A list of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
	ResourceArns []string `pulumi:"resourceArns"`
	// A list of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types.
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// AnalyzerInternalAccessAnalysisRuleCriteriaInput is an input type that accepts AnalyzerInternalAccessAnalysisRuleCriteriaArgs and AnalyzerInternalAccessAnalysisRuleCriteriaOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessAnalysisRuleCriteriaInput` via:
//
//	AnalyzerInternalAccessAnalysisRuleCriteriaArgs{...}
type AnalyzerInternalAccessAnalysisRuleCriteriaInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessAnalysisRuleCriteriaOutput() AnalyzerInternalAccessAnalysisRuleCriteriaOutput
	ToAnalyzerInternalAccessAnalysisRuleCriteriaOutputWithContext(context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaOutput
}

// The criteria for an analysis rule for an internal access analyzer.
type AnalyzerInternalAccessAnalysisRuleCriteriaArgs struct {
	// A list of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers and cannot include the organization owner account.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// A list of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
	ResourceArns pulumi.StringArrayInput `pulumi:"resourceArns"`
	// A list of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (AnalyzerInternalAccessAnalysisRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessAnalysisRuleCriteria)(nil)).Elem()
}

func (i AnalyzerInternalAccessAnalysisRuleCriteriaArgs) ToAnalyzerInternalAccessAnalysisRuleCriteriaOutput() AnalyzerInternalAccessAnalysisRuleCriteriaOutput {
	return i.ToAnalyzerInternalAccessAnalysisRuleCriteriaOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessAnalysisRuleCriteriaArgs) ToAnalyzerInternalAccessAnalysisRuleCriteriaOutputWithContext(ctx context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessAnalysisRuleCriteriaOutput)
}

// AnalyzerInternalAccessAnalysisRuleCriteriaArrayInput is an input type that accepts AnalyzerInternalAccessAnalysisRuleCriteriaArray and AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessAnalysisRuleCriteriaArrayInput` via:
//
//	AnalyzerInternalAccessAnalysisRuleCriteriaArray{ AnalyzerInternalAccessAnalysisRuleCriteriaArgs{...} }
type AnalyzerInternalAccessAnalysisRuleCriteriaArrayInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput() AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput
	ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutputWithContext(context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput
}

type AnalyzerInternalAccessAnalysisRuleCriteriaArray []AnalyzerInternalAccessAnalysisRuleCriteriaInput

func (AnalyzerInternalAccessAnalysisRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerInternalAccessAnalysisRuleCriteria)(nil)).Elem()
}

func (i AnalyzerInternalAccessAnalysisRuleCriteriaArray) ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput() AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return i.ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessAnalysisRuleCriteriaArray) ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutputWithContext(ctx context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput)
}

// The criteria for an analysis rule for an internal access analyzer.
type AnalyzerInternalAccessAnalysisRuleCriteriaOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessAnalysisRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessAnalysisRuleCriteria)(nil)).Elem()
}

func (o AnalyzerInternalAccessAnalysisRuleCriteriaOutput) ToAnalyzerInternalAccessAnalysisRuleCriteriaOutput() AnalyzerInternalAccessAnalysisRuleCriteriaOutput {
	return o
}

func (o AnalyzerInternalAccessAnalysisRuleCriteriaOutput) ToAnalyzerInternalAccessAnalysisRuleCriteriaOutputWithContext(ctx context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaOutput {
	return o
}

// A list of AWS account IDs to apply to the internal access analysis rule criteria. Account IDs can only be applied to the analysis rule criteria for organization-level analyzers and cannot include the organization owner account.
func (o AnalyzerInternalAccessAnalysisRuleCriteriaOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerInternalAccessAnalysisRuleCriteria) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A list of resource ARNs to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources that match these ARNs.
func (o AnalyzerInternalAccessAnalysisRuleCriteriaOutput) ResourceArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerInternalAccessAnalysisRuleCriteria) []string { return v.ResourceArns }).(pulumi.StringArrayOutput)
}

// A list of resource types to apply to the internal access analysis rule criteria. The analyzer will only generate findings for resources of these types.
func (o AnalyzerInternalAccessAnalysisRuleCriteriaOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerInternalAccessAnalysisRuleCriteria) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerInternalAccessAnalysisRuleCriteria)(nil)).Elem()
}

func (o AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput) ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput() AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return o
}

func (o AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput) ToAnalyzerInternalAccessAnalysisRuleCriteriaArrayOutputWithContext(ctx context.Context) AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return o
}

func (o AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput) Index(i pulumi.IntInput) AnalyzerInternalAccessAnalysisRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyzerInternalAccessAnalysisRuleCriteria {
		return vs[0].([]AnalyzerInternalAccessAnalysisRuleCriteria)[vs[1].(int)]
	}).(AnalyzerInternalAccessAnalysisRuleCriteriaOutput)
}

// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates internal access within your AWS environment.
type AnalyzerInternalAccessConfiguration struct {
	// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
	InternalAccessAnalysisRule *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties `pulumi:"internalAccessAnalysisRule"`
}

// AnalyzerInternalAccessConfigurationInput is an input type that accepts AnalyzerInternalAccessConfigurationArgs and AnalyzerInternalAccessConfigurationOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessConfigurationInput` via:
//
//	AnalyzerInternalAccessConfigurationArgs{...}
type AnalyzerInternalAccessConfigurationInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessConfigurationOutput() AnalyzerInternalAccessConfigurationOutput
	ToAnalyzerInternalAccessConfigurationOutputWithContext(context.Context) AnalyzerInternalAccessConfigurationOutput
}

// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates internal access within your AWS environment.
type AnalyzerInternalAccessConfigurationArgs struct {
	// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
	InternalAccessAnalysisRule AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput `pulumi:"internalAccessAnalysisRule"`
}

func (AnalyzerInternalAccessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessConfiguration)(nil)).Elem()
}

func (i AnalyzerInternalAccessConfigurationArgs) ToAnalyzerInternalAccessConfigurationOutput() AnalyzerInternalAccessConfigurationOutput {
	return i.ToAnalyzerInternalAccessConfigurationOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessConfigurationArgs) ToAnalyzerInternalAccessConfigurationOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationOutput)
}

func (i AnalyzerInternalAccessConfigurationArgs) ToAnalyzerInternalAccessConfigurationPtrOutput() AnalyzerInternalAccessConfigurationPtrOutput {
	return i.ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessConfigurationArgs) ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationOutput).ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(ctx)
}

// AnalyzerInternalAccessConfigurationPtrInput is an input type that accepts AnalyzerInternalAccessConfigurationArgs, AnalyzerInternalAccessConfigurationPtr and AnalyzerInternalAccessConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessConfigurationPtrInput` via:
//
//	        AnalyzerInternalAccessConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalyzerInternalAccessConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessConfigurationPtrOutput() AnalyzerInternalAccessConfigurationPtrOutput
	ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(context.Context) AnalyzerInternalAccessConfigurationPtrOutput
}

type analyzerInternalAccessConfigurationPtrType AnalyzerInternalAccessConfigurationArgs

func AnalyzerInternalAccessConfigurationPtr(v *AnalyzerInternalAccessConfigurationArgs) AnalyzerInternalAccessConfigurationPtrInput {
	return (*analyzerInternalAccessConfigurationPtrType)(v)
}

func (*analyzerInternalAccessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerInternalAccessConfiguration)(nil)).Elem()
}

func (i *analyzerInternalAccessConfigurationPtrType) ToAnalyzerInternalAccessConfigurationPtrOutput() AnalyzerInternalAccessConfigurationPtrOutput {
	return i.ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyzerInternalAccessConfigurationPtrType) ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationPtrOutput)
}

// Specifies the configuration of an internal access analyzer for an AWS organization or account. This configuration determines how the analyzer evaluates internal access within your AWS environment.
type AnalyzerInternalAccessConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessConfiguration)(nil)).Elem()
}

func (o AnalyzerInternalAccessConfigurationOutput) ToAnalyzerInternalAccessConfigurationOutput() AnalyzerInternalAccessConfigurationOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationOutput) ToAnalyzerInternalAccessConfigurationOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationOutput) ToAnalyzerInternalAccessConfigurationPtrOutput() AnalyzerInternalAccessConfigurationPtrOutput {
	return o.ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyzerInternalAccessConfigurationOutput) ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerInternalAccessConfiguration) *AnalyzerInternalAccessConfiguration {
		return &v
	}).(AnalyzerInternalAccessConfigurationPtrOutput)
}

// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
func (o AnalyzerInternalAccessConfigurationOutput) InternalAccessAnalysisRule() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o.ApplyT(func(v AnalyzerInternalAccessConfiguration) *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties {
		return v.InternalAccessAnalysisRule
	}).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput)
}

type AnalyzerInternalAccessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerInternalAccessConfiguration)(nil)).Elem()
}

func (o AnalyzerInternalAccessConfigurationPtrOutput) ToAnalyzerInternalAccessConfigurationPtrOutput() AnalyzerInternalAccessConfigurationPtrOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationPtrOutput) ToAnalyzerInternalAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationPtrOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationPtrOutput) Elem() AnalyzerInternalAccessConfigurationOutput {
	return o.ApplyT(func(v *AnalyzerInternalAccessConfiguration) AnalyzerInternalAccessConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalyzerInternalAccessConfiguration
		return ret
	}).(AnalyzerInternalAccessConfigurationOutput)
}

// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
func (o AnalyzerInternalAccessConfigurationPtrOutput) InternalAccessAnalysisRule() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o.ApplyT(func(v *AnalyzerInternalAccessConfiguration) *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties {
		if v == nil {
			return nil
		}
		return v.InternalAccessAnalysisRule
	}).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput)
}

// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties struct {
	// A list of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings.
	Inclusions []AnalyzerInternalAccessAnalysisRuleCriteria `pulumi:"inclusions"`
}

// AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesInput is an input type that accepts AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs and AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesInput` via:
//
//	AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs{...}
type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput
	ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutputWithContext(context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput
}

// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs struct {
	// A list of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings.
	Inclusions AnalyzerInternalAccessAnalysisRuleCriteriaArrayInput `pulumi:"inclusions"`
}

func (AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties)(nil)).Elem()
}

func (i AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput {
	return i.ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput)
}

func (i AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return i.ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (i AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput).ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(ctx)
}

// AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput is an input type that accepts AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs, AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtr and AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput values.
// You can construct a concrete instance of `AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput` via:
//
//	        AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs{...}
//
//	or:
//
//	        nil
type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput interface {
	pulumi.Input

	ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput
	ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput
}

type analyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrType AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs

func AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtr(v *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput {
	return (*analyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrType)(v)
}

func (*analyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties)(nil)).Elem()
}

func (i *analyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrType) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return i.ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *analyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrType) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput)
}

// Contains information about analysis rules for the internal access analyzer. Analysis rules determine which entities will generate findings based on the criteria you define when you create the rule.
type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties)(nil)).Elem()
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o.ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties) *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties {
		return &v
	}).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput)
}

// A list of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings.
func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput) Inclusions() AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return o.ApplyT(func(v AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties) []AnalyzerInternalAccessAnalysisRuleCriteria {
		return v.Inclusions
	}).(AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput)
}

type AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties)(nil)).Elem()
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput) ToAnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput {
	return o
}

func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput) Elem() AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput {
	return o.ApplyT(func(v *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties) AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties {
		if v != nil {
			return *v
		}
		var ret AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties
		return ret
	}).(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput)
}

// A list of rules for the internal access analyzer containing criteria to include in analysis. Only resources that meet the rule criteria will generate findings.
func (o AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput) Inclusions() AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput {
	return o.ApplyT(func(v *AnalyzerInternalAccessConfigurationInternalAccessAnalysisRuleProperties) []AnalyzerInternalAccessAnalysisRuleCriteria {
		if v == nil {
			return nil
		}
		return v.Inclusions
	}).(AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput)
}

// A key-value pair to associate with a resource.
type AnalyzerTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// AnalyzerTagInput is an input type that accepts AnalyzerTagArgs and AnalyzerTagOutput values.
// You can construct a concrete instance of `AnalyzerTagInput` via:
//
//	AnalyzerTagArgs{...}
type AnalyzerTagInput interface {
	pulumi.Input

	ToAnalyzerTagOutput() AnalyzerTagOutput
	ToAnalyzerTagOutputWithContext(context.Context) AnalyzerTagOutput
}

// A key-value pair to associate with a resource.
type AnalyzerTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AnalyzerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerTag)(nil)).Elem()
}

func (i AnalyzerTagArgs) ToAnalyzerTagOutput() AnalyzerTagOutput {
	return i.ToAnalyzerTagOutputWithContext(context.Background())
}

func (i AnalyzerTagArgs) ToAnalyzerTagOutputWithContext(ctx context.Context) AnalyzerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerTagOutput)
}

// AnalyzerTagArrayInput is an input type that accepts AnalyzerTagArray and AnalyzerTagArrayOutput values.
// You can construct a concrete instance of `AnalyzerTagArrayInput` via:
//
//	AnalyzerTagArray{ AnalyzerTagArgs{...} }
type AnalyzerTagArrayInput interface {
	pulumi.Input

	ToAnalyzerTagArrayOutput() AnalyzerTagArrayOutput
	ToAnalyzerTagArrayOutputWithContext(context.Context) AnalyzerTagArrayOutput
}

type AnalyzerTagArray []AnalyzerTagInput

func (AnalyzerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerTag)(nil)).Elem()
}

func (i AnalyzerTagArray) ToAnalyzerTagArrayOutput() AnalyzerTagArrayOutput {
	return i.ToAnalyzerTagArrayOutputWithContext(context.Background())
}

func (i AnalyzerTagArray) ToAnalyzerTagArrayOutputWithContext(ctx context.Context) AnalyzerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerTagArrayOutput)
}

// A key-value pair to associate with a resource.
type AnalyzerTagOutput struct{ *pulumi.OutputState }

func (AnalyzerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerTag)(nil)).Elem()
}

func (o AnalyzerTagOutput) ToAnalyzerTagOutput() AnalyzerTagOutput {
	return o
}

func (o AnalyzerTagOutput) ToAnalyzerTagOutputWithContext(ctx context.Context) AnalyzerTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AnalyzerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o AnalyzerTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyzerTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AnalyzerTagArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyzerTag)(nil)).Elem()
}

func (o AnalyzerTagArrayOutput) ToAnalyzerTagArrayOutput() AnalyzerTagArrayOutput {
	return o
}

func (o AnalyzerTagArrayOutput) ToAnalyzerTagArrayOutputWithContext(ctx context.Context) AnalyzerTagArrayOutput {
	return o
}

func (o AnalyzerTagArrayOutput) Index(i pulumi.IntInput) AnalyzerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyzerTag {
		return vs[0].([]AnalyzerTag)[vs[1].(int)]
	}).(AnalyzerTagOutput)
}

// The Configuration for Unused Access Analyzer
type AnalyzerUnusedAccessConfiguration struct {
	// Contains information about rules for the analyzer.
	AnalysisRule *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties `pulumi:"analysisRule"`
	// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 365 days.
	UnusedAccessAge *int `pulumi:"unusedAccessAge"`
}

// AnalyzerUnusedAccessConfigurationInput is an input type that accepts AnalyzerUnusedAccessConfigurationArgs and AnalyzerUnusedAccessConfigurationOutput values.
// You can construct a concrete instance of `AnalyzerUnusedAccessConfigurationInput` via:
//
//	AnalyzerUnusedAccessConfigurationArgs{...}
type AnalyzerUnusedAccessConfigurationInput interface {
	pulumi.Input

	ToAnalyzerUnusedAccessConfigurationOutput() AnalyzerUnusedAccessConfigurationOutput
	ToAnalyzerUnusedAccessConfigurationOutputWithContext(context.Context) AnalyzerUnusedAccessConfigurationOutput
}

// The Configuration for Unused Access Analyzer
type AnalyzerUnusedAccessConfigurationArgs struct {
	// Contains information about rules for the analyzer.
	AnalysisRule AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput `pulumi:"analysisRule"`
	// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 365 days.
	UnusedAccessAge pulumi.IntPtrInput `pulumi:"unusedAccessAge"`
}

func (AnalyzerUnusedAccessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerUnusedAccessConfiguration)(nil)).Elem()
}

func (i AnalyzerUnusedAccessConfigurationArgs) ToAnalyzerUnusedAccessConfigurationOutput() AnalyzerUnusedAccessConfigurationOutput {
	return i.ToAnalyzerUnusedAccessConfigurationOutputWithContext(context.Background())
}

func (i AnalyzerUnusedAccessConfigurationArgs) ToAnalyzerUnusedAccessConfigurationOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationOutput)
}

func (i AnalyzerUnusedAccessConfigurationArgs) ToAnalyzerUnusedAccessConfigurationPtrOutput() AnalyzerUnusedAccessConfigurationPtrOutput {
	return i.ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyzerUnusedAccessConfigurationArgs) ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationOutput).ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(ctx)
}

// AnalyzerUnusedAccessConfigurationPtrInput is an input type that accepts AnalyzerUnusedAccessConfigurationArgs, AnalyzerUnusedAccessConfigurationPtr and AnalyzerUnusedAccessConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalyzerUnusedAccessConfigurationPtrInput` via:
//
//	        AnalyzerUnusedAccessConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalyzerUnusedAccessConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyzerUnusedAccessConfigurationPtrOutput() AnalyzerUnusedAccessConfigurationPtrOutput
	ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(context.Context) AnalyzerUnusedAccessConfigurationPtrOutput
}

type analyzerUnusedAccessConfigurationPtrType AnalyzerUnusedAccessConfigurationArgs

func AnalyzerUnusedAccessConfigurationPtr(v *AnalyzerUnusedAccessConfigurationArgs) AnalyzerUnusedAccessConfigurationPtrInput {
	return (*analyzerUnusedAccessConfigurationPtrType)(v)
}

func (*analyzerUnusedAccessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerUnusedAccessConfiguration)(nil)).Elem()
}

func (i *analyzerUnusedAccessConfigurationPtrType) ToAnalyzerUnusedAccessConfigurationPtrOutput() AnalyzerUnusedAccessConfigurationPtrOutput {
	return i.ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyzerUnusedAccessConfigurationPtrType) ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationPtrOutput)
}

// The Configuration for Unused Access Analyzer
type AnalyzerUnusedAccessConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyzerUnusedAccessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerUnusedAccessConfiguration)(nil)).Elem()
}

func (o AnalyzerUnusedAccessConfigurationOutput) ToAnalyzerUnusedAccessConfigurationOutput() AnalyzerUnusedAccessConfigurationOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationOutput) ToAnalyzerUnusedAccessConfigurationOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationOutput) ToAnalyzerUnusedAccessConfigurationPtrOutput() AnalyzerUnusedAccessConfigurationPtrOutput {
	return o.ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyzerUnusedAccessConfigurationOutput) ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerUnusedAccessConfiguration) *AnalyzerUnusedAccessConfiguration {
		return &v
	}).(AnalyzerUnusedAccessConfigurationPtrOutput)
}

// Contains information about rules for the analyzer.
func (o AnalyzerUnusedAccessConfigurationOutput) AnalysisRule() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o.ApplyT(func(v AnalyzerUnusedAccessConfiguration) *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties {
		return v.AnalysisRule
	}).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput)
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 365 days.
func (o AnalyzerUnusedAccessConfigurationOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyzerUnusedAccessConfiguration) *int { return v.UnusedAccessAge }).(pulumi.IntPtrOutput)
}

type AnalyzerUnusedAccessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerUnusedAccessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerUnusedAccessConfiguration)(nil)).Elem()
}

func (o AnalyzerUnusedAccessConfigurationPtrOutput) ToAnalyzerUnusedAccessConfigurationPtrOutput() AnalyzerUnusedAccessConfigurationPtrOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationPtrOutput) ToAnalyzerUnusedAccessConfigurationPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationPtrOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationPtrOutput) Elem() AnalyzerUnusedAccessConfigurationOutput {
	return o.ApplyT(func(v *AnalyzerUnusedAccessConfiguration) AnalyzerUnusedAccessConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalyzerUnusedAccessConfiguration
		return ret
	}).(AnalyzerUnusedAccessConfigurationOutput)
}

// Contains information about rules for the analyzer.
func (o AnalyzerUnusedAccessConfigurationPtrOutput) AnalysisRule() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o.ApplyT(func(v *AnalyzerUnusedAccessConfiguration) *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties {
		if v == nil {
			return nil
		}
		return v.AnalysisRule
	}).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput)
}

// The specified access age in days for which to generate findings for unused access. For example, if you specify 90 days, the analyzer will generate findings for IAM entities within the accounts of the selected organization for any access that hasn't been used in 90 or more days since the analyzer's last scan. You can choose a value between 1 and 365 days.
func (o AnalyzerUnusedAccessConfigurationPtrOutput) UnusedAccessAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyzerUnusedAccessConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.UnusedAccessAge
	}).(pulumi.IntPtrOutput)
}

// Contains information about rules for the analyzer.
type AnalyzerUnusedAccessConfigurationAnalysisRuleProperties struct {
	// A list of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings.
	Exclusions []AnalyzerAnalysisRuleCriteria `pulumi:"exclusions"`
}

// AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesInput is an input type that accepts AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs and AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput values.
// You can construct a concrete instance of `AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesInput` via:
//
//	AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs{...}
type AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesInput interface {
	pulumi.Input

	ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput
	ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutputWithContext(context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput
}

// Contains information about rules for the analyzer.
type AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs struct {
	// A list of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings.
	Exclusions AnalyzerAnalysisRuleCriteriaArrayInput `pulumi:"exclusions"`
}

func (AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerUnusedAccessConfigurationAnalysisRuleProperties)(nil)).Elem()
}

func (i AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput {
	return i.ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutputWithContext(context.Background())
}

func (i AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput)
}

func (i AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return i.ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (i AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput).ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(ctx)
}

// AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput is an input type that accepts AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs, AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtr and AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput values.
// You can construct a concrete instance of `AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput` via:
//
//	        AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs{...}
//
//	or:
//
//	        nil
type AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput interface {
	pulumi.Input

	ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput
	ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput
}

type analyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrType AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs

func AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtr(v *AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput {
	return (*analyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrType)(v)
}

func (*analyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerUnusedAccessConfigurationAnalysisRuleProperties)(nil)).Elem()
}

func (i *analyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrType) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return i.ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *analyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrType) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput)
}

// Contains information about rules for the analyzer.
type AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput struct{ *pulumi.OutputState }

func (AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerUnusedAccessConfigurationAnalysisRuleProperties)(nil)).Elem()
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o.ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(context.Background())
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerUnusedAccessConfigurationAnalysisRuleProperties) *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties {
		return &v
	}).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput)
}

// A list of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings.
func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput) Exclusions() AnalyzerAnalysisRuleCriteriaArrayOutput {
	return o.ApplyT(func(v AnalyzerUnusedAccessConfigurationAnalysisRuleProperties) []AnalyzerAnalysisRuleCriteria {
		return v.Exclusions
	}).(AnalyzerAnalysisRuleCriteriaArrayOutput)
}

type AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerUnusedAccessConfigurationAnalysisRuleProperties)(nil)).Elem()
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput) ToAnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutputWithContext(ctx context.Context) AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput {
	return o
}

func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput) Elem() AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput {
	return o.ApplyT(func(v *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties) AnalyzerUnusedAccessConfigurationAnalysisRuleProperties {
		if v != nil {
			return *v
		}
		var ret AnalyzerUnusedAccessConfigurationAnalysisRuleProperties
		return ret
	}).(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput)
}

// A list of rules for the analyzer containing criteria to exclude from analysis. Entities that meet the rule criteria will not generate findings.
func (o AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput) Exclusions() AnalyzerAnalysisRuleCriteriaArrayOutput {
	return o.ApplyT(func(v *AnalyzerUnusedAccessConfigurationAnalysisRuleProperties) []AnalyzerAnalysisRuleCriteria {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(AnalyzerAnalysisRuleCriteriaArrayOutput)
}

type AnalyzerTagArrayArray []AnalyzerTagArrayInput

func (AnalyzerTagArrayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]AnalyzerTag)(nil)).Elem()
}

func (i AnalyzerTagArrayArray) ToAnalyzerTagArrayArrayOutput() AnalyzerTagArrayArrayOutput {
	return i.ToAnalyzerTagArrayArrayOutputWithContext(context.Background())
}

func (i AnalyzerTagArrayArray) ToAnalyzerTagArrayArrayOutputWithContext(ctx context.Context) AnalyzerTagArrayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerTagArrayArrayOutput)
}

// AnalyzerTagArrayArrayInput is an input type that accepts AnalyzerTagArrayArray and AnalyzerTagArrayArrayOutput values.
// You can construct a concrete instance of `AnalyzerTagArrayArrayInput` via:
//
//	AnalyzerTagArrayArray{ AnalyzerTagArray{ AnalyzerTagArgs{...} } }
type AnalyzerTagArrayArrayInput interface {
	pulumi.Input

	ToAnalyzerTagArrayArrayOutput() AnalyzerTagArrayArrayOutput
	ToAnalyzerTagArrayArrayOutputWithContext(context.Context) AnalyzerTagArrayArrayOutput
}

type AnalyzerTagArrayArrayOutput struct{ *pulumi.OutputState }

func (AnalyzerTagArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]AnalyzerTag)(nil)).Elem()
}

func (o AnalyzerTagArrayArrayOutput) ToAnalyzerTagArrayArrayOutput() AnalyzerTagArrayArrayOutput {
	return o
}

func (o AnalyzerTagArrayArrayOutput) ToAnalyzerTagArrayArrayOutputWithContext(ctx context.Context) AnalyzerTagArrayArrayOutput {
	return o
}

func (o AnalyzerTagArrayArrayOutput) Index(i pulumi.IntInput) AnalyzerTagArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []AnalyzerTag {
		return vs[0].([][]AnalyzerTag)[vs[1].(int)]
	}).(AnalyzerTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerAnalysisRuleCriteriaInput)(nil)).Elem(), AnalyzerAnalysisRuleCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerAnalysisRuleCriteriaArrayInput)(nil)).Elem(), AnalyzerAnalysisRuleCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerArchiveRuleInput)(nil)).Elem(), AnalyzerArchiveRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerArchiveRuleArrayInput)(nil)).Elem(), AnalyzerArchiveRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerConfigurationPropertiesInput)(nil)).Elem(), AnalyzerConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerConfigurationPropertiesPtrInput)(nil)).Elem(), AnalyzerConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerFilterInput)(nil)).Elem(), AnalyzerFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerFilterArrayInput)(nil)).Elem(), AnalyzerFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessAnalysisRuleCriteriaInput)(nil)).Elem(), AnalyzerInternalAccessAnalysisRuleCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessAnalysisRuleCriteriaArrayInput)(nil)).Elem(), AnalyzerInternalAccessAnalysisRuleCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessConfigurationInput)(nil)).Elem(), AnalyzerInternalAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessConfigurationPtrInput)(nil)).Elem(), AnalyzerInternalAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesInput)(nil)).Elem(), AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrInput)(nil)).Elem(), AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerTagInput)(nil)).Elem(), AnalyzerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerTagArrayInput)(nil)).Elem(), AnalyzerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerUnusedAccessConfigurationInput)(nil)).Elem(), AnalyzerUnusedAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerUnusedAccessConfigurationPtrInput)(nil)).Elem(), AnalyzerUnusedAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesInput)(nil)).Elem(), AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrInput)(nil)).Elem(), AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerTagArrayArrayInput)(nil)).Elem(), AnalyzerTagArrayArray{})
	pulumi.RegisterOutputType(AnalyzerAnalysisRuleCriteriaOutput{})
	pulumi.RegisterOutputType(AnalyzerAnalysisRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(AnalyzerArchiveRuleOutput{})
	pulumi.RegisterOutputType(AnalyzerArchiveRuleArrayOutput{})
	pulumi.RegisterOutputType(AnalyzerConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(AnalyzerConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerFilterOutput{})
	pulumi.RegisterOutputType(AnalyzerFilterArrayOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessAnalysisRuleCriteriaOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessAnalysisRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesOutput{})
	pulumi.RegisterOutputType(AnalyzerInternalAccessConfigurationInternalAccessAnalysisRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerTagOutput{})
	pulumi.RegisterOutputType(AnalyzerTagArrayOutput{})
	pulumi.RegisterOutputType(AnalyzerUnusedAccessConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyzerUnusedAccessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesOutput{})
	pulumi.RegisterOutputType(AnalyzerUnusedAccessConfigurationAnalysisRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerTagArrayArrayOutput{})
}
