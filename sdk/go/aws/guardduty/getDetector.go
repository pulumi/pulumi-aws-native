// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::Detector
func LookupDetector(ctx *pulumi.Context, args *LookupDetectorArgs, opts ...pulumi.InvokeOption) (*LookupDetectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDetectorResult
	err := ctx.Invoke("aws-native:guardduty:getDetector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDetectorArgs struct {
	Id string `pulumi:"id"`
}

type LookupDetectorResult struct {
	DataSources                *DetectorCfnDataSourceConfigurations `pulumi:"dataSources"`
	Enable                     *bool                                `pulumi:"enable"`
	Features                   []DetectorFeatureConfigurations      `pulumi:"features"`
	FindingPublishingFrequency *string                              `pulumi:"findingPublishingFrequency"`
	Id                         *string                              `pulumi:"id"`
	Tags                       []DetectorTag                        `pulumi:"tags"`
}

func LookupDetectorOutput(ctx *pulumi.Context, args LookupDetectorOutputArgs, opts ...pulumi.InvokeOption) LookupDetectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDetectorResult, error) {
			args := v.(LookupDetectorArgs)
			r, err := LookupDetector(ctx, &args, opts...)
			var s LookupDetectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDetectorResultOutput)
}

type LookupDetectorOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDetectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorArgs)(nil)).Elem()
}

type LookupDetectorResultOutput struct{ *pulumi.OutputState }

func (LookupDetectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorResult)(nil)).Elem()
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutput() LookupDetectorResultOutput {
	return o
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutputWithContext(ctx context.Context) LookupDetectorResultOutput {
	return o
}

func (o LookupDetectorResultOutput) DataSources() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *DetectorCfnDataSourceConfigurations { return v.DataSources }).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

func (o LookupDetectorResultOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o LookupDetectorResultOutput) Features() DetectorFeatureConfigurationsArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorFeatureConfigurations { return v.Features }).(DetectorFeatureConfigurationsArrayOutput)
}

func (o LookupDetectorResultOutput) FindingPublishingFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.FindingPublishingFrequency }).(pulumi.StringPtrOutput)
}

func (o LookupDetectorResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupDetectorResultOutput) Tags() DetectorTagArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorTag { return v.Tags }).(DetectorTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDetectorResultOutput{})
}
