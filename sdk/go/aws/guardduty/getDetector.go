// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::Detector
func LookupDetector(ctx *pulumi.Context, args *LookupDetectorArgs, opts ...pulumi.InvokeOption) (*LookupDetectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDetectorResult
	err := ctx.Invoke("aws-native:guardduty:getDetector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDetectorArgs struct {
	// The unique ID of the detector.
	Id string `pulumi:"id"`
}

type LookupDetectorResult struct {
	// Describes which data sources will be enabled for the detector.
	DataSources *DetectorCfnDataSourceConfigurations `pulumi:"dataSources"`
	// Specifies whether the detector is to be enabled on creation.
	Enable *bool `pulumi:"enable"`
	// A list of features that will be configured for the detector.
	Features []DetectorCfnFeatureConfiguration `pulumi:"features"`
	// Specifies how frequently updated findings are exported.
	FindingPublishingFrequency *string `pulumi:"findingPublishingFrequency"`
	// The unique ID of the detector.
	Id *string `pulumi:"id"`
	// Specifies tags added to a new detector resource. Each tag consists of a key and an optional value, both of which you define.
	//
	// Currently, support is available only for creating and deleting a tag. No support exists for updating the tags.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDetectorOutput(ctx *pulumi.Context, args LookupDetectorOutputArgs, opts ...pulumi.InvokeOption) LookupDetectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDetectorResult, error) {
			args := v.(LookupDetectorArgs)
			r, err := LookupDetector(ctx, &args, opts...)
			var s LookupDetectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDetectorResultOutput)
}

type LookupDetectorOutputArgs struct {
	// The unique ID of the detector.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDetectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorArgs)(nil)).Elem()
}

type LookupDetectorResultOutput struct{ *pulumi.OutputState }

func (LookupDetectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorResult)(nil)).Elem()
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutput() LookupDetectorResultOutput {
	return o
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutputWithContext(ctx context.Context) LookupDetectorResultOutput {
	return o
}

// Describes which data sources will be enabled for the detector.
func (o LookupDetectorResultOutput) DataSources() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *DetectorCfnDataSourceConfigurations { return v.DataSources }).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

// Specifies whether the detector is to be enabled on creation.
func (o LookupDetectorResultOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// A list of features that will be configured for the detector.
func (o LookupDetectorResultOutput) Features() DetectorCfnFeatureConfigurationArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorCfnFeatureConfiguration { return v.Features }).(DetectorCfnFeatureConfigurationArrayOutput)
}

// Specifies how frequently updated findings are exported.
func (o LookupDetectorResultOutput) FindingPublishingFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.FindingPublishingFrequency }).(pulumi.StringPtrOutput)
}

// The unique ID of the detector.
func (o LookupDetectorResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies tags added to a new detector resource. Each tag consists of a key and an optional value, both of which you define.
//
// Currently, support is available only for creating and deleting a tag. No support exists for updating the tags.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o LookupDetectorResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDetectorResultOutput{})
}
