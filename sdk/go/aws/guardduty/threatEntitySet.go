// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::ThreatEntitySet
type ThreatEntitySet struct {
	pulumi.CustomResourceState

	// A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
	Activate pulumi.BoolPtrOutput `pulumi:"activate"`
	// Returns the unique ID associated with the newly created threat entity set.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The timestamp when the threat entity set was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
	//
	// To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
	DetectorId pulumi.StringPtrOutput `pulumi:"detectorId"`
	// The details associated with the *Error* status of your threat entity list.
	ErrorDetails pulumi.StringOutput `pulumi:"errorDetails"`
	// The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
	//
	// Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
	Format pulumi.StringOutput `pulumi:"format"`
	// The URI of the file that contains the threat entity set.
	Location pulumi.StringOutput `pulumi:"location"`
	// The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The status of your `ThreatEntitySet` . For information about valid status values, see [Understanding list statuses](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#guardduty-entity-list-statuses) in the *Amazon GuardDuty User Guide* .
	Status ThreatEntitySetStatusOutput `pulumi:"status"`
	// The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The timestamp when the threat entity set was updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewThreatEntitySet registers a new resource with the given unique name, arguments, and options.
func NewThreatEntitySet(ctx *pulumi.Context,
	name string, args *ThreatEntitySetArgs, opts ...pulumi.ResourceOption) (*ThreatEntitySet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Format == nil {
		return nil, errors.New("invalid value for required argument 'Format'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"detectorId",
		"format",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThreatEntitySet
	err := ctx.RegisterResource("aws-native:guardduty:ThreatEntitySet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThreatEntitySet gets an existing ThreatEntitySet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThreatEntitySet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThreatEntitySetState, opts ...pulumi.ResourceOption) (*ThreatEntitySet, error) {
	var resource ThreatEntitySet
	err := ctx.ReadResource("aws-native:guardduty:ThreatEntitySet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThreatEntitySet resources.
type threatEntitySetState struct {
}

type ThreatEntitySetState struct {
}

func (ThreatEntitySetState) ElementType() reflect.Type {
	return reflect.TypeOf((*threatEntitySetState)(nil)).Elem()
}

type threatEntitySetArgs struct {
	// A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
	Activate *bool `pulumi:"activate"`
	// The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
	//
	// To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
	DetectorId *string `pulumi:"detectorId"`
	// The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
	//
	// Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
	Format string `pulumi:"format"`
	// The URI of the file that contains the threat entity set.
	Location string `pulumi:"location"`
	// The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
	Name *string `pulumi:"name"`
	// The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ThreatEntitySet resource.
type ThreatEntitySetArgs struct {
	// A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
	Activate pulumi.BoolPtrInput
	// The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
	//
	// To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
	DetectorId pulumi.StringPtrInput
	// The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
	//
	// Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
	ExpectedBucketOwner pulumi.StringPtrInput
	// The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
	Format pulumi.StringInput
	// The URI of the file that contains the threat entity set.
	Location pulumi.StringInput
	// The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
	Name pulumi.StringPtrInput
	// The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags aws.TagArrayInput
}

func (ThreatEntitySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*threatEntitySetArgs)(nil)).Elem()
}

type ThreatEntitySetInput interface {
	pulumi.Input

	ToThreatEntitySetOutput() ThreatEntitySetOutput
	ToThreatEntitySetOutputWithContext(ctx context.Context) ThreatEntitySetOutput
}

func (*ThreatEntitySet) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreatEntitySet)(nil)).Elem()
}

func (i *ThreatEntitySet) ToThreatEntitySetOutput() ThreatEntitySetOutput {
	return i.ToThreatEntitySetOutputWithContext(context.Background())
}

func (i *ThreatEntitySet) ToThreatEntitySetOutputWithContext(ctx context.Context) ThreatEntitySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatEntitySetOutput)
}

type ThreatEntitySetOutput struct{ *pulumi.OutputState }

func (ThreatEntitySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreatEntitySet)(nil)).Elem()
}

func (o ThreatEntitySetOutput) ToThreatEntitySetOutput() ThreatEntitySetOutput {
	return o
}

func (o ThreatEntitySetOutput) ToThreatEntitySetOutputWithContext(ctx context.Context) ThreatEntitySetOutput {
	return o
}

// A boolean value that determines if GuardDuty can start using this list for custom threat detection. For GuardDuty to consider the entries in this list and generate findings based on associated activity, this list must be active.
func (o ThreatEntitySetOutput) Activate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.BoolPtrOutput { return v.Activate }).(pulumi.BoolPtrOutput)
}

// Returns the unique ID associated with the newly created threat entity set.
func (o ThreatEntitySetOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The timestamp when the threat entity set was created.
func (o ThreatEntitySetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique regional detector ID of the GuardDuty account for which you want to create a threat entity set.
//
// To find the `detectorId` in the current Region, see the Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
func (o ThreatEntitySetOutput) DetectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringPtrOutput { return v.DetectorId }).(pulumi.StringPtrOutput)
}

// The details associated with the *Error* status of your threat entity list.
func (o ThreatEntitySetOutput) ErrorDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.ErrorDetails }).(pulumi.StringOutput)
}

// The AWS account ID that owns the Amazon S3 bucket specified in the *Location* field.
//
// Whether or not you provide the account ID for this optional field, GuardDuty validates that the account ID associated with the `DetectorId` owns the S3 bucket in the `Location` field. If GuardDuty finds that this S3 bucket doesn't belong to the specified account ID, you will get an error at the time of activating this list.
func (o ThreatEntitySetOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// The format of the file that contains the threat entity set. For information about supported formats, see [List formats](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#prepare_list) in the *Amazon GuardDuty User Guide* .
func (o ThreatEntitySetOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// The URI of the file that contains the threat entity set.
func (o ThreatEntitySetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The user-friendly name to identify the threat entity set. Valid characters are alphanumeric, whitespace, dash (-), and underscores (_).
func (o ThreatEntitySetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of your `ThreatEntitySet` . For information about valid status values, see [Understanding list statuses](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html#guardduty-entity-list-statuses) in the *Amazon GuardDuty User Guide* .
func (o ThreatEntitySetOutput) Status() ThreatEntitySetStatusOutput {
	return o.ApplyT(func(v *ThreatEntitySet) ThreatEntitySetStatusOutput { return v.Status }).(ThreatEntitySetStatusOutput)
}

// The tags to be added to a new threat entity set resource. Each tag consists of a key and an optional value, both of which you define.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o ThreatEntitySetOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ThreatEntitySet) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp when the threat entity set was updated.
func (o ThreatEntitySetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatEntitySet) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatEntitySetInput)(nil)).Elem(), &ThreatEntitySet{})
	pulumi.RegisterOutputType(ThreatEntitySetOutput{})
}
