// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::PublishingDestination
type PublishingDestination struct {
	pulumi.CustomResourceState

	// The ID of the publishing destination.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
	DestinationProperties PublishingDestinationCfnDestinationPropertiesOutput `pulumi:"destinationProperties"`
	// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
	DestinationType pulumi.StringOutput `pulumi:"destinationType"`
	// The ID of the GuardDuty detector associated with the publishing destination.
	DetectorId pulumi.StringOutput `pulumi:"detectorId"`
	// The time, in epoch millisecond format, at which GuardDuty was first unable to publish findings to the destination.
	PublishingFailureStartTimestamp pulumi.StringOutput `pulumi:"publishingFailureStartTimestamp"`
	// The status of the publishing destination.
	Status pulumi.StringOutput `pulumi:"status"`
	// Describes a tag.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewPublishingDestination registers a new resource with the given unique name, arguments, and options.
func NewPublishingDestination(ctx *pulumi.Context,
	name string, args *PublishingDestinationArgs, opts ...pulumi.ResourceOption) (*PublishingDestination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationProperties == nil {
		return nil, errors.New("invalid value for required argument 'DestinationProperties'")
	}
	if args.DestinationType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationType'")
	}
	if args.DetectorId == nil {
		return nil, errors.New("invalid value for required argument 'DetectorId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"detectorId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublishingDestination
	err := ctx.RegisterResource("aws-native:guardduty:PublishingDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublishingDestination gets an existing PublishingDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublishingDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublishingDestinationState, opts ...pulumi.ResourceOption) (*PublishingDestination, error) {
	var resource PublishingDestination
	err := ctx.ReadResource("aws-native:guardduty:PublishingDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublishingDestination resources.
type publishingDestinationState struct {
}

type PublishingDestinationState struct {
}

func (PublishingDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*publishingDestinationState)(nil)).Elem()
}

type publishingDestinationArgs struct {
	// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
	DestinationProperties PublishingDestinationCfnDestinationProperties `pulumi:"destinationProperties"`
	// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
	DestinationType string `pulumi:"destinationType"`
	// The ID of the GuardDuty detector associated with the publishing destination.
	DetectorId string `pulumi:"detectorId"`
	// Describes a tag.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a PublishingDestination resource.
type PublishingDestinationArgs struct {
	// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
	DestinationProperties PublishingDestinationCfnDestinationPropertiesInput
	// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
	DestinationType pulumi.StringInput
	// The ID of the GuardDuty detector associated with the publishing destination.
	DetectorId pulumi.StringInput
	// Describes a tag.
	Tags aws.TagArrayInput
}

func (PublishingDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publishingDestinationArgs)(nil)).Elem()
}

type PublishingDestinationInput interface {
	pulumi.Input

	ToPublishingDestinationOutput() PublishingDestinationOutput
	ToPublishingDestinationOutputWithContext(ctx context.Context) PublishingDestinationOutput
}

func (*PublishingDestination) ElementType() reflect.Type {
	return reflect.TypeOf((**PublishingDestination)(nil)).Elem()
}

func (i *PublishingDestination) ToPublishingDestinationOutput() PublishingDestinationOutput {
	return i.ToPublishingDestinationOutputWithContext(context.Background())
}

func (i *PublishingDestination) ToPublishingDestinationOutputWithContext(ctx context.Context) PublishingDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublishingDestinationOutput)
}

type PublishingDestinationOutput struct{ *pulumi.OutputState }

func (PublishingDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublishingDestination)(nil)).Elem()
}

func (o PublishingDestinationOutput) ToPublishingDestinationOutput() PublishingDestinationOutput {
	return o
}

func (o PublishingDestinationOutput) ToPublishingDestinationOutputWithContext(ctx context.Context) PublishingDestinationOutput {
	return o
}

// The ID of the publishing destination.
func (o PublishingDestinationOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublishingDestination) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.
func (o PublishingDestinationOutput) DestinationProperties() PublishingDestinationCfnDestinationPropertiesOutput {
	return o.ApplyT(func(v *PublishingDestination) PublishingDestinationCfnDestinationPropertiesOutput {
		return v.DestinationProperties
	}).(PublishingDestinationCfnDestinationPropertiesOutput)
}

// The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.
func (o PublishingDestinationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *PublishingDestination) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

// The ID of the GuardDuty detector associated with the publishing destination.
func (o PublishingDestinationOutput) DetectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublishingDestination) pulumi.StringOutput { return v.DetectorId }).(pulumi.StringOutput)
}

// The time, in epoch millisecond format, at which GuardDuty was first unable to publish findings to the destination.
func (o PublishingDestinationOutput) PublishingFailureStartTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *PublishingDestination) pulumi.StringOutput { return v.PublishingFailureStartTimestamp }).(pulumi.StringOutput)
}

// The status of the publishing destination.
func (o PublishingDestinationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PublishingDestination) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Describes a tag.
func (o PublishingDestinationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *PublishingDestination) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublishingDestinationInput)(nil)).Elem(), &PublishingDestination{})
	pulumi.RegisterOutputType(PublishingDestinationOutput{})
}
