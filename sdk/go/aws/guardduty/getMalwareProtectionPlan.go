// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::MalwareProtectionPlan
func LookupMalwareProtectionPlan(ctx *pulumi.Context, args *LookupMalwareProtectionPlanArgs, opts ...pulumi.InvokeOption) (*LookupMalwareProtectionPlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMalwareProtectionPlanResult
	err := ctx.Invoke("aws-native:guardduty:getMalwareProtectionPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMalwareProtectionPlanArgs struct {
	// A unique identifier associated with Malware Protection plan resource.
	MalwareProtectionPlanId string `pulumi:"malwareProtectionPlanId"`
}

type LookupMalwareProtectionPlanResult struct {
	// Information about whether the tags will be added to the S3 object after scanning.
	Actions *MalwareProtectionPlanCfnActions `pulumi:"actions"`
	// Amazon Resource Name (ARN) of the protected resource.
	Arn *string `pulumi:"arn"`
	// The timestamp when the Malware Protection plan resource was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A unique identifier associated with Malware Protection plan resource.
	MalwareProtectionPlanId *string `pulumi:"malwareProtectionPlanId"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
	ProtectedResource *MalwareProtectionPlanCfnProtectedResource `pulumi:"protectedResource"`
	// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role *string `pulumi:"role"`
	// Malware Protection plan status.
	Status *string `pulumi:"status"`
	// Information about the issue code and message associated to the status of your Malware Protection plan.
	StatusReasons []MalwareProtectionPlanCfnStatusReasons `pulumi:"statusReasons"`
	// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupMalwareProtectionPlanOutput(ctx *pulumi.Context, args LookupMalwareProtectionPlanOutputArgs, opts ...pulumi.InvokeOption) LookupMalwareProtectionPlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMalwareProtectionPlanResult, error) {
			args := v.(LookupMalwareProtectionPlanArgs)
			r, err := LookupMalwareProtectionPlan(ctx, &args, opts...)
			var s LookupMalwareProtectionPlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMalwareProtectionPlanResultOutput)
}

type LookupMalwareProtectionPlanOutputArgs struct {
	// A unique identifier associated with Malware Protection plan resource.
	MalwareProtectionPlanId pulumi.StringInput `pulumi:"malwareProtectionPlanId"`
}

func (LookupMalwareProtectionPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMalwareProtectionPlanArgs)(nil)).Elem()
}

type LookupMalwareProtectionPlanResultOutput struct{ *pulumi.OutputState }

func (LookupMalwareProtectionPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMalwareProtectionPlanResult)(nil)).Elem()
}

func (o LookupMalwareProtectionPlanResultOutput) ToLookupMalwareProtectionPlanResultOutput() LookupMalwareProtectionPlanResultOutput {
	return o
}

func (o LookupMalwareProtectionPlanResultOutput) ToLookupMalwareProtectionPlanResultOutputWithContext(ctx context.Context) LookupMalwareProtectionPlanResultOutput {
	return o
}

// Information about whether the tags will be added to the S3 object after scanning.
func (o LookupMalwareProtectionPlanResultOutput) Actions() MalwareProtectionPlanCfnActionsPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *MalwareProtectionPlanCfnActions { return v.Actions }).(MalwareProtectionPlanCfnActionsPtrOutput)
}

// Amazon Resource Name (ARN) of the protected resource.
func (o LookupMalwareProtectionPlanResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The timestamp when the Malware Protection plan resource was created.
func (o LookupMalwareProtectionPlanResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A unique identifier associated with Malware Protection plan resource.
func (o LookupMalwareProtectionPlanResultOutput) MalwareProtectionPlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *string { return v.MalwareProtectionPlanId }).(pulumi.StringPtrOutput)
}

// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
func (o LookupMalwareProtectionPlanResultOutput) ProtectedResource() MalwareProtectionPlanCfnProtectedResourcePtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *MalwareProtectionPlanCfnProtectedResource {
		return v.ProtectedResource
	}).(MalwareProtectionPlanCfnProtectedResourcePtrOutput)
}

// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
func (o LookupMalwareProtectionPlanResultOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Malware Protection plan status.
func (o LookupMalwareProtectionPlanResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Information about the issue code and message associated to the status of your Malware Protection plan.
func (o LookupMalwareProtectionPlanResultOutput) StatusReasons() MalwareProtectionPlanCfnStatusReasonsArrayOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) []MalwareProtectionPlanCfnStatusReasons {
		return v.StatusReasons
	}).(MalwareProtectionPlanCfnStatusReasonsArrayOutput)
}

// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
func (o LookupMalwareProtectionPlanResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMalwareProtectionPlanResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMalwareProtectionPlanResultOutput{})
}
