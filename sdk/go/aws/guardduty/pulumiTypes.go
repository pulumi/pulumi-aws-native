// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DetectorCfnDataSourceConfigurations struct {
	Kubernetes        *DetectorCfnKubernetesConfiguration        `pulumi:"kubernetes"`
	MalwareProtection *DetectorCfnMalwareProtectionConfiguration `pulumi:"malwareProtection"`
	S3Logs            *DetectorCfns3LogsConfiguration            `pulumi:"s3Logs"`
}

// DetectorCfnDataSourceConfigurationsInput is an input type that accepts DetectorCfnDataSourceConfigurationsArgs and DetectorCfnDataSourceConfigurationsOutput values.
// You can construct a concrete instance of `DetectorCfnDataSourceConfigurationsInput` via:
//
//	DetectorCfnDataSourceConfigurationsArgs{...}
type DetectorCfnDataSourceConfigurationsInput interface {
	pulumi.Input

	ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput
	ToDetectorCfnDataSourceConfigurationsOutputWithContext(context.Context) DetectorCfnDataSourceConfigurationsOutput
}

type DetectorCfnDataSourceConfigurationsArgs struct {
	Kubernetes        DetectorCfnKubernetesConfigurationPtrInput        `pulumi:"kubernetes"`
	MalwareProtection DetectorCfnMalwareProtectionConfigurationPtrInput `pulumi:"malwareProtection"`
	S3Logs            DetectorCfns3LogsConfigurationPtrInput            `pulumi:"s3Logs"`
}

func (DetectorCfnDataSourceConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput {
	return i.ToDetectorCfnDataSourceConfigurationsOutputWithContext(context.Background())
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsOutput)
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnDataSourceConfigurations] {
	return pulumix.Output[DetectorCfnDataSourceConfigurations]{
		OutputState: i.ToDetectorCfnDataSourceConfigurationsOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsOutput).ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx)
}

// DetectorCfnDataSourceConfigurationsPtrInput is an input type that accepts DetectorCfnDataSourceConfigurationsArgs, DetectorCfnDataSourceConfigurationsPtr and DetectorCfnDataSourceConfigurationsPtrOutput values.
// You can construct a concrete instance of `DetectorCfnDataSourceConfigurationsPtrInput` via:
//
//	        DetectorCfnDataSourceConfigurationsArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnDataSourceConfigurationsPtrInput interface {
	pulumi.Input

	ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput
	ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Context) DetectorCfnDataSourceConfigurationsPtrOutput
}

type detectorCfnDataSourceConfigurationsPtrType DetectorCfnDataSourceConfigurationsArgs

func DetectorCfnDataSourceConfigurationsPtr(v *DetectorCfnDataSourceConfigurationsArgs) DetectorCfnDataSourceConfigurationsPtrInput {
	return (*detectorCfnDataSourceConfigurationsPtrType)(v)
}

func (*detectorCfnDataSourceConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (i *detectorCfnDataSourceConfigurationsPtrType) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i *detectorCfnDataSourceConfigurationsPtrType) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

func (i *detectorCfnDataSourceConfigurationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnDataSourceConfigurations] {
	return pulumix.Output[*DetectorCfnDataSourceConfigurations]{
		OutputState: i.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnDataSourceConfigurationsOutput struct{ *pulumi.OutputState }

func (DetectorCfnDataSourceConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnDataSourceConfigurations) *DetectorCfnDataSourceConfigurations {
		return &v
	}).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnDataSourceConfigurations] {
	return pulumix.Output[DetectorCfnDataSourceConfigurations]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnDataSourceConfigurationsOutput) Kubernetes() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfnKubernetesConfiguration { return v.Kubernetes }).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) MalwareProtection() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfnMalwareProtectionConfiguration {
		return v.MalwareProtection
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) S3Logs() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfns3LogsConfiguration { return v.S3Logs }).(DetectorCfns3LogsConfigurationPtrOutput)
}

type DetectorCfnDataSourceConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnDataSourceConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnDataSourceConfigurations] {
	return pulumix.Output[*DetectorCfnDataSourceConfigurations]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) Elem() DetectorCfnDataSourceConfigurationsOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) DetectorCfnDataSourceConfigurations {
		if v != nil {
			return *v
		}
		var ret DetectorCfnDataSourceConfigurations
		return ret
	}).(DetectorCfnDataSourceConfigurationsOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) Kubernetes() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfnKubernetesConfiguration {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) MalwareProtection() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfnMalwareProtectionConfiguration {
		if v == nil {
			return nil
		}
		return v.MalwareProtection
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) S3Logs() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfns3LogsConfiguration {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(DetectorCfns3LogsConfigurationPtrOutput)
}

type DetectorCfnFeatureAdditionalConfiguration struct {
	Name   *string `pulumi:"name"`
	Status *string `pulumi:"status"`
}

// DetectorCfnFeatureAdditionalConfigurationInput is an input type that accepts DetectorCfnFeatureAdditionalConfigurationArgs and DetectorCfnFeatureAdditionalConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnFeatureAdditionalConfigurationInput` via:
//
//	DetectorCfnFeatureAdditionalConfigurationArgs{...}
type DetectorCfnFeatureAdditionalConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnFeatureAdditionalConfigurationOutput() DetectorCfnFeatureAdditionalConfigurationOutput
	ToDetectorCfnFeatureAdditionalConfigurationOutputWithContext(context.Context) DetectorCfnFeatureAdditionalConfigurationOutput
}

type DetectorCfnFeatureAdditionalConfigurationArgs struct {
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DetectorCfnFeatureAdditionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnFeatureAdditionalConfiguration)(nil)).Elem()
}

func (i DetectorCfnFeatureAdditionalConfigurationArgs) ToDetectorCfnFeatureAdditionalConfigurationOutput() DetectorCfnFeatureAdditionalConfigurationOutput {
	return i.ToDetectorCfnFeatureAdditionalConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnFeatureAdditionalConfigurationArgs) ToDetectorCfnFeatureAdditionalConfigurationOutputWithContext(ctx context.Context) DetectorCfnFeatureAdditionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnFeatureAdditionalConfigurationOutput)
}

func (i DetectorCfnFeatureAdditionalConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnFeatureAdditionalConfiguration] {
	return pulumix.Output[DetectorCfnFeatureAdditionalConfiguration]{
		OutputState: i.ToDetectorCfnFeatureAdditionalConfigurationOutputWithContext(ctx).OutputState,
	}
}

// DetectorCfnFeatureAdditionalConfigurationArrayInput is an input type that accepts DetectorCfnFeatureAdditionalConfigurationArray and DetectorCfnFeatureAdditionalConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorCfnFeatureAdditionalConfigurationArrayInput` via:
//
//	DetectorCfnFeatureAdditionalConfigurationArray{ DetectorCfnFeatureAdditionalConfigurationArgs{...} }
type DetectorCfnFeatureAdditionalConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorCfnFeatureAdditionalConfigurationArrayOutput() DetectorCfnFeatureAdditionalConfigurationArrayOutput
	ToDetectorCfnFeatureAdditionalConfigurationArrayOutputWithContext(context.Context) DetectorCfnFeatureAdditionalConfigurationArrayOutput
}

type DetectorCfnFeatureAdditionalConfigurationArray []DetectorCfnFeatureAdditionalConfigurationInput

func (DetectorCfnFeatureAdditionalConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorCfnFeatureAdditionalConfiguration)(nil)).Elem()
}

func (i DetectorCfnFeatureAdditionalConfigurationArray) ToDetectorCfnFeatureAdditionalConfigurationArrayOutput() DetectorCfnFeatureAdditionalConfigurationArrayOutput {
	return i.ToDetectorCfnFeatureAdditionalConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorCfnFeatureAdditionalConfigurationArray) ToDetectorCfnFeatureAdditionalConfigurationArrayOutputWithContext(ctx context.Context) DetectorCfnFeatureAdditionalConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnFeatureAdditionalConfigurationArrayOutput)
}

func (i DetectorCfnFeatureAdditionalConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]DetectorCfnFeatureAdditionalConfiguration] {
	return pulumix.Output[[]DetectorCfnFeatureAdditionalConfiguration]{
		OutputState: i.ToDetectorCfnFeatureAdditionalConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnFeatureAdditionalConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnFeatureAdditionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnFeatureAdditionalConfiguration)(nil)).Elem()
}

func (o DetectorCfnFeatureAdditionalConfigurationOutput) ToDetectorCfnFeatureAdditionalConfigurationOutput() DetectorCfnFeatureAdditionalConfigurationOutput {
	return o
}

func (o DetectorCfnFeatureAdditionalConfigurationOutput) ToDetectorCfnFeatureAdditionalConfigurationOutputWithContext(ctx context.Context) DetectorCfnFeatureAdditionalConfigurationOutput {
	return o
}

func (o DetectorCfnFeatureAdditionalConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnFeatureAdditionalConfiguration] {
	return pulumix.Output[DetectorCfnFeatureAdditionalConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnFeatureAdditionalConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorCfnFeatureAdditionalConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DetectorCfnFeatureAdditionalConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorCfnFeatureAdditionalConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DetectorCfnFeatureAdditionalConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorCfnFeatureAdditionalConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorCfnFeatureAdditionalConfiguration)(nil)).Elem()
}

func (o DetectorCfnFeatureAdditionalConfigurationArrayOutput) ToDetectorCfnFeatureAdditionalConfigurationArrayOutput() DetectorCfnFeatureAdditionalConfigurationArrayOutput {
	return o
}

func (o DetectorCfnFeatureAdditionalConfigurationArrayOutput) ToDetectorCfnFeatureAdditionalConfigurationArrayOutputWithContext(ctx context.Context) DetectorCfnFeatureAdditionalConfigurationArrayOutput {
	return o
}

func (o DetectorCfnFeatureAdditionalConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DetectorCfnFeatureAdditionalConfiguration] {
	return pulumix.Output[[]DetectorCfnFeatureAdditionalConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnFeatureAdditionalConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorCfnFeatureAdditionalConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorCfnFeatureAdditionalConfiguration {
		return vs[0].([]DetectorCfnFeatureAdditionalConfiguration)[vs[1].(int)]
	}).(DetectorCfnFeatureAdditionalConfigurationOutput)
}

type DetectorCfnFeatureConfiguration struct {
	AdditionalConfiguration []DetectorCfnFeatureAdditionalConfiguration `pulumi:"additionalConfiguration"`
	Name                    string                                      `pulumi:"name"`
	Status                  DetectorCfnFeatureConfigurationStatus       `pulumi:"status"`
}

// DetectorCfnFeatureConfigurationInput is an input type that accepts DetectorCfnFeatureConfigurationArgs and DetectorCfnFeatureConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnFeatureConfigurationInput` via:
//
//	DetectorCfnFeatureConfigurationArgs{...}
type DetectorCfnFeatureConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnFeatureConfigurationOutput() DetectorCfnFeatureConfigurationOutput
	ToDetectorCfnFeatureConfigurationOutputWithContext(context.Context) DetectorCfnFeatureConfigurationOutput
}

type DetectorCfnFeatureConfigurationArgs struct {
	AdditionalConfiguration DetectorCfnFeatureAdditionalConfigurationArrayInput `pulumi:"additionalConfiguration"`
	Name                    pulumi.StringInput                                  `pulumi:"name"`
	Status                  DetectorCfnFeatureConfigurationStatusInput          `pulumi:"status"`
}

func (DetectorCfnFeatureConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnFeatureConfiguration)(nil)).Elem()
}

func (i DetectorCfnFeatureConfigurationArgs) ToDetectorCfnFeatureConfigurationOutput() DetectorCfnFeatureConfigurationOutput {
	return i.ToDetectorCfnFeatureConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnFeatureConfigurationArgs) ToDetectorCfnFeatureConfigurationOutputWithContext(ctx context.Context) DetectorCfnFeatureConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnFeatureConfigurationOutput)
}

func (i DetectorCfnFeatureConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnFeatureConfiguration] {
	return pulumix.Output[DetectorCfnFeatureConfiguration]{
		OutputState: i.ToDetectorCfnFeatureConfigurationOutputWithContext(ctx).OutputState,
	}
}

// DetectorCfnFeatureConfigurationArrayInput is an input type that accepts DetectorCfnFeatureConfigurationArray and DetectorCfnFeatureConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorCfnFeatureConfigurationArrayInput` via:
//
//	DetectorCfnFeatureConfigurationArray{ DetectorCfnFeatureConfigurationArgs{...} }
type DetectorCfnFeatureConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorCfnFeatureConfigurationArrayOutput() DetectorCfnFeatureConfigurationArrayOutput
	ToDetectorCfnFeatureConfigurationArrayOutputWithContext(context.Context) DetectorCfnFeatureConfigurationArrayOutput
}

type DetectorCfnFeatureConfigurationArray []DetectorCfnFeatureConfigurationInput

func (DetectorCfnFeatureConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorCfnFeatureConfiguration)(nil)).Elem()
}

func (i DetectorCfnFeatureConfigurationArray) ToDetectorCfnFeatureConfigurationArrayOutput() DetectorCfnFeatureConfigurationArrayOutput {
	return i.ToDetectorCfnFeatureConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorCfnFeatureConfigurationArray) ToDetectorCfnFeatureConfigurationArrayOutputWithContext(ctx context.Context) DetectorCfnFeatureConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnFeatureConfigurationArrayOutput)
}

func (i DetectorCfnFeatureConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]DetectorCfnFeatureConfiguration] {
	return pulumix.Output[[]DetectorCfnFeatureConfiguration]{
		OutputState: i.ToDetectorCfnFeatureConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnFeatureConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnFeatureConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnFeatureConfiguration)(nil)).Elem()
}

func (o DetectorCfnFeatureConfigurationOutput) ToDetectorCfnFeatureConfigurationOutput() DetectorCfnFeatureConfigurationOutput {
	return o
}

func (o DetectorCfnFeatureConfigurationOutput) ToDetectorCfnFeatureConfigurationOutputWithContext(ctx context.Context) DetectorCfnFeatureConfigurationOutput {
	return o
}

func (o DetectorCfnFeatureConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnFeatureConfiguration] {
	return pulumix.Output[DetectorCfnFeatureConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnFeatureConfigurationOutput) AdditionalConfiguration() DetectorCfnFeatureAdditionalConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorCfnFeatureConfiguration) []DetectorCfnFeatureAdditionalConfiguration {
		return v.AdditionalConfiguration
	}).(DetectorCfnFeatureAdditionalConfigurationArrayOutput)
}

func (o DetectorCfnFeatureConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorCfnFeatureConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

func (o DetectorCfnFeatureConfigurationOutput) Status() DetectorCfnFeatureConfigurationStatusOutput {
	return o.ApplyT(func(v DetectorCfnFeatureConfiguration) DetectorCfnFeatureConfigurationStatus { return v.Status }).(DetectorCfnFeatureConfigurationStatusOutput)
}

type DetectorCfnFeatureConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorCfnFeatureConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorCfnFeatureConfiguration)(nil)).Elem()
}

func (o DetectorCfnFeatureConfigurationArrayOutput) ToDetectorCfnFeatureConfigurationArrayOutput() DetectorCfnFeatureConfigurationArrayOutput {
	return o
}

func (o DetectorCfnFeatureConfigurationArrayOutput) ToDetectorCfnFeatureConfigurationArrayOutputWithContext(ctx context.Context) DetectorCfnFeatureConfigurationArrayOutput {
	return o
}

func (o DetectorCfnFeatureConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DetectorCfnFeatureConfiguration] {
	return pulumix.Output[[]DetectorCfnFeatureConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnFeatureConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorCfnFeatureConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorCfnFeatureConfiguration {
		return vs[0].([]DetectorCfnFeatureConfiguration)[vs[1].(int)]
	}).(DetectorCfnFeatureConfigurationOutput)
}

type DetectorCfnKubernetesAuditLogsConfiguration struct {
	Enable bool `pulumi:"enable"`
}

// DetectorCfnKubernetesAuditLogsConfigurationInput is an input type that accepts DetectorCfnKubernetesAuditLogsConfigurationArgs and DetectorCfnKubernetesAuditLogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesAuditLogsConfigurationInput` via:
//
//	DetectorCfnKubernetesAuditLogsConfigurationArgs{...}
type DetectorCfnKubernetesAuditLogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput
	ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput
}

type DetectorCfnKubernetesAuditLogsConfigurationArgs struct {
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (DetectorCfnKubernetesAuditLogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationOutput)
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnKubernetesAuditLogsConfiguration] {
	return pulumix.Output[DetectorCfnKubernetesAuditLogsConfiguration]{
		OutputState: i.ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationOutput).ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnKubernetesAuditLogsConfigurationPtrInput is an input type that accepts DetectorCfnKubernetesAuditLogsConfigurationArgs, DetectorCfnKubernetesAuditLogsConfigurationPtr and DetectorCfnKubernetesAuditLogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesAuditLogsConfigurationPtrInput` via:
//
//	        DetectorCfnKubernetesAuditLogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnKubernetesAuditLogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput
	ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput
}

type detectorCfnKubernetesAuditLogsConfigurationPtrType DetectorCfnKubernetesAuditLogsConfigurationArgs

func DetectorCfnKubernetesAuditLogsConfigurationPtr(v *DetectorCfnKubernetesAuditLogsConfigurationArgs) DetectorCfnKubernetesAuditLogsConfigurationPtrInput {
	return (*detectorCfnKubernetesAuditLogsConfigurationPtrType)(v)
}

func (*detectorCfnKubernetesAuditLogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i *detectorCfnKubernetesAuditLogsConfigurationPtrType) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnKubernetesAuditLogsConfigurationPtrType) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

func (i *detectorCfnKubernetesAuditLogsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnKubernetesAuditLogsConfiguration] {
	return pulumix.Output[*DetectorCfnKubernetesAuditLogsConfiguration]{
		OutputState: i.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnKubernetesAuditLogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesAuditLogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnKubernetesAuditLogsConfiguration) *DetectorCfnKubernetesAuditLogsConfiguration {
		return &v
	}).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnKubernetesAuditLogsConfiguration] {
	return pulumix.Output[DetectorCfnKubernetesAuditLogsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v DetectorCfnKubernetesAuditLogsConfiguration) bool { return v.Enable }).(pulumi.BoolOutput)
}

type DetectorCfnKubernetesAuditLogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnKubernetesAuditLogsConfiguration] {
	return pulumix.Output[*DetectorCfnKubernetesAuditLogsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) Elem() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesAuditLogsConfiguration) DetectorCfnKubernetesAuditLogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnKubernetesAuditLogsConfiguration
		return ret
	}).(DetectorCfnKubernetesAuditLogsConfigurationOutput)
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesAuditLogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorCfnKubernetesConfiguration struct {
	AuditLogs DetectorCfnKubernetesAuditLogsConfiguration `pulumi:"auditLogs"`
}

// DetectorCfnKubernetesConfigurationInput is an input type that accepts DetectorCfnKubernetesConfigurationArgs and DetectorCfnKubernetesConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesConfigurationInput` via:
//
//	DetectorCfnKubernetesConfigurationArgs{...}
type DetectorCfnKubernetesConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput
	ToDetectorCfnKubernetesConfigurationOutputWithContext(context.Context) DetectorCfnKubernetesConfigurationOutput
}

type DetectorCfnKubernetesConfigurationArgs struct {
	AuditLogs DetectorCfnKubernetesAuditLogsConfigurationInput `pulumi:"auditLogs"`
}

func (DetectorCfnKubernetesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput {
	return i.ToDetectorCfnKubernetesConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationOutput)
}

func (i DetectorCfnKubernetesConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnKubernetesConfiguration] {
	return pulumix.Output[DetectorCfnKubernetesConfiguration]{
		OutputState: i.ToDetectorCfnKubernetesConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationOutput).ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnKubernetesConfigurationPtrInput is an input type that accepts DetectorCfnKubernetesConfigurationArgs, DetectorCfnKubernetesConfigurationPtr and DetectorCfnKubernetesConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesConfigurationPtrInput` via:
//
//	        DetectorCfnKubernetesConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnKubernetesConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput
	ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Context) DetectorCfnKubernetesConfigurationPtrOutput
}

type detectorCfnKubernetesConfigurationPtrType DetectorCfnKubernetesConfigurationArgs

func DetectorCfnKubernetesConfigurationPtr(v *DetectorCfnKubernetesConfigurationArgs) DetectorCfnKubernetesConfigurationPtrInput {
	return (*detectorCfnKubernetesConfigurationPtrType)(v)
}

func (*detectorCfnKubernetesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (i *detectorCfnKubernetesConfigurationPtrType) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnKubernetesConfigurationPtrType) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (i *detectorCfnKubernetesConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnKubernetesConfiguration] {
	return pulumix.Output[*DetectorCfnKubernetesConfiguration]{
		OutputState: i.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnKubernetesConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnKubernetesConfiguration) *DetectorCfnKubernetesConfiguration {
		return &v
	}).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnKubernetesConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnKubernetesConfiguration] {
	return pulumix.Output[DetectorCfnKubernetesConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnKubernetesConfigurationOutput) AuditLogs() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o.ApplyT(func(v DetectorCfnKubernetesConfiguration) DetectorCfnKubernetesAuditLogsConfiguration {
		return v.AuditLogs
	}).(DetectorCfnKubernetesAuditLogsConfigurationOutput)
}

type DetectorCfnKubernetesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnKubernetesConfiguration] {
	return pulumix.Output[*DetectorCfnKubernetesConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) Elem() DetectorCfnKubernetesConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesConfiguration) DetectorCfnKubernetesConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnKubernetesConfiguration
		return ret
	}).(DetectorCfnKubernetesConfigurationOutput)
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) AuditLogs() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesConfiguration) *DetectorCfnKubernetesAuditLogsConfiguration {
		if v == nil {
			return nil
		}
		return &v.AuditLogs
	}).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCfnMalwareProtectionConfiguration struct {
	ScanEc2InstanceWithFindings *DetectorCfnScanEc2InstanceWithFindingsConfiguration `pulumi:"scanEc2InstanceWithFindings"`
}

// DetectorCfnMalwareProtectionConfigurationInput is an input type that accepts DetectorCfnMalwareProtectionConfigurationArgs and DetectorCfnMalwareProtectionConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnMalwareProtectionConfigurationInput` via:
//
//	DetectorCfnMalwareProtectionConfigurationArgs{...}
type DetectorCfnMalwareProtectionConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput
	ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(context.Context) DetectorCfnMalwareProtectionConfigurationOutput
}

type DetectorCfnMalwareProtectionConfigurationArgs struct {
	ScanEc2InstanceWithFindings DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput `pulumi:"scanEc2InstanceWithFindings"`
}

func (DetectorCfnMalwareProtectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationOutput)
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnMalwareProtectionConfiguration] {
	return pulumix.Output[DetectorCfnMalwareProtectionConfiguration]{
		OutputState: i.ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationOutput).ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnMalwareProtectionConfigurationPtrInput is an input type that accepts DetectorCfnMalwareProtectionConfigurationArgs, DetectorCfnMalwareProtectionConfigurationPtr and DetectorCfnMalwareProtectionConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnMalwareProtectionConfigurationPtrInput` via:
//
//	        DetectorCfnMalwareProtectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnMalwareProtectionConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput
	ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput
}

type detectorCfnMalwareProtectionConfigurationPtrType DetectorCfnMalwareProtectionConfigurationArgs

func DetectorCfnMalwareProtectionConfigurationPtr(v *DetectorCfnMalwareProtectionConfigurationArgs) DetectorCfnMalwareProtectionConfigurationPtrInput {
	return (*detectorCfnMalwareProtectionConfigurationPtrType)(v)
}

func (*detectorCfnMalwareProtectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (i *detectorCfnMalwareProtectionConfigurationPtrType) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnMalwareProtectionConfigurationPtrType) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (i *detectorCfnMalwareProtectionConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnMalwareProtectionConfiguration] {
	return pulumix.Output[*DetectorCfnMalwareProtectionConfiguration]{
		OutputState: i.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnMalwareProtectionConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnMalwareProtectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnMalwareProtectionConfiguration) *DetectorCfnMalwareProtectionConfiguration {
		return &v
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnMalwareProtectionConfiguration] {
	return pulumix.Output[DetectorCfnMalwareProtectionConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ScanEc2InstanceWithFindings() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnMalwareProtectionConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		return v.ScanEc2InstanceWithFindings
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

type DetectorCfnMalwareProtectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnMalwareProtectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnMalwareProtectionConfiguration] {
	return pulumix.Output[*DetectorCfnMalwareProtectionConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) Elem() DetectorCfnMalwareProtectionConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnMalwareProtectionConfiguration) DetectorCfnMalwareProtectionConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnMalwareProtectionConfiguration
		return ret
	}).(DetectorCfnMalwareProtectionConfigurationOutput)
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ScanEc2InstanceWithFindings() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnMalwareProtectionConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		if v == nil {
			return nil
		}
		return v.ScanEc2InstanceWithFindings
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

type DetectorCfnScanEc2InstanceWithFindingsConfiguration struct {
	EbsVolumes *bool `pulumi:"ebsVolumes"`
}

// DetectorCfnScanEc2InstanceWithFindingsConfigurationInput is an input type that accepts DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs and DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnScanEc2InstanceWithFindingsConfigurationInput` via:
//
//	DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{...}
type DetectorCfnScanEc2InstanceWithFindingsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput
	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs struct {
	EbsVolumes pulumi.BoolPtrInput `pulumi:"ebsVolumes"`
}

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput)
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnScanEc2InstanceWithFindingsConfiguration] {
	return pulumix.Output[DetectorCfnScanEc2InstanceWithFindingsConfiguration]{
		OutputState: i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput).ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput is an input type that accepts DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs, DetectorCfnScanEc2InstanceWithFindingsConfigurationPtr and DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput` via:
//
//	        DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput
	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput
}

type detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs

func DetectorCfnScanEc2InstanceWithFindingsConfigurationPtr(v *DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput {
	return (*detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType)(v)
}

func (*detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (i *detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

func (i *detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnScanEc2InstanceWithFindingsConfiguration] {
	return pulumix.Output[*DetectorCfnScanEc2InstanceWithFindingsConfiguration]{
		OutputState: i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnScanEc2InstanceWithFindingsConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		return &v
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfnScanEc2InstanceWithFindingsConfiguration] {
	return pulumix.Output[DetectorCfnScanEc2InstanceWithFindingsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) EbsVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCfnScanEc2InstanceWithFindingsConfiguration) *bool { return v.EbsVolumes }).(pulumi.BoolPtrOutput)
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfnScanEc2InstanceWithFindingsConfiguration] {
	return pulumix.Output[*DetectorCfnScanEc2InstanceWithFindingsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) Elem() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnScanEc2InstanceWithFindingsConfiguration) DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnScanEc2InstanceWithFindingsConfiguration
		return ret
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput)
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) EbsVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfnScanEc2InstanceWithFindingsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EbsVolumes
	}).(pulumi.BoolPtrOutput)
}

type DetectorCfns3LogsConfiguration struct {
	Enable bool `pulumi:"enable"`
}

// DetectorCfns3LogsConfigurationInput is an input type that accepts DetectorCfns3LogsConfigurationArgs and DetectorCfns3LogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfns3LogsConfigurationInput` via:
//
//	DetectorCfns3LogsConfigurationArgs{...}
type DetectorCfns3LogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput
	ToDetectorCfns3LogsConfigurationOutputWithContext(context.Context) DetectorCfns3LogsConfigurationOutput
}

type DetectorCfns3LogsConfigurationArgs struct {
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (DetectorCfns3LogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput {
	return i.ToDetectorCfns3LogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationOutput)
}

func (i DetectorCfns3LogsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorCfns3LogsConfiguration] {
	return pulumix.Output[DetectorCfns3LogsConfiguration]{
		OutputState: i.ToDetectorCfns3LogsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return i.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationOutput).ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfns3LogsConfigurationPtrInput is an input type that accepts DetectorCfns3LogsConfigurationArgs, DetectorCfns3LogsConfigurationPtr and DetectorCfns3LogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfns3LogsConfigurationPtrInput` via:
//
//	        DetectorCfns3LogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfns3LogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput
	ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Context) DetectorCfns3LogsConfigurationPtrOutput
}

type detectorCfns3LogsConfigurationPtrType DetectorCfns3LogsConfigurationArgs

func DetectorCfns3LogsConfigurationPtr(v *DetectorCfns3LogsConfigurationArgs) DetectorCfns3LogsConfigurationPtrInput {
	return (*detectorCfns3LogsConfigurationPtrType)(v)
}

func (*detectorCfns3LogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (i *detectorCfns3LogsConfigurationPtrType) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return i.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfns3LogsConfigurationPtrType) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationPtrOutput)
}

func (i *detectorCfns3LogsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfns3LogsConfiguration] {
	return pulumix.Output[*DetectorCfns3LogsConfiguration]{
		OutputState: i.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type DetectorCfns3LogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfns3LogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfns3LogsConfiguration) *DetectorCfns3LogsConfiguration {
		return &v
	}).(DetectorCfns3LogsConfigurationPtrOutput)
}

func (o DetectorCfns3LogsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorCfns3LogsConfiguration] {
	return pulumix.Output[DetectorCfns3LogsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfns3LogsConfigurationOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v DetectorCfns3LogsConfiguration) bool { return v.Enable }).(pulumi.BoolOutput)
}

type DetectorCfns3LogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfns3LogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCfns3LogsConfigurationPtrOutput) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationPtrOutput) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DetectorCfns3LogsConfiguration] {
	return pulumix.Output[*DetectorCfns3LogsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o DetectorCfns3LogsConfigurationPtrOutput) Elem() DetectorCfns3LogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfns3LogsConfiguration) DetectorCfns3LogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfns3LogsConfiguration
		return ret
	}).(DetectorCfns3LogsConfigurationOutput)
}

func (o DetectorCfns3LogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfns3LogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorTagItem struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DetectorTagItemInput is an input type that accepts DetectorTagItemArgs and DetectorTagItemOutput values.
// You can construct a concrete instance of `DetectorTagItemInput` via:
//
//	DetectorTagItemArgs{...}
type DetectorTagItemInput interface {
	pulumi.Input

	ToDetectorTagItemOutput() DetectorTagItemOutput
	ToDetectorTagItemOutputWithContext(context.Context) DetectorTagItemOutput
}

type DetectorTagItemArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorTagItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTagItem)(nil)).Elem()
}

func (i DetectorTagItemArgs) ToDetectorTagItemOutput() DetectorTagItemOutput {
	return i.ToDetectorTagItemOutputWithContext(context.Background())
}

func (i DetectorTagItemArgs) ToDetectorTagItemOutputWithContext(ctx context.Context) DetectorTagItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagItemOutput)
}

func (i DetectorTagItemArgs) ToOutput(ctx context.Context) pulumix.Output[DetectorTagItem] {
	return pulumix.Output[DetectorTagItem]{
		OutputState: i.ToDetectorTagItemOutputWithContext(ctx).OutputState,
	}
}

// DetectorTagItemArrayInput is an input type that accepts DetectorTagItemArray and DetectorTagItemArrayOutput values.
// You can construct a concrete instance of `DetectorTagItemArrayInput` via:
//
//	DetectorTagItemArray{ DetectorTagItemArgs{...} }
type DetectorTagItemArrayInput interface {
	pulumi.Input

	ToDetectorTagItemArrayOutput() DetectorTagItemArrayOutput
	ToDetectorTagItemArrayOutputWithContext(context.Context) DetectorTagItemArrayOutput
}

type DetectorTagItemArray []DetectorTagItemInput

func (DetectorTagItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTagItem)(nil)).Elem()
}

func (i DetectorTagItemArray) ToDetectorTagItemArrayOutput() DetectorTagItemArrayOutput {
	return i.ToDetectorTagItemArrayOutputWithContext(context.Background())
}

func (i DetectorTagItemArray) ToDetectorTagItemArrayOutputWithContext(ctx context.Context) DetectorTagItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagItemArrayOutput)
}

func (i DetectorTagItemArray) ToOutput(ctx context.Context) pulumix.Output[[]DetectorTagItem] {
	return pulumix.Output[[]DetectorTagItem]{
		OutputState: i.ToDetectorTagItemArrayOutputWithContext(ctx).OutputState,
	}
}

type DetectorTagItemOutput struct{ *pulumi.OutputState }

func (DetectorTagItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTagItem)(nil)).Elem()
}

func (o DetectorTagItemOutput) ToDetectorTagItemOutput() DetectorTagItemOutput {
	return o
}

func (o DetectorTagItemOutput) ToDetectorTagItemOutputWithContext(ctx context.Context) DetectorTagItemOutput {
	return o
}

func (o DetectorTagItemOutput) ToOutput(ctx context.Context) pulumix.Output[DetectorTagItem] {
	return pulumix.Output[DetectorTagItem]{
		OutputState: o.OutputState,
	}
}

func (o DetectorTagItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTagItem) string { return v.Key }).(pulumi.StringOutput)
}

func (o DetectorTagItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTagItem) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorTagItemArrayOutput struct{ *pulumi.OutputState }

func (DetectorTagItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTagItem)(nil)).Elem()
}

func (o DetectorTagItemArrayOutput) ToDetectorTagItemArrayOutput() DetectorTagItemArrayOutput {
	return o
}

func (o DetectorTagItemArrayOutput) ToDetectorTagItemArrayOutputWithContext(ctx context.Context) DetectorTagItemArrayOutput {
	return o
}

func (o DetectorTagItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DetectorTagItem] {
	return pulumix.Output[[]DetectorTagItem]{
		OutputState: o.OutputState,
	}
}

func (o DetectorTagItemArrayOutput) Index(i pulumi.IntInput) DetectorTagItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorTagItem {
		return vs[0].([]DetectorTagItem)[vs[1].(int)]
	}).(DetectorTagItemOutput)
}

type FilterCondition struct {
	Eq                 []string `pulumi:"eq"`
	Equals             []string `pulumi:"equals"`
	GreaterThan        *int     `pulumi:"greaterThan"`
	GreaterThanOrEqual *int     `pulumi:"greaterThanOrEqual"`
	Gt                 *int     `pulumi:"gt"`
	Gte                *int     `pulumi:"gte"`
	LessThan           *int     `pulumi:"lessThan"`
	LessThanOrEqual    *int     `pulumi:"lessThanOrEqual"`
	Lt                 *int     `pulumi:"lt"`
	Lte                *int     `pulumi:"lte"`
	Neq                []string `pulumi:"neq"`
	NotEquals          []string `pulumi:"notEquals"`
}

// FilterConditionInput is an input type that accepts FilterConditionArgs and FilterConditionOutput values.
// You can construct a concrete instance of `FilterConditionInput` via:
//
//	FilterConditionArgs{...}
type FilterConditionInput interface {
	pulumi.Input

	ToFilterConditionOutput() FilterConditionOutput
	ToFilterConditionOutputWithContext(context.Context) FilterConditionOutput
}

type FilterConditionArgs struct {
	Eq                 pulumi.StringArrayInput `pulumi:"eq"`
	Equals             pulumi.StringArrayInput `pulumi:"equals"`
	GreaterThan        pulumi.IntPtrInput      `pulumi:"greaterThan"`
	GreaterThanOrEqual pulumi.IntPtrInput      `pulumi:"greaterThanOrEqual"`
	Gt                 pulumi.IntPtrInput      `pulumi:"gt"`
	Gte                pulumi.IntPtrInput      `pulumi:"gte"`
	LessThan           pulumi.IntPtrInput      `pulumi:"lessThan"`
	LessThanOrEqual    pulumi.IntPtrInput      `pulumi:"lessThanOrEqual"`
	Lt                 pulumi.IntPtrInput      `pulumi:"lt"`
	Lte                pulumi.IntPtrInput      `pulumi:"lte"`
	Neq                pulumi.StringArrayInput `pulumi:"neq"`
	NotEquals          pulumi.StringArrayInput `pulumi:"notEquals"`
}

func (FilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (i FilterConditionArgs) ToFilterConditionOutput() FilterConditionOutput {
	return i.ToFilterConditionOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput)
}

func (i FilterConditionArgs) ToOutput(ctx context.Context) pulumix.Output[FilterCondition] {
	return pulumix.Output[FilterCondition]{
		OutputState: i.ToFilterConditionOutputWithContext(ctx).OutputState,
	}
}

func (i FilterConditionArgs) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput).ToFilterConditionPtrOutputWithContext(ctx)
}

// FilterConditionPtrInput is an input type that accepts FilterConditionArgs, FilterConditionPtr and FilterConditionPtrOutput values.
// You can construct a concrete instance of `FilterConditionPtrInput` via:
//
//	        FilterConditionArgs{...}
//
//	or:
//
//	        nil
type FilterConditionPtrInput interface {
	pulumi.Input

	ToFilterConditionPtrOutput() FilterConditionPtrOutput
	ToFilterConditionPtrOutputWithContext(context.Context) FilterConditionPtrOutput
}

type filterConditionPtrType FilterConditionArgs

func FilterConditionPtr(v *FilterConditionArgs) FilterConditionPtrInput {
	return (*filterConditionPtrType)(v)
}

func (*filterConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionPtrOutput)
}

func (i *filterConditionPtrType) ToOutput(ctx context.Context) pulumix.Output[*FilterCondition] {
	return pulumix.Output[*FilterCondition]{
		OutputState: i.ToFilterConditionPtrOutputWithContext(ctx).OutputState,
	}
}

type FilterConditionOutput struct{ *pulumi.OutputState }

func (FilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (o FilterConditionOutput) ToFilterConditionOutput() FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (o FilterConditionOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterCondition) *FilterCondition {
		return &v
	}).(FilterConditionPtrOutput)
}

func (o FilterConditionOutput) ToOutput(ctx context.Context) pulumix.Output[FilterCondition] {
	return pulumix.Output[FilterCondition]{
		OutputState: o.OutputState,
	}
}

func (o FilterConditionOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Eq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Equals }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Neq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.NotEquals }).(pulumi.StringArrayOutput)
}

type FilterConditionPtrOutput struct{ *pulumi.OutputState }

func (FilterConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FilterCondition] {
	return pulumix.Output[*FilterCondition]{
		OutputState: o.OutputState,
	}
}

func (o FilterConditionPtrOutput) Elem() FilterConditionOutput {
	return o.ApplyT(func(v *FilterCondition) FilterCondition {
		if v != nil {
			return *v
		}
		var ret FilterCondition
		return ret
	}).(FilterConditionOutput)
}

func (o FilterConditionPtrOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Eq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Equals
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Neq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.NotEquals
	}).(pulumi.StringArrayOutput)
}

type FilterFindingCriteria struct {
	Criterion interface{}      `pulumi:"criterion"`
	ItemType  *FilterCondition `pulumi:"itemType"`
}

// FilterFindingCriteriaInput is an input type that accepts FilterFindingCriteriaArgs and FilterFindingCriteriaOutput values.
// You can construct a concrete instance of `FilterFindingCriteriaInput` via:
//
//	FilterFindingCriteriaArgs{...}
type FilterFindingCriteriaInput interface {
	pulumi.Input

	ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput
	ToFilterFindingCriteriaOutputWithContext(context.Context) FilterFindingCriteriaOutput
}

type FilterFindingCriteriaArgs struct {
	Criterion pulumi.Input            `pulumi:"criterion"`
	ItemType  FilterConditionPtrInput `pulumi:"itemType"`
}

func (FilterFindingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return i.ToFilterFindingCriteriaOutputWithContext(context.Background())
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFindingCriteriaOutput)
}

func (i FilterFindingCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[FilterFindingCriteria] {
	return pulumix.Output[FilterFindingCriteria]{
		OutputState: i.ToFilterFindingCriteriaOutputWithContext(ctx).OutputState,
	}
}

type FilterFindingCriteriaOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[FilterFindingCriteria] {
	return pulumix.Output[FilterFindingCriteria]{
		OutputState: o.OutputState,
	}
}

func (o FilterFindingCriteriaOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v FilterFindingCriteria) interface{} { return v.Criterion }).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v FilterFindingCriteria) *FilterCondition { return v.ItemType }).(FilterConditionPtrOutput)
}

type FilterFindingCriteriaPtrOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutput() FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutputWithContext(ctx context.Context) FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FilterFindingCriteria] {
	return pulumix.Output[*FilterFindingCriteria]{
		OutputState: o.OutputState,
	}
}

func (o FilterFindingCriteriaPtrOutput) Elem() FilterFindingCriteriaOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) FilterFindingCriteria {
		if v != nil {
			return *v
		}
		var ret FilterFindingCriteria
		return ret
	}).(FilterFindingCriteriaOutput)
}

func (o FilterFindingCriteriaPtrOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) interface{} {
		if v == nil {
			return nil
		}
		return v.Criterion
	}).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaPtrOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) *FilterCondition {
		if v == nil {
			return nil
		}
		return v.ItemType
	}).(FilterConditionPtrOutput)
}

type FilterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FilterTagInput is an input type that accepts FilterTagArgs and FilterTagOutput values.
// You can construct a concrete instance of `FilterTagInput` via:
//
//	FilterTagArgs{...}
type FilterTagInput interface {
	pulumi.Input

	ToFilterTagOutput() FilterTagOutput
	ToFilterTagOutputWithContext(context.Context) FilterTagOutput
}

type FilterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (i FilterTagArgs) ToFilterTagOutput() FilterTagOutput {
	return i.ToFilterTagOutputWithContext(context.Background())
}

func (i FilterTagArgs) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagOutput)
}

func (i FilterTagArgs) ToOutput(ctx context.Context) pulumix.Output[FilterTag] {
	return pulumix.Output[FilterTag]{
		OutputState: i.ToFilterTagOutputWithContext(ctx).OutputState,
	}
}

// FilterTagArrayInput is an input type that accepts FilterTagArray and FilterTagArrayOutput values.
// You can construct a concrete instance of `FilterTagArrayInput` via:
//
//	FilterTagArray{ FilterTagArgs{...} }
type FilterTagArrayInput interface {
	pulumi.Input

	ToFilterTagArrayOutput() FilterTagArrayOutput
	ToFilterTagArrayOutputWithContext(context.Context) FilterTagArrayOutput
}

type FilterTagArray []FilterTagInput

func (FilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (i FilterTagArray) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return i.ToFilterTagArrayOutputWithContext(context.Background())
}

func (i FilterTagArray) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagArrayOutput)
}

func (i FilterTagArray) ToOutput(ctx context.Context) pulumix.Output[[]FilterTag] {
	return pulumix.Output[[]FilterTag]{
		OutputState: i.ToFilterTagArrayOutputWithContext(ctx).OutputState,
	}
}

type FilterTagOutput struct{ *pulumi.OutputState }

func (FilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (o FilterTagOutput) ToFilterTagOutput() FilterTagOutput {
	return o
}

func (o FilterTagOutput) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return o
}

func (o FilterTagOutput) ToOutput(ctx context.Context) pulumix.Output[FilterTag] {
	return pulumix.Output[FilterTag]{
		OutputState: o.OutputState,
	}
}

func (o FilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterTagArrayOutput struct{ *pulumi.OutputState }

func (FilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FilterTag] {
	return pulumix.Output[[]FilterTag]{
		OutputState: o.OutputState,
	}
}

func (o FilterTagArrayOutput) Index(i pulumi.IntInput) FilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterTag {
		return vs[0].([]FilterTag)[vs[1].(int)]
	}).(FilterTagOutput)
}

type IpSetTagItem struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// IpSetTagItemInput is an input type that accepts IpSetTagItemArgs and IpSetTagItemOutput values.
// You can construct a concrete instance of `IpSetTagItemInput` via:
//
//	IpSetTagItemArgs{...}
type IpSetTagItemInput interface {
	pulumi.Input

	ToIpSetTagItemOutput() IpSetTagItemOutput
	ToIpSetTagItemOutputWithContext(context.Context) IpSetTagItemOutput
}

type IpSetTagItemArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpSetTagItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetTagItem)(nil)).Elem()
}

func (i IpSetTagItemArgs) ToIpSetTagItemOutput() IpSetTagItemOutput {
	return i.ToIpSetTagItemOutputWithContext(context.Background())
}

func (i IpSetTagItemArgs) ToIpSetTagItemOutputWithContext(ctx context.Context) IpSetTagItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetTagItemOutput)
}

func (i IpSetTagItemArgs) ToOutput(ctx context.Context) pulumix.Output[IpSetTagItem] {
	return pulumix.Output[IpSetTagItem]{
		OutputState: i.ToIpSetTagItemOutputWithContext(ctx).OutputState,
	}
}

// IpSetTagItemArrayInput is an input type that accepts IpSetTagItemArray and IpSetTagItemArrayOutput values.
// You can construct a concrete instance of `IpSetTagItemArrayInput` via:
//
//	IpSetTagItemArray{ IpSetTagItemArgs{...} }
type IpSetTagItemArrayInput interface {
	pulumi.Input

	ToIpSetTagItemArrayOutput() IpSetTagItemArrayOutput
	ToIpSetTagItemArrayOutputWithContext(context.Context) IpSetTagItemArrayOutput
}

type IpSetTagItemArray []IpSetTagItemInput

func (IpSetTagItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetTagItem)(nil)).Elem()
}

func (i IpSetTagItemArray) ToIpSetTagItemArrayOutput() IpSetTagItemArrayOutput {
	return i.ToIpSetTagItemArrayOutputWithContext(context.Background())
}

func (i IpSetTagItemArray) ToIpSetTagItemArrayOutputWithContext(ctx context.Context) IpSetTagItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetTagItemArrayOutput)
}

func (i IpSetTagItemArray) ToOutput(ctx context.Context) pulumix.Output[[]IpSetTagItem] {
	return pulumix.Output[[]IpSetTagItem]{
		OutputState: i.ToIpSetTagItemArrayOutputWithContext(ctx).OutputState,
	}
}

type IpSetTagItemOutput struct{ *pulumi.OutputState }

func (IpSetTagItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetTagItem)(nil)).Elem()
}

func (o IpSetTagItemOutput) ToIpSetTagItemOutput() IpSetTagItemOutput {
	return o
}

func (o IpSetTagItemOutput) ToIpSetTagItemOutputWithContext(ctx context.Context) IpSetTagItemOutput {
	return o
}

func (o IpSetTagItemOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetTagItem] {
	return pulumix.Output[IpSetTagItem]{
		OutputState: o.OutputState,
	}
}

func (o IpSetTagItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetTagItem) string { return v.Key }).(pulumi.StringOutput)
}

func (o IpSetTagItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetTagItem) string { return v.Value }).(pulumi.StringOutput)
}

type IpSetTagItemArrayOutput struct{ *pulumi.OutputState }

func (IpSetTagItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetTagItem)(nil)).Elem()
}

func (o IpSetTagItemArrayOutput) ToIpSetTagItemArrayOutput() IpSetTagItemArrayOutput {
	return o
}

func (o IpSetTagItemArrayOutput) ToIpSetTagItemArrayOutputWithContext(ctx context.Context) IpSetTagItemArrayOutput {
	return o
}

func (o IpSetTagItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpSetTagItem] {
	return pulumix.Output[[]IpSetTagItem]{
		OutputState: o.OutputState,
	}
}

func (o IpSetTagItemArrayOutput) Index(i pulumi.IntInput) IpSetTagItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetTagItem {
		return vs[0].([]IpSetTagItem)[vs[1].(int)]
	}).(IpSetTagItemOutput)
}

type ThreatIntelSetTagItem struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ThreatIntelSetTagItemInput is an input type that accepts ThreatIntelSetTagItemArgs and ThreatIntelSetTagItemOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagItemInput` via:
//
//	ThreatIntelSetTagItemArgs{...}
type ThreatIntelSetTagItemInput interface {
	pulumi.Input

	ToThreatIntelSetTagItemOutput() ThreatIntelSetTagItemOutput
	ToThreatIntelSetTagItemOutputWithContext(context.Context) ThreatIntelSetTagItemOutput
}

type ThreatIntelSetTagItemArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ThreatIntelSetTagItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTagItem)(nil)).Elem()
}

func (i ThreatIntelSetTagItemArgs) ToThreatIntelSetTagItemOutput() ThreatIntelSetTagItemOutput {
	return i.ToThreatIntelSetTagItemOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagItemArgs) ToThreatIntelSetTagItemOutputWithContext(ctx context.Context) ThreatIntelSetTagItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagItemOutput)
}

func (i ThreatIntelSetTagItemArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelSetTagItem] {
	return pulumix.Output[ThreatIntelSetTagItem]{
		OutputState: i.ToThreatIntelSetTagItemOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelSetTagItemArrayInput is an input type that accepts ThreatIntelSetTagItemArray and ThreatIntelSetTagItemArrayOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagItemArrayInput` via:
//
//	ThreatIntelSetTagItemArray{ ThreatIntelSetTagItemArgs{...} }
type ThreatIntelSetTagItemArrayInput interface {
	pulumi.Input

	ToThreatIntelSetTagItemArrayOutput() ThreatIntelSetTagItemArrayOutput
	ToThreatIntelSetTagItemArrayOutputWithContext(context.Context) ThreatIntelSetTagItemArrayOutput
}

type ThreatIntelSetTagItemArray []ThreatIntelSetTagItemInput

func (ThreatIntelSetTagItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTagItem)(nil)).Elem()
}

func (i ThreatIntelSetTagItemArray) ToThreatIntelSetTagItemArrayOutput() ThreatIntelSetTagItemArrayOutput {
	return i.ToThreatIntelSetTagItemArrayOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagItemArray) ToThreatIntelSetTagItemArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagItemArrayOutput)
}

func (i ThreatIntelSetTagItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelSetTagItem] {
	return pulumix.Output[[]ThreatIntelSetTagItem]{
		OutputState: i.ToThreatIntelSetTagItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelSetTagItemOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTagItem)(nil)).Elem()
}

func (o ThreatIntelSetTagItemOutput) ToThreatIntelSetTagItemOutput() ThreatIntelSetTagItemOutput {
	return o
}

func (o ThreatIntelSetTagItemOutput) ToThreatIntelSetTagItemOutputWithContext(ctx context.Context) ThreatIntelSetTagItemOutput {
	return o
}

func (o ThreatIntelSetTagItemOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelSetTagItem] {
	return pulumix.Output[ThreatIntelSetTagItem]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelSetTagItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTagItem) string { return v.Key }).(pulumi.StringOutput)
}

func (o ThreatIntelSetTagItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTagItem) string { return v.Value }).(pulumi.StringOutput)
}

type ThreatIntelSetTagItemArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTagItem)(nil)).Elem()
}

func (o ThreatIntelSetTagItemArrayOutput) ToThreatIntelSetTagItemArrayOutput() ThreatIntelSetTagItemArrayOutput {
	return o
}

func (o ThreatIntelSetTagItemArrayOutput) ToThreatIntelSetTagItemArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagItemArrayOutput {
	return o
}

func (o ThreatIntelSetTagItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelSetTagItem] {
	return pulumix.Output[[]ThreatIntelSetTagItem]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelSetTagItemArrayOutput) Index(i pulumi.IntInput) ThreatIntelSetTagItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelSetTagItem {
		return vs[0].([]ThreatIntelSetTagItem)[vs[1].(int)]
	}).(ThreatIntelSetTagItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnDataSourceConfigurationsInput)(nil)).Elem(), DetectorCfnDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnDataSourceConfigurationsPtrInput)(nil)).Elem(), DetectorCfnDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnFeatureAdditionalConfigurationInput)(nil)).Elem(), DetectorCfnFeatureAdditionalConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnFeatureAdditionalConfigurationArrayInput)(nil)).Elem(), DetectorCfnFeatureAdditionalConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnFeatureConfigurationInput)(nil)).Elem(), DetectorCfnFeatureConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnFeatureConfigurationArrayInput)(nil)).Elem(), DetectorCfnFeatureConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfigurationInput)(nil)).Elem(), DetectorCfnKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfigurationPtrInput)(nil)).Elem(), DetectorCfnKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesConfigurationInput)(nil)).Elem(), DetectorCfnKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesConfigurationPtrInput)(nil)).Elem(), DetectorCfnKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnMalwareProtectionConfigurationInput)(nil)).Elem(), DetectorCfnMalwareProtectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnMalwareProtectionConfigurationPtrInput)(nil)).Elem(), DetectorCfnMalwareProtectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfigurationInput)(nil)).Elem(), DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput)(nil)).Elem(), DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfns3LogsConfigurationInput)(nil)).Elem(), DetectorCfns3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfns3LogsConfigurationPtrInput)(nil)).Elem(), DetectorCfns3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagItemInput)(nil)).Elem(), DetectorTagItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagItemArrayInput)(nil)).Elem(), DetectorTagItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionPtrInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFindingCriteriaInput)(nil)).Elem(), FilterFindingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagInput)(nil)).Elem(), FilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagArrayInput)(nil)).Elem(), FilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetTagItemInput)(nil)).Elem(), IpSetTagItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetTagItemArrayInput)(nil)).Elem(), IpSetTagItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagItemInput)(nil)).Elem(), ThreatIntelSetTagItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagItemArrayInput)(nil)).Elem(), ThreatIntelSetTagItemArray{})
	pulumi.RegisterOutputType(DetectorCfnDataSourceConfigurationsOutput{})
	pulumi.RegisterOutputType(DetectorCfnDataSourceConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnFeatureAdditionalConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnFeatureAdditionalConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorCfnFeatureConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnFeatureConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesAuditLogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnMalwareProtectionConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnMalwareProtectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfns3LogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfns3LogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorTagItemOutput{})
	pulumi.RegisterOutputType(DetectorTagItemArrayOutput{})
	pulumi.RegisterOutputType(FilterConditionOutput{})
	pulumi.RegisterOutputType(FilterConditionPtrOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaPtrOutput{})
	pulumi.RegisterOutputType(FilterTagOutput{})
	pulumi.RegisterOutputType(FilterTagArrayOutput{})
	pulumi.RegisterOutputType(IpSetTagItemOutput{})
	pulumi.RegisterOutputType(IpSetTagItemArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagItemOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagItemArrayOutput{})
}
