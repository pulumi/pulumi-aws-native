// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DetectorCFNDataSourceConfigurations struct {
	Kubernetes *DetectorCFNKubernetesConfiguration `pulumi:"kubernetes"`
	S3Logs     *DetectorCFNS3LogsConfiguration     `pulumi:"s3Logs"`
}

// DetectorCFNDataSourceConfigurationsInput is an input type that accepts DetectorCFNDataSourceConfigurationsArgs and DetectorCFNDataSourceConfigurationsOutput values.
// You can construct a concrete instance of `DetectorCFNDataSourceConfigurationsInput` via:
//
//          DetectorCFNDataSourceConfigurationsArgs{...}
type DetectorCFNDataSourceConfigurationsInput interface {
	pulumi.Input

	ToDetectorCFNDataSourceConfigurationsOutput() DetectorCFNDataSourceConfigurationsOutput
	ToDetectorCFNDataSourceConfigurationsOutputWithContext(context.Context) DetectorCFNDataSourceConfigurationsOutput
}

type DetectorCFNDataSourceConfigurationsArgs struct {
	Kubernetes DetectorCFNKubernetesConfigurationPtrInput `pulumi:"kubernetes"`
	S3Logs     DetectorCFNS3LogsConfigurationPtrInput     `pulumi:"s3Logs"`
}

func (DetectorCFNDataSourceConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNDataSourceConfigurations)(nil)).Elem()
}

func (i DetectorCFNDataSourceConfigurationsArgs) ToDetectorCFNDataSourceConfigurationsOutput() DetectorCFNDataSourceConfigurationsOutput {
	return i.ToDetectorCFNDataSourceConfigurationsOutputWithContext(context.Background())
}

func (i DetectorCFNDataSourceConfigurationsArgs) ToDetectorCFNDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNDataSourceConfigurationsOutput)
}

func (i DetectorCFNDataSourceConfigurationsArgs) ToDetectorCFNDataSourceConfigurationsPtrOutput() DetectorCFNDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i DetectorCFNDataSourceConfigurationsArgs) ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNDataSourceConfigurationsOutput).ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(ctx)
}

// DetectorCFNDataSourceConfigurationsPtrInput is an input type that accepts DetectorCFNDataSourceConfigurationsArgs, DetectorCFNDataSourceConfigurationsPtr and DetectorCFNDataSourceConfigurationsPtrOutput values.
// You can construct a concrete instance of `DetectorCFNDataSourceConfigurationsPtrInput` via:
//
//          DetectorCFNDataSourceConfigurationsArgs{...}
//
//  or:
//
//          nil
type DetectorCFNDataSourceConfigurationsPtrInput interface {
	pulumi.Input

	ToDetectorCFNDataSourceConfigurationsPtrOutput() DetectorCFNDataSourceConfigurationsPtrOutput
	ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(context.Context) DetectorCFNDataSourceConfigurationsPtrOutput
}

type detectorCFNDataSourceConfigurationsPtrType DetectorCFNDataSourceConfigurationsArgs

func DetectorCFNDataSourceConfigurationsPtr(v *DetectorCFNDataSourceConfigurationsArgs) DetectorCFNDataSourceConfigurationsPtrInput {
	return (*detectorCFNDataSourceConfigurationsPtrType)(v)
}

func (*detectorCFNDataSourceConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNDataSourceConfigurations)(nil)).Elem()
}

func (i *detectorCFNDataSourceConfigurationsPtrType) ToDetectorCFNDataSourceConfigurationsPtrOutput() DetectorCFNDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i *detectorCFNDataSourceConfigurationsPtrType) ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNDataSourceConfigurationsPtrOutput)
}

type DetectorCFNDataSourceConfigurationsOutput struct{ *pulumi.OutputState }

func (DetectorCFNDataSourceConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCFNDataSourceConfigurationsOutput) ToDetectorCFNDataSourceConfigurationsOutput() DetectorCFNDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCFNDataSourceConfigurationsOutput) ToDetectorCFNDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCFNDataSourceConfigurationsOutput) ToDetectorCFNDataSourceConfigurationsPtrOutput() DetectorCFNDataSourceConfigurationsPtrOutput {
	return o.ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (o DetectorCFNDataSourceConfigurationsOutput) ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCFNDataSourceConfigurations) *DetectorCFNDataSourceConfigurations {
		return &v
	}).(DetectorCFNDataSourceConfigurationsPtrOutput)
}

func (o DetectorCFNDataSourceConfigurationsOutput) Kubernetes() DetectorCFNKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCFNDataSourceConfigurations) *DetectorCFNKubernetesConfiguration { return v.Kubernetes }).(DetectorCFNKubernetesConfigurationPtrOutput)
}

func (o DetectorCFNDataSourceConfigurationsOutput) S3Logs() DetectorCFNS3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCFNDataSourceConfigurations) *DetectorCFNS3LogsConfiguration { return v.S3Logs }).(DetectorCFNS3LogsConfigurationPtrOutput)
}

type DetectorCFNDataSourceConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (DetectorCFNDataSourceConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCFNDataSourceConfigurationsPtrOutput) ToDetectorCFNDataSourceConfigurationsPtrOutput() DetectorCFNDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCFNDataSourceConfigurationsPtrOutput) ToDetectorCFNDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCFNDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCFNDataSourceConfigurationsPtrOutput) Elem() DetectorCFNDataSourceConfigurationsOutput {
	return o.ApplyT(func(v *DetectorCFNDataSourceConfigurations) DetectorCFNDataSourceConfigurations {
		if v != nil {
			return *v
		}
		var ret DetectorCFNDataSourceConfigurations
		return ret
	}).(DetectorCFNDataSourceConfigurationsOutput)
}

func (o DetectorCFNDataSourceConfigurationsPtrOutput) Kubernetes() DetectorCFNKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCFNDataSourceConfigurations) *DetectorCFNKubernetesConfiguration {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(DetectorCFNKubernetesConfigurationPtrOutput)
}

func (o DetectorCFNDataSourceConfigurationsPtrOutput) S3Logs() DetectorCFNS3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCFNDataSourceConfigurations) *DetectorCFNS3LogsConfiguration {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(DetectorCFNS3LogsConfigurationPtrOutput)
}

type DetectorCFNKubernetesAuditLogsConfiguration struct {
	Enable *bool `pulumi:"enable"`
}

// DetectorCFNKubernetesAuditLogsConfigurationInput is an input type that accepts DetectorCFNKubernetesAuditLogsConfigurationArgs and DetectorCFNKubernetesAuditLogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCFNKubernetesAuditLogsConfigurationInput` via:
//
//          DetectorCFNKubernetesAuditLogsConfigurationArgs{...}
type DetectorCFNKubernetesAuditLogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCFNKubernetesAuditLogsConfigurationOutput() DetectorCFNKubernetesAuditLogsConfigurationOutput
	ToDetectorCFNKubernetesAuditLogsConfigurationOutputWithContext(context.Context) DetectorCFNKubernetesAuditLogsConfigurationOutput
}

type DetectorCFNKubernetesAuditLogsConfigurationArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (DetectorCFNKubernetesAuditLogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i DetectorCFNKubernetesAuditLogsConfigurationArgs) ToDetectorCFNKubernetesAuditLogsConfigurationOutput() DetectorCFNKubernetesAuditLogsConfigurationOutput {
	return i.ToDetectorCFNKubernetesAuditLogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCFNKubernetesAuditLogsConfigurationArgs) ToDetectorCFNKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesAuditLogsConfigurationOutput)
}

func (i DetectorCFNKubernetesAuditLogsConfigurationArgs) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutput() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCFNKubernetesAuditLogsConfigurationArgs) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesAuditLogsConfigurationOutput).ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCFNKubernetesAuditLogsConfigurationPtrInput is an input type that accepts DetectorCFNKubernetesAuditLogsConfigurationArgs, DetectorCFNKubernetesAuditLogsConfigurationPtr and DetectorCFNKubernetesAuditLogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCFNKubernetesAuditLogsConfigurationPtrInput` via:
//
//          DetectorCFNKubernetesAuditLogsConfigurationArgs{...}
//
//  or:
//
//          nil
type DetectorCFNKubernetesAuditLogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutput() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput
	ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Context) DetectorCFNKubernetesAuditLogsConfigurationPtrOutput
}

type detectorCFNKubernetesAuditLogsConfigurationPtrType DetectorCFNKubernetesAuditLogsConfigurationArgs

func DetectorCFNKubernetesAuditLogsConfigurationPtr(v *DetectorCFNKubernetesAuditLogsConfigurationArgs) DetectorCFNKubernetesAuditLogsConfigurationPtrInput {
	return (*detectorCFNKubernetesAuditLogsConfigurationPtrType)(v)
}

func (*detectorCFNKubernetesAuditLogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i *detectorCFNKubernetesAuditLogsConfigurationPtrType) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutput() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCFNKubernetesAuditLogsConfigurationPtrType) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCFNKubernetesAuditLogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCFNKubernetesAuditLogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCFNKubernetesAuditLogsConfigurationOutput) ToDetectorCFNKubernetesAuditLogsConfigurationOutput() DetectorCFNKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCFNKubernetesAuditLogsConfigurationOutput) ToDetectorCFNKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCFNKubernetesAuditLogsConfigurationOutput) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutput() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o.ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCFNKubernetesAuditLogsConfigurationOutput) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCFNKubernetesAuditLogsConfiguration) *DetectorCFNKubernetesAuditLogsConfiguration {
		return &v
	}).(DetectorCFNKubernetesAuditLogsConfigurationPtrOutput)
}

func (o DetectorCFNKubernetesAuditLogsConfigurationOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCFNKubernetesAuditLogsConfiguration) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type DetectorCFNKubernetesAuditLogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCFNKubernetesAuditLogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCFNKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutput() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCFNKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCFNKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCFNKubernetesAuditLogsConfigurationPtrOutput) Elem() DetectorCFNKubernetesAuditLogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCFNKubernetesAuditLogsConfiguration) DetectorCFNKubernetesAuditLogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCFNKubernetesAuditLogsConfiguration
		return ret
	}).(DetectorCFNKubernetesAuditLogsConfigurationOutput)
}

func (o DetectorCFNKubernetesAuditLogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCFNKubernetesAuditLogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorCFNKubernetesConfiguration struct {
	AuditLogs *DetectorCFNKubernetesAuditLogsConfiguration `pulumi:"auditLogs"`
}

// DetectorCFNKubernetesConfigurationInput is an input type that accepts DetectorCFNKubernetesConfigurationArgs and DetectorCFNKubernetesConfigurationOutput values.
// You can construct a concrete instance of `DetectorCFNKubernetesConfigurationInput` via:
//
//          DetectorCFNKubernetesConfigurationArgs{...}
type DetectorCFNKubernetesConfigurationInput interface {
	pulumi.Input

	ToDetectorCFNKubernetesConfigurationOutput() DetectorCFNKubernetesConfigurationOutput
	ToDetectorCFNKubernetesConfigurationOutputWithContext(context.Context) DetectorCFNKubernetesConfigurationOutput
}

type DetectorCFNKubernetesConfigurationArgs struct {
	AuditLogs DetectorCFNKubernetesAuditLogsConfigurationPtrInput `pulumi:"auditLogs"`
}

func (DetectorCFNKubernetesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNKubernetesConfiguration)(nil)).Elem()
}

func (i DetectorCFNKubernetesConfigurationArgs) ToDetectorCFNKubernetesConfigurationOutput() DetectorCFNKubernetesConfigurationOutput {
	return i.ToDetectorCFNKubernetesConfigurationOutputWithContext(context.Background())
}

func (i DetectorCFNKubernetesConfigurationArgs) ToDetectorCFNKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesConfigurationOutput)
}

func (i DetectorCFNKubernetesConfigurationArgs) ToDetectorCFNKubernetesConfigurationPtrOutput() DetectorCFNKubernetesConfigurationPtrOutput {
	return i.ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCFNKubernetesConfigurationArgs) ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesConfigurationOutput).ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(ctx)
}

// DetectorCFNKubernetesConfigurationPtrInput is an input type that accepts DetectorCFNKubernetesConfigurationArgs, DetectorCFNKubernetesConfigurationPtr and DetectorCFNKubernetesConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCFNKubernetesConfigurationPtrInput` via:
//
//          DetectorCFNKubernetesConfigurationArgs{...}
//
//  or:
//
//          nil
type DetectorCFNKubernetesConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCFNKubernetesConfigurationPtrOutput() DetectorCFNKubernetesConfigurationPtrOutput
	ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(context.Context) DetectorCFNKubernetesConfigurationPtrOutput
}

type detectorCFNKubernetesConfigurationPtrType DetectorCFNKubernetesConfigurationArgs

func DetectorCFNKubernetesConfigurationPtr(v *DetectorCFNKubernetesConfigurationArgs) DetectorCFNKubernetesConfigurationPtrInput {
	return (*detectorCFNKubernetesConfigurationPtrType)(v)
}

func (*detectorCFNKubernetesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNKubernetesConfiguration)(nil)).Elem()
}

func (i *detectorCFNKubernetesConfigurationPtrType) ToDetectorCFNKubernetesConfigurationPtrOutput() DetectorCFNKubernetesConfigurationPtrOutput {
	return i.ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCFNKubernetesConfigurationPtrType) ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNKubernetesConfigurationPtrOutput)
}

type DetectorCFNKubernetesConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCFNKubernetesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCFNKubernetesConfigurationOutput) ToDetectorCFNKubernetesConfigurationOutput() DetectorCFNKubernetesConfigurationOutput {
	return o
}

func (o DetectorCFNKubernetesConfigurationOutput) ToDetectorCFNKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationOutput {
	return o
}

func (o DetectorCFNKubernetesConfigurationOutput) ToDetectorCFNKubernetesConfigurationPtrOutput() DetectorCFNKubernetesConfigurationPtrOutput {
	return o.ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCFNKubernetesConfigurationOutput) ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCFNKubernetesConfiguration) *DetectorCFNKubernetesConfiguration {
		return &v
	}).(DetectorCFNKubernetesConfigurationPtrOutput)
}

func (o DetectorCFNKubernetesConfigurationOutput) AuditLogs() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCFNKubernetesConfiguration) *DetectorCFNKubernetesAuditLogsConfiguration {
		return v.AuditLogs
	}).(DetectorCFNKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCFNKubernetesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCFNKubernetesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCFNKubernetesConfigurationPtrOutput) ToDetectorCFNKubernetesConfigurationPtrOutput() DetectorCFNKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCFNKubernetesConfigurationPtrOutput) ToDetectorCFNKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCFNKubernetesConfigurationPtrOutput) Elem() DetectorCFNKubernetesConfigurationOutput {
	return o.ApplyT(func(v *DetectorCFNKubernetesConfiguration) DetectorCFNKubernetesConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCFNKubernetesConfiguration
		return ret
	}).(DetectorCFNKubernetesConfigurationOutput)
}

func (o DetectorCFNKubernetesConfigurationPtrOutput) AuditLogs() DetectorCFNKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCFNKubernetesConfiguration) *DetectorCFNKubernetesAuditLogsConfiguration {
		if v == nil {
			return nil
		}
		return v.AuditLogs
	}).(DetectorCFNKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCFNS3LogsConfiguration struct {
	Enable *bool `pulumi:"enable"`
}

// DetectorCFNS3LogsConfigurationInput is an input type that accepts DetectorCFNS3LogsConfigurationArgs and DetectorCFNS3LogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCFNS3LogsConfigurationInput` via:
//
//          DetectorCFNS3LogsConfigurationArgs{...}
type DetectorCFNS3LogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCFNS3LogsConfigurationOutput() DetectorCFNS3LogsConfigurationOutput
	ToDetectorCFNS3LogsConfigurationOutputWithContext(context.Context) DetectorCFNS3LogsConfigurationOutput
}

type DetectorCFNS3LogsConfigurationArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (DetectorCFNS3LogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNS3LogsConfiguration)(nil)).Elem()
}

func (i DetectorCFNS3LogsConfigurationArgs) ToDetectorCFNS3LogsConfigurationOutput() DetectorCFNS3LogsConfigurationOutput {
	return i.ToDetectorCFNS3LogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCFNS3LogsConfigurationArgs) ToDetectorCFNS3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNS3LogsConfigurationOutput)
}

func (i DetectorCFNS3LogsConfigurationArgs) ToDetectorCFNS3LogsConfigurationPtrOutput() DetectorCFNS3LogsConfigurationPtrOutput {
	return i.ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCFNS3LogsConfigurationArgs) ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNS3LogsConfigurationOutput).ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCFNS3LogsConfigurationPtrInput is an input type that accepts DetectorCFNS3LogsConfigurationArgs, DetectorCFNS3LogsConfigurationPtr and DetectorCFNS3LogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCFNS3LogsConfigurationPtrInput` via:
//
//          DetectorCFNS3LogsConfigurationArgs{...}
//
//  or:
//
//          nil
type DetectorCFNS3LogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCFNS3LogsConfigurationPtrOutput() DetectorCFNS3LogsConfigurationPtrOutput
	ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(context.Context) DetectorCFNS3LogsConfigurationPtrOutput
}

type detectorCFNS3LogsConfigurationPtrType DetectorCFNS3LogsConfigurationArgs

func DetectorCFNS3LogsConfigurationPtr(v *DetectorCFNS3LogsConfigurationArgs) DetectorCFNS3LogsConfigurationPtrInput {
	return (*detectorCFNS3LogsConfigurationPtrType)(v)
}

func (*detectorCFNS3LogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNS3LogsConfiguration)(nil)).Elem()
}

func (i *detectorCFNS3LogsConfigurationPtrType) ToDetectorCFNS3LogsConfigurationPtrOutput() DetectorCFNS3LogsConfigurationPtrOutput {
	return i.ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCFNS3LogsConfigurationPtrType) ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCFNS3LogsConfigurationPtrOutput)
}

type DetectorCFNS3LogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCFNS3LogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCFNS3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCFNS3LogsConfigurationOutput) ToDetectorCFNS3LogsConfigurationOutput() DetectorCFNS3LogsConfigurationOutput {
	return o
}

func (o DetectorCFNS3LogsConfigurationOutput) ToDetectorCFNS3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationOutput {
	return o
}

func (o DetectorCFNS3LogsConfigurationOutput) ToDetectorCFNS3LogsConfigurationPtrOutput() DetectorCFNS3LogsConfigurationPtrOutput {
	return o.ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCFNS3LogsConfigurationOutput) ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCFNS3LogsConfiguration) *DetectorCFNS3LogsConfiguration {
		return &v
	}).(DetectorCFNS3LogsConfigurationPtrOutput)
}

func (o DetectorCFNS3LogsConfigurationOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCFNS3LogsConfiguration) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type DetectorCFNS3LogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCFNS3LogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCFNS3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCFNS3LogsConfigurationPtrOutput) ToDetectorCFNS3LogsConfigurationPtrOutput() DetectorCFNS3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCFNS3LogsConfigurationPtrOutput) ToDetectorCFNS3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCFNS3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCFNS3LogsConfigurationPtrOutput) Elem() DetectorCFNS3LogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCFNS3LogsConfiguration) DetectorCFNS3LogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCFNS3LogsConfiguration
		return ret
	}).(DetectorCFNS3LogsConfigurationOutput)
}

func (o DetectorCFNS3LogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCFNS3LogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DetectorTagInput is an input type that accepts DetectorTagArgs and DetectorTagOutput values.
// You can construct a concrete instance of `DetectorTagInput` via:
//
//          DetectorTagArgs{...}
type DetectorTagInput interface {
	pulumi.Input

	ToDetectorTagOutput() DetectorTagOutput
	ToDetectorTagOutputWithContext(context.Context) DetectorTagOutput
}

type DetectorTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTag)(nil)).Elem()
}

func (i DetectorTagArgs) ToDetectorTagOutput() DetectorTagOutput {
	return i.ToDetectorTagOutputWithContext(context.Background())
}

func (i DetectorTagArgs) ToDetectorTagOutputWithContext(ctx context.Context) DetectorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagOutput)
}

// DetectorTagArrayInput is an input type that accepts DetectorTagArray and DetectorTagArrayOutput values.
// You can construct a concrete instance of `DetectorTagArrayInput` via:
//
//          DetectorTagArray{ DetectorTagArgs{...} }
type DetectorTagArrayInput interface {
	pulumi.Input

	ToDetectorTagArrayOutput() DetectorTagArrayOutput
	ToDetectorTagArrayOutputWithContext(context.Context) DetectorTagArrayOutput
}

type DetectorTagArray []DetectorTagInput

func (DetectorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTag)(nil)).Elem()
}

func (i DetectorTagArray) ToDetectorTagArrayOutput() DetectorTagArrayOutput {
	return i.ToDetectorTagArrayOutputWithContext(context.Background())
}

func (i DetectorTagArray) ToDetectorTagArrayOutputWithContext(ctx context.Context) DetectorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagArrayOutput)
}

type DetectorTagOutput struct{ *pulumi.OutputState }

func (DetectorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTag)(nil)).Elem()
}

func (o DetectorTagOutput) ToDetectorTagOutput() DetectorTagOutput {
	return o
}

func (o DetectorTagOutput) ToDetectorTagOutputWithContext(ctx context.Context) DetectorTagOutput {
	return o
}

func (o DetectorTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DetectorTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTag) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorTagArrayOutput struct{ *pulumi.OutputState }

func (DetectorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTag)(nil)).Elem()
}

func (o DetectorTagArrayOutput) ToDetectorTagArrayOutput() DetectorTagArrayOutput {
	return o
}

func (o DetectorTagArrayOutput) ToDetectorTagArrayOutputWithContext(ctx context.Context) DetectorTagArrayOutput {
	return o
}

func (o DetectorTagArrayOutput) Index(i pulumi.IntInput) DetectorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorTag {
		return vs[0].([]DetectorTag)[vs[1].(int)]
	}).(DetectorTagOutput)
}

type FilterCondition struct {
	Eq                 []string `pulumi:"eq"`
	Equals             []string `pulumi:"equals"`
	GreaterThan        *int     `pulumi:"greaterThan"`
	GreaterThanOrEqual *int     `pulumi:"greaterThanOrEqual"`
	Gt                 *int     `pulumi:"gt"`
	Gte                *int     `pulumi:"gte"`
	LessThan           *int     `pulumi:"lessThan"`
	LessThanOrEqual    *int     `pulumi:"lessThanOrEqual"`
	Lt                 *int     `pulumi:"lt"`
	Lte                *int     `pulumi:"lte"`
	Neq                []string `pulumi:"neq"`
	NotEquals          []string `pulumi:"notEquals"`
}

// FilterConditionInput is an input type that accepts FilterConditionArgs and FilterConditionOutput values.
// You can construct a concrete instance of `FilterConditionInput` via:
//
//          FilterConditionArgs{...}
type FilterConditionInput interface {
	pulumi.Input

	ToFilterConditionOutput() FilterConditionOutput
	ToFilterConditionOutputWithContext(context.Context) FilterConditionOutput
}

type FilterConditionArgs struct {
	Eq                 pulumi.StringArrayInput `pulumi:"eq"`
	Equals             pulumi.StringArrayInput `pulumi:"equals"`
	GreaterThan        pulumi.IntPtrInput      `pulumi:"greaterThan"`
	GreaterThanOrEqual pulumi.IntPtrInput      `pulumi:"greaterThanOrEqual"`
	Gt                 pulumi.IntPtrInput      `pulumi:"gt"`
	Gte                pulumi.IntPtrInput      `pulumi:"gte"`
	LessThan           pulumi.IntPtrInput      `pulumi:"lessThan"`
	LessThanOrEqual    pulumi.IntPtrInput      `pulumi:"lessThanOrEqual"`
	Lt                 pulumi.IntPtrInput      `pulumi:"lt"`
	Lte                pulumi.IntPtrInput      `pulumi:"lte"`
	Neq                pulumi.StringArrayInput `pulumi:"neq"`
	NotEquals          pulumi.StringArrayInput `pulumi:"notEquals"`
}

func (FilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (i FilterConditionArgs) ToFilterConditionOutput() FilterConditionOutput {
	return i.ToFilterConditionOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput)
}

func (i FilterConditionArgs) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput).ToFilterConditionPtrOutputWithContext(ctx)
}

// FilterConditionPtrInput is an input type that accepts FilterConditionArgs, FilterConditionPtr and FilterConditionPtrOutput values.
// You can construct a concrete instance of `FilterConditionPtrInput` via:
//
//          FilterConditionArgs{...}
//
//  or:
//
//          nil
type FilterConditionPtrInput interface {
	pulumi.Input

	ToFilterConditionPtrOutput() FilterConditionPtrOutput
	ToFilterConditionPtrOutputWithContext(context.Context) FilterConditionPtrOutput
}

type filterConditionPtrType FilterConditionArgs

func FilterConditionPtr(v *FilterConditionArgs) FilterConditionPtrInput {
	return (*filterConditionPtrType)(v)
}

func (*filterConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionPtrOutput)
}

type FilterConditionOutput struct{ *pulumi.OutputState }

func (FilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (o FilterConditionOutput) ToFilterConditionOutput() FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (o FilterConditionOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterCondition) *FilterCondition {
		return &v
	}).(FilterConditionPtrOutput)
}

func (o FilterConditionOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Eq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Equals }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Neq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.NotEquals }).(pulumi.StringArrayOutput)
}

type FilterConditionPtrOutput struct{ *pulumi.OutputState }

func (FilterConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) Elem() FilterConditionOutput {
	return o.ApplyT(func(v *FilterCondition) FilterCondition {
		if v != nil {
			return *v
		}
		var ret FilterCondition
		return ret
	}).(FilterConditionOutput)
}

func (o FilterConditionPtrOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Eq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Equals
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Neq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.NotEquals
	}).(pulumi.StringArrayOutput)
}

type FilterFindingCriteria struct {
	Criterion interface{}      `pulumi:"criterion"`
	ItemType  *FilterCondition `pulumi:"itemType"`
}

// FilterFindingCriteriaInput is an input type that accepts FilterFindingCriteriaArgs and FilterFindingCriteriaOutput values.
// You can construct a concrete instance of `FilterFindingCriteriaInput` via:
//
//          FilterFindingCriteriaArgs{...}
type FilterFindingCriteriaInput interface {
	pulumi.Input

	ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput
	ToFilterFindingCriteriaOutputWithContext(context.Context) FilterFindingCriteriaOutput
}

type FilterFindingCriteriaArgs struct {
	Criterion pulumi.Input            `pulumi:"criterion"`
	ItemType  FilterConditionPtrInput `pulumi:"itemType"`
}

func (FilterFindingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return i.ToFilterFindingCriteriaOutputWithContext(context.Background())
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFindingCriteriaOutput)
}

type FilterFindingCriteriaOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v FilterFindingCriteria) interface{} { return v.Criterion }).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v FilterFindingCriteria) *FilterCondition { return v.ItemType }).(FilterConditionPtrOutput)
}

type FilterFindingCriteriaPtrOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutput() FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutputWithContext(ctx context.Context) FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) Elem() FilterFindingCriteriaOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) FilterFindingCriteria {
		if v != nil {
			return *v
		}
		var ret FilterFindingCriteria
		return ret
	}).(FilterFindingCriteriaOutput)
}

func (o FilterFindingCriteriaPtrOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) interface{} {
		if v == nil {
			return nil
		}
		return v.Criterion
	}).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaPtrOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) *FilterCondition {
		if v == nil {
			return nil
		}
		return v.ItemType
	}).(FilterConditionPtrOutput)
}

type FilterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FilterTagInput is an input type that accepts FilterTagArgs and FilterTagOutput values.
// You can construct a concrete instance of `FilterTagInput` via:
//
//          FilterTagArgs{...}
type FilterTagInput interface {
	pulumi.Input

	ToFilterTagOutput() FilterTagOutput
	ToFilterTagOutputWithContext(context.Context) FilterTagOutput
}

type FilterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (i FilterTagArgs) ToFilterTagOutput() FilterTagOutput {
	return i.ToFilterTagOutputWithContext(context.Background())
}

func (i FilterTagArgs) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagOutput)
}

// FilterTagArrayInput is an input type that accepts FilterTagArray and FilterTagArrayOutput values.
// You can construct a concrete instance of `FilterTagArrayInput` via:
//
//          FilterTagArray{ FilterTagArgs{...} }
type FilterTagArrayInput interface {
	pulumi.Input

	ToFilterTagArrayOutput() FilterTagArrayOutput
	ToFilterTagArrayOutputWithContext(context.Context) FilterTagArrayOutput
}

type FilterTagArray []FilterTagInput

func (FilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (i FilterTagArray) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return i.ToFilterTagArrayOutputWithContext(context.Background())
}

func (i FilterTagArray) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagArrayOutput)
}

type FilterTagOutput struct{ *pulumi.OutputState }

func (FilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (o FilterTagOutput) ToFilterTagOutput() FilterTagOutput {
	return o
}

func (o FilterTagOutput) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return o
}

func (o FilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterTagArrayOutput struct{ *pulumi.OutputState }

func (FilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) Index(i pulumi.IntInput) FilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterTag {
		return vs[0].([]FilterTag)[vs[1].(int)]
	}).(FilterTagOutput)
}

type IPSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// IPSetTagInput is an input type that accepts IPSetTagArgs and IPSetTagOutput values.
// You can construct a concrete instance of `IPSetTagInput` via:
//
//          IPSetTagArgs{...}
type IPSetTagInput interface {
	pulumi.Input

	ToIPSetTagOutput() IPSetTagOutput
	ToIPSetTagOutputWithContext(context.Context) IPSetTagOutput
}

type IPSetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (IPSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (i IPSetTagArgs) ToIPSetTagOutput() IPSetTagOutput {
	return i.ToIPSetTagOutputWithContext(context.Background())
}

func (i IPSetTagArgs) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagOutput)
}

// IPSetTagArrayInput is an input type that accepts IPSetTagArray and IPSetTagArrayOutput values.
// You can construct a concrete instance of `IPSetTagArrayInput` via:
//
//          IPSetTagArray{ IPSetTagArgs{...} }
type IPSetTagArrayInput interface {
	pulumi.Input

	ToIPSetTagArrayOutput() IPSetTagArrayOutput
	ToIPSetTagArrayOutputWithContext(context.Context) IPSetTagArrayOutput
}

type IPSetTagArray []IPSetTagInput

func (IPSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (i IPSetTagArray) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return i.ToIPSetTagArrayOutputWithContext(context.Background())
}

func (i IPSetTagArray) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagArrayOutput)
}

type IPSetTagOutput struct{ *pulumi.OutputState }

func (IPSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (o IPSetTagOutput) ToIPSetTagOutput() IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IPSetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o IPSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IPSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type IPSetTagArrayOutput struct{ *pulumi.OutputState }

func (IPSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) Index(i pulumi.IntInput) IPSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPSetTag {
		return vs[0].([]IPSetTag)[vs[1].(int)]
	}).(IPSetTagOutput)
}

type ThreatIntelSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ThreatIntelSetTagInput is an input type that accepts ThreatIntelSetTagArgs and ThreatIntelSetTagOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagInput` via:
//
//          ThreatIntelSetTagArgs{...}
type ThreatIntelSetTagInput interface {
	pulumi.Input

	ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput
	ToThreatIntelSetTagOutputWithContext(context.Context) ThreatIntelSetTagOutput
}

type ThreatIntelSetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ThreatIntelSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTag)(nil)).Elem()
}

func (i ThreatIntelSetTagArgs) ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput {
	return i.ToThreatIntelSetTagOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagArgs) ToThreatIntelSetTagOutputWithContext(ctx context.Context) ThreatIntelSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagOutput)
}

// ThreatIntelSetTagArrayInput is an input type that accepts ThreatIntelSetTagArray and ThreatIntelSetTagArrayOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagArrayInput` via:
//
//          ThreatIntelSetTagArray{ ThreatIntelSetTagArgs{...} }
type ThreatIntelSetTagArrayInput interface {
	pulumi.Input

	ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput
	ToThreatIntelSetTagArrayOutputWithContext(context.Context) ThreatIntelSetTagArrayOutput
}

type ThreatIntelSetTagArray []ThreatIntelSetTagInput

func (ThreatIntelSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTag)(nil)).Elem()
}

func (i ThreatIntelSetTagArray) ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput {
	return i.ToThreatIntelSetTagArrayOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagArray) ToThreatIntelSetTagArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagArrayOutput)
}

type ThreatIntelSetTagOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTag)(nil)).Elem()
}

func (o ThreatIntelSetTagOutput) ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput {
	return o
}

func (o ThreatIntelSetTagOutput) ToThreatIntelSetTagOutputWithContext(ctx context.Context) ThreatIntelSetTagOutput {
	return o
}

func (o ThreatIntelSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ThreatIntelSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type ThreatIntelSetTagArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTag)(nil)).Elem()
}

func (o ThreatIntelSetTagArrayOutput) ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput {
	return o
}

func (o ThreatIntelSetTagArrayOutput) ToThreatIntelSetTagArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagArrayOutput {
	return o
}

func (o ThreatIntelSetTagArrayOutput) Index(i pulumi.IntInput) ThreatIntelSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelSetTag {
		return vs[0].([]ThreatIntelSetTag)[vs[1].(int)]
	}).(ThreatIntelSetTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNDataSourceConfigurationsInput)(nil)).Elem(), DetectorCFNDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNDataSourceConfigurationsPtrInput)(nil)).Elem(), DetectorCFNDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNKubernetesAuditLogsConfigurationInput)(nil)).Elem(), DetectorCFNKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNKubernetesAuditLogsConfigurationPtrInput)(nil)).Elem(), DetectorCFNKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNKubernetesConfigurationInput)(nil)).Elem(), DetectorCFNKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNKubernetesConfigurationPtrInput)(nil)).Elem(), DetectorCFNKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNS3LogsConfigurationInput)(nil)).Elem(), DetectorCFNS3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCFNS3LogsConfigurationPtrInput)(nil)).Elem(), DetectorCFNS3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagInput)(nil)).Elem(), DetectorTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagArrayInput)(nil)).Elem(), DetectorTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionPtrInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFindingCriteriaInput)(nil)).Elem(), FilterFindingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagInput)(nil)).Elem(), FilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagArrayInput)(nil)).Elem(), FilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSetTagInput)(nil)).Elem(), IPSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPSetTagArrayInput)(nil)).Elem(), IPSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagInput)(nil)).Elem(), ThreatIntelSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagArrayInput)(nil)).Elem(), ThreatIntelSetTagArray{})
	pulumi.RegisterOutputType(DetectorCFNDataSourceConfigurationsOutput{})
	pulumi.RegisterOutputType(DetectorCFNDataSourceConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(DetectorCFNKubernetesAuditLogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCFNKubernetesAuditLogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCFNKubernetesConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCFNKubernetesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCFNS3LogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCFNS3LogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorTagOutput{})
	pulumi.RegisterOutputType(DetectorTagArrayOutput{})
	pulumi.RegisterOutputType(FilterConditionOutput{})
	pulumi.RegisterOutputType(FilterConditionPtrOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaPtrOutput{})
	pulumi.RegisterOutputType(FilterTagOutput{})
	pulumi.RegisterOutputType(FilterTagArrayOutput{})
	pulumi.RegisterOutputType(IPSetTagOutput{})
	pulumi.RegisterOutputType(IPSetTagArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagArrayOutput{})
}
