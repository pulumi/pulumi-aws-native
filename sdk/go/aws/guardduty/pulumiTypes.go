// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DetectorCfnDataSourceConfigurations struct {
	Kubernetes        *DetectorCfnKubernetesConfiguration        `pulumi:"kubernetes"`
	MalwareProtection *DetectorCfnMalwareProtectionConfiguration `pulumi:"malwareProtection"`
	S3Logs            *DetectorCfns3LogsConfiguration            `pulumi:"s3Logs"`
}

// DetectorCfnDataSourceConfigurationsInput is an input type that accepts DetectorCfnDataSourceConfigurationsArgs and DetectorCfnDataSourceConfigurationsOutput values.
// You can construct a concrete instance of `DetectorCfnDataSourceConfigurationsInput` via:
//
//	DetectorCfnDataSourceConfigurationsArgs{...}
type DetectorCfnDataSourceConfigurationsInput interface {
	pulumi.Input

	ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput
	ToDetectorCfnDataSourceConfigurationsOutputWithContext(context.Context) DetectorCfnDataSourceConfigurationsOutput
}

type DetectorCfnDataSourceConfigurationsArgs struct {
	Kubernetes        DetectorCfnKubernetesConfigurationPtrInput        `pulumi:"kubernetes"`
	MalwareProtection DetectorCfnMalwareProtectionConfigurationPtrInput `pulumi:"malwareProtection"`
	S3Logs            DetectorCfns3LogsConfigurationPtrInput            `pulumi:"s3Logs"`
}

func (DetectorCfnDataSourceConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput {
	return i.ToDetectorCfnDataSourceConfigurationsOutputWithContext(context.Background())
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsOutput)
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i DetectorCfnDataSourceConfigurationsArgs) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsOutput).ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx)
}

// DetectorCfnDataSourceConfigurationsPtrInput is an input type that accepts DetectorCfnDataSourceConfigurationsArgs, DetectorCfnDataSourceConfigurationsPtr and DetectorCfnDataSourceConfigurationsPtrOutput values.
// You can construct a concrete instance of `DetectorCfnDataSourceConfigurationsPtrInput` via:
//
//	        DetectorCfnDataSourceConfigurationsArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnDataSourceConfigurationsPtrInput interface {
	pulumi.Input

	ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput
	ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Context) DetectorCfnDataSourceConfigurationsPtrOutput
}

type detectorCfnDataSourceConfigurationsPtrType DetectorCfnDataSourceConfigurationsArgs

func DetectorCfnDataSourceConfigurationsPtr(v *DetectorCfnDataSourceConfigurationsArgs) DetectorCfnDataSourceConfigurationsPtrInput {
	return (*detectorCfnDataSourceConfigurationsPtrType)(v)
}

func (*detectorCfnDataSourceConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (i *detectorCfnDataSourceConfigurationsPtrType) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return i.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (i *detectorCfnDataSourceConfigurationsPtrType) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

type DetectorCfnDataSourceConfigurationsOutput struct{ *pulumi.OutputState }

func (DetectorCfnDataSourceConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsOutput() DetectorCfnDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(context.Background())
}

func (o DetectorCfnDataSourceConfigurationsOutput) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnDataSourceConfigurations) *DetectorCfnDataSourceConfigurations {
		return &v
	}).(DetectorCfnDataSourceConfigurationsPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) Kubernetes() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfnKubernetesConfiguration { return v.Kubernetes }).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) MalwareProtection() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfnMalwareProtectionConfiguration {
		return v.MalwareProtection
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsOutput) S3Logs() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnDataSourceConfigurations) *DetectorCfns3LogsConfiguration { return v.S3Logs }).(DetectorCfns3LogsConfigurationPtrOutput)
}

type DetectorCfnDataSourceConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnDataSourceConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnDataSourceConfigurations)(nil)).Elem()
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) ToDetectorCfnDataSourceConfigurationsPtrOutput() DetectorCfnDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) ToDetectorCfnDataSourceConfigurationsPtrOutputWithContext(ctx context.Context) DetectorCfnDataSourceConfigurationsPtrOutput {
	return o
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) Elem() DetectorCfnDataSourceConfigurationsOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) DetectorCfnDataSourceConfigurations {
		if v != nil {
			return *v
		}
		var ret DetectorCfnDataSourceConfigurations
		return ret
	}).(DetectorCfnDataSourceConfigurationsOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) Kubernetes() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfnKubernetesConfiguration {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) MalwareProtection() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfnMalwareProtectionConfiguration {
		if v == nil {
			return nil
		}
		return v.MalwareProtection
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnDataSourceConfigurationsPtrOutput) S3Logs() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnDataSourceConfigurations) *DetectorCfns3LogsConfiguration {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(DetectorCfns3LogsConfigurationPtrOutput)
}

type DetectorCfnKubernetesAuditLogsConfiguration struct {
	Enable *bool `pulumi:"enable"`
}

// DetectorCfnKubernetesAuditLogsConfigurationInput is an input type that accepts DetectorCfnKubernetesAuditLogsConfigurationArgs and DetectorCfnKubernetesAuditLogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesAuditLogsConfigurationInput` via:
//
//	DetectorCfnKubernetesAuditLogsConfigurationArgs{...}
type DetectorCfnKubernetesAuditLogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput
	ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput
}

type DetectorCfnKubernetesAuditLogsConfigurationArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (DetectorCfnKubernetesAuditLogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationOutput)
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesAuditLogsConfigurationArgs) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationOutput).ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnKubernetesAuditLogsConfigurationPtrInput is an input type that accepts DetectorCfnKubernetesAuditLogsConfigurationArgs, DetectorCfnKubernetesAuditLogsConfigurationPtr and DetectorCfnKubernetesAuditLogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesAuditLogsConfigurationPtrInput` via:
//
//	        DetectorCfnKubernetesAuditLogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnKubernetesAuditLogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput
	ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput
}

type detectorCfnKubernetesAuditLogsConfigurationPtrType DetectorCfnKubernetesAuditLogsConfigurationArgs

func DetectorCfnKubernetesAuditLogsConfigurationPtr(v *DetectorCfnKubernetesAuditLogsConfigurationArgs) DetectorCfnKubernetesAuditLogsConfigurationPtrInput {
	return (*detectorCfnKubernetesAuditLogsConfigurationPtrType)(v)
}

func (*detectorCfnKubernetesAuditLogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (i *detectorCfnKubernetesAuditLogsConfigurationPtrType) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnKubernetesAuditLogsConfigurationPtrType) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCfnKubernetesAuditLogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesAuditLogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationOutput() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnKubernetesAuditLogsConfiguration) *DetectorCfnKubernetesAuditLogsConfiguration {
		return &v
	}).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

func (o DetectorCfnKubernetesAuditLogsConfigurationOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCfnKubernetesAuditLogsConfiguration) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type DetectorCfnKubernetesAuditLogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesAuditLogsConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutput() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) ToDetectorCfnKubernetesAuditLogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) Elem() DetectorCfnKubernetesAuditLogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesAuditLogsConfiguration) DetectorCfnKubernetesAuditLogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnKubernetesAuditLogsConfiguration
		return ret
	}).(DetectorCfnKubernetesAuditLogsConfigurationOutput)
}

func (o DetectorCfnKubernetesAuditLogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesAuditLogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorCfnKubernetesConfiguration struct {
	AuditLogs *DetectorCfnKubernetesAuditLogsConfiguration `pulumi:"auditLogs"`
}

// DetectorCfnKubernetesConfigurationInput is an input type that accepts DetectorCfnKubernetesConfigurationArgs and DetectorCfnKubernetesConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesConfigurationInput` via:
//
//	DetectorCfnKubernetesConfigurationArgs{...}
type DetectorCfnKubernetesConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput
	ToDetectorCfnKubernetesConfigurationOutputWithContext(context.Context) DetectorCfnKubernetesConfigurationOutput
}

type DetectorCfnKubernetesConfigurationArgs struct {
	AuditLogs DetectorCfnKubernetesAuditLogsConfigurationPtrInput `pulumi:"auditLogs"`
}

func (DetectorCfnKubernetesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput {
	return i.ToDetectorCfnKubernetesConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationOutput)
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnKubernetesConfigurationArgs) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationOutput).ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnKubernetesConfigurationPtrInput is an input type that accepts DetectorCfnKubernetesConfigurationArgs, DetectorCfnKubernetesConfigurationPtr and DetectorCfnKubernetesConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnKubernetesConfigurationPtrInput` via:
//
//	        DetectorCfnKubernetesConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnKubernetesConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput
	ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Context) DetectorCfnKubernetesConfigurationPtrOutput
}

type detectorCfnKubernetesConfigurationPtrType DetectorCfnKubernetesConfigurationArgs

func DetectorCfnKubernetesConfigurationPtr(v *DetectorCfnKubernetesConfigurationArgs) DetectorCfnKubernetesConfigurationPtrInput {
	return (*detectorCfnKubernetesConfigurationPtrType)(v)
}

func (*detectorCfnKubernetesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (i *detectorCfnKubernetesConfigurationPtrType) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return i.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnKubernetesConfigurationPtrType) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnKubernetesConfigurationPtrOutput)
}

type DetectorCfnKubernetesConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationOutput() DetectorCfnKubernetesConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnKubernetesConfigurationOutput) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnKubernetesConfiguration) *DetectorCfnKubernetesConfiguration {
		return &v
	}).(DetectorCfnKubernetesConfigurationPtrOutput)
}

func (o DetectorCfnKubernetesConfigurationOutput) AuditLogs() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnKubernetesConfiguration) *DetectorCfnKubernetesAuditLogsConfiguration {
		return v.AuditLogs
	}).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCfnKubernetesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnKubernetesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnKubernetesConfiguration)(nil)).Elem()
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) ToDetectorCfnKubernetesConfigurationPtrOutput() DetectorCfnKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) ToDetectorCfnKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnKubernetesConfigurationPtrOutput {
	return o
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) Elem() DetectorCfnKubernetesConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesConfiguration) DetectorCfnKubernetesConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnKubernetesConfiguration
		return ret
	}).(DetectorCfnKubernetesConfigurationOutput)
}

func (o DetectorCfnKubernetesConfigurationPtrOutput) AuditLogs() DetectorCfnKubernetesAuditLogsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnKubernetesConfiguration) *DetectorCfnKubernetesAuditLogsConfiguration {
		if v == nil {
			return nil
		}
		return v.AuditLogs
	}).(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput)
}

type DetectorCfnMalwareProtectionConfiguration struct {
	ScanEc2InstanceWithFindings *DetectorCfnScanEc2InstanceWithFindingsConfiguration `pulumi:"scanEc2InstanceWithFindings"`
}

// DetectorCfnMalwareProtectionConfigurationInput is an input type that accepts DetectorCfnMalwareProtectionConfigurationArgs and DetectorCfnMalwareProtectionConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnMalwareProtectionConfigurationInput` via:
//
//	DetectorCfnMalwareProtectionConfigurationArgs{...}
type DetectorCfnMalwareProtectionConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput
	ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(context.Context) DetectorCfnMalwareProtectionConfigurationOutput
}

type DetectorCfnMalwareProtectionConfigurationArgs struct {
	ScanEc2InstanceWithFindings DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput `pulumi:"scanEc2InstanceWithFindings"`
}

func (DetectorCfnMalwareProtectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationOutput)
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnMalwareProtectionConfigurationArgs) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationOutput).ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnMalwareProtectionConfigurationPtrInput is an input type that accepts DetectorCfnMalwareProtectionConfigurationArgs, DetectorCfnMalwareProtectionConfigurationPtr and DetectorCfnMalwareProtectionConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnMalwareProtectionConfigurationPtrInput` via:
//
//	        DetectorCfnMalwareProtectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnMalwareProtectionConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput
	ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput
}

type detectorCfnMalwareProtectionConfigurationPtrType DetectorCfnMalwareProtectionConfigurationArgs

func DetectorCfnMalwareProtectionConfigurationPtr(v *DetectorCfnMalwareProtectionConfigurationArgs) DetectorCfnMalwareProtectionConfigurationPtrInput {
	return (*detectorCfnMalwareProtectionConfigurationPtrType)(v)
}

func (*detectorCfnMalwareProtectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (i *detectorCfnMalwareProtectionConfigurationPtrType) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return i.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnMalwareProtectionConfigurationPtrType) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

type DetectorCfnMalwareProtectionConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnMalwareProtectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationOutput() DetectorCfnMalwareProtectionConfigurationOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnMalwareProtectionConfiguration) *DetectorCfnMalwareProtectionConfiguration {
		return &v
	}).(DetectorCfnMalwareProtectionConfigurationPtrOutput)
}

func (o DetectorCfnMalwareProtectionConfigurationOutput) ScanEc2InstanceWithFindings() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyT(func(v DetectorCfnMalwareProtectionConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		return v.ScanEc2InstanceWithFindings
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

type DetectorCfnMalwareProtectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnMalwareProtectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnMalwareProtectionConfiguration)(nil)).Elem()
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutput() DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ToDetectorCfnMalwareProtectionConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnMalwareProtectionConfigurationPtrOutput {
	return o
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) Elem() DetectorCfnMalwareProtectionConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnMalwareProtectionConfiguration) DetectorCfnMalwareProtectionConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnMalwareProtectionConfiguration
		return ret
	}).(DetectorCfnMalwareProtectionConfigurationOutput)
}

func (o DetectorCfnMalwareProtectionConfigurationPtrOutput) ScanEc2InstanceWithFindings() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyT(func(v *DetectorCfnMalwareProtectionConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		if v == nil {
			return nil
		}
		return v.ScanEc2InstanceWithFindings
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

type DetectorCfnScanEc2InstanceWithFindingsConfiguration struct {
	EbsVolumes *bool `pulumi:"ebsVolumes"`
}

// DetectorCfnScanEc2InstanceWithFindingsConfigurationInput is an input type that accepts DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs and DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfnScanEc2InstanceWithFindingsConfigurationInput` via:
//
//	DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{...}
type DetectorCfnScanEc2InstanceWithFindingsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput
	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs struct {
	EbsVolumes pulumi.BoolPtrInput `pulumi:"ebsVolumes"`
}

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput)
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput).ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput is an input type that accepts DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs, DetectorCfnScanEc2InstanceWithFindingsConfigurationPtr and DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput` via:
//
//	        DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput
	ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput
}

type detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs

func DetectorCfnScanEc2InstanceWithFindingsConfigurationPtr(v *DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput {
	return (*detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType)(v)
}

func (*detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (i *detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return i.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfnScanEc2InstanceWithFindingsConfigurationPtrType) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfnScanEc2InstanceWithFindingsConfiguration) *DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		return &v
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput)
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput) EbsVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCfnScanEc2InstanceWithFindingsConfiguration) *bool { return v.EbsVolumes }).(pulumi.BoolPtrOutput)
}

type DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfnScanEc2InstanceWithFindingsConfiguration)(nil)).Elem()
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput() DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) ToDetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput {
	return o
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) Elem() DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfnScanEc2InstanceWithFindingsConfiguration) DetectorCfnScanEc2InstanceWithFindingsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfnScanEc2InstanceWithFindingsConfiguration
		return ret
	}).(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput)
}

func (o DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput) EbsVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfnScanEc2InstanceWithFindingsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EbsVolumes
	}).(pulumi.BoolPtrOutput)
}

type DetectorCfns3LogsConfiguration struct {
	Enable *bool `pulumi:"enable"`
}

// DetectorCfns3LogsConfigurationInput is an input type that accepts DetectorCfns3LogsConfigurationArgs and DetectorCfns3LogsConfigurationOutput values.
// You can construct a concrete instance of `DetectorCfns3LogsConfigurationInput` via:
//
//	DetectorCfns3LogsConfigurationArgs{...}
type DetectorCfns3LogsConfigurationInput interface {
	pulumi.Input

	ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput
	ToDetectorCfns3LogsConfigurationOutputWithContext(context.Context) DetectorCfns3LogsConfigurationOutput
}

type DetectorCfns3LogsConfigurationArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (DetectorCfns3LogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput {
	return i.ToDetectorCfns3LogsConfigurationOutputWithContext(context.Background())
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationOutput)
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return i.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i DetectorCfns3LogsConfigurationArgs) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationOutput).ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx)
}

// DetectorCfns3LogsConfigurationPtrInput is an input type that accepts DetectorCfns3LogsConfigurationArgs, DetectorCfns3LogsConfigurationPtr and DetectorCfns3LogsConfigurationPtrOutput values.
// You can construct a concrete instance of `DetectorCfns3LogsConfigurationPtrInput` via:
//
//	        DetectorCfns3LogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DetectorCfns3LogsConfigurationPtrInput interface {
	pulumi.Input

	ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput
	ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Context) DetectorCfns3LogsConfigurationPtrOutput
}

type detectorCfns3LogsConfigurationPtrType DetectorCfns3LogsConfigurationArgs

func DetectorCfns3LogsConfigurationPtr(v *DetectorCfns3LogsConfigurationArgs) DetectorCfns3LogsConfigurationPtrInput {
	return (*detectorCfns3LogsConfigurationPtrType)(v)
}

func (*detectorCfns3LogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (i *detectorCfns3LogsConfigurationPtrType) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return i.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *detectorCfns3LogsConfigurationPtrType) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorCfns3LogsConfigurationPtrOutput)
}

type DetectorCfns3LogsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorCfns3LogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationOutput() DetectorCfns3LogsConfigurationOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return o.ToDetectorCfns3LogsConfigurationPtrOutputWithContext(context.Background())
}

func (o DetectorCfns3LogsConfigurationOutput) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DetectorCfns3LogsConfiguration) *DetectorCfns3LogsConfiguration {
		return &v
	}).(DetectorCfns3LogsConfigurationPtrOutput)
}

func (o DetectorCfns3LogsConfigurationOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorCfns3LogsConfiguration) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type DetectorCfns3LogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DetectorCfns3LogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorCfns3LogsConfiguration)(nil)).Elem()
}

func (o DetectorCfns3LogsConfigurationPtrOutput) ToDetectorCfns3LogsConfigurationPtrOutput() DetectorCfns3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationPtrOutput) ToDetectorCfns3LogsConfigurationPtrOutputWithContext(ctx context.Context) DetectorCfns3LogsConfigurationPtrOutput {
	return o
}

func (o DetectorCfns3LogsConfigurationPtrOutput) Elem() DetectorCfns3LogsConfigurationOutput {
	return o.ApplyT(func(v *DetectorCfns3LogsConfiguration) DetectorCfns3LogsConfiguration {
		if v != nil {
			return *v
		}
		var ret DetectorCfns3LogsConfiguration
		return ret
	}).(DetectorCfns3LogsConfigurationOutput)
}

func (o DetectorCfns3LogsConfigurationPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DetectorCfns3LogsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type DetectorFeatureAdditionalConfiguration struct {
	Name   *string `pulumi:"name"`
	Status *string `pulumi:"status"`
}

// DetectorFeatureAdditionalConfigurationInput is an input type that accepts DetectorFeatureAdditionalConfigurationArgs and DetectorFeatureAdditionalConfigurationOutput values.
// You can construct a concrete instance of `DetectorFeatureAdditionalConfigurationInput` via:
//
//	DetectorFeatureAdditionalConfigurationArgs{...}
type DetectorFeatureAdditionalConfigurationInput interface {
	pulumi.Input

	ToDetectorFeatureAdditionalConfigurationOutput() DetectorFeatureAdditionalConfigurationOutput
	ToDetectorFeatureAdditionalConfigurationOutputWithContext(context.Context) DetectorFeatureAdditionalConfigurationOutput
}

type DetectorFeatureAdditionalConfigurationArgs struct {
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DetectorFeatureAdditionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorFeatureAdditionalConfiguration)(nil)).Elem()
}

func (i DetectorFeatureAdditionalConfigurationArgs) ToDetectorFeatureAdditionalConfigurationOutput() DetectorFeatureAdditionalConfigurationOutput {
	return i.ToDetectorFeatureAdditionalConfigurationOutputWithContext(context.Background())
}

func (i DetectorFeatureAdditionalConfigurationArgs) ToDetectorFeatureAdditionalConfigurationOutputWithContext(ctx context.Context) DetectorFeatureAdditionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorFeatureAdditionalConfigurationOutput)
}

// DetectorFeatureAdditionalConfigurationArrayInput is an input type that accepts DetectorFeatureAdditionalConfigurationArray and DetectorFeatureAdditionalConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorFeatureAdditionalConfigurationArrayInput` via:
//
//	DetectorFeatureAdditionalConfigurationArray{ DetectorFeatureAdditionalConfigurationArgs{...} }
type DetectorFeatureAdditionalConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorFeatureAdditionalConfigurationArrayOutput() DetectorFeatureAdditionalConfigurationArrayOutput
	ToDetectorFeatureAdditionalConfigurationArrayOutputWithContext(context.Context) DetectorFeatureAdditionalConfigurationArrayOutput
}

type DetectorFeatureAdditionalConfigurationArray []DetectorFeatureAdditionalConfigurationInput

func (DetectorFeatureAdditionalConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorFeatureAdditionalConfiguration)(nil)).Elem()
}

func (i DetectorFeatureAdditionalConfigurationArray) ToDetectorFeatureAdditionalConfigurationArrayOutput() DetectorFeatureAdditionalConfigurationArrayOutput {
	return i.ToDetectorFeatureAdditionalConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorFeatureAdditionalConfigurationArray) ToDetectorFeatureAdditionalConfigurationArrayOutputWithContext(ctx context.Context) DetectorFeatureAdditionalConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorFeatureAdditionalConfigurationArrayOutput)
}

type DetectorFeatureAdditionalConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorFeatureAdditionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorFeatureAdditionalConfiguration)(nil)).Elem()
}

func (o DetectorFeatureAdditionalConfigurationOutput) ToDetectorFeatureAdditionalConfigurationOutput() DetectorFeatureAdditionalConfigurationOutput {
	return o
}

func (o DetectorFeatureAdditionalConfigurationOutput) ToDetectorFeatureAdditionalConfigurationOutputWithContext(ctx context.Context) DetectorFeatureAdditionalConfigurationOutput {
	return o
}

func (o DetectorFeatureAdditionalConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorFeatureAdditionalConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DetectorFeatureAdditionalConfigurationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorFeatureAdditionalConfiguration) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DetectorFeatureAdditionalConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorFeatureAdditionalConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorFeatureAdditionalConfiguration)(nil)).Elem()
}

func (o DetectorFeatureAdditionalConfigurationArrayOutput) ToDetectorFeatureAdditionalConfigurationArrayOutput() DetectorFeatureAdditionalConfigurationArrayOutput {
	return o
}

func (o DetectorFeatureAdditionalConfigurationArrayOutput) ToDetectorFeatureAdditionalConfigurationArrayOutputWithContext(ctx context.Context) DetectorFeatureAdditionalConfigurationArrayOutput {
	return o
}

func (o DetectorFeatureAdditionalConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorFeatureAdditionalConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorFeatureAdditionalConfiguration {
		return vs[0].([]DetectorFeatureAdditionalConfiguration)[vs[1].(int)]
	}).(DetectorFeatureAdditionalConfigurationOutput)
}

type DetectorFeatureConfigurations struct {
	AdditionalConfiguration []DetectorFeatureAdditionalConfiguration `pulumi:"additionalConfiguration"`
	Name                    *string                                  `pulumi:"name"`
	Status                  *string                                  `pulumi:"status"`
}

// DetectorFeatureConfigurationsInput is an input type that accepts DetectorFeatureConfigurationsArgs and DetectorFeatureConfigurationsOutput values.
// You can construct a concrete instance of `DetectorFeatureConfigurationsInput` via:
//
//	DetectorFeatureConfigurationsArgs{...}
type DetectorFeatureConfigurationsInput interface {
	pulumi.Input

	ToDetectorFeatureConfigurationsOutput() DetectorFeatureConfigurationsOutput
	ToDetectorFeatureConfigurationsOutputWithContext(context.Context) DetectorFeatureConfigurationsOutput
}

type DetectorFeatureConfigurationsArgs struct {
	AdditionalConfiguration DetectorFeatureAdditionalConfigurationArrayInput `pulumi:"additionalConfiguration"`
	Name                    pulumi.StringPtrInput                            `pulumi:"name"`
	Status                  pulumi.StringPtrInput                            `pulumi:"status"`
}

func (DetectorFeatureConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorFeatureConfigurations)(nil)).Elem()
}

func (i DetectorFeatureConfigurationsArgs) ToDetectorFeatureConfigurationsOutput() DetectorFeatureConfigurationsOutput {
	return i.ToDetectorFeatureConfigurationsOutputWithContext(context.Background())
}

func (i DetectorFeatureConfigurationsArgs) ToDetectorFeatureConfigurationsOutputWithContext(ctx context.Context) DetectorFeatureConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorFeatureConfigurationsOutput)
}

// DetectorFeatureConfigurationsArrayInput is an input type that accepts DetectorFeatureConfigurationsArray and DetectorFeatureConfigurationsArrayOutput values.
// You can construct a concrete instance of `DetectorFeatureConfigurationsArrayInput` via:
//
//	DetectorFeatureConfigurationsArray{ DetectorFeatureConfigurationsArgs{...} }
type DetectorFeatureConfigurationsArrayInput interface {
	pulumi.Input

	ToDetectorFeatureConfigurationsArrayOutput() DetectorFeatureConfigurationsArrayOutput
	ToDetectorFeatureConfigurationsArrayOutputWithContext(context.Context) DetectorFeatureConfigurationsArrayOutput
}

type DetectorFeatureConfigurationsArray []DetectorFeatureConfigurationsInput

func (DetectorFeatureConfigurationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorFeatureConfigurations)(nil)).Elem()
}

func (i DetectorFeatureConfigurationsArray) ToDetectorFeatureConfigurationsArrayOutput() DetectorFeatureConfigurationsArrayOutput {
	return i.ToDetectorFeatureConfigurationsArrayOutputWithContext(context.Background())
}

func (i DetectorFeatureConfigurationsArray) ToDetectorFeatureConfigurationsArrayOutputWithContext(ctx context.Context) DetectorFeatureConfigurationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorFeatureConfigurationsArrayOutput)
}

type DetectorFeatureConfigurationsOutput struct{ *pulumi.OutputState }

func (DetectorFeatureConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorFeatureConfigurations)(nil)).Elem()
}

func (o DetectorFeatureConfigurationsOutput) ToDetectorFeatureConfigurationsOutput() DetectorFeatureConfigurationsOutput {
	return o
}

func (o DetectorFeatureConfigurationsOutput) ToDetectorFeatureConfigurationsOutputWithContext(ctx context.Context) DetectorFeatureConfigurationsOutput {
	return o
}

func (o DetectorFeatureConfigurationsOutput) AdditionalConfiguration() DetectorFeatureAdditionalConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorFeatureConfigurations) []DetectorFeatureAdditionalConfiguration {
		return v.AdditionalConfiguration
	}).(DetectorFeatureAdditionalConfigurationArrayOutput)
}

func (o DetectorFeatureConfigurationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorFeatureConfigurations) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DetectorFeatureConfigurationsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorFeatureConfigurations) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DetectorFeatureConfigurationsArrayOutput struct{ *pulumi.OutputState }

func (DetectorFeatureConfigurationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorFeatureConfigurations)(nil)).Elem()
}

func (o DetectorFeatureConfigurationsArrayOutput) ToDetectorFeatureConfigurationsArrayOutput() DetectorFeatureConfigurationsArrayOutput {
	return o
}

func (o DetectorFeatureConfigurationsArrayOutput) ToDetectorFeatureConfigurationsArrayOutputWithContext(ctx context.Context) DetectorFeatureConfigurationsArrayOutput {
	return o
}

func (o DetectorFeatureConfigurationsArrayOutput) Index(i pulumi.IntInput) DetectorFeatureConfigurationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorFeatureConfigurations {
		return vs[0].([]DetectorFeatureConfigurations)[vs[1].(int)]
	}).(DetectorFeatureConfigurationsOutput)
}

type DetectorTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DetectorTagInput is an input type that accepts DetectorTagArgs and DetectorTagOutput values.
// You can construct a concrete instance of `DetectorTagInput` via:
//
//	DetectorTagArgs{...}
type DetectorTagInput interface {
	pulumi.Input

	ToDetectorTagOutput() DetectorTagOutput
	ToDetectorTagOutputWithContext(context.Context) DetectorTagOutput
}

type DetectorTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTag)(nil)).Elem()
}

func (i DetectorTagArgs) ToDetectorTagOutput() DetectorTagOutput {
	return i.ToDetectorTagOutputWithContext(context.Background())
}

func (i DetectorTagArgs) ToDetectorTagOutputWithContext(ctx context.Context) DetectorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagOutput)
}

// DetectorTagArrayInput is an input type that accepts DetectorTagArray and DetectorTagArrayOutput values.
// You can construct a concrete instance of `DetectorTagArrayInput` via:
//
//	DetectorTagArray{ DetectorTagArgs{...} }
type DetectorTagArrayInput interface {
	pulumi.Input

	ToDetectorTagArrayOutput() DetectorTagArrayOutput
	ToDetectorTagArrayOutputWithContext(context.Context) DetectorTagArrayOutput
}

type DetectorTagArray []DetectorTagInput

func (DetectorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTag)(nil)).Elem()
}

func (i DetectorTagArray) ToDetectorTagArrayOutput() DetectorTagArrayOutput {
	return i.ToDetectorTagArrayOutputWithContext(context.Background())
}

func (i DetectorTagArray) ToDetectorTagArrayOutputWithContext(ctx context.Context) DetectorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorTagArrayOutput)
}

type DetectorTagOutput struct{ *pulumi.OutputState }

func (DetectorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorTag)(nil)).Elem()
}

func (o DetectorTagOutput) ToDetectorTagOutput() DetectorTagOutput {
	return o
}

func (o DetectorTagOutput) ToDetectorTagOutputWithContext(ctx context.Context) DetectorTagOutput {
	return o
}

func (o DetectorTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DetectorTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorTag) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorTagArrayOutput struct{ *pulumi.OutputState }

func (DetectorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorTag)(nil)).Elem()
}

func (o DetectorTagArrayOutput) ToDetectorTagArrayOutput() DetectorTagArrayOutput {
	return o
}

func (o DetectorTagArrayOutput) ToDetectorTagArrayOutputWithContext(ctx context.Context) DetectorTagArrayOutput {
	return o
}

func (o DetectorTagArrayOutput) Index(i pulumi.IntInput) DetectorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorTag {
		return vs[0].([]DetectorTag)[vs[1].(int)]
	}).(DetectorTagOutput)
}

type FilterCondition struct {
	Eq                 []string `pulumi:"eq"`
	Equals             []string `pulumi:"equals"`
	GreaterThan        *int     `pulumi:"greaterThan"`
	GreaterThanOrEqual *int     `pulumi:"greaterThanOrEqual"`
	Gt                 *int     `pulumi:"gt"`
	Gte                *int     `pulumi:"gte"`
	LessThan           *int     `pulumi:"lessThan"`
	LessThanOrEqual    *int     `pulumi:"lessThanOrEqual"`
	Lt                 *int     `pulumi:"lt"`
	Lte                *int     `pulumi:"lte"`
	Neq                []string `pulumi:"neq"`
	NotEquals          []string `pulumi:"notEquals"`
}

// FilterConditionInput is an input type that accepts FilterConditionArgs and FilterConditionOutput values.
// You can construct a concrete instance of `FilterConditionInput` via:
//
//	FilterConditionArgs{...}
type FilterConditionInput interface {
	pulumi.Input

	ToFilterConditionOutput() FilterConditionOutput
	ToFilterConditionOutputWithContext(context.Context) FilterConditionOutput
}

type FilterConditionArgs struct {
	Eq                 pulumi.StringArrayInput `pulumi:"eq"`
	Equals             pulumi.StringArrayInput `pulumi:"equals"`
	GreaterThan        pulumi.IntPtrInput      `pulumi:"greaterThan"`
	GreaterThanOrEqual pulumi.IntPtrInput      `pulumi:"greaterThanOrEqual"`
	Gt                 pulumi.IntPtrInput      `pulumi:"gt"`
	Gte                pulumi.IntPtrInput      `pulumi:"gte"`
	LessThan           pulumi.IntPtrInput      `pulumi:"lessThan"`
	LessThanOrEqual    pulumi.IntPtrInput      `pulumi:"lessThanOrEqual"`
	Lt                 pulumi.IntPtrInput      `pulumi:"lt"`
	Lte                pulumi.IntPtrInput      `pulumi:"lte"`
	Neq                pulumi.StringArrayInput `pulumi:"neq"`
	NotEquals          pulumi.StringArrayInput `pulumi:"notEquals"`
}

func (FilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (i FilterConditionArgs) ToFilterConditionOutput() FilterConditionOutput {
	return i.ToFilterConditionOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput)
}

func (i FilterConditionArgs) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i FilterConditionArgs) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionOutput).ToFilterConditionPtrOutputWithContext(ctx)
}

// FilterConditionPtrInput is an input type that accepts FilterConditionArgs, FilterConditionPtr and FilterConditionPtrOutput values.
// You can construct a concrete instance of `FilterConditionPtrInput` via:
//
//	        FilterConditionArgs{...}
//
//	or:
//
//	        nil
type FilterConditionPtrInput interface {
	pulumi.Input

	ToFilterConditionPtrOutput() FilterConditionPtrOutput
	ToFilterConditionPtrOutputWithContext(context.Context) FilterConditionPtrOutput
}

type filterConditionPtrType FilterConditionArgs

func FilterConditionPtr(v *FilterConditionArgs) FilterConditionPtrInput {
	return (*filterConditionPtrType)(v)
}

func (*filterConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return i.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (i *filterConditionPtrType) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterConditionPtrOutput)
}

type FilterConditionOutput struct{ *pulumi.OutputState }

func (FilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCondition)(nil)).Elem()
}

func (o FilterConditionOutput) ToFilterConditionOutput() FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionOutputWithContext(ctx context.Context) FilterConditionOutput {
	return o
}

func (o FilterConditionOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o.ToFilterConditionPtrOutputWithContext(context.Background())
}

func (o FilterConditionOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterCondition) *FilterCondition {
		return &v
	}).(FilterConditionPtrOutput)
}

func (o FilterConditionOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Eq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Equals }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.GreaterThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Gte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThan }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.LessThanOrEqual }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lt }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterCondition) *int { return v.Lte }).(pulumi.IntPtrOutput)
}

func (o FilterConditionOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.Neq }).(pulumi.StringArrayOutput)
}

func (o FilterConditionOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterCondition) []string { return v.NotEquals }).(pulumi.StringArrayOutput)
}

type FilterConditionPtrOutput struct{ *pulumi.OutputState }

func (FilterConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCondition)(nil)).Elem()
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutput() FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) ToFilterConditionPtrOutputWithContext(ctx context.Context) FilterConditionPtrOutput {
	return o
}

func (o FilterConditionPtrOutput) Elem() FilterConditionOutput {
	return o.ApplyT(func(v *FilterCondition) FilterCondition {
		if v != nil {
			return *v
		}
		var ret FilterCondition
		return ret
	}).(FilterConditionOutput)
}

func (o FilterConditionPtrOutput) Eq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Eq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) Equals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Equals
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) GreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) GreaterThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.GreaterThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Gte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Gte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThan
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) LessThanOrEqual() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.LessThanOrEqual
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lt
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Lte() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FilterCondition) *int {
		if v == nil {
			return nil
		}
		return v.Lte
	}).(pulumi.IntPtrOutput)
}

func (o FilterConditionPtrOutput) Neq() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.Neq
	}).(pulumi.StringArrayOutput)
}

func (o FilterConditionPtrOutput) NotEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterCondition) []string {
		if v == nil {
			return nil
		}
		return v.NotEquals
	}).(pulumi.StringArrayOutput)
}

type FilterFindingCriteria struct {
	Criterion interface{}      `pulumi:"criterion"`
	ItemType  *FilterCondition `pulumi:"itemType"`
}

// FilterFindingCriteriaInput is an input type that accepts FilterFindingCriteriaArgs and FilterFindingCriteriaOutput values.
// You can construct a concrete instance of `FilterFindingCriteriaInput` via:
//
//	FilterFindingCriteriaArgs{...}
type FilterFindingCriteriaInput interface {
	pulumi.Input

	ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput
	ToFilterFindingCriteriaOutputWithContext(context.Context) FilterFindingCriteriaOutput
}

type FilterFindingCriteriaArgs struct {
	Criterion pulumi.Input            `pulumi:"criterion"`
	ItemType  FilterConditionPtrInput `pulumi:"itemType"`
}

func (FilterFindingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return i.ToFilterFindingCriteriaOutputWithContext(context.Background())
}

func (i FilterFindingCriteriaArgs) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFindingCriteriaOutput)
}

type FilterFindingCriteriaOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutput() FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) ToFilterFindingCriteriaOutputWithContext(ctx context.Context) FilterFindingCriteriaOutput {
	return o
}

func (o FilterFindingCriteriaOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v FilterFindingCriteria) interface{} { return v.Criterion }).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v FilterFindingCriteria) *FilterCondition { return v.ItemType }).(FilterConditionPtrOutput)
}

type FilterFindingCriteriaPtrOutput struct{ *pulumi.OutputState }

func (FilterFindingCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFindingCriteria)(nil)).Elem()
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutput() FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) ToFilterFindingCriteriaPtrOutputWithContext(ctx context.Context) FilterFindingCriteriaPtrOutput {
	return o
}

func (o FilterFindingCriteriaPtrOutput) Elem() FilterFindingCriteriaOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) FilterFindingCriteria {
		if v != nil {
			return *v
		}
		var ret FilterFindingCriteria
		return ret
	}).(FilterFindingCriteriaOutput)
}

func (o FilterFindingCriteriaPtrOutput) Criterion() pulumi.AnyOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) interface{} {
		if v == nil {
			return nil
		}
		return v.Criterion
	}).(pulumi.AnyOutput)
}

func (o FilterFindingCriteriaPtrOutput) ItemType() FilterConditionPtrOutput {
	return o.ApplyT(func(v *FilterFindingCriteria) *FilterCondition {
		if v == nil {
			return nil
		}
		return v.ItemType
	}).(FilterConditionPtrOutput)
}

type FilterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FilterTagInput is an input type that accepts FilterTagArgs and FilterTagOutput values.
// You can construct a concrete instance of `FilterTagInput` via:
//
//	FilterTagArgs{...}
type FilterTagInput interface {
	pulumi.Input

	ToFilterTagOutput() FilterTagOutput
	ToFilterTagOutputWithContext(context.Context) FilterTagOutput
}

type FilterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (i FilterTagArgs) ToFilterTagOutput() FilterTagOutput {
	return i.ToFilterTagOutputWithContext(context.Background())
}

func (i FilterTagArgs) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagOutput)
}

// FilterTagArrayInput is an input type that accepts FilterTagArray and FilterTagArrayOutput values.
// You can construct a concrete instance of `FilterTagArrayInput` via:
//
//	FilterTagArray{ FilterTagArgs{...} }
type FilterTagArrayInput interface {
	pulumi.Input

	ToFilterTagArrayOutput() FilterTagArrayOutput
	ToFilterTagArrayOutputWithContext(context.Context) FilterTagArrayOutput
}

type FilterTagArray []FilterTagInput

func (FilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (i FilterTagArray) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return i.ToFilterTagArrayOutputWithContext(context.Background())
}

func (i FilterTagArray) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterTagArrayOutput)
}

type FilterTagOutput struct{ *pulumi.OutputState }

func (FilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterTag)(nil)).Elem()
}

func (o FilterTagOutput) ToFilterTagOutput() FilterTagOutput {
	return o
}

func (o FilterTagOutput) ToFilterTagOutputWithContext(ctx context.Context) FilterTagOutput {
	return o
}

func (o FilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterTagArrayOutput struct{ *pulumi.OutputState }

func (FilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterTag)(nil)).Elem()
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutput() FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) ToFilterTagArrayOutputWithContext(ctx context.Context) FilterTagArrayOutput {
	return o
}

func (o FilterTagArrayOutput) Index(i pulumi.IntInput) FilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterTag {
		return vs[0].([]FilterTag)[vs[1].(int)]
	}).(FilterTagOutput)
}

type IpSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// IpSetTagInput is an input type that accepts IpSetTagArgs and IpSetTagOutput values.
// You can construct a concrete instance of `IpSetTagInput` via:
//
//	IpSetTagArgs{...}
type IpSetTagInput interface {
	pulumi.Input

	ToIpSetTagOutput() IpSetTagOutput
	ToIpSetTagOutputWithContext(context.Context) IpSetTagOutput
}

type IpSetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetTag)(nil)).Elem()
}

func (i IpSetTagArgs) ToIpSetTagOutput() IpSetTagOutput {
	return i.ToIpSetTagOutputWithContext(context.Background())
}

func (i IpSetTagArgs) ToIpSetTagOutputWithContext(ctx context.Context) IpSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetTagOutput)
}

// IpSetTagArrayInput is an input type that accepts IpSetTagArray and IpSetTagArrayOutput values.
// You can construct a concrete instance of `IpSetTagArrayInput` via:
//
//	IpSetTagArray{ IpSetTagArgs{...} }
type IpSetTagArrayInput interface {
	pulumi.Input

	ToIpSetTagArrayOutput() IpSetTagArrayOutput
	ToIpSetTagArrayOutputWithContext(context.Context) IpSetTagArrayOutput
}

type IpSetTagArray []IpSetTagInput

func (IpSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetTag)(nil)).Elem()
}

func (i IpSetTagArray) ToIpSetTagArrayOutput() IpSetTagArrayOutput {
	return i.ToIpSetTagArrayOutputWithContext(context.Background())
}

func (i IpSetTagArray) ToIpSetTagArrayOutputWithContext(ctx context.Context) IpSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetTagArrayOutput)
}

type IpSetTagOutput struct{ *pulumi.OutputState }

func (IpSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetTag)(nil)).Elem()
}

func (o IpSetTagOutput) ToIpSetTagOutput() IpSetTagOutput {
	return o
}

func (o IpSetTagOutput) ToIpSetTagOutputWithContext(ctx context.Context) IpSetTagOutput {
	return o
}

func (o IpSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o IpSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type IpSetTagArrayOutput struct{ *pulumi.OutputState }

func (IpSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetTag)(nil)).Elem()
}

func (o IpSetTagArrayOutput) ToIpSetTagArrayOutput() IpSetTagArrayOutput {
	return o
}

func (o IpSetTagArrayOutput) ToIpSetTagArrayOutputWithContext(ctx context.Context) IpSetTagArrayOutput {
	return o
}

func (o IpSetTagArrayOutput) Index(i pulumi.IntInput) IpSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetTag {
		return vs[0].([]IpSetTag)[vs[1].(int)]
	}).(IpSetTagOutput)
}

type ThreatIntelSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ThreatIntelSetTagInput is an input type that accepts ThreatIntelSetTagArgs and ThreatIntelSetTagOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagInput` via:
//
//	ThreatIntelSetTagArgs{...}
type ThreatIntelSetTagInput interface {
	pulumi.Input

	ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput
	ToThreatIntelSetTagOutputWithContext(context.Context) ThreatIntelSetTagOutput
}

type ThreatIntelSetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ThreatIntelSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTag)(nil)).Elem()
}

func (i ThreatIntelSetTagArgs) ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput {
	return i.ToThreatIntelSetTagOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagArgs) ToThreatIntelSetTagOutputWithContext(ctx context.Context) ThreatIntelSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagOutput)
}

// ThreatIntelSetTagArrayInput is an input type that accepts ThreatIntelSetTagArray and ThreatIntelSetTagArrayOutput values.
// You can construct a concrete instance of `ThreatIntelSetTagArrayInput` via:
//
//	ThreatIntelSetTagArray{ ThreatIntelSetTagArgs{...} }
type ThreatIntelSetTagArrayInput interface {
	pulumi.Input

	ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput
	ToThreatIntelSetTagArrayOutputWithContext(context.Context) ThreatIntelSetTagArrayOutput
}

type ThreatIntelSetTagArray []ThreatIntelSetTagInput

func (ThreatIntelSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTag)(nil)).Elem()
}

func (i ThreatIntelSetTagArray) ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput {
	return i.ToThreatIntelSetTagArrayOutputWithContext(context.Background())
}

func (i ThreatIntelSetTagArray) ToThreatIntelSetTagArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelSetTagArrayOutput)
}

type ThreatIntelSetTagOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelSetTag)(nil)).Elem()
}

func (o ThreatIntelSetTagOutput) ToThreatIntelSetTagOutput() ThreatIntelSetTagOutput {
	return o
}

func (o ThreatIntelSetTagOutput) ToThreatIntelSetTagOutputWithContext(ctx context.Context) ThreatIntelSetTagOutput {
	return o
}

func (o ThreatIntelSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ThreatIntelSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ThreatIntelSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type ThreatIntelSetTagArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelSetTag)(nil)).Elem()
}

func (o ThreatIntelSetTagArrayOutput) ToThreatIntelSetTagArrayOutput() ThreatIntelSetTagArrayOutput {
	return o
}

func (o ThreatIntelSetTagArrayOutput) ToThreatIntelSetTagArrayOutputWithContext(ctx context.Context) ThreatIntelSetTagArrayOutput {
	return o
}

func (o ThreatIntelSetTagArrayOutput) Index(i pulumi.IntInput) ThreatIntelSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelSetTag {
		return vs[0].([]ThreatIntelSetTag)[vs[1].(int)]
	}).(ThreatIntelSetTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnDataSourceConfigurationsInput)(nil)).Elem(), DetectorCfnDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnDataSourceConfigurationsPtrInput)(nil)).Elem(), DetectorCfnDataSourceConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfigurationInput)(nil)).Elem(), DetectorCfnKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesAuditLogsConfigurationPtrInput)(nil)).Elem(), DetectorCfnKubernetesAuditLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesConfigurationInput)(nil)).Elem(), DetectorCfnKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnKubernetesConfigurationPtrInput)(nil)).Elem(), DetectorCfnKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnMalwareProtectionConfigurationInput)(nil)).Elem(), DetectorCfnMalwareProtectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnMalwareProtectionConfigurationPtrInput)(nil)).Elem(), DetectorCfnMalwareProtectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfigurationInput)(nil)).Elem(), DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrInput)(nil)).Elem(), DetectorCfnScanEc2InstanceWithFindingsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfns3LogsConfigurationInput)(nil)).Elem(), DetectorCfns3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorCfns3LogsConfigurationPtrInput)(nil)).Elem(), DetectorCfns3LogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorFeatureAdditionalConfigurationInput)(nil)).Elem(), DetectorFeatureAdditionalConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorFeatureAdditionalConfigurationArrayInput)(nil)).Elem(), DetectorFeatureAdditionalConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorFeatureConfigurationsInput)(nil)).Elem(), DetectorFeatureConfigurationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorFeatureConfigurationsArrayInput)(nil)).Elem(), DetectorFeatureConfigurationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagInput)(nil)).Elem(), DetectorTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorTagArrayInput)(nil)).Elem(), DetectorTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterConditionPtrInput)(nil)).Elem(), FilterConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFindingCriteriaInput)(nil)).Elem(), FilterFindingCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagInput)(nil)).Elem(), FilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterTagArrayInput)(nil)).Elem(), FilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetTagInput)(nil)).Elem(), IpSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetTagArrayInput)(nil)).Elem(), IpSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagInput)(nil)).Elem(), ThreatIntelSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelSetTagArrayInput)(nil)).Elem(), ThreatIntelSetTagArray{})
	pulumi.RegisterOutputType(DetectorCfnDataSourceConfigurationsOutput{})
	pulumi.RegisterOutputType(DetectorCfnDataSourceConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesAuditLogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesAuditLogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnKubernetesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnMalwareProtectionConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnMalwareProtectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfnScanEc2InstanceWithFindingsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfnScanEc2InstanceWithFindingsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorCfns3LogsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorCfns3LogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DetectorFeatureAdditionalConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorFeatureAdditionalConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorFeatureConfigurationsOutput{})
	pulumi.RegisterOutputType(DetectorFeatureConfigurationsArrayOutput{})
	pulumi.RegisterOutputType(DetectorTagOutput{})
	pulumi.RegisterOutputType(DetectorTagArrayOutput{})
	pulumi.RegisterOutputType(FilterConditionOutput{})
	pulumi.RegisterOutputType(FilterConditionPtrOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaOutput{})
	pulumi.RegisterOutputType(FilterFindingCriteriaPtrOutput{})
	pulumi.RegisterOutputType(FilterTagOutput{})
	pulumi.RegisterOutputType(FilterTagArrayOutput{})
	pulumi.RegisterOutputType(IpSetTagOutput{})
	pulumi.RegisterOutputType(IpSetTagArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagOutput{})
	pulumi.RegisterOutputType(ThreatIntelSetTagArrayOutput{})
}
