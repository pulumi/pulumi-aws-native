// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GuardDuty::MalwareProtectionPlan
type MalwareProtectionPlan struct {
	pulumi.CustomResourceState

	// Information about whether the tags will be added to the S3 object after scanning.
	Actions MalwareProtectionPlanCfnActionsPtrOutput `pulumi:"actions"`
	// Amazon Resource Name (ARN) of the protected resource.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The timestamp when the Malware Protection plan resource was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A unique identifier associated with Malware Protection plan resource.
	MalwareProtectionPlanId pulumi.StringOutput `pulumi:"malwareProtectionPlanId"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
	ProtectedResource MalwareProtectionPlanCfnProtectedResourceOutput `pulumi:"protectedResource"`
	// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role pulumi.StringOutput `pulumi:"role"`
	// Malware Protection plan status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Information about the issue code and message associated to the status of your Malware Protection plan.
	StatusReasons MalwareProtectionPlanCfnStatusReasonsArrayOutput `pulumi:"statusReasons"`
	// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewMalwareProtectionPlan registers a new resource with the given unique name, arguments, and options.
func NewMalwareProtectionPlan(ctx *pulumi.Context,
	name string, args *MalwareProtectionPlanArgs, opts ...pulumi.ResourceOption) (*MalwareProtectionPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProtectedResource == nil {
		return nil, errors.New("invalid value for required argument 'ProtectedResource'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MalwareProtectionPlan
	err := ctx.RegisterResource("aws-native:guardduty:MalwareProtectionPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMalwareProtectionPlan gets an existing MalwareProtectionPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMalwareProtectionPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MalwareProtectionPlanState, opts ...pulumi.ResourceOption) (*MalwareProtectionPlan, error) {
	var resource MalwareProtectionPlan
	err := ctx.ReadResource("aws-native:guardduty:MalwareProtectionPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MalwareProtectionPlan resources.
type malwareProtectionPlanState struct {
}

type MalwareProtectionPlanState struct {
}

func (MalwareProtectionPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*malwareProtectionPlanState)(nil)).Elem()
}

type malwareProtectionPlanArgs struct {
	// Information about whether the tags will be added to the S3 object after scanning.
	Actions *MalwareProtectionPlanCfnActions `pulumi:"actions"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
	ProtectedResource MalwareProtectionPlanCfnProtectedResource `pulumi:"protectedResource"`
	// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role string `pulumi:"role"`
	// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a MalwareProtectionPlan resource.
type MalwareProtectionPlanArgs struct {
	// Information about whether the tags will be added to the S3 object after scanning.
	Actions MalwareProtectionPlanCfnActionsPtrInput
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
	ProtectedResource MalwareProtectionPlanCfnProtectedResourceInput
	// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role pulumi.StringInput
	// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
	Tags aws.TagArrayInput
}

func (MalwareProtectionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*malwareProtectionPlanArgs)(nil)).Elem()
}

type MalwareProtectionPlanInput interface {
	pulumi.Input

	ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput
	ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput
}

func (*MalwareProtectionPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareProtectionPlan)(nil)).Elem()
}

func (i *MalwareProtectionPlan) ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput {
	return i.ToMalwareProtectionPlanOutputWithContext(context.Background())
}

func (i *MalwareProtectionPlan) ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareProtectionPlanOutput)
}

type MalwareProtectionPlanOutput struct{ *pulumi.OutputState }

func (MalwareProtectionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareProtectionPlan)(nil)).Elem()
}

func (o MalwareProtectionPlanOutput) ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput {
	return o
}

func (o MalwareProtectionPlanOutput) ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput {
	return o
}

// Information about whether the tags will be added to the S3 object after scanning.
func (o MalwareProtectionPlanOutput) Actions() MalwareProtectionPlanCfnActionsPtrOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) MalwareProtectionPlanCfnActionsPtrOutput { return v.Actions }).(MalwareProtectionPlanCfnActionsPtrOutput)
}

// Amazon Resource Name (ARN) of the protected resource.
func (o MalwareProtectionPlanOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The timestamp when the Malware Protection plan resource was created.
func (o MalwareProtectionPlanOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A unique identifier associated with Malware Protection plan resource.
func (o MalwareProtectionPlanOutput) MalwareProtectionPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.MalwareProtectionPlanId }).(pulumi.StringOutput)
}

// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource.
func (o MalwareProtectionPlanOutput) ProtectedResource() MalwareProtectionPlanCfnProtectedResourceOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) MalwareProtectionPlanCfnProtectedResourceOutput {
		return v.ProtectedResource
	}).(MalwareProtectionPlanCfnProtectedResourceOutput)
}

// IAM role that includes the permissions required to scan and add tags to the associated protected resource.
func (o MalwareProtectionPlanOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// Malware Protection plan status.
func (o MalwareProtectionPlanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Information about the issue code and message associated to the status of your Malware Protection plan.
func (o MalwareProtectionPlanOutput) StatusReasons() MalwareProtectionPlanCfnStatusReasonsArrayOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) MalwareProtectionPlanCfnStatusReasonsArrayOutput {
		return v.StatusReasons
	}).(MalwareProtectionPlanCfnStatusReasonsArrayOutput)
}

// The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
func (o MalwareProtectionPlanOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MalwareProtectionPlanInput)(nil)).Elem(), &MalwareProtectionPlan{})
	pulumi.RegisterOutputType(MalwareProtectionPlanOutput{})
}
