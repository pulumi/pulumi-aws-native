// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesinstances

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::WorkspacesInstances::WorkspaceInstance
type WorkspaceInstance struct {
	pulumi.CustomResourceState

	Ec2ManagedInstance WorkspaceInstanceEc2ManagedInstanceOutput `pulumi:"ec2ManagedInstance"`
	ManagedInstance    ManagedInstancePropertiesPtrOutput        `pulumi:"managedInstance"`
	// The current state of the workspace instance
	ProvisionState WorkspaceInstanceProvisionStateOutput `pulumi:"provisionState"`
	Tags           aws.TagArrayOutput                    `pulumi:"tags"`
	// Unique identifier for the workspace instance
	WorkspaceInstanceId pulumi.StringOutput `pulumi:"workspaceInstanceId"`
}

// NewWorkspaceInstance registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceInstance(ctx *pulumi.Context,
	name string, args *WorkspaceInstanceArgs, opts ...pulumi.ResourceOption) (*WorkspaceInstance, error) {
	if args == nil {
		args = &WorkspaceInstanceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"managedInstance",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceInstance
	err := ctx.RegisterResource("aws-native:workspacesinstances:WorkspaceInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceInstance gets an existing WorkspaceInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceInstanceState, opts ...pulumi.ResourceOption) (*WorkspaceInstance, error) {
	var resource WorkspaceInstance
	err := ctx.ReadResource("aws-native:workspacesinstances:WorkspaceInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceInstance resources.
type workspaceInstanceState struct {
}

type WorkspaceInstanceState struct {
}

func (WorkspaceInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceInstanceState)(nil)).Elem()
}

type workspaceInstanceArgs struct {
	ManagedInstance *ManagedInstanceProperties `pulumi:"managedInstance"`
	Tags            []aws.Tag                  `pulumi:"tags"`
}

// The set of arguments for constructing a WorkspaceInstance resource.
type WorkspaceInstanceArgs struct {
	ManagedInstance ManagedInstancePropertiesPtrInput
	Tags            aws.TagArrayInput
}

func (WorkspaceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceInstanceArgs)(nil)).Elem()
}

type WorkspaceInstanceInput interface {
	pulumi.Input

	ToWorkspaceInstanceOutput() WorkspaceInstanceOutput
	ToWorkspaceInstanceOutputWithContext(ctx context.Context) WorkspaceInstanceOutput
}

func (*WorkspaceInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceInstance)(nil)).Elem()
}

func (i *WorkspaceInstance) ToWorkspaceInstanceOutput() WorkspaceInstanceOutput {
	return i.ToWorkspaceInstanceOutputWithContext(context.Background())
}

func (i *WorkspaceInstance) ToWorkspaceInstanceOutputWithContext(ctx context.Context) WorkspaceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceInstanceOutput)
}

type WorkspaceInstanceOutput struct{ *pulumi.OutputState }

func (WorkspaceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceInstance)(nil)).Elem()
}

func (o WorkspaceInstanceOutput) ToWorkspaceInstanceOutput() WorkspaceInstanceOutput {
	return o
}

func (o WorkspaceInstanceOutput) ToWorkspaceInstanceOutputWithContext(ctx context.Context) WorkspaceInstanceOutput {
	return o
}

func (o WorkspaceInstanceOutput) Ec2ManagedInstance() WorkspaceInstanceEc2ManagedInstanceOutput {
	return o.ApplyT(func(v *WorkspaceInstance) WorkspaceInstanceEc2ManagedInstanceOutput { return v.Ec2ManagedInstance }).(WorkspaceInstanceEc2ManagedInstanceOutput)
}

func (o WorkspaceInstanceOutput) ManagedInstance() ManagedInstancePropertiesPtrOutput {
	return o.ApplyT(func(v *WorkspaceInstance) ManagedInstancePropertiesPtrOutput { return v.ManagedInstance }).(ManagedInstancePropertiesPtrOutput)
}

// The current state of the workspace instance
func (o WorkspaceInstanceOutput) ProvisionState() WorkspaceInstanceProvisionStateOutput {
	return o.ApplyT(func(v *WorkspaceInstance) WorkspaceInstanceProvisionStateOutput { return v.ProvisionState }).(WorkspaceInstanceProvisionStateOutput)
}

func (o WorkspaceInstanceOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *WorkspaceInstance) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Unique identifier for the workspace instance
func (o WorkspaceInstanceOutput) WorkspaceInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceInstance) pulumi.StringOutput { return v.WorkspaceInstanceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceInstanceInput)(nil)).Elem(), &WorkspaceInstance{})
	pulumi.RegisterOutputType(WorkspaceInstanceOutput{})
}
