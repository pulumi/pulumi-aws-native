// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesinstances

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::WorkspacesInstances::WorkspaceInstance
func LookupWorkspaceInstance(ctx *pulumi.Context, args *LookupWorkspaceInstanceArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceInstanceResult
	err := ctx.Invoke("aws-native:workspacesinstances:getWorkspaceInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkspaceInstanceArgs struct {
	// Unique identifier for the workspace instance
	WorkspaceInstanceId string `pulumi:"workspaceInstanceId"`
}

type LookupWorkspaceInstanceResult struct {
	Ec2ManagedInstance *WorkspaceInstanceEc2ManagedInstance `pulumi:"ec2ManagedInstance"`
	// The current state of the workspace instance
	ProvisionState *WorkspaceInstanceProvisionState `pulumi:"provisionState"`
	Tags           []aws.Tag                        `pulumi:"tags"`
	// Unique identifier for the workspace instance
	WorkspaceInstanceId *string `pulumi:"workspaceInstanceId"`
}

func LookupWorkspaceInstanceOutput(ctx *pulumi.Context, args LookupWorkspaceInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceInstanceResultOutput, error) {
			args := v.(LookupWorkspaceInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:workspacesinstances:getWorkspaceInstance", args, LookupWorkspaceInstanceResultOutput{}, options).(LookupWorkspaceInstanceResultOutput), nil
		}).(LookupWorkspaceInstanceResultOutput)
}

type LookupWorkspaceInstanceOutputArgs struct {
	// Unique identifier for the workspace instance
	WorkspaceInstanceId pulumi.StringInput `pulumi:"workspaceInstanceId"`
}

func (LookupWorkspaceInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceInstanceArgs)(nil)).Elem()
}

type LookupWorkspaceInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceInstanceResult)(nil)).Elem()
}

func (o LookupWorkspaceInstanceResultOutput) ToLookupWorkspaceInstanceResultOutput() LookupWorkspaceInstanceResultOutput {
	return o
}

func (o LookupWorkspaceInstanceResultOutput) ToLookupWorkspaceInstanceResultOutputWithContext(ctx context.Context) LookupWorkspaceInstanceResultOutput {
	return o
}

func (o LookupWorkspaceInstanceResultOutput) Ec2ManagedInstance() WorkspaceInstanceEc2ManagedInstancePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceInstanceResult) *WorkspaceInstanceEc2ManagedInstance {
		return v.Ec2ManagedInstance
	}).(WorkspaceInstanceEc2ManagedInstancePtrOutput)
}

// The current state of the workspace instance
func (o LookupWorkspaceInstanceResultOutput) ProvisionState() WorkspaceInstanceProvisionStatePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceInstanceResult) *WorkspaceInstanceProvisionState { return v.ProvisionState }).(WorkspaceInstanceProvisionStatePtrOutput)
}

func (o LookupWorkspaceInstanceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceInstanceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Unique identifier for the workspace instance
func (o LookupWorkspaceInstanceResultOutput) WorkspaceInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceInstanceResult) *string { return v.WorkspaceInstanceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceInstanceResultOutput{})
}
