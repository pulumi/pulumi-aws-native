// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Batch::SchedulingPolicy
func LookupSchedulingPolicy(ctx *pulumi.Context, args *LookupSchedulingPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSchedulingPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSchedulingPolicyResult
	err := ctx.Invoke("aws-native:batch:getSchedulingPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSchedulingPolicyArgs struct {
	// Returns the scheduling policy ARN, such as `batch: *us-east-1* : *111122223333* :scheduling-policy/ *HighPriority*` .
	Arn string `pulumi:"arn"`
}

type LookupSchedulingPolicyResult struct {
	// Returns the scheduling policy ARN, such as `batch: *us-east-1* : *111122223333* :scheduling-policy/ *HighPriority*` .
	Arn *string `pulumi:"arn"`
	// The fair-share scheduling policy details.
	FairsharePolicy *SchedulingPolicyFairsharePolicy `pulumi:"fairsharePolicy"`
}

func LookupSchedulingPolicyOutput(ctx *pulumi.Context, args LookupSchedulingPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSchedulingPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSchedulingPolicyResultOutput, error) {
			args := v.(LookupSchedulingPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:batch:getSchedulingPolicy", args, LookupSchedulingPolicyResultOutput{}, options).(LookupSchedulingPolicyResultOutput), nil
		}).(LookupSchedulingPolicyResultOutput)
}

type LookupSchedulingPolicyOutputArgs struct {
	// Returns the scheduling policy ARN, such as `batch: *us-east-1* : *111122223333* :scheduling-policy/ *HighPriority*` .
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupSchedulingPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulingPolicyArgs)(nil)).Elem()
}

type LookupSchedulingPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSchedulingPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulingPolicyResult)(nil)).Elem()
}

func (o LookupSchedulingPolicyResultOutput) ToLookupSchedulingPolicyResultOutput() LookupSchedulingPolicyResultOutput {
	return o
}

func (o LookupSchedulingPolicyResultOutput) ToLookupSchedulingPolicyResultOutputWithContext(ctx context.Context) LookupSchedulingPolicyResultOutput {
	return o
}

// Returns the scheduling policy ARN, such as `batch: *us-east-1* : *111122223333* :scheduling-policy/ *HighPriority*` .
func (o LookupSchedulingPolicyResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchedulingPolicyResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The fair-share scheduling policy details.
func (o LookupSchedulingPolicyResultOutput) FairsharePolicy() SchedulingPolicyFairsharePolicyPtrOutput {
	return o.ApplyT(func(v LookupSchedulingPolicyResult) *SchedulingPolicyFairsharePolicy { return v.FairsharePolicy }).(SchedulingPolicyFairsharePolicyPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchedulingPolicyResultOutput{})
}
