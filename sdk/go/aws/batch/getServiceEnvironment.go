// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Batch::ServiceEnvironment
func LookupServiceEnvironment(ctx *pulumi.Context, args *LookupServiceEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupServiceEnvironmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceEnvironmentResult
	err := ctx.Invoke("aws-native:batch:getServiceEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceEnvironmentArgs struct {
	ServiceEnvironmentArn string `pulumi:"serviceEnvironmentArn"`
}

type LookupServiceEnvironmentResult struct {
	CapacityLimits        []ServiceEnvironmentCapacityLimit `pulumi:"capacityLimits"`
	ServiceEnvironmentArn *string                           `pulumi:"serviceEnvironmentArn"`
	State                 *string                           `pulumi:"state"`
	// A key-value pair to associate with a resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupServiceEnvironmentOutput(ctx *pulumi.Context, args LookupServiceEnvironmentOutputArgs, opts ...pulumi.InvokeOption) LookupServiceEnvironmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceEnvironmentResultOutput, error) {
			args := v.(LookupServiceEnvironmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:batch:getServiceEnvironment", args, LookupServiceEnvironmentResultOutput{}, options).(LookupServiceEnvironmentResultOutput), nil
		}).(LookupServiceEnvironmentResultOutput)
}

type LookupServiceEnvironmentOutputArgs struct {
	ServiceEnvironmentArn pulumi.StringInput `pulumi:"serviceEnvironmentArn"`
}

func (LookupServiceEnvironmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceEnvironmentArgs)(nil)).Elem()
}

type LookupServiceEnvironmentResultOutput struct{ *pulumi.OutputState }

func (LookupServiceEnvironmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceEnvironmentResult)(nil)).Elem()
}

func (o LookupServiceEnvironmentResultOutput) ToLookupServiceEnvironmentResultOutput() LookupServiceEnvironmentResultOutput {
	return o
}

func (o LookupServiceEnvironmentResultOutput) ToLookupServiceEnvironmentResultOutputWithContext(ctx context.Context) LookupServiceEnvironmentResultOutput {
	return o
}

func (o LookupServiceEnvironmentResultOutput) CapacityLimits() ServiceEnvironmentCapacityLimitArrayOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentResult) []ServiceEnvironmentCapacityLimit { return v.CapacityLimits }).(ServiceEnvironmentCapacityLimitArrayOutput)
}

func (o LookupServiceEnvironmentResultOutput) ServiceEnvironmentArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentResult) *string { return v.ServiceEnvironmentArn }).(pulumi.StringPtrOutput)
}

func (o LookupServiceEnvironmentResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
func (o LookupServiceEnvironmentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceEnvironmentResultOutput{})
}
