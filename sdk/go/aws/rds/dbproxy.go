// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::RDS::DBProxy
type DBProxy struct {
	pulumi.CustomResourceState

	// The authorization mechanism that the proxy uses.
	Auth DBProxyAuthFormatArrayOutput `pulumi:"auth"`
	// The Amazon Resource Name (ARN) for the proxy.
	DBProxyArn pulumi.StringOutput `pulumi:"dBProxyArn"`
	// The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
	DBProxyName pulumi.StringOutput `pulumi:"dBProxyName"`
	// Whether the proxy includes detailed information about SQL statements in its logs.
	DebugLogging pulumi.BoolPtrOutput `pulumi:"debugLogging"`
	// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The kinds of databases that the proxy can connect to.
	EngineFamily DBProxyEngineFamilyOutput `pulumi:"engineFamily"`
	// The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
	IdleClientTimeout pulumi.IntPtrOutput `pulumi:"idleClientTimeout"`
	// A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
	RequireTLS pulumi.BoolPtrOutput `pulumi:"requireTLS"`
	// The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
	Tags DBProxyTagFormatArrayOutput `pulumi:"tags"`
	// VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
	// VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds pulumi.StringArrayOutput `pulumi:"vpcSubnetIds"`
}

// NewDBProxy registers a new resource with the given unique name, arguments, and options.
func NewDBProxy(ctx *pulumi.Context,
	name string, args *DBProxyArgs, opts ...pulumi.ResourceOption) (*DBProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Auth == nil {
		return nil, errors.New("invalid value for required argument 'Auth'")
	}
	if args.EngineFamily == nil {
		return nil, errors.New("invalid value for required argument 'EngineFamily'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.VpcSubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'VpcSubnetIds'")
	}
	var resource DBProxy
	err := ctx.RegisterResource("aws-native:rds:DBProxy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDBProxy gets an existing DBProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDBProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DBProxyState, opts ...pulumi.ResourceOption) (*DBProxy, error) {
	var resource DBProxy
	err := ctx.ReadResource("aws-native:rds:DBProxy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DBProxy resources.
type dbproxyState struct {
}

type DBProxyState struct {
}

func (DBProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbproxyState)(nil)).Elem()
}

type dbproxyArgs struct {
	// The authorization mechanism that the proxy uses.
	Auth []DBProxyAuthFormat `pulumi:"auth"`
	// The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
	DBProxyName *string `pulumi:"dBProxyName"`
	// Whether the proxy includes detailed information about SQL statements in its logs.
	DebugLogging *bool `pulumi:"debugLogging"`
	// The kinds of databases that the proxy can connect to.
	EngineFamily DBProxyEngineFamily `pulumi:"engineFamily"`
	// The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
	IdleClientTimeout *int `pulumi:"idleClientTimeout"`
	// A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
	RequireTLS *bool `pulumi:"requireTLS"`
	// The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
	RoleArn string `pulumi:"roleArn"`
	// An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
	Tags []DBProxyTagFormat `pulumi:"tags"`
	// VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds []string `pulumi:"vpcSubnetIds"`
}

// The set of arguments for constructing a DBProxy resource.
type DBProxyArgs struct {
	// The authorization mechanism that the proxy uses.
	Auth DBProxyAuthFormatArrayInput
	// The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
	DBProxyName pulumi.StringPtrInput
	// Whether the proxy includes detailed information about SQL statements in its logs.
	DebugLogging pulumi.BoolPtrInput
	// The kinds of databases that the proxy can connect to.
	EngineFamily DBProxyEngineFamilyInput
	// The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
	IdleClientTimeout pulumi.IntPtrInput
	// A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
	RequireTLS pulumi.BoolPtrInput
	// The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
	RoleArn pulumi.StringInput
	// An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
	Tags DBProxyTagFormatArrayInput
	// VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds pulumi.StringArrayInput
	// VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds pulumi.StringArrayInput
}

func (DBProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbproxyArgs)(nil)).Elem()
}

type DBProxyInput interface {
	pulumi.Input

	ToDBProxyOutput() DBProxyOutput
	ToDBProxyOutputWithContext(ctx context.Context) DBProxyOutput
}

func (*DBProxy) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxy)(nil))
}

func (i *DBProxy) ToDBProxyOutput() DBProxyOutput {
	return i.ToDBProxyOutputWithContext(context.Background())
}

func (i *DBProxy) ToDBProxyOutputWithContext(ctx context.Context) DBProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyOutput)
}

type DBProxyOutput struct{ *pulumi.OutputState }

func (DBProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxy)(nil))
}

func (o DBProxyOutput) ToDBProxyOutput() DBProxyOutput {
	return o
}

func (o DBProxyOutput) ToDBProxyOutputWithContext(ctx context.Context) DBProxyOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DBProxyInput)(nil)).Elem(), &DBProxy{})
	pulumi.RegisterOutputType(DBProxyOutput{})
}
