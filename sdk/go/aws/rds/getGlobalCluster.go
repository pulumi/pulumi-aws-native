// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RDS::GlobalCluster
func LookupGlobalCluster(ctx *pulumi.Context, args *LookupGlobalClusterArgs, opts ...pulumi.InvokeOption) (*LookupGlobalClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGlobalClusterResult
	err := ctx.Invoke("aws-native:rds:getGlobalCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGlobalClusterArgs struct {
	// The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
	GlobalClusterIdentifier string `pulumi:"globalClusterIdentifier"`
}

type LookupGlobalClusterResult struct {
	// The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The life cycle type of the global cluster. You can use this setting to enroll your global cluster into Amazon RDS Extended Support.
	EngineLifecycleSupport *string `pulumi:"engineLifecycleSupport"`
	// The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
	EngineVersion *string `pulumi:"engineVersion"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupGlobalClusterOutput(ctx *pulumi.Context, args LookupGlobalClusterOutputArgs, opts ...pulumi.InvokeOption) LookupGlobalClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGlobalClusterResultOutput, error) {
			args := v.(LookupGlobalClusterArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGlobalClusterResult
			secret, err := ctx.InvokePackageRaw("aws-native:rds:getGlobalCluster", args, &rv, "", opts...)
			if err != nil {
				return LookupGlobalClusterResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGlobalClusterResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGlobalClusterResultOutput), nil
			}
			return output, nil
		}).(LookupGlobalClusterResultOutput)
}

type LookupGlobalClusterOutputArgs struct {
	// The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
	GlobalClusterIdentifier pulumi.StringInput `pulumi:"globalClusterIdentifier"`
}

func (LookupGlobalClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalClusterArgs)(nil)).Elem()
}

type LookupGlobalClusterResultOutput struct{ *pulumi.OutputState }

func (LookupGlobalClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalClusterResult)(nil)).Elem()
}

func (o LookupGlobalClusterResultOutput) ToLookupGlobalClusterResultOutput() LookupGlobalClusterResultOutput {
	return o
}

func (o LookupGlobalClusterResultOutput) ToLookupGlobalClusterResultOutputWithContext(ctx context.Context) LookupGlobalClusterResultOutput {
	return o
}

// The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.
func (o LookupGlobalClusterResultOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGlobalClusterResult) *bool { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The life cycle type of the global cluster. You can use this setting to enroll your global cluster into Amazon RDS Extended Support.
func (o LookupGlobalClusterResultOutput) EngineLifecycleSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalClusterResult) *string { return v.EngineLifecycleSupport }).(pulumi.StringPtrOutput)
}

// The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
func (o LookupGlobalClusterResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalClusterResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupGlobalClusterResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupGlobalClusterResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGlobalClusterResultOutput{})
}
