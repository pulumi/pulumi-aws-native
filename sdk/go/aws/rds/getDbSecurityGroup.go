// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::RDS::DBSecurityGroup
func LookupDbSecurityGroup(ctx *pulumi.Context, args *LookupDbSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupDbSecurityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDbSecurityGroupResult
	err := ctx.Invoke("aws-native:rds:getDbSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDbSecurityGroupArgs struct {
	Id string `pulumi:"id"`
}

type LookupDbSecurityGroupResult struct {
	DbSecurityGroupIngress []DbSecurityGroupIngressType `pulumi:"dbSecurityGroupIngress"`
	Id                     *string                      `pulumi:"id"`
	Tags                   []DbSecurityGroupTag         `pulumi:"tags"`
}

func LookupDbSecurityGroupOutput(ctx *pulumi.Context, args LookupDbSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDbSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDbSecurityGroupResult, error) {
			args := v.(LookupDbSecurityGroupArgs)
			r, err := LookupDbSecurityGroup(ctx, &args, opts...)
			var s LookupDbSecurityGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDbSecurityGroupResultOutput)
}

type LookupDbSecurityGroupOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDbSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbSecurityGroupArgs)(nil)).Elem()
}

type LookupDbSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDbSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbSecurityGroupResult)(nil)).Elem()
}

func (o LookupDbSecurityGroupResultOutput) ToLookupDbSecurityGroupResultOutput() LookupDbSecurityGroupResultOutput {
	return o
}

func (o LookupDbSecurityGroupResultOutput) ToLookupDbSecurityGroupResultOutputWithContext(ctx context.Context) LookupDbSecurityGroupResultOutput {
	return o
}

func (o LookupDbSecurityGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDbSecurityGroupResult] {
	return pulumix.Output[LookupDbSecurityGroupResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDbSecurityGroupResultOutput) DbSecurityGroupIngress() DbSecurityGroupIngressTypeArrayOutput {
	return o.ApplyT(func(v LookupDbSecurityGroupResult) []DbSecurityGroupIngressType { return v.DbSecurityGroupIngress }).(DbSecurityGroupIngressTypeArrayOutput)
}

func (o LookupDbSecurityGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbSecurityGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupDbSecurityGroupResultOutput) Tags() DbSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v LookupDbSecurityGroupResult) []DbSecurityGroupTag { return v.Tags }).(DbSecurityGroupTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbSecurityGroupResultOutput{})
}
