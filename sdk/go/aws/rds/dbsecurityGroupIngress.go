// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RDS::DBSecurityGroupIngress
//
// Deprecated: DBSecurityGroupIngress is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DBSecurityGroupIngress struct {
	pulumi.CustomResourceState

	Cidrip                  pulumi.StringPtrOutput `pulumi:"cidrip"`
	DbSecurityGroupName     pulumi.StringOutput    `pulumi:"dbSecurityGroupName"`
	Ec2SecurityGroupId      pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupOwnerId"`
}

// NewDBSecurityGroupIngress registers a new resource with the given unique name, arguments, and options.
func NewDBSecurityGroupIngress(ctx *pulumi.Context,
	name string, args *DBSecurityGroupIngressArgs, opts ...pulumi.ResourceOption) (*DBSecurityGroupIngress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbSecurityGroupName == nil {
		return nil, errors.New("invalid value for required argument 'DbSecurityGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DBSecurityGroupIngress
	err := ctx.RegisterResource("aws-native:rds:DBSecurityGroupIngress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDBSecurityGroupIngress gets an existing DBSecurityGroupIngress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDBSecurityGroupIngress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DBSecurityGroupIngressState, opts ...pulumi.ResourceOption) (*DBSecurityGroupIngress, error) {
	var resource DBSecurityGroupIngress
	err := ctx.ReadResource("aws-native:rds:DBSecurityGroupIngress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DBSecurityGroupIngress resources.
type dbsecurityGroupIngressState struct {
}

type DBSecurityGroupIngressState struct {
}

func (DBSecurityGroupIngressState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbsecurityGroupIngressState)(nil)).Elem()
}

type dbsecurityGroupIngressArgs struct {
	Cidrip                  *string `pulumi:"cidrip"`
	DbSecurityGroupName     string  `pulumi:"dbSecurityGroupName"`
	Ec2SecurityGroupId      *string `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    *string `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId *string `pulumi:"ec2SecurityGroupOwnerId"`
}

// The set of arguments for constructing a DBSecurityGroupIngress resource.
type DBSecurityGroupIngressArgs struct {
	Cidrip                  pulumi.StringPtrInput
	DbSecurityGroupName     pulumi.StringInput
	Ec2SecurityGroupId      pulumi.StringPtrInput
	Ec2SecurityGroupName    pulumi.StringPtrInput
	Ec2SecurityGroupOwnerId pulumi.StringPtrInput
}

func (DBSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbsecurityGroupIngressArgs)(nil)).Elem()
}

type DBSecurityGroupIngressInput interface {
	pulumi.Input

	ToDBSecurityGroupIngressOutput() DBSecurityGroupIngressOutput
	ToDBSecurityGroupIngressOutputWithContext(ctx context.Context) DBSecurityGroupIngressOutput
}

func (*DBSecurityGroupIngress) ElementType() reflect.Type {
	return reflect.TypeOf((**DBSecurityGroupIngress)(nil)).Elem()
}

func (i *DBSecurityGroupIngress) ToDBSecurityGroupIngressOutput() DBSecurityGroupIngressOutput {
	return i.ToDBSecurityGroupIngressOutputWithContext(context.Background())
}

func (i *DBSecurityGroupIngress) ToDBSecurityGroupIngressOutputWithContext(ctx context.Context) DBSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSecurityGroupIngressOutput)
}

type DBSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DBSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBSecurityGroupIngress)(nil)).Elem()
}

func (o DBSecurityGroupIngressOutput) ToDBSecurityGroupIngressOutput() DBSecurityGroupIngressOutput {
	return o
}

func (o DBSecurityGroupIngressOutput) ToDBSecurityGroupIngressOutputWithContext(ctx context.Context) DBSecurityGroupIngressOutput {
	return o
}

func (o DBSecurityGroupIngressOutput) Cidrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBSecurityGroupIngress) pulumi.StringPtrOutput { return v.Cidrip }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressOutput) DbSecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DBSecurityGroupIngress) pulumi.StringOutput { return v.DbSecurityGroupName }).(pulumi.StringOutput)
}

func (o DBSecurityGroupIngressOutput) Ec2SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressOutput) Ec2SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupName }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressOutput) Ec2SecurityGroupOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupOwnerId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DBSecurityGroupIngressInput)(nil)).Elem(), &DBSecurityGroupIngress{})
	pulumi.RegisterOutputType(DBSecurityGroupIngressOutput{})
}
