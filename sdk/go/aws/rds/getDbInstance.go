// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::RDS::DBInstance resource creates an Amazon RDS DB instance.
func LookupDbInstance(ctx *pulumi.Context, args *LookupDbInstanceArgs, opts ...pulumi.InvokeOption) (*LookupDbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDbInstanceResult
	err := ctx.Invoke("aws-native:rds:getDbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDbInstanceArgs struct {
	// A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.
	DbInstanceIdentifier string `pulumi:"dbInstanceIdentifier"`
}

type LookupDbInstanceResult struct {
	// The amount of storage (in gigabytes) to be initially allocated for the database instance.
	AllocatedStorage *string `pulumi:"allocatedStorage"`
	// The AWS Identity and Access Management (IAM) roles associated with the DB instance.
	AssociatedRoles []DbInstanceDbInstanceRole `pulumi:"associatedRoles"`
	// A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// Enables replication of automated backups to a different Amazon Web Services Region.
	AutomaticBackupReplicationRegion *string `pulumi:"automaticBackupReplicationRegion"`
	// The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The identifier of the CA certificate for this DB instance.
	CaCertificateIdentifier *string `pulumi:"caCertificateIdentifier"`
	// Returns the details of the DB instance's server certificate.
	CertificateDetails *DbInstanceCertificateDetails `pulumi:"certificateDetails"`
	// A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
	CopyTagsToSnapshot *bool `pulumi:"copyTagsToSnapshot"`
	// The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from. For more information on Multi-AZ DB clusters, see Multi-AZ deployments with two readable standby DB instances in the Amazon RDS User Guide .
	//
	// Constraints:
	//  * Must match the identifier of an existing Multi-AZ DB cluster snapshot.
	//  * Can't be specified when DBSnapshotIdentifier is specified.
	//  * Must be specified when DBSnapshotIdentifier isn't specified.
	//  * If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.
	//  * Can't be the identifier of an Aurora DB cluster snapshot.
	//  * Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.
	DbClusterSnapshotIdentifier *string `pulumi:"dbClusterSnapshotIdentifier"`
	// The Amazon Resource Name (ARN) for the DB instance.
	DbInstanceArn *string `pulumi:"dbInstanceArn"`
	// The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.
	DbInstanceClass *string `pulumi:"dbInstanceClass"`
	// The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.
	DbParameterGroupName *string `pulumi:"dbParameterGroupName"`
	// A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.
	DbSecurityGroups []string `pulumi:"dbSecurityGroups"`
	// The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle SID is also the name of the CDB. This setting is valid for RDS Custom only.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.
	DbiResourceId *string `pulumi:"dbiResourceId"`
	// Indicates whether the DB instance has a dedicated log volume (DLV) enabled.
	DedicatedLogVolume *bool `pulumi:"dedicatedLogVolume"`
	// A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
	Domain *string `pulumi:"domain"`
	// The ARN for the Secrets Manager secret with the credentials for the user joining the domain.
	DomainAuthSecretArn *string `pulumi:"domainAuthSecretArn"`
	// The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.
	DomainDnsIps []string `pulumi:"domainDnsIps"`
	// The fully qualified domain name (FQDN) of an Active Directory domain.
	DomainFqdn *string `pulumi:"domainFqdn"`
	// Specify the name of the IAM role to be used when making API calls to the Directory Service.
	DomainIamRoleName *string `pulumi:"domainIamRoleName"`
	// The Active Directory organizational unit for your DB instance to join.
	DomainOu *string `pulumi:"domainOu"`
	// The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.
	EnableCloudwatchLogsExports []string `pulumi:"enableCloudwatchLogsExports"`
	// A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.
	EnableIamDatabaseAuthentication *bool `pulumi:"enableIamDatabaseAuthentication"`
	// A value that indicates whether to enable Performance Insights for the DB instance.
	EnablePerformanceInsights *bool `pulumi:"enablePerformanceInsights"`
	// Specifies the connection endpoint.
	Endpoint *DbInstanceEndpoint `pulumi:"endpoint"`
	// The name of the database engine that you want to use for this DB instance.
	Engine *string `pulumi:"engine"`
	// The version number of the database engine to use.
	EngineVersion *string `pulumi:"engineVersion"`
	// The number of I/O operations per second (IOPS) that the database provisions.
	Iops *int `pulumi:"iops"`
	// License model information for this DB instance.
	LicenseModel *string `pulumi:"licenseModel"`
	// A value that indicates whether to manage the master user password with AWS Secrets Manager.
	ManageMasterUserPassword *bool `pulumi:"manageMasterUserPassword"`
	// Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
	MasterUserSecret *DbInstanceMasterUserSecret `pulumi:"masterUserSecret"`
	// The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
	MaxAllocatedStorage *int `pulumi:"maxAllocatedStorage"`
	// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.
	MonitoringInterval *int `pulumi:"monitoringInterval"`
	// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.
	MonitoringRoleArn *string `pulumi:"monitoringRoleArn"`
	// Specifies whether the database instance is a multiple Availability Zone deployment.
	MultiAz *bool `pulumi:"multiAz"`
	// The network type of the DB cluster.
	NetworkType *string `pulumi:"networkType"`
	// Indicates that the DB instance should be associated with the specified option group.
	OptionGroupName *string `pulumi:"optionGroupName"`
	// The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.
	PerformanceInsightsKmsKeyId *string `pulumi:"performanceInsightsKmsKeyId"`
	// The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).
	PerformanceInsightsRetentionPeriod *int `pulumi:"performanceInsightsRetentionPeriod"`
	// The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
	ProcessorFeatures []DbInstanceProcessorFeature `pulumi:"processorFeatures"`
	// A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.
	PromotionTier *int `pulumi:"promotionTier"`
	// Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// The open mode of an Oracle read replica. The default is open-read-only.
	ReplicaMode *string `pulumi:"replicaMode"`
	// The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can have up to 15 read replicas.
	SourceDbClusterIdentifier *string `pulumi:"sourceDbClusterIdentifier"`
	// Specifies the storage throughput for the DB instance.
	StorageThroughput *int `pulumi:"storageThroughput"`
	// Specifies the storage type to be associated with the DB instance.
	StorageType *string `pulumi:"storageType"`
	// Tags to assign to the DB instance.
	Tags []aws.Tag `pulumi:"tags"`
	// The ARN from the key store with which to associate the instance for TDE encryption.
	TdeCredentialArn *string `pulumi:"tdeCredentialArn"`
	// A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.
	VpcSecurityGroups []string `pulumi:"vpcSecurityGroups"`
}

func LookupDbInstanceOutput(ctx *pulumi.Context, args LookupDbInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupDbInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDbInstanceResult, error) {
			args := v.(LookupDbInstanceArgs)
			r, err := LookupDbInstance(ctx, &args, opts...)
			var s LookupDbInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDbInstanceResultOutput)
}

type LookupDbInstanceOutputArgs struct {
	// A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.
	DbInstanceIdentifier pulumi.StringInput `pulumi:"dbInstanceIdentifier"`
}

func (LookupDbInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbInstanceArgs)(nil)).Elem()
}

type LookupDbInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupDbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbInstanceResult)(nil)).Elem()
}

func (o LookupDbInstanceResultOutput) ToLookupDbInstanceResultOutput() LookupDbInstanceResultOutput {
	return o
}

func (o LookupDbInstanceResultOutput) ToLookupDbInstanceResultOutputWithContext(ctx context.Context) LookupDbInstanceResultOutput {
	return o
}

// The amount of storage (in gigabytes) to be initially allocated for the database instance.
func (o LookupDbInstanceResultOutput) AllocatedStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.AllocatedStorage }).(pulumi.StringPtrOutput)
}

// The AWS Identity and Access Management (IAM) roles associated with the DB instance.
func (o LookupDbInstanceResultOutput) AssociatedRoles() DbInstanceDbInstanceRoleArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []DbInstanceDbInstanceRole { return v.AssociatedRoles }).(DbInstanceDbInstanceRoleArrayOutput)
}

// A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.
func (o LookupDbInstanceResultOutput) AutoMinorVersionUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.AutoMinorVersionUpgrade }).(pulumi.BoolPtrOutput)
}

// Enables replication of automated backups to a different Amazon Web Services Region.
func (o LookupDbInstanceResultOutput) AutomaticBackupReplicationRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.AutomaticBackupReplicationRegion }).(pulumi.StringPtrOutput)
}

// The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.
func (o LookupDbInstanceResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
func (o LookupDbInstanceResultOutput) BackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.BackupRetentionPeriod }).(pulumi.IntPtrOutput)
}

// The identifier of the CA certificate for this DB instance.
func (o LookupDbInstanceResultOutput) CaCertificateIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.CaCertificateIdentifier }).(pulumi.StringPtrOutput)
}

// Returns the details of the DB instance's server certificate.
func (o LookupDbInstanceResultOutput) CertificateDetails() DbInstanceCertificateDetailsPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *DbInstanceCertificateDetails { return v.CertificateDetails }).(DbInstanceCertificateDetailsPtrOutput)
}

// A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.
func (o LookupDbInstanceResultOutput) CopyTagsToSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.CopyTagsToSnapshot }).(pulumi.BoolPtrOutput)
}

// The identifier for the RDS for MySQL Multi-AZ DB cluster snapshot to restore from. For more information on Multi-AZ DB clusters, see Multi-AZ deployments with two readable standby DB instances in the Amazon RDS User Guide .
//
// Constraints:
//   - Must match the identifier of an existing Multi-AZ DB cluster snapshot.
//   - Can't be specified when DBSnapshotIdentifier is specified.
//   - Must be specified when DBSnapshotIdentifier isn't specified.
//   - If you are restoring from a shared manual Multi-AZ DB cluster snapshot, the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.
//   - Can't be the identifier of an Aurora DB cluster snapshot.
//   - Can't be the identifier of an RDS for PostgreSQL Multi-AZ DB cluster snapshot.
func (o LookupDbInstanceResultOutput) DbClusterSnapshotIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbClusterSnapshotIdentifier }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the DB instance.
func (o LookupDbInstanceResultOutput) DbInstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbInstanceArn }).(pulumi.StringPtrOutput)
}

// The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.
func (o LookupDbInstanceResultOutput) DbInstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbInstanceClass }).(pulumi.StringPtrOutput)
}

// The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.
func (o LookupDbInstanceResultOutput) DbParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbParameterGroupName }).(pulumi.StringPtrOutput)
}

// A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.
func (o LookupDbInstanceResultOutput) DbSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []string { return v.DbSecurityGroups }).(pulumi.StringArrayOutput)
}

// The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle SID is also the name of the CDB. This setting is valid for RDS Custom only.
func (o LookupDbInstanceResultOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.
func (o LookupDbInstanceResultOutput) DbiResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DbiResourceId }).(pulumi.StringPtrOutput)
}

// Indicates whether the DB instance has a dedicated log volume (DLV) enabled.
func (o LookupDbInstanceResultOutput) DedicatedLogVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.DedicatedLogVolume }).(pulumi.BoolPtrOutput)
}

// A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
func (o LookupDbInstanceResultOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.
func (o LookupDbInstanceResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The ARN for the Secrets Manager secret with the credentials for the user joining the domain.
func (o LookupDbInstanceResultOutput) DomainAuthSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DomainAuthSecretArn }).(pulumi.StringPtrOutput)
}

// The IPv4 DNS IP addresses of your primary and secondary Active Directory domain controllers.
func (o LookupDbInstanceResultOutput) DomainDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []string { return v.DomainDnsIps }).(pulumi.StringArrayOutput)
}

// The fully qualified domain name (FQDN) of an Active Directory domain.
func (o LookupDbInstanceResultOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DomainFqdn }).(pulumi.StringPtrOutput)
}

// Specify the name of the IAM role to be used when making API calls to the Directory Service.
func (o LookupDbInstanceResultOutput) DomainIamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DomainIamRoleName }).(pulumi.StringPtrOutput)
}

// The Active Directory organizational unit for your DB instance to join.
func (o LookupDbInstanceResultOutput) DomainOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.DomainOu }).(pulumi.StringPtrOutput)
}

// The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.
func (o LookupDbInstanceResultOutput) EnableCloudwatchLogsExports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []string { return v.EnableCloudwatchLogsExports }).(pulumi.StringArrayOutput)
}

// A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.
func (o LookupDbInstanceResultOutput) EnableIamDatabaseAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.EnableIamDatabaseAuthentication }).(pulumi.BoolPtrOutput)
}

// A value that indicates whether to enable Performance Insights for the DB instance.
func (o LookupDbInstanceResultOutput) EnablePerformanceInsights() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.EnablePerformanceInsights }).(pulumi.BoolPtrOutput)
}

// Specifies the connection endpoint.
func (o LookupDbInstanceResultOutput) Endpoint() DbInstanceEndpointPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *DbInstanceEndpoint { return v.Endpoint }).(DbInstanceEndpointPtrOutput)
}

// The name of the database engine that you want to use for this DB instance.
func (o LookupDbInstanceResultOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.Engine }).(pulumi.StringPtrOutput)
}

// The version number of the database engine to use.
func (o LookupDbInstanceResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// The number of I/O operations per second (IOPS) that the database provisions.
func (o LookupDbInstanceResultOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// License model information for this DB instance.
func (o LookupDbInstanceResultOutput) LicenseModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.LicenseModel }).(pulumi.StringPtrOutput)
}

// A value that indicates whether to manage the master user password with AWS Secrets Manager.
func (o LookupDbInstanceResultOutput) ManageMasterUserPassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.ManageMasterUserPassword }).(pulumi.BoolPtrOutput)
}

// Contains the secret managed by RDS in AWS Secrets Manager for the master user password.
func (o LookupDbInstanceResultOutput) MasterUserSecret() DbInstanceMasterUserSecretPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *DbInstanceMasterUserSecret { return v.MasterUserSecret }).(DbInstanceMasterUserSecretPtrOutput)
}

// The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
func (o LookupDbInstanceResultOutput) MaxAllocatedStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.MaxAllocatedStorage }).(pulumi.IntPtrOutput)
}

// The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.
func (o LookupDbInstanceResultOutput) MonitoringInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.MonitoringInterval }).(pulumi.IntPtrOutput)
}

// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.
func (o LookupDbInstanceResultOutput) MonitoringRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.MonitoringRoleArn }).(pulumi.StringPtrOutput)
}

// Specifies whether the database instance is a multiple Availability Zone deployment.
func (o LookupDbInstanceResultOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.MultiAz }).(pulumi.BoolPtrOutput)
}

// The network type of the DB cluster.
func (o LookupDbInstanceResultOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Indicates that the DB instance should be associated with the specified option group.
func (o LookupDbInstanceResultOutput) OptionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.OptionGroupName }).(pulumi.StringPtrOutput)
}

// The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.
func (o LookupDbInstanceResultOutput) PerformanceInsightsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.PerformanceInsightsKmsKeyId }).(pulumi.StringPtrOutput)
}

// The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).
func (o LookupDbInstanceResultOutput) PerformanceInsightsRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.PerformanceInsightsRetentionPeriod }).(pulumi.IntPtrOutput)
}

// The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.
func (o LookupDbInstanceResultOutput) PreferredBackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.PreferredBackupWindow }).(pulumi.StringPtrOutput)
}

// he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
func (o LookupDbInstanceResultOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

// The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
func (o LookupDbInstanceResultOutput) ProcessorFeatures() DbInstanceProcessorFeatureArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []DbInstanceProcessorFeature { return v.ProcessorFeatures }).(DbInstanceProcessorFeatureArrayOutput)
}

// A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.
func (o LookupDbInstanceResultOutput) PromotionTier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.PromotionTier }).(pulumi.IntPtrOutput)
}

// Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.
func (o LookupDbInstanceResultOutput) PubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *bool { return v.PubliclyAccessible }).(pulumi.BoolPtrOutput)
}

// The open mode of an Oracle read replica. The default is open-read-only.
func (o LookupDbInstanceResultOutput) ReplicaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.ReplicaMode }).(pulumi.StringPtrOutput)
}

// The identifier of the Multi-AZ DB cluster that will act as the source for the read replica. Each DB cluster can have up to 15 read replicas.
func (o LookupDbInstanceResultOutput) SourceDbClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.SourceDbClusterIdentifier }).(pulumi.StringPtrOutput)
}

// Specifies the storage throughput for the DB instance.
func (o LookupDbInstanceResultOutput) StorageThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *int { return v.StorageThroughput }).(pulumi.IntPtrOutput)
}

// Specifies the storage type to be associated with the DB instance.
func (o LookupDbInstanceResultOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// Tags to assign to the DB instance.
func (o LookupDbInstanceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The ARN from the key store with which to associate the instance for TDE encryption.
func (o LookupDbInstanceResultOutput) TdeCredentialArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) *string { return v.TdeCredentialArn }).(pulumi.StringPtrOutput)
}

// A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.
func (o LookupDbInstanceResultOutput) VpcSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDbInstanceResult) []string { return v.VpcSecurityGroups }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbInstanceResultOutput{})
}
