// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RDS::DBSecurityGroupIngress
//
// Deprecated: DbSecurityGroupIngress is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DbSecurityGroupIngress struct {
	pulumi.CustomResourceState

	AwsId                   pulumi.StringOutput    `pulumi:"awsId"`
	Cidrip                  pulumi.StringPtrOutput `pulumi:"cidrip"`
	DbSecurityGroupName     pulumi.StringOutput    `pulumi:"dbSecurityGroupName"`
	Ec2SecurityGroupId      pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId pulumi.StringPtrOutput `pulumi:"ec2SecurityGroupOwnerId"`
}

// NewDbSecurityGroupIngress registers a new resource with the given unique name, arguments, and options.
func NewDbSecurityGroupIngress(ctx *pulumi.Context,
	name string, args *DbSecurityGroupIngressArgs, opts ...pulumi.ResourceOption) (*DbSecurityGroupIngress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbSecurityGroupName == nil {
		return nil, errors.New("invalid value for required argument 'DbSecurityGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbSecurityGroupIngress
	err := ctx.RegisterResource("aws-native:rds:DbSecurityGroupIngress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbSecurityGroupIngress gets an existing DbSecurityGroupIngress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbSecurityGroupIngress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbSecurityGroupIngressState, opts ...pulumi.ResourceOption) (*DbSecurityGroupIngress, error) {
	var resource DbSecurityGroupIngress
	err := ctx.ReadResource("aws-native:rds:DbSecurityGroupIngress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbSecurityGroupIngress resources.
type dbSecurityGroupIngressState struct {
}

type DbSecurityGroupIngressState struct {
}

func (DbSecurityGroupIngressState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSecurityGroupIngressState)(nil)).Elem()
}

type dbSecurityGroupIngressArgs struct {
	Cidrip                  *string `pulumi:"cidrip"`
	DbSecurityGroupName     string  `pulumi:"dbSecurityGroupName"`
	Ec2SecurityGroupId      *string `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    *string `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId *string `pulumi:"ec2SecurityGroupOwnerId"`
}

// The set of arguments for constructing a DbSecurityGroupIngress resource.
type DbSecurityGroupIngressArgs struct {
	Cidrip                  pulumi.StringPtrInput
	DbSecurityGroupName     pulumi.StringInput
	Ec2SecurityGroupId      pulumi.StringPtrInput
	Ec2SecurityGroupName    pulumi.StringPtrInput
	Ec2SecurityGroupOwnerId pulumi.StringPtrInput
}

func (DbSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSecurityGroupIngressArgs)(nil)).Elem()
}

type DbSecurityGroupIngressInput interface {
	pulumi.Input

	ToDbSecurityGroupIngressOutput() DbSecurityGroupIngressOutput
	ToDbSecurityGroupIngressOutputWithContext(ctx context.Context) DbSecurityGroupIngressOutput
}

func (*DbSecurityGroupIngress) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSecurityGroupIngress)(nil)).Elem()
}

func (i *DbSecurityGroupIngress) ToDbSecurityGroupIngressOutput() DbSecurityGroupIngressOutput {
	return i.ToDbSecurityGroupIngressOutputWithContext(context.Background())
}

func (i *DbSecurityGroupIngress) ToDbSecurityGroupIngressOutputWithContext(ctx context.Context) DbSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSecurityGroupIngressOutput)
}

type DbSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DbSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSecurityGroupIngress)(nil)).Elem()
}

func (o DbSecurityGroupIngressOutput) ToDbSecurityGroupIngressOutput() DbSecurityGroupIngressOutput {
	return o
}

func (o DbSecurityGroupIngressOutput) ToDbSecurityGroupIngressOutputWithContext(ctx context.Context) DbSecurityGroupIngressOutput {
	return o
}

func (o DbSecurityGroupIngressOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o DbSecurityGroupIngressOutput) Cidrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringPtrOutput { return v.Cidrip }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressOutput) DbSecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringOutput { return v.DbSecurityGroupName }).(pulumi.StringOutput)
}

func (o DbSecurityGroupIngressOutput) Ec2SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressOutput) Ec2SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupName }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressOutput) Ec2SecurityGroupOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbSecurityGroupIngress) pulumi.StringPtrOutput { return v.Ec2SecurityGroupOwnerId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbSecurityGroupIngressInput)(nil)).Elem(), &DbSecurityGroupIngress{})
	pulumi.RegisterOutputType(DbSecurityGroupIngressOutput{})
}
