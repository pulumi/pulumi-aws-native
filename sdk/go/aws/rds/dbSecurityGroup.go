// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RDS::DBSecurityGroup
//
// Deprecated: DbSecurityGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DbSecurityGroup struct {
	pulumi.CustomResourceState

	AwsId                  pulumi.StringOutput                   `pulumi:"awsId"`
	DbSecurityGroupIngress DbSecurityGroupIngressTypeArrayOutput `pulumi:"dbSecurityGroupIngress"`
	Ec2VpcId               pulumi.StringPtrOutput                `pulumi:"ec2VpcId"`
	GroupDescription       pulumi.StringOutput                   `pulumi:"groupDescription"`
	Tags                   aws.TagArrayOutput                    `pulumi:"tags"`
}

// NewDbSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewDbSecurityGroup(ctx *pulumi.Context,
	name string, args *DbSecurityGroupArgs, opts ...pulumi.ResourceOption) (*DbSecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbSecurityGroupIngress == nil {
		return nil, errors.New("invalid value for required argument 'DbSecurityGroupIngress'")
	}
	if args.GroupDescription == nil {
		return nil, errors.New("invalid value for required argument 'GroupDescription'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"ec2VpcId",
		"groupDescription",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbSecurityGroup
	err := ctx.RegisterResource("aws-native:rds:DbSecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbSecurityGroup gets an existing DbSecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbSecurityGroupState, opts ...pulumi.ResourceOption) (*DbSecurityGroup, error) {
	var resource DbSecurityGroup
	err := ctx.ReadResource("aws-native:rds:DbSecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbSecurityGroup resources.
type dbSecurityGroupState struct {
}

type DbSecurityGroupState struct {
}

func (DbSecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSecurityGroupState)(nil)).Elem()
}

type dbSecurityGroupArgs struct {
	DbSecurityGroupIngress []DbSecurityGroupIngressType `pulumi:"dbSecurityGroupIngress"`
	Ec2VpcId               *string                      `pulumi:"ec2VpcId"`
	GroupDescription       string                       `pulumi:"groupDescription"`
	Tags                   []aws.Tag                    `pulumi:"tags"`
}

// The set of arguments for constructing a DbSecurityGroup resource.
type DbSecurityGroupArgs struct {
	DbSecurityGroupIngress DbSecurityGroupIngressTypeArrayInput
	Ec2VpcId               pulumi.StringPtrInput
	GroupDescription       pulumi.StringInput
	Tags                   aws.TagArrayInput
}

func (DbSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSecurityGroupArgs)(nil)).Elem()
}

type DbSecurityGroupInput interface {
	pulumi.Input

	ToDbSecurityGroupOutput() DbSecurityGroupOutput
	ToDbSecurityGroupOutputWithContext(ctx context.Context) DbSecurityGroupOutput
}

func (*DbSecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSecurityGroup)(nil)).Elem()
}

func (i *DbSecurityGroup) ToDbSecurityGroupOutput() DbSecurityGroupOutput {
	return i.ToDbSecurityGroupOutputWithContext(context.Background())
}

func (i *DbSecurityGroup) ToDbSecurityGroupOutputWithContext(ctx context.Context) DbSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSecurityGroupOutput)
}

type DbSecurityGroupOutput struct{ *pulumi.OutputState }

func (DbSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSecurityGroup)(nil)).Elem()
}

func (o DbSecurityGroupOutput) ToDbSecurityGroupOutput() DbSecurityGroupOutput {
	return o
}

func (o DbSecurityGroupOutput) ToDbSecurityGroupOutputWithContext(ctx context.Context) DbSecurityGroupOutput {
	return o
}

func (o DbSecurityGroupOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSecurityGroup) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o DbSecurityGroupOutput) DbSecurityGroupIngress() DbSecurityGroupIngressTypeArrayOutput {
	return o.ApplyT(func(v *DbSecurityGroup) DbSecurityGroupIngressTypeArrayOutput { return v.DbSecurityGroupIngress }).(DbSecurityGroupIngressTypeArrayOutput)
}

func (o DbSecurityGroupOutput) Ec2VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbSecurityGroup) pulumi.StringPtrOutput { return v.Ec2VpcId }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSecurityGroup) pulumi.StringOutput { return v.GroupDescription }).(pulumi.StringOutput)
}

func (o DbSecurityGroupOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DbSecurityGroup) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbSecurityGroupInput)(nil)).Elem(), &DbSecurityGroup{})
	pulumi.RegisterOutputType(DbSecurityGroupOutput{})
}
