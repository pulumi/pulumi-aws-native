// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The AWS::RDS::DBParameterGroup resource creates a custom parameter group for an RDS database family
func LookupDbParameterGroup(ctx *pulumi.Context, args *LookupDbParameterGroupArgs, opts ...pulumi.InvokeOption) (*LookupDbParameterGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDbParameterGroupResult
	err := ctx.Invoke("aws-native:rds:getDbParameterGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDbParameterGroupArgs struct {
	// Specifies the name of the DB parameter group
	DbParameterGroupName string `pulumi:"dbParameterGroupName"`
}

type LookupDbParameterGroupResult struct {
	// An array of parameter names and values for the parameter update.
	Parameters interface{} `pulumi:"parameters"`
	// An array of key-value pairs to apply to this resource.
	Tags []DbParameterGroupTag `pulumi:"tags"`
}

func LookupDbParameterGroupOutput(ctx *pulumi.Context, args LookupDbParameterGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDbParameterGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDbParameterGroupResult, error) {
			args := v.(LookupDbParameterGroupArgs)
			r, err := LookupDbParameterGroup(ctx, &args, opts...)
			var s LookupDbParameterGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDbParameterGroupResultOutput)
}

type LookupDbParameterGroupOutputArgs struct {
	// Specifies the name of the DB parameter group
	DbParameterGroupName pulumi.StringInput `pulumi:"dbParameterGroupName"`
}

func (LookupDbParameterGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbParameterGroupArgs)(nil)).Elem()
}

type LookupDbParameterGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDbParameterGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbParameterGroupResult)(nil)).Elem()
}

func (o LookupDbParameterGroupResultOutput) ToLookupDbParameterGroupResultOutput() LookupDbParameterGroupResultOutput {
	return o
}

func (o LookupDbParameterGroupResultOutput) ToLookupDbParameterGroupResultOutputWithContext(ctx context.Context) LookupDbParameterGroupResultOutput {
	return o
}

func (o LookupDbParameterGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDbParameterGroupResult] {
	return pulumix.Output[LookupDbParameterGroupResult]{
		OutputState: o.OutputState,
	}
}

// An array of parameter names and values for the parameter update.
func (o LookupDbParameterGroupResultOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDbParameterGroupResult) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDbParameterGroupResultOutput) Tags() DbParameterGroupTagArrayOutput {
	return o.ApplyT(func(v LookupDbParameterGroupResult) []DbParameterGroupTag { return v.Tags }).(DbParameterGroupTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbParameterGroupResultOutput{})
}
