// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a custom DB engine version (CEV).
type CustomDbEngineVersion struct {
	pulumi.CustomResourceState

	// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
	DatabaseInstallationFilesS3BucketName pulumi.StringPtrOutput `pulumi:"databaseInstallationFilesS3BucketName"`
	// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
	DatabaseInstallationFilesS3Prefix pulumi.StringPtrOutput `pulumi:"databaseInstallationFilesS3Prefix"`
	// The ARN of the custom engine version.
	DbEngineVersionArn pulumi.StringOutput `pulumi:"dbEngineVersionArn"`
	// An optional description of your CEV.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The database engine to use for your custom engine version (CEV).
	//  Valid values:
	//   +   ``custom-oracle-ee``
	//   +   ``custom-oracle-ee-cdb``
	Engine pulumi.StringOutput `pulumi:"engine"`
	// The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
	//   *Constraints:* Minimum length is 1. Maximum length is 60.
	//   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// A value that indicates the ID of the AMI.
	ImageId pulumi.StringPtrOutput `pulumi:"imageId"`
	// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
	//  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
	//  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
	//  The following JSON fields are valid:
	//   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
	//      For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
	Manifest pulumi.StringPtrOutput `pulumi:"manifest"`
	// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
	SourceCustomDbEngineVersionIdentifier pulumi.StringPtrOutput `pulumi:"sourceCustomDbEngineVersionIdentifier"`
	// A value that indicates the status of a custom engine version (CEV).
	Status CustomDbEngineVersionStatusPtrOutput `pulumi:"status"`
	// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
	UseAwsProvidedLatestImage pulumi.BoolPtrOutput `pulumi:"useAwsProvidedLatestImage"`
}

// NewCustomDbEngineVersion registers a new resource with the given unique name, arguments, and options.
func NewCustomDbEngineVersion(ctx *pulumi.Context,
	name string, args *CustomDbEngineVersionArgs, opts ...pulumi.ResourceOption) (*CustomDbEngineVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"databaseInstallationFilesS3BucketName",
		"databaseInstallationFilesS3Prefix",
		"engine",
		"engineVersion",
		"imageId",
		"kmsKeyId",
		"manifest",
		"sourceCustomDbEngineVersionIdentifier",
		"useAwsProvidedLatestImage",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomDbEngineVersion
	err := ctx.RegisterResource("aws-native:rds:CustomDbEngineVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomDbEngineVersion gets an existing CustomDbEngineVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomDbEngineVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomDbEngineVersionState, opts ...pulumi.ResourceOption) (*CustomDbEngineVersion, error) {
	var resource CustomDbEngineVersion
	err := ctx.ReadResource("aws-native:rds:CustomDbEngineVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomDbEngineVersion resources.
type customDbEngineVersionState struct {
}

type CustomDbEngineVersionState struct {
}

func (CustomDbEngineVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*customDbEngineVersionState)(nil)).Elem()
}

type customDbEngineVersionArgs struct {
	// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
	DatabaseInstallationFilesS3BucketName *string `pulumi:"databaseInstallationFilesS3BucketName"`
	// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
	DatabaseInstallationFilesS3Prefix *string `pulumi:"databaseInstallationFilesS3Prefix"`
	// An optional description of your CEV.
	Description *string `pulumi:"description"`
	// The database engine to use for your custom engine version (CEV).
	//  Valid values:
	//   +   ``custom-oracle-ee``
	//   +   ``custom-oracle-ee-cdb``
	Engine string `pulumi:"engine"`
	// The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
	//   *Constraints:* Minimum length is 1. Maximum length is 60.
	//   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
	EngineVersion string `pulumi:"engineVersion"`
	// A value that indicates the ID of the AMI.
	ImageId *string `pulumi:"imageId"`
	// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
	//  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
	//  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
	//  The following JSON fields are valid:
	//   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
	//      For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
	Manifest *string `pulumi:"manifest"`
	// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
	SourceCustomDbEngineVersionIdentifier *string `pulumi:"sourceCustomDbEngineVersionIdentifier"`
	// A value that indicates the status of a custom engine version (CEV).
	Status *CustomDbEngineVersionStatus `pulumi:"status"`
	// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
	Tags []aws.Tag `pulumi:"tags"`
	// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
	UseAwsProvidedLatestImage *bool `pulumi:"useAwsProvidedLatestImage"`
}

// The set of arguments for constructing a CustomDbEngineVersion resource.
type CustomDbEngineVersionArgs struct {
	// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
	DatabaseInstallationFilesS3BucketName pulumi.StringPtrInput
	// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
	DatabaseInstallationFilesS3Prefix pulumi.StringPtrInput
	// An optional description of your CEV.
	Description pulumi.StringPtrInput
	// The database engine to use for your custom engine version (CEV).
	//  Valid values:
	//   +   ``custom-oracle-ee``
	//   +   ``custom-oracle-ee-cdb``
	Engine pulumi.StringInput
	// The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
	//   *Constraints:* Minimum length is 1. Maximum length is 60.
	//   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
	EngineVersion pulumi.StringInput
	// A value that indicates the ID of the AMI.
	ImageId pulumi.StringPtrInput
	// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
	//  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
	//  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
	KmsKeyId pulumi.StringPtrInput
	// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
	//  The following JSON fields are valid:
	//   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
	//      For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
	Manifest pulumi.StringPtrInput
	// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
	SourceCustomDbEngineVersionIdentifier pulumi.StringPtrInput
	// A value that indicates the status of a custom engine version (CEV).
	Status CustomDbEngineVersionStatusPtrInput
	// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
	Tags aws.TagArrayInput
	// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
	UseAwsProvidedLatestImage pulumi.BoolPtrInput
}

func (CustomDbEngineVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customDbEngineVersionArgs)(nil)).Elem()
}

type CustomDbEngineVersionInput interface {
	pulumi.Input

	ToCustomDbEngineVersionOutput() CustomDbEngineVersionOutput
	ToCustomDbEngineVersionOutputWithContext(ctx context.Context) CustomDbEngineVersionOutput
}

func (*CustomDbEngineVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDbEngineVersion)(nil)).Elem()
}

func (i *CustomDbEngineVersion) ToCustomDbEngineVersionOutput() CustomDbEngineVersionOutput {
	return i.ToCustomDbEngineVersionOutputWithContext(context.Background())
}

func (i *CustomDbEngineVersion) ToCustomDbEngineVersionOutputWithContext(ctx context.Context) CustomDbEngineVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbEngineVersionOutput)
}

type CustomDbEngineVersionOutput struct{ *pulumi.OutputState }

func (CustomDbEngineVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDbEngineVersion)(nil)).Elem()
}

func (o CustomDbEngineVersionOutput) ToCustomDbEngineVersionOutput() CustomDbEngineVersionOutput {
	return o
}

func (o CustomDbEngineVersionOutput) ToCustomDbEngineVersionOutputWithContext(ctx context.Context) CustomDbEngineVersionOutput {
	return o
}

// The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is “my-custom-installation-files“.
func (o CustomDbEngineVersionOutput) DatabaseInstallationFilesS3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.DatabaseInstallationFilesS3BucketName }).(pulumi.StringPtrOutput)
}

// The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is “123456789012/cev1“. If this setting isn't specified, no prefix is assumed.
func (o CustomDbEngineVersionOutput) DatabaseInstallationFilesS3Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.DatabaseInstallationFilesS3Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the custom engine version.
func (o CustomDbEngineVersionOutput) DbEngineVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringOutput { return v.DbEngineVersionArn }).(pulumi.StringOutput)
}

// An optional description of your CEV.
func (o CustomDbEngineVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The database engine to use for your custom engine version (CEV).
//
//	Valid values:
//	 +   ``custom-oracle-ee``
//	 +   ``custom-oracle-ee-cdb``
func (o CustomDbEngineVersionOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// The name of your CEV. The name format is “major version.customized_string“. For example, a valid CEV name is “19.my_cev1“. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of “Engine“ and “EngineVersion“ is unique per customer per Region.
//
//	*Constraints:* Minimum length is 1. Maximum length is 60.
//	*Pattern:* ``^[a-z0-9_.-]{1,60$``}
func (o CustomDbEngineVersionOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// A value that indicates the ID of the AMI.
func (o CustomDbEngineVersionOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
//
//	If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
//	You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
func (o CustomDbEngineVersionOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
//
//	The following JSON fields are valid:
//	 + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
//	    For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
func (o CustomDbEngineVersionOutput) Manifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.Manifest }).(pulumi.StringPtrOutput)
}

// The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either “Source“ or “UseAwsProvidedLatestImage“. You can't specify a different JSON manifest when you specify “SourceCustomDbEngineVersionIdentifier“.
func (o CustomDbEngineVersionOutput) SourceCustomDbEngineVersionIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.StringPtrOutput { return v.SourceCustomDbEngineVersionIdentifier }).(pulumi.StringPtrOutput)
}

// A value that indicates the status of a custom engine version (CEV).
func (o CustomDbEngineVersionOutput) Status() CustomDbEngineVersionStatusPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) CustomDbEngineVersionStatusPtrOutput { return v.Status }).(CustomDbEngineVersionStatusPtrOutput)
}

// A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
func (o CustomDbEngineVersionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify “UseAwsProvidedLatestImage“, you can't also specify “ImageId“.
func (o CustomDbEngineVersionOutput) UseAwsProvidedLatestImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDbEngineVersion) pulumi.BoolPtrOutput { return v.UseAwsProvidedLatestImage }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbEngineVersionInput)(nil)).Elem(), &CustomDbEngineVersion{})
	pulumi.RegisterOutputType(CustomDbEngineVersionOutput{})
}
