// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DBClusterParameterGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBClusterParameterGroupTagInput is an input type that accepts DBClusterParameterGroupTagArgs and DBClusterParameterGroupTagOutput values.
// You can construct a concrete instance of `DBClusterParameterGroupTagInput` via:
//
//          DBClusterParameterGroupTagArgs{...}
type DBClusterParameterGroupTagInput interface {
	pulumi.Input

	ToDBClusterParameterGroupTagOutput() DBClusterParameterGroupTagOutput
	ToDBClusterParameterGroupTagOutputWithContext(context.Context) DBClusterParameterGroupTagOutput
}

type DBClusterParameterGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBClusterParameterGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterParameterGroupTag)(nil)).Elem()
}

func (i DBClusterParameterGroupTagArgs) ToDBClusterParameterGroupTagOutput() DBClusterParameterGroupTagOutput {
	return i.ToDBClusterParameterGroupTagOutputWithContext(context.Background())
}

func (i DBClusterParameterGroupTagArgs) ToDBClusterParameterGroupTagOutputWithContext(ctx context.Context) DBClusterParameterGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterParameterGroupTagOutput)
}

// DBClusterParameterGroupTagArrayInput is an input type that accepts DBClusterParameterGroupTagArray and DBClusterParameterGroupTagArrayOutput values.
// You can construct a concrete instance of `DBClusterParameterGroupTagArrayInput` via:
//
//          DBClusterParameterGroupTagArray{ DBClusterParameterGroupTagArgs{...} }
type DBClusterParameterGroupTagArrayInput interface {
	pulumi.Input

	ToDBClusterParameterGroupTagArrayOutput() DBClusterParameterGroupTagArrayOutput
	ToDBClusterParameterGroupTagArrayOutputWithContext(context.Context) DBClusterParameterGroupTagArrayOutput
}

type DBClusterParameterGroupTagArray []DBClusterParameterGroupTagInput

func (DBClusterParameterGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterParameterGroupTag)(nil)).Elem()
}

func (i DBClusterParameterGroupTagArray) ToDBClusterParameterGroupTagArrayOutput() DBClusterParameterGroupTagArrayOutput {
	return i.ToDBClusterParameterGroupTagArrayOutputWithContext(context.Background())
}

func (i DBClusterParameterGroupTagArray) ToDBClusterParameterGroupTagArrayOutputWithContext(ctx context.Context) DBClusterParameterGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterParameterGroupTagArrayOutput)
}

type DBClusterParameterGroupTagOutput struct{ *pulumi.OutputState }

func (DBClusterParameterGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterParameterGroupTag)(nil)).Elem()
}

func (o DBClusterParameterGroupTagOutput) ToDBClusterParameterGroupTagOutput() DBClusterParameterGroupTagOutput {
	return o
}

func (o DBClusterParameterGroupTagOutput) ToDBClusterParameterGroupTagOutputWithContext(ctx context.Context) DBClusterParameterGroupTagOutput {
	return o
}

func (o DBClusterParameterGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBClusterParameterGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBClusterParameterGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBClusterParameterGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBClusterParameterGroupTagArrayOutput struct{ *pulumi.OutputState }

func (DBClusterParameterGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterParameterGroupTag)(nil)).Elem()
}

func (o DBClusterParameterGroupTagArrayOutput) ToDBClusterParameterGroupTagArrayOutput() DBClusterParameterGroupTagArrayOutput {
	return o
}

func (o DBClusterParameterGroupTagArrayOutput) ToDBClusterParameterGroupTagArrayOutputWithContext(ctx context.Context) DBClusterParameterGroupTagArrayOutput {
	return o
}

func (o DBClusterParameterGroupTagArrayOutput) Index(i pulumi.IntInput) DBClusterParameterGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBClusterParameterGroupTag {
		return vs[0].([]DBClusterParameterGroupTag)[vs[1].(int)]
	}).(DBClusterParameterGroupTagOutput)
}

type DBClusterRole struct {
	FeatureName *string `pulumi:"featureName"`
	RoleArn     string  `pulumi:"roleArn"`
}

// DBClusterRoleInput is an input type that accepts DBClusterRoleArgs and DBClusterRoleOutput values.
// You can construct a concrete instance of `DBClusterRoleInput` via:
//
//          DBClusterRoleArgs{...}
type DBClusterRoleInput interface {
	pulumi.Input

	ToDBClusterRoleOutput() DBClusterRoleOutput
	ToDBClusterRoleOutputWithContext(context.Context) DBClusterRoleOutput
}

type DBClusterRoleArgs struct {
	FeatureName pulumi.StringPtrInput `pulumi:"featureName"`
	RoleArn     pulumi.StringInput    `pulumi:"roleArn"`
}

func (DBClusterRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterRole)(nil)).Elem()
}

func (i DBClusterRoleArgs) ToDBClusterRoleOutput() DBClusterRoleOutput {
	return i.ToDBClusterRoleOutputWithContext(context.Background())
}

func (i DBClusterRoleArgs) ToDBClusterRoleOutputWithContext(ctx context.Context) DBClusterRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterRoleOutput)
}

// DBClusterRoleArrayInput is an input type that accepts DBClusterRoleArray and DBClusterRoleArrayOutput values.
// You can construct a concrete instance of `DBClusterRoleArrayInput` via:
//
//          DBClusterRoleArray{ DBClusterRoleArgs{...} }
type DBClusterRoleArrayInput interface {
	pulumi.Input

	ToDBClusterRoleArrayOutput() DBClusterRoleArrayOutput
	ToDBClusterRoleArrayOutputWithContext(context.Context) DBClusterRoleArrayOutput
}

type DBClusterRoleArray []DBClusterRoleInput

func (DBClusterRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterRole)(nil)).Elem()
}

func (i DBClusterRoleArray) ToDBClusterRoleArrayOutput() DBClusterRoleArrayOutput {
	return i.ToDBClusterRoleArrayOutputWithContext(context.Background())
}

func (i DBClusterRoleArray) ToDBClusterRoleArrayOutputWithContext(ctx context.Context) DBClusterRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterRoleArrayOutput)
}

type DBClusterRoleOutput struct{ *pulumi.OutputState }

func (DBClusterRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterRole)(nil)).Elem()
}

func (o DBClusterRoleOutput) ToDBClusterRoleOutput() DBClusterRoleOutput {
	return o
}

func (o DBClusterRoleOutput) ToDBClusterRoleOutputWithContext(ctx context.Context) DBClusterRoleOutput {
	return o
}

func (o DBClusterRoleOutput) FeatureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBClusterRole) *string { return v.FeatureName }).(pulumi.StringPtrOutput)
}

func (o DBClusterRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DBClusterRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DBClusterRoleArrayOutput struct{ *pulumi.OutputState }

func (DBClusterRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterRole)(nil)).Elem()
}

func (o DBClusterRoleArrayOutput) ToDBClusterRoleArrayOutput() DBClusterRoleArrayOutput {
	return o
}

func (o DBClusterRoleArrayOutput) ToDBClusterRoleArrayOutputWithContext(ctx context.Context) DBClusterRoleArrayOutput {
	return o
}

func (o DBClusterRoleArrayOutput) Index(i pulumi.IntInput) DBClusterRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBClusterRole {
		return vs[0].([]DBClusterRole)[vs[1].(int)]
	}).(DBClusterRoleOutput)
}

type DBClusterScalingConfiguration struct {
	AutoPause             *bool `pulumi:"autoPause"`
	MaxCapacity           *int  `pulumi:"maxCapacity"`
	MinCapacity           *int  `pulumi:"minCapacity"`
	SecondsUntilAutoPause *int  `pulumi:"secondsUntilAutoPause"`
}

// DBClusterScalingConfigurationInput is an input type that accepts DBClusterScalingConfigurationArgs and DBClusterScalingConfigurationOutput values.
// You can construct a concrete instance of `DBClusterScalingConfigurationInput` via:
//
//          DBClusterScalingConfigurationArgs{...}
type DBClusterScalingConfigurationInput interface {
	pulumi.Input

	ToDBClusterScalingConfigurationOutput() DBClusterScalingConfigurationOutput
	ToDBClusterScalingConfigurationOutputWithContext(context.Context) DBClusterScalingConfigurationOutput
}

type DBClusterScalingConfigurationArgs struct {
	AutoPause             pulumi.BoolPtrInput `pulumi:"autoPause"`
	MaxCapacity           pulumi.IntPtrInput  `pulumi:"maxCapacity"`
	MinCapacity           pulumi.IntPtrInput  `pulumi:"minCapacity"`
	SecondsUntilAutoPause pulumi.IntPtrInput  `pulumi:"secondsUntilAutoPause"`
}

func (DBClusterScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterScalingConfiguration)(nil)).Elem()
}

func (i DBClusterScalingConfigurationArgs) ToDBClusterScalingConfigurationOutput() DBClusterScalingConfigurationOutput {
	return i.ToDBClusterScalingConfigurationOutputWithContext(context.Background())
}

func (i DBClusterScalingConfigurationArgs) ToDBClusterScalingConfigurationOutputWithContext(ctx context.Context) DBClusterScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterScalingConfigurationOutput)
}

func (i DBClusterScalingConfigurationArgs) ToDBClusterScalingConfigurationPtrOutput() DBClusterScalingConfigurationPtrOutput {
	return i.ToDBClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i DBClusterScalingConfigurationArgs) ToDBClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DBClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterScalingConfigurationOutput).ToDBClusterScalingConfigurationPtrOutputWithContext(ctx)
}

// DBClusterScalingConfigurationPtrInput is an input type that accepts DBClusterScalingConfigurationArgs, DBClusterScalingConfigurationPtr and DBClusterScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `DBClusterScalingConfigurationPtrInput` via:
//
//          DBClusterScalingConfigurationArgs{...}
//
//  or:
//
//          nil
type DBClusterScalingConfigurationPtrInput interface {
	pulumi.Input

	ToDBClusterScalingConfigurationPtrOutput() DBClusterScalingConfigurationPtrOutput
	ToDBClusterScalingConfigurationPtrOutputWithContext(context.Context) DBClusterScalingConfigurationPtrOutput
}

type dbclusterScalingConfigurationPtrType DBClusterScalingConfigurationArgs

func DBClusterScalingConfigurationPtr(v *DBClusterScalingConfigurationArgs) DBClusterScalingConfigurationPtrInput {
	return (*dbclusterScalingConfigurationPtrType)(v)
}

func (*dbclusterScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DBClusterScalingConfiguration)(nil)).Elem()
}

func (i *dbclusterScalingConfigurationPtrType) ToDBClusterScalingConfigurationPtrOutput() DBClusterScalingConfigurationPtrOutput {
	return i.ToDBClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dbclusterScalingConfigurationPtrType) ToDBClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DBClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterScalingConfigurationPtrOutput)
}

type DBClusterScalingConfigurationOutput struct{ *pulumi.OutputState }

func (DBClusterScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterScalingConfiguration)(nil)).Elem()
}

func (o DBClusterScalingConfigurationOutput) ToDBClusterScalingConfigurationOutput() DBClusterScalingConfigurationOutput {
	return o
}

func (o DBClusterScalingConfigurationOutput) ToDBClusterScalingConfigurationOutputWithContext(ctx context.Context) DBClusterScalingConfigurationOutput {
	return o
}

func (o DBClusterScalingConfigurationOutput) ToDBClusterScalingConfigurationPtrOutput() DBClusterScalingConfigurationPtrOutput {
	return o.ToDBClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o DBClusterScalingConfigurationOutput) ToDBClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DBClusterScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBClusterScalingConfiguration) *DBClusterScalingConfiguration {
		return &v
	}).(DBClusterScalingConfigurationPtrOutput)
}

func (o DBClusterScalingConfigurationOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DBClusterScalingConfiguration) *bool { return v.AutoPause }).(pulumi.BoolPtrOutput)
}

func (o DBClusterScalingConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBClusterScalingConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

func (o DBClusterScalingConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBClusterScalingConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

func (o DBClusterScalingConfigurationOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBClusterScalingConfiguration) *int { return v.SecondsUntilAutoPause }).(pulumi.IntPtrOutput)
}

type DBClusterScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DBClusterScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBClusterScalingConfiguration)(nil)).Elem()
}

func (o DBClusterScalingConfigurationPtrOutput) ToDBClusterScalingConfigurationPtrOutput() DBClusterScalingConfigurationPtrOutput {
	return o
}

func (o DBClusterScalingConfigurationPtrOutput) ToDBClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DBClusterScalingConfigurationPtrOutput {
	return o
}

func (o DBClusterScalingConfigurationPtrOutput) Elem() DBClusterScalingConfigurationOutput {
	return o.ApplyT(func(v *DBClusterScalingConfiguration) DBClusterScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret DBClusterScalingConfiguration
		return ret
	}).(DBClusterScalingConfigurationOutput)
}

func (o DBClusterScalingConfigurationPtrOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DBClusterScalingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoPause
	}).(pulumi.BoolPtrOutput)
}

func (o DBClusterScalingConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

func (o DBClusterScalingConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

func (o DBClusterScalingConfigurationPtrOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsUntilAutoPause
	}).(pulumi.IntPtrOutput)
}

type DBClusterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBClusterTagInput is an input type that accepts DBClusterTagArgs and DBClusterTagOutput values.
// You can construct a concrete instance of `DBClusterTagInput` via:
//
//          DBClusterTagArgs{...}
type DBClusterTagInput interface {
	pulumi.Input

	ToDBClusterTagOutput() DBClusterTagOutput
	ToDBClusterTagOutputWithContext(context.Context) DBClusterTagOutput
}

type DBClusterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterTag)(nil)).Elem()
}

func (i DBClusterTagArgs) ToDBClusterTagOutput() DBClusterTagOutput {
	return i.ToDBClusterTagOutputWithContext(context.Background())
}

func (i DBClusterTagArgs) ToDBClusterTagOutputWithContext(ctx context.Context) DBClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterTagOutput)
}

// DBClusterTagArrayInput is an input type that accepts DBClusterTagArray and DBClusterTagArrayOutput values.
// You can construct a concrete instance of `DBClusterTagArrayInput` via:
//
//          DBClusterTagArray{ DBClusterTagArgs{...} }
type DBClusterTagArrayInput interface {
	pulumi.Input

	ToDBClusterTagArrayOutput() DBClusterTagArrayOutput
	ToDBClusterTagArrayOutputWithContext(context.Context) DBClusterTagArrayOutput
}

type DBClusterTagArray []DBClusterTagInput

func (DBClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterTag)(nil)).Elem()
}

func (i DBClusterTagArray) ToDBClusterTagArrayOutput() DBClusterTagArrayOutput {
	return i.ToDBClusterTagArrayOutputWithContext(context.Background())
}

func (i DBClusterTagArray) ToDBClusterTagArrayOutputWithContext(ctx context.Context) DBClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBClusterTagArrayOutput)
}

type DBClusterTagOutput struct{ *pulumi.OutputState }

func (DBClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBClusterTag)(nil)).Elem()
}

func (o DBClusterTagOutput) ToDBClusterTagOutput() DBClusterTagOutput {
	return o
}

func (o DBClusterTagOutput) ToDBClusterTagOutputWithContext(ctx context.Context) DBClusterTagOutput {
	return o
}

func (o DBClusterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBClusterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBClusterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBClusterTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBClusterTagArrayOutput struct{ *pulumi.OutputState }

func (DBClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBClusterTag)(nil)).Elem()
}

func (o DBClusterTagArrayOutput) ToDBClusterTagArrayOutput() DBClusterTagArrayOutput {
	return o
}

func (o DBClusterTagArrayOutput) ToDBClusterTagArrayOutputWithContext(ctx context.Context) DBClusterTagArrayOutput {
	return o
}

func (o DBClusterTagArrayOutput) Index(i pulumi.IntInput) DBClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBClusterTag {
		return vs[0].([]DBClusterTag)[vs[1].(int)]
	}).(DBClusterTagOutput)
}

type DBInstanceProcessorFeature struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// DBInstanceProcessorFeatureInput is an input type that accepts DBInstanceProcessorFeatureArgs and DBInstanceProcessorFeatureOutput values.
// You can construct a concrete instance of `DBInstanceProcessorFeatureInput` via:
//
//          DBInstanceProcessorFeatureArgs{...}
type DBInstanceProcessorFeatureInput interface {
	pulumi.Input

	ToDBInstanceProcessorFeatureOutput() DBInstanceProcessorFeatureOutput
	ToDBInstanceProcessorFeatureOutputWithContext(context.Context) DBInstanceProcessorFeatureOutput
}

type DBInstanceProcessorFeatureArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DBInstanceProcessorFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceProcessorFeature)(nil)).Elem()
}

func (i DBInstanceProcessorFeatureArgs) ToDBInstanceProcessorFeatureOutput() DBInstanceProcessorFeatureOutput {
	return i.ToDBInstanceProcessorFeatureOutputWithContext(context.Background())
}

func (i DBInstanceProcessorFeatureArgs) ToDBInstanceProcessorFeatureOutputWithContext(ctx context.Context) DBInstanceProcessorFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceProcessorFeatureOutput)
}

// DBInstanceProcessorFeatureArrayInput is an input type that accepts DBInstanceProcessorFeatureArray and DBInstanceProcessorFeatureArrayOutput values.
// You can construct a concrete instance of `DBInstanceProcessorFeatureArrayInput` via:
//
//          DBInstanceProcessorFeatureArray{ DBInstanceProcessorFeatureArgs{...} }
type DBInstanceProcessorFeatureArrayInput interface {
	pulumi.Input

	ToDBInstanceProcessorFeatureArrayOutput() DBInstanceProcessorFeatureArrayOutput
	ToDBInstanceProcessorFeatureArrayOutputWithContext(context.Context) DBInstanceProcessorFeatureArrayOutput
}

type DBInstanceProcessorFeatureArray []DBInstanceProcessorFeatureInput

func (DBInstanceProcessorFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceProcessorFeature)(nil)).Elem()
}

func (i DBInstanceProcessorFeatureArray) ToDBInstanceProcessorFeatureArrayOutput() DBInstanceProcessorFeatureArrayOutput {
	return i.ToDBInstanceProcessorFeatureArrayOutputWithContext(context.Background())
}

func (i DBInstanceProcessorFeatureArray) ToDBInstanceProcessorFeatureArrayOutputWithContext(ctx context.Context) DBInstanceProcessorFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceProcessorFeatureArrayOutput)
}

type DBInstanceProcessorFeatureOutput struct{ *pulumi.OutputState }

func (DBInstanceProcessorFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceProcessorFeature)(nil)).Elem()
}

func (o DBInstanceProcessorFeatureOutput) ToDBInstanceProcessorFeatureOutput() DBInstanceProcessorFeatureOutput {
	return o
}

func (o DBInstanceProcessorFeatureOutput) ToDBInstanceProcessorFeatureOutputWithContext(ctx context.Context) DBInstanceProcessorFeatureOutput {
	return o
}

func (o DBInstanceProcessorFeatureOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBInstanceProcessorFeature) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DBInstanceProcessorFeatureOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBInstanceProcessorFeature) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DBInstanceProcessorFeatureArrayOutput struct{ *pulumi.OutputState }

func (DBInstanceProcessorFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceProcessorFeature)(nil)).Elem()
}

func (o DBInstanceProcessorFeatureArrayOutput) ToDBInstanceProcessorFeatureArrayOutput() DBInstanceProcessorFeatureArrayOutput {
	return o
}

func (o DBInstanceProcessorFeatureArrayOutput) ToDBInstanceProcessorFeatureArrayOutputWithContext(ctx context.Context) DBInstanceProcessorFeatureArrayOutput {
	return o
}

func (o DBInstanceProcessorFeatureArrayOutput) Index(i pulumi.IntInput) DBInstanceProcessorFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBInstanceProcessorFeature {
		return vs[0].([]DBInstanceProcessorFeature)[vs[1].(int)]
	}).(DBInstanceProcessorFeatureOutput)
}

type DBInstanceRole struct {
	FeatureName string `pulumi:"featureName"`
	RoleArn     string `pulumi:"roleArn"`
}

// DBInstanceRoleInput is an input type that accepts DBInstanceRoleArgs and DBInstanceRoleOutput values.
// You can construct a concrete instance of `DBInstanceRoleInput` via:
//
//          DBInstanceRoleArgs{...}
type DBInstanceRoleInput interface {
	pulumi.Input

	ToDBInstanceRoleOutput() DBInstanceRoleOutput
	ToDBInstanceRoleOutputWithContext(context.Context) DBInstanceRoleOutput
}

type DBInstanceRoleArgs struct {
	FeatureName pulumi.StringInput `pulumi:"featureName"`
	RoleArn     pulumi.StringInput `pulumi:"roleArn"`
}

func (DBInstanceRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceRole)(nil)).Elem()
}

func (i DBInstanceRoleArgs) ToDBInstanceRoleOutput() DBInstanceRoleOutput {
	return i.ToDBInstanceRoleOutputWithContext(context.Background())
}

func (i DBInstanceRoleArgs) ToDBInstanceRoleOutputWithContext(ctx context.Context) DBInstanceRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceRoleOutput)
}

// DBInstanceRoleArrayInput is an input type that accepts DBInstanceRoleArray and DBInstanceRoleArrayOutput values.
// You can construct a concrete instance of `DBInstanceRoleArrayInput` via:
//
//          DBInstanceRoleArray{ DBInstanceRoleArgs{...} }
type DBInstanceRoleArrayInput interface {
	pulumi.Input

	ToDBInstanceRoleArrayOutput() DBInstanceRoleArrayOutput
	ToDBInstanceRoleArrayOutputWithContext(context.Context) DBInstanceRoleArrayOutput
}

type DBInstanceRoleArray []DBInstanceRoleInput

func (DBInstanceRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceRole)(nil)).Elem()
}

func (i DBInstanceRoleArray) ToDBInstanceRoleArrayOutput() DBInstanceRoleArrayOutput {
	return i.ToDBInstanceRoleArrayOutputWithContext(context.Background())
}

func (i DBInstanceRoleArray) ToDBInstanceRoleArrayOutputWithContext(ctx context.Context) DBInstanceRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceRoleArrayOutput)
}

type DBInstanceRoleOutput struct{ *pulumi.OutputState }

func (DBInstanceRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceRole)(nil)).Elem()
}

func (o DBInstanceRoleOutput) ToDBInstanceRoleOutput() DBInstanceRoleOutput {
	return o
}

func (o DBInstanceRoleOutput) ToDBInstanceRoleOutputWithContext(ctx context.Context) DBInstanceRoleOutput {
	return o
}

func (o DBInstanceRoleOutput) FeatureName() pulumi.StringOutput {
	return o.ApplyT(func(v DBInstanceRole) string { return v.FeatureName }).(pulumi.StringOutput)
}

func (o DBInstanceRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DBInstanceRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DBInstanceRoleArrayOutput struct{ *pulumi.OutputState }

func (DBInstanceRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceRole)(nil)).Elem()
}

func (o DBInstanceRoleArrayOutput) ToDBInstanceRoleArrayOutput() DBInstanceRoleArrayOutput {
	return o
}

func (o DBInstanceRoleArrayOutput) ToDBInstanceRoleArrayOutputWithContext(ctx context.Context) DBInstanceRoleArrayOutput {
	return o
}

func (o DBInstanceRoleArrayOutput) Index(i pulumi.IntInput) DBInstanceRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBInstanceRole {
		return vs[0].([]DBInstanceRole)[vs[1].(int)]
	}).(DBInstanceRoleOutput)
}

type DBInstanceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBInstanceTagInput is an input type that accepts DBInstanceTagArgs and DBInstanceTagOutput values.
// You can construct a concrete instance of `DBInstanceTagInput` via:
//
//          DBInstanceTagArgs{...}
type DBInstanceTagInput interface {
	pulumi.Input

	ToDBInstanceTagOutput() DBInstanceTagOutput
	ToDBInstanceTagOutputWithContext(context.Context) DBInstanceTagOutput
}

type DBInstanceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceTag)(nil)).Elem()
}

func (i DBInstanceTagArgs) ToDBInstanceTagOutput() DBInstanceTagOutput {
	return i.ToDBInstanceTagOutputWithContext(context.Background())
}

func (i DBInstanceTagArgs) ToDBInstanceTagOutputWithContext(ctx context.Context) DBInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceTagOutput)
}

// DBInstanceTagArrayInput is an input type that accepts DBInstanceTagArray and DBInstanceTagArrayOutput values.
// You can construct a concrete instance of `DBInstanceTagArrayInput` via:
//
//          DBInstanceTagArray{ DBInstanceTagArgs{...} }
type DBInstanceTagArrayInput interface {
	pulumi.Input

	ToDBInstanceTagArrayOutput() DBInstanceTagArrayOutput
	ToDBInstanceTagArrayOutputWithContext(context.Context) DBInstanceTagArrayOutput
}

type DBInstanceTagArray []DBInstanceTagInput

func (DBInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceTag)(nil)).Elem()
}

func (i DBInstanceTagArray) ToDBInstanceTagArrayOutput() DBInstanceTagArrayOutput {
	return i.ToDBInstanceTagArrayOutputWithContext(context.Background())
}

func (i DBInstanceTagArray) ToDBInstanceTagArrayOutputWithContext(ctx context.Context) DBInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBInstanceTagArrayOutput)
}

type DBInstanceTagOutput struct{ *pulumi.OutputState }

func (DBInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBInstanceTag)(nil)).Elem()
}

func (o DBInstanceTagOutput) ToDBInstanceTagOutput() DBInstanceTagOutput {
	return o
}

func (o DBInstanceTagOutput) ToDBInstanceTagOutputWithContext(ctx context.Context) DBInstanceTagOutput {
	return o
}

func (o DBInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (DBInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBInstanceTag)(nil)).Elem()
}

func (o DBInstanceTagArrayOutput) ToDBInstanceTagArrayOutput() DBInstanceTagArrayOutput {
	return o
}

func (o DBInstanceTagArrayOutput) ToDBInstanceTagArrayOutputWithContext(ctx context.Context) DBInstanceTagArrayOutput {
	return o
}

func (o DBInstanceTagArrayOutput) Index(i pulumi.IntInput) DBInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBInstanceTag {
		return vs[0].([]DBInstanceTag)[vs[1].(int)]
	}).(DBInstanceTagOutput)
}

type DBParameterGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBParameterGroupTagInput is an input type that accepts DBParameterGroupTagArgs and DBParameterGroupTagOutput values.
// You can construct a concrete instance of `DBParameterGroupTagInput` via:
//
//          DBParameterGroupTagArgs{...}
type DBParameterGroupTagInput interface {
	pulumi.Input

	ToDBParameterGroupTagOutput() DBParameterGroupTagOutput
	ToDBParameterGroupTagOutputWithContext(context.Context) DBParameterGroupTagOutput
}

type DBParameterGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBParameterGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBParameterGroupTag)(nil)).Elem()
}

func (i DBParameterGroupTagArgs) ToDBParameterGroupTagOutput() DBParameterGroupTagOutput {
	return i.ToDBParameterGroupTagOutputWithContext(context.Background())
}

func (i DBParameterGroupTagArgs) ToDBParameterGroupTagOutputWithContext(ctx context.Context) DBParameterGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBParameterGroupTagOutput)
}

// DBParameterGroupTagArrayInput is an input type that accepts DBParameterGroupTagArray and DBParameterGroupTagArrayOutput values.
// You can construct a concrete instance of `DBParameterGroupTagArrayInput` via:
//
//          DBParameterGroupTagArray{ DBParameterGroupTagArgs{...} }
type DBParameterGroupTagArrayInput interface {
	pulumi.Input

	ToDBParameterGroupTagArrayOutput() DBParameterGroupTagArrayOutput
	ToDBParameterGroupTagArrayOutputWithContext(context.Context) DBParameterGroupTagArrayOutput
}

type DBParameterGroupTagArray []DBParameterGroupTagInput

func (DBParameterGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBParameterGroupTag)(nil)).Elem()
}

func (i DBParameterGroupTagArray) ToDBParameterGroupTagArrayOutput() DBParameterGroupTagArrayOutput {
	return i.ToDBParameterGroupTagArrayOutputWithContext(context.Background())
}

func (i DBParameterGroupTagArray) ToDBParameterGroupTagArrayOutputWithContext(ctx context.Context) DBParameterGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBParameterGroupTagArrayOutput)
}

type DBParameterGroupTagOutput struct{ *pulumi.OutputState }

func (DBParameterGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBParameterGroupTag)(nil)).Elem()
}

func (o DBParameterGroupTagOutput) ToDBParameterGroupTagOutput() DBParameterGroupTagOutput {
	return o
}

func (o DBParameterGroupTagOutput) ToDBParameterGroupTagOutputWithContext(ctx context.Context) DBParameterGroupTagOutput {
	return o
}

func (o DBParameterGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBParameterGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBParameterGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBParameterGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBParameterGroupTagArrayOutput struct{ *pulumi.OutputState }

func (DBParameterGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBParameterGroupTag)(nil)).Elem()
}

func (o DBParameterGroupTagArrayOutput) ToDBParameterGroupTagArrayOutput() DBParameterGroupTagArrayOutput {
	return o
}

func (o DBParameterGroupTagArrayOutput) ToDBParameterGroupTagArrayOutputWithContext(ctx context.Context) DBParameterGroupTagArrayOutput {
	return o
}

func (o DBParameterGroupTagArrayOutput) Index(i pulumi.IntInput) DBParameterGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBParameterGroupTag {
		return vs[0].([]DBParameterGroupTag)[vs[1].(int)]
	}).(DBParameterGroupTagOutput)
}

type DBProxyAuthFormat struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme *DBProxyAuthFormatAuthScheme `pulumi:"authScheme"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description *string `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
	IAMAuth *DBProxyAuthFormatIAMAuth `pulumi:"iAMAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn *string `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	UserName *string `pulumi:"userName"`
}

// DBProxyAuthFormatInput is an input type that accepts DBProxyAuthFormatArgs and DBProxyAuthFormatOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatInput` via:
//
//          DBProxyAuthFormatArgs{...}
type DBProxyAuthFormatInput interface {
	pulumi.Input

	ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput
	ToDBProxyAuthFormatOutputWithContext(context.Context) DBProxyAuthFormatOutput
}

type DBProxyAuthFormatArgs struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme DBProxyAuthFormatAuthSchemePtrInput `pulumi:"authScheme"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
	IAMAuth DBProxyAuthFormatIAMAuthPtrInput `pulumi:"iAMAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DBProxyAuthFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormat)(nil)).Elem()
}

func (i DBProxyAuthFormatArgs) ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput {
	return i.ToDBProxyAuthFormatOutputWithContext(context.Background())
}

func (i DBProxyAuthFormatArgs) ToDBProxyAuthFormatOutputWithContext(ctx context.Context) DBProxyAuthFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyAuthFormatOutput)
}

// DBProxyAuthFormatArrayInput is an input type that accepts DBProxyAuthFormatArray and DBProxyAuthFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatArrayInput` via:
//
//          DBProxyAuthFormatArray{ DBProxyAuthFormatArgs{...} }
type DBProxyAuthFormatArrayInput interface {
	pulumi.Input

	ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput
	ToDBProxyAuthFormatArrayOutputWithContext(context.Context) DBProxyAuthFormatArrayOutput
}

type DBProxyAuthFormatArray []DBProxyAuthFormatInput

func (DBProxyAuthFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyAuthFormat)(nil)).Elem()
}

func (i DBProxyAuthFormatArray) ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput {
	return i.ToDBProxyAuthFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyAuthFormatArray) ToDBProxyAuthFormatArrayOutputWithContext(ctx context.Context) DBProxyAuthFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyAuthFormatArrayOutput)
}

type DBProxyAuthFormatOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormat)(nil)).Elem()
}

func (o DBProxyAuthFormatOutput) ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput {
	return o
}

func (o DBProxyAuthFormatOutput) ToDBProxyAuthFormatOutputWithContext(ctx context.Context) DBProxyAuthFormatOutput {
	return o
}

// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
func (o DBProxyAuthFormatOutput) AuthScheme() DBProxyAuthFormatAuthSchemePtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *DBProxyAuthFormatAuthScheme { return v.AuthScheme }).(DBProxyAuthFormatAuthSchemePtrOutput)
}

// A user-specified description about the authentication used by a proxy to log in as a specific database user.
func (o DBProxyAuthFormatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
func (o DBProxyAuthFormatOutput) IAMAuth() DBProxyAuthFormatIAMAuthPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *DBProxyAuthFormatIAMAuth { return v.IAMAuth }).(DBProxyAuthFormatIAMAuthPtrOutput)
}

// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
func (o DBProxyAuthFormatOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

// The name of the database user to which the proxy connects.
func (o DBProxyAuthFormatOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DBProxyAuthFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyAuthFormat)(nil)).Elem()
}

func (o DBProxyAuthFormatArrayOutput) ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput {
	return o
}

func (o DBProxyAuthFormatArrayOutput) ToDBProxyAuthFormatArrayOutputWithContext(ctx context.Context) DBProxyAuthFormatArrayOutput {
	return o
}

func (o DBProxyAuthFormatArrayOutput) Index(i pulumi.IntInput) DBProxyAuthFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyAuthFormat {
		return vs[0].([]DBProxyAuthFormat)[vs[1].(int)]
	}).(DBProxyAuthFormatOutput)
}

type DBProxyEndpointTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DBProxyEndpointTagFormatInput is an input type that accepts DBProxyEndpointTagFormatArgs and DBProxyEndpointTagFormatOutput values.
// You can construct a concrete instance of `DBProxyEndpointTagFormatInput` via:
//
//          DBProxyEndpointTagFormatArgs{...}
type DBProxyEndpointTagFormatInput interface {
	pulumi.Input

	ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput
	ToDBProxyEndpointTagFormatOutputWithContext(context.Context) DBProxyEndpointTagFormatOutput
}

type DBProxyEndpointTagFormatArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DBProxyEndpointTagFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTagFormat)(nil)).Elem()
}

func (i DBProxyEndpointTagFormatArgs) ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput {
	return i.ToDBProxyEndpointTagFormatOutputWithContext(context.Background())
}

func (i DBProxyEndpointTagFormatArgs) ToDBProxyEndpointTagFormatOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyEndpointTagFormatOutput)
}

// DBProxyEndpointTagFormatArrayInput is an input type that accepts DBProxyEndpointTagFormatArray and DBProxyEndpointTagFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyEndpointTagFormatArrayInput` via:
//
//          DBProxyEndpointTagFormatArray{ DBProxyEndpointTagFormatArgs{...} }
type DBProxyEndpointTagFormatArrayInput interface {
	pulumi.Input

	ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput
	ToDBProxyEndpointTagFormatArrayOutputWithContext(context.Context) DBProxyEndpointTagFormatArrayOutput
}

type DBProxyEndpointTagFormatArray []DBProxyEndpointTagFormatInput

func (DBProxyEndpointTagFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyEndpointTagFormat)(nil)).Elem()
}

func (i DBProxyEndpointTagFormatArray) ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput {
	return i.ToDBProxyEndpointTagFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyEndpointTagFormatArray) ToDBProxyEndpointTagFormatArrayOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyEndpointTagFormatArrayOutput)
}

type DBProxyEndpointTagFormatOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTagFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTagFormat)(nil)).Elem()
}

func (o DBProxyEndpointTagFormatOutput) ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput {
	return o
}

func (o DBProxyEndpointTagFormatOutput) ToDBProxyEndpointTagFormatOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatOutput {
	return o
}

func (o DBProxyEndpointTagFormatOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyEndpointTagFormat) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DBProxyEndpointTagFormatOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyEndpointTagFormat) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DBProxyEndpointTagFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTagFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyEndpointTagFormat)(nil)).Elem()
}

func (o DBProxyEndpointTagFormatArrayOutput) ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput {
	return o
}

func (o DBProxyEndpointTagFormatArrayOutput) ToDBProxyEndpointTagFormatArrayOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatArrayOutput {
	return o
}

func (o DBProxyEndpointTagFormatArrayOutput) Index(i pulumi.IntInput) DBProxyEndpointTagFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyEndpointTagFormat {
		return vs[0].([]DBProxyEndpointTagFormat)[vs[1].(int)]
	}).(DBProxyEndpointTagFormatOutput)
}

type DBProxyTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DBProxyTagFormatInput is an input type that accepts DBProxyTagFormatArgs and DBProxyTagFormatOutput values.
// You can construct a concrete instance of `DBProxyTagFormatInput` via:
//
//          DBProxyTagFormatArgs{...}
type DBProxyTagFormatInput interface {
	pulumi.Input

	ToDBProxyTagFormatOutput() DBProxyTagFormatOutput
	ToDBProxyTagFormatOutputWithContext(context.Context) DBProxyTagFormatOutput
}

type DBProxyTagFormatArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DBProxyTagFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTagFormat)(nil)).Elem()
}

func (i DBProxyTagFormatArgs) ToDBProxyTagFormatOutput() DBProxyTagFormatOutput {
	return i.ToDBProxyTagFormatOutputWithContext(context.Background())
}

func (i DBProxyTagFormatArgs) ToDBProxyTagFormatOutputWithContext(ctx context.Context) DBProxyTagFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTagFormatOutput)
}

// DBProxyTagFormatArrayInput is an input type that accepts DBProxyTagFormatArray and DBProxyTagFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyTagFormatArrayInput` via:
//
//          DBProxyTagFormatArray{ DBProxyTagFormatArgs{...} }
type DBProxyTagFormatArrayInput interface {
	pulumi.Input

	ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput
	ToDBProxyTagFormatArrayOutputWithContext(context.Context) DBProxyTagFormatArrayOutput
}

type DBProxyTagFormatArray []DBProxyTagFormatInput

func (DBProxyTagFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyTagFormat)(nil)).Elem()
}

func (i DBProxyTagFormatArray) ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput {
	return i.ToDBProxyTagFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyTagFormatArray) ToDBProxyTagFormatArrayOutputWithContext(ctx context.Context) DBProxyTagFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTagFormatArrayOutput)
}

type DBProxyTagFormatOutput struct{ *pulumi.OutputState }

func (DBProxyTagFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTagFormat)(nil)).Elem()
}

func (o DBProxyTagFormatOutput) ToDBProxyTagFormatOutput() DBProxyTagFormatOutput {
	return o
}

func (o DBProxyTagFormatOutput) ToDBProxyTagFormatOutputWithContext(ctx context.Context) DBProxyTagFormatOutput {
	return o
}

func (o DBProxyTagFormatOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTagFormat) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DBProxyTagFormatOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTagFormat) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DBProxyTagFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyTagFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyTagFormat)(nil)).Elem()
}

func (o DBProxyTagFormatArrayOutput) ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput {
	return o
}

func (o DBProxyTagFormatArrayOutput) ToDBProxyTagFormatArrayOutputWithContext(ctx context.Context) DBProxyTagFormatArrayOutput {
	return o
}

func (o DBProxyTagFormatArrayOutput) Index(i pulumi.IntInput) DBProxyTagFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyTagFormat {
		return vs[0].([]DBProxyTagFormat)[vs[1].(int)]
	}).(DBProxyTagFormatOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormat struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout *int `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery *string `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent *int `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent *int `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters []string `pulumi:"sessionPinningFilters"`
}

// DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput is an input type that accepts DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs and DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput values.
// You can construct a concrete instance of `DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput` via:
//
//          DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput interface {
	pulumi.Input

	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout pulumi.IntPtrInput `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery pulumi.StringPtrInput `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent pulumi.IntPtrInput `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent pulumi.IntPtrInput `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters pulumi.StringArrayInput `pulumi:"sessionPinningFilters"`
}

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Background())
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput).ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx)
}

// DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput is an input type that accepts DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs, DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr and DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput values.
// You can construct a concrete instance of `DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput` via:
//
//          DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
//
//  or:
//
//          nil
type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput interface {
	pulumi.Input

	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
}

type dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs

func DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput {
	return (*dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType)(v)
}

func (*dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i *dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i *dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		return &v
	}).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.ConnectionBorrowTimeout }).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string { return v.InitQuery }).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.MaxConnectionsPercent }).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) Elem() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) DBProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		if v != nil {
			return *v
		}
		var ret DBProxyTargetGroupConnectionPoolConfigurationInfoFormat
		return ret
	}).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBorrowTimeout
	}).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string {
		if v == nil {
			return nil
		}
		return v.InitQuery
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		if v == nil {
			return nil
		}
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type DBSecurityGroupIngressType struct {
	CIDRIP                  *string `pulumi:"cIDRIP"`
	EC2SecurityGroupId      *string `pulumi:"eC2SecurityGroupId"`
	EC2SecurityGroupName    *string `pulumi:"eC2SecurityGroupName"`
	EC2SecurityGroupOwnerId *string `pulumi:"eC2SecurityGroupOwnerId"`
}

// DBSecurityGroupIngressTypeInput is an input type that accepts DBSecurityGroupIngressTypeArgs and DBSecurityGroupIngressTypeOutput values.
// You can construct a concrete instance of `DBSecurityGroupIngressTypeInput` via:
//
//          DBSecurityGroupIngressTypeArgs{...}
type DBSecurityGroupIngressTypeInput interface {
	pulumi.Input

	ToDBSecurityGroupIngressTypeOutput() DBSecurityGroupIngressTypeOutput
	ToDBSecurityGroupIngressTypeOutputWithContext(context.Context) DBSecurityGroupIngressTypeOutput
}

type DBSecurityGroupIngressTypeArgs struct {
	CIDRIP                  pulumi.StringPtrInput `pulumi:"cIDRIP"`
	EC2SecurityGroupId      pulumi.StringPtrInput `pulumi:"eC2SecurityGroupId"`
	EC2SecurityGroupName    pulumi.StringPtrInput `pulumi:"eC2SecurityGroupName"`
	EC2SecurityGroupOwnerId pulumi.StringPtrInput `pulumi:"eC2SecurityGroupOwnerId"`
}

func (DBSecurityGroupIngressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSecurityGroupIngressType)(nil)).Elem()
}

func (i DBSecurityGroupIngressTypeArgs) ToDBSecurityGroupIngressTypeOutput() DBSecurityGroupIngressTypeOutput {
	return i.ToDBSecurityGroupIngressTypeOutputWithContext(context.Background())
}

func (i DBSecurityGroupIngressTypeArgs) ToDBSecurityGroupIngressTypeOutputWithContext(ctx context.Context) DBSecurityGroupIngressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSecurityGroupIngressTypeOutput)
}

// DBSecurityGroupIngressTypeArrayInput is an input type that accepts DBSecurityGroupIngressTypeArray and DBSecurityGroupIngressTypeArrayOutput values.
// You can construct a concrete instance of `DBSecurityGroupIngressTypeArrayInput` via:
//
//          DBSecurityGroupIngressTypeArray{ DBSecurityGroupIngressTypeArgs{...} }
type DBSecurityGroupIngressTypeArrayInput interface {
	pulumi.Input

	ToDBSecurityGroupIngressTypeArrayOutput() DBSecurityGroupIngressTypeArrayOutput
	ToDBSecurityGroupIngressTypeArrayOutputWithContext(context.Context) DBSecurityGroupIngressTypeArrayOutput
}

type DBSecurityGroupIngressTypeArray []DBSecurityGroupIngressTypeInput

func (DBSecurityGroupIngressTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSecurityGroupIngressType)(nil)).Elem()
}

func (i DBSecurityGroupIngressTypeArray) ToDBSecurityGroupIngressTypeArrayOutput() DBSecurityGroupIngressTypeArrayOutput {
	return i.ToDBSecurityGroupIngressTypeArrayOutputWithContext(context.Background())
}

func (i DBSecurityGroupIngressTypeArray) ToDBSecurityGroupIngressTypeArrayOutputWithContext(ctx context.Context) DBSecurityGroupIngressTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSecurityGroupIngressTypeArrayOutput)
}

type DBSecurityGroupIngressTypeOutput struct{ *pulumi.OutputState }

func (DBSecurityGroupIngressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSecurityGroupIngressType)(nil)).Elem()
}

func (o DBSecurityGroupIngressTypeOutput) ToDBSecurityGroupIngressTypeOutput() DBSecurityGroupIngressTypeOutput {
	return o
}

func (o DBSecurityGroupIngressTypeOutput) ToDBSecurityGroupIngressTypeOutputWithContext(ctx context.Context) DBSecurityGroupIngressTypeOutput {
	return o
}

func (o DBSecurityGroupIngressTypeOutput) CIDRIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBSecurityGroupIngressType) *string { return v.CIDRIP }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressTypeOutput) EC2SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBSecurityGroupIngressType) *string { return v.EC2SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressTypeOutput) EC2SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBSecurityGroupIngressType) *string { return v.EC2SecurityGroupName }).(pulumi.StringPtrOutput)
}

func (o DBSecurityGroupIngressTypeOutput) EC2SecurityGroupOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBSecurityGroupIngressType) *string { return v.EC2SecurityGroupOwnerId }).(pulumi.StringPtrOutput)
}

type DBSecurityGroupIngressTypeArrayOutput struct{ *pulumi.OutputState }

func (DBSecurityGroupIngressTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSecurityGroupIngressType)(nil)).Elem()
}

func (o DBSecurityGroupIngressTypeArrayOutput) ToDBSecurityGroupIngressTypeArrayOutput() DBSecurityGroupIngressTypeArrayOutput {
	return o
}

func (o DBSecurityGroupIngressTypeArrayOutput) ToDBSecurityGroupIngressTypeArrayOutputWithContext(ctx context.Context) DBSecurityGroupIngressTypeArrayOutput {
	return o
}

func (o DBSecurityGroupIngressTypeArrayOutput) Index(i pulumi.IntInput) DBSecurityGroupIngressTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBSecurityGroupIngressType {
		return vs[0].([]DBSecurityGroupIngressType)[vs[1].(int)]
	}).(DBSecurityGroupIngressTypeOutput)
}

type DBSecurityGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBSecurityGroupTagInput is an input type that accepts DBSecurityGroupTagArgs and DBSecurityGroupTagOutput values.
// You can construct a concrete instance of `DBSecurityGroupTagInput` via:
//
//          DBSecurityGroupTagArgs{...}
type DBSecurityGroupTagInput interface {
	pulumi.Input

	ToDBSecurityGroupTagOutput() DBSecurityGroupTagOutput
	ToDBSecurityGroupTagOutputWithContext(context.Context) DBSecurityGroupTagOutput
}

type DBSecurityGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSecurityGroupTag)(nil)).Elem()
}

func (i DBSecurityGroupTagArgs) ToDBSecurityGroupTagOutput() DBSecurityGroupTagOutput {
	return i.ToDBSecurityGroupTagOutputWithContext(context.Background())
}

func (i DBSecurityGroupTagArgs) ToDBSecurityGroupTagOutputWithContext(ctx context.Context) DBSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSecurityGroupTagOutput)
}

// DBSecurityGroupTagArrayInput is an input type that accepts DBSecurityGroupTagArray and DBSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `DBSecurityGroupTagArrayInput` via:
//
//          DBSecurityGroupTagArray{ DBSecurityGroupTagArgs{...} }
type DBSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToDBSecurityGroupTagArrayOutput() DBSecurityGroupTagArrayOutput
	ToDBSecurityGroupTagArrayOutputWithContext(context.Context) DBSecurityGroupTagArrayOutput
}

type DBSecurityGroupTagArray []DBSecurityGroupTagInput

func (DBSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSecurityGroupTag)(nil)).Elem()
}

func (i DBSecurityGroupTagArray) ToDBSecurityGroupTagArrayOutput() DBSecurityGroupTagArrayOutput {
	return i.ToDBSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i DBSecurityGroupTagArray) ToDBSecurityGroupTagArrayOutputWithContext(ctx context.Context) DBSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSecurityGroupTagArrayOutput)
}

type DBSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (DBSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSecurityGroupTag)(nil)).Elem()
}

func (o DBSecurityGroupTagOutput) ToDBSecurityGroupTagOutput() DBSecurityGroupTagOutput {
	return o
}

func (o DBSecurityGroupTagOutput) ToDBSecurityGroupTagOutputWithContext(ctx context.Context) DBSecurityGroupTagOutput {
	return o
}

func (o DBSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (DBSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSecurityGroupTag)(nil)).Elem()
}

func (o DBSecurityGroupTagArrayOutput) ToDBSecurityGroupTagArrayOutput() DBSecurityGroupTagArrayOutput {
	return o
}

func (o DBSecurityGroupTagArrayOutput) ToDBSecurityGroupTagArrayOutputWithContext(ctx context.Context) DBSecurityGroupTagArrayOutput {
	return o
}

func (o DBSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) DBSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBSecurityGroupTag {
		return vs[0].([]DBSecurityGroupTag)[vs[1].(int)]
	}).(DBSecurityGroupTagOutput)
}

type DBSubnetGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DBSubnetGroupTagInput is an input type that accepts DBSubnetGroupTagArgs and DBSubnetGroupTagOutput values.
// You can construct a concrete instance of `DBSubnetGroupTagInput` via:
//
//          DBSubnetGroupTagArgs{...}
type DBSubnetGroupTagInput interface {
	pulumi.Input

	ToDBSubnetGroupTagOutput() DBSubnetGroupTagOutput
	ToDBSubnetGroupTagOutputWithContext(context.Context) DBSubnetGroupTagOutput
}

type DBSubnetGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DBSubnetGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSubnetGroupTag)(nil)).Elem()
}

func (i DBSubnetGroupTagArgs) ToDBSubnetGroupTagOutput() DBSubnetGroupTagOutput {
	return i.ToDBSubnetGroupTagOutputWithContext(context.Background())
}

func (i DBSubnetGroupTagArgs) ToDBSubnetGroupTagOutputWithContext(ctx context.Context) DBSubnetGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSubnetGroupTagOutput)
}

// DBSubnetGroupTagArrayInput is an input type that accepts DBSubnetGroupTagArray and DBSubnetGroupTagArrayOutput values.
// You can construct a concrete instance of `DBSubnetGroupTagArrayInput` via:
//
//          DBSubnetGroupTagArray{ DBSubnetGroupTagArgs{...} }
type DBSubnetGroupTagArrayInput interface {
	pulumi.Input

	ToDBSubnetGroupTagArrayOutput() DBSubnetGroupTagArrayOutput
	ToDBSubnetGroupTagArrayOutputWithContext(context.Context) DBSubnetGroupTagArrayOutput
}

type DBSubnetGroupTagArray []DBSubnetGroupTagInput

func (DBSubnetGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSubnetGroupTag)(nil)).Elem()
}

func (i DBSubnetGroupTagArray) ToDBSubnetGroupTagArrayOutput() DBSubnetGroupTagArrayOutput {
	return i.ToDBSubnetGroupTagArrayOutputWithContext(context.Background())
}

func (i DBSubnetGroupTagArray) ToDBSubnetGroupTagArrayOutputWithContext(ctx context.Context) DBSubnetGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSubnetGroupTagArrayOutput)
}

type DBSubnetGroupTagOutput struct{ *pulumi.OutputState }

func (DBSubnetGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSubnetGroupTag)(nil)).Elem()
}

func (o DBSubnetGroupTagOutput) ToDBSubnetGroupTagOutput() DBSubnetGroupTagOutput {
	return o
}

func (o DBSubnetGroupTagOutput) ToDBSubnetGroupTagOutputWithContext(ctx context.Context) DBSubnetGroupTagOutput {
	return o
}

func (o DBSubnetGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DBSubnetGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DBSubnetGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DBSubnetGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type DBSubnetGroupTagArrayOutput struct{ *pulumi.OutputState }

func (DBSubnetGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBSubnetGroupTag)(nil)).Elem()
}

func (o DBSubnetGroupTagArrayOutput) ToDBSubnetGroupTagArrayOutput() DBSubnetGroupTagArrayOutput {
	return o
}

func (o DBSubnetGroupTagArrayOutput) ToDBSubnetGroupTagArrayOutputWithContext(ctx context.Context) DBSubnetGroupTagArrayOutput {
	return o
}

func (o DBSubnetGroupTagArrayOutput) Index(i pulumi.IntInput) DBSubnetGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBSubnetGroupTag {
		return vs[0].([]DBSubnetGroupTag)[vs[1].(int)]
	}).(DBSubnetGroupTagOutput)
}

type OptionGroupOptionConfiguration struct {
	DBSecurityGroupMemberships  []string                   `pulumi:"dBSecurityGroupMemberships"`
	OptionName                  string                     `pulumi:"optionName"`
	OptionSettings              []OptionGroupOptionSetting `pulumi:"optionSettings"`
	OptionVersion               *string                    `pulumi:"optionVersion"`
	Port                        *int                       `pulumi:"port"`
	VpcSecurityGroupMemberships []string                   `pulumi:"vpcSecurityGroupMemberships"`
}

// OptionGroupOptionConfigurationInput is an input type that accepts OptionGroupOptionConfigurationArgs and OptionGroupOptionConfigurationOutput values.
// You can construct a concrete instance of `OptionGroupOptionConfigurationInput` via:
//
//          OptionGroupOptionConfigurationArgs{...}
type OptionGroupOptionConfigurationInput interface {
	pulumi.Input

	ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput
	ToOptionGroupOptionConfigurationOutputWithContext(context.Context) OptionGroupOptionConfigurationOutput
}

type OptionGroupOptionConfigurationArgs struct {
	DBSecurityGroupMemberships  pulumi.StringArrayInput            `pulumi:"dBSecurityGroupMemberships"`
	OptionName                  pulumi.StringInput                 `pulumi:"optionName"`
	OptionSettings              OptionGroupOptionSettingArrayInput `pulumi:"optionSettings"`
	OptionVersion               pulumi.StringPtrInput              `pulumi:"optionVersion"`
	Port                        pulumi.IntPtrInput                 `pulumi:"port"`
	VpcSecurityGroupMemberships pulumi.StringArrayInput            `pulumi:"vpcSecurityGroupMemberships"`
}

func (OptionGroupOptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionConfiguration)(nil)).Elem()
}

func (i OptionGroupOptionConfigurationArgs) ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput {
	return i.ToOptionGroupOptionConfigurationOutputWithContext(context.Background())
}

func (i OptionGroupOptionConfigurationArgs) ToOptionGroupOptionConfigurationOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionConfigurationOutput)
}

// OptionGroupOptionConfigurationArrayInput is an input type that accepts OptionGroupOptionConfigurationArray and OptionGroupOptionConfigurationArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionConfigurationArrayInput` via:
//
//          OptionGroupOptionConfigurationArray{ OptionGroupOptionConfigurationArgs{...} }
type OptionGroupOptionConfigurationArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput
	ToOptionGroupOptionConfigurationArrayOutputWithContext(context.Context) OptionGroupOptionConfigurationArrayOutput
}

type OptionGroupOptionConfigurationArray []OptionGroupOptionConfigurationInput

func (OptionGroupOptionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionConfiguration)(nil)).Elem()
}

func (i OptionGroupOptionConfigurationArray) ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput {
	return i.ToOptionGroupOptionConfigurationArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionConfigurationArray) ToOptionGroupOptionConfigurationArrayOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionConfigurationArrayOutput)
}

type OptionGroupOptionConfigurationOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionConfiguration)(nil)).Elem()
}

func (o OptionGroupOptionConfigurationOutput) ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput {
	return o
}

func (o OptionGroupOptionConfigurationOutput) ToOptionGroupOptionConfigurationOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationOutput {
	return o
}

func (o OptionGroupOptionConfigurationOutput) DBSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []string { return v.DBSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

func (o OptionGroupOptionConfigurationOutput) OptionName() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) string { return v.OptionName }).(pulumi.StringOutput)
}

func (o OptionGroupOptionConfigurationOutput) OptionSettings() OptionGroupOptionSettingArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []OptionGroupOptionSetting { return v.OptionSettings }).(OptionGroupOptionSettingArrayOutput)
}

func (o OptionGroupOptionConfigurationOutput) OptionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) *string { return v.OptionVersion }).(pulumi.StringPtrOutput)
}

func (o OptionGroupOptionConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o OptionGroupOptionConfigurationOutput) VpcSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []string { return v.VpcSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

type OptionGroupOptionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionConfiguration)(nil)).Elem()
}

func (o OptionGroupOptionConfigurationArrayOutput) ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput {
	return o
}

func (o OptionGroupOptionConfigurationArrayOutput) ToOptionGroupOptionConfigurationArrayOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationArrayOutput {
	return o
}

func (o OptionGroupOptionConfigurationArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOptionConfiguration {
		return vs[0].([]OptionGroupOptionConfiguration)[vs[1].(int)]
	}).(OptionGroupOptionConfigurationOutput)
}

type OptionGroupOptionSetting struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// OptionGroupOptionSettingInput is an input type that accepts OptionGroupOptionSettingArgs and OptionGroupOptionSettingOutput values.
// You can construct a concrete instance of `OptionGroupOptionSettingInput` via:
//
//          OptionGroupOptionSettingArgs{...}
type OptionGroupOptionSettingInput interface {
	pulumi.Input

	ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput
	ToOptionGroupOptionSettingOutputWithContext(context.Context) OptionGroupOptionSettingOutput
}

type OptionGroupOptionSettingArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OptionGroupOptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionSettingArgs) ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput {
	return i.ToOptionGroupOptionSettingOutputWithContext(context.Background())
}

func (i OptionGroupOptionSettingArgs) ToOptionGroupOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionSettingOutput)
}

// OptionGroupOptionSettingArrayInput is an input type that accepts OptionGroupOptionSettingArray and OptionGroupOptionSettingArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionSettingArrayInput` via:
//
//          OptionGroupOptionSettingArray{ OptionGroupOptionSettingArgs{...} }
type OptionGroupOptionSettingArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput
	ToOptionGroupOptionSettingArrayOutputWithContext(context.Context) OptionGroupOptionSettingArrayOutput
}

type OptionGroupOptionSettingArray []OptionGroupOptionSettingInput

func (OptionGroupOptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionSettingArray) ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput {
	return i.ToOptionGroupOptionSettingArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionSettingArray) ToOptionGroupOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionSettingArrayOutput)
}

type OptionGroupOptionSettingOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionSettingOutput) ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput {
	return o
}

func (o OptionGroupOptionSettingOutput) ToOptionGroupOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionSettingOutput {
	return o
}

func (o OptionGroupOptionSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o OptionGroupOptionSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OptionGroupOptionSettingArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionSettingArrayOutput) ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionSettingArrayOutput) ToOptionGroupOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionSettingArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOptionSetting {
		return vs[0].([]OptionGroupOptionSetting)[vs[1].(int)]
	}).(OptionGroupOptionSettingOutput)
}

type OptionGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// OptionGroupTagInput is an input type that accepts OptionGroupTagArgs and OptionGroupTagOutput values.
// You can construct a concrete instance of `OptionGroupTagInput` via:
//
//          OptionGroupTagArgs{...}
type OptionGroupTagInput interface {
	pulumi.Input

	ToOptionGroupTagOutput() OptionGroupTagOutput
	ToOptionGroupTagOutputWithContext(context.Context) OptionGroupTagOutput
}

type OptionGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (OptionGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupTag)(nil)).Elem()
}

func (i OptionGroupTagArgs) ToOptionGroupTagOutput() OptionGroupTagOutput {
	return i.ToOptionGroupTagOutputWithContext(context.Background())
}

func (i OptionGroupTagArgs) ToOptionGroupTagOutputWithContext(ctx context.Context) OptionGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupTagOutput)
}

// OptionGroupTagArrayInput is an input type that accepts OptionGroupTagArray and OptionGroupTagArrayOutput values.
// You can construct a concrete instance of `OptionGroupTagArrayInput` via:
//
//          OptionGroupTagArray{ OptionGroupTagArgs{...} }
type OptionGroupTagArrayInput interface {
	pulumi.Input

	ToOptionGroupTagArrayOutput() OptionGroupTagArrayOutput
	ToOptionGroupTagArrayOutputWithContext(context.Context) OptionGroupTagArrayOutput
}

type OptionGroupTagArray []OptionGroupTagInput

func (OptionGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupTag)(nil)).Elem()
}

func (i OptionGroupTagArray) ToOptionGroupTagArrayOutput() OptionGroupTagArrayOutput {
	return i.ToOptionGroupTagArrayOutputWithContext(context.Background())
}

func (i OptionGroupTagArray) ToOptionGroupTagArrayOutputWithContext(ctx context.Context) OptionGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupTagArrayOutput)
}

type OptionGroupTagOutput struct{ *pulumi.OutputState }

func (OptionGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupTag)(nil)).Elem()
}

func (o OptionGroupTagOutput) ToOptionGroupTagOutput() OptionGroupTagOutput {
	return o
}

func (o OptionGroupTagOutput) ToOptionGroupTagOutputWithContext(ctx context.Context) OptionGroupTagOutput {
	return o
}

func (o OptionGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o OptionGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type OptionGroupTagArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupTag)(nil)).Elem()
}

func (o OptionGroupTagArrayOutput) ToOptionGroupTagArrayOutput() OptionGroupTagArrayOutput {
	return o
}

func (o OptionGroupTagArrayOutput) ToOptionGroupTagArrayOutputWithContext(ctx context.Context) OptionGroupTagArrayOutput {
	return o
}

func (o OptionGroupTagArrayOutput) Index(i pulumi.IntInput) OptionGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupTag {
		return vs[0].([]OptionGroupTag)[vs[1].(int)]
	}).(OptionGroupTagOutput)
}

func init() {
	pulumi.RegisterOutputType(DBClusterParameterGroupTagOutput{})
	pulumi.RegisterOutputType(DBClusterParameterGroupTagArrayOutput{})
	pulumi.RegisterOutputType(DBClusterRoleOutput{})
	pulumi.RegisterOutputType(DBClusterRoleArrayOutput{})
	pulumi.RegisterOutputType(DBClusterScalingConfigurationOutput{})
	pulumi.RegisterOutputType(DBClusterScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DBClusterTagOutput{})
	pulumi.RegisterOutputType(DBClusterTagArrayOutput{})
	pulumi.RegisterOutputType(DBInstanceProcessorFeatureOutput{})
	pulumi.RegisterOutputType(DBInstanceProcessorFeatureArrayOutput{})
	pulumi.RegisterOutputType(DBInstanceRoleOutput{})
	pulumi.RegisterOutputType(DBInstanceRoleArrayOutput{})
	pulumi.RegisterOutputType(DBInstanceTagOutput{})
	pulumi.RegisterOutputType(DBInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(DBParameterGroupTagOutput{})
	pulumi.RegisterOutputType(DBParameterGroupTagArrayOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTagFormatOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTagFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyTagFormatOutput{})
	pulumi.RegisterOutputType(DBProxyTagFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput{})
	pulumi.RegisterOutputType(DBSecurityGroupIngressTypeOutput{})
	pulumi.RegisterOutputType(DBSecurityGroupIngressTypeArrayOutput{})
	pulumi.RegisterOutputType(DBSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(DBSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(DBSubnetGroupTagOutput{})
	pulumi.RegisterOutputType(DBSubnetGroupTagArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionConfigurationOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionSettingOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionSettingArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupTagOutput{})
	pulumi.RegisterOutputType(OptionGroupTagArrayOutput{})
}
