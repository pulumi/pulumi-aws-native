// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type CustomDbEngineVersionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
type DbClusterDbClusterRole struct {
	// The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
	FeatureName *string `pulumi:"featureName"`
	// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
	RoleArn string `pulumi:"roleArn"`
}

// DbClusterDbClusterRoleInput is an input type that accepts DbClusterDbClusterRoleArgs and DbClusterDbClusterRoleOutput values.
// You can construct a concrete instance of `DbClusterDbClusterRoleInput` via:
//
//	DbClusterDbClusterRoleArgs{...}
type DbClusterDbClusterRoleInput interface {
	pulumi.Input

	ToDbClusterDbClusterRoleOutput() DbClusterDbClusterRoleOutput
	ToDbClusterDbClusterRoleOutputWithContext(context.Context) DbClusterDbClusterRoleOutput
}

// Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
type DbClusterDbClusterRoleArgs struct {
	// The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
	FeatureName pulumi.StringPtrInput `pulumi:"featureName"`
	// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DbClusterDbClusterRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterDbClusterRole)(nil)).Elem()
}

func (i DbClusterDbClusterRoleArgs) ToDbClusterDbClusterRoleOutput() DbClusterDbClusterRoleOutput {
	return i.ToDbClusterDbClusterRoleOutputWithContext(context.Background())
}

func (i DbClusterDbClusterRoleArgs) ToDbClusterDbClusterRoleOutputWithContext(ctx context.Context) DbClusterDbClusterRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterDbClusterRoleOutput)
}

// DbClusterDbClusterRoleArrayInput is an input type that accepts DbClusterDbClusterRoleArray and DbClusterDbClusterRoleArrayOutput values.
// You can construct a concrete instance of `DbClusterDbClusterRoleArrayInput` via:
//
//	DbClusterDbClusterRoleArray{ DbClusterDbClusterRoleArgs{...} }
type DbClusterDbClusterRoleArrayInput interface {
	pulumi.Input

	ToDbClusterDbClusterRoleArrayOutput() DbClusterDbClusterRoleArrayOutput
	ToDbClusterDbClusterRoleArrayOutputWithContext(context.Context) DbClusterDbClusterRoleArrayOutput
}

type DbClusterDbClusterRoleArray []DbClusterDbClusterRoleInput

func (DbClusterDbClusterRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterDbClusterRole)(nil)).Elem()
}

func (i DbClusterDbClusterRoleArray) ToDbClusterDbClusterRoleArrayOutput() DbClusterDbClusterRoleArrayOutput {
	return i.ToDbClusterDbClusterRoleArrayOutputWithContext(context.Background())
}

func (i DbClusterDbClusterRoleArray) ToDbClusterDbClusterRoleArrayOutputWithContext(ctx context.Context) DbClusterDbClusterRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterDbClusterRoleArrayOutput)
}

// Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
type DbClusterDbClusterRoleOutput struct{ *pulumi.OutputState }

func (DbClusterDbClusterRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterDbClusterRole)(nil)).Elem()
}

func (o DbClusterDbClusterRoleOutput) ToDbClusterDbClusterRoleOutput() DbClusterDbClusterRoleOutput {
	return o
}

func (o DbClusterDbClusterRoleOutput) ToDbClusterDbClusterRoleOutputWithContext(ctx context.Context) DbClusterDbClusterRoleOutput {
	return o
}

// The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon RDS API Reference.
func (o DbClusterDbClusterRoleOutput) FeatureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterDbClusterRole) *string { return v.FeatureName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
func (o DbClusterDbClusterRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DbClusterDbClusterRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DbClusterDbClusterRoleArrayOutput struct{ *pulumi.OutputState }

func (DbClusterDbClusterRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbClusterDbClusterRole)(nil)).Elem()
}

func (o DbClusterDbClusterRoleArrayOutput) ToDbClusterDbClusterRoleArrayOutput() DbClusterDbClusterRoleArrayOutput {
	return o
}

func (o DbClusterDbClusterRoleArrayOutput) ToDbClusterDbClusterRoleArrayOutputWithContext(ctx context.Context) DbClusterDbClusterRoleArrayOutput {
	return o
}

func (o DbClusterDbClusterRoleArrayOutput) Index(i pulumi.IntInput) DbClusterDbClusterRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbClusterDbClusterRole {
		return vs[0].([]DbClusterDbClusterRole)[vs[1].(int)]
	}).(DbClusterDbClusterRoleOutput)
}

type DbClusterEndpoint struct {
	// The connection endpoint for the DB cluster.
	Address *string `pulumi:"address"`
	// The port number that will accept connections on this DB cluster.
	Port *string `pulumi:"port"`
}

type DbClusterEndpointOutput struct{ *pulumi.OutputState }

func (DbClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterEndpoint)(nil)).Elem()
}

func (o DbClusterEndpointOutput) ToDbClusterEndpointOutput() DbClusterEndpointOutput {
	return o
}

func (o DbClusterEndpointOutput) ToDbClusterEndpointOutputWithContext(ctx context.Context) DbClusterEndpointOutput {
	return o
}

// The connection endpoint for the DB cluster.
func (o DbClusterEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o DbClusterEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type DbClusterEndpointPtrOutput struct{ *pulumi.OutputState }

func (DbClusterEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterEndpoint)(nil)).Elem()
}

func (o DbClusterEndpointPtrOutput) ToDbClusterEndpointPtrOutput() DbClusterEndpointPtrOutput {
	return o
}

func (o DbClusterEndpointPtrOutput) ToDbClusterEndpointPtrOutputWithContext(ctx context.Context) DbClusterEndpointPtrOutput {
	return o
}

func (o DbClusterEndpointPtrOutput) Elem() DbClusterEndpointOutput {
	return o.ApplyT(func(v *DbClusterEndpoint) DbClusterEndpoint {
		if v != nil {
			return *v
		}
		var ret DbClusterEndpoint
		return ret
	}).(DbClusterEndpointOutput)
}

// The connection endpoint for the DB cluster.
func (o DbClusterEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The port number that will accept connections on this DB cluster.
func (o DbClusterEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

type DbClusterMasterUserSecret struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
}

// DbClusterMasterUserSecretInput is an input type that accepts DbClusterMasterUserSecretArgs and DbClusterMasterUserSecretOutput values.
// You can construct a concrete instance of `DbClusterMasterUserSecretInput` via:
//
//	DbClusterMasterUserSecretArgs{...}
type DbClusterMasterUserSecretInput interface {
	pulumi.Input

	ToDbClusterMasterUserSecretOutput() DbClusterMasterUserSecretOutput
	ToDbClusterMasterUserSecretOutputWithContext(context.Context) DbClusterMasterUserSecretOutput
}

type DbClusterMasterUserSecretArgs struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DbClusterMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterMasterUserSecret)(nil)).Elem()
}

func (i DbClusterMasterUserSecretArgs) ToDbClusterMasterUserSecretOutput() DbClusterMasterUserSecretOutput {
	return i.ToDbClusterMasterUserSecretOutputWithContext(context.Background())
}

func (i DbClusterMasterUserSecretArgs) ToDbClusterMasterUserSecretOutputWithContext(ctx context.Context) DbClusterMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterMasterUserSecretOutput)
}

func (i DbClusterMasterUserSecretArgs) ToDbClusterMasterUserSecretPtrOutput() DbClusterMasterUserSecretPtrOutput {
	return i.ToDbClusterMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i DbClusterMasterUserSecretArgs) ToDbClusterMasterUserSecretPtrOutputWithContext(ctx context.Context) DbClusterMasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterMasterUserSecretOutput).ToDbClusterMasterUserSecretPtrOutputWithContext(ctx)
}

// DbClusterMasterUserSecretPtrInput is an input type that accepts DbClusterMasterUserSecretArgs, DbClusterMasterUserSecretPtr and DbClusterMasterUserSecretPtrOutput values.
// You can construct a concrete instance of `DbClusterMasterUserSecretPtrInput` via:
//
//	        DbClusterMasterUserSecretArgs{...}
//
//	or:
//
//	        nil
type DbClusterMasterUserSecretPtrInput interface {
	pulumi.Input

	ToDbClusterMasterUserSecretPtrOutput() DbClusterMasterUserSecretPtrOutput
	ToDbClusterMasterUserSecretPtrOutputWithContext(context.Context) DbClusterMasterUserSecretPtrOutput
}

type dbClusterMasterUserSecretPtrType DbClusterMasterUserSecretArgs

func DbClusterMasterUserSecretPtr(v *DbClusterMasterUserSecretArgs) DbClusterMasterUserSecretPtrInput {
	return (*dbClusterMasterUserSecretPtrType)(v)
}

func (*dbClusterMasterUserSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterMasterUserSecret)(nil)).Elem()
}

func (i *dbClusterMasterUserSecretPtrType) ToDbClusterMasterUserSecretPtrOutput() DbClusterMasterUserSecretPtrOutput {
	return i.ToDbClusterMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i *dbClusterMasterUserSecretPtrType) ToDbClusterMasterUserSecretPtrOutputWithContext(ctx context.Context) DbClusterMasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterMasterUserSecretPtrOutput)
}

type DbClusterMasterUserSecretOutput struct{ *pulumi.OutputState }

func (DbClusterMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterMasterUserSecret)(nil)).Elem()
}

func (o DbClusterMasterUserSecretOutput) ToDbClusterMasterUserSecretOutput() DbClusterMasterUserSecretOutput {
	return o
}

func (o DbClusterMasterUserSecretOutput) ToDbClusterMasterUserSecretOutputWithContext(ctx context.Context) DbClusterMasterUserSecretOutput {
	return o
}

func (o DbClusterMasterUserSecretOutput) ToDbClusterMasterUserSecretPtrOutput() DbClusterMasterUserSecretPtrOutput {
	return o.ToDbClusterMasterUserSecretPtrOutputWithContext(context.Background())
}

func (o DbClusterMasterUserSecretOutput) ToDbClusterMasterUserSecretPtrOutputWithContext(ctx context.Context) DbClusterMasterUserSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbClusterMasterUserSecret) *DbClusterMasterUserSecret {
		return &v
	}).(DbClusterMasterUserSecretPtrOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o DbClusterMasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterMasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o DbClusterMasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterMasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DbClusterMasterUserSecretPtrOutput struct{ *pulumi.OutputState }

func (DbClusterMasterUserSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterMasterUserSecret)(nil)).Elem()
}

func (o DbClusterMasterUserSecretPtrOutput) ToDbClusterMasterUserSecretPtrOutput() DbClusterMasterUserSecretPtrOutput {
	return o
}

func (o DbClusterMasterUserSecretPtrOutput) ToDbClusterMasterUserSecretPtrOutputWithContext(ctx context.Context) DbClusterMasterUserSecretPtrOutput {
	return o
}

func (o DbClusterMasterUserSecretPtrOutput) Elem() DbClusterMasterUserSecretOutput {
	return o.ApplyT(func(v *DbClusterMasterUserSecret) DbClusterMasterUserSecret {
		if v != nil {
			return *v
		}
		var ret DbClusterMasterUserSecret
		return ret
	}).(DbClusterMasterUserSecretOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o DbClusterMasterUserSecretPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterMasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o DbClusterMasterUserSecretPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterMasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type DbClusterParameterGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

type DbClusterReadEndpoint struct {
	// The reader endpoint for the DB cluster.
	Address *string `pulumi:"address"`
}

// DbClusterReadEndpointInput is an input type that accepts DbClusterReadEndpointArgs and DbClusterReadEndpointOutput values.
// You can construct a concrete instance of `DbClusterReadEndpointInput` via:
//
//	DbClusterReadEndpointArgs{...}
type DbClusterReadEndpointInput interface {
	pulumi.Input

	ToDbClusterReadEndpointOutput() DbClusterReadEndpointOutput
	ToDbClusterReadEndpointOutputWithContext(context.Context) DbClusterReadEndpointOutput
}

type DbClusterReadEndpointArgs struct {
	// The reader endpoint for the DB cluster.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (DbClusterReadEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterReadEndpoint)(nil)).Elem()
}

func (i DbClusterReadEndpointArgs) ToDbClusterReadEndpointOutput() DbClusterReadEndpointOutput {
	return i.ToDbClusterReadEndpointOutputWithContext(context.Background())
}

func (i DbClusterReadEndpointArgs) ToDbClusterReadEndpointOutputWithContext(ctx context.Context) DbClusterReadEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterReadEndpointOutput)
}

func (i DbClusterReadEndpointArgs) ToDbClusterReadEndpointPtrOutput() DbClusterReadEndpointPtrOutput {
	return i.ToDbClusterReadEndpointPtrOutputWithContext(context.Background())
}

func (i DbClusterReadEndpointArgs) ToDbClusterReadEndpointPtrOutputWithContext(ctx context.Context) DbClusterReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterReadEndpointOutput).ToDbClusterReadEndpointPtrOutputWithContext(ctx)
}

// DbClusterReadEndpointPtrInput is an input type that accepts DbClusterReadEndpointArgs, DbClusterReadEndpointPtr and DbClusterReadEndpointPtrOutput values.
// You can construct a concrete instance of `DbClusterReadEndpointPtrInput` via:
//
//	        DbClusterReadEndpointArgs{...}
//
//	or:
//
//	        nil
type DbClusterReadEndpointPtrInput interface {
	pulumi.Input

	ToDbClusterReadEndpointPtrOutput() DbClusterReadEndpointPtrOutput
	ToDbClusterReadEndpointPtrOutputWithContext(context.Context) DbClusterReadEndpointPtrOutput
}

type dbClusterReadEndpointPtrType DbClusterReadEndpointArgs

func DbClusterReadEndpointPtr(v *DbClusterReadEndpointArgs) DbClusterReadEndpointPtrInput {
	return (*dbClusterReadEndpointPtrType)(v)
}

func (*dbClusterReadEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterReadEndpoint)(nil)).Elem()
}

func (i *dbClusterReadEndpointPtrType) ToDbClusterReadEndpointPtrOutput() DbClusterReadEndpointPtrOutput {
	return i.ToDbClusterReadEndpointPtrOutputWithContext(context.Background())
}

func (i *dbClusterReadEndpointPtrType) ToDbClusterReadEndpointPtrOutputWithContext(ctx context.Context) DbClusterReadEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterReadEndpointPtrOutput)
}

type DbClusterReadEndpointOutput struct{ *pulumi.OutputState }

func (DbClusterReadEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterReadEndpoint)(nil)).Elem()
}

func (o DbClusterReadEndpointOutput) ToDbClusterReadEndpointOutput() DbClusterReadEndpointOutput {
	return o
}

func (o DbClusterReadEndpointOutput) ToDbClusterReadEndpointOutputWithContext(ctx context.Context) DbClusterReadEndpointOutput {
	return o
}

func (o DbClusterReadEndpointOutput) ToDbClusterReadEndpointPtrOutput() DbClusterReadEndpointPtrOutput {
	return o.ToDbClusterReadEndpointPtrOutputWithContext(context.Background())
}

func (o DbClusterReadEndpointOutput) ToDbClusterReadEndpointPtrOutputWithContext(ctx context.Context) DbClusterReadEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbClusterReadEndpoint) *DbClusterReadEndpoint {
		return &v
	}).(DbClusterReadEndpointPtrOutput)
}

// The reader endpoint for the DB cluster.
func (o DbClusterReadEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterReadEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type DbClusterReadEndpointPtrOutput struct{ *pulumi.OutputState }

func (DbClusterReadEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterReadEndpoint)(nil)).Elem()
}

func (o DbClusterReadEndpointPtrOutput) ToDbClusterReadEndpointPtrOutput() DbClusterReadEndpointPtrOutput {
	return o
}

func (o DbClusterReadEndpointPtrOutput) ToDbClusterReadEndpointPtrOutputWithContext(ctx context.Context) DbClusterReadEndpointPtrOutput {
	return o
}

func (o DbClusterReadEndpointPtrOutput) Elem() DbClusterReadEndpointOutput {
	return o.ApplyT(func(v *DbClusterReadEndpoint) DbClusterReadEndpoint {
		if v != nil {
			return *v
		}
		var ret DbClusterReadEndpoint
		return ret
	}).(DbClusterReadEndpointOutput)
}

// The reader endpoint for the DB cluster.
func (o DbClusterReadEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterReadEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless DB cluster.
type DbClusterScalingConfiguration struct {
	// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
	AutoPause *bool `pulumi:"autoPause"`
	// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.
	// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
	// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
	// The maximum capacity must be greater than or equal to the minimum capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.
	// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
	// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
	// The minimum capacity must be less than or equal to the maximum capacity.
	MinCapacity *int `pulumi:"minCapacity"`
	// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.
	// The default is 300.
	SecondsBeforeTimeout *int `pulumi:"secondsBeforeTimeout"`
	// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
	SecondsUntilAutoPause *int `pulumi:"secondsUntilAutoPause"`
	// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.
	// ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.
	// RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.
	//
	// For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
	TimeoutAction *string `pulumi:"timeoutAction"`
}

// DbClusterScalingConfigurationInput is an input type that accepts DbClusterScalingConfigurationArgs and DbClusterScalingConfigurationOutput values.
// You can construct a concrete instance of `DbClusterScalingConfigurationInput` via:
//
//	DbClusterScalingConfigurationArgs{...}
type DbClusterScalingConfigurationInput interface {
	pulumi.Input

	ToDbClusterScalingConfigurationOutput() DbClusterScalingConfigurationOutput
	ToDbClusterScalingConfigurationOutputWithContext(context.Context) DbClusterScalingConfigurationOutput
}

// The ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless DB cluster.
type DbClusterScalingConfigurationArgs struct {
	// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
	AutoPause pulumi.BoolPtrInput `pulumi:"autoPause"`
	// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.
	// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
	// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
	// The maximum capacity must be greater than or equal to the minimum capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.
	// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
	// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
	// The minimum capacity must be less than or equal to the maximum capacity.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
	// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.
	// The default is 300.
	SecondsBeforeTimeout pulumi.IntPtrInput `pulumi:"secondsBeforeTimeout"`
	// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
	SecondsUntilAutoPause pulumi.IntPtrInput `pulumi:"secondsUntilAutoPause"`
	// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.
	// ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.
	// RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.
	//
	// For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
	TimeoutAction pulumi.StringPtrInput `pulumi:"timeoutAction"`
}

func (DbClusterScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterScalingConfiguration)(nil)).Elem()
}

func (i DbClusterScalingConfigurationArgs) ToDbClusterScalingConfigurationOutput() DbClusterScalingConfigurationOutput {
	return i.ToDbClusterScalingConfigurationOutputWithContext(context.Background())
}

func (i DbClusterScalingConfigurationArgs) ToDbClusterScalingConfigurationOutputWithContext(ctx context.Context) DbClusterScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterScalingConfigurationOutput)
}

func (i DbClusterScalingConfigurationArgs) ToDbClusterScalingConfigurationPtrOutput() DbClusterScalingConfigurationPtrOutput {
	return i.ToDbClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i DbClusterScalingConfigurationArgs) ToDbClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterScalingConfigurationOutput).ToDbClusterScalingConfigurationPtrOutputWithContext(ctx)
}

// DbClusterScalingConfigurationPtrInput is an input type that accepts DbClusterScalingConfigurationArgs, DbClusterScalingConfigurationPtr and DbClusterScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `DbClusterScalingConfigurationPtrInput` via:
//
//	        DbClusterScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DbClusterScalingConfigurationPtrInput interface {
	pulumi.Input

	ToDbClusterScalingConfigurationPtrOutput() DbClusterScalingConfigurationPtrOutput
	ToDbClusterScalingConfigurationPtrOutputWithContext(context.Context) DbClusterScalingConfigurationPtrOutput
}

type dbClusterScalingConfigurationPtrType DbClusterScalingConfigurationArgs

func DbClusterScalingConfigurationPtr(v *DbClusterScalingConfigurationArgs) DbClusterScalingConfigurationPtrInput {
	return (*dbClusterScalingConfigurationPtrType)(v)
}

func (*dbClusterScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterScalingConfiguration)(nil)).Elem()
}

func (i *dbClusterScalingConfigurationPtrType) ToDbClusterScalingConfigurationPtrOutput() DbClusterScalingConfigurationPtrOutput {
	return i.ToDbClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dbClusterScalingConfigurationPtrType) ToDbClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterScalingConfigurationPtrOutput)
}

// The ScalingConfiguration property type specifies the scaling configuration of an Aurora Serverless DB cluster.
type DbClusterScalingConfigurationOutput struct{ *pulumi.OutputState }

func (DbClusterScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterScalingConfiguration)(nil)).Elem()
}

func (o DbClusterScalingConfigurationOutput) ToDbClusterScalingConfigurationOutput() DbClusterScalingConfigurationOutput {
	return o
}

func (o DbClusterScalingConfigurationOutput) ToDbClusterScalingConfigurationOutputWithContext(ctx context.Context) DbClusterScalingConfigurationOutput {
	return o
}

func (o DbClusterScalingConfigurationOutput) ToDbClusterScalingConfigurationPtrOutput() DbClusterScalingConfigurationPtrOutput {
	return o.ToDbClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o DbClusterScalingConfigurationOutput) ToDbClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbClusterScalingConfiguration) *DbClusterScalingConfiguration {
		return &v
	}).(DbClusterScalingConfigurationPtrOutput)
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o DbClusterScalingConfigurationOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *bool { return v.AutoPause }).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.
// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
// The maximum capacity must be greater than or equal to the minimum capacity.
func (o DbClusterScalingConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.
// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
// The minimum capacity must be less than or equal to the maximum capacity.
func (o DbClusterScalingConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.
// The default is 300.
func (o DbClusterScalingConfigurationOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *int { return v.SecondsBeforeTimeout }).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o DbClusterScalingConfigurationOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *int { return v.SecondsUntilAutoPause }).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.
// ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.
// RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.
//
// For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o DbClusterScalingConfigurationOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbClusterScalingConfiguration) *string { return v.TimeoutAction }).(pulumi.StringPtrOutput)
}

type DbClusterScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DbClusterScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterScalingConfiguration)(nil)).Elem()
}

func (o DbClusterScalingConfigurationPtrOutput) ToDbClusterScalingConfigurationPtrOutput() DbClusterScalingConfigurationPtrOutput {
	return o
}

func (o DbClusterScalingConfigurationPtrOutput) ToDbClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterScalingConfigurationPtrOutput {
	return o
}

func (o DbClusterScalingConfigurationPtrOutput) Elem() DbClusterScalingConfigurationOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) DbClusterScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret DbClusterScalingConfiguration
		return ret
	}).(DbClusterScalingConfigurationOutput)
}

// A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).
func (o DbClusterScalingConfigurationPtrOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoPause
	}).(pulumi.BoolPtrOutput)
}

// The maximum capacity for an Aurora DB cluster in serverless DB engine mode.
// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
// The maximum capacity must be greater than or equal to the minimum capacity.
func (o DbClusterScalingConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// The minimum capacity for an Aurora DB cluster in serverless DB engine mode.
// For Aurora MySQL, valid capacity values are 1, 2, 4, 8, 16, 32, 64, 128, and 256.
// For Aurora PostgreSQL, valid capacity values are 2, 4, 8, 16, 32, 64, 192, and 384.
// The minimum capacity must be less than or equal to the maximum capacity.
func (o DbClusterScalingConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action.
// The default is 300.
func (o DbClusterScalingConfigurationPtrOutput) SecondsBeforeTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsBeforeTimeout
	}).(pulumi.IntPtrOutput)
}

// The time, in seconds, before an Aurora DB cluster in serverless mode is paused.
func (o DbClusterScalingConfigurationPtrOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsUntilAutoPause
	}).(pulumi.IntPtrOutput)
}

// The action to take when the timeout is reached, either ForceApplyCapacityChange or RollbackCapacityChange.
// ForceApplyCapacityChange sets the capacity to the specified value as soon as possible.
// RollbackCapacityChange, the default, ignores the capacity change if a scaling point isn't found in the timeout period.
//
// For more information, see Autoscaling for Aurora Serverless v1 in the Amazon Aurora User Guide.
func (o DbClusterScalingConfigurationPtrOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbClusterScalingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeoutAction
	}).(pulumi.StringPtrOutput)
}

// Contains the scaling configuration of an Aurora Serverless v2 DB cluster.
type DbClusterServerlessV2ScalingConfiguration struct {
	// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
	MinCapacity *float64 `pulumi:"minCapacity"`
}

// DbClusterServerlessV2ScalingConfigurationInput is an input type that accepts DbClusterServerlessV2ScalingConfigurationArgs and DbClusterServerlessV2ScalingConfigurationOutput values.
// You can construct a concrete instance of `DbClusterServerlessV2ScalingConfigurationInput` via:
//
//	DbClusterServerlessV2ScalingConfigurationArgs{...}
type DbClusterServerlessV2ScalingConfigurationInput interface {
	pulumi.Input

	ToDbClusterServerlessV2ScalingConfigurationOutput() DbClusterServerlessV2ScalingConfigurationOutput
	ToDbClusterServerlessV2ScalingConfigurationOutputWithContext(context.Context) DbClusterServerlessV2ScalingConfigurationOutput
}

// Contains the scaling configuration of an Aurora Serverless v2 DB cluster.
type DbClusterServerlessV2ScalingConfigurationArgs struct {
	// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
	MaxCapacity pulumi.Float64PtrInput `pulumi:"maxCapacity"`
	// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
	MinCapacity pulumi.Float64PtrInput `pulumi:"minCapacity"`
}

func (DbClusterServerlessV2ScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (i DbClusterServerlessV2ScalingConfigurationArgs) ToDbClusterServerlessV2ScalingConfigurationOutput() DbClusterServerlessV2ScalingConfigurationOutput {
	return i.ToDbClusterServerlessV2ScalingConfigurationOutputWithContext(context.Background())
}

func (i DbClusterServerlessV2ScalingConfigurationArgs) ToDbClusterServerlessV2ScalingConfigurationOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterServerlessV2ScalingConfigurationOutput)
}

func (i DbClusterServerlessV2ScalingConfigurationArgs) ToDbClusterServerlessV2ScalingConfigurationPtrOutput() DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return i.ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i DbClusterServerlessV2ScalingConfigurationArgs) ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterServerlessV2ScalingConfigurationOutput).ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(ctx)
}

// DbClusterServerlessV2ScalingConfigurationPtrInput is an input type that accepts DbClusterServerlessV2ScalingConfigurationArgs, DbClusterServerlessV2ScalingConfigurationPtr and DbClusterServerlessV2ScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `DbClusterServerlessV2ScalingConfigurationPtrInput` via:
//
//	        DbClusterServerlessV2ScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DbClusterServerlessV2ScalingConfigurationPtrInput interface {
	pulumi.Input

	ToDbClusterServerlessV2ScalingConfigurationPtrOutput() DbClusterServerlessV2ScalingConfigurationPtrOutput
	ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(context.Context) DbClusterServerlessV2ScalingConfigurationPtrOutput
}

type dbClusterServerlessV2ScalingConfigurationPtrType DbClusterServerlessV2ScalingConfigurationArgs

func DbClusterServerlessV2ScalingConfigurationPtr(v *DbClusterServerlessV2ScalingConfigurationArgs) DbClusterServerlessV2ScalingConfigurationPtrInput {
	return (*dbClusterServerlessV2ScalingConfigurationPtrType)(v)
}

func (*dbClusterServerlessV2ScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (i *dbClusterServerlessV2ScalingConfigurationPtrType) ToDbClusterServerlessV2ScalingConfigurationPtrOutput() DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return i.ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dbClusterServerlessV2ScalingConfigurationPtrType) ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbClusterServerlessV2ScalingConfigurationPtrOutput)
}

// Contains the scaling configuration of an Aurora Serverless v2 DB cluster.
type DbClusterServerlessV2ScalingConfigurationOutput struct{ *pulumi.OutputState }

func (DbClusterServerlessV2ScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbClusterServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (o DbClusterServerlessV2ScalingConfigurationOutput) ToDbClusterServerlessV2ScalingConfigurationOutput() DbClusterServerlessV2ScalingConfigurationOutput {
	return o
}

func (o DbClusterServerlessV2ScalingConfigurationOutput) ToDbClusterServerlessV2ScalingConfigurationOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationOutput {
	return o
}

func (o DbClusterServerlessV2ScalingConfigurationOutput) ToDbClusterServerlessV2ScalingConfigurationPtrOutput() DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return o.ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o DbClusterServerlessV2ScalingConfigurationOutput) ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbClusterServerlessV2ScalingConfiguration) *DbClusterServerlessV2ScalingConfiguration {
		return &v
	}).(DbClusterServerlessV2ScalingConfigurationPtrOutput)
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o DbClusterServerlessV2ScalingConfigurationOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DbClusterServerlessV2ScalingConfiguration) *float64 { return v.MaxCapacity }).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o DbClusterServerlessV2ScalingConfigurationOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DbClusterServerlessV2ScalingConfiguration) *float64 { return v.MinCapacity }).(pulumi.Float64PtrOutput)
}

type DbClusterServerlessV2ScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DbClusterServerlessV2ScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbClusterServerlessV2ScalingConfiguration)(nil)).Elem()
}

func (o DbClusterServerlessV2ScalingConfigurationPtrOutput) ToDbClusterServerlessV2ScalingConfigurationPtrOutput() DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return o
}

func (o DbClusterServerlessV2ScalingConfigurationPtrOutput) ToDbClusterServerlessV2ScalingConfigurationPtrOutputWithContext(ctx context.Context) DbClusterServerlessV2ScalingConfigurationPtrOutput {
	return o
}

func (o DbClusterServerlessV2ScalingConfigurationPtrOutput) Elem() DbClusterServerlessV2ScalingConfigurationOutput {
	return o.ApplyT(func(v *DbClusterServerlessV2ScalingConfiguration) DbClusterServerlessV2ScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret DbClusterServerlessV2ScalingConfiguration
		return ret
	}).(DbClusterServerlessV2ScalingConfigurationOutput)
}

// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
func (o DbClusterServerlessV2ScalingConfigurationPtrOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DbClusterServerlessV2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.Float64PtrOutput)
}

// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
func (o DbClusterServerlessV2ScalingConfigurationPtrOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DbClusterServerlessV2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.Float64PtrOutput)
}

// A key-value pair to associate with a resource.
type DbClusterTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Returns the details of the DB instance’s server certificate.
//
//	For more information, see [Using SSL/TLS to encrypt a connection to a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User Guide* and [Using SSL/TLS to encrypt a connection to a DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon Aurora User Guide*.
type DbInstanceCertificateDetails struct {
	// The CA identifier of the CA certificate used for the DB instance's server certificate.
	CaIdentifier *string `pulumi:"caIdentifier"`
	// The expiration date of the DB instance’s server certificate.
	ValidTill *string `pulumi:"validTill"`
}

// DbInstanceCertificateDetailsInput is an input type that accepts DbInstanceCertificateDetailsArgs and DbInstanceCertificateDetailsOutput values.
// You can construct a concrete instance of `DbInstanceCertificateDetailsInput` via:
//
//	DbInstanceCertificateDetailsArgs{...}
type DbInstanceCertificateDetailsInput interface {
	pulumi.Input

	ToDbInstanceCertificateDetailsOutput() DbInstanceCertificateDetailsOutput
	ToDbInstanceCertificateDetailsOutputWithContext(context.Context) DbInstanceCertificateDetailsOutput
}

// Returns the details of the DB instance’s server certificate.
//
//	For more information, see [Using SSL/TLS to encrypt a connection to a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User Guide* and [Using SSL/TLS to encrypt a connection to a DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon Aurora User Guide*.
type DbInstanceCertificateDetailsArgs struct {
	// The CA identifier of the CA certificate used for the DB instance's server certificate.
	CaIdentifier pulumi.StringPtrInput `pulumi:"caIdentifier"`
	// The expiration date of the DB instance’s server certificate.
	ValidTill pulumi.StringPtrInput `pulumi:"validTill"`
}

func (DbInstanceCertificateDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceCertificateDetails)(nil)).Elem()
}

func (i DbInstanceCertificateDetailsArgs) ToDbInstanceCertificateDetailsOutput() DbInstanceCertificateDetailsOutput {
	return i.ToDbInstanceCertificateDetailsOutputWithContext(context.Background())
}

func (i DbInstanceCertificateDetailsArgs) ToDbInstanceCertificateDetailsOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceCertificateDetailsOutput)
}

func (i DbInstanceCertificateDetailsArgs) ToDbInstanceCertificateDetailsPtrOutput() DbInstanceCertificateDetailsPtrOutput {
	return i.ToDbInstanceCertificateDetailsPtrOutputWithContext(context.Background())
}

func (i DbInstanceCertificateDetailsArgs) ToDbInstanceCertificateDetailsPtrOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceCertificateDetailsOutput).ToDbInstanceCertificateDetailsPtrOutputWithContext(ctx)
}

// DbInstanceCertificateDetailsPtrInput is an input type that accepts DbInstanceCertificateDetailsArgs, DbInstanceCertificateDetailsPtr and DbInstanceCertificateDetailsPtrOutput values.
// You can construct a concrete instance of `DbInstanceCertificateDetailsPtrInput` via:
//
//	        DbInstanceCertificateDetailsArgs{...}
//
//	or:
//
//	        nil
type DbInstanceCertificateDetailsPtrInput interface {
	pulumi.Input

	ToDbInstanceCertificateDetailsPtrOutput() DbInstanceCertificateDetailsPtrOutput
	ToDbInstanceCertificateDetailsPtrOutputWithContext(context.Context) DbInstanceCertificateDetailsPtrOutput
}

type dbInstanceCertificateDetailsPtrType DbInstanceCertificateDetailsArgs

func DbInstanceCertificateDetailsPtr(v *DbInstanceCertificateDetailsArgs) DbInstanceCertificateDetailsPtrInput {
	return (*dbInstanceCertificateDetailsPtrType)(v)
}

func (*dbInstanceCertificateDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceCertificateDetails)(nil)).Elem()
}

func (i *dbInstanceCertificateDetailsPtrType) ToDbInstanceCertificateDetailsPtrOutput() DbInstanceCertificateDetailsPtrOutput {
	return i.ToDbInstanceCertificateDetailsPtrOutputWithContext(context.Background())
}

func (i *dbInstanceCertificateDetailsPtrType) ToDbInstanceCertificateDetailsPtrOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceCertificateDetailsPtrOutput)
}

// Returns the details of the DB instance’s server certificate.
//
//	For more information, see [Using SSL/TLS to encrypt a connection to a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html) in the *Amazon RDS User Guide* and [Using SSL/TLS to encrypt a connection to a DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html) in the *Amazon Aurora User Guide*.
type DbInstanceCertificateDetailsOutput struct{ *pulumi.OutputState }

func (DbInstanceCertificateDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceCertificateDetails)(nil)).Elem()
}

func (o DbInstanceCertificateDetailsOutput) ToDbInstanceCertificateDetailsOutput() DbInstanceCertificateDetailsOutput {
	return o
}

func (o DbInstanceCertificateDetailsOutput) ToDbInstanceCertificateDetailsOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsOutput {
	return o
}

func (o DbInstanceCertificateDetailsOutput) ToDbInstanceCertificateDetailsPtrOutput() DbInstanceCertificateDetailsPtrOutput {
	return o.ToDbInstanceCertificateDetailsPtrOutputWithContext(context.Background())
}

func (o DbInstanceCertificateDetailsOutput) ToDbInstanceCertificateDetailsPtrOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstanceCertificateDetails) *DbInstanceCertificateDetails {
		return &v
	}).(DbInstanceCertificateDetailsPtrOutput)
}

// The CA identifier of the CA certificate used for the DB instance's server certificate.
func (o DbInstanceCertificateDetailsOutput) CaIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceCertificateDetails) *string { return v.CaIdentifier }).(pulumi.StringPtrOutput)
}

// The expiration date of the DB instance’s server certificate.
func (o DbInstanceCertificateDetailsOutput) ValidTill() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceCertificateDetails) *string { return v.ValidTill }).(pulumi.StringPtrOutput)
}

type DbInstanceCertificateDetailsPtrOutput struct{ *pulumi.OutputState }

func (DbInstanceCertificateDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceCertificateDetails)(nil)).Elem()
}

func (o DbInstanceCertificateDetailsPtrOutput) ToDbInstanceCertificateDetailsPtrOutput() DbInstanceCertificateDetailsPtrOutput {
	return o
}

func (o DbInstanceCertificateDetailsPtrOutput) ToDbInstanceCertificateDetailsPtrOutputWithContext(ctx context.Context) DbInstanceCertificateDetailsPtrOutput {
	return o
}

func (o DbInstanceCertificateDetailsPtrOutput) Elem() DbInstanceCertificateDetailsOutput {
	return o.ApplyT(func(v *DbInstanceCertificateDetails) DbInstanceCertificateDetails {
		if v != nil {
			return *v
		}
		var ret DbInstanceCertificateDetails
		return ret
	}).(DbInstanceCertificateDetailsOutput)
}

// The CA identifier of the CA certificate used for the DB instance's server certificate.
func (o DbInstanceCertificateDetailsPtrOutput) CaIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceCertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.CaIdentifier
	}).(pulumi.StringPtrOutput)
}

// The expiration date of the DB instance’s server certificate.
func (o DbInstanceCertificateDetailsPtrOutput) ValidTill() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceCertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.ValidTill
	}).(pulumi.StringPtrOutput)
}

// Information about an AWS Identity and Access Management (IAM) role that is associated with a DB instance.
type DbInstanceDbInstanceRole struct {
	// The name of the feature associated with the AWS Identity and Access Management (IAM) role. IAM roles that are associated with a DB instance grant permission for the DB instance to access other AWS services on your behalf. For the list of supported feature names, see the ``SupportedFeatureNames`` description in [DBEngineVersion](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBEngineVersion.html) in the *Amazon RDS API Reference*.
	FeatureName string `pulumi:"featureName"`
	// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.
	RoleArn string `pulumi:"roleArn"`
}

// DbInstanceDbInstanceRoleInput is an input type that accepts DbInstanceDbInstanceRoleArgs and DbInstanceDbInstanceRoleOutput values.
// You can construct a concrete instance of `DbInstanceDbInstanceRoleInput` via:
//
//	DbInstanceDbInstanceRoleArgs{...}
type DbInstanceDbInstanceRoleInput interface {
	pulumi.Input

	ToDbInstanceDbInstanceRoleOutput() DbInstanceDbInstanceRoleOutput
	ToDbInstanceDbInstanceRoleOutputWithContext(context.Context) DbInstanceDbInstanceRoleOutput
}

// Information about an AWS Identity and Access Management (IAM) role that is associated with a DB instance.
type DbInstanceDbInstanceRoleArgs struct {
	// The name of the feature associated with the AWS Identity and Access Management (IAM) role. IAM roles that are associated with a DB instance grant permission for the DB instance to access other AWS services on your behalf. For the list of supported feature names, see the ``SupportedFeatureNames`` description in [DBEngineVersion](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBEngineVersion.html) in the *Amazon RDS API Reference*.
	FeatureName pulumi.StringInput `pulumi:"featureName"`
	// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DbInstanceDbInstanceRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceDbInstanceRole)(nil)).Elem()
}

func (i DbInstanceDbInstanceRoleArgs) ToDbInstanceDbInstanceRoleOutput() DbInstanceDbInstanceRoleOutput {
	return i.ToDbInstanceDbInstanceRoleOutputWithContext(context.Background())
}

func (i DbInstanceDbInstanceRoleArgs) ToDbInstanceDbInstanceRoleOutputWithContext(ctx context.Context) DbInstanceDbInstanceRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceDbInstanceRoleOutput)
}

// DbInstanceDbInstanceRoleArrayInput is an input type that accepts DbInstanceDbInstanceRoleArray and DbInstanceDbInstanceRoleArrayOutput values.
// You can construct a concrete instance of `DbInstanceDbInstanceRoleArrayInput` via:
//
//	DbInstanceDbInstanceRoleArray{ DbInstanceDbInstanceRoleArgs{...} }
type DbInstanceDbInstanceRoleArrayInput interface {
	pulumi.Input

	ToDbInstanceDbInstanceRoleArrayOutput() DbInstanceDbInstanceRoleArrayOutput
	ToDbInstanceDbInstanceRoleArrayOutputWithContext(context.Context) DbInstanceDbInstanceRoleArrayOutput
}

type DbInstanceDbInstanceRoleArray []DbInstanceDbInstanceRoleInput

func (DbInstanceDbInstanceRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceDbInstanceRole)(nil)).Elem()
}

func (i DbInstanceDbInstanceRoleArray) ToDbInstanceDbInstanceRoleArrayOutput() DbInstanceDbInstanceRoleArrayOutput {
	return i.ToDbInstanceDbInstanceRoleArrayOutputWithContext(context.Background())
}

func (i DbInstanceDbInstanceRoleArray) ToDbInstanceDbInstanceRoleArrayOutputWithContext(ctx context.Context) DbInstanceDbInstanceRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceDbInstanceRoleArrayOutput)
}

// Information about an AWS Identity and Access Management (IAM) role that is associated with a DB instance.
type DbInstanceDbInstanceRoleOutput struct{ *pulumi.OutputState }

func (DbInstanceDbInstanceRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceDbInstanceRole)(nil)).Elem()
}

func (o DbInstanceDbInstanceRoleOutput) ToDbInstanceDbInstanceRoleOutput() DbInstanceDbInstanceRoleOutput {
	return o
}

func (o DbInstanceDbInstanceRoleOutput) ToDbInstanceDbInstanceRoleOutputWithContext(ctx context.Context) DbInstanceDbInstanceRoleOutput {
	return o
}

// The name of the feature associated with the AWS Identity and Access Management (IAM) role. IAM roles that are associated with a DB instance grant permission for the DB instance to access other AWS services on your behalf. For the list of supported feature names, see the “SupportedFeatureNames“ description in [DBEngineVersion](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBEngineVersion.html) in the *Amazon RDS API Reference*.
func (o DbInstanceDbInstanceRoleOutput) FeatureName() pulumi.StringOutput {
	return o.ApplyT(func(v DbInstanceDbInstanceRole) string { return v.FeatureName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.
func (o DbInstanceDbInstanceRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DbInstanceDbInstanceRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DbInstanceDbInstanceRoleArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceDbInstanceRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceDbInstanceRole)(nil)).Elem()
}

func (o DbInstanceDbInstanceRoleArrayOutput) ToDbInstanceDbInstanceRoleArrayOutput() DbInstanceDbInstanceRoleArrayOutput {
	return o
}

func (o DbInstanceDbInstanceRoleArrayOutput) ToDbInstanceDbInstanceRoleArrayOutputWithContext(ctx context.Context) DbInstanceDbInstanceRoleArrayOutput {
	return o
}

func (o DbInstanceDbInstanceRoleArrayOutput) Index(i pulumi.IntInput) DbInstanceDbInstanceRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceDbInstanceRole {
		return vs[0].([]DbInstanceDbInstanceRole)[vs[1].(int)]
	}).(DbInstanceDbInstanceRoleOutput)
}

// This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:
//
//   - “CreateDBInstance“
//
//   - “DescribeDBInstances“
//
//   - “DeleteDBInstance“
//
//     For the data structure that represents Amazon Aurora DB cluster endpoints, see “DBClusterEndpoint“.
type DbInstanceEndpoint struct {
	// Specifies the DNS address of the DB instance.
	Address *string `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// Specifies the port that the database engine is listening on.
	Port *string `pulumi:"port"`
}

// DbInstanceEndpointInput is an input type that accepts DbInstanceEndpointArgs and DbInstanceEndpointOutput values.
// You can construct a concrete instance of `DbInstanceEndpointInput` via:
//
//	DbInstanceEndpointArgs{...}
type DbInstanceEndpointInput interface {
	pulumi.Input

	ToDbInstanceEndpointOutput() DbInstanceEndpointOutput
	ToDbInstanceEndpointOutputWithContext(context.Context) DbInstanceEndpointOutput
}

// This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:
//
//   - “CreateDBInstance“
//
//   - “DescribeDBInstances“
//
//   - “DeleteDBInstance“
//
//     For the data structure that represents Amazon Aurora DB cluster endpoints, see “DBClusterEndpoint“.
type DbInstanceEndpointArgs struct {
	// Specifies the DNS address of the DB instance.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
	// Specifies the port that the database engine is listening on.
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (DbInstanceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceEndpoint)(nil)).Elem()
}

func (i DbInstanceEndpointArgs) ToDbInstanceEndpointOutput() DbInstanceEndpointOutput {
	return i.ToDbInstanceEndpointOutputWithContext(context.Background())
}

func (i DbInstanceEndpointArgs) ToDbInstanceEndpointOutputWithContext(ctx context.Context) DbInstanceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceEndpointOutput)
}

func (i DbInstanceEndpointArgs) ToDbInstanceEndpointPtrOutput() DbInstanceEndpointPtrOutput {
	return i.ToDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (i DbInstanceEndpointArgs) ToDbInstanceEndpointPtrOutputWithContext(ctx context.Context) DbInstanceEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceEndpointOutput).ToDbInstanceEndpointPtrOutputWithContext(ctx)
}

// DbInstanceEndpointPtrInput is an input type that accepts DbInstanceEndpointArgs, DbInstanceEndpointPtr and DbInstanceEndpointPtrOutput values.
// You can construct a concrete instance of `DbInstanceEndpointPtrInput` via:
//
//	        DbInstanceEndpointArgs{...}
//
//	or:
//
//	        nil
type DbInstanceEndpointPtrInput interface {
	pulumi.Input

	ToDbInstanceEndpointPtrOutput() DbInstanceEndpointPtrOutput
	ToDbInstanceEndpointPtrOutputWithContext(context.Context) DbInstanceEndpointPtrOutput
}

type dbInstanceEndpointPtrType DbInstanceEndpointArgs

func DbInstanceEndpointPtr(v *DbInstanceEndpointArgs) DbInstanceEndpointPtrInput {
	return (*dbInstanceEndpointPtrType)(v)
}

func (*dbInstanceEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceEndpoint)(nil)).Elem()
}

func (i *dbInstanceEndpointPtrType) ToDbInstanceEndpointPtrOutput() DbInstanceEndpointPtrOutput {
	return i.ToDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (i *dbInstanceEndpointPtrType) ToDbInstanceEndpointPtrOutputWithContext(ctx context.Context) DbInstanceEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceEndpointPtrOutput)
}

// This data type represents the information you need to connect to an Amazon RDS DB instance. This data type is used as a response element in the following actions:
//
//   - “CreateDBInstance“
//
//   - “DescribeDBInstances“
//
//   - “DeleteDBInstance“
//
//     For the data structure that represents Amazon Aurora DB cluster endpoints, see “DBClusterEndpoint“.
type DbInstanceEndpointOutput struct{ *pulumi.OutputState }

func (DbInstanceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceEndpoint)(nil)).Elem()
}

func (o DbInstanceEndpointOutput) ToDbInstanceEndpointOutput() DbInstanceEndpointOutput {
	return o
}

func (o DbInstanceEndpointOutput) ToDbInstanceEndpointOutputWithContext(ctx context.Context) DbInstanceEndpointOutput {
	return o
}

func (o DbInstanceEndpointOutput) ToDbInstanceEndpointPtrOutput() DbInstanceEndpointPtrOutput {
	return o.ToDbInstanceEndpointPtrOutputWithContext(context.Background())
}

func (o DbInstanceEndpointOutput) ToDbInstanceEndpointPtrOutputWithContext(ctx context.Context) DbInstanceEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstanceEndpoint) *DbInstanceEndpoint {
		return &v
	}).(DbInstanceEndpointPtrOutput)
}

// Specifies the DNS address of the DB instance.
func (o DbInstanceEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o DbInstanceEndpointOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceEndpoint) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o DbInstanceEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type DbInstanceEndpointPtrOutput struct{ *pulumi.OutputState }

func (DbInstanceEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceEndpoint)(nil)).Elem()
}

func (o DbInstanceEndpointPtrOutput) ToDbInstanceEndpointPtrOutput() DbInstanceEndpointPtrOutput {
	return o
}

func (o DbInstanceEndpointPtrOutput) ToDbInstanceEndpointPtrOutputWithContext(ctx context.Context) DbInstanceEndpointPtrOutput {
	return o
}

func (o DbInstanceEndpointPtrOutput) Elem() DbInstanceEndpointOutput {
	return o.ApplyT(func(v *DbInstanceEndpoint) DbInstanceEndpoint {
		if v != nil {
			return *v
		}
		var ret DbInstanceEndpoint
		return ret
	}).(DbInstanceEndpointOutput)
}

// Specifies the DNS address of the DB instance.
func (o DbInstanceEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o DbInstanceEndpointPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

// Specifies the port that the database engine is listening on.
func (o DbInstanceEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The “MasterUserSecret“ return value specifies the secret managed by RDS in AWS Secrets Manager for the master user password.
//
//	For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
type DbInstanceMasterUserSecret struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
}

// DbInstanceMasterUserSecretInput is an input type that accepts DbInstanceMasterUserSecretArgs and DbInstanceMasterUserSecretOutput values.
// You can construct a concrete instance of `DbInstanceMasterUserSecretInput` via:
//
//	DbInstanceMasterUserSecretArgs{...}
type DbInstanceMasterUserSecretInput interface {
	pulumi.Input

	ToDbInstanceMasterUserSecretOutput() DbInstanceMasterUserSecretOutput
	ToDbInstanceMasterUserSecretOutputWithContext(context.Context) DbInstanceMasterUserSecretOutput
}

// The “MasterUserSecret“ return value specifies the secret managed by RDS in AWS Secrets Manager for the master user password.
//
//	For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
type DbInstanceMasterUserSecretArgs struct {
	// The AWS KMS key identifier that is used to encrypt the secret.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DbInstanceMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceMasterUserSecret)(nil)).Elem()
}

func (i DbInstanceMasterUserSecretArgs) ToDbInstanceMasterUserSecretOutput() DbInstanceMasterUserSecretOutput {
	return i.ToDbInstanceMasterUserSecretOutputWithContext(context.Background())
}

func (i DbInstanceMasterUserSecretArgs) ToDbInstanceMasterUserSecretOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceMasterUserSecretOutput)
}

func (i DbInstanceMasterUserSecretArgs) ToDbInstanceMasterUserSecretPtrOutput() DbInstanceMasterUserSecretPtrOutput {
	return i.ToDbInstanceMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i DbInstanceMasterUserSecretArgs) ToDbInstanceMasterUserSecretPtrOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceMasterUserSecretOutput).ToDbInstanceMasterUserSecretPtrOutputWithContext(ctx)
}

// DbInstanceMasterUserSecretPtrInput is an input type that accepts DbInstanceMasterUserSecretArgs, DbInstanceMasterUserSecretPtr and DbInstanceMasterUserSecretPtrOutput values.
// You can construct a concrete instance of `DbInstanceMasterUserSecretPtrInput` via:
//
//	        DbInstanceMasterUserSecretArgs{...}
//
//	or:
//
//	        nil
type DbInstanceMasterUserSecretPtrInput interface {
	pulumi.Input

	ToDbInstanceMasterUserSecretPtrOutput() DbInstanceMasterUserSecretPtrOutput
	ToDbInstanceMasterUserSecretPtrOutputWithContext(context.Context) DbInstanceMasterUserSecretPtrOutput
}

type dbInstanceMasterUserSecretPtrType DbInstanceMasterUserSecretArgs

func DbInstanceMasterUserSecretPtr(v *DbInstanceMasterUserSecretArgs) DbInstanceMasterUserSecretPtrInput {
	return (*dbInstanceMasterUserSecretPtrType)(v)
}

func (*dbInstanceMasterUserSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceMasterUserSecret)(nil)).Elem()
}

func (i *dbInstanceMasterUserSecretPtrType) ToDbInstanceMasterUserSecretPtrOutput() DbInstanceMasterUserSecretPtrOutput {
	return i.ToDbInstanceMasterUserSecretPtrOutputWithContext(context.Background())
}

func (i *dbInstanceMasterUserSecretPtrType) ToDbInstanceMasterUserSecretPtrOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceMasterUserSecretPtrOutput)
}

// The “MasterUserSecret“ return value specifies the secret managed by RDS in AWS Secrets Manager for the master user password.
//
//	For more information, see [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html) in the *Amazon RDS User Guide* and [Password management with Secrets Manager](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html) in the *Amazon Aurora User Guide.*
type DbInstanceMasterUserSecretOutput struct{ *pulumi.OutputState }

func (DbInstanceMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceMasterUserSecret)(nil)).Elem()
}

func (o DbInstanceMasterUserSecretOutput) ToDbInstanceMasterUserSecretOutput() DbInstanceMasterUserSecretOutput {
	return o
}

func (o DbInstanceMasterUserSecretOutput) ToDbInstanceMasterUserSecretOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretOutput {
	return o
}

func (o DbInstanceMasterUserSecretOutput) ToDbInstanceMasterUserSecretPtrOutput() DbInstanceMasterUserSecretPtrOutput {
	return o.ToDbInstanceMasterUserSecretPtrOutputWithContext(context.Background())
}

func (o DbInstanceMasterUserSecretOutput) ToDbInstanceMasterUserSecretPtrOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbInstanceMasterUserSecret) *DbInstanceMasterUserSecret {
		return &v
	}).(DbInstanceMasterUserSecretPtrOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o DbInstanceMasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceMasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o DbInstanceMasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceMasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DbInstanceMasterUserSecretPtrOutput struct{ *pulumi.OutputState }

func (DbInstanceMasterUserSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstanceMasterUserSecret)(nil)).Elem()
}

func (o DbInstanceMasterUserSecretPtrOutput) ToDbInstanceMasterUserSecretPtrOutput() DbInstanceMasterUserSecretPtrOutput {
	return o
}

func (o DbInstanceMasterUserSecretPtrOutput) ToDbInstanceMasterUserSecretPtrOutputWithContext(ctx context.Context) DbInstanceMasterUserSecretPtrOutput {
	return o
}

func (o DbInstanceMasterUserSecretPtrOutput) Elem() DbInstanceMasterUserSecretOutput {
	return o.ApplyT(func(v *DbInstanceMasterUserSecret) DbInstanceMasterUserSecret {
		if v != nil {
			return *v
		}
		var ret DbInstanceMasterUserSecret
		return ret
	}).(DbInstanceMasterUserSecretOutput)
}

// The AWS KMS key identifier that is used to encrypt the secret.
func (o DbInstanceMasterUserSecretPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceMasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o DbInstanceMasterUserSecretPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstanceMasterUserSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// The “ProcessorFeature“ property type specifies the processor features of a DB instance class status.
type DbInstanceProcessorFeature struct {
	// The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``.
	Name *DbInstanceProcessorFeatureName `pulumi:"name"`
	// The value of a processor feature name.
	Value *string `pulumi:"value"`
}

// DbInstanceProcessorFeatureInput is an input type that accepts DbInstanceProcessorFeatureArgs and DbInstanceProcessorFeatureOutput values.
// You can construct a concrete instance of `DbInstanceProcessorFeatureInput` via:
//
//	DbInstanceProcessorFeatureArgs{...}
type DbInstanceProcessorFeatureInput interface {
	pulumi.Input

	ToDbInstanceProcessorFeatureOutput() DbInstanceProcessorFeatureOutput
	ToDbInstanceProcessorFeatureOutputWithContext(context.Context) DbInstanceProcessorFeatureOutput
}

// The “ProcessorFeature“ property type specifies the processor features of a DB instance class status.
type DbInstanceProcessorFeatureArgs struct {
	// The name of the processor feature. Valid names are ``coreCount`` and ``threadsPerCore``.
	Name DbInstanceProcessorFeatureNamePtrInput `pulumi:"name"`
	// The value of a processor feature name.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DbInstanceProcessorFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceProcessorFeature)(nil)).Elem()
}

func (i DbInstanceProcessorFeatureArgs) ToDbInstanceProcessorFeatureOutput() DbInstanceProcessorFeatureOutput {
	return i.ToDbInstanceProcessorFeatureOutputWithContext(context.Background())
}

func (i DbInstanceProcessorFeatureArgs) ToDbInstanceProcessorFeatureOutputWithContext(ctx context.Context) DbInstanceProcessorFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceProcessorFeatureOutput)
}

// DbInstanceProcessorFeatureArrayInput is an input type that accepts DbInstanceProcessorFeatureArray and DbInstanceProcessorFeatureArrayOutput values.
// You can construct a concrete instance of `DbInstanceProcessorFeatureArrayInput` via:
//
//	DbInstanceProcessorFeatureArray{ DbInstanceProcessorFeatureArgs{...} }
type DbInstanceProcessorFeatureArrayInput interface {
	pulumi.Input

	ToDbInstanceProcessorFeatureArrayOutput() DbInstanceProcessorFeatureArrayOutput
	ToDbInstanceProcessorFeatureArrayOutputWithContext(context.Context) DbInstanceProcessorFeatureArrayOutput
}

type DbInstanceProcessorFeatureArray []DbInstanceProcessorFeatureInput

func (DbInstanceProcessorFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceProcessorFeature)(nil)).Elem()
}

func (i DbInstanceProcessorFeatureArray) ToDbInstanceProcessorFeatureArrayOutput() DbInstanceProcessorFeatureArrayOutput {
	return i.ToDbInstanceProcessorFeatureArrayOutputWithContext(context.Background())
}

func (i DbInstanceProcessorFeatureArray) ToDbInstanceProcessorFeatureArrayOutputWithContext(ctx context.Context) DbInstanceProcessorFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceProcessorFeatureArrayOutput)
}

// The “ProcessorFeature“ property type specifies the processor features of a DB instance class status.
type DbInstanceProcessorFeatureOutput struct{ *pulumi.OutputState }

func (DbInstanceProcessorFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbInstanceProcessorFeature)(nil)).Elem()
}

func (o DbInstanceProcessorFeatureOutput) ToDbInstanceProcessorFeatureOutput() DbInstanceProcessorFeatureOutput {
	return o
}

func (o DbInstanceProcessorFeatureOutput) ToDbInstanceProcessorFeatureOutputWithContext(ctx context.Context) DbInstanceProcessorFeatureOutput {
	return o
}

// The name of the processor feature. Valid names are “coreCount“ and “threadsPerCore“.
func (o DbInstanceProcessorFeatureOutput) Name() DbInstanceProcessorFeatureNamePtrOutput {
	return o.ApplyT(func(v DbInstanceProcessorFeature) *DbInstanceProcessorFeatureName { return v.Name }).(DbInstanceProcessorFeatureNamePtrOutput)
}

// The value of a processor feature name.
func (o DbInstanceProcessorFeatureOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbInstanceProcessorFeature) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DbInstanceProcessorFeatureArrayOutput struct{ *pulumi.OutputState }

func (DbInstanceProcessorFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbInstanceProcessorFeature)(nil)).Elem()
}

func (o DbInstanceProcessorFeatureArrayOutput) ToDbInstanceProcessorFeatureArrayOutput() DbInstanceProcessorFeatureArrayOutput {
	return o
}

func (o DbInstanceProcessorFeatureArrayOutput) ToDbInstanceProcessorFeatureArrayOutputWithContext(ctx context.Context) DbInstanceProcessorFeatureArrayOutput {
	return o
}

func (o DbInstanceProcessorFeatureArrayOutput) Index(i pulumi.IntInput) DbInstanceProcessorFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbInstanceProcessorFeature {
		return vs[0].([]DbInstanceProcessorFeature)[vs[1].(int)]
	}).(DbInstanceProcessorFeatureOutput)
}

// Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
//
//	For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
type DbInstanceTag struct {
	// A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Key string `pulumi:"key"`
	// A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Value *string `pulumi:"value"`
}

// Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
//
//	For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
type DbParameterGroupTag struct {
	// A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Key string `pulumi:"key"`
	// A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Value *string `pulumi:"value"`
}

type DbProxyAuthFormat struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme *DbProxyAuthFormatAuthScheme `pulumi:"authScheme"`
	// The type of authentication the proxy uses for connections from clients.
	ClientPasswordAuthType *DbProxyAuthFormatClientPasswordAuthType `pulumi:"clientPasswordAuthType"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description *string `pulumi:"description"`
	// Whether to require or disallow Amazon Web Services Identity and Access Management (IAM) authentication for connections to the proxy. The ENABLED value is valid only for proxies with RDS for Microsoft SQL Server.
	IamAuth *DbProxyAuthFormatIamAuth `pulumi:"iamAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn *string `pulumi:"secretArn"`
}

// DbProxyAuthFormatInput is an input type that accepts DbProxyAuthFormatArgs and DbProxyAuthFormatOutput values.
// You can construct a concrete instance of `DbProxyAuthFormatInput` via:
//
//	DbProxyAuthFormatArgs{...}
type DbProxyAuthFormatInput interface {
	pulumi.Input

	ToDbProxyAuthFormatOutput() DbProxyAuthFormatOutput
	ToDbProxyAuthFormatOutputWithContext(context.Context) DbProxyAuthFormatOutput
}

type DbProxyAuthFormatArgs struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme DbProxyAuthFormatAuthSchemePtrInput `pulumi:"authScheme"`
	// The type of authentication the proxy uses for connections from clients.
	ClientPasswordAuthType DbProxyAuthFormatClientPasswordAuthTypePtrInput `pulumi:"clientPasswordAuthType"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to require or disallow Amazon Web Services Identity and Access Management (IAM) authentication for connections to the proxy. The ENABLED value is valid only for proxies with RDS for Microsoft SQL Server.
	IamAuth DbProxyAuthFormatIamAuthPtrInput `pulumi:"iamAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DbProxyAuthFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbProxyAuthFormat)(nil)).Elem()
}

func (i DbProxyAuthFormatArgs) ToDbProxyAuthFormatOutput() DbProxyAuthFormatOutput {
	return i.ToDbProxyAuthFormatOutputWithContext(context.Background())
}

func (i DbProxyAuthFormatArgs) ToDbProxyAuthFormatOutputWithContext(ctx context.Context) DbProxyAuthFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbProxyAuthFormatOutput)
}

// DbProxyAuthFormatArrayInput is an input type that accepts DbProxyAuthFormatArray and DbProxyAuthFormatArrayOutput values.
// You can construct a concrete instance of `DbProxyAuthFormatArrayInput` via:
//
//	DbProxyAuthFormatArray{ DbProxyAuthFormatArgs{...} }
type DbProxyAuthFormatArrayInput interface {
	pulumi.Input

	ToDbProxyAuthFormatArrayOutput() DbProxyAuthFormatArrayOutput
	ToDbProxyAuthFormatArrayOutputWithContext(context.Context) DbProxyAuthFormatArrayOutput
}

type DbProxyAuthFormatArray []DbProxyAuthFormatInput

func (DbProxyAuthFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbProxyAuthFormat)(nil)).Elem()
}

func (i DbProxyAuthFormatArray) ToDbProxyAuthFormatArrayOutput() DbProxyAuthFormatArrayOutput {
	return i.ToDbProxyAuthFormatArrayOutputWithContext(context.Background())
}

func (i DbProxyAuthFormatArray) ToDbProxyAuthFormatArrayOutputWithContext(ctx context.Context) DbProxyAuthFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbProxyAuthFormatArrayOutput)
}

type DbProxyAuthFormatOutput struct{ *pulumi.OutputState }

func (DbProxyAuthFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbProxyAuthFormat)(nil)).Elem()
}

func (o DbProxyAuthFormatOutput) ToDbProxyAuthFormatOutput() DbProxyAuthFormatOutput {
	return o
}

func (o DbProxyAuthFormatOutput) ToDbProxyAuthFormatOutputWithContext(ctx context.Context) DbProxyAuthFormatOutput {
	return o
}

// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
func (o DbProxyAuthFormatOutput) AuthScheme() DbProxyAuthFormatAuthSchemePtrOutput {
	return o.ApplyT(func(v DbProxyAuthFormat) *DbProxyAuthFormatAuthScheme { return v.AuthScheme }).(DbProxyAuthFormatAuthSchemePtrOutput)
}

// The type of authentication the proxy uses for connections from clients.
func (o DbProxyAuthFormatOutput) ClientPasswordAuthType() DbProxyAuthFormatClientPasswordAuthTypePtrOutput {
	return o.ApplyT(func(v DbProxyAuthFormat) *DbProxyAuthFormatClientPasswordAuthType { return v.ClientPasswordAuthType }).(DbProxyAuthFormatClientPasswordAuthTypePtrOutput)
}

// A user-specified description about the authentication used by a proxy to log in as a specific database user.
func (o DbProxyAuthFormatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbProxyAuthFormat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to require or disallow Amazon Web Services Identity and Access Management (IAM) authentication for connections to the proxy. The ENABLED value is valid only for proxies with RDS for Microsoft SQL Server.
func (o DbProxyAuthFormatOutput) IamAuth() DbProxyAuthFormatIamAuthPtrOutput {
	return o.ApplyT(func(v DbProxyAuthFormat) *DbProxyAuthFormatIamAuth { return v.IamAuth }).(DbProxyAuthFormatIamAuthPtrOutput)
}

// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
func (o DbProxyAuthFormatOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbProxyAuthFormat) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DbProxyAuthFormatArrayOutput struct{ *pulumi.OutputState }

func (DbProxyAuthFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbProxyAuthFormat)(nil)).Elem()
}

func (o DbProxyAuthFormatArrayOutput) ToDbProxyAuthFormatArrayOutput() DbProxyAuthFormatArrayOutput {
	return o
}

func (o DbProxyAuthFormatArrayOutput) ToDbProxyAuthFormatArrayOutputWithContext(ctx context.Context) DbProxyAuthFormatArrayOutput {
	return o
}

func (o DbProxyAuthFormatArrayOutput) Index(i pulumi.IntInput) DbProxyAuthFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbProxyAuthFormat {
		return vs[0].([]DbProxyAuthFormat)[vs[1].(int)]
	}).(DbProxyAuthFormatOutput)
}

type DbProxyEndpointTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

type DbProxyTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

type DbProxyTargetGroupConnectionPoolConfigurationInfoFormat struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout *int `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery *string `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent *int `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent *int `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters []string `pulumi:"sessionPinningFilters"`
}

// DbProxyTargetGroupConnectionPoolConfigurationInfoFormatInput is an input type that accepts DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs and DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput values.
// You can construct a concrete instance of `DbProxyTargetGroupConnectionPoolConfigurationInfoFormatInput` via:
//
//	DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
type DbProxyTargetGroupConnectionPoolConfigurationInfoFormatInput interface {
	pulumi.Input

	ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
	ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
}

type DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout pulumi.IntPtrInput `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery pulumi.StringPtrInput `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent pulumi.IntPtrInput `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent pulumi.IntPtrInput `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters pulumi.StringArrayInput `pulumi:"sessionPinningFilters"`
}

func (DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return i.ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Background())
}

func (i DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

func (i DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput).ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx)
}

// DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput is an input type that accepts DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs, DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr and DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput values.
// You can construct a concrete instance of `DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput` via:
//
//	        DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
//
//	or:
//
//	        nil
type DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput interface {
	pulumi.Input

	ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
	ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
}

type dbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs

func DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput {
	return (*dbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType)(v)
}

func (*dbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DbProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i *dbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i *dbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

type DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput struct{ *pulumi.OutputState }

func (DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		return &v
	}).(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.ConnectionBorrowTimeout }).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string { return v.InitQuery }).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.MaxConnectionsPercent }).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput struct{ *pulumi.OutputState }

func (DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) Elem() DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) DbProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		if v != nil {
			return *v
		}
		var ret DbProxyTargetGroupConnectionPoolConfigurationInfoFormat
		return ret
	}).(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBorrowTimeout
	}).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string {
		if v == nil {
			return nil
		}
		return v.InitQuery
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DbProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		if v == nil {
			return nil
		}
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type DbSecurityGroupIngressType struct {
	Cidrip                  *string `pulumi:"cidrip"`
	Ec2SecurityGroupId      *string `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    *string `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId *string `pulumi:"ec2SecurityGroupOwnerId"`
}

// DbSecurityGroupIngressTypeInput is an input type that accepts DbSecurityGroupIngressTypeArgs and DbSecurityGroupIngressTypeOutput values.
// You can construct a concrete instance of `DbSecurityGroupIngressTypeInput` via:
//
//	DbSecurityGroupIngressTypeArgs{...}
type DbSecurityGroupIngressTypeInput interface {
	pulumi.Input

	ToDbSecurityGroupIngressTypeOutput() DbSecurityGroupIngressTypeOutput
	ToDbSecurityGroupIngressTypeOutputWithContext(context.Context) DbSecurityGroupIngressTypeOutput
}

type DbSecurityGroupIngressTypeArgs struct {
	Cidrip                  pulumi.StringPtrInput `pulumi:"cidrip"`
	Ec2SecurityGroupId      pulumi.StringPtrInput `pulumi:"ec2SecurityGroupId"`
	Ec2SecurityGroupName    pulumi.StringPtrInput `pulumi:"ec2SecurityGroupName"`
	Ec2SecurityGroupOwnerId pulumi.StringPtrInput `pulumi:"ec2SecurityGroupOwnerId"`
}

func (DbSecurityGroupIngressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DbSecurityGroupIngressType)(nil)).Elem()
}

func (i DbSecurityGroupIngressTypeArgs) ToDbSecurityGroupIngressTypeOutput() DbSecurityGroupIngressTypeOutput {
	return i.ToDbSecurityGroupIngressTypeOutputWithContext(context.Background())
}

func (i DbSecurityGroupIngressTypeArgs) ToDbSecurityGroupIngressTypeOutputWithContext(ctx context.Context) DbSecurityGroupIngressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSecurityGroupIngressTypeOutput)
}

// DbSecurityGroupIngressTypeArrayInput is an input type that accepts DbSecurityGroupIngressTypeArray and DbSecurityGroupIngressTypeArrayOutput values.
// You can construct a concrete instance of `DbSecurityGroupIngressTypeArrayInput` via:
//
//	DbSecurityGroupIngressTypeArray{ DbSecurityGroupIngressTypeArgs{...} }
type DbSecurityGroupIngressTypeArrayInput interface {
	pulumi.Input

	ToDbSecurityGroupIngressTypeArrayOutput() DbSecurityGroupIngressTypeArrayOutput
	ToDbSecurityGroupIngressTypeArrayOutputWithContext(context.Context) DbSecurityGroupIngressTypeArrayOutput
}

type DbSecurityGroupIngressTypeArray []DbSecurityGroupIngressTypeInput

func (DbSecurityGroupIngressTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbSecurityGroupIngressType)(nil)).Elem()
}

func (i DbSecurityGroupIngressTypeArray) ToDbSecurityGroupIngressTypeArrayOutput() DbSecurityGroupIngressTypeArrayOutput {
	return i.ToDbSecurityGroupIngressTypeArrayOutputWithContext(context.Background())
}

func (i DbSecurityGroupIngressTypeArray) ToDbSecurityGroupIngressTypeArrayOutputWithContext(ctx context.Context) DbSecurityGroupIngressTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSecurityGroupIngressTypeArrayOutput)
}

type DbSecurityGroupIngressTypeOutput struct{ *pulumi.OutputState }

func (DbSecurityGroupIngressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbSecurityGroupIngressType)(nil)).Elem()
}

func (o DbSecurityGroupIngressTypeOutput) ToDbSecurityGroupIngressTypeOutput() DbSecurityGroupIngressTypeOutput {
	return o
}

func (o DbSecurityGroupIngressTypeOutput) ToDbSecurityGroupIngressTypeOutputWithContext(ctx context.Context) DbSecurityGroupIngressTypeOutput {
	return o
}

func (o DbSecurityGroupIngressTypeOutput) Cidrip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbSecurityGroupIngressType) *string { return v.Cidrip }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressTypeOutput) Ec2SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbSecurityGroupIngressType) *string { return v.Ec2SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressTypeOutput) Ec2SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbSecurityGroupIngressType) *string { return v.Ec2SecurityGroupName }).(pulumi.StringPtrOutput)
}

func (o DbSecurityGroupIngressTypeOutput) Ec2SecurityGroupOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbSecurityGroupIngressType) *string { return v.Ec2SecurityGroupOwnerId }).(pulumi.StringPtrOutput)
}

type DbSecurityGroupIngressTypeArrayOutput struct{ *pulumi.OutputState }

func (DbSecurityGroupIngressTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbSecurityGroupIngressType)(nil)).Elem()
}

func (o DbSecurityGroupIngressTypeArrayOutput) ToDbSecurityGroupIngressTypeArrayOutput() DbSecurityGroupIngressTypeArrayOutput {
	return o
}

func (o DbSecurityGroupIngressTypeArrayOutput) ToDbSecurityGroupIngressTypeArrayOutputWithContext(ctx context.Context) DbSecurityGroupIngressTypeArrayOutput {
	return o
}

func (o DbSecurityGroupIngressTypeArrayOutput) Index(i pulumi.IntInput) DbSecurityGroupIngressTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbSecurityGroupIngressType {
		return vs[0].([]DbSecurityGroupIngressType)[vs[1].(int)]
	}).(DbSecurityGroupIngressTypeOutput)
}

type DbSecurityGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
//
//	For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
type DbSubnetGroupTag struct {
	// A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Key string `pulumi:"key"`
	// A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with ``aws:`` or ``rds:``. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$").
	Value *string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type EventSubscriptionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type IntegrationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// The OptionConfiguration property type specifies an individual option, and its settings, within an AWS::RDS::OptionGroup resource.
type OptionGroupOptionConfiguration struct {
	// A list of DBSecurityGroupMembership name strings used for this option.
	DbSecurityGroupMemberships []string `pulumi:"dbSecurityGroupMemberships"`
	// The configuration of options to include in a group.
	OptionName string `pulumi:"optionName"`
	// The option settings to include in an option group.
	OptionSettings []OptionGroupOptionSetting `pulumi:"optionSettings"`
	// The version for the option.
	OptionVersion *string `pulumi:"optionVersion"`
	// The optional port for the option.
	Port *int `pulumi:"port"`
	// A list of VpcSecurityGroupMembership name strings used for this option.
	VpcSecurityGroupMemberships []string `pulumi:"vpcSecurityGroupMemberships"`
}

// OptionGroupOptionConfigurationInput is an input type that accepts OptionGroupOptionConfigurationArgs and OptionGroupOptionConfigurationOutput values.
// You can construct a concrete instance of `OptionGroupOptionConfigurationInput` via:
//
//	OptionGroupOptionConfigurationArgs{...}
type OptionGroupOptionConfigurationInput interface {
	pulumi.Input

	ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput
	ToOptionGroupOptionConfigurationOutputWithContext(context.Context) OptionGroupOptionConfigurationOutput
}

// The OptionConfiguration property type specifies an individual option, and its settings, within an AWS::RDS::OptionGroup resource.
type OptionGroupOptionConfigurationArgs struct {
	// A list of DBSecurityGroupMembership name strings used for this option.
	DbSecurityGroupMemberships pulumi.StringArrayInput `pulumi:"dbSecurityGroupMemberships"`
	// The configuration of options to include in a group.
	OptionName pulumi.StringInput `pulumi:"optionName"`
	// The option settings to include in an option group.
	OptionSettings OptionGroupOptionSettingArrayInput `pulumi:"optionSettings"`
	// The version for the option.
	OptionVersion pulumi.StringPtrInput `pulumi:"optionVersion"`
	// The optional port for the option.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// A list of VpcSecurityGroupMembership name strings used for this option.
	VpcSecurityGroupMemberships pulumi.StringArrayInput `pulumi:"vpcSecurityGroupMemberships"`
}

func (OptionGroupOptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionConfiguration)(nil)).Elem()
}

func (i OptionGroupOptionConfigurationArgs) ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput {
	return i.ToOptionGroupOptionConfigurationOutputWithContext(context.Background())
}

func (i OptionGroupOptionConfigurationArgs) ToOptionGroupOptionConfigurationOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionConfigurationOutput)
}

// OptionGroupOptionConfigurationArrayInput is an input type that accepts OptionGroupOptionConfigurationArray and OptionGroupOptionConfigurationArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionConfigurationArrayInput` via:
//
//	OptionGroupOptionConfigurationArray{ OptionGroupOptionConfigurationArgs{...} }
type OptionGroupOptionConfigurationArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput
	ToOptionGroupOptionConfigurationArrayOutputWithContext(context.Context) OptionGroupOptionConfigurationArrayOutput
}

type OptionGroupOptionConfigurationArray []OptionGroupOptionConfigurationInput

func (OptionGroupOptionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionConfiguration)(nil)).Elem()
}

func (i OptionGroupOptionConfigurationArray) ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput {
	return i.ToOptionGroupOptionConfigurationArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionConfigurationArray) ToOptionGroupOptionConfigurationArrayOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionConfigurationArrayOutput)
}

// The OptionConfiguration property type specifies an individual option, and its settings, within an AWS::RDS::OptionGroup resource.
type OptionGroupOptionConfigurationOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionConfiguration)(nil)).Elem()
}

func (o OptionGroupOptionConfigurationOutput) ToOptionGroupOptionConfigurationOutput() OptionGroupOptionConfigurationOutput {
	return o
}

func (o OptionGroupOptionConfigurationOutput) ToOptionGroupOptionConfigurationOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationOutput {
	return o
}

// A list of DBSecurityGroupMembership name strings used for this option.
func (o OptionGroupOptionConfigurationOutput) DbSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []string { return v.DbSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

// The configuration of options to include in a group.
func (o OptionGroupOptionConfigurationOutput) OptionName() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) string { return v.OptionName }).(pulumi.StringOutput)
}

// The option settings to include in an option group.
func (o OptionGroupOptionConfigurationOutput) OptionSettings() OptionGroupOptionSettingArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []OptionGroupOptionSetting { return v.OptionSettings }).(OptionGroupOptionSettingArrayOutput)
}

// The version for the option.
func (o OptionGroupOptionConfigurationOutput) OptionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) *string { return v.OptionVersion }).(pulumi.StringPtrOutput)
}

// The optional port for the option.
func (o OptionGroupOptionConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A list of VpcSecurityGroupMembership name strings used for this option.
func (o OptionGroupOptionConfigurationOutput) VpcSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOptionConfiguration) []string { return v.VpcSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

type OptionGroupOptionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionConfiguration)(nil)).Elem()
}

func (o OptionGroupOptionConfigurationArrayOutput) ToOptionGroupOptionConfigurationArrayOutput() OptionGroupOptionConfigurationArrayOutput {
	return o
}

func (o OptionGroupOptionConfigurationArrayOutput) ToOptionGroupOptionConfigurationArrayOutputWithContext(ctx context.Context) OptionGroupOptionConfigurationArrayOutput {
	return o
}

func (o OptionGroupOptionConfigurationArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOptionConfiguration {
		return vs[0].([]OptionGroupOptionConfiguration)[vs[1].(int)]
	}).(OptionGroupOptionConfigurationOutput)
}

// The OptionSetting property type specifies the value for an option within an OptionSetting property.
type OptionGroupOptionSetting struct {
	// The name of the option that has settings that you can set.
	Name *string `pulumi:"name"`
	// The current value of the option setting.
	Value *string `pulumi:"value"`
}

// OptionGroupOptionSettingInput is an input type that accepts OptionGroupOptionSettingArgs and OptionGroupOptionSettingOutput values.
// You can construct a concrete instance of `OptionGroupOptionSettingInput` via:
//
//	OptionGroupOptionSettingArgs{...}
type OptionGroupOptionSettingInput interface {
	pulumi.Input

	ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput
	ToOptionGroupOptionSettingOutputWithContext(context.Context) OptionGroupOptionSettingOutput
}

// The OptionSetting property type specifies the value for an option within an OptionSetting property.
type OptionGroupOptionSettingArgs struct {
	// The name of the option that has settings that you can set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The current value of the option setting.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OptionGroupOptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionSettingArgs) ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput {
	return i.ToOptionGroupOptionSettingOutputWithContext(context.Background())
}

func (i OptionGroupOptionSettingArgs) ToOptionGroupOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionSettingOutput)
}

// OptionGroupOptionSettingArrayInput is an input type that accepts OptionGroupOptionSettingArray and OptionGroupOptionSettingArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionSettingArrayInput` via:
//
//	OptionGroupOptionSettingArray{ OptionGroupOptionSettingArgs{...} }
type OptionGroupOptionSettingArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput
	ToOptionGroupOptionSettingArrayOutputWithContext(context.Context) OptionGroupOptionSettingArrayOutput
}

type OptionGroupOptionSettingArray []OptionGroupOptionSettingInput

func (OptionGroupOptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionSettingArray) ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput {
	return i.ToOptionGroupOptionSettingArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionSettingArray) ToOptionGroupOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionSettingArrayOutput)
}

// The OptionSetting property type specifies the value for an option within an OptionSetting property.
type OptionGroupOptionSettingOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionSettingOutput) ToOptionGroupOptionSettingOutput() OptionGroupOptionSettingOutput {
	return o
}

func (o OptionGroupOptionSettingOutput) ToOptionGroupOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionSettingOutput {
	return o
}

// The name of the option that has settings that you can set.
func (o OptionGroupOptionSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current value of the option setting.
func (o OptionGroupOptionSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOptionSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OptionGroupOptionSettingArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionSettingArrayOutput) ToOptionGroupOptionSettingArrayOutput() OptionGroupOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionSettingArrayOutput) ToOptionGroupOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionSettingArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOptionSetting {
		return vs[0].([]OptionGroupOptionSetting)[vs[1].(int)]
	}).(OptionGroupOptionSettingOutput)
}

// A key-value pair to associate with a resource.
type OptionGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterDbClusterRoleInput)(nil)).Elem(), DbClusterDbClusterRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterDbClusterRoleArrayInput)(nil)).Elem(), DbClusterDbClusterRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterMasterUserSecretInput)(nil)).Elem(), DbClusterMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterMasterUserSecretPtrInput)(nil)).Elem(), DbClusterMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterReadEndpointInput)(nil)).Elem(), DbClusterReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterReadEndpointPtrInput)(nil)).Elem(), DbClusterReadEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterScalingConfigurationInput)(nil)).Elem(), DbClusterScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterScalingConfigurationPtrInput)(nil)).Elem(), DbClusterScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterServerlessV2ScalingConfigurationInput)(nil)).Elem(), DbClusterServerlessV2ScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbClusterServerlessV2ScalingConfigurationPtrInput)(nil)).Elem(), DbClusterServerlessV2ScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceCertificateDetailsInput)(nil)).Elem(), DbInstanceCertificateDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceCertificateDetailsPtrInput)(nil)).Elem(), DbInstanceCertificateDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceDbInstanceRoleInput)(nil)).Elem(), DbInstanceDbInstanceRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceDbInstanceRoleArrayInput)(nil)).Elem(), DbInstanceDbInstanceRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceEndpointInput)(nil)).Elem(), DbInstanceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceEndpointPtrInput)(nil)).Elem(), DbInstanceEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceMasterUserSecretInput)(nil)).Elem(), DbInstanceMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceMasterUserSecretPtrInput)(nil)).Elem(), DbInstanceMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceProcessorFeatureInput)(nil)).Elem(), DbInstanceProcessorFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceProcessorFeatureArrayInput)(nil)).Elem(), DbInstanceProcessorFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbProxyAuthFormatInput)(nil)).Elem(), DbProxyAuthFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbProxyAuthFormatArrayInput)(nil)).Elem(), DbProxyAuthFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbProxyTargetGroupConnectionPoolConfigurationInfoFormatInput)(nil)).Elem(), DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput)(nil)).Elem(), DbProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSecurityGroupIngressTypeInput)(nil)).Elem(), DbSecurityGroupIngressTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSecurityGroupIngressTypeArrayInput)(nil)).Elem(), DbSecurityGroupIngressTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionConfigurationInput)(nil)).Elem(), OptionGroupOptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionConfigurationArrayInput)(nil)).Elem(), OptionGroupOptionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionSettingInput)(nil)).Elem(), OptionGroupOptionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionSettingArrayInput)(nil)).Elem(), OptionGroupOptionSettingArray{})
	pulumi.RegisterOutputType(DbClusterDbClusterRoleOutput{})
	pulumi.RegisterOutputType(DbClusterDbClusterRoleArrayOutput{})
	pulumi.RegisterOutputType(DbClusterEndpointOutput{})
	pulumi.RegisterOutputType(DbClusterEndpointPtrOutput{})
	pulumi.RegisterOutputType(DbClusterMasterUserSecretOutput{})
	pulumi.RegisterOutputType(DbClusterMasterUserSecretPtrOutput{})
	pulumi.RegisterOutputType(DbClusterReadEndpointOutput{})
	pulumi.RegisterOutputType(DbClusterReadEndpointPtrOutput{})
	pulumi.RegisterOutputType(DbClusterScalingConfigurationOutput{})
	pulumi.RegisterOutputType(DbClusterScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DbClusterServerlessV2ScalingConfigurationOutput{})
	pulumi.RegisterOutputType(DbClusterServerlessV2ScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DbInstanceCertificateDetailsOutput{})
	pulumi.RegisterOutputType(DbInstanceCertificateDetailsPtrOutput{})
	pulumi.RegisterOutputType(DbInstanceDbInstanceRoleOutput{})
	pulumi.RegisterOutputType(DbInstanceDbInstanceRoleArrayOutput{})
	pulumi.RegisterOutputType(DbInstanceEndpointOutput{})
	pulumi.RegisterOutputType(DbInstanceEndpointPtrOutput{})
	pulumi.RegisterOutputType(DbInstanceMasterUserSecretOutput{})
	pulumi.RegisterOutputType(DbInstanceMasterUserSecretPtrOutput{})
	pulumi.RegisterOutputType(DbInstanceProcessorFeatureOutput{})
	pulumi.RegisterOutputType(DbInstanceProcessorFeatureArrayOutput{})
	pulumi.RegisterOutputType(DbProxyAuthFormatOutput{})
	pulumi.RegisterOutputType(DbProxyAuthFormatArrayOutput{})
	pulumi.RegisterOutputType(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput{})
	pulumi.RegisterOutputType(DbProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput{})
	pulumi.RegisterOutputType(DbSecurityGroupIngressTypeOutput{})
	pulumi.RegisterOutputType(DbSecurityGroupIngressTypeArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionConfigurationOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionSettingOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionSettingArrayOutput{})
}
