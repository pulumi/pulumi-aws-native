// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DBProxyAuthFormat struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme *DBProxyAuthFormatAuthScheme `pulumi:"authScheme"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description *string `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
	IAMAuth *DBProxyAuthFormatIAMAuth `pulumi:"iAMAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn *string `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	UserName *string `pulumi:"userName"`
}

// DBProxyAuthFormatInput is an input type that accepts DBProxyAuthFormatArgs and DBProxyAuthFormatOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatInput` via:
//
//          DBProxyAuthFormatArgs{...}
type DBProxyAuthFormatInput interface {
	pulumi.Input

	ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput
	ToDBProxyAuthFormatOutputWithContext(context.Context) DBProxyAuthFormatOutput
}

type DBProxyAuthFormatArgs struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
	AuthScheme DBProxyAuthFormatAuthSchemePtrInput `pulumi:"authScheme"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
	IAMAuth DBProxyAuthFormatIAMAuthPtrInput `pulumi:"iAMAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DBProxyAuthFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormat)(nil)).Elem()
}

func (i DBProxyAuthFormatArgs) ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput {
	return i.ToDBProxyAuthFormatOutputWithContext(context.Background())
}

func (i DBProxyAuthFormatArgs) ToDBProxyAuthFormatOutputWithContext(ctx context.Context) DBProxyAuthFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyAuthFormatOutput)
}

// DBProxyAuthFormatArrayInput is an input type that accepts DBProxyAuthFormatArray and DBProxyAuthFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatArrayInput` via:
//
//          DBProxyAuthFormatArray{ DBProxyAuthFormatArgs{...} }
type DBProxyAuthFormatArrayInput interface {
	pulumi.Input

	ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput
	ToDBProxyAuthFormatArrayOutputWithContext(context.Context) DBProxyAuthFormatArrayOutput
}

type DBProxyAuthFormatArray []DBProxyAuthFormatInput

func (DBProxyAuthFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyAuthFormat)(nil)).Elem()
}

func (i DBProxyAuthFormatArray) ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput {
	return i.ToDBProxyAuthFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyAuthFormatArray) ToDBProxyAuthFormatArrayOutputWithContext(ctx context.Context) DBProxyAuthFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyAuthFormatArrayOutput)
}

type DBProxyAuthFormatOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormat)(nil)).Elem()
}

func (o DBProxyAuthFormatOutput) ToDBProxyAuthFormatOutput() DBProxyAuthFormatOutput {
	return o
}

func (o DBProxyAuthFormatOutput) ToDBProxyAuthFormatOutputWithContext(ctx context.Context) DBProxyAuthFormatOutput {
	return o
}

// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
func (o DBProxyAuthFormatOutput) AuthScheme() DBProxyAuthFormatAuthSchemePtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *DBProxyAuthFormatAuthScheme { return v.AuthScheme }).(DBProxyAuthFormatAuthSchemePtrOutput)
}

// A user-specified description about the authentication used by a proxy to log in as a specific database user.
func (o DBProxyAuthFormatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
func (o DBProxyAuthFormatOutput) IAMAuth() DBProxyAuthFormatIAMAuthPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *DBProxyAuthFormatIAMAuth { return v.IAMAuth }).(DBProxyAuthFormatIAMAuthPtrOutput)
}

// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
func (o DBProxyAuthFormatOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

// The name of the database user to which the proxy connects.
func (o DBProxyAuthFormatOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyAuthFormat) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DBProxyAuthFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyAuthFormat)(nil)).Elem()
}

func (o DBProxyAuthFormatArrayOutput) ToDBProxyAuthFormatArrayOutput() DBProxyAuthFormatArrayOutput {
	return o
}

func (o DBProxyAuthFormatArrayOutput) ToDBProxyAuthFormatArrayOutputWithContext(ctx context.Context) DBProxyAuthFormatArrayOutput {
	return o
}

func (o DBProxyAuthFormatArrayOutput) Index(i pulumi.IntInput) DBProxyAuthFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyAuthFormat {
		return vs[0].([]DBProxyAuthFormat)[vs[1].(int)]
	}).(DBProxyAuthFormatOutput)
}

type DBProxyEndpointTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DBProxyEndpointTagFormatInput is an input type that accepts DBProxyEndpointTagFormatArgs and DBProxyEndpointTagFormatOutput values.
// You can construct a concrete instance of `DBProxyEndpointTagFormatInput` via:
//
//          DBProxyEndpointTagFormatArgs{...}
type DBProxyEndpointTagFormatInput interface {
	pulumi.Input

	ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput
	ToDBProxyEndpointTagFormatOutputWithContext(context.Context) DBProxyEndpointTagFormatOutput
}

type DBProxyEndpointTagFormatArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DBProxyEndpointTagFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTagFormat)(nil)).Elem()
}

func (i DBProxyEndpointTagFormatArgs) ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput {
	return i.ToDBProxyEndpointTagFormatOutputWithContext(context.Background())
}

func (i DBProxyEndpointTagFormatArgs) ToDBProxyEndpointTagFormatOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyEndpointTagFormatOutput)
}

// DBProxyEndpointTagFormatArrayInput is an input type that accepts DBProxyEndpointTagFormatArray and DBProxyEndpointTagFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyEndpointTagFormatArrayInput` via:
//
//          DBProxyEndpointTagFormatArray{ DBProxyEndpointTagFormatArgs{...} }
type DBProxyEndpointTagFormatArrayInput interface {
	pulumi.Input

	ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput
	ToDBProxyEndpointTagFormatArrayOutputWithContext(context.Context) DBProxyEndpointTagFormatArrayOutput
}

type DBProxyEndpointTagFormatArray []DBProxyEndpointTagFormatInput

func (DBProxyEndpointTagFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyEndpointTagFormat)(nil)).Elem()
}

func (i DBProxyEndpointTagFormatArray) ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput {
	return i.ToDBProxyEndpointTagFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyEndpointTagFormatArray) ToDBProxyEndpointTagFormatArrayOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyEndpointTagFormatArrayOutput)
}

type DBProxyEndpointTagFormatOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTagFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTagFormat)(nil)).Elem()
}

func (o DBProxyEndpointTagFormatOutput) ToDBProxyEndpointTagFormatOutput() DBProxyEndpointTagFormatOutput {
	return o
}

func (o DBProxyEndpointTagFormatOutput) ToDBProxyEndpointTagFormatOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatOutput {
	return o
}

func (o DBProxyEndpointTagFormatOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyEndpointTagFormat) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DBProxyEndpointTagFormatOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyEndpointTagFormat) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DBProxyEndpointTagFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTagFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyEndpointTagFormat)(nil)).Elem()
}

func (o DBProxyEndpointTagFormatArrayOutput) ToDBProxyEndpointTagFormatArrayOutput() DBProxyEndpointTagFormatArrayOutput {
	return o
}

func (o DBProxyEndpointTagFormatArrayOutput) ToDBProxyEndpointTagFormatArrayOutputWithContext(ctx context.Context) DBProxyEndpointTagFormatArrayOutput {
	return o
}

func (o DBProxyEndpointTagFormatArrayOutput) Index(i pulumi.IntInput) DBProxyEndpointTagFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyEndpointTagFormat {
		return vs[0].([]DBProxyEndpointTagFormat)[vs[1].(int)]
	}).(DBProxyEndpointTagFormatOutput)
}

type DBProxyTagFormat struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DBProxyTagFormatInput is an input type that accepts DBProxyTagFormatArgs and DBProxyTagFormatOutput values.
// You can construct a concrete instance of `DBProxyTagFormatInput` via:
//
//          DBProxyTagFormatArgs{...}
type DBProxyTagFormatInput interface {
	pulumi.Input

	ToDBProxyTagFormatOutput() DBProxyTagFormatOutput
	ToDBProxyTagFormatOutputWithContext(context.Context) DBProxyTagFormatOutput
}

type DBProxyTagFormatArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DBProxyTagFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTagFormat)(nil)).Elem()
}

func (i DBProxyTagFormatArgs) ToDBProxyTagFormatOutput() DBProxyTagFormatOutput {
	return i.ToDBProxyTagFormatOutputWithContext(context.Background())
}

func (i DBProxyTagFormatArgs) ToDBProxyTagFormatOutputWithContext(ctx context.Context) DBProxyTagFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTagFormatOutput)
}

// DBProxyTagFormatArrayInput is an input type that accepts DBProxyTagFormatArray and DBProxyTagFormatArrayOutput values.
// You can construct a concrete instance of `DBProxyTagFormatArrayInput` via:
//
//          DBProxyTagFormatArray{ DBProxyTagFormatArgs{...} }
type DBProxyTagFormatArrayInput interface {
	pulumi.Input

	ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput
	ToDBProxyTagFormatArrayOutputWithContext(context.Context) DBProxyTagFormatArrayOutput
}

type DBProxyTagFormatArray []DBProxyTagFormatInput

func (DBProxyTagFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyTagFormat)(nil)).Elem()
}

func (i DBProxyTagFormatArray) ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput {
	return i.ToDBProxyTagFormatArrayOutputWithContext(context.Background())
}

func (i DBProxyTagFormatArray) ToDBProxyTagFormatArrayOutputWithContext(ctx context.Context) DBProxyTagFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTagFormatArrayOutput)
}

type DBProxyTagFormatOutput struct{ *pulumi.OutputState }

func (DBProxyTagFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTagFormat)(nil)).Elem()
}

func (o DBProxyTagFormatOutput) ToDBProxyTagFormatOutput() DBProxyTagFormatOutput {
	return o
}

func (o DBProxyTagFormatOutput) ToDBProxyTagFormatOutputWithContext(ctx context.Context) DBProxyTagFormatOutput {
	return o
}

func (o DBProxyTagFormatOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTagFormat) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DBProxyTagFormatOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTagFormat) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DBProxyTagFormatArrayOutput struct{ *pulumi.OutputState }

func (DBProxyTagFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DBProxyTagFormat)(nil)).Elem()
}

func (o DBProxyTagFormatArrayOutput) ToDBProxyTagFormatArrayOutput() DBProxyTagFormatArrayOutput {
	return o
}

func (o DBProxyTagFormatArrayOutput) ToDBProxyTagFormatArrayOutputWithContext(ctx context.Context) DBProxyTagFormatArrayOutput {
	return o
}

func (o DBProxyTagFormatArrayOutput) Index(i pulumi.IntInput) DBProxyTagFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DBProxyTagFormat {
		return vs[0].([]DBProxyTagFormat)[vs[1].(int)]
	}).(DBProxyTagFormatOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormat struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout *int `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery *string `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent *int `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent *int `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters []string `pulumi:"sessionPinningFilters"`
}

// DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput is an input type that accepts DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs and DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput values.
// You can construct a concrete instance of `DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput` via:
//
//          DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatInput interface {
	pulumi.Input

	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
	ConnectionBorrowTimeout pulumi.IntPtrInput `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection.
	InitQuery pulumi.StringPtrInput `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group.
	MaxConnectionsPercent pulumi.IntPtrInput `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool.
	MaxIdleConnectionsPercent pulumi.IntPtrInput `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
	SessionPinningFilters pulumi.StringArrayInput `pulumi:"sessionPinningFilters"`
}

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(context.Background())
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput).ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx)
}

// DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput is an input type that accepts DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs, DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr and DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput values.
// You can construct a concrete instance of `DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput` via:
//
//          DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs{...}
//
//  or:
//
//          nil
type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput interface {
	pulumi.Input

	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
	ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput
}

type dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs

func DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtr(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput {
	return (*dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType)(v)
}

func (*dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (i *dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return i.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (i *dbproxyTargetGroupConnectionPoolConfigurationInfoFormatPtrType) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		return &v
	}).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.ConnectionBorrowTimeout }).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string { return v.InitQuery }).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int { return v.MaxConnectionsPercent }).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroupConnectionPoolConfigurationInfoFormat)(nil)).Elem()
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ToDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutputWithContext(ctx context.Context) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o
}

func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) Elem() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) DBProxyTargetGroupConnectionPoolConfigurationInfoFormat {
		if v != nil {
			return *v
		}
		var ret DBProxyTargetGroupConnectionPoolConfigurationInfoFormat
		return ret
	}).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBorrowTimeout
	}).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *string {
		if v == nil {
			return nil
		}
		return v.InitQuery
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection.
func (o DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat) []string {
		if v == nil {
			return nil
		}
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(DBProxyAuthFormatOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTagFormatOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTagFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyTagFormatOutput{})
	pulumi.RegisterOutputType(DBProxyTagFormatArrayOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput{})
}
