// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of authentication that the proxy uses for connections from the proxy to the underlying database.
type DBProxyAuthFormatAuthScheme string

const (
	DBProxyAuthFormatAuthSchemeSecrets = DBProxyAuthFormatAuthScheme("SECRETS")
)

func (DBProxyAuthFormatAuthScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormatAuthScheme)(nil)).Elem()
}

func (e DBProxyAuthFormatAuthScheme) ToDBProxyAuthFormatAuthSchemeOutput() DBProxyAuthFormatAuthSchemeOutput {
	return pulumi.ToOutput(e).(DBProxyAuthFormatAuthSchemeOutput)
}

func (e DBProxyAuthFormatAuthScheme) ToDBProxyAuthFormatAuthSchemeOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DBProxyAuthFormatAuthSchemeOutput)
}

func (e DBProxyAuthFormatAuthScheme) ToDBProxyAuthFormatAuthSchemePtrOutput() DBProxyAuthFormatAuthSchemePtrOutput {
	return e.ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(context.Background())
}

func (e DBProxyAuthFormatAuthScheme) ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemePtrOutput {
	return DBProxyAuthFormatAuthScheme(e).ToDBProxyAuthFormatAuthSchemeOutputWithContext(ctx).ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(ctx)
}

func (e DBProxyAuthFormatAuthScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyAuthFormatAuthScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyAuthFormatAuthScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DBProxyAuthFormatAuthScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DBProxyAuthFormatAuthSchemeOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatAuthSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormatAuthScheme)(nil)).Elem()
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToDBProxyAuthFormatAuthSchemeOutput() DBProxyAuthFormatAuthSchemeOutput {
	return o
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToDBProxyAuthFormatAuthSchemeOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemeOutput {
	return o
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToDBProxyAuthFormatAuthSchemePtrOutput() DBProxyAuthFormatAuthSchemePtrOutput {
	return o.ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyAuthFormatAuthScheme) *DBProxyAuthFormatAuthScheme {
		return &v
	}).(DBProxyAuthFormatAuthSchemePtrOutput)
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyAuthFormatAuthScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatAuthSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyAuthFormatAuthScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DBProxyAuthFormatAuthSchemePtrOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatAuthSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyAuthFormatAuthScheme)(nil)).Elem()
}

func (o DBProxyAuthFormatAuthSchemePtrOutput) ToDBProxyAuthFormatAuthSchemePtrOutput() DBProxyAuthFormatAuthSchemePtrOutput {
	return o
}

func (o DBProxyAuthFormatAuthSchemePtrOutput) ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemePtrOutput {
	return o
}

func (o DBProxyAuthFormatAuthSchemePtrOutput) Elem() DBProxyAuthFormatAuthSchemeOutput {
	return o.ApplyT(func(v *DBProxyAuthFormatAuthScheme) DBProxyAuthFormatAuthScheme {
		if v != nil {
			return *v
		}
		var ret DBProxyAuthFormatAuthScheme
		return ret
	}).(DBProxyAuthFormatAuthSchemeOutput)
}

func (o DBProxyAuthFormatAuthSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatAuthSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DBProxyAuthFormatAuthScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DBProxyAuthFormatAuthSchemeInput is an input type that accepts DBProxyAuthFormatAuthSchemeArgs and DBProxyAuthFormatAuthSchemeOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatAuthSchemeInput` via:
//
//          DBProxyAuthFormatAuthSchemeArgs{...}
type DBProxyAuthFormatAuthSchemeInput interface {
	pulumi.Input

	ToDBProxyAuthFormatAuthSchemeOutput() DBProxyAuthFormatAuthSchemeOutput
	ToDBProxyAuthFormatAuthSchemeOutputWithContext(context.Context) DBProxyAuthFormatAuthSchemeOutput
}

var dbproxyAuthFormatAuthSchemePtrType = reflect.TypeOf((**DBProxyAuthFormatAuthScheme)(nil)).Elem()

type DBProxyAuthFormatAuthSchemePtrInput interface {
	pulumi.Input

	ToDBProxyAuthFormatAuthSchemePtrOutput() DBProxyAuthFormatAuthSchemePtrOutput
	ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(context.Context) DBProxyAuthFormatAuthSchemePtrOutput
}

type dbproxyAuthFormatAuthSchemePtr string

func DBProxyAuthFormatAuthSchemePtr(v string) DBProxyAuthFormatAuthSchemePtrInput {
	return (*dbproxyAuthFormatAuthSchemePtr)(&v)
}

func (*dbproxyAuthFormatAuthSchemePtr) ElementType() reflect.Type {
	return dbproxyAuthFormatAuthSchemePtrType
}

func (in *dbproxyAuthFormatAuthSchemePtr) ToDBProxyAuthFormatAuthSchemePtrOutput() DBProxyAuthFormatAuthSchemePtrOutput {
	return pulumi.ToOutput(in).(DBProxyAuthFormatAuthSchemePtrOutput)
}

func (in *dbproxyAuthFormatAuthSchemePtr) ToDBProxyAuthFormatAuthSchemePtrOutputWithContext(ctx context.Context) DBProxyAuthFormatAuthSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DBProxyAuthFormatAuthSchemePtrOutput)
}

// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy.
type DBProxyAuthFormatIAMAuth string

const (
	DBProxyAuthFormatIAMAuthDisabled = DBProxyAuthFormatIAMAuth("DISABLED")
	DBProxyAuthFormatIAMAuthRequired = DBProxyAuthFormatIAMAuth("REQUIRED")
)

func (DBProxyAuthFormatIAMAuth) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormatIAMAuth)(nil)).Elem()
}

func (e DBProxyAuthFormatIAMAuth) ToDBProxyAuthFormatIAMAuthOutput() DBProxyAuthFormatIAMAuthOutput {
	return pulumi.ToOutput(e).(DBProxyAuthFormatIAMAuthOutput)
}

func (e DBProxyAuthFormatIAMAuth) ToDBProxyAuthFormatIAMAuthOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DBProxyAuthFormatIAMAuthOutput)
}

func (e DBProxyAuthFormatIAMAuth) ToDBProxyAuthFormatIAMAuthPtrOutput() DBProxyAuthFormatIAMAuthPtrOutput {
	return e.ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(context.Background())
}

func (e DBProxyAuthFormatIAMAuth) ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthPtrOutput {
	return DBProxyAuthFormatIAMAuth(e).ToDBProxyAuthFormatIAMAuthOutputWithContext(ctx).ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(ctx)
}

func (e DBProxyAuthFormatIAMAuth) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyAuthFormatIAMAuth) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyAuthFormatIAMAuth) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DBProxyAuthFormatIAMAuth) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DBProxyAuthFormatIAMAuthOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatIAMAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyAuthFormatIAMAuth)(nil)).Elem()
}

func (o DBProxyAuthFormatIAMAuthOutput) ToDBProxyAuthFormatIAMAuthOutput() DBProxyAuthFormatIAMAuthOutput {
	return o
}

func (o DBProxyAuthFormatIAMAuthOutput) ToDBProxyAuthFormatIAMAuthOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthOutput {
	return o
}

func (o DBProxyAuthFormatIAMAuthOutput) ToDBProxyAuthFormatIAMAuthPtrOutput() DBProxyAuthFormatIAMAuthPtrOutput {
	return o.ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatIAMAuthOutput) ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyAuthFormatIAMAuth) *DBProxyAuthFormatIAMAuth {
		return &v
	}).(DBProxyAuthFormatIAMAuthPtrOutput)
}

func (o DBProxyAuthFormatIAMAuthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatIAMAuthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyAuthFormatIAMAuth) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DBProxyAuthFormatIAMAuthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatIAMAuthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyAuthFormatIAMAuth) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DBProxyAuthFormatIAMAuthPtrOutput struct{ *pulumi.OutputState }

func (DBProxyAuthFormatIAMAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyAuthFormatIAMAuth)(nil)).Elem()
}

func (o DBProxyAuthFormatIAMAuthPtrOutput) ToDBProxyAuthFormatIAMAuthPtrOutput() DBProxyAuthFormatIAMAuthPtrOutput {
	return o
}

func (o DBProxyAuthFormatIAMAuthPtrOutput) ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthPtrOutput {
	return o
}

func (o DBProxyAuthFormatIAMAuthPtrOutput) Elem() DBProxyAuthFormatIAMAuthOutput {
	return o.ApplyT(func(v *DBProxyAuthFormatIAMAuth) DBProxyAuthFormatIAMAuth {
		if v != nil {
			return *v
		}
		var ret DBProxyAuthFormatIAMAuth
		return ret
	}).(DBProxyAuthFormatIAMAuthOutput)
}

func (o DBProxyAuthFormatIAMAuthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyAuthFormatIAMAuthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DBProxyAuthFormatIAMAuth) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DBProxyAuthFormatIAMAuthInput is an input type that accepts DBProxyAuthFormatIAMAuthArgs and DBProxyAuthFormatIAMAuthOutput values.
// You can construct a concrete instance of `DBProxyAuthFormatIAMAuthInput` via:
//
//          DBProxyAuthFormatIAMAuthArgs{...}
type DBProxyAuthFormatIAMAuthInput interface {
	pulumi.Input

	ToDBProxyAuthFormatIAMAuthOutput() DBProxyAuthFormatIAMAuthOutput
	ToDBProxyAuthFormatIAMAuthOutputWithContext(context.Context) DBProxyAuthFormatIAMAuthOutput
}

var dbproxyAuthFormatIAMAuthPtrType = reflect.TypeOf((**DBProxyAuthFormatIAMAuth)(nil)).Elem()

type DBProxyAuthFormatIAMAuthPtrInput interface {
	pulumi.Input

	ToDBProxyAuthFormatIAMAuthPtrOutput() DBProxyAuthFormatIAMAuthPtrOutput
	ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(context.Context) DBProxyAuthFormatIAMAuthPtrOutput
}

type dbproxyAuthFormatIAMAuthPtr string

func DBProxyAuthFormatIAMAuthPtr(v string) DBProxyAuthFormatIAMAuthPtrInput {
	return (*dbproxyAuthFormatIAMAuthPtr)(&v)
}

func (*dbproxyAuthFormatIAMAuthPtr) ElementType() reflect.Type {
	return dbproxyAuthFormatIAMAuthPtrType
}

func (in *dbproxyAuthFormatIAMAuthPtr) ToDBProxyAuthFormatIAMAuthPtrOutput() DBProxyAuthFormatIAMAuthPtrOutput {
	return pulumi.ToOutput(in).(DBProxyAuthFormatIAMAuthPtrOutput)
}

func (in *dbproxyAuthFormatIAMAuthPtr) ToDBProxyAuthFormatIAMAuthPtrOutputWithContext(ctx context.Context) DBProxyAuthFormatIAMAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DBProxyAuthFormatIAMAuthPtrOutput)
}

// A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations.
type DBProxyEndpointTargetRole string

const (
	DBProxyEndpointTargetRoleReadWrite = DBProxyEndpointTargetRole("READ_WRITE")
	DBProxyEndpointTargetRoleReadOnly  = DBProxyEndpointTargetRole("READ_ONLY")
)

func (DBProxyEndpointTargetRole) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTargetRole)(nil)).Elem()
}

func (e DBProxyEndpointTargetRole) ToDBProxyEndpointTargetRoleOutput() DBProxyEndpointTargetRoleOutput {
	return pulumi.ToOutput(e).(DBProxyEndpointTargetRoleOutput)
}

func (e DBProxyEndpointTargetRole) ToDBProxyEndpointTargetRoleOutputWithContext(ctx context.Context) DBProxyEndpointTargetRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DBProxyEndpointTargetRoleOutput)
}

func (e DBProxyEndpointTargetRole) ToDBProxyEndpointTargetRolePtrOutput() DBProxyEndpointTargetRolePtrOutput {
	return e.ToDBProxyEndpointTargetRolePtrOutputWithContext(context.Background())
}

func (e DBProxyEndpointTargetRole) ToDBProxyEndpointTargetRolePtrOutputWithContext(ctx context.Context) DBProxyEndpointTargetRolePtrOutput {
	return DBProxyEndpointTargetRole(e).ToDBProxyEndpointTargetRoleOutputWithContext(ctx).ToDBProxyEndpointTargetRolePtrOutputWithContext(ctx)
}

func (e DBProxyEndpointTargetRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyEndpointTargetRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyEndpointTargetRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DBProxyEndpointTargetRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DBProxyEndpointTargetRoleOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTargetRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEndpointTargetRole)(nil)).Elem()
}

func (o DBProxyEndpointTargetRoleOutput) ToDBProxyEndpointTargetRoleOutput() DBProxyEndpointTargetRoleOutput {
	return o
}

func (o DBProxyEndpointTargetRoleOutput) ToDBProxyEndpointTargetRoleOutputWithContext(ctx context.Context) DBProxyEndpointTargetRoleOutput {
	return o
}

func (o DBProxyEndpointTargetRoleOutput) ToDBProxyEndpointTargetRolePtrOutput() DBProxyEndpointTargetRolePtrOutput {
	return o.ToDBProxyEndpointTargetRolePtrOutputWithContext(context.Background())
}

func (o DBProxyEndpointTargetRoleOutput) ToDBProxyEndpointTargetRolePtrOutputWithContext(ctx context.Context) DBProxyEndpointTargetRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyEndpointTargetRole) *DBProxyEndpointTargetRole {
		return &v
	}).(DBProxyEndpointTargetRolePtrOutput)
}

func (o DBProxyEndpointTargetRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DBProxyEndpointTargetRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyEndpointTargetRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DBProxyEndpointTargetRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyEndpointTargetRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyEndpointTargetRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DBProxyEndpointTargetRolePtrOutput struct{ *pulumi.OutputState }

func (DBProxyEndpointTargetRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyEndpointTargetRole)(nil)).Elem()
}

func (o DBProxyEndpointTargetRolePtrOutput) ToDBProxyEndpointTargetRolePtrOutput() DBProxyEndpointTargetRolePtrOutput {
	return o
}

func (o DBProxyEndpointTargetRolePtrOutput) ToDBProxyEndpointTargetRolePtrOutputWithContext(ctx context.Context) DBProxyEndpointTargetRolePtrOutput {
	return o
}

func (o DBProxyEndpointTargetRolePtrOutput) Elem() DBProxyEndpointTargetRoleOutput {
	return o.ApplyT(func(v *DBProxyEndpointTargetRole) DBProxyEndpointTargetRole {
		if v != nil {
			return *v
		}
		var ret DBProxyEndpointTargetRole
		return ret
	}).(DBProxyEndpointTargetRoleOutput)
}

func (o DBProxyEndpointTargetRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyEndpointTargetRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DBProxyEndpointTargetRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DBProxyEndpointTargetRoleInput is an input type that accepts DBProxyEndpointTargetRoleArgs and DBProxyEndpointTargetRoleOutput values.
// You can construct a concrete instance of `DBProxyEndpointTargetRoleInput` via:
//
//          DBProxyEndpointTargetRoleArgs{...}
type DBProxyEndpointTargetRoleInput interface {
	pulumi.Input

	ToDBProxyEndpointTargetRoleOutput() DBProxyEndpointTargetRoleOutput
	ToDBProxyEndpointTargetRoleOutputWithContext(context.Context) DBProxyEndpointTargetRoleOutput
}

var dbproxyEndpointTargetRolePtrType = reflect.TypeOf((**DBProxyEndpointTargetRole)(nil)).Elem()

type DBProxyEndpointTargetRolePtrInput interface {
	pulumi.Input

	ToDBProxyEndpointTargetRolePtrOutput() DBProxyEndpointTargetRolePtrOutput
	ToDBProxyEndpointTargetRolePtrOutputWithContext(context.Context) DBProxyEndpointTargetRolePtrOutput
}

type dbproxyEndpointTargetRolePtr string

func DBProxyEndpointTargetRolePtr(v string) DBProxyEndpointTargetRolePtrInput {
	return (*dbproxyEndpointTargetRolePtr)(&v)
}

func (*dbproxyEndpointTargetRolePtr) ElementType() reflect.Type {
	return dbproxyEndpointTargetRolePtrType
}

func (in *dbproxyEndpointTargetRolePtr) ToDBProxyEndpointTargetRolePtrOutput() DBProxyEndpointTargetRolePtrOutput {
	return pulumi.ToOutput(in).(DBProxyEndpointTargetRolePtrOutput)
}

func (in *dbproxyEndpointTargetRolePtr) ToDBProxyEndpointTargetRolePtrOutputWithContext(ctx context.Context) DBProxyEndpointTargetRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DBProxyEndpointTargetRolePtrOutput)
}

// The kinds of databases that the proxy can connect to.
type DBProxyEngineFamily string

const (
	DBProxyEngineFamilyMysql      = DBProxyEngineFamily("MYSQL")
	DBProxyEngineFamilyPostgresql = DBProxyEngineFamily("POSTGRESQL")
)

func (DBProxyEngineFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEngineFamily)(nil)).Elem()
}

func (e DBProxyEngineFamily) ToDBProxyEngineFamilyOutput() DBProxyEngineFamilyOutput {
	return pulumi.ToOutput(e).(DBProxyEngineFamilyOutput)
}

func (e DBProxyEngineFamily) ToDBProxyEngineFamilyOutputWithContext(ctx context.Context) DBProxyEngineFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DBProxyEngineFamilyOutput)
}

func (e DBProxyEngineFamily) ToDBProxyEngineFamilyPtrOutput() DBProxyEngineFamilyPtrOutput {
	return e.ToDBProxyEngineFamilyPtrOutputWithContext(context.Background())
}

func (e DBProxyEngineFamily) ToDBProxyEngineFamilyPtrOutputWithContext(ctx context.Context) DBProxyEngineFamilyPtrOutput {
	return DBProxyEngineFamily(e).ToDBProxyEngineFamilyOutputWithContext(ctx).ToDBProxyEngineFamilyPtrOutputWithContext(ctx)
}

func (e DBProxyEngineFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyEngineFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyEngineFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DBProxyEngineFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DBProxyEngineFamilyOutput struct{ *pulumi.OutputState }

func (DBProxyEngineFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyEngineFamily)(nil)).Elem()
}

func (o DBProxyEngineFamilyOutput) ToDBProxyEngineFamilyOutput() DBProxyEngineFamilyOutput {
	return o
}

func (o DBProxyEngineFamilyOutput) ToDBProxyEngineFamilyOutputWithContext(ctx context.Context) DBProxyEngineFamilyOutput {
	return o
}

func (o DBProxyEngineFamilyOutput) ToDBProxyEngineFamilyPtrOutput() DBProxyEngineFamilyPtrOutput {
	return o.ToDBProxyEngineFamilyPtrOutputWithContext(context.Background())
}

func (o DBProxyEngineFamilyOutput) ToDBProxyEngineFamilyPtrOutputWithContext(ctx context.Context) DBProxyEngineFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyEngineFamily) *DBProxyEngineFamily {
		return &v
	}).(DBProxyEngineFamilyPtrOutput)
}

func (o DBProxyEngineFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DBProxyEngineFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyEngineFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DBProxyEngineFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyEngineFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyEngineFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DBProxyEngineFamilyPtrOutput struct{ *pulumi.OutputState }

func (DBProxyEngineFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyEngineFamily)(nil)).Elem()
}

func (o DBProxyEngineFamilyPtrOutput) ToDBProxyEngineFamilyPtrOutput() DBProxyEngineFamilyPtrOutput {
	return o
}

func (o DBProxyEngineFamilyPtrOutput) ToDBProxyEngineFamilyPtrOutputWithContext(ctx context.Context) DBProxyEngineFamilyPtrOutput {
	return o
}

func (o DBProxyEngineFamilyPtrOutput) Elem() DBProxyEngineFamilyOutput {
	return o.ApplyT(func(v *DBProxyEngineFamily) DBProxyEngineFamily {
		if v != nil {
			return *v
		}
		var ret DBProxyEngineFamily
		return ret
	}).(DBProxyEngineFamilyOutput)
}

func (o DBProxyEngineFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyEngineFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DBProxyEngineFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DBProxyEngineFamilyInput is an input type that accepts DBProxyEngineFamilyArgs and DBProxyEngineFamilyOutput values.
// You can construct a concrete instance of `DBProxyEngineFamilyInput` via:
//
//          DBProxyEngineFamilyArgs{...}
type DBProxyEngineFamilyInput interface {
	pulumi.Input

	ToDBProxyEngineFamilyOutput() DBProxyEngineFamilyOutput
	ToDBProxyEngineFamilyOutputWithContext(context.Context) DBProxyEngineFamilyOutput
}

var dbproxyEngineFamilyPtrType = reflect.TypeOf((**DBProxyEngineFamily)(nil)).Elem()

type DBProxyEngineFamilyPtrInput interface {
	pulumi.Input

	ToDBProxyEngineFamilyPtrOutput() DBProxyEngineFamilyPtrOutput
	ToDBProxyEngineFamilyPtrOutputWithContext(context.Context) DBProxyEngineFamilyPtrOutput
}

type dbproxyEngineFamilyPtr string

func DBProxyEngineFamilyPtr(v string) DBProxyEngineFamilyPtrInput {
	return (*dbproxyEngineFamilyPtr)(&v)
}

func (*dbproxyEngineFamilyPtr) ElementType() reflect.Type {
	return dbproxyEngineFamilyPtrType
}

func (in *dbproxyEngineFamilyPtr) ToDBProxyEngineFamilyPtrOutput() DBProxyEngineFamilyPtrOutput {
	return pulumi.ToOutput(in).(DBProxyEngineFamilyPtrOutput)
}

func (in *dbproxyEngineFamilyPtr) ToDBProxyEngineFamilyPtrOutputWithContext(ctx context.Context) DBProxyEngineFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DBProxyEngineFamilyPtrOutput)
}

// The identifier for the DBProxyTargetGroup
type DBProxyTargetGroupTargetGroupName string

const (
	DBProxyTargetGroupTargetGroupNameDefault = DBProxyTargetGroupTargetGroupName("default")
)

func (DBProxyTargetGroupTargetGroupName) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupTargetGroupName)(nil)).Elem()
}

func (e DBProxyTargetGroupTargetGroupName) ToDBProxyTargetGroupTargetGroupNameOutput() DBProxyTargetGroupTargetGroupNameOutput {
	return pulumi.ToOutput(e).(DBProxyTargetGroupTargetGroupNameOutput)
}

func (e DBProxyTargetGroupTargetGroupName) ToDBProxyTargetGroupTargetGroupNameOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DBProxyTargetGroupTargetGroupNameOutput)
}

func (e DBProxyTargetGroupTargetGroupName) ToDBProxyTargetGroupTargetGroupNamePtrOutput() DBProxyTargetGroupTargetGroupNamePtrOutput {
	return e.ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(context.Background())
}

func (e DBProxyTargetGroupTargetGroupName) ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNamePtrOutput {
	return DBProxyTargetGroupTargetGroupName(e).ToDBProxyTargetGroupTargetGroupNameOutputWithContext(ctx).ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(ctx)
}

func (e DBProxyTargetGroupTargetGroupName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyTargetGroupTargetGroupName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DBProxyTargetGroupTargetGroupName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DBProxyTargetGroupTargetGroupName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DBProxyTargetGroupTargetGroupNameOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupTargetGroupNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBProxyTargetGroupTargetGroupName)(nil)).Elem()
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToDBProxyTargetGroupTargetGroupNameOutput() DBProxyTargetGroupTargetGroupNameOutput {
	return o
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToDBProxyTargetGroupTargetGroupNameOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNameOutput {
	return o
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToDBProxyTargetGroupTargetGroupNamePtrOutput() DBProxyTargetGroupTargetGroupNamePtrOutput {
	return o.ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DBProxyTargetGroupTargetGroupName) *DBProxyTargetGroupTargetGroupName {
		return &v
	}).(DBProxyTargetGroupTargetGroupNamePtrOutput)
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyTargetGroupTargetGroupName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupTargetGroupNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DBProxyTargetGroupTargetGroupName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DBProxyTargetGroupTargetGroupNamePtrOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupTargetGroupNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroupTargetGroupName)(nil)).Elem()
}

func (o DBProxyTargetGroupTargetGroupNamePtrOutput) ToDBProxyTargetGroupTargetGroupNamePtrOutput() DBProxyTargetGroupTargetGroupNamePtrOutput {
	return o
}

func (o DBProxyTargetGroupTargetGroupNamePtrOutput) ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNamePtrOutput {
	return o
}

func (o DBProxyTargetGroupTargetGroupNamePtrOutput) Elem() DBProxyTargetGroupTargetGroupNameOutput {
	return o.ApplyT(func(v *DBProxyTargetGroupTargetGroupName) DBProxyTargetGroupTargetGroupName {
		if v != nil {
			return *v
		}
		var ret DBProxyTargetGroupTargetGroupName
		return ret
	}).(DBProxyTargetGroupTargetGroupNameOutput)
}

func (o DBProxyTargetGroupTargetGroupNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DBProxyTargetGroupTargetGroupNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DBProxyTargetGroupTargetGroupName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DBProxyTargetGroupTargetGroupNameInput is an input type that accepts DBProxyTargetGroupTargetGroupNameArgs and DBProxyTargetGroupTargetGroupNameOutput values.
// You can construct a concrete instance of `DBProxyTargetGroupTargetGroupNameInput` via:
//
//          DBProxyTargetGroupTargetGroupNameArgs{...}
type DBProxyTargetGroupTargetGroupNameInput interface {
	pulumi.Input

	ToDBProxyTargetGroupTargetGroupNameOutput() DBProxyTargetGroupTargetGroupNameOutput
	ToDBProxyTargetGroupTargetGroupNameOutputWithContext(context.Context) DBProxyTargetGroupTargetGroupNameOutput
}

var dbproxyTargetGroupTargetGroupNamePtrType = reflect.TypeOf((**DBProxyTargetGroupTargetGroupName)(nil)).Elem()

type DBProxyTargetGroupTargetGroupNamePtrInput interface {
	pulumi.Input

	ToDBProxyTargetGroupTargetGroupNamePtrOutput() DBProxyTargetGroupTargetGroupNamePtrOutput
	ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(context.Context) DBProxyTargetGroupTargetGroupNamePtrOutput
}

type dbproxyTargetGroupTargetGroupNamePtr string

func DBProxyTargetGroupTargetGroupNamePtr(v string) DBProxyTargetGroupTargetGroupNamePtrInput {
	return (*dbproxyTargetGroupTargetGroupNamePtr)(&v)
}

func (*dbproxyTargetGroupTargetGroupNamePtr) ElementType() reflect.Type {
	return dbproxyTargetGroupTargetGroupNamePtrType
}

func (in *dbproxyTargetGroupTargetGroupNamePtr) ToDBProxyTargetGroupTargetGroupNamePtrOutput() DBProxyTargetGroupTargetGroupNamePtrOutput {
	return pulumi.ToOutput(in).(DBProxyTargetGroupTargetGroupNamePtrOutput)
}

func (in *dbproxyTargetGroupTargetGroupNamePtr) ToDBProxyTargetGroupTargetGroupNamePtrOutputWithContext(ctx context.Context) DBProxyTargetGroupTargetGroupNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DBProxyTargetGroupTargetGroupNamePtrOutput)
}

// The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).
// If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
type GlobalClusterEngine string

const (
	GlobalClusterEngineAurora           = GlobalClusterEngine("aurora")
	GlobalClusterEngineAuroraMysql      = GlobalClusterEngine("aurora-mysql")
	GlobalClusterEngineAuroraPostgresql = GlobalClusterEngine("aurora-postgresql")
)

func (GlobalClusterEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterEngine)(nil)).Elem()
}

func (e GlobalClusterEngine) ToGlobalClusterEngineOutput() GlobalClusterEngineOutput {
	return pulumi.ToOutput(e).(GlobalClusterEngineOutput)
}

func (e GlobalClusterEngine) ToGlobalClusterEngineOutputWithContext(ctx context.Context) GlobalClusterEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalClusterEngineOutput)
}

func (e GlobalClusterEngine) ToGlobalClusterEnginePtrOutput() GlobalClusterEnginePtrOutput {
	return e.ToGlobalClusterEnginePtrOutputWithContext(context.Background())
}

func (e GlobalClusterEngine) ToGlobalClusterEnginePtrOutputWithContext(ctx context.Context) GlobalClusterEnginePtrOutput {
	return GlobalClusterEngine(e).ToGlobalClusterEngineOutputWithContext(ctx).ToGlobalClusterEnginePtrOutputWithContext(ctx)
}

func (e GlobalClusterEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalClusterEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalClusterEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalClusterEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalClusterEngineOutput struct{ *pulumi.OutputState }

func (GlobalClusterEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterEngine)(nil)).Elem()
}

func (o GlobalClusterEngineOutput) ToGlobalClusterEngineOutput() GlobalClusterEngineOutput {
	return o
}

func (o GlobalClusterEngineOutput) ToGlobalClusterEngineOutputWithContext(ctx context.Context) GlobalClusterEngineOutput {
	return o
}

func (o GlobalClusterEngineOutput) ToGlobalClusterEnginePtrOutput() GlobalClusterEnginePtrOutput {
	return o.ToGlobalClusterEnginePtrOutputWithContext(context.Background())
}

func (o GlobalClusterEngineOutput) ToGlobalClusterEnginePtrOutputWithContext(ctx context.Context) GlobalClusterEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClusterEngine) *GlobalClusterEngine {
		return &v
	}).(GlobalClusterEnginePtrOutput)
}

func (o GlobalClusterEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalClusterEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalClusterEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalClusterEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalClusterEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalClusterEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalClusterEnginePtrOutput struct{ *pulumi.OutputState }

func (GlobalClusterEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClusterEngine)(nil)).Elem()
}

func (o GlobalClusterEnginePtrOutput) ToGlobalClusterEnginePtrOutput() GlobalClusterEnginePtrOutput {
	return o
}

func (o GlobalClusterEnginePtrOutput) ToGlobalClusterEnginePtrOutputWithContext(ctx context.Context) GlobalClusterEnginePtrOutput {
	return o
}

func (o GlobalClusterEnginePtrOutput) Elem() GlobalClusterEngineOutput {
	return o.ApplyT(func(v *GlobalClusterEngine) GlobalClusterEngine {
		if v != nil {
			return *v
		}
		var ret GlobalClusterEngine
		return ret
	}).(GlobalClusterEngineOutput)
}

func (o GlobalClusterEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalClusterEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalClusterEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalClusterEngineInput is an input type that accepts GlobalClusterEngineArgs and GlobalClusterEngineOutput values.
// You can construct a concrete instance of `GlobalClusterEngineInput` via:
//
//          GlobalClusterEngineArgs{...}
type GlobalClusterEngineInput interface {
	pulumi.Input

	ToGlobalClusterEngineOutput() GlobalClusterEngineOutput
	ToGlobalClusterEngineOutputWithContext(context.Context) GlobalClusterEngineOutput
}

var globalClusterEnginePtrType = reflect.TypeOf((**GlobalClusterEngine)(nil)).Elem()

type GlobalClusterEnginePtrInput interface {
	pulumi.Input

	ToGlobalClusterEnginePtrOutput() GlobalClusterEnginePtrOutput
	ToGlobalClusterEnginePtrOutputWithContext(context.Context) GlobalClusterEnginePtrOutput
}

type globalClusterEnginePtr string

func GlobalClusterEnginePtr(v string) GlobalClusterEnginePtrInput {
	return (*globalClusterEnginePtr)(&v)
}

func (*globalClusterEnginePtr) ElementType() reflect.Type {
	return globalClusterEnginePtrType
}

func (in *globalClusterEnginePtr) ToGlobalClusterEnginePtrOutput() GlobalClusterEnginePtrOutput {
	return pulumi.ToOutput(in).(GlobalClusterEnginePtrOutput)
}

func (in *globalClusterEnginePtr) ToGlobalClusterEnginePtrOutputWithContext(ctx context.Context) GlobalClusterEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalClusterEnginePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DBProxyAuthFormatAuthSchemeOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatAuthSchemePtrOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatIAMAuthOutput{})
	pulumi.RegisterOutputType(DBProxyAuthFormatIAMAuthPtrOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTargetRoleOutput{})
	pulumi.RegisterOutputType(DBProxyEndpointTargetRolePtrOutput{})
	pulumi.RegisterOutputType(DBProxyEngineFamilyOutput{})
	pulumi.RegisterOutputType(DBProxyEngineFamilyPtrOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupTargetGroupNameOutput{})
	pulumi.RegisterOutputType(DBProxyTargetGroupTargetGroupNamePtrOutput{})
	pulumi.RegisterOutputType(GlobalClusterEngineOutput{})
	pulumi.RegisterOutputType(GlobalClusterEnginePtrOutput{})
}
