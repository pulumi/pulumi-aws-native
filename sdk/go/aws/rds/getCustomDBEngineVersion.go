// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::RDS::CustomDBEngineVersion resource creates an Amazon RDS custom DB engine version.
func LookupCustomDBEngineVersion(ctx *pulumi.Context, args *LookupCustomDBEngineVersionArgs, opts ...pulumi.InvokeOption) (*LookupCustomDBEngineVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomDBEngineVersionResult
	err := ctx.Invoke("aws-native:rds:getCustomDBEngineVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomDBEngineVersionArgs struct {
	// The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.
	Engine string `pulumi:"engine"`
	// The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique per customer per Region.
	EngineVersion string `pulumi:"engineVersion"`
}

type LookupCustomDBEngineVersionResult struct {
	// The ARN of the custom engine version.
	DbEngineVersionArn *string `pulumi:"dbEngineVersionArn"`
	// An optional description of your CEV.
	Description *string `pulumi:"description"`
	// The availability status to be assigned to the CEV.
	Status *CustomDBEngineVersionStatus `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags []CustomDBEngineVersionTag `pulumi:"tags"`
}

func LookupCustomDBEngineVersionOutput(ctx *pulumi.Context, args LookupCustomDBEngineVersionOutputArgs, opts ...pulumi.InvokeOption) LookupCustomDBEngineVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomDBEngineVersionResult, error) {
			args := v.(LookupCustomDBEngineVersionArgs)
			r, err := LookupCustomDBEngineVersion(ctx, &args, opts...)
			var s LookupCustomDBEngineVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomDBEngineVersionResultOutput)
}

type LookupCustomDBEngineVersionOutputArgs struct {
	// The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.
	Engine pulumi.StringInput `pulumi:"engine"`
	// The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique per customer per Region.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
}

func (LookupCustomDBEngineVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDBEngineVersionArgs)(nil)).Elem()
}

type LookupCustomDBEngineVersionResultOutput struct{ *pulumi.OutputState }

func (LookupCustomDBEngineVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDBEngineVersionResult)(nil)).Elem()
}

func (o LookupCustomDBEngineVersionResultOutput) ToLookupCustomDBEngineVersionResultOutput() LookupCustomDBEngineVersionResultOutput {
	return o
}

func (o LookupCustomDBEngineVersionResultOutput) ToLookupCustomDBEngineVersionResultOutputWithContext(ctx context.Context) LookupCustomDBEngineVersionResultOutput {
	return o
}

// The ARN of the custom engine version.
func (o LookupCustomDBEngineVersionResultOutput) DbEngineVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomDBEngineVersionResult) *string { return v.DbEngineVersionArn }).(pulumi.StringPtrOutput)
}

// An optional description of your CEV.
func (o LookupCustomDBEngineVersionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomDBEngineVersionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The availability status to be assigned to the CEV.
func (o LookupCustomDBEngineVersionResultOutput) Status() CustomDBEngineVersionStatusPtrOutput {
	return o.ApplyT(func(v LookupCustomDBEngineVersionResult) *CustomDBEngineVersionStatus { return v.Status }).(CustomDBEngineVersionStatusPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupCustomDBEngineVersionResultOutput) Tags() CustomDBEngineVersionTagArrayOutput {
	return o.ApplyT(func(v LookupCustomDBEngineVersionResult) []CustomDBEngineVersionTag { return v.Tags }).(CustomDBEngineVersionTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomDBEngineVersionResultOutput{})
}
