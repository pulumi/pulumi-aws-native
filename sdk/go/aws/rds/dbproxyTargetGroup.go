// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::RDS::DBProxyTargetGroup
type DBProxyTargetGroup struct {
	pulumi.CustomResourceState

	ConnectionPoolConfigurationInfo DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput `pulumi:"connectionPoolConfigurationInfo"`
	DbClusterIdentifiers            pulumi.StringArrayOutput                                         `pulumi:"dbClusterIdentifiers"`
	DbInstanceIdentifiers           pulumi.StringArrayOutput                                         `pulumi:"dbInstanceIdentifiers"`
	// The identifier for the proxy.
	DbProxyName pulumi.StringOutput `pulumi:"dbProxyName"`
	// The Amazon Resource Name (ARN) representing the target group.
	TargetGroupArn pulumi.StringOutput `pulumi:"targetGroupArn"`
	// The identifier for the DBProxyTargetGroup
	TargetGroupName DBProxyTargetGroupTargetGroupNameOutput `pulumi:"targetGroupName"`
}

// NewDBProxyTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewDBProxyTargetGroup(ctx *pulumi.Context,
	name string, args *DBProxyTargetGroupArgs, opts ...pulumi.ResourceOption) (*DBProxyTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	if args.TargetGroupName == nil {
		return nil, errors.New("invalid value for required argument 'TargetGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DBProxyTargetGroup
	err := ctx.RegisterResource("aws-native:rds:DBProxyTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDBProxyTargetGroup gets an existing DBProxyTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDBProxyTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DBProxyTargetGroupState, opts ...pulumi.ResourceOption) (*DBProxyTargetGroup, error) {
	var resource DBProxyTargetGroup
	err := ctx.ReadResource("aws-native:rds:DBProxyTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DBProxyTargetGroup resources.
type dbproxyTargetGroupState struct {
}

type DBProxyTargetGroupState struct {
}

func (DBProxyTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbproxyTargetGroupState)(nil)).Elem()
}

type dbproxyTargetGroupArgs struct {
	ConnectionPoolConfigurationInfo *DBProxyTargetGroupConnectionPoolConfigurationInfoFormat `pulumi:"connectionPoolConfigurationInfo"`
	DbClusterIdentifiers            []string                                                 `pulumi:"dbClusterIdentifiers"`
	DbInstanceIdentifiers           []string                                                 `pulumi:"dbInstanceIdentifiers"`
	// The identifier for the proxy.
	DbProxyName string `pulumi:"dbProxyName"`
	// The identifier for the DBProxyTargetGroup
	TargetGroupName DBProxyTargetGroupTargetGroupName `pulumi:"targetGroupName"`
}

// The set of arguments for constructing a DBProxyTargetGroup resource.
type DBProxyTargetGroupArgs struct {
	ConnectionPoolConfigurationInfo DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrInput
	DbClusterIdentifiers            pulumi.StringArrayInput
	DbInstanceIdentifiers           pulumi.StringArrayInput
	// The identifier for the proxy.
	DbProxyName pulumi.StringInput
	// The identifier for the DBProxyTargetGroup
	TargetGroupName DBProxyTargetGroupTargetGroupNameInput
}

func (DBProxyTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbproxyTargetGroupArgs)(nil)).Elem()
}

type DBProxyTargetGroupInput interface {
	pulumi.Input

	ToDBProxyTargetGroupOutput() DBProxyTargetGroupOutput
	ToDBProxyTargetGroupOutputWithContext(ctx context.Context) DBProxyTargetGroupOutput
}

func (*DBProxyTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroup)(nil)).Elem()
}

func (i *DBProxyTargetGroup) ToDBProxyTargetGroupOutput() DBProxyTargetGroupOutput {
	return i.ToDBProxyTargetGroupOutputWithContext(context.Background())
}

func (i *DBProxyTargetGroup) ToDBProxyTargetGroupOutputWithContext(ctx context.Context) DBProxyTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBProxyTargetGroupOutput)
}

type DBProxyTargetGroupOutput struct{ *pulumi.OutputState }

func (DBProxyTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBProxyTargetGroup)(nil)).Elem()
}

func (o DBProxyTargetGroupOutput) ToDBProxyTargetGroupOutput() DBProxyTargetGroupOutput {
	return o
}

func (o DBProxyTargetGroupOutput) ToDBProxyTargetGroupOutputWithContext(ctx context.Context) DBProxyTargetGroupOutput {
	return o
}

func (o DBProxyTargetGroupOutput) ConnectionPoolConfigurationInfo() DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput {
		return v.ConnectionPoolConfigurationInfo
	}).(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatPtrOutput)
}

func (o DBProxyTargetGroupOutput) DbClusterIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) pulumi.StringArrayOutput { return v.DbClusterIdentifiers }).(pulumi.StringArrayOutput)
}

func (o DBProxyTargetGroupOutput) DbInstanceIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) pulumi.StringArrayOutput { return v.DbInstanceIdentifiers }).(pulumi.StringArrayOutput)
}

// The identifier for the proxy.
func (o DBProxyTargetGroupOutput) DbProxyName() pulumi.StringOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) pulumi.StringOutput { return v.DbProxyName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) representing the target group.
func (o DBProxyTargetGroupOutput) TargetGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) pulumi.StringOutput { return v.TargetGroupArn }).(pulumi.StringOutput)
}

// The identifier for the DBProxyTargetGroup
func (o DBProxyTargetGroupOutput) TargetGroupName() DBProxyTargetGroupTargetGroupNameOutput {
	return o.ApplyT(func(v *DBProxyTargetGroup) DBProxyTargetGroupTargetGroupNameOutput { return v.TargetGroupName }).(DBProxyTargetGroupTargetGroupNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DBProxyTargetGroupInput)(nil)).Elem(), &DBProxyTargetGroup{})
	pulumi.RegisterOutputType(DBProxyTargetGroupOutput{})
}
