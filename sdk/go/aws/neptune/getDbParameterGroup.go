// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package neptune

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::Neptune::DBParameterGroup creates a new DB parameter group. This type can be declared in a template and referenced in the DBParameterGroupName parameter of AWS::Neptune::DBInstance
func LookupDbParameterGroup(ctx *pulumi.Context, args *LookupDbParameterGroupArgs, opts ...pulumi.InvokeOption) (*LookupDbParameterGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDbParameterGroupResult
	err := ctx.Invoke("aws-native:neptune:getDbParameterGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDbParameterGroupArgs struct {
	// Provides the name of the DB parameter group.
	Name string `pulumi:"name"`
}

type LookupDbParameterGroupResult struct {
	// The parameters to set for this DB parameter group.
	//
	// The parameters are expressed as a JSON object consisting of key-value pairs.
	//
	// Changes to dynamic parameters are applied immediately. During an update, if you have static parameters (whether they were changed or not), it triggers AWS CloudFormation to reboot the associated DB instance without failover.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Neptune::DBParameterGroup` for more information about the expected schema for this property.
	Parameters interface{} `pulumi:"parameters"`
	// An optional array of key-value pairs to apply to this DB parameter group.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDbParameterGroupOutput(ctx *pulumi.Context, args LookupDbParameterGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDbParameterGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDbParameterGroupResultOutput, error) {
			args := v.(LookupDbParameterGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:neptune:getDbParameterGroup", args, LookupDbParameterGroupResultOutput{}, options).(LookupDbParameterGroupResultOutput), nil
		}).(LookupDbParameterGroupResultOutput)
}

type LookupDbParameterGroupOutputArgs struct {
	// Provides the name of the DB parameter group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupDbParameterGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbParameterGroupArgs)(nil)).Elem()
}

type LookupDbParameterGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDbParameterGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbParameterGroupResult)(nil)).Elem()
}

func (o LookupDbParameterGroupResultOutput) ToLookupDbParameterGroupResultOutput() LookupDbParameterGroupResultOutput {
	return o
}

func (o LookupDbParameterGroupResultOutput) ToLookupDbParameterGroupResultOutputWithContext(ctx context.Context) LookupDbParameterGroupResultOutput {
	return o
}

// The parameters to set for this DB parameter group.
//
// The parameters are expressed as a JSON object consisting of key-value pairs.
//
// Changes to dynamic parameters are applied immediately. During an update, if you have static parameters (whether they were changed or not), it triggers AWS CloudFormation to reboot the associated DB instance without failover.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Neptune::DBParameterGroup` for more information about the expected schema for this property.
func (o LookupDbParameterGroupResultOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDbParameterGroupResult) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// An optional array of key-value pairs to apply to this DB parameter group.
func (o LookupDbParameterGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDbParameterGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbParameterGroupResultOutput{})
}
