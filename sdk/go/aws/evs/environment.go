// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package evs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An environment created within the EVS service
type Environment struct {
	pulumi.CustomResourceState

	Checks           EnvironmentCheckArrayOutput      `pulumi:"checks"`
	ConnectivityInfo ConnectivityInfoPropertiesOutput `pulumi:"connectivityInfo"`
	CreatedAt        pulumi.StringOutput              `pulumi:"createdAt"`
	Credentials      EnvironmentSecretArrayOutput     `pulumi:"credentials"`
	EnvironmentArn   pulumi.StringOutput              `pulumi:"environmentArn"`
	EnvironmentId    pulumi.StringOutput              `pulumi:"environmentId"`
	// The name of an EVS environment
	EnvironmentName  pulumi.StringPtrOutput     `pulumi:"environmentName"`
	EnvironmentState EnvironmentStateEnumOutput `pulumi:"environmentState"`
	// The initial hosts for environment only required upon creation. Modification after creation will have no effect
	Hosts EnvironmentHostInfoForCreateArrayOutput `pulumi:"hosts"`
	// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
	InitialVlans InitialVlansPropertiesPtrOutput `pulumi:"initialVlans"`
	KmsKeyId     pulumi.StringPtrOutput          `pulumi:"kmsKeyId"`
	// The license information for an EVS environment
	LicenseInfo                 LicenseInfoPropertiesOutput                    `pulumi:"licenseInfo"`
	ModifiedAt                  pulumi.StringOutput                            `pulumi:"modifiedAt"`
	ServiceAccessSecurityGroups ServiceAccessSecurityGroupsPropertiesPtrOutput `pulumi:"serviceAccessSecurityGroups"`
	ServiceAccessSubnetId       pulumi.StringOutput                            `pulumi:"serviceAccessSubnetId"`
	SiteId                      pulumi.StringOutput                            `pulumi:"siteId"`
	StateDetails                pulumi.StringOutput                            `pulumi:"stateDetails"`
	// An array of key-value pairs to apply to this resource.
	Tags          aws.TagArrayOutput           `pulumi:"tags"`
	TermsAccepted pulumi.BoolOutput            `pulumi:"termsAccepted"`
	VcfHostnames  VcfHostnamesPropertiesOutput `pulumi:"vcfHostnames"`
	VcfVersion    EnvironmentVcfVersionOutput  `pulumi:"vcfVersion"`
	VpcId         pulumi.StringOutput          `pulumi:"vpcId"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectivityInfo == nil {
		return nil, errors.New("invalid value for required argument 'ConnectivityInfo'")
	}
	if args.LicenseInfo == nil {
		return nil, errors.New("invalid value for required argument 'LicenseInfo'")
	}
	if args.ServiceAccessSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccessSubnetId'")
	}
	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	if args.TermsAccepted == nil {
		return nil, errors.New("invalid value for required argument 'TermsAccepted'")
	}
	if args.VcfHostnames == nil {
		return nil, errors.New("invalid value for required argument 'VcfHostnames'")
	}
	if args.VcfVersion == nil {
		return nil, errors.New("invalid value for required argument 'VcfVersion'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"connectivityInfo",
		"environmentName",
		"kmsKeyId",
		"licenseInfo",
		"serviceAccessSecurityGroups",
		"serviceAccessSubnetId",
		"siteId",
		"termsAccepted",
		"vcfHostnames",
		"vcfVersion",
		"vpcId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("aws-native:evs:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("aws-native:evs:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
}

type EnvironmentState struct {
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	ConnectivityInfo ConnectivityInfoProperties `pulumi:"connectivityInfo"`
	// The name of an EVS environment
	EnvironmentName *string `pulumi:"environmentName"`
	// The initial hosts for environment only required upon creation. Modification after creation will have no effect
	Hosts []EnvironmentHostInfoForCreate `pulumi:"hosts"`
	// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
	InitialVlans *InitialVlansProperties `pulumi:"initialVlans"`
	KmsKeyId     *string                 `pulumi:"kmsKeyId"`
	// The license information for an EVS environment
	LicenseInfo                 LicenseInfoProperties                  `pulumi:"licenseInfo"`
	ServiceAccessSecurityGroups *ServiceAccessSecurityGroupsProperties `pulumi:"serviceAccessSecurityGroups"`
	ServiceAccessSubnetId       string                                 `pulumi:"serviceAccessSubnetId"`
	SiteId                      string                                 `pulumi:"siteId"`
	// An array of key-value pairs to apply to this resource.
	Tags          []aws.Tag              `pulumi:"tags"`
	TermsAccepted bool                   `pulumi:"termsAccepted"`
	VcfHostnames  VcfHostnamesProperties `pulumi:"vcfHostnames"`
	VcfVersion    EnvironmentVcfVersion  `pulumi:"vcfVersion"`
	VpcId         string                 `pulumi:"vpcId"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	ConnectivityInfo ConnectivityInfoPropertiesInput
	// The name of an EVS environment
	EnvironmentName pulumi.StringPtrInput
	// The initial hosts for environment only required upon creation. Modification after creation will have no effect
	Hosts EnvironmentHostInfoForCreateArrayInput
	// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
	InitialVlans InitialVlansPropertiesPtrInput
	KmsKeyId     pulumi.StringPtrInput
	// The license information for an EVS environment
	LicenseInfo                 LicenseInfoPropertiesInput
	ServiceAccessSecurityGroups ServiceAccessSecurityGroupsPropertiesPtrInput
	ServiceAccessSubnetId       pulumi.StringInput
	SiteId                      pulumi.StringInput
	// An array of key-value pairs to apply to this resource.
	Tags          aws.TagArrayInput
	TermsAccepted pulumi.BoolInput
	VcfHostnames  VcfHostnamesPropertiesInput
	VcfVersion    EnvironmentVcfVersionInput
	VpcId         pulumi.StringInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) Checks() EnvironmentCheckArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentCheckArrayOutput { return v.Checks }).(EnvironmentCheckArrayOutput)
}

func (o EnvironmentOutput) ConnectivityInfo() ConnectivityInfoPropertiesOutput {
	return o.ApplyT(func(v *Environment) ConnectivityInfoPropertiesOutput { return v.ConnectivityInfo }).(ConnectivityInfoPropertiesOutput)
}

func (o EnvironmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Credentials() EnvironmentSecretArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentSecretArrayOutput { return v.Credentials }).(EnvironmentSecretArrayOutput)
}

func (o EnvironmentOutput) EnvironmentArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentArn }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The name of an EVS environment
func (o EnvironmentOutput) EnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.EnvironmentName }).(pulumi.StringPtrOutput)
}

func (o EnvironmentOutput) EnvironmentState() EnvironmentStateEnumOutput {
	return o.ApplyT(func(v *Environment) EnvironmentStateEnumOutput { return v.EnvironmentState }).(EnvironmentStateEnumOutput)
}

// The initial hosts for environment only required upon creation. Modification after creation will have no effect
func (o EnvironmentOutput) Hosts() EnvironmentHostInfoForCreateArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentHostInfoForCreateArrayOutput { return v.Hosts }).(EnvironmentHostInfoForCreateArrayOutput)
}

// The initial Vlan configuration only required upon creation. Modification after creation will have no effect
func (o EnvironmentOutput) InitialVlans() InitialVlansPropertiesPtrOutput {
	return o.ApplyT(func(v *Environment) InitialVlansPropertiesPtrOutput { return v.InitialVlans }).(InitialVlansPropertiesPtrOutput)
}

func (o EnvironmentOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The license information for an EVS environment
func (o EnvironmentOutput) LicenseInfo() LicenseInfoPropertiesOutput {
	return o.ApplyT(func(v *Environment) LicenseInfoPropertiesOutput { return v.LicenseInfo }).(LicenseInfoPropertiesOutput)
}

func (o EnvironmentOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ModifiedAt }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) ServiceAccessSecurityGroups() ServiceAccessSecurityGroupsPropertiesPtrOutput {
	return o.ApplyT(func(v *Environment) ServiceAccessSecurityGroupsPropertiesPtrOutput {
		return v.ServiceAccessSecurityGroups
	}).(ServiceAccessSecurityGroupsPropertiesPtrOutput)
}

func (o EnvironmentOutput) ServiceAccessSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ServiceAccessSubnetId }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.SiteId }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) StateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.StateDetails }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o EnvironmentOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Environment) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o EnvironmentOutput) TermsAccepted() pulumi.BoolOutput {
	return o.ApplyT(func(v *Environment) pulumi.BoolOutput { return v.TermsAccepted }).(pulumi.BoolOutput)
}

func (o EnvironmentOutput) VcfHostnames() VcfHostnamesPropertiesOutput {
	return o.ApplyT(func(v *Environment) VcfHostnamesPropertiesOutput { return v.VcfHostnames }).(VcfHostnamesPropertiesOutput)
}

func (o EnvironmentOutput) VcfVersion() EnvironmentVcfVersionOutput {
	return o.ApplyT(func(v *Environment) EnvironmentVcfVersionOutput { return v.VcfVersion }).(EnvironmentVcfVersionOutput)
}

func (o EnvironmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
}
