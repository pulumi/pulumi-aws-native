// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package evs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnvironmentCheckResult string

const (
	EnvironmentCheckResultPassed  = EnvironmentCheckResult("PASSED")
	EnvironmentCheckResultFailed  = EnvironmentCheckResult("FAILED")
	EnvironmentCheckResultUnknown = EnvironmentCheckResult("UNKNOWN")
)

type EnvironmentCheckResultOutput struct{ *pulumi.OutputState }

func (EnvironmentCheckResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentCheckResult)(nil)).Elem()
}

func (o EnvironmentCheckResultOutput) ToEnvironmentCheckResultOutput() EnvironmentCheckResultOutput {
	return o
}

func (o EnvironmentCheckResultOutput) ToEnvironmentCheckResultOutputWithContext(ctx context.Context) EnvironmentCheckResultOutput {
	return o
}

func (o EnvironmentCheckResultOutput) ToEnvironmentCheckResultPtrOutput() EnvironmentCheckResultPtrOutput {
	return o.ToEnvironmentCheckResultPtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckResultOutput) ToEnvironmentCheckResultPtrOutputWithContext(ctx context.Context) EnvironmentCheckResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentCheckResult) *EnvironmentCheckResult {
		return &v
	}).(EnvironmentCheckResultPtrOutput)
}

func (o EnvironmentCheckResultOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentCheckResultOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentCheckResult) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentCheckResultOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckResultOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentCheckResult) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentCheckResultPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentCheckResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCheckResult)(nil)).Elem()
}

func (o EnvironmentCheckResultPtrOutput) ToEnvironmentCheckResultPtrOutput() EnvironmentCheckResultPtrOutput {
	return o
}

func (o EnvironmentCheckResultPtrOutput) ToEnvironmentCheckResultPtrOutputWithContext(ctx context.Context) EnvironmentCheckResultPtrOutput {
	return o
}

func (o EnvironmentCheckResultPtrOutput) Elem() EnvironmentCheckResultOutput {
	return o.ApplyT(func(v *EnvironmentCheckResult) EnvironmentCheckResult {
		if v != nil {
			return *v
		}
		var ret EnvironmentCheckResult
		return ret
	}).(EnvironmentCheckResultOutput)
}

func (o EnvironmentCheckResultPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckResultPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentCheckResult) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The check type. Amazon EVS performs the following checks.
//
// - `KEY_REUSE` : checks that the VCF license key is not used by another Amazon EVS environment. This check fails if a used license is added to the environment.
// - `KEY_COVERAGE` : checks that your VCF license key allocates sufficient vCPU cores for all deployed hosts. The check fails when any assigned hosts in the EVS environment are not covered by license keys, or when any unassigned hosts cannot be covered by available vCPU cores in keys.
// - `REACHABILITY` : checks that the Amazon EVS control plane has a persistent connection to SDDC Manager. If Amazon EVS cannot reach the environment, this check fails.
// - `HOST_COUNT` : Checks that your environment has a minimum of 4 hosts, which is a requirement for VCF 5.2.1.
//
// If this check fails, you will need to add hosts so that your environment meets this minimum requirement. Amazon EVS only supports environments with 4-16 hosts.
type EnvironmentCheckType string

const (
	EnvironmentCheckTypeKeyReuse     = EnvironmentCheckType("KEY_REUSE")
	EnvironmentCheckTypeKeyCoverage  = EnvironmentCheckType("KEY_COVERAGE")
	EnvironmentCheckTypeReachability = EnvironmentCheckType("REACHABILITY")
	EnvironmentCheckTypeVcfVersion   = EnvironmentCheckType("VCF_VERSION")
	EnvironmentCheckTypeHostCount    = EnvironmentCheckType("HOST_COUNT")
)

type EnvironmentCheckTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentCheckTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentCheckType)(nil)).Elem()
}

func (o EnvironmentCheckTypeOutput) ToEnvironmentCheckTypeOutput() EnvironmentCheckTypeOutput {
	return o
}

func (o EnvironmentCheckTypeOutput) ToEnvironmentCheckTypeOutputWithContext(ctx context.Context) EnvironmentCheckTypeOutput {
	return o
}

func (o EnvironmentCheckTypeOutput) ToEnvironmentCheckTypePtrOutput() EnvironmentCheckTypePtrOutput {
	return o.ToEnvironmentCheckTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckTypeOutput) ToEnvironmentCheckTypePtrOutputWithContext(ctx context.Context) EnvironmentCheckTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentCheckType) *EnvironmentCheckType {
		return &v
	}).(EnvironmentCheckTypePtrOutput)
}

func (o EnvironmentCheckTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentCheckTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentCheckType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentCheckTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentCheckType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentCheckTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentCheckTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCheckType)(nil)).Elem()
}

func (o EnvironmentCheckTypePtrOutput) ToEnvironmentCheckTypePtrOutput() EnvironmentCheckTypePtrOutput {
	return o
}

func (o EnvironmentCheckTypePtrOutput) ToEnvironmentCheckTypePtrOutputWithContext(ctx context.Context) EnvironmentCheckTypePtrOutput {
	return o
}

func (o EnvironmentCheckTypePtrOutput) Elem() EnvironmentCheckTypeOutput {
	return o.ApplyT(func(v *EnvironmentCheckType) EnvironmentCheckType {
		if v != nil {
			return *v
		}
		var ret EnvironmentCheckType
		return ret
	}).(EnvironmentCheckTypeOutput)
}

func (o EnvironmentCheckTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentCheckTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentCheckType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The EC2 instance type that represents the host.
type EnvironmentHostInfoForCreateInstanceType string

const (
	EnvironmentHostInfoForCreateInstanceTypeI4iMetal = EnvironmentHostInfoForCreateInstanceType("i4i.metal")
)

func (EnvironmentHostInfoForCreateInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentHostInfoForCreateInstanceType)(nil)).Elem()
}

func (e EnvironmentHostInfoForCreateInstanceType) ToEnvironmentHostInfoForCreateInstanceTypeOutput() EnvironmentHostInfoForCreateInstanceTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentHostInfoForCreateInstanceTypeOutput)
}

func (e EnvironmentHostInfoForCreateInstanceType) ToEnvironmentHostInfoForCreateInstanceTypeOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentHostInfoForCreateInstanceTypeOutput)
}

func (e EnvironmentHostInfoForCreateInstanceType) ToEnvironmentHostInfoForCreateInstanceTypePtrOutput() EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return e.ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentHostInfoForCreateInstanceType) ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return EnvironmentHostInfoForCreateInstanceType(e).ToEnvironmentHostInfoForCreateInstanceTypeOutputWithContext(ctx).ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(ctx)
}

func (e EnvironmentHostInfoForCreateInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentHostInfoForCreateInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentHostInfoForCreateInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentHostInfoForCreateInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentHostInfoForCreateInstanceTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentHostInfoForCreateInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentHostInfoForCreateInstanceType)(nil)).Elem()
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToEnvironmentHostInfoForCreateInstanceTypeOutput() EnvironmentHostInfoForCreateInstanceTypeOutput {
	return o
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToEnvironmentHostInfoForCreateInstanceTypeOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypeOutput {
	return o
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToEnvironmentHostInfoForCreateInstanceTypePtrOutput() EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return o.ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentHostInfoForCreateInstanceType) *EnvironmentHostInfoForCreateInstanceType {
		return &v
	}).(EnvironmentHostInfoForCreateInstanceTypePtrOutput)
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentHostInfoForCreateInstanceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentHostInfoForCreateInstanceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentHostInfoForCreateInstanceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentHostInfoForCreateInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentHostInfoForCreateInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentHostInfoForCreateInstanceType)(nil)).Elem()
}

func (o EnvironmentHostInfoForCreateInstanceTypePtrOutput) ToEnvironmentHostInfoForCreateInstanceTypePtrOutput() EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return o
}

func (o EnvironmentHostInfoForCreateInstanceTypePtrOutput) ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return o
}

func (o EnvironmentHostInfoForCreateInstanceTypePtrOutput) Elem() EnvironmentHostInfoForCreateInstanceTypeOutput {
	return o.ApplyT(func(v *EnvironmentHostInfoForCreateInstanceType) EnvironmentHostInfoForCreateInstanceType {
		if v != nil {
			return *v
		}
		var ret EnvironmentHostInfoForCreateInstanceType
		return ret
	}).(EnvironmentHostInfoForCreateInstanceTypeOutput)
}

func (o EnvironmentHostInfoForCreateInstanceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentHostInfoForCreateInstanceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentHostInfoForCreateInstanceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentHostInfoForCreateInstanceTypeInput is an input type that accepts values of the EnvironmentHostInfoForCreateInstanceType enum
// A concrete instance of `EnvironmentHostInfoForCreateInstanceTypeInput` can be one of the following:
//
//	EnvironmentHostInfoForCreateInstanceTypeI4iMetal
type EnvironmentHostInfoForCreateInstanceTypeInput interface {
	pulumi.Input

	ToEnvironmentHostInfoForCreateInstanceTypeOutput() EnvironmentHostInfoForCreateInstanceTypeOutput
	ToEnvironmentHostInfoForCreateInstanceTypeOutputWithContext(context.Context) EnvironmentHostInfoForCreateInstanceTypeOutput
}

var environmentHostInfoForCreateInstanceTypePtrType = reflect.TypeOf((**EnvironmentHostInfoForCreateInstanceType)(nil)).Elem()

type EnvironmentHostInfoForCreateInstanceTypePtrInput interface {
	pulumi.Input

	ToEnvironmentHostInfoForCreateInstanceTypePtrOutput() EnvironmentHostInfoForCreateInstanceTypePtrOutput
	ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(context.Context) EnvironmentHostInfoForCreateInstanceTypePtrOutput
}

type environmentHostInfoForCreateInstanceTypePtr string

func EnvironmentHostInfoForCreateInstanceTypePtr(v string) EnvironmentHostInfoForCreateInstanceTypePtrInput {
	return (*environmentHostInfoForCreateInstanceTypePtr)(&v)
}

func (*environmentHostInfoForCreateInstanceTypePtr) ElementType() reflect.Type {
	return environmentHostInfoForCreateInstanceTypePtrType
}

func (in *environmentHostInfoForCreateInstanceTypePtr) ToEnvironmentHostInfoForCreateInstanceTypePtrOutput() EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentHostInfoForCreateInstanceTypePtrOutput)
}

func (in *environmentHostInfoForCreateInstanceTypePtr) ToEnvironmentHostInfoForCreateInstanceTypePtrOutputWithContext(ctx context.Context) EnvironmentHostInfoForCreateInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentHostInfoForCreateInstanceTypePtrOutput)
}

type EnvironmentStateEnum string

const (
	EnvironmentStateEnumCreating     = EnvironmentStateEnum("CREATING")
	EnvironmentStateEnumCreated      = EnvironmentStateEnum("CREATED")
	EnvironmentStateEnumDeleting     = EnvironmentStateEnum("DELETING")
	EnvironmentStateEnumDeleted      = EnvironmentStateEnum("DELETED")
	EnvironmentStateEnumCreateFailed = EnvironmentStateEnum("CREATE_FAILED")
)

type EnvironmentStateEnumOutput struct{ *pulumi.OutputState }

func (EnvironmentStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStateEnum)(nil)).Elem()
}

func (o EnvironmentStateEnumOutput) ToEnvironmentStateEnumOutput() EnvironmentStateEnumOutput {
	return o
}

func (o EnvironmentStateEnumOutput) ToEnvironmentStateEnumOutputWithContext(ctx context.Context) EnvironmentStateEnumOutput {
	return o
}

func (o EnvironmentStateEnumOutput) ToEnvironmentStateEnumPtrOutput() EnvironmentStateEnumPtrOutput {
	return o.ToEnvironmentStateEnumPtrOutputWithContext(context.Background())
}

func (o EnvironmentStateEnumOutput) ToEnvironmentStateEnumPtrOutputWithContext(ctx context.Context) EnvironmentStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStateEnum) *EnvironmentStateEnum {
		return &v
	}).(EnvironmentStateEnumPtrOutput)
}

func (o EnvironmentStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentStateEnumPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStateEnum)(nil)).Elem()
}

func (o EnvironmentStateEnumPtrOutput) ToEnvironmentStateEnumPtrOutput() EnvironmentStateEnumPtrOutput {
	return o
}

func (o EnvironmentStateEnumPtrOutput) ToEnvironmentStateEnumPtrOutputWithContext(ctx context.Context) EnvironmentStateEnumPtrOutput {
	return o
}

func (o EnvironmentStateEnumPtrOutput) Elem() EnvironmentStateEnumOutput {
	return o.ApplyT(func(v *EnvironmentStateEnum) EnvironmentStateEnum {
		if v != nil {
			return *v
		}
		var ret EnvironmentStateEnum
		return ret
	}).(EnvironmentStateEnumOutput)
}

func (o EnvironmentStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The VCF version of the environment.
type EnvironmentVcfVersion string

const (
	EnvironmentVcfVersionVcf521 = EnvironmentVcfVersion("VCF-5.2.1")
)

func (EnvironmentVcfVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVcfVersion)(nil)).Elem()
}

func (e EnvironmentVcfVersion) ToEnvironmentVcfVersionOutput() EnvironmentVcfVersionOutput {
	return pulumi.ToOutput(e).(EnvironmentVcfVersionOutput)
}

func (e EnvironmentVcfVersion) ToEnvironmentVcfVersionOutputWithContext(ctx context.Context) EnvironmentVcfVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentVcfVersionOutput)
}

func (e EnvironmentVcfVersion) ToEnvironmentVcfVersionPtrOutput() EnvironmentVcfVersionPtrOutput {
	return e.ToEnvironmentVcfVersionPtrOutputWithContext(context.Background())
}

func (e EnvironmentVcfVersion) ToEnvironmentVcfVersionPtrOutputWithContext(ctx context.Context) EnvironmentVcfVersionPtrOutput {
	return EnvironmentVcfVersion(e).ToEnvironmentVcfVersionOutputWithContext(ctx).ToEnvironmentVcfVersionPtrOutputWithContext(ctx)
}

func (e EnvironmentVcfVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentVcfVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentVcfVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentVcfVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentVcfVersionOutput struct{ *pulumi.OutputState }

func (EnvironmentVcfVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVcfVersion)(nil)).Elem()
}

func (o EnvironmentVcfVersionOutput) ToEnvironmentVcfVersionOutput() EnvironmentVcfVersionOutput {
	return o
}

func (o EnvironmentVcfVersionOutput) ToEnvironmentVcfVersionOutputWithContext(ctx context.Context) EnvironmentVcfVersionOutput {
	return o
}

func (o EnvironmentVcfVersionOutput) ToEnvironmentVcfVersionPtrOutput() EnvironmentVcfVersionPtrOutput {
	return o.ToEnvironmentVcfVersionPtrOutputWithContext(context.Background())
}

func (o EnvironmentVcfVersionOutput) ToEnvironmentVcfVersionPtrOutputWithContext(ctx context.Context) EnvironmentVcfVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentVcfVersion) *EnvironmentVcfVersion {
		return &v
	}).(EnvironmentVcfVersionPtrOutput)
}

func (o EnvironmentVcfVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentVcfVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentVcfVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentVcfVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentVcfVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentVcfVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentVcfVersionPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentVcfVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentVcfVersion)(nil)).Elem()
}

func (o EnvironmentVcfVersionPtrOutput) ToEnvironmentVcfVersionPtrOutput() EnvironmentVcfVersionPtrOutput {
	return o
}

func (o EnvironmentVcfVersionPtrOutput) ToEnvironmentVcfVersionPtrOutputWithContext(ctx context.Context) EnvironmentVcfVersionPtrOutput {
	return o
}

func (o EnvironmentVcfVersionPtrOutput) Elem() EnvironmentVcfVersionOutput {
	return o.ApplyT(func(v *EnvironmentVcfVersion) EnvironmentVcfVersion {
		if v != nil {
			return *v
		}
		var ret EnvironmentVcfVersion
		return ret
	}).(EnvironmentVcfVersionOutput)
}

func (o EnvironmentVcfVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentVcfVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentVcfVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentVcfVersionInput is an input type that accepts values of the EnvironmentVcfVersion enum
// A concrete instance of `EnvironmentVcfVersionInput` can be one of the following:
//
//	EnvironmentVcfVersionVcf521
type EnvironmentVcfVersionInput interface {
	pulumi.Input

	ToEnvironmentVcfVersionOutput() EnvironmentVcfVersionOutput
	ToEnvironmentVcfVersionOutputWithContext(context.Context) EnvironmentVcfVersionOutput
}

var environmentVcfVersionPtrType = reflect.TypeOf((**EnvironmentVcfVersion)(nil)).Elem()

type EnvironmentVcfVersionPtrInput interface {
	pulumi.Input

	ToEnvironmentVcfVersionPtrOutput() EnvironmentVcfVersionPtrOutput
	ToEnvironmentVcfVersionPtrOutputWithContext(context.Context) EnvironmentVcfVersionPtrOutput
}

type environmentVcfVersionPtr string

func EnvironmentVcfVersionPtr(v string) EnvironmentVcfVersionPtrInput {
	return (*environmentVcfVersionPtr)(&v)
}

func (*environmentVcfVersionPtr) ElementType() reflect.Type {
	return environmentVcfVersionPtrType
}

func (in *environmentVcfVersionPtr) ToEnvironmentVcfVersionPtrOutput() EnvironmentVcfVersionPtrOutput {
	return pulumi.ToOutput(in).(EnvironmentVcfVersionPtrOutput)
}

func (in *environmentVcfVersionPtr) ToEnvironmentVcfVersionPtrOutputWithContext(ctx context.Context) EnvironmentVcfVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentVcfVersionPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentHostInfoForCreateInstanceTypeInput)(nil)).Elem(), EnvironmentHostInfoForCreateInstanceType("i4i.metal"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentHostInfoForCreateInstanceTypePtrInput)(nil)).Elem(), EnvironmentHostInfoForCreateInstanceType("i4i.metal"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentVcfVersionInput)(nil)).Elem(), EnvironmentVcfVersion("VCF-5.2.1"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentVcfVersionPtrInput)(nil)).Elem(), EnvironmentVcfVersion("VCF-5.2.1"))
	pulumi.RegisterOutputType(EnvironmentCheckResultOutput{})
	pulumi.RegisterOutputType(EnvironmentCheckResultPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentCheckTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentCheckTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentHostInfoForCreateInstanceTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentHostInfoForCreateInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStateEnumOutput{})
	pulumi.RegisterOutputType(EnvironmentStateEnumPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentVcfVersionOutput{})
	pulumi.RegisterOutputType(EnvironmentVcfVersionPtrOutput{})
}
