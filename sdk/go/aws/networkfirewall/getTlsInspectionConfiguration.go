// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::NetworkFirewall::TLSInspectionConfiguration
func LookupTlsInspectionConfiguration(ctx *pulumi.Context, args *LookupTlsInspectionConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupTlsInspectionConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTlsInspectionConfigurationResult
	err := ctx.Invoke("aws-native:networkfirewall:getTlsInspectionConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTlsInspectionConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn string `pulumi:"tlsInspectionConfigurationArn"`
}

type LookupTlsInspectionConfigurationResult struct {
	// A description of the TLS inspection configuration.
	Description *string `pulumi:"description"`
	// A key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The object that defines a TLS inspection configuration. This defines the TLS inspection configuration.
	//
	// AWS Network Firewall uses a TLS inspection configuration to decrypt traffic. Network Firewall re-encrypts the traffic before sending it to its destination.
	//
	// To use a TLS inspection configuration, you add it to a new Network Firewall firewall policy, then you apply the firewall policy to a firewall. Network Firewall acts as a proxy service to decrypt and inspect the traffic traveling through your firewalls. You can reference a TLS inspection configuration from more than one firewall policy, and you can use a firewall policy in more than one firewall. For more information about using TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the *AWS Network Firewall Developer Guide* .
	TlsInspectionConfiguration *TlsInspectionConfigurationTlsInspectionConfiguration `pulumi:"tlsInspectionConfiguration"`
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn *string `pulumi:"tlsInspectionConfigurationArn"`
	// A unique identifier for the TLS inspection configuration. This ID is returned in the responses to create and list commands. You provide it to operations such as update and delete.
	TlsInspectionConfigurationId *string `pulumi:"tlsInspectionConfigurationId"`
}

func LookupTlsInspectionConfigurationOutput(ctx *pulumi.Context, args LookupTlsInspectionConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupTlsInspectionConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTlsInspectionConfigurationResult, error) {
			args := v.(LookupTlsInspectionConfigurationArgs)
			r, err := LookupTlsInspectionConfiguration(ctx, &args, opts...)
			var s LookupTlsInspectionConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTlsInspectionConfigurationResultOutput)
}

type LookupTlsInspectionConfigurationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn pulumi.StringInput `pulumi:"tlsInspectionConfigurationArn"`
}

func (LookupTlsInspectionConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsInspectionConfigurationArgs)(nil)).Elem()
}

type LookupTlsInspectionConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupTlsInspectionConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsInspectionConfigurationResult)(nil)).Elem()
}

func (o LookupTlsInspectionConfigurationResultOutput) ToLookupTlsInspectionConfigurationResultOutput() LookupTlsInspectionConfigurationResultOutput {
	return o
}

func (o LookupTlsInspectionConfigurationResultOutput) ToLookupTlsInspectionConfigurationResultOutputWithContext(ctx context.Context) LookupTlsInspectionConfigurationResultOutput {
	return o
}

// A description of the TLS inspection configuration.
func (o LookupTlsInspectionConfigurationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A key:value pair associated with an AWS resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as "environment") and the tag value represents a specific value within that category (such as "test," "development," or "production"). You can add up to 50 tags to each AWS resource.
func (o LookupTlsInspectionConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The object that defines a TLS inspection configuration. This defines the TLS inspection configuration.
//
// AWS Network Firewall uses a TLS inspection configuration to decrypt traffic. Network Firewall re-encrypts the traffic before sending it to its destination.
//
// To use a TLS inspection configuration, you add it to a new Network Firewall firewall policy, then you apply the firewall policy to a firewall. Network Firewall acts as a proxy service to decrypt and inspect the traffic traveling through your firewalls. You can reference a TLS inspection configuration from more than one firewall policy, and you can use a firewall policy in more than one firewall. For more information about using TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the *AWS Network Firewall Developer Guide* .
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfiguration() TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *TlsInspectionConfigurationTlsInspectionConfiguration {
		return v.TlsInspectionConfiguration
	}).(TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the TLS inspection configuration.
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.TlsInspectionConfigurationArn }).(pulumi.StringPtrOutput)
}

// A unique identifier for the TLS inspection configuration. This ID is returned in the responses to create and list commands. You provide it to operations such as update and delete.
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.TlsInspectionConfigurationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTlsInspectionConfigurationResultOutput{})
}
