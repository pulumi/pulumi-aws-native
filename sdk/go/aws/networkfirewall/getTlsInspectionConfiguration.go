// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::NetworkFirewall::TLSInspectionConfiguration
func LookupTlsInspectionConfiguration(ctx *pulumi.Context, args *LookupTlsInspectionConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupTlsInspectionConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTlsInspectionConfigurationResult
	err := ctx.Invoke("aws-native:networkfirewall:getTlsInspectionConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTlsInspectionConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn string `pulumi:"tlsInspectionConfigurationArn"`
}

type LookupTlsInspectionConfigurationResult struct {
	// A description of the TLS inspection configuration.
	Description *string `pulumi:"description"`
	// The key:value pairs to associate with the resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The object that defines a TLS inspection configuration. AWS Network Firewall uses TLS inspection configurations to decrypt your firewall's inbound and outbound SSL/TLS traffic. After decryption, AWS Network Firewall inspects the traffic according to your firewall policy's stateful rules, and then re-encrypts it before sending it to its destination. You can enable inspection of your firewall's inbound traffic, outbound traffic, or both. To use TLS inspection with your firewall, you must first import or provision certificates using AWS Certificate Manager , create a TLS inspection configuration, add that configuration to a new firewall policy, and then associate that policy with your firewall. For more information about using TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the *AWS Network Firewall Developer Guide* .
	TlsInspectionConfiguration *TlsInspectionConfigurationTlsInspectionConfiguration `pulumi:"tlsInspectionConfiguration"`
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn *string `pulumi:"tlsInspectionConfigurationArn"`
	// A unique identifier for the TLS inspection configuration. This ID is returned in the responses to create and list commands. You provide it to operations such as update and delete.
	TlsInspectionConfigurationId *string `pulumi:"tlsInspectionConfigurationId"`
}

func LookupTlsInspectionConfigurationOutput(ctx *pulumi.Context, args LookupTlsInspectionConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupTlsInspectionConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTlsInspectionConfigurationResultOutput, error) {
			args := v.(LookupTlsInspectionConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:networkfirewall:getTlsInspectionConfiguration", args, LookupTlsInspectionConfigurationResultOutput{}, options).(LookupTlsInspectionConfigurationResultOutput), nil
		}).(LookupTlsInspectionConfigurationResultOutput)
}

type LookupTlsInspectionConfigurationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the TLS inspection configuration.
	TlsInspectionConfigurationArn pulumi.StringInput `pulumi:"tlsInspectionConfigurationArn"`
}

func (LookupTlsInspectionConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsInspectionConfigurationArgs)(nil)).Elem()
}

type LookupTlsInspectionConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupTlsInspectionConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTlsInspectionConfigurationResult)(nil)).Elem()
}

func (o LookupTlsInspectionConfigurationResultOutput) ToLookupTlsInspectionConfigurationResultOutput() LookupTlsInspectionConfigurationResultOutput {
	return o
}

func (o LookupTlsInspectionConfigurationResultOutput) ToLookupTlsInspectionConfigurationResultOutputWithContext(ctx context.Context) LookupTlsInspectionConfigurationResultOutput {
	return o
}

// A description of the TLS inspection configuration.
func (o LookupTlsInspectionConfigurationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The key:value pairs to associate with the resource.
func (o LookupTlsInspectionConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The object that defines a TLS inspection configuration. AWS Network Firewall uses TLS inspection configurations to decrypt your firewall's inbound and outbound SSL/TLS traffic. After decryption, AWS Network Firewall inspects the traffic according to your firewall policy's stateful rules, and then re-encrypts it before sending it to its destination. You can enable inspection of your firewall's inbound traffic, outbound traffic, or both. To use TLS inspection with your firewall, you must first import or provision certificates using AWS Certificate Manager , create a TLS inspection configuration, add that configuration to a new firewall policy, and then associate that policy with your firewall. For more information about using TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the *AWS Network Firewall Developer Guide* .
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfiguration() TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *TlsInspectionConfigurationTlsInspectionConfiguration {
		return v.TlsInspectionConfiguration
	}).(TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the TLS inspection configuration.
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.TlsInspectionConfigurationArn }).(pulumi.StringPtrOutput)
}

// A unique identifier for the TLS inspection configuration. This ID is returned in the responses to create and list commands. You provide it to operations such as update and delete.
func (o LookupTlsInspectionConfigurationResultOutput) TlsInspectionConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTlsInspectionConfigurationResult) *string { return v.TlsInspectionConfigurationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTlsInspectionConfigurationResultOutput{})
}
