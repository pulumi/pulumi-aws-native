// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallPolicyActionDefinition struct {
	PublishMetricAction *FirewallPolicyPublishMetricAction `pulumi:"publishMetricAction"`
}

// FirewallPolicyActionDefinitionInput is an input type that accepts FirewallPolicyActionDefinitionArgs and FirewallPolicyActionDefinitionOutput values.
// You can construct a concrete instance of `FirewallPolicyActionDefinitionInput` via:
//
//          FirewallPolicyActionDefinitionArgs{...}
type FirewallPolicyActionDefinitionInput interface {
	pulumi.Input

	ToFirewallPolicyActionDefinitionOutput() FirewallPolicyActionDefinitionOutput
	ToFirewallPolicyActionDefinitionOutputWithContext(context.Context) FirewallPolicyActionDefinitionOutput
}

type FirewallPolicyActionDefinitionArgs struct {
	PublishMetricAction FirewallPolicyPublishMetricActionPtrInput `pulumi:"publishMetricAction"`
}

func (FirewallPolicyActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyActionDefinition)(nil)).Elem()
}

func (i FirewallPolicyActionDefinitionArgs) ToFirewallPolicyActionDefinitionOutput() FirewallPolicyActionDefinitionOutput {
	return i.ToFirewallPolicyActionDefinitionOutputWithContext(context.Background())
}

func (i FirewallPolicyActionDefinitionArgs) ToFirewallPolicyActionDefinitionOutputWithContext(ctx context.Context) FirewallPolicyActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyActionDefinitionOutput)
}

type FirewallPolicyActionDefinitionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyActionDefinition)(nil)).Elem()
}

func (o FirewallPolicyActionDefinitionOutput) ToFirewallPolicyActionDefinitionOutput() FirewallPolicyActionDefinitionOutput {
	return o
}

func (o FirewallPolicyActionDefinitionOutput) ToFirewallPolicyActionDefinitionOutputWithContext(ctx context.Context) FirewallPolicyActionDefinitionOutput {
	return o
}

func (o FirewallPolicyActionDefinitionOutput) PublishMetricAction() FirewallPolicyPublishMetricActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyActionDefinition) *FirewallPolicyPublishMetricAction {
		return v.PublishMetricAction
	}).(FirewallPolicyPublishMetricActionPtrOutput)
}

type FirewallPolicyCustomAction struct {
	ActionDefinition FirewallPolicyActionDefinition `pulumi:"actionDefinition"`
	ActionName       string                         `pulumi:"actionName"`
}

// FirewallPolicyCustomActionInput is an input type that accepts FirewallPolicyCustomActionArgs and FirewallPolicyCustomActionOutput values.
// You can construct a concrete instance of `FirewallPolicyCustomActionInput` via:
//
//          FirewallPolicyCustomActionArgs{...}
type FirewallPolicyCustomActionInput interface {
	pulumi.Input

	ToFirewallPolicyCustomActionOutput() FirewallPolicyCustomActionOutput
	ToFirewallPolicyCustomActionOutputWithContext(context.Context) FirewallPolicyCustomActionOutput
}

type FirewallPolicyCustomActionArgs struct {
	ActionDefinition FirewallPolicyActionDefinitionInput `pulumi:"actionDefinition"`
	ActionName       pulumi.StringInput                  `pulumi:"actionName"`
}

func (FirewallPolicyCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCustomAction)(nil)).Elem()
}

func (i FirewallPolicyCustomActionArgs) ToFirewallPolicyCustomActionOutput() FirewallPolicyCustomActionOutput {
	return i.ToFirewallPolicyCustomActionOutputWithContext(context.Background())
}

func (i FirewallPolicyCustomActionArgs) ToFirewallPolicyCustomActionOutputWithContext(ctx context.Context) FirewallPolicyCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCustomActionOutput)
}

// FirewallPolicyCustomActionArrayInput is an input type that accepts FirewallPolicyCustomActionArray and FirewallPolicyCustomActionArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyCustomActionArrayInput` via:
//
//          FirewallPolicyCustomActionArray{ FirewallPolicyCustomActionArgs{...} }
type FirewallPolicyCustomActionArrayInput interface {
	pulumi.Input

	ToFirewallPolicyCustomActionArrayOutput() FirewallPolicyCustomActionArrayOutput
	ToFirewallPolicyCustomActionArrayOutputWithContext(context.Context) FirewallPolicyCustomActionArrayOutput
}

type FirewallPolicyCustomActionArray []FirewallPolicyCustomActionInput

func (FirewallPolicyCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyCustomAction)(nil)).Elem()
}

func (i FirewallPolicyCustomActionArray) ToFirewallPolicyCustomActionArrayOutput() FirewallPolicyCustomActionArrayOutput {
	return i.ToFirewallPolicyCustomActionArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyCustomActionArray) ToFirewallPolicyCustomActionArrayOutputWithContext(ctx context.Context) FirewallPolicyCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCustomActionArrayOutput)
}

type FirewallPolicyCustomActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCustomAction)(nil)).Elem()
}

func (o FirewallPolicyCustomActionOutput) ToFirewallPolicyCustomActionOutput() FirewallPolicyCustomActionOutput {
	return o
}

func (o FirewallPolicyCustomActionOutput) ToFirewallPolicyCustomActionOutputWithContext(ctx context.Context) FirewallPolicyCustomActionOutput {
	return o
}

func (o FirewallPolicyCustomActionOutput) ActionDefinition() FirewallPolicyActionDefinitionOutput {
	return o.ApplyT(func(v FirewallPolicyCustomAction) FirewallPolicyActionDefinition { return v.ActionDefinition }).(FirewallPolicyActionDefinitionOutput)
}

func (o FirewallPolicyCustomActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyCustomAction) string { return v.ActionName }).(pulumi.StringOutput)
}

type FirewallPolicyCustomActionArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyCustomAction)(nil)).Elem()
}

func (o FirewallPolicyCustomActionArrayOutput) ToFirewallPolicyCustomActionArrayOutput() FirewallPolicyCustomActionArrayOutput {
	return o
}

func (o FirewallPolicyCustomActionArrayOutput) ToFirewallPolicyCustomActionArrayOutputWithContext(ctx context.Context) FirewallPolicyCustomActionArrayOutput {
	return o
}

func (o FirewallPolicyCustomActionArrayOutput) Index(i pulumi.IntInput) FirewallPolicyCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyCustomAction {
		return vs[0].([]FirewallPolicyCustomAction)[vs[1].(int)]
	}).(FirewallPolicyCustomActionOutput)
}

type FirewallPolicyDimension struct {
	Value string `pulumi:"value"`
}

// FirewallPolicyDimensionInput is an input type that accepts FirewallPolicyDimensionArgs and FirewallPolicyDimensionOutput values.
// You can construct a concrete instance of `FirewallPolicyDimensionInput` via:
//
//          FirewallPolicyDimensionArgs{...}
type FirewallPolicyDimensionInput interface {
	pulumi.Input

	ToFirewallPolicyDimensionOutput() FirewallPolicyDimensionOutput
	ToFirewallPolicyDimensionOutputWithContext(context.Context) FirewallPolicyDimensionOutput
}

type FirewallPolicyDimensionArgs struct {
	Value pulumi.StringInput `pulumi:"value"`
}

func (FirewallPolicyDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDimension)(nil)).Elem()
}

func (i FirewallPolicyDimensionArgs) ToFirewallPolicyDimensionOutput() FirewallPolicyDimensionOutput {
	return i.ToFirewallPolicyDimensionOutputWithContext(context.Background())
}

func (i FirewallPolicyDimensionArgs) ToFirewallPolicyDimensionOutputWithContext(ctx context.Context) FirewallPolicyDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDimensionOutput)
}

// FirewallPolicyDimensionArrayInput is an input type that accepts FirewallPolicyDimensionArray and FirewallPolicyDimensionArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyDimensionArrayInput` via:
//
//          FirewallPolicyDimensionArray{ FirewallPolicyDimensionArgs{...} }
type FirewallPolicyDimensionArrayInput interface {
	pulumi.Input

	ToFirewallPolicyDimensionArrayOutput() FirewallPolicyDimensionArrayOutput
	ToFirewallPolicyDimensionArrayOutputWithContext(context.Context) FirewallPolicyDimensionArrayOutput
}

type FirewallPolicyDimensionArray []FirewallPolicyDimensionInput

func (FirewallPolicyDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDimension)(nil)).Elem()
}

func (i FirewallPolicyDimensionArray) ToFirewallPolicyDimensionArrayOutput() FirewallPolicyDimensionArrayOutput {
	return i.ToFirewallPolicyDimensionArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyDimensionArray) ToFirewallPolicyDimensionArrayOutputWithContext(ctx context.Context) FirewallPolicyDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDimensionArrayOutput)
}

type FirewallPolicyDimensionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDimension)(nil)).Elem()
}

func (o FirewallPolicyDimensionOutput) ToFirewallPolicyDimensionOutput() FirewallPolicyDimensionOutput {
	return o
}

func (o FirewallPolicyDimensionOutput) ToFirewallPolicyDimensionOutputWithContext(ctx context.Context) FirewallPolicyDimensionOutput {
	return o
}

func (o FirewallPolicyDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyDimension) string { return v.Value }).(pulumi.StringOutput)
}

type FirewallPolicyDimensionArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyDimension)(nil)).Elem()
}

func (o FirewallPolicyDimensionArrayOutput) ToFirewallPolicyDimensionArrayOutput() FirewallPolicyDimensionArrayOutput {
	return o
}

func (o FirewallPolicyDimensionArrayOutput) ToFirewallPolicyDimensionArrayOutputWithContext(ctx context.Context) FirewallPolicyDimensionArrayOutput {
	return o
}

func (o FirewallPolicyDimensionArrayOutput) Index(i pulumi.IntInput) FirewallPolicyDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyDimension {
		return vs[0].([]FirewallPolicyDimension)[vs[1].(int)]
	}).(FirewallPolicyDimensionOutput)
}

type FirewallPolicyFirewallPolicy struct {
	StatefulRuleGroupReferences     []FirewallPolicyStatefulRuleGroupReference  `pulumi:"statefulRuleGroupReferences"`
	StatelessCustomActions          []FirewallPolicyCustomAction                `pulumi:"statelessCustomActions"`
	StatelessDefaultActions         []string                                    `pulumi:"statelessDefaultActions"`
	StatelessFragmentDefaultActions []string                                    `pulumi:"statelessFragmentDefaultActions"`
	StatelessRuleGroupReferences    []FirewallPolicyStatelessRuleGroupReference `pulumi:"statelessRuleGroupReferences"`
}

// FirewallPolicyFirewallPolicyInput is an input type that accepts FirewallPolicyFirewallPolicyArgs and FirewallPolicyFirewallPolicyOutput values.
// You can construct a concrete instance of `FirewallPolicyFirewallPolicyInput` via:
//
//          FirewallPolicyFirewallPolicyArgs{...}
type FirewallPolicyFirewallPolicyInput interface {
	pulumi.Input

	ToFirewallPolicyFirewallPolicyOutput() FirewallPolicyFirewallPolicyOutput
	ToFirewallPolicyFirewallPolicyOutputWithContext(context.Context) FirewallPolicyFirewallPolicyOutput
}

type FirewallPolicyFirewallPolicyArgs struct {
	StatefulRuleGroupReferences     FirewallPolicyStatefulRuleGroupReferenceArrayInput  `pulumi:"statefulRuleGroupReferences"`
	StatelessCustomActions          FirewallPolicyCustomActionArrayInput                `pulumi:"statelessCustomActions"`
	StatelessDefaultActions         pulumi.StringArrayInput                             `pulumi:"statelessDefaultActions"`
	StatelessFragmentDefaultActions pulumi.StringArrayInput                             `pulumi:"statelessFragmentDefaultActions"`
	StatelessRuleGroupReferences    FirewallPolicyStatelessRuleGroupReferenceArrayInput `pulumi:"statelessRuleGroupReferences"`
}

func (FirewallPolicyFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyOutput() FirewallPolicyFirewallPolicyOutput {
	return i.ToFirewallPolicyFirewallPolicyOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyOutput)
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyPtrOutput() FirewallPolicyFirewallPolicyPtrOutput {
	return i.ToFirewallPolicyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyOutput).ToFirewallPolicyFirewallPolicyPtrOutputWithContext(ctx)
}

// FirewallPolicyFirewallPolicyPtrInput is an input type that accepts FirewallPolicyFirewallPolicyArgs, FirewallPolicyFirewallPolicyPtr and FirewallPolicyFirewallPolicyPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFirewallPolicyPtrInput` via:
//
//          FirewallPolicyFirewallPolicyArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyFirewallPolicyPtrInput interface {
	pulumi.Input

	ToFirewallPolicyFirewallPolicyPtrOutput() FirewallPolicyFirewallPolicyPtrOutput
	ToFirewallPolicyFirewallPolicyPtrOutputWithContext(context.Context) FirewallPolicyFirewallPolicyPtrOutput
}

type firewallPolicyFirewallPolicyPtrType FirewallPolicyFirewallPolicyArgs

func FirewallPolicyFirewallPolicyPtr(v *FirewallPolicyFirewallPolicyArgs) FirewallPolicyFirewallPolicyPtrInput {
	return (*firewallPolicyFirewallPolicyPtrType)(v)
}

func (*firewallPolicyFirewallPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (i *firewallPolicyFirewallPolicyPtrType) ToFirewallPolicyFirewallPolicyPtrOutput() FirewallPolicyFirewallPolicyPtrOutput {
	return i.ToFirewallPolicyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFirewallPolicyPtrType) ToFirewallPolicyFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyPtrOutput)
}

type FirewallPolicyFirewallPolicyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyOutput() FirewallPolicyFirewallPolicyOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyPtrOutput() FirewallPolicyFirewallPolicyPtrOutput {
	return o.ToFirewallPolicyFirewallPolicyPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyFirewallPolicy) *FirewallPolicyFirewallPolicy {
		return &v
	}).(FirewallPolicyFirewallPolicyPtrOutput)
}

func (o FirewallPolicyFirewallPolicyOutput) StatefulRuleGroupReferences() FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFirewallPolicy) []FirewallPolicyStatefulRuleGroupReference {
		return v.StatefulRuleGroupReferences
	}).(FirewallPolicyStatefulRuleGroupReferenceArrayOutput)
}

func (o FirewallPolicyFirewallPolicyOutput) StatelessCustomActions() FirewallPolicyCustomActionArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFirewallPolicy) []FirewallPolicyCustomAction { return v.StatelessCustomActions }).(FirewallPolicyCustomActionArrayOutput)
}

func (o FirewallPolicyFirewallPolicyOutput) StatelessDefaultActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFirewallPolicy) []string { return v.StatelessDefaultActions }).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyFirewallPolicyOutput) StatelessFragmentDefaultActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFirewallPolicy) []string { return v.StatelessFragmentDefaultActions }).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyFirewallPolicyOutput) StatelessRuleGroupReferences() FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFirewallPolicy) []FirewallPolicyStatelessRuleGroupReference {
		return v.StatelessRuleGroupReferences
	}).(FirewallPolicyStatelessRuleGroupReferenceArrayOutput)
}

type FirewallPolicyFirewallPolicyPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyPtrOutput) ToFirewallPolicyFirewallPolicyPtrOutput() FirewallPolicyFirewallPolicyPtrOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPtrOutput) ToFirewallPolicyFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPtrOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPtrOutput) Elem() FirewallPolicyFirewallPolicyOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) FirewallPolicyFirewallPolicy {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyFirewallPolicy
		return ret
	}).(FirewallPolicyFirewallPolicyOutput)
}

func (o FirewallPolicyFirewallPolicyPtrOutput) StatefulRuleGroupReferences() FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) []FirewallPolicyStatefulRuleGroupReference {
		if v == nil {
			return nil
		}
		return v.StatefulRuleGroupReferences
	}).(FirewallPolicyStatefulRuleGroupReferenceArrayOutput)
}

func (o FirewallPolicyFirewallPolicyPtrOutput) StatelessCustomActions() FirewallPolicyCustomActionArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) []FirewallPolicyCustomAction {
		if v == nil {
			return nil
		}
		return v.StatelessCustomActions
	}).(FirewallPolicyCustomActionArrayOutput)
}

func (o FirewallPolicyFirewallPolicyPtrOutput) StatelessDefaultActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) []string {
		if v == nil {
			return nil
		}
		return v.StatelessDefaultActions
	}).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyFirewallPolicyPtrOutput) StatelessFragmentDefaultActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) []string {
		if v == nil {
			return nil
		}
		return v.StatelessFragmentDefaultActions
	}).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyFirewallPolicyPtrOutput) StatelessRuleGroupReferences() FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyFirewallPolicy) []FirewallPolicyStatelessRuleGroupReference {
		if v == nil {
			return nil
		}
		return v.StatelessRuleGroupReferences
	}).(FirewallPolicyStatelessRuleGroupReferenceArrayOutput)
}

type FirewallPolicyPublishMetricAction struct {
	Dimensions []FirewallPolicyDimension `pulumi:"dimensions"`
}

// FirewallPolicyPublishMetricActionInput is an input type that accepts FirewallPolicyPublishMetricActionArgs and FirewallPolicyPublishMetricActionOutput values.
// You can construct a concrete instance of `FirewallPolicyPublishMetricActionInput` via:
//
//          FirewallPolicyPublishMetricActionArgs{...}
type FirewallPolicyPublishMetricActionInput interface {
	pulumi.Input

	ToFirewallPolicyPublishMetricActionOutput() FirewallPolicyPublishMetricActionOutput
	ToFirewallPolicyPublishMetricActionOutputWithContext(context.Context) FirewallPolicyPublishMetricActionOutput
}

type FirewallPolicyPublishMetricActionArgs struct {
	Dimensions FirewallPolicyDimensionArrayInput `pulumi:"dimensions"`
}

func (FirewallPolicyPublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPublishMetricAction)(nil)).Elem()
}

func (i FirewallPolicyPublishMetricActionArgs) ToFirewallPolicyPublishMetricActionOutput() FirewallPolicyPublishMetricActionOutput {
	return i.ToFirewallPolicyPublishMetricActionOutputWithContext(context.Background())
}

func (i FirewallPolicyPublishMetricActionArgs) ToFirewallPolicyPublishMetricActionOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPublishMetricActionOutput)
}

func (i FirewallPolicyPublishMetricActionArgs) ToFirewallPolicyPublishMetricActionPtrOutput() FirewallPolicyPublishMetricActionPtrOutput {
	return i.ToFirewallPolicyPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyPublishMetricActionArgs) ToFirewallPolicyPublishMetricActionPtrOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPublishMetricActionOutput).ToFirewallPolicyPublishMetricActionPtrOutputWithContext(ctx)
}

// FirewallPolicyPublishMetricActionPtrInput is an input type that accepts FirewallPolicyPublishMetricActionArgs, FirewallPolicyPublishMetricActionPtr and FirewallPolicyPublishMetricActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyPublishMetricActionPtrInput` via:
//
//          FirewallPolicyPublishMetricActionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyPublishMetricActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyPublishMetricActionPtrOutput() FirewallPolicyPublishMetricActionPtrOutput
	ToFirewallPolicyPublishMetricActionPtrOutputWithContext(context.Context) FirewallPolicyPublishMetricActionPtrOutput
}

type firewallPolicyPublishMetricActionPtrType FirewallPolicyPublishMetricActionArgs

func FirewallPolicyPublishMetricActionPtr(v *FirewallPolicyPublishMetricActionArgs) FirewallPolicyPublishMetricActionPtrInput {
	return (*firewallPolicyPublishMetricActionPtrType)(v)
}

func (*firewallPolicyPublishMetricActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyPublishMetricAction)(nil)).Elem()
}

func (i *firewallPolicyPublishMetricActionPtrType) ToFirewallPolicyPublishMetricActionPtrOutput() FirewallPolicyPublishMetricActionPtrOutput {
	return i.ToFirewallPolicyPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyPublishMetricActionPtrType) ToFirewallPolicyPublishMetricActionPtrOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPublishMetricActionPtrOutput)
}

type FirewallPolicyPublishMetricActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyPublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyPublishMetricAction)(nil)).Elem()
}

func (o FirewallPolicyPublishMetricActionOutput) ToFirewallPolicyPublishMetricActionOutput() FirewallPolicyPublishMetricActionOutput {
	return o
}

func (o FirewallPolicyPublishMetricActionOutput) ToFirewallPolicyPublishMetricActionOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionOutput {
	return o
}

func (o FirewallPolicyPublishMetricActionOutput) ToFirewallPolicyPublishMetricActionPtrOutput() FirewallPolicyPublishMetricActionPtrOutput {
	return o.ToFirewallPolicyPublishMetricActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyPublishMetricActionOutput) ToFirewallPolicyPublishMetricActionPtrOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyPublishMetricAction) *FirewallPolicyPublishMetricAction {
		return &v
	}).(FirewallPolicyPublishMetricActionPtrOutput)
}

func (o FirewallPolicyPublishMetricActionOutput) Dimensions() FirewallPolicyDimensionArrayOutput {
	return o.ApplyT(func(v FirewallPolicyPublishMetricAction) []FirewallPolicyDimension { return v.Dimensions }).(FirewallPolicyDimensionArrayOutput)
}

type FirewallPolicyPublishMetricActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyPublishMetricActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyPublishMetricAction)(nil)).Elem()
}

func (o FirewallPolicyPublishMetricActionPtrOutput) ToFirewallPolicyPublishMetricActionPtrOutput() FirewallPolicyPublishMetricActionPtrOutput {
	return o
}

func (o FirewallPolicyPublishMetricActionPtrOutput) ToFirewallPolicyPublishMetricActionPtrOutputWithContext(ctx context.Context) FirewallPolicyPublishMetricActionPtrOutput {
	return o
}

func (o FirewallPolicyPublishMetricActionPtrOutput) Elem() FirewallPolicyPublishMetricActionOutput {
	return o.ApplyT(func(v *FirewallPolicyPublishMetricAction) FirewallPolicyPublishMetricAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyPublishMetricAction
		return ret
	}).(FirewallPolicyPublishMetricActionOutput)
}

func (o FirewallPolicyPublishMetricActionPtrOutput) Dimensions() FirewallPolicyDimensionArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyPublishMetricAction) []FirewallPolicyDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(FirewallPolicyDimensionArrayOutput)
}

type FirewallPolicyStatefulRuleGroupReference struct {
	ResourceArn string `pulumi:"resourceArn"`
}

// FirewallPolicyStatefulRuleGroupReferenceInput is an input type that accepts FirewallPolicyStatefulRuleGroupReferenceArgs and FirewallPolicyStatefulRuleGroupReferenceOutput values.
// You can construct a concrete instance of `FirewallPolicyStatefulRuleGroupReferenceInput` via:
//
//          FirewallPolicyStatefulRuleGroupReferenceArgs{...}
type FirewallPolicyStatefulRuleGroupReferenceInput interface {
	pulumi.Input

	ToFirewallPolicyStatefulRuleGroupReferenceOutput() FirewallPolicyStatefulRuleGroupReferenceOutput
	ToFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(context.Context) FirewallPolicyStatefulRuleGroupReferenceOutput
}

type FirewallPolicyStatefulRuleGroupReferenceArgs struct {
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
}

func (FirewallPolicyStatefulRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyStatefulRuleGroupReferenceArgs) ToFirewallPolicyStatefulRuleGroupReferenceOutput() FirewallPolicyStatefulRuleGroupReferenceOutput {
	return i.ToFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(context.Background())
}

func (i FirewallPolicyStatefulRuleGroupReferenceArgs) ToFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyStatefulRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyStatefulRuleGroupReferenceOutput)
}

// FirewallPolicyStatefulRuleGroupReferenceArrayInput is an input type that accepts FirewallPolicyStatefulRuleGroupReferenceArray and FirewallPolicyStatefulRuleGroupReferenceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyStatefulRuleGroupReferenceArrayInput` via:
//
//          FirewallPolicyStatefulRuleGroupReferenceArray{ FirewallPolicyStatefulRuleGroupReferenceArgs{...} }
type FirewallPolicyStatefulRuleGroupReferenceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyStatefulRuleGroupReferenceArrayOutput() FirewallPolicyStatefulRuleGroupReferenceArrayOutput
	ToFirewallPolicyStatefulRuleGroupReferenceArrayOutputWithContext(context.Context) FirewallPolicyStatefulRuleGroupReferenceArrayOutput
}

type FirewallPolicyStatefulRuleGroupReferenceArray []FirewallPolicyStatefulRuleGroupReferenceInput

func (FirewallPolicyStatefulRuleGroupReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyStatefulRuleGroupReferenceArray) ToFirewallPolicyStatefulRuleGroupReferenceArrayOutput() FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return i.ToFirewallPolicyStatefulRuleGroupReferenceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyStatefulRuleGroupReferenceArray) ToFirewallPolicyStatefulRuleGroupReferenceArrayOutputWithContext(ctx context.Context) FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyStatefulRuleGroupReferenceArrayOutput)
}

type FirewallPolicyStatefulRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStatefulRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyStatefulRuleGroupReferenceOutput) ToFirewallPolicyStatefulRuleGroupReferenceOutput() FirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyStatefulRuleGroupReferenceOutput) ToFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyStatefulRuleGroupReferenceOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyStatefulRuleGroupReference) string { return v.ResourceArn }).(pulumi.StringOutput)
}

type FirewallPolicyStatefulRuleGroupReferenceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStatefulRuleGroupReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyStatefulRuleGroupReferenceArrayOutput) ToFirewallPolicyStatefulRuleGroupReferenceArrayOutput() FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return o
}

func (o FirewallPolicyStatefulRuleGroupReferenceArrayOutput) ToFirewallPolicyStatefulRuleGroupReferenceArrayOutputWithContext(ctx context.Context) FirewallPolicyStatefulRuleGroupReferenceArrayOutput {
	return o
}

func (o FirewallPolicyStatefulRuleGroupReferenceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyStatefulRuleGroupReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyStatefulRuleGroupReference {
		return vs[0].([]FirewallPolicyStatefulRuleGroupReference)[vs[1].(int)]
	}).(FirewallPolicyStatefulRuleGroupReferenceOutput)
}

type FirewallPolicyStatelessRuleGroupReference struct {
	Priority    int    `pulumi:"priority"`
	ResourceArn string `pulumi:"resourceArn"`
}

// FirewallPolicyStatelessRuleGroupReferenceInput is an input type that accepts FirewallPolicyStatelessRuleGroupReferenceArgs and FirewallPolicyStatelessRuleGroupReferenceOutput values.
// You can construct a concrete instance of `FirewallPolicyStatelessRuleGroupReferenceInput` via:
//
//          FirewallPolicyStatelessRuleGroupReferenceArgs{...}
type FirewallPolicyStatelessRuleGroupReferenceInput interface {
	pulumi.Input

	ToFirewallPolicyStatelessRuleGroupReferenceOutput() FirewallPolicyStatelessRuleGroupReferenceOutput
	ToFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(context.Context) FirewallPolicyStatelessRuleGroupReferenceOutput
}

type FirewallPolicyStatelessRuleGroupReferenceArgs struct {
	Priority    pulumi.IntInput    `pulumi:"priority"`
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
}

func (FirewallPolicyStatelessRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyStatelessRuleGroupReferenceArgs) ToFirewallPolicyStatelessRuleGroupReferenceOutput() FirewallPolicyStatelessRuleGroupReferenceOutput {
	return i.ToFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(context.Background())
}

func (i FirewallPolicyStatelessRuleGroupReferenceArgs) ToFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyStatelessRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyStatelessRuleGroupReferenceOutput)
}

// FirewallPolicyStatelessRuleGroupReferenceArrayInput is an input type that accepts FirewallPolicyStatelessRuleGroupReferenceArray and FirewallPolicyStatelessRuleGroupReferenceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyStatelessRuleGroupReferenceArrayInput` via:
//
//          FirewallPolicyStatelessRuleGroupReferenceArray{ FirewallPolicyStatelessRuleGroupReferenceArgs{...} }
type FirewallPolicyStatelessRuleGroupReferenceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyStatelessRuleGroupReferenceArrayOutput() FirewallPolicyStatelessRuleGroupReferenceArrayOutput
	ToFirewallPolicyStatelessRuleGroupReferenceArrayOutputWithContext(context.Context) FirewallPolicyStatelessRuleGroupReferenceArrayOutput
}

type FirewallPolicyStatelessRuleGroupReferenceArray []FirewallPolicyStatelessRuleGroupReferenceInput

func (FirewallPolicyStatelessRuleGroupReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyStatelessRuleGroupReferenceArray) ToFirewallPolicyStatelessRuleGroupReferenceArrayOutput() FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return i.ToFirewallPolicyStatelessRuleGroupReferenceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyStatelessRuleGroupReferenceArray) ToFirewallPolicyStatelessRuleGroupReferenceArrayOutputWithContext(ctx context.Context) FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyStatelessRuleGroupReferenceArrayOutput)
}

type FirewallPolicyStatelessRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStatelessRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyStatelessRuleGroupReferenceOutput) ToFirewallPolicyStatelessRuleGroupReferenceOutput() FirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyStatelessRuleGroupReferenceOutput) ToFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyStatelessRuleGroupReferenceOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyStatelessRuleGroupReference) int { return v.Priority }).(pulumi.IntOutput)
}

func (o FirewallPolicyStatelessRuleGroupReferenceOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyStatelessRuleGroupReference) string { return v.ResourceArn }).(pulumi.StringOutput)
}

type FirewallPolicyStatelessRuleGroupReferenceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStatelessRuleGroupReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyStatelessRuleGroupReferenceArrayOutput) ToFirewallPolicyStatelessRuleGroupReferenceArrayOutput() FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return o
}

func (o FirewallPolicyStatelessRuleGroupReferenceArrayOutput) ToFirewallPolicyStatelessRuleGroupReferenceArrayOutputWithContext(ctx context.Context) FirewallPolicyStatelessRuleGroupReferenceArrayOutput {
	return o
}

func (o FirewallPolicyStatelessRuleGroupReferenceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyStatelessRuleGroupReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyStatelessRuleGroupReference {
		return vs[0].([]FirewallPolicyStatelessRuleGroupReference)[vs[1].(int)]
	}).(FirewallPolicyStatelessRuleGroupReferenceOutput)
}

type FirewallPolicyTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FirewallPolicyTagInput is an input type that accepts FirewallPolicyTagArgs and FirewallPolicyTagOutput values.
// You can construct a concrete instance of `FirewallPolicyTagInput` via:
//
//          FirewallPolicyTagArgs{...}
type FirewallPolicyTagInput interface {
	pulumi.Input

	ToFirewallPolicyTagOutput() FirewallPolicyTagOutput
	ToFirewallPolicyTagOutputWithContext(context.Context) FirewallPolicyTagOutput
}

type FirewallPolicyTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FirewallPolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTag)(nil)).Elem()
}

func (i FirewallPolicyTagArgs) ToFirewallPolicyTagOutput() FirewallPolicyTagOutput {
	return i.ToFirewallPolicyTagOutputWithContext(context.Background())
}

func (i FirewallPolicyTagArgs) ToFirewallPolicyTagOutputWithContext(ctx context.Context) FirewallPolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTagOutput)
}

// FirewallPolicyTagArrayInput is an input type that accepts FirewallPolicyTagArray and FirewallPolicyTagArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyTagArrayInput` via:
//
//          FirewallPolicyTagArray{ FirewallPolicyTagArgs{...} }
type FirewallPolicyTagArrayInput interface {
	pulumi.Input

	ToFirewallPolicyTagArrayOutput() FirewallPolicyTagArrayOutput
	ToFirewallPolicyTagArrayOutputWithContext(context.Context) FirewallPolicyTagArrayOutput
}

type FirewallPolicyTagArray []FirewallPolicyTagInput

func (FirewallPolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyTag)(nil)).Elem()
}

func (i FirewallPolicyTagArray) ToFirewallPolicyTagArrayOutput() FirewallPolicyTagArrayOutput {
	return i.ToFirewallPolicyTagArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyTagArray) ToFirewallPolicyTagArrayOutputWithContext(ctx context.Context) FirewallPolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTagArrayOutput)
}

type FirewallPolicyTagOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTag)(nil)).Elem()
}

func (o FirewallPolicyTagOutput) ToFirewallPolicyTagOutput() FirewallPolicyTagOutput {
	return o
}

func (o FirewallPolicyTagOutput) ToFirewallPolicyTagOutputWithContext(ctx context.Context) FirewallPolicyTagOutput {
	return o
}

func (o FirewallPolicyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FirewallPolicyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyTag) string { return v.Value }).(pulumi.StringOutput)
}

type FirewallPolicyTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyTag)(nil)).Elem()
}

func (o FirewallPolicyTagArrayOutput) ToFirewallPolicyTagArrayOutput() FirewallPolicyTagArrayOutput {
	return o
}

func (o FirewallPolicyTagArrayOutput) ToFirewallPolicyTagArrayOutputWithContext(ctx context.Context) FirewallPolicyTagArrayOutput {
	return o
}

func (o FirewallPolicyTagArrayOutput) Index(i pulumi.IntInput) FirewallPolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyTag {
		return vs[0].([]FirewallPolicyTag)[vs[1].(int)]
	}).(FirewallPolicyTagOutput)
}

type FirewallSubnetMapping struct {
	// A SubnetId.
	SubnetId string `pulumi:"subnetId"`
}

// FirewallSubnetMappingInput is an input type that accepts FirewallSubnetMappingArgs and FirewallSubnetMappingOutput values.
// You can construct a concrete instance of `FirewallSubnetMappingInput` via:
//
//          FirewallSubnetMappingArgs{...}
type FirewallSubnetMappingInput interface {
	pulumi.Input

	ToFirewallSubnetMappingOutput() FirewallSubnetMappingOutput
	ToFirewallSubnetMappingOutputWithContext(context.Context) FirewallSubnetMappingOutput
}

type FirewallSubnetMappingArgs struct {
	// A SubnetId.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (FirewallSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSubnetMapping)(nil)).Elem()
}

func (i FirewallSubnetMappingArgs) ToFirewallSubnetMappingOutput() FirewallSubnetMappingOutput {
	return i.ToFirewallSubnetMappingOutputWithContext(context.Background())
}

func (i FirewallSubnetMappingArgs) ToFirewallSubnetMappingOutputWithContext(ctx context.Context) FirewallSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSubnetMappingOutput)
}

// FirewallSubnetMappingArrayInput is an input type that accepts FirewallSubnetMappingArray and FirewallSubnetMappingArrayOutput values.
// You can construct a concrete instance of `FirewallSubnetMappingArrayInput` via:
//
//          FirewallSubnetMappingArray{ FirewallSubnetMappingArgs{...} }
type FirewallSubnetMappingArrayInput interface {
	pulumi.Input

	ToFirewallSubnetMappingArrayOutput() FirewallSubnetMappingArrayOutput
	ToFirewallSubnetMappingArrayOutputWithContext(context.Context) FirewallSubnetMappingArrayOutput
}

type FirewallSubnetMappingArray []FirewallSubnetMappingInput

func (FirewallSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSubnetMapping)(nil)).Elem()
}

func (i FirewallSubnetMappingArray) ToFirewallSubnetMappingArrayOutput() FirewallSubnetMappingArrayOutput {
	return i.ToFirewallSubnetMappingArrayOutputWithContext(context.Background())
}

func (i FirewallSubnetMappingArray) ToFirewallSubnetMappingArrayOutputWithContext(ctx context.Context) FirewallSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSubnetMappingArrayOutput)
}

type FirewallSubnetMappingOutput struct{ *pulumi.OutputState }

func (FirewallSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSubnetMapping)(nil)).Elem()
}

func (o FirewallSubnetMappingOutput) ToFirewallSubnetMappingOutput() FirewallSubnetMappingOutput {
	return o
}

func (o FirewallSubnetMappingOutput) ToFirewallSubnetMappingOutputWithContext(ctx context.Context) FirewallSubnetMappingOutput {
	return o
}

// A SubnetId.
func (o FirewallSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type FirewallSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (FirewallSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallSubnetMapping)(nil)).Elem()
}

func (o FirewallSubnetMappingArrayOutput) ToFirewallSubnetMappingArrayOutput() FirewallSubnetMappingArrayOutput {
	return o
}

func (o FirewallSubnetMappingArrayOutput) ToFirewallSubnetMappingArrayOutputWithContext(ctx context.Context) FirewallSubnetMappingArrayOutput {
	return o
}

func (o FirewallSubnetMappingArrayOutput) Index(i pulumi.IntInput) FirewallSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallSubnetMapping {
		return vs[0].([]FirewallSubnetMapping)[vs[1].(int)]
	}).(FirewallSubnetMappingOutput)
}

type FirewallTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// FirewallTagInput is an input type that accepts FirewallTagArgs and FirewallTagOutput values.
// You can construct a concrete instance of `FirewallTagInput` via:
//
//          FirewallTagArgs{...}
type FirewallTagInput interface {
	pulumi.Input

	ToFirewallTagOutput() FirewallTagOutput
	ToFirewallTagOutputWithContext(context.Context) FirewallTagOutput
}

type FirewallTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (FirewallTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTag)(nil)).Elem()
}

func (i FirewallTagArgs) ToFirewallTagOutput() FirewallTagOutput {
	return i.ToFirewallTagOutputWithContext(context.Background())
}

func (i FirewallTagArgs) ToFirewallTagOutputWithContext(ctx context.Context) FirewallTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTagOutput)
}

// FirewallTagArrayInput is an input type that accepts FirewallTagArray and FirewallTagArrayOutput values.
// You can construct a concrete instance of `FirewallTagArrayInput` via:
//
//          FirewallTagArray{ FirewallTagArgs{...} }
type FirewallTagArrayInput interface {
	pulumi.Input

	ToFirewallTagArrayOutput() FirewallTagArrayOutput
	ToFirewallTagArrayOutputWithContext(context.Context) FirewallTagArrayOutput
}

type FirewallTagArray []FirewallTagInput

func (FirewallTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTag)(nil)).Elem()
}

func (i FirewallTagArray) ToFirewallTagArrayOutput() FirewallTagArrayOutput {
	return i.ToFirewallTagArrayOutputWithContext(context.Background())
}

func (i FirewallTagArray) ToFirewallTagArrayOutputWithContext(ctx context.Context) FirewallTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTagArrayOutput)
}

type FirewallTagOutput struct{ *pulumi.OutputState }

func (FirewallTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallTag)(nil)).Elem()
}

func (o FirewallTagOutput) ToFirewallTagOutput() FirewallTagOutput {
	return o
}

func (o FirewallTagOutput) ToFirewallTagOutputWithContext(ctx context.Context) FirewallTagOutput {
	return o
}

func (o FirewallTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o FirewallTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallTag) string { return v.Value }).(pulumi.StringOutput)
}

type FirewallTagArrayOutput struct{ *pulumi.OutputState }

func (FirewallTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallTag)(nil)).Elem()
}

func (o FirewallTagArrayOutput) ToFirewallTagArrayOutput() FirewallTagArrayOutput {
	return o
}

func (o FirewallTagArrayOutput) ToFirewallTagArrayOutputWithContext(ctx context.Context) FirewallTagArrayOutput {
	return o
}

func (o FirewallTagArrayOutput) Index(i pulumi.IntInput) FirewallTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallTag {
		return vs[0].([]FirewallTag)[vs[1].(int)]
	}).(FirewallTagOutput)
}

type LoggingConfigurationLogDestinationConfig struct {
	// A key-value pair to configure the logDestinations.
	LogDestination     interface{}                                                `pulumi:"logDestination"`
	LogDestinationType LoggingConfigurationLogDestinationConfigLogDestinationType `pulumi:"logDestinationType"`
	LogType            LoggingConfigurationLogDestinationConfigLogType            `pulumi:"logType"`
}

// LoggingConfigurationLogDestinationConfigInput is an input type that accepts LoggingConfigurationLogDestinationConfigArgs and LoggingConfigurationLogDestinationConfigOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigInput` via:
//
//          LoggingConfigurationLogDestinationConfigArgs{...}
type LoggingConfigurationLogDestinationConfigInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigOutput() LoggingConfigurationLogDestinationConfigOutput
	ToLoggingConfigurationLogDestinationConfigOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigOutput
}

type LoggingConfigurationLogDestinationConfigArgs struct {
	// A key-value pair to configure the logDestinations.
	LogDestination     pulumi.Input                                                    `pulumi:"logDestination"`
	LogDestinationType LoggingConfigurationLogDestinationConfigLogDestinationTypeInput `pulumi:"logDestinationType"`
	LogType            LoggingConfigurationLogDestinationConfigLogTypeInput            `pulumi:"logType"`
}

func (LoggingConfigurationLogDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (i LoggingConfigurationLogDestinationConfigArgs) ToLoggingConfigurationLogDestinationConfigOutput() LoggingConfigurationLogDestinationConfigOutput {
	return i.ToLoggingConfigurationLogDestinationConfigOutputWithContext(context.Background())
}

func (i LoggingConfigurationLogDestinationConfigArgs) ToLoggingConfigurationLogDestinationConfigOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLogDestinationConfigOutput)
}

// LoggingConfigurationLogDestinationConfigArrayInput is an input type that accepts LoggingConfigurationLogDestinationConfigArray and LoggingConfigurationLogDestinationConfigArrayOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigArrayInput` via:
//
//          LoggingConfigurationLogDestinationConfigArray{ LoggingConfigurationLogDestinationConfigArgs{...} }
type LoggingConfigurationLogDestinationConfigArrayInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigArrayOutput() LoggingConfigurationLogDestinationConfigArrayOutput
	ToLoggingConfigurationLogDestinationConfigArrayOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigArrayOutput
}

type LoggingConfigurationLogDestinationConfigArray []LoggingConfigurationLogDestinationConfigInput

func (LoggingConfigurationLogDestinationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (i LoggingConfigurationLogDestinationConfigArray) ToLoggingConfigurationLogDestinationConfigArrayOutput() LoggingConfigurationLogDestinationConfigArrayOutput {
	return i.ToLoggingConfigurationLogDestinationConfigArrayOutputWithContext(context.Background())
}

func (i LoggingConfigurationLogDestinationConfigArray) ToLoggingConfigurationLogDestinationConfigArrayOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLogDestinationConfigArrayOutput)
}

type LoggingConfigurationLogDestinationConfigOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigOutput) ToLoggingConfigurationLogDestinationConfigOutput() LoggingConfigurationLogDestinationConfigOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigOutput) ToLoggingConfigurationLogDestinationConfigOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigOutput {
	return o
}

// A key-value pair to configure the logDestinations.
func (o LoggingConfigurationLogDestinationConfigOutput) LogDestination() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationLogDestinationConfig) interface{} { return v.LogDestination }).(pulumi.AnyOutput)
}

func (o LoggingConfigurationLogDestinationConfigOutput) LogDestinationType() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o.ApplyT(func(v LoggingConfigurationLogDestinationConfig) LoggingConfigurationLogDestinationConfigLogDestinationType {
		return v.LogDestinationType
	}).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (o LoggingConfigurationLogDestinationConfigOutput) LogType() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o.ApplyT(func(v LoggingConfigurationLogDestinationConfig) LoggingConfigurationLogDestinationConfigLogType {
		return v.LogType
	}).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

type LoggingConfigurationLogDestinationConfigArrayOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigArrayOutput) ToLoggingConfigurationLogDestinationConfigArrayOutput() LoggingConfigurationLogDestinationConfigArrayOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigArrayOutput) ToLoggingConfigurationLogDestinationConfigArrayOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigArrayOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigArrayOutput) Index(i pulumi.IntInput) LoggingConfigurationLogDestinationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingConfigurationLogDestinationConfig {
		return vs[0].([]LoggingConfigurationLogDestinationConfig)[vs[1].(int)]
	}).(LoggingConfigurationLogDestinationConfigOutput)
}

type LoggingConfigurationLoggingConfiguration struct {
	LogDestinationConfigs []LoggingConfigurationLogDestinationConfig `pulumi:"logDestinationConfigs"`
}

// LoggingConfigurationLoggingConfigurationInput is an input type that accepts LoggingConfigurationLoggingConfigurationArgs and LoggingConfigurationLoggingConfigurationOutput values.
// You can construct a concrete instance of `LoggingConfigurationLoggingConfigurationInput` via:
//
//          LoggingConfigurationLoggingConfigurationArgs{...}
type LoggingConfigurationLoggingConfigurationInput interface {
	pulumi.Input

	ToLoggingConfigurationLoggingConfigurationOutput() LoggingConfigurationLoggingConfigurationOutput
	ToLoggingConfigurationLoggingConfigurationOutputWithContext(context.Context) LoggingConfigurationLoggingConfigurationOutput
}

type LoggingConfigurationLoggingConfigurationArgs struct {
	LogDestinationConfigs LoggingConfigurationLogDestinationConfigArrayInput `pulumi:"logDestinationConfigs"`
}

func (LoggingConfigurationLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationOutput() LoggingConfigurationLoggingConfigurationOutput {
	return i.ToLoggingConfigurationLoggingConfigurationOutputWithContext(context.Background())
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLoggingConfigurationOutput)
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationPtrOutput() LoggingConfigurationLoggingConfigurationPtrOutput {
	return i.ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLoggingConfigurationOutput).ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(ctx)
}

// LoggingConfigurationLoggingConfigurationPtrInput is an input type that accepts LoggingConfigurationLoggingConfigurationArgs, LoggingConfigurationLoggingConfigurationPtr and LoggingConfigurationLoggingConfigurationPtrOutput values.
// You can construct a concrete instance of `LoggingConfigurationLoggingConfigurationPtrInput` via:
//
//          LoggingConfigurationLoggingConfigurationArgs{...}
//
//  or:
//
//          nil
type LoggingConfigurationLoggingConfigurationPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLoggingConfigurationPtrOutput() LoggingConfigurationLoggingConfigurationPtrOutput
	ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(context.Context) LoggingConfigurationLoggingConfigurationPtrOutput
}

type loggingConfigurationLoggingConfigurationPtrType LoggingConfigurationLoggingConfigurationArgs

func LoggingConfigurationLoggingConfigurationPtr(v *LoggingConfigurationLoggingConfigurationArgs) LoggingConfigurationLoggingConfigurationPtrInput {
	return (*loggingConfigurationLoggingConfigurationPtrType)(v)
}

func (*loggingConfigurationLoggingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (i *loggingConfigurationLoggingConfigurationPtrType) ToLoggingConfigurationLoggingConfigurationPtrOutput() LoggingConfigurationLoggingConfigurationPtrOutput {
	return i.ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i *loggingConfigurationLoggingConfigurationPtrType) ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLoggingConfigurationPtrOutput)
}

type LoggingConfigurationLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationOutput() LoggingConfigurationLoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationPtrOutput() LoggingConfigurationLoggingConfigurationPtrOutput {
	return o.ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLoggingConfiguration) *LoggingConfigurationLoggingConfiguration {
		return &v
	}).(LoggingConfigurationLoggingConfigurationPtrOutput)
}

func (o LoggingConfigurationLoggingConfigurationOutput) LogDestinationConfigs() LoggingConfigurationLogDestinationConfigArrayOutput {
	return o.ApplyT(func(v LoggingConfigurationLoggingConfiguration) []LoggingConfigurationLogDestinationConfig {
		return v.LogDestinationConfigs
	}).(LoggingConfigurationLogDestinationConfigArrayOutput)
}

type LoggingConfigurationLoggingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationLoggingConfigurationPtrOutput) ToLoggingConfigurationLoggingConfigurationPtrOutput() LoggingConfigurationLoggingConfigurationPtrOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationPtrOutput) ToLoggingConfigurationLoggingConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationPtrOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationPtrOutput) Elem() LoggingConfigurationLoggingConfigurationOutput {
	return o.ApplyT(func(v *LoggingConfigurationLoggingConfiguration) LoggingConfigurationLoggingConfiguration {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLoggingConfiguration
		return ret
	}).(LoggingConfigurationLoggingConfigurationOutput)
}

func (o LoggingConfigurationLoggingConfigurationPtrOutput) LogDestinationConfigs() LoggingConfigurationLogDestinationConfigArrayOutput {
	return o.ApplyT(func(v *LoggingConfigurationLoggingConfiguration) []LoggingConfigurationLogDestinationConfig {
		if v == nil {
			return nil
		}
		return v.LogDestinationConfigs
	}).(LoggingConfigurationLogDestinationConfigArrayOutput)
}

type RuleGroupActionDefinition struct {
	PublishMetricAction *RuleGroupPublishMetricAction `pulumi:"publishMetricAction"`
}

// RuleGroupActionDefinitionInput is an input type that accepts RuleGroupActionDefinitionArgs and RuleGroupActionDefinitionOutput values.
// You can construct a concrete instance of `RuleGroupActionDefinitionInput` via:
//
//          RuleGroupActionDefinitionArgs{...}
type RuleGroupActionDefinitionInput interface {
	pulumi.Input

	ToRuleGroupActionDefinitionOutput() RuleGroupActionDefinitionOutput
	ToRuleGroupActionDefinitionOutputWithContext(context.Context) RuleGroupActionDefinitionOutput
}

type RuleGroupActionDefinitionArgs struct {
	PublishMetricAction RuleGroupPublishMetricActionPtrInput `pulumi:"publishMetricAction"`
}

func (RuleGroupActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActionDefinition)(nil)).Elem()
}

func (i RuleGroupActionDefinitionArgs) ToRuleGroupActionDefinitionOutput() RuleGroupActionDefinitionOutput {
	return i.ToRuleGroupActionDefinitionOutputWithContext(context.Background())
}

func (i RuleGroupActionDefinitionArgs) ToRuleGroupActionDefinitionOutputWithContext(ctx context.Context) RuleGroupActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActionDefinitionOutput)
}

type RuleGroupActionDefinitionOutput struct{ *pulumi.OutputState }

func (RuleGroupActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActionDefinition)(nil)).Elem()
}

func (o RuleGroupActionDefinitionOutput) ToRuleGroupActionDefinitionOutput() RuleGroupActionDefinitionOutput {
	return o
}

func (o RuleGroupActionDefinitionOutput) ToRuleGroupActionDefinitionOutputWithContext(ctx context.Context) RuleGroupActionDefinitionOutput {
	return o
}

func (o RuleGroupActionDefinitionOutput) PublishMetricAction() RuleGroupPublishMetricActionPtrOutput {
	return o.ApplyT(func(v RuleGroupActionDefinition) *RuleGroupPublishMetricAction { return v.PublishMetricAction }).(RuleGroupPublishMetricActionPtrOutput)
}

type RuleGroupAddress struct {
	AddressDefinition string `pulumi:"addressDefinition"`
}

// RuleGroupAddressInput is an input type that accepts RuleGroupAddressArgs and RuleGroupAddressOutput values.
// You can construct a concrete instance of `RuleGroupAddressInput` via:
//
//          RuleGroupAddressArgs{...}
type RuleGroupAddressInput interface {
	pulumi.Input

	ToRuleGroupAddressOutput() RuleGroupAddressOutput
	ToRuleGroupAddressOutputWithContext(context.Context) RuleGroupAddressOutput
}

type RuleGroupAddressArgs struct {
	AddressDefinition pulumi.StringInput `pulumi:"addressDefinition"`
}

func (RuleGroupAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupAddress)(nil)).Elem()
}

func (i RuleGroupAddressArgs) ToRuleGroupAddressOutput() RuleGroupAddressOutput {
	return i.ToRuleGroupAddressOutputWithContext(context.Background())
}

func (i RuleGroupAddressArgs) ToRuleGroupAddressOutputWithContext(ctx context.Context) RuleGroupAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupAddressOutput)
}

// RuleGroupAddressArrayInput is an input type that accepts RuleGroupAddressArray and RuleGroupAddressArrayOutput values.
// You can construct a concrete instance of `RuleGroupAddressArrayInput` via:
//
//          RuleGroupAddressArray{ RuleGroupAddressArgs{...} }
type RuleGroupAddressArrayInput interface {
	pulumi.Input

	ToRuleGroupAddressArrayOutput() RuleGroupAddressArrayOutput
	ToRuleGroupAddressArrayOutputWithContext(context.Context) RuleGroupAddressArrayOutput
}

type RuleGroupAddressArray []RuleGroupAddressInput

func (RuleGroupAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupAddress)(nil)).Elem()
}

func (i RuleGroupAddressArray) ToRuleGroupAddressArrayOutput() RuleGroupAddressArrayOutput {
	return i.ToRuleGroupAddressArrayOutputWithContext(context.Background())
}

func (i RuleGroupAddressArray) ToRuleGroupAddressArrayOutputWithContext(ctx context.Context) RuleGroupAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupAddressArrayOutput)
}

type RuleGroupAddressOutput struct{ *pulumi.OutputState }

func (RuleGroupAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupAddress)(nil)).Elem()
}

func (o RuleGroupAddressOutput) ToRuleGroupAddressOutput() RuleGroupAddressOutput {
	return o
}

func (o RuleGroupAddressOutput) ToRuleGroupAddressOutputWithContext(ctx context.Context) RuleGroupAddressOutput {
	return o
}

func (o RuleGroupAddressOutput) AddressDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupAddress) string { return v.AddressDefinition }).(pulumi.StringOutput)
}

type RuleGroupAddressArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupAddress)(nil)).Elem()
}

func (o RuleGroupAddressArrayOutput) ToRuleGroupAddressArrayOutput() RuleGroupAddressArrayOutput {
	return o
}

func (o RuleGroupAddressArrayOutput) ToRuleGroupAddressArrayOutputWithContext(ctx context.Context) RuleGroupAddressArrayOutput {
	return o
}

func (o RuleGroupAddressArrayOutput) Index(i pulumi.IntInput) RuleGroupAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupAddress {
		return vs[0].([]RuleGroupAddress)[vs[1].(int)]
	}).(RuleGroupAddressOutput)
}

type RuleGroupCustomAction struct {
	ActionDefinition RuleGroupActionDefinition `pulumi:"actionDefinition"`
	ActionName       string                    `pulumi:"actionName"`
}

// RuleGroupCustomActionInput is an input type that accepts RuleGroupCustomActionArgs and RuleGroupCustomActionOutput values.
// You can construct a concrete instance of `RuleGroupCustomActionInput` via:
//
//          RuleGroupCustomActionArgs{...}
type RuleGroupCustomActionInput interface {
	pulumi.Input

	ToRuleGroupCustomActionOutput() RuleGroupCustomActionOutput
	ToRuleGroupCustomActionOutputWithContext(context.Context) RuleGroupCustomActionOutput
}

type RuleGroupCustomActionArgs struct {
	ActionDefinition RuleGroupActionDefinitionInput `pulumi:"actionDefinition"`
	ActionName       pulumi.StringInput             `pulumi:"actionName"`
}

func (RuleGroupCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomAction)(nil)).Elem()
}

func (i RuleGroupCustomActionArgs) ToRuleGroupCustomActionOutput() RuleGroupCustomActionOutput {
	return i.ToRuleGroupCustomActionOutputWithContext(context.Background())
}

func (i RuleGroupCustomActionArgs) ToRuleGroupCustomActionOutputWithContext(ctx context.Context) RuleGroupCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomActionOutput)
}

// RuleGroupCustomActionArrayInput is an input type that accepts RuleGroupCustomActionArray and RuleGroupCustomActionArrayOutput values.
// You can construct a concrete instance of `RuleGroupCustomActionArrayInput` via:
//
//          RuleGroupCustomActionArray{ RuleGroupCustomActionArgs{...} }
type RuleGroupCustomActionArrayInput interface {
	pulumi.Input

	ToRuleGroupCustomActionArrayOutput() RuleGroupCustomActionArrayOutput
	ToRuleGroupCustomActionArrayOutputWithContext(context.Context) RuleGroupCustomActionArrayOutput
}

type RuleGroupCustomActionArray []RuleGroupCustomActionInput

func (RuleGroupCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupCustomAction)(nil)).Elem()
}

func (i RuleGroupCustomActionArray) ToRuleGroupCustomActionArrayOutput() RuleGroupCustomActionArrayOutput {
	return i.ToRuleGroupCustomActionArrayOutputWithContext(context.Background())
}

func (i RuleGroupCustomActionArray) ToRuleGroupCustomActionArrayOutputWithContext(ctx context.Context) RuleGroupCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomActionArrayOutput)
}

type RuleGroupCustomActionOutput struct{ *pulumi.OutputState }

func (RuleGroupCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomAction)(nil)).Elem()
}

func (o RuleGroupCustomActionOutput) ToRuleGroupCustomActionOutput() RuleGroupCustomActionOutput {
	return o
}

func (o RuleGroupCustomActionOutput) ToRuleGroupCustomActionOutputWithContext(ctx context.Context) RuleGroupCustomActionOutput {
	return o
}

func (o RuleGroupCustomActionOutput) ActionDefinition() RuleGroupActionDefinitionOutput {
	return o.ApplyT(func(v RuleGroupCustomAction) RuleGroupActionDefinition { return v.ActionDefinition }).(RuleGroupActionDefinitionOutput)
}

func (o RuleGroupCustomActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupCustomAction) string { return v.ActionName }).(pulumi.StringOutput)
}

type RuleGroupCustomActionArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupCustomAction)(nil)).Elem()
}

func (o RuleGroupCustomActionArrayOutput) ToRuleGroupCustomActionArrayOutput() RuleGroupCustomActionArrayOutput {
	return o
}

func (o RuleGroupCustomActionArrayOutput) ToRuleGroupCustomActionArrayOutputWithContext(ctx context.Context) RuleGroupCustomActionArrayOutput {
	return o
}

func (o RuleGroupCustomActionArrayOutput) Index(i pulumi.IntInput) RuleGroupCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupCustomAction {
		return vs[0].([]RuleGroupCustomAction)[vs[1].(int)]
	}).(RuleGroupCustomActionOutput)
}

type RuleGroupDimension struct {
	Value string `pulumi:"value"`
}

// RuleGroupDimensionInput is an input type that accepts RuleGroupDimensionArgs and RuleGroupDimensionOutput values.
// You can construct a concrete instance of `RuleGroupDimensionInput` via:
//
//          RuleGroupDimensionArgs{...}
type RuleGroupDimensionInput interface {
	pulumi.Input

	ToRuleGroupDimensionOutput() RuleGroupDimensionOutput
	ToRuleGroupDimensionOutputWithContext(context.Context) RuleGroupDimensionOutput
}

type RuleGroupDimensionArgs struct {
	Value pulumi.StringInput `pulumi:"value"`
}

func (RuleGroupDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupDimension)(nil)).Elem()
}

func (i RuleGroupDimensionArgs) ToRuleGroupDimensionOutput() RuleGroupDimensionOutput {
	return i.ToRuleGroupDimensionOutputWithContext(context.Background())
}

func (i RuleGroupDimensionArgs) ToRuleGroupDimensionOutputWithContext(ctx context.Context) RuleGroupDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupDimensionOutput)
}

// RuleGroupDimensionArrayInput is an input type that accepts RuleGroupDimensionArray and RuleGroupDimensionArrayOutput values.
// You can construct a concrete instance of `RuleGroupDimensionArrayInput` via:
//
//          RuleGroupDimensionArray{ RuleGroupDimensionArgs{...} }
type RuleGroupDimensionArrayInput interface {
	pulumi.Input

	ToRuleGroupDimensionArrayOutput() RuleGroupDimensionArrayOutput
	ToRuleGroupDimensionArrayOutputWithContext(context.Context) RuleGroupDimensionArrayOutput
}

type RuleGroupDimensionArray []RuleGroupDimensionInput

func (RuleGroupDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupDimension)(nil)).Elem()
}

func (i RuleGroupDimensionArray) ToRuleGroupDimensionArrayOutput() RuleGroupDimensionArrayOutput {
	return i.ToRuleGroupDimensionArrayOutputWithContext(context.Background())
}

func (i RuleGroupDimensionArray) ToRuleGroupDimensionArrayOutputWithContext(ctx context.Context) RuleGroupDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupDimensionArrayOutput)
}

type RuleGroupDimensionOutput struct{ *pulumi.OutputState }

func (RuleGroupDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupDimension)(nil)).Elem()
}

func (o RuleGroupDimensionOutput) ToRuleGroupDimensionOutput() RuleGroupDimensionOutput {
	return o
}

func (o RuleGroupDimensionOutput) ToRuleGroupDimensionOutputWithContext(ctx context.Context) RuleGroupDimensionOutput {
	return o
}

func (o RuleGroupDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupDimension) string { return v.Value }).(pulumi.StringOutput)
}

type RuleGroupDimensionArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupDimension)(nil)).Elem()
}

func (o RuleGroupDimensionArrayOutput) ToRuleGroupDimensionArrayOutput() RuleGroupDimensionArrayOutput {
	return o
}

func (o RuleGroupDimensionArrayOutput) ToRuleGroupDimensionArrayOutputWithContext(ctx context.Context) RuleGroupDimensionArrayOutput {
	return o
}

func (o RuleGroupDimensionArrayOutput) Index(i pulumi.IntInput) RuleGroupDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupDimension {
		return vs[0].([]RuleGroupDimension)[vs[1].(int)]
	}).(RuleGroupDimensionOutput)
}

type RuleGroupHeader struct {
	Destination     string                   `pulumi:"destination"`
	DestinationPort string                   `pulumi:"destinationPort"`
	Direction       RuleGroupHeaderDirection `pulumi:"direction"`
	Protocol        RuleGroupHeaderProtocol  `pulumi:"protocol"`
	Source          string                   `pulumi:"source"`
	SourcePort      string                   `pulumi:"sourcePort"`
}

// RuleGroupHeaderInput is an input type that accepts RuleGroupHeaderArgs and RuleGroupHeaderOutput values.
// You can construct a concrete instance of `RuleGroupHeaderInput` via:
//
//          RuleGroupHeaderArgs{...}
type RuleGroupHeaderInput interface {
	pulumi.Input

	ToRuleGroupHeaderOutput() RuleGroupHeaderOutput
	ToRuleGroupHeaderOutputWithContext(context.Context) RuleGroupHeaderOutput
}

type RuleGroupHeaderArgs struct {
	Destination     pulumi.StringInput            `pulumi:"destination"`
	DestinationPort pulumi.StringInput            `pulumi:"destinationPort"`
	Direction       RuleGroupHeaderDirectionInput `pulumi:"direction"`
	Protocol        RuleGroupHeaderProtocolInput  `pulumi:"protocol"`
	Source          pulumi.StringInput            `pulumi:"source"`
	SourcePort      pulumi.StringInput            `pulumi:"sourcePort"`
}

func (RuleGroupHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeader)(nil)).Elem()
}

func (i RuleGroupHeaderArgs) ToRuleGroupHeaderOutput() RuleGroupHeaderOutput {
	return i.ToRuleGroupHeaderOutputWithContext(context.Background())
}

func (i RuleGroupHeaderArgs) ToRuleGroupHeaderOutputWithContext(ctx context.Context) RuleGroupHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupHeaderOutput)
}

type RuleGroupHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeader)(nil)).Elem()
}

func (o RuleGroupHeaderOutput) ToRuleGroupHeaderOutput() RuleGroupHeaderOutput {
	return o
}

func (o RuleGroupHeaderOutput) ToRuleGroupHeaderOutputWithContext(ctx context.Context) RuleGroupHeaderOutput {
	return o
}

func (o RuleGroupHeaderOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupHeader) string { return v.Destination }).(pulumi.StringOutput)
}

func (o RuleGroupHeaderOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupHeader) string { return v.DestinationPort }).(pulumi.StringOutput)
}

func (o RuleGroupHeaderOutput) Direction() RuleGroupHeaderDirectionOutput {
	return o.ApplyT(func(v RuleGroupHeader) RuleGroupHeaderDirection { return v.Direction }).(RuleGroupHeaderDirectionOutput)
}

func (o RuleGroupHeaderOutput) Protocol() RuleGroupHeaderProtocolOutput {
	return o.ApplyT(func(v RuleGroupHeader) RuleGroupHeaderProtocol { return v.Protocol }).(RuleGroupHeaderProtocolOutput)
}

func (o RuleGroupHeaderOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupHeader) string { return v.Source }).(pulumi.StringOutput)
}

func (o RuleGroupHeaderOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupHeader) string { return v.SourcePort }).(pulumi.StringOutput)
}

type RuleGroupMatchAttributes struct {
	DestinationPorts []RuleGroupPortRange    `pulumi:"destinationPorts"`
	Destinations     []RuleGroupAddress      `pulumi:"destinations"`
	Protocols        []int                   `pulumi:"protocols"`
	SourcePorts      []RuleGroupPortRange    `pulumi:"sourcePorts"`
	Sources          []RuleGroupAddress      `pulumi:"sources"`
	TCPFlags         []RuleGroupTCPFlagField `pulumi:"tCPFlags"`
}

// RuleGroupMatchAttributesInput is an input type that accepts RuleGroupMatchAttributesArgs and RuleGroupMatchAttributesOutput values.
// You can construct a concrete instance of `RuleGroupMatchAttributesInput` via:
//
//          RuleGroupMatchAttributesArgs{...}
type RuleGroupMatchAttributesInput interface {
	pulumi.Input

	ToRuleGroupMatchAttributesOutput() RuleGroupMatchAttributesOutput
	ToRuleGroupMatchAttributesOutputWithContext(context.Context) RuleGroupMatchAttributesOutput
}

type RuleGroupMatchAttributesArgs struct {
	DestinationPorts RuleGroupPortRangeArrayInput    `pulumi:"destinationPorts"`
	Destinations     RuleGroupAddressArrayInput      `pulumi:"destinations"`
	Protocols        pulumi.IntArrayInput            `pulumi:"protocols"`
	SourcePorts      RuleGroupPortRangeArrayInput    `pulumi:"sourcePorts"`
	Sources          RuleGroupAddressArrayInput      `pulumi:"sources"`
	TCPFlags         RuleGroupTCPFlagFieldArrayInput `pulumi:"tCPFlags"`
}

func (RuleGroupMatchAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupMatchAttributes)(nil)).Elem()
}

func (i RuleGroupMatchAttributesArgs) ToRuleGroupMatchAttributesOutput() RuleGroupMatchAttributesOutput {
	return i.ToRuleGroupMatchAttributesOutputWithContext(context.Background())
}

func (i RuleGroupMatchAttributesArgs) ToRuleGroupMatchAttributesOutputWithContext(ctx context.Context) RuleGroupMatchAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupMatchAttributesOutput)
}

type RuleGroupMatchAttributesOutput struct{ *pulumi.OutputState }

func (RuleGroupMatchAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupMatchAttributes)(nil)).Elem()
}

func (o RuleGroupMatchAttributesOutput) ToRuleGroupMatchAttributesOutput() RuleGroupMatchAttributesOutput {
	return o
}

func (o RuleGroupMatchAttributesOutput) ToRuleGroupMatchAttributesOutputWithContext(ctx context.Context) RuleGroupMatchAttributesOutput {
	return o
}

func (o RuleGroupMatchAttributesOutput) DestinationPorts() RuleGroupPortRangeArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []RuleGroupPortRange { return v.DestinationPorts }).(RuleGroupPortRangeArrayOutput)
}

func (o RuleGroupMatchAttributesOutput) Destinations() RuleGroupAddressArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []RuleGroupAddress { return v.Destinations }).(RuleGroupAddressArrayOutput)
}

func (o RuleGroupMatchAttributesOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

func (o RuleGroupMatchAttributesOutput) SourcePorts() RuleGroupPortRangeArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []RuleGroupPortRange { return v.SourcePorts }).(RuleGroupPortRangeArrayOutput)
}

func (o RuleGroupMatchAttributesOutput) Sources() RuleGroupAddressArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []RuleGroupAddress { return v.Sources }).(RuleGroupAddressArrayOutput)
}

func (o RuleGroupMatchAttributesOutput) TCPFlags() RuleGroupTCPFlagFieldArrayOutput {
	return o.ApplyT(func(v RuleGroupMatchAttributes) []RuleGroupTCPFlagField { return v.TCPFlags }).(RuleGroupTCPFlagFieldArrayOutput)
}

type RuleGroupPortRange struct {
	FromPort int `pulumi:"fromPort"`
	ToPort   int `pulumi:"toPort"`
}

// RuleGroupPortRangeInput is an input type that accepts RuleGroupPortRangeArgs and RuleGroupPortRangeOutput values.
// You can construct a concrete instance of `RuleGroupPortRangeInput` via:
//
//          RuleGroupPortRangeArgs{...}
type RuleGroupPortRangeInput interface {
	pulumi.Input

	ToRuleGroupPortRangeOutput() RuleGroupPortRangeOutput
	ToRuleGroupPortRangeOutputWithContext(context.Context) RuleGroupPortRangeOutput
}

type RuleGroupPortRangeArgs struct {
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	ToPort   pulumi.IntInput `pulumi:"toPort"`
}

func (RuleGroupPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPortRange)(nil)).Elem()
}

func (i RuleGroupPortRangeArgs) ToRuleGroupPortRangeOutput() RuleGroupPortRangeOutput {
	return i.ToRuleGroupPortRangeOutputWithContext(context.Background())
}

func (i RuleGroupPortRangeArgs) ToRuleGroupPortRangeOutputWithContext(ctx context.Context) RuleGroupPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPortRangeOutput)
}

// RuleGroupPortRangeArrayInput is an input type that accepts RuleGroupPortRangeArray and RuleGroupPortRangeArrayOutput values.
// You can construct a concrete instance of `RuleGroupPortRangeArrayInput` via:
//
//          RuleGroupPortRangeArray{ RuleGroupPortRangeArgs{...} }
type RuleGroupPortRangeArrayInput interface {
	pulumi.Input

	ToRuleGroupPortRangeArrayOutput() RuleGroupPortRangeArrayOutput
	ToRuleGroupPortRangeArrayOutputWithContext(context.Context) RuleGroupPortRangeArrayOutput
}

type RuleGroupPortRangeArray []RuleGroupPortRangeInput

func (RuleGroupPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupPortRange)(nil)).Elem()
}

func (i RuleGroupPortRangeArray) ToRuleGroupPortRangeArrayOutput() RuleGroupPortRangeArrayOutput {
	return i.ToRuleGroupPortRangeArrayOutputWithContext(context.Background())
}

func (i RuleGroupPortRangeArray) ToRuleGroupPortRangeArrayOutputWithContext(ctx context.Context) RuleGroupPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPortRangeArrayOutput)
}

type RuleGroupPortRangeOutput struct{ *pulumi.OutputState }

func (RuleGroupPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPortRange)(nil)).Elem()
}

func (o RuleGroupPortRangeOutput) ToRuleGroupPortRangeOutput() RuleGroupPortRangeOutput {
	return o
}

func (o RuleGroupPortRangeOutput) ToRuleGroupPortRangeOutputWithContext(ctx context.Context) RuleGroupPortRangeOutput {
	return o
}

func (o RuleGroupPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o RuleGroupPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type RuleGroupPortRangeArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupPortRange)(nil)).Elem()
}

func (o RuleGroupPortRangeArrayOutput) ToRuleGroupPortRangeArrayOutput() RuleGroupPortRangeArrayOutput {
	return o
}

func (o RuleGroupPortRangeArrayOutput) ToRuleGroupPortRangeArrayOutputWithContext(ctx context.Context) RuleGroupPortRangeArrayOutput {
	return o
}

func (o RuleGroupPortRangeArrayOutput) Index(i pulumi.IntInput) RuleGroupPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupPortRange {
		return vs[0].([]RuleGroupPortRange)[vs[1].(int)]
	}).(RuleGroupPortRangeOutput)
}

type RuleGroupPublishMetricAction struct {
	Dimensions []RuleGroupDimension `pulumi:"dimensions"`
}

// RuleGroupPublishMetricActionInput is an input type that accepts RuleGroupPublishMetricActionArgs and RuleGroupPublishMetricActionOutput values.
// You can construct a concrete instance of `RuleGroupPublishMetricActionInput` via:
//
//          RuleGroupPublishMetricActionArgs{...}
type RuleGroupPublishMetricActionInput interface {
	pulumi.Input

	ToRuleGroupPublishMetricActionOutput() RuleGroupPublishMetricActionOutput
	ToRuleGroupPublishMetricActionOutputWithContext(context.Context) RuleGroupPublishMetricActionOutput
}

type RuleGroupPublishMetricActionArgs struct {
	Dimensions RuleGroupDimensionArrayInput `pulumi:"dimensions"`
}

func (RuleGroupPublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPublishMetricAction)(nil)).Elem()
}

func (i RuleGroupPublishMetricActionArgs) ToRuleGroupPublishMetricActionOutput() RuleGroupPublishMetricActionOutput {
	return i.ToRuleGroupPublishMetricActionOutputWithContext(context.Background())
}

func (i RuleGroupPublishMetricActionArgs) ToRuleGroupPublishMetricActionOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPublishMetricActionOutput)
}

func (i RuleGroupPublishMetricActionArgs) ToRuleGroupPublishMetricActionPtrOutput() RuleGroupPublishMetricActionPtrOutput {
	return i.ToRuleGroupPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i RuleGroupPublishMetricActionArgs) ToRuleGroupPublishMetricActionPtrOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPublishMetricActionOutput).ToRuleGroupPublishMetricActionPtrOutputWithContext(ctx)
}

// RuleGroupPublishMetricActionPtrInput is an input type that accepts RuleGroupPublishMetricActionArgs, RuleGroupPublishMetricActionPtr and RuleGroupPublishMetricActionPtrOutput values.
// You can construct a concrete instance of `RuleGroupPublishMetricActionPtrInput` via:
//
//          RuleGroupPublishMetricActionArgs{...}
//
//  or:
//
//          nil
type RuleGroupPublishMetricActionPtrInput interface {
	pulumi.Input

	ToRuleGroupPublishMetricActionPtrOutput() RuleGroupPublishMetricActionPtrOutput
	ToRuleGroupPublishMetricActionPtrOutputWithContext(context.Context) RuleGroupPublishMetricActionPtrOutput
}

type ruleGroupPublishMetricActionPtrType RuleGroupPublishMetricActionArgs

func RuleGroupPublishMetricActionPtr(v *RuleGroupPublishMetricActionArgs) RuleGroupPublishMetricActionPtrInput {
	return (*ruleGroupPublishMetricActionPtrType)(v)
}

func (*ruleGroupPublishMetricActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupPublishMetricAction)(nil)).Elem()
}

func (i *ruleGroupPublishMetricActionPtrType) ToRuleGroupPublishMetricActionPtrOutput() RuleGroupPublishMetricActionPtrOutput {
	return i.ToRuleGroupPublishMetricActionPtrOutputWithContext(context.Background())
}

func (i *ruleGroupPublishMetricActionPtrType) ToRuleGroupPublishMetricActionPtrOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupPublishMetricActionPtrOutput)
}

type RuleGroupPublishMetricActionOutput struct{ *pulumi.OutputState }

func (RuleGroupPublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPublishMetricAction)(nil)).Elem()
}

func (o RuleGroupPublishMetricActionOutput) ToRuleGroupPublishMetricActionOutput() RuleGroupPublishMetricActionOutput {
	return o
}

func (o RuleGroupPublishMetricActionOutput) ToRuleGroupPublishMetricActionOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionOutput {
	return o
}

func (o RuleGroupPublishMetricActionOutput) ToRuleGroupPublishMetricActionPtrOutput() RuleGroupPublishMetricActionPtrOutput {
	return o.ToRuleGroupPublishMetricActionPtrOutputWithContext(context.Background())
}

func (o RuleGroupPublishMetricActionOutput) ToRuleGroupPublishMetricActionPtrOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupPublishMetricAction) *RuleGroupPublishMetricAction {
		return &v
	}).(RuleGroupPublishMetricActionPtrOutput)
}

func (o RuleGroupPublishMetricActionOutput) Dimensions() RuleGroupDimensionArrayOutput {
	return o.ApplyT(func(v RuleGroupPublishMetricAction) []RuleGroupDimension { return v.Dimensions }).(RuleGroupDimensionArrayOutput)
}

type RuleGroupPublishMetricActionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupPublishMetricActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupPublishMetricAction)(nil)).Elem()
}

func (o RuleGroupPublishMetricActionPtrOutput) ToRuleGroupPublishMetricActionPtrOutput() RuleGroupPublishMetricActionPtrOutput {
	return o
}

func (o RuleGroupPublishMetricActionPtrOutput) ToRuleGroupPublishMetricActionPtrOutputWithContext(ctx context.Context) RuleGroupPublishMetricActionPtrOutput {
	return o
}

func (o RuleGroupPublishMetricActionPtrOutput) Elem() RuleGroupPublishMetricActionOutput {
	return o.ApplyT(func(v *RuleGroupPublishMetricAction) RuleGroupPublishMetricAction {
		if v != nil {
			return *v
		}
		var ret RuleGroupPublishMetricAction
		return ret
	}).(RuleGroupPublishMetricActionOutput)
}

func (o RuleGroupPublishMetricActionPtrOutput) Dimensions() RuleGroupDimensionArrayOutput {
	return o.ApplyT(func(v *RuleGroupPublishMetricAction) []RuleGroupDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(RuleGroupDimensionArrayOutput)
}

type RuleGroupRuleDefinition struct {
	Actions         []string                 `pulumi:"actions"`
	MatchAttributes RuleGroupMatchAttributes `pulumi:"matchAttributes"`
}

// RuleGroupRuleDefinitionInput is an input type that accepts RuleGroupRuleDefinitionArgs and RuleGroupRuleDefinitionOutput values.
// You can construct a concrete instance of `RuleGroupRuleDefinitionInput` via:
//
//          RuleGroupRuleDefinitionArgs{...}
type RuleGroupRuleDefinitionInput interface {
	pulumi.Input

	ToRuleGroupRuleDefinitionOutput() RuleGroupRuleDefinitionOutput
	ToRuleGroupRuleDefinitionOutputWithContext(context.Context) RuleGroupRuleDefinitionOutput
}

type RuleGroupRuleDefinitionArgs struct {
	Actions         pulumi.StringArrayInput       `pulumi:"actions"`
	MatchAttributes RuleGroupMatchAttributesInput `pulumi:"matchAttributes"`
}

func (RuleGroupRuleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleDefinition)(nil)).Elem()
}

func (i RuleGroupRuleDefinitionArgs) ToRuleGroupRuleDefinitionOutput() RuleGroupRuleDefinitionOutput {
	return i.ToRuleGroupRuleDefinitionOutputWithContext(context.Background())
}

func (i RuleGroupRuleDefinitionArgs) ToRuleGroupRuleDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleDefinitionOutput)
}

type RuleGroupRuleDefinitionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleDefinition)(nil)).Elem()
}

func (o RuleGroupRuleDefinitionOutput) ToRuleGroupRuleDefinitionOutput() RuleGroupRuleDefinitionOutput {
	return o
}

func (o RuleGroupRuleDefinitionOutput) ToRuleGroupRuleDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleDefinitionOutput {
	return o
}

func (o RuleGroupRuleDefinitionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleGroupRuleDefinition) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o RuleGroupRuleDefinitionOutput) MatchAttributes() RuleGroupMatchAttributesOutput {
	return o.ApplyT(func(v RuleGroupRuleDefinition) RuleGroupMatchAttributes { return v.MatchAttributes }).(RuleGroupMatchAttributesOutput)
}

type RuleGroupRuleGroup struct {
	RuleVariables *RuleGroupRuleVariables `pulumi:"ruleVariables"`
	RulesSource   RuleGroupRulesSource    `pulumi:"rulesSource"`
}

// RuleGroupRuleGroupInput is an input type that accepts RuleGroupRuleGroupArgs and RuleGroupRuleGroupOutput values.
// You can construct a concrete instance of `RuleGroupRuleGroupInput` via:
//
//          RuleGroupRuleGroupArgs{...}
type RuleGroupRuleGroupInput interface {
	pulumi.Input

	ToRuleGroupRuleGroupOutput() RuleGroupRuleGroupOutput
	ToRuleGroupRuleGroupOutputWithContext(context.Context) RuleGroupRuleGroupOutput
}

type RuleGroupRuleGroupArgs struct {
	RuleVariables RuleGroupRuleVariablesPtrInput `pulumi:"ruleVariables"`
	RulesSource   RuleGroupRulesSourceInput      `pulumi:"rulesSource"`
}

func (RuleGroupRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroup)(nil)).Elem()
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupOutput() RuleGroupRuleGroupOutput {
	return i.ToRuleGroupRuleGroupOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupOutputWithContext(ctx context.Context) RuleGroupRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupOutput)
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupPtrOutput() RuleGroupRuleGroupPtrOutput {
	return i.ToRuleGroupRuleGroupPtrOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupRuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupOutput).ToRuleGroupRuleGroupPtrOutputWithContext(ctx)
}

// RuleGroupRuleGroupPtrInput is an input type that accepts RuleGroupRuleGroupArgs, RuleGroupRuleGroupPtr and RuleGroupRuleGroupPtrOutput values.
// You can construct a concrete instance of `RuleGroupRuleGroupPtrInput` via:
//
//          RuleGroupRuleGroupArgs{...}
//
//  or:
//
//          nil
type RuleGroupRuleGroupPtrInput interface {
	pulumi.Input

	ToRuleGroupRuleGroupPtrOutput() RuleGroupRuleGroupPtrOutput
	ToRuleGroupRuleGroupPtrOutputWithContext(context.Context) RuleGroupRuleGroupPtrOutput
}

type ruleGroupRuleGroupPtrType RuleGroupRuleGroupArgs

func RuleGroupRuleGroupPtr(v *RuleGroupRuleGroupArgs) RuleGroupRuleGroupPtrInput {
	return (*ruleGroupRuleGroupPtrType)(v)
}

func (*ruleGroupRuleGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleGroup)(nil)).Elem()
}

func (i *ruleGroupRuleGroupPtrType) ToRuleGroupRuleGroupPtrOutput() RuleGroupRuleGroupPtrOutput {
	return i.ToRuleGroupRuleGroupPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRuleGroupPtrType) ToRuleGroupRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupRuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupPtrOutput)
}

type RuleGroupRuleGroupOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroup)(nil)).Elem()
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupOutput() RuleGroupRuleGroupOutput {
	return o
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupOutputWithContext(ctx context.Context) RuleGroupRuleGroupOutput {
	return o
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupPtrOutput() RuleGroupRuleGroupPtrOutput {
	return o.ToRuleGroupRuleGroupPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupRuleGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRuleGroup) *RuleGroupRuleGroup {
		return &v
	}).(RuleGroupRuleGroupPtrOutput)
}

func (o RuleGroupRuleGroupOutput) RuleVariables() RuleGroupRuleVariablesPtrOutput {
	return o.ApplyT(func(v RuleGroupRuleGroup) *RuleGroupRuleVariables { return v.RuleVariables }).(RuleGroupRuleVariablesPtrOutput)
}

func (o RuleGroupRuleGroupOutput) RulesSource() RuleGroupRulesSourceOutput {
	return o.ApplyT(func(v RuleGroupRuleGroup) RuleGroupRulesSource { return v.RulesSource }).(RuleGroupRulesSourceOutput)
}

type RuleGroupRuleGroupPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleGroup)(nil)).Elem()
}

func (o RuleGroupRuleGroupPtrOutput) ToRuleGroupRuleGroupPtrOutput() RuleGroupRuleGroupPtrOutput {
	return o
}

func (o RuleGroupRuleGroupPtrOutput) ToRuleGroupRuleGroupPtrOutputWithContext(ctx context.Context) RuleGroupRuleGroupPtrOutput {
	return o
}

func (o RuleGroupRuleGroupPtrOutput) Elem() RuleGroupRuleGroupOutput {
	return o.ApplyT(func(v *RuleGroupRuleGroup) RuleGroupRuleGroup {
		if v != nil {
			return *v
		}
		var ret RuleGroupRuleGroup
		return ret
	}).(RuleGroupRuleGroupOutput)
}

func (o RuleGroupRuleGroupPtrOutput) RuleVariables() RuleGroupRuleVariablesPtrOutput {
	return o.ApplyT(func(v *RuleGroupRuleGroup) *RuleGroupRuleVariables {
		if v == nil {
			return nil
		}
		return v.RuleVariables
	}).(RuleGroupRuleVariablesPtrOutput)
}

func (o RuleGroupRuleGroupPtrOutput) RulesSource() RuleGroupRulesSourcePtrOutput {
	return o.ApplyT(func(v *RuleGroupRuleGroup) *RuleGroupRulesSource {
		if v == nil {
			return nil
		}
		return &v.RulesSource
	}).(RuleGroupRulesSourcePtrOutput)
}

type RuleGroupRuleOption struct {
	Keyword  string   `pulumi:"keyword"`
	Settings []string `pulumi:"settings"`
}

// RuleGroupRuleOptionInput is an input type that accepts RuleGroupRuleOptionArgs and RuleGroupRuleOptionOutput values.
// You can construct a concrete instance of `RuleGroupRuleOptionInput` via:
//
//          RuleGroupRuleOptionArgs{...}
type RuleGroupRuleOptionInput interface {
	pulumi.Input

	ToRuleGroupRuleOptionOutput() RuleGroupRuleOptionOutput
	ToRuleGroupRuleOptionOutputWithContext(context.Context) RuleGroupRuleOptionOutput
}

type RuleGroupRuleOptionArgs struct {
	Keyword  pulumi.StringInput      `pulumi:"keyword"`
	Settings pulumi.StringArrayInput `pulumi:"settings"`
}

func (RuleGroupRuleOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleOption)(nil)).Elem()
}

func (i RuleGroupRuleOptionArgs) ToRuleGroupRuleOptionOutput() RuleGroupRuleOptionOutput {
	return i.ToRuleGroupRuleOptionOutputWithContext(context.Background())
}

func (i RuleGroupRuleOptionArgs) ToRuleGroupRuleOptionOutputWithContext(ctx context.Context) RuleGroupRuleOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleOptionOutput)
}

// RuleGroupRuleOptionArrayInput is an input type that accepts RuleGroupRuleOptionArray and RuleGroupRuleOptionArrayOutput values.
// You can construct a concrete instance of `RuleGroupRuleOptionArrayInput` via:
//
//          RuleGroupRuleOptionArray{ RuleGroupRuleOptionArgs{...} }
type RuleGroupRuleOptionArrayInput interface {
	pulumi.Input

	ToRuleGroupRuleOptionArrayOutput() RuleGroupRuleOptionArrayOutput
	ToRuleGroupRuleOptionArrayOutputWithContext(context.Context) RuleGroupRuleOptionArrayOutput
}

type RuleGroupRuleOptionArray []RuleGroupRuleOptionInput

func (RuleGroupRuleOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupRuleOption)(nil)).Elem()
}

func (i RuleGroupRuleOptionArray) ToRuleGroupRuleOptionArrayOutput() RuleGroupRuleOptionArrayOutput {
	return i.ToRuleGroupRuleOptionArrayOutputWithContext(context.Background())
}

func (i RuleGroupRuleOptionArray) ToRuleGroupRuleOptionArrayOutputWithContext(ctx context.Context) RuleGroupRuleOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleOptionArrayOutput)
}

type RuleGroupRuleOptionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleOption)(nil)).Elem()
}

func (o RuleGroupRuleOptionOutput) ToRuleGroupRuleOptionOutput() RuleGroupRuleOptionOutput {
	return o
}

func (o RuleGroupRuleOptionOutput) ToRuleGroupRuleOptionOutputWithContext(ctx context.Context) RuleGroupRuleOptionOutput {
	return o
}

func (o RuleGroupRuleOptionOutput) Keyword() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupRuleOption) string { return v.Keyword }).(pulumi.StringOutput)
}

func (o RuleGroupRuleOptionOutput) Settings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleGroupRuleOption) []string { return v.Settings }).(pulumi.StringArrayOutput)
}

type RuleGroupRuleOptionArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupRuleOption)(nil)).Elem()
}

func (o RuleGroupRuleOptionArrayOutput) ToRuleGroupRuleOptionArrayOutput() RuleGroupRuleOptionArrayOutput {
	return o
}

func (o RuleGroupRuleOptionArrayOutput) ToRuleGroupRuleOptionArrayOutputWithContext(ctx context.Context) RuleGroupRuleOptionArrayOutput {
	return o
}

func (o RuleGroupRuleOptionArrayOutput) Index(i pulumi.IntInput) RuleGroupRuleOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupRuleOption {
		return vs[0].([]RuleGroupRuleOption)[vs[1].(int)]
	}).(RuleGroupRuleOptionOutput)
}

type RuleGroupRuleVariables struct {
	IPSets   interface{} `pulumi:"iPSets"`
	PortSets interface{} `pulumi:"portSets"`
}

// RuleGroupRuleVariablesInput is an input type that accepts RuleGroupRuleVariablesArgs and RuleGroupRuleVariablesOutput values.
// You can construct a concrete instance of `RuleGroupRuleVariablesInput` via:
//
//          RuleGroupRuleVariablesArgs{...}
type RuleGroupRuleVariablesInput interface {
	pulumi.Input

	ToRuleGroupRuleVariablesOutput() RuleGroupRuleVariablesOutput
	ToRuleGroupRuleVariablesOutputWithContext(context.Context) RuleGroupRuleVariablesOutput
}

type RuleGroupRuleVariablesArgs struct {
	IPSets   pulumi.Input `pulumi:"iPSets"`
	PortSets pulumi.Input `pulumi:"portSets"`
}

func (RuleGroupRuleVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleVariables)(nil)).Elem()
}

func (i RuleGroupRuleVariablesArgs) ToRuleGroupRuleVariablesOutput() RuleGroupRuleVariablesOutput {
	return i.ToRuleGroupRuleVariablesOutputWithContext(context.Background())
}

func (i RuleGroupRuleVariablesArgs) ToRuleGroupRuleVariablesOutputWithContext(ctx context.Context) RuleGroupRuleVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleVariablesOutput)
}

func (i RuleGroupRuleVariablesArgs) ToRuleGroupRuleVariablesPtrOutput() RuleGroupRuleVariablesPtrOutput {
	return i.ToRuleGroupRuleVariablesPtrOutputWithContext(context.Background())
}

func (i RuleGroupRuleVariablesArgs) ToRuleGroupRuleVariablesPtrOutputWithContext(ctx context.Context) RuleGroupRuleVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleVariablesOutput).ToRuleGroupRuleVariablesPtrOutputWithContext(ctx)
}

// RuleGroupRuleVariablesPtrInput is an input type that accepts RuleGroupRuleVariablesArgs, RuleGroupRuleVariablesPtr and RuleGroupRuleVariablesPtrOutput values.
// You can construct a concrete instance of `RuleGroupRuleVariablesPtrInput` via:
//
//          RuleGroupRuleVariablesArgs{...}
//
//  or:
//
//          nil
type RuleGroupRuleVariablesPtrInput interface {
	pulumi.Input

	ToRuleGroupRuleVariablesPtrOutput() RuleGroupRuleVariablesPtrOutput
	ToRuleGroupRuleVariablesPtrOutputWithContext(context.Context) RuleGroupRuleVariablesPtrOutput
}

type ruleGroupRuleVariablesPtrType RuleGroupRuleVariablesArgs

func RuleGroupRuleVariablesPtr(v *RuleGroupRuleVariablesArgs) RuleGroupRuleVariablesPtrInput {
	return (*ruleGroupRuleVariablesPtrType)(v)
}

func (*ruleGroupRuleVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleVariables)(nil)).Elem()
}

func (i *ruleGroupRuleVariablesPtrType) ToRuleGroupRuleVariablesPtrOutput() RuleGroupRuleVariablesPtrOutput {
	return i.ToRuleGroupRuleVariablesPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRuleVariablesPtrType) ToRuleGroupRuleVariablesPtrOutputWithContext(ctx context.Context) RuleGroupRuleVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleVariablesPtrOutput)
}

type RuleGroupRuleVariablesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleVariables)(nil)).Elem()
}

func (o RuleGroupRuleVariablesOutput) ToRuleGroupRuleVariablesOutput() RuleGroupRuleVariablesOutput {
	return o
}

func (o RuleGroupRuleVariablesOutput) ToRuleGroupRuleVariablesOutputWithContext(ctx context.Context) RuleGroupRuleVariablesOutput {
	return o
}

func (o RuleGroupRuleVariablesOutput) ToRuleGroupRuleVariablesPtrOutput() RuleGroupRuleVariablesPtrOutput {
	return o.ToRuleGroupRuleVariablesPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleVariablesOutput) ToRuleGroupRuleVariablesPtrOutputWithContext(ctx context.Context) RuleGroupRuleVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRuleVariables) *RuleGroupRuleVariables {
		return &v
	}).(RuleGroupRuleVariablesPtrOutput)
}

func (o RuleGroupRuleVariablesOutput) IPSets() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupRuleVariables) interface{} { return v.IPSets }).(pulumi.AnyOutput)
}

func (o RuleGroupRuleVariablesOutput) PortSets() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupRuleVariables) interface{} { return v.PortSets }).(pulumi.AnyOutput)
}

type RuleGroupRuleVariablesPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleVariables)(nil)).Elem()
}

func (o RuleGroupRuleVariablesPtrOutput) ToRuleGroupRuleVariablesPtrOutput() RuleGroupRuleVariablesPtrOutput {
	return o
}

func (o RuleGroupRuleVariablesPtrOutput) ToRuleGroupRuleVariablesPtrOutputWithContext(ctx context.Context) RuleGroupRuleVariablesPtrOutput {
	return o
}

func (o RuleGroupRuleVariablesPtrOutput) Elem() RuleGroupRuleVariablesOutput {
	return o.ApplyT(func(v *RuleGroupRuleVariables) RuleGroupRuleVariables {
		if v != nil {
			return *v
		}
		var ret RuleGroupRuleVariables
		return ret
	}).(RuleGroupRuleVariablesOutput)
}

func (o RuleGroupRuleVariablesPtrOutput) IPSets() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupRuleVariables) interface{} {
		if v == nil {
			return nil
		}
		return v.IPSets
	}).(pulumi.AnyOutput)
}

func (o RuleGroupRuleVariablesPtrOutput) PortSets() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupRuleVariables) interface{} {
		if v == nil {
			return nil
		}
		return v.PortSets
	}).(pulumi.AnyOutput)
}

type RuleGroupRulesSource struct {
	RulesSourceList                *RuleGroupRulesSourceList                `pulumi:"rulesSourceList"`
	RulesString                    *string                                  `pulumi:"rulesString"`
	StatefulRules                  []RuleGroupStatefulRule                  `pulumi:"statefulRules"`
	StatelessRulesAndCustomActions *RuleGroupStatelessRulesAndCustomActions `pulumi:"statelessRulesAndCustomActions"`
}

// RuleGroupRulesSourceInput is an input type that accepts RuleGroupRulesSourceArgs and RuleGroupRulesSourceOutput values.
// You can construct a concrete instance of `RuleGroupRulesSourceInput` via:
//
//          RuleGroupRulesSourceArgs{...}
type RuleGroupRulesSourceInput interface {
	pulumi.Input

	ToRuleGroupRulesSourceOutput() RuleGroupRulesSourceOutput
	ToRuleGroupRulesSourceOutputWithContext(context.Context) RuleGroupRulesSourceOutput
}

type RuleGroupRulesSourceArgs struct {
	RulesSourceList                RuleGroupRulesSourceListPtrInput                `pulumi:"rulesSourceList"`
	RulesString                    pulumi.StringPtrInput                           `pulumi:"rulesString"`
	StatefulRules                  RuleGroupStatefulRuleArrayInput                 `pulumi:"statefulRules"`
	StatelessRulesAndCustomActions RuleGroupStatelessRulesAndCustomActionsPtrInput `pulumi:"statelessRulesAndCustomActions"`
}

func (RuleGroupRulesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRulesSource)(nil)).Elem()
}

func (i RuleGroupRulesSourceArgs) ToRuleGroupRulesSourceOutput() RuleGroupRulesSourceOutput {
	return i.ToRuleGroupRulesSourceOutputWithContext(context.Background())
}

func (i RuleGroupRulesSourceArgs) ToRuleGroupRulesSourceOutputWithContext(ctx context.Context) RuleGroupRulesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourceOutput)
}

func (i RuleGroupRulesSourceArgs) ToRuleGroupRulesSourcePtrOutput() RuleGroupRulesSourcePtrOutput {
	return i.ToRuleGroupRulesSourcePtrOutputWithContext(context.Background())
}

func (i RuleGroupRulesSourceArgs) ToRuleGroupRulesSourcePtrOutputWithContext(ctx context.Context) RuleGroupRulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourceOutput).ToRuleGroupRulesSourcePtrOutputWithContext(ctx)
}

// RuleGroupRulesSourcePtrInput is an input type that accepts RuleGroupRulesSourceArgs, RuleGroupRulesSourcePtr and RuleGroupRulesSourcePtrOutput values.
// You can construct a concrete instance of `RuleGroupRulesSourcePtrInput` via:
//
//          RuleGroupRulesSourceArgs{...}
//
//  or:
//
//          nil
type RuleGroupRulesSourcePtrInput interface {
	pulumi.Input

	ToRuleGroupRulesSourcePtrOutput() RuleGroupRulesSourcePtrOutput
	ToRuleGroupRulesSourcePtrOutputWithContext(context.Context) RuleGroupRulesSourcePtrOutput
}

type ruleGroupRulesSourcePtrType RuleGroupRulesSourceArgs

func RuleGroupRulesSourcePtr(v *RuleGroupRulesSourceArgs) RuleGroupRulesSourcePtrInput {
	return (*ruleGroupRulesSourcePtrType)(v)
}

func (*ruleGroupRulesSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRulesSource)(nil)).Elem()
}

func (i *ruleGroupRulesSourcePtrType) ToRuleGroupRulesSourcePtrOutput() RuleGroupRulesSourcePtrOutput {
	return i.ToRuleGroupRulesSourcePtrOutputWithContext(context.Background())
}

func (i *ruleGroupRulesSourcePtrType) ToRuleGroupRulesSourcePtrOutputWithContext(ctx context.Context) RuleGroupRulesSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourcePtrOutput)
}

type RuleGroupRulesSourceOutput struct{ *pulumi.OutputState }

func (RuleGroupRulesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRulesSource)(nil)).Elem()
}

func (o RuleGroupRulesSourceOutput) ToRuleGroupRulesSourceOutput() RuleGroupRulesSourceOutput {
	return o
}

func (o RuleGroupRulesSourceOutput) ToRuleGroupRulesSourceOutputWithContext(ctx context.Context) RuleGroupRulesSourceOutput {
	return o
}

func (o RuleGroupRulesSourceOutput) ToRuleGroupRulesSourcePtrOutput() RuleGroupRulesSourcePtrOutput {
	return o.ToRuleGroupRulesSourcePtrOutputWithContext(context.Background())
}

func (o RuleGroupRulesSourceOutput) ToRuleGroupRulesSourcePtrOutputWithContext(ctx context.Context) RuleGroupRulesSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRulesSource) *RuleGroupRulesSource {
		return &v
	}).(RuleGroupRulesSourcePtrOutput)
}

func (o RuleGroupRulesSourceOutput) RulesSourceList() RuleGroupRulesSourceListPtrOutput {
	return o.ApplyT(func(v RuleGroupRulesSource) *RuleGroupRulesSourceList { return v.RulesSourceList }).(RuleGroupRulesSourceListPtrOutput)
}

func (o RuleGroupRulesSourceOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupRulesSource) *string { return v.RulesString }).(pulumi.StringPtrOutput)
}

func (o RuleGroupRulesSourceOutput) StatefulRules() RuleGroupStatefulRuleArrayOutput {
	return o.ApplyT(func(v RuleGroupRulesSource) []RuleGroupStatefulRule { return v.StatefulRules }).(RuleGroupStatefulRuleArrayOutput)
}

func (o RuleGroupRulesSourceOutput) StatelessRulesAndCustomActions() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyT(func(v RuleGroupRulesSource) *RuleGroupStatelessRulesAndCustomActions {
		return v.StatelessRulesAndCustomActions
	}).(RuleGroupStatelessRulesAndCustomActionsPtrOutput)
}

type RuleGroupRulesSourcePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRulesSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRulesSource)(nil)).Elem()
}

func (o RuleGroupRulesSourcePtrOutput) ToRuleGroupRulesSourcePtrOutput() RuleGroupRulesSourcePtrOutput {
	return o
}

func (o RuleGroupRulesSourcePtrOutput) ToRuleGroupRulesSourcePtrOutputWithContext(ctx context.Context) RuleGroupRulesSourcePtrOutput {
	return o
}

func (o RuleGroupRulesSourcePtrOutput) Elem() RuleGroupRulesSourceOutput {
	return o.ApplyT(func(v *RuleGroupRulesSource) RuleGroupRulesSource {
		if v != nil {
			return *v
		}
		var ret RuleGroupRulesSource
		return ret
	}).(RuleGroupRulesSourceOutput)
}

func (o RuleGroupRulesSourcePtrOutput) RulesSourceList() RuleGroupRulesSourceListPtrOutput {
	return o.ApplyT(func(v *RuleGroupRulesSource) *RuleGroupRulesSourceList {
		if v == nil {
			return nil
		}
		return v.RulesSourceList
	}).(RuleGroupRulesSourceListPtrOutput)
}

func (o RuleGroupRulesSourcePtrOutput) RulesString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupRulesSource) *string {
		if v == nil {
			return nil
		}
		return v.RulesString
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupRulesSourcePtrOutput) StatefulRules() RuleGroupStatefulRuleArrayOutput {
	return o.ApplyT(func(v *RuleGroupRulesSource) []RuleGroupStatefulRule {
		if v == nil {
			return nil
		}
		return v.StatefulRules
	}).(RuleGroupStatefulRuleArrayOutput)
}

func (o RuleGroupRulesSourcePtrOutput) StatelessRulesAndCustomActions() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyT(func(v *RuleGroupRulesSource) *RuleGroupStatelessRulesAndCustomActions {
		if v == nil {
			return nil
		}
		return v.StatelessRulesAndCustomActions
	}).(RuleGroupStatelessRulesAndCustomActionsPtrOutput)
}

type RuleGroupRulesSourceList struct {
	GeneratedRulesType RuleGroupGeneratedRulesType `pulumi:"generatedRulesType"`
	TargetTypes        []RuleGroupTargetType       `pulumi:"targetTypes"`
	Targets            []string                    `pulumi:"targets"`
}

// RuleGroupRulesSourceListInput is an input type that accepts RuleGroupRulesSourceListArgs and RuleGroupRulesSourceListOutput values.
// You can construct a concrete instance of `RuleGroupRulesSourceListInput` via:
//
//          RuleGroupRulesSourceListArgs{...}
type RuleGroupRulesSourceListInput interface {
	pulumi.Input

	ToRuleGroupRulesSourceListOutput() RuleGroupRulesSourceListOutput
	ToRuleGroupRulesSourceListOutputWithContext(context.Context) RuleGroupRulesSourceListOutput
}

type RuleGroupRulesSourceListArgs struct {
	GeneratedRulesType RuleGroupGeneratedRulesTypeInput `pulumi:"generatedRulesType"`
	TargetTypes        RuleGroupTargetTypeArrayInput    `pulumi:"targetTypes"`
	Targets            pulumi.StringArrayInput          `pulumi:"targets"`
}

func (RuleGroupRulesSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRulesSourceList)(nil)).Elem()
}

func (i RuleGroupRulesSourceListArgs) ToRuleGroupRulesSourceListOutput() RuleGroupRulesSourceListOutput {
	return i.ToRuleGroupRulesSourceListOutputWithContext(context.Background())
}

func (i RuleGroupRulesSourceListArgs) ToRuleGroupRulesSourceListOutputWithContext(ctx context.Context) RuleGroupRulesSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourceListOutput)
}

func (i RuleGroupRulesSourceListArgs) ToRuleGroupRulesSourceListPtrOutput() RuleGroupRulesSourceListPtrOutput {
	return i.ToRuleGroupRulesSourceListPtrOutputWithContext(context.Background())
}

func (i RuleGroupRulesSourceListArgs) ToRuleGroupRulesSourceListPtrOutputWithContext(ctx context.Context) RuleGroupRulesSourceListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourceListOutput).ToRuleGroupRulesSourceListPtrOutputWithContext(ctx)
}

// RuleGroupRulesSourceListPtrInput is an input type that accepts RuleGroupRulesSourceListArgs, RuleGroupRulesSourceListPtr and RuleGroupRulesSourceListPtrOutput values.
// You can construct a concrete instance of `RuleGroupRulesSourceListPtrInput` via:
//
//          RuleGroupRulesSourceListArgs{...}
//
//  or:
//
//          nil
type RuleGroupRulesSourceListPtrInput interface {
	pulumi.Input

	ToRuleGroupRulesSourceListPtrOutput() RuleGroupRulesSourceListPtrOutput
	ToRuleGroupRulesSourceListPtrOutputWithContext(context.Context) RuleGroupRulesSourceListPtrOutput
}

type ruleGroupRulesSourceListPtrType RuleGroupRulesSourceListArgs

func RuleGroupRulesSourceListPtr(v *RuleGroupRulesSourceListArgs) RuleGroupRulesSourceListPtrInput {
	return (*ruleGroupRulesSourceListPtrType)(v)
}

func (*ruleGroupRulesSourceListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRulesSourceList)(nil)).Elem()
}

func (i *ruleGroupRulesSourceListPtrType) ToRuleGroupRulesSourceListPtrOutput() RuleGroupRulesSourceListPtrOutput {
	return i.ToRuleGroupRulesSourceListPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRulesSourceListPtrType) ToRuleGroupRulesSourceListPtrOutputWithContext(ctx context.Context) RuleGroupRulesSourceListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRulesSourceListPtrOutput)
}

type RuleGroupRulesSourceListOutput struct{ *pulumi.OutputState }

func (RuleGroupRulesSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRulesSourceList)(nil)).Elem()
}

func (o RuleGroupRulesSourceListOutput) ToRuleGroupRulesSourceListOutput() RuleGroupRulesSourceListOutput {
	return o
}

func (o RuleGroupRulesSourceListOutput) ToRuleGroupRulesSourceListOutputWithContext(ctx context.Context) RuleGroupRulesSourceListOutput {
	return o
}

func (o RuleGroupRulesSourceListOutput) ToRuleGroupRulesSourceListPtrOutput() RuleGroupRulesSourceListPtrOutput {
	return o.ToRuleGroupRulesSourceListPtrOutputWithContext(context.Background())
}

func (o RuleGroupRulesSourceListOutput) ToRuleGroupRulesSourceListPtrOutputWithContext(ctx context.Context) RuleGroupRulesSourceListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRulesSourceList) *RuleGroupRulesSourceList {
		return &v
	}).(RuleGroupRulesSourceListPtrOutput)
}

func (o RuleGroupRulesSourceListOutput) GeneratedRulesType() RuleGroupGeneratedRulesTypeOutput {
	return o.ApplyT(func(v RuleGroupRulesSourceList) RuleGroupGeneratedRulesType { return v.GeneratedRulesType }).(RuleGroupGeneratedRulesTypeOutput)
}

func (o RuleGroupRulesSourceListOutput) TargetTypes() RuleGroupTargetTypeArrayOutput {
	return o.ApplyT(func(v RuleGroupRulesSourceList) []RuleGroupTargetType { return v.TargetTypes }).(RuleGroupTargetTypeArrayOutput)
}

func (o RuleGroupRulesSourceListOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleGroupRulesSourceList) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

type RuleGroupRulesSourceListPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRulesSourceListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRulesSourceList)(nil)).Elem()
}

func (o RuleGroupRulesSourceListPtrOutput) ToRuleGroupRulesSourceListPtrOutput() RuleGroupRulesSourceListPtrOutput {
	return o
}

func (o RuleGroupRulesSourceListPtrOutput) ToRuleGroupRulesSourceListPtrOutputWithContext(ctx context.Context) RuleGroupRulesSourceListPtrOutput {
	return o
}

func (o RuleGroupRulesSourceListPtrOutput) Elem() RuleGroupRulesSourceListOutput {
	return o.ApplyT(func(v *RuleGroupRulesSourceList) RuleGroupRulesSourceList {
		if v != nil {
			return *v
		}
		var ret RuleGroupRulesSourceList
		return ret
	}).(RuleGroupRulesSourceListOutput)
}

func (o RuleGroupRulesSourceListPtrOutput) GeneratedRulesType() RuleGroupGeneratedRulesTypePtrOutput {
	return o.ApplyT(func(v *RuleGroupRulesSourceList) *RuleGroupGeneratedRulesType {
		if v == nil {
			return nil
		}
		return &v.GeneratedRulesType
	}).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (o RuleGroupRulesSourceListPtrOutput) TargetTypes() RuleGroupTargetTypeArrayOutput {
	return o.ApplyT(func(v *RuleGroupRulesSourceList) []RuleGroupTargetType {
		if v == nil {
			return nil
		}
		return v.TargetTypes
	}).(RuleGroupTargetTypeArrayOutput)
}

func (o RuleGroupRulesSourceListPtrOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleGroupRulesSourceList) []string {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(pulumi.StringArrayOutput)
}

type RuleGroupStatefulRule struct {
	Action      RuleGroupStatefulRuleAction `pulumi:"action"`
	Header      RuleGroupHeader             `pulumi:"header"`
	RuleOptions []RuleGroupRuleOption       `pulumi:"ruleOptions"`
}

// RuleGroupStatefulRuleInput is an input type that accepts RuleGroupStatefulRuleArgs and RuleGroupStatefulRuleOutput values.
// You can construct a concrete instance of `RuleGroupStatefulRuleInput` via:
//
//          RuleGroupStatefulRuleArgs{...}
type RuleGroupStatefulRuleInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleOutput() RuleGroupStatefulRuleOutput
	ToRuleGroupStatefulRuleOutputWithContext(context.Context) RuleGroupStatefulRuleOutput
}

type RuleGroupStatefulRuleArgs struct {
	Action      RuleGroupStatefulRuleActionInput `pulumi:"action"`
	Header      RuleGroupHeaderInput             `pulumi:"header"`
	RuleOptions RuleGroupRuleOptionArrayInput    `pulumi:"ruleOptions"`
}

func (RuleGroupStatefulRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRule)(nil)).Elem()
}

func (i RuleGroupStatefulRuleArgs) ToRuleGroupStatefulRuleOutput() RuleGroupStatefulRuleOutput {
	return i.ToRuleGroupStatefulRuleOutputWithContext(context.Background())
}

func (i RuleGroupStatefulRuleArgs) ToRuleGroupStatefulRuleOutputWithContext(ctx context.Context) RuleGroupStatefulRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatefulRuleOutput)
}

// RuleGroupStatefulRuleArrayInput is an input type that accepts RuleGroupStatefulRuleArray and RuleGroupStatefulRuleArrayOutput values.
// You can construct a concrete instance of `RuleGroupStatefulRuleArrayInput` via:
//
//          RuleGroupStatefulRuleArray{ RuleGroupStatefulRuleArgs{...} }
type RuleGroupStatefulRuleArrayInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleArrayOutput() RuleGroupStatefulRuleArrayOutput
	ToRuleGroupStatefulRuleArrayOutputWithContext(context.Context) RuleGroupStatefulRuleArrayOutput
}

type RuleGroupStatefulRuleArray []RuleGroupStatefulRuleInput

func (RuleGroupStatefulRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatefulRule)(nil)).Elem()
}

func (i RuleGroupStatefulRuleArray) ToRuleGroupStatefulRuleArrayOutput() RuleGroupStatefulRuleArrayOutput {
	return i.ToRuleGroupStatefulRuleArrayOutputWithContext(context.Background())
}

func (i RuleGroupStatefulRuleArray) ToRuleGroupStatefulRuleArrayOutputWithContext(ctx context.Context) RuleGroupStatefulRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatefulRuleArrayOutput)
}

type RuleGroupStatefulRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRule)(nil)).Elem()
}

func (o RuleGroupStatefulRuleOutput) ToRuleGroupStatefulRuleOutput() RuleGroupStatefulRuleOutput {
	return o
}

func (o RuleGroupStatefulRuleOutput) ToRuleGroupStatefulRuleOutputWithContext(ctx context.Context) RuleGroupStatefulRuleOutput {
	return o
}

func (o RuleGroupStatefulRuleOutput) Action() RuleGroupStatefulRuleActionOutput {
	return o.ApplyT(func(v RuleGroupStatefulRule) RuleGroupStatefulRuleAction { return v.Action }).(RuleGroupStatefulRuleActionOutput)
}

func (o RuleGroupStatefulRuleOutput) Header() RuleGroupHeaderOutput {
	return o.ApplyT(func(v RuleGroupStatefulRule) RuleGroupHeader { return v.Header }).(RuleGroupHeaderOutput)
}

func (o RuleGroupStatefulRuleOutput) RuleOptions() RuleGroupRuleOptionArrayOutput {
	return o.ApplyT(func(v RuleGroupStatefulRule) []RuleGroupRuleOption { return v.RuleOptions }).(RuleGroupRuleOptionArrayOutput)
}

type RuleGroupStatefulRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatefulRule)(nil)).Elem()
}

func (o RuleGroupStatefulRuleArrayOutput) ToRuleGroupStatefulRuleArrayOutput() RuleGroupStatefulRuleArrayOutput {
	return o
}

func (o RuleGroupStatefulRuleArrayOutput) ToRuleGroupStatefulRuleArrayOutputWithContext(ctx context.Context) RuleGroupStatefulRuleArrayOutput {
	return o
}

func (o RuleGroupStatefulRuleArrayOutput) Index(i pulumi.IntInput) RuleGroupStatefulRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupStatefulRule {
		return vs[0].([]RuleGroupStatefulRule)[vs[1].(int)]
	}).(RuleGroupStatefulRuleOutput)
}

type RuleGroupStatelessRule struct {
	Priority       int                     `pulumi:"priority"`
	RuleDefinition RuleGroupRuleDefinition `pulumi:"ruleDefinition"`
}

// RuleGroupStatelessRuleInput is an input type that accepts RuleGroupStatelessRuleArgs and RuleGroupStatelessRuleOutput values.
// You can construct a concrete instance of `RuleGroupStatelessRuleInput` via:
//
//          RuleGroupStatelessRuleArgs{...}
type RuleGroupStatelessRuleInput interface {
	pulumi.Input

	ToRuleGroupStatelessRuleOutput() RuleGroupStatelessRuleOutput
	ToRuleGroupStatelessRuleOutputWithContext(context.Context) RuleGroupStatelessRuleOutput
}

type RuleGroupStatelessRuleArgs struct {
	Priority       pulumi.IntInput              `pulumi:"priority"`
	RuleDefinition RuleGroupRuleDefinitionInput `pulumi:"ruleDefinition"`
}

func (RuleGroupStatelessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatelessRule)(nil)).Elem()
}

func (i RuleGroupStatelessRuleArgs) ToRuleGroupStatelessRuleOutput() RuleGroupStatelessRuleOutput {
	return i.ToRuleGroupStatelessRuleOutputWithContext(context.Background())
}

func (i RuleGroupStatelessRuleArgs) ToRuleGroupStatelessRuleOutputWithContext(ctx context.Context) RuleGroupStatelessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatelessRuleOutput)
}

// RuleGroupStatelessRuleArrayInput is an input type that accepts RuleGroupStatelessRuleArray and RuleGroupStatelessRuleArrayOutput values.
// You can construct a concrete instance of `RuleGroupStatelessRuleArrayInput` via:
//
//          RuleGroupStatelessRuleArray{ RuleGroupStatelessRuleArgs{...} }
type RuleGroupStatelessRuleArrayInput interface {
	pulumi.Input

	ToRuleGroupStatelessRuleArrayOutput() RuleGroupStatelessRuleArrayOutput
	ToRuleGroupStatelessRuleArrayOutputWithContext(context.Context) RuleGroupStatelessRuleArrayOutput
}

type RuleGroupStatelessRuleArray []RuleGroupStatelessRuleInput

func (RuleGroupStatelessRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatelessRule)(nil)).Elem()
}

func (i RuleGroupStatelessRuleArray) ToRuleGroupStatelessRuleArrayOutput() RuleGroupStatelessRuleArrayOutput {
	return i.ToRuleGroupStatelessRuleArrayOutputWithContext(context.Background())
}

func (i RuleGroupStatelessRuleArray) ToRuleGroupStatelessRuleArrayOutputWithContext(ctx context.Context) RuleGroupStatelessRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatelessRuleArrayOutput)
}

type RuleGroupStatelessRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupStatelessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatelessRule)(nil)).Elem()
}

func (o RuleGroupStatelessRuleOutput) ToRuleGroupStatelessRuleOutput() RuleGroupStatelessRuleOutput {
	return o
}

func (o RuleGroupStatelessRuleOutput) ToRuleGroupStatelessRuleOutputWithContext(ctx context.Context) RuleGroupStatelessRuleOutput {
	return o
}

func (o RuleGroupStatelessRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupStatelessRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o RuleGroupStatelessRuleOutput) RuleDefinition() RuleGroupRuleDefinitionOutput {
	return o.ApplyT(func(v RuleGroupStatelessRule) RuleGroupRuleDefinition { return v.RuleDefinition }).(RuleGroupRuleDefinitionOutput)
}

type RuleGroupStatelessRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupStatelessRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatelessRule)(nil)).Elem()
}

func (o RuleGroupStatelessRuleArrayOutput) ToRuleGroupStatelessRuleArrayOutput() RuleGroupStatelessRuleArrayOutput {
	return o
}

func (o RuleGroupStatelessRuleArrayOutput) ToRuleGroupStatelessRuleArrayOutputWithContext(ctx context.Context) RuleGroupStatelessRuleArrayOutput {
	return o
}

func (o RuleGroupStatelessRuleArrayOutput) Index(i pulumi.IntInput) RuleGroupStatelessRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupStatelessRule {
		return vs[0].([]RuleGroupStatelessRule)[vs[1].(int)]
	}).(RuleGroupStatelessRuleOutput)
}

type RuleGroupStatelessRulesAndCustomActions struct {
	CustomActions  []RuleGroupCustomAction  `pulumi:"customActions"`
	StatelessRules []RuleGroupStatelessRule `pulumi:"statelessRules"`
}

// RuleGroupStatelessRulesAndCustomActionsInput is an input type that accepts RuleGroupStatelessRulesAndCustomActionsArgs and RuleGroupStatelessRulesAndCustomActionsOutput values.
// You can construct a concrete instance of `RuleGroupStatelessRulesAndCustomActionsInput` via:
//
//          RuleGroupStatelessRulesAndCustomActionsArgs{...}
type RuleGroupStatelessRulesAndCustomActionsInput interface {
	pulumi.Input

	ToRuleGroupStatelessRulesAndCustomActionsOutput() RuleGroupStatelessRulesAndCustomActionsOutput
	ToRuleGroupStatelessRulesAndCustomActionsOutputWithContext(context.Context) RuleGroupStatelessRulesAndCustomActionsOutput
}

type RuleGroupStatelessRulesAndCustomActionsArgs struct {
	CustomActions  RuleGroupCustomActionArrayInput  `pulumi:"customActions"`
	StatelessRules RuleGroupStatelessRuleArrayInput `pulumi:"statelessRules"`
}

func (RuleGroupStatelessRulesAndCustomActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatelessRulesAndCustomActions)(nil)).Elem()
}

func (i RuleGroupStatelessRulesAndCustomActionsArgs) ToRuleGroupStatelessRulesAndCustomActionsOutput() RuleGroupStatelessRulesAndCustomActionsOutput {
	return i.ToRuleGroupStatelessRulesAndCustomActionsOutputWithContext(context.Background())
}

func (i RuleGroupStatelessRulesAndCustomActionsArgs) ToRuleGroupStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatelessRulesAndCustomActionsOutput)
}

func (i RuleGroupStatelessRulesAndCustomActionsArgs) ToRuleGroupStatelessRulesAndCustomActionsPtrOutput() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return i.ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (i RuleGroupStatelessRulesAndCustomActionsArgs) ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatelessRulesAndCustomActionsOutput).ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(ctx)
}

// RuleGroupStatelessRulesAndCustomActionsPtrInput is an input type that accepts RuleGroupStatelessRulesAndCustomActionsArgs, RuleGroupStatelessRulesAndCustomActionsPtr and RuleGroupStatelessRulesAndCustomActionsPtrOutput values.
// You can construct a concrete instance of `RuleGroupStatelessRulesAndCustomActionsPtrInput` via:
//
//          RuleGroupStatelessRulesAndCustomActionsArgs{...}
//
//  or:
//
//          nil
type RuleGroupStatelessRulesAndCustomActionsPtrInput interface {
	pulumi.Input

	ToRuleGroupStatelessRulesAndCustomActionsPtrOutput() RuleGroupStatelessRulesAndCustomActionsPtrOutput
	ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(context.Context) RuleGroupStatelessRulesAndCustomActionsPtrOutput
}

type ruleGroupStatelessRulesAndCustomActionsPtrType RuleGroupStatelessRulesAndCustomActionsArgs

func RuleGroupStatelessRulesAndCustomActionsPtr(v *RuleGroupStatelessRulesAndCustomActionsArgs) RuleGroupStatelessRulesAndCustomActionsPtrInput {
	return (*ruleGroupStatelessRulesAndCustomActionsPtrType)(v)
}

func (*ruleGroupStatelessRulesAndCustomActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatelessRulesAndCustomActions)(nil)).Elem()
}

func (i *ruleGroupStatelessRulesAndCustomActionsPtrType) ToRuleGroupStatelessRulesAndCustomActionsPtrOutput() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return i.ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (i *ruleGroupStatelessRulesAndCustomActionsPtrType) ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatelessRulesAndCustomActionsPtrOutput)
}

type RuleGroupStatelessRulesAndCustomActionsOutput struct{ *pulumi.OutputState }

func (RuleGroupStatelessRulesAndCustomActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatelessRulesAndCustomActions)(nil)).Elem()
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) ToRuleGroupStatelessRulesAndCustomActionsOutput() RuleGroupStatelessRulesAndCustomActionsOutput {
	return o
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) ToRuleGroupStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsOutput {
	return o
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) ToRuleGroupStatelessRulesAndCustomActionsPtrOutput() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o.ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupStatelessRulesAndCustomActions) *RuleGroupStatelessRulesAndCustomActions {
		return &v
	}).(RuleGroupStatelessRulesAndCustomActionsPtrOutput)
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) CustomActions() RuleGroupCustomActionArrayOutput {
	return o.ApplyT(func(v RuleGroupStatelessRulesAndCustomActions) []RuleGroupCustomAction { return v.CustomActions }).(RuleGroupCustomActionArrayOutput)
}

func (o RuleGroupStatelessRulesAndCustomActionsOutput) StatelessRules() RuleGroupStatelessRuleArrayOutput {
	return o.ApplyT(func(v RuleGroupStatelessRulesAndCustomActions) []RuleGroupStatelessRule { return v.StatelessRules }).(RuleGroupStatelessRuleArrayOutput)
}

type RuleGroupStatelessRulesAndCustomActionsPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupStatelessRulesAndCustomActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatelessRulesAndCustomActions)(nil)).Elem()
}

func (o RuleGroupStatelessRulesAndCustomActionsPtrOutput) ToRuleGroupStatelessRulesAndCustomActionsPtrOutput() RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o
}

func (o RuleGroupStatelessRulesAndCustomActionsPtrOutput) ToRuleGroupStatelessRulesAndCustomActionsPtrOutputWithContext(ctx context.Context) RuleGroupStatelessRulesAndCustomActionsPtrOutput {
	return o
}

func (o RuleGroupStatelessRulesAndCustomActionsPtrOutput) Elem() RuleGroupStatelessRulesAndCustomActionsOutput {
	return o.ApplyT(func(v *RuleGroupStatelessRulesAndCustomActions) RuleGroupStatelessRulesAndCustomActions {
		if v != nil {
			return *v
		}
		var ret RuleGroupStatelessRulesAndCustomActions
		return ret
	}).(RuleGroupStatelessRulesAndCustomActionsOutput)
}

func (o RuleGroupStatelessRulesAndCustomActionsPtrOutput) CustomActions() RuleGroupCustomActionArrayOutput {
	return o.ApplyT(func(v *RuleGroupStatelessRulesAndCustomActions) []RuleGroupCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomActions
	}).(RuleGroupCustomActionArrayOutput)
}

func (o RuleGroupStatelessRulesAndCustomActionsPtrOutput) StatelessRules() RuleGroupStatelessRuleArrayOutput {
	return o.ApplyT(func(v *RuleGroupStatelessRulesAndCustomActions) []RuleGroupStatelessRule {
		if v == nil {
			return nil
		}
		return v.StatelessRules
	}).(RuleGroupStatelessRuleArrayOutput)
}

type RuleGroupTCPFlagField struct {
	Flags []RuleGroupTCPFlag `pulumi:"flags"`
	Masks []RuleGroupTCPFlag `pulumi:"masks"`
}

// RuleGroupTCPFlagFieldInput is an input type that accepts RuleGroupTCPFlagFieldArgs and RuleGroupTCPFlagFieldOutput values.
// You can construct a concrete instance of `RuleGroupTCPFlagFieldInput` via:
//
//          RuleGroupTCPFlagFieldArgs{...}
type RuleGroupTCPFlagFieldInput interface {
	pulumi.Input

	ToRuleGroupTCPFlagFieldOutput() RuleGroupTCPFlagFieldOutput
	ToRuleGroupTCPFlagFieldOutputWithContext(context.Context) RuleGroupTCPFlagFieldOutput
}

type RuleGroupTCPFlagFieldArgs struct {
	Flags RuleGroupTCPFlagArrayInput `pulumi:"flags"`
	Masks RuleGroupTCPFlagArrayInput `pulumi:"masks"`
}

func (RuleGroupTCPFlagFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTCPFlagField)(nil)).Elem()
}

func (i RuleGroupTCPFlagFieldArgs) ToRuleGroupTCPFlagFieldOutput() RuleGroupTCPFlagFieldOutput {
	return i.ToRuleGroupTCPFlagFieldOutputWithContext(context.Background())
}

func (i RuleGroupTCPFlagFieldArgs) ToRuleGroupTCPFlagFieldOutputWithContext(ctx context.Context) RuleGroupTCPFlagFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTCPFlagFieldOutput)
}

// RuleGroupTCPFlagFieldArrayInput is an input type that accepts RuleGroupTCPFlagFieldArray and RuleGroupTCPFlagFieldArrayOutput values.
// You can construct a concrete instance of `RuleGroupTCPFlagFieldArrayInput` via:
//
//          RuleGroupTCPFlagFieldArray{ RuleGroupTCPFlagFieldArgs{...} }
type RuleGroupTCPFlagFieldArrayInput interface {
	pulumi.Input

	ToRuleGroupTCPFlagFieldArrayOutput() RuleGroupTCPFlagFieldArrayOutput
	ToRuleGroupTCPFlagFieldArrayOutputWithContext(context.Context) RuleGroupTCPFlagFieldArrayOutput
}

type RuleGroupTCPFlagFieldArray []RuleGroupTCPFlagFieldInput

func (RuleGroupTCPFlagFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTCPFlagField)(nil)).Elem()
}

func (i RuleGroupTCPFlagFieldArray) ToRuleGroupTCPFlagFieldArrayOutput() RuleGroupTCPFlagFieldArrayOutput {
	return i.ToRuleGroupTCPFlagFieldArrayOutputWithContext(context.Background())
}

func (i RuleGroupTCPFlagFieldArray) ToRuleGroupTCPFlagFieldArrayOutputWithContext(ctx context.Context) RuleGroupTCPFlagFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTCPFlagFieldArrayOutput)
}

type RuleGroupTCPFlagFieldOutput struct{ *pulumi.OutputState }

func (RuleGroupTCPFlagFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTCPFlagField)(nil)).Elem()
}

func (o RuleGroupTCPFlagFieldOutput) ToRuleGroupTCPFlagFieldOutput() RuleGroupTCPFlagFieldOutput {
	return o
}

func (o RuleGroupTCPFlagFieldOutput) ToRuleGroupTCPFlagFieldOutputWithContext(ctx context.Context) RuleGroupTCPFlagFieldOutput {
	return o
}

func (o RuleGroupTCPFlagFieldOutput) Flags() RuleGroupTCPFlagArrayOutput {
	return o.ApplyT(func(v RuleGroupTCPFlagField) []RuleGroupTCPFlag { return v.Flags }).(RuleGroupTCPFlagArrayOutput)
}

func (o RuleGroupTCPFlagFieldOutput) Masks() RuleGroupTCPFlagArrayOutput {
	return o.ApplyT(func(v RuleGroupTCPFlagField) []RuleGroupTCPFlag { return v.Masks }).(RuleGroupTCPFlagArrayOutput)
}

type RuleGroupTCPFlagFieldArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTCPFlagFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTCPFlagField)(nil)).Elem()
}

func (o RuleGroupTCPFlagFieldArrayOutput) ToRuleGroupTCPFlagFieldArrayOutput() RuleGroupTCPFlagFieldArrayOutput {
	return o
}

func (o RuleGroupTCPFlagFieldArrayOutput) ToRuleGroupTCPFlagFieldArrayOutputWithContext(ctx context.Context) RuleGroupTCPFlagFieldArrayOutput {
	return o
}

func (o RuleGroupTCPFlagFieldArrayOutput) Index(i pulumi.IntInput) RuleGroupTCPFlagFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTCPFlagField {
		return vs[0].([]RuleGroupTCPFlagField)[vs[1].(int)]
	}).(RuleGroupTCPFlagFieldOutput)
}

type RuleGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// RuleGroupTagInput is an input type that accepts RuleGroupTagArgs and RuleGroupTagOutput values.
// You can construct a concrete instance of `RuleGroupTagInput` via:
//
//          RuleGroupTagArgs{...}
type RuleGroupTagInput interface {
	pulumi.Input

	ToRuleGroupTagOutput() RuleGroupTagOutput
	ToRuleGroupTagOutputWithContext(context.Context) RuleGroupTagOutput
}

type RuleGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RuleGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTag)(nil)).Elem()
}

func (i RuleGroupTagArgs) ToRuleGroupTagOutput() RuleGroupTagOutput {
	return i.ToRuleGroupTagOutputWithContext(context.Background())
}

func (i RuleGroupTagArgs) ToRuleGroupTagOutputWithContext(ctx context.Context) RuleGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTagOutput)
}

// RuleGroupTagArrayInput is an input type that accepts RuleGroupTagArray and RuleGroupTagArrayOutput values.
// You can construct a concrete instance of `RuleGroupTagArrayInput` via:
//
//          RuleGroupTagArray{ RuleGroupTagArgs{...} }
type RuleGroupTagArrayInput interface {
	pulumi.Input

	ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput
	ToRuleGroupTagArrayOutputWithContext(context.Context) RuleGroupTagArrayOutput
}

type RuleGroupTagArray []RuleGroupTagInput

func (RuleGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTag)(nil)).Elem()
}

func (i RuleGroupTagArray) ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput {
	return i.ToRuleGroupTagArrayOutputWithContext(context.Background())
}

func (i RuleGroupTagArray) ToRuleGroupTagArrayOutputWithContext(ctx context.Context) RuleGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTagArrayOutput)
}

type RuleGroupTagOutput struct{ *pulumi.OutputState }

func (RuleGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTag)(nil)).Elem()
}

func (o RuleGroupTagOutput) ToRuleGroupTagOutput() RuleGroupTagOutput {
	return o
}

func (o RuleGroupTagOutput) ToRuleGroupTagOutputWithContext(ctx context.Context) RuleGroupTagOutput {
	return o
}

func (o RuleGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o RuleGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type RuleGroupTagArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTag)(nil)).Elem()
}

func (o RuleGroupTagArrayOutput) ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput {
	return o
}

func (o RuleGroupTagArrayOutput) ToRuleGroupTagArrayOutputWithContext(ctx context.Context) RuleGroupTagArrayOutput {
	return o
}

func (o RuleGroupTagArrayOutput) Index(i pulumi.IntInput) RuleGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTag {
		return vs[0].([]RuleGroupTag)[vs[1].(int)]
	}).(RuleGroupTagOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallPolicyActionDefinitionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCustomActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCustomActionArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDimensionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDimensionArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPublishMetricActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPublishMetricActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStatefulRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStatefulRuleGroupReferenceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStatelessRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStatelessRuleGroupReferenceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTagOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTagArrayOutput{})
	pulumi.RegisterOutputType(FirewallSubnetMappingOutput{})
	pulumi.RegisterOutputType(FirewallSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(FirewallTagOutput{})
	pulumi.RegisterOutputType(FirewallTagArrayOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigArrayOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupActionDefinitionOutput{})
	pulumi.RegisterOutputType(RuleGroupAddressOutput{})
	pulumi.RegisterOutputType(RuleGroupAddressArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupCustomActionOutput{})
	pulumi.RegisterOutputType(RuleGroupCustomActionArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupDimensionOutput{})
	pulumi.RegisterOutputType(RuleGroupDimensionArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupMatchAttributesOutput{})
	pulumi.RegisterOutputType(RuleGroupPortRangeOutput{})
	pulumi.RegisterOutputType(RuleGroupPortRangeArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupPublishMetricActionOutput{})
	pulumi.RegisterOutputType(RuleGroupPublishMetricActionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleDefinitionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOptionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOptionArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleVariablesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleVariablesPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRulesSourceOutput{})
	pulumi.RegisterOutputType(RuleGroupRulesSourcePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRulesSourceListOutput{})
	pulumi.RegisterOutputType(RuleGroupRulesSourceListPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupStatelessRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupStatelessRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupStatelessRulesAndCustomActionsOutput{})
	pulumi.RegisterOutputType(RuleGroupStatelessRulesAndCustomActionsPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTCPFlagFieldOutput{})
	pulumi.RegisterOutputType(RuleGroupTCPFlagFieldArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTagOutput{})
	pulumi.RegisterOutputType(RuleGroupTagArrayOutput{})
}
