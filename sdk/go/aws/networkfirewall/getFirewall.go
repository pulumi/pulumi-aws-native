// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::NetworkFirewall::Firewall
func LookupFirewall(ctx *pulumi.Context, args *LookupFirewallArgs, opts ...pulumi.InvokeOption) (*LookupFirewallResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirewallResult
	err := ctx.Invoke("aws-native:networkfirewall:getFirewall", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFirewallArgs struct {
	// The Amazon Resource Name (ARN) of the `Firewall` .
	FirewallArn string `pulumi:"firewallArn"`
}

type LookupFirewallResult struct {
	// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A description of the firewall.
	Description *string `pulumi:"description"`
	// The unique IDs of the firewall endpoints for all of the subnets that you attached to the firewall. The subnets are not listed in any particular order. For example: `["us-west-2c:vpce-111122223333", "us-west-2a:vpce-987654321098", "us-west-2b:vpce-012345678901"]` .
	EndpointIds []string `pulumi:"endpointIds"`
	// The Amazon Resource Name (ARN) of the `Firewall` .
	FirewallArn *string `pulumi:"firewallArn"`
	// The name of the `Firewall` resource.
	FirewallId *string `pulumi:"firewallId"`
	// The Amazon Resource Name (ARN) of the firewall policy.
	//
	// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
	FirewallPolicyArn *string `pulumi:"firewallPolicyArn"`
	// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	FirewallPolicyChangeProtection *bool `pulumi:"firewallPolicyChangeProtection"`
	// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	SubnetChangeProtection *bool `pulumi:"subnetChangeProtection"`
	// The public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.
	SubnetMappings []FirewallSubnetMapping `pulumi:"subnetMappings"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupFirewallOutput(ctx *pulumi.Context, args LookupFirewallOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallResultOutput, error) {
			args := v.(LookupFirewallArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFirewallResult
			secret, err := ctx.InvokePackageRaw("aws-native:networkfirewall:getFirewall", args, &rv, "", opts...)
			if err != nil {
				return LookupFirewallResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFirewallResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFirewallResultOutput), nil
			}
			return output, nil
		}).(LookupFirewallResultOutput)
}

type LookupFirewallOutputArgs struct {
	// The Amazon Resource Name (ARN) of the `Firewall` .
	FirewallArn pulumi.StringInput `pulumi:"firewallArn"`
}

func (LookupFirewallOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallArgs)(nil)).Elem()
}

type LookupFirewallResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallResult)(nil)).Elem()
}

func (o LookupFirewallResultOutput) ToLookupFirewallResultOutput() LookupFirewallResultOutput {
	return o
}

func (o LookupFirewallResultOutput) ToLookupFirewallResultOutputWithContext(ctx context.Context) LookupFirewallResultOutput {
	return o
}

// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
func (o LookupFirewallResultOutput) DeleteProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *bool { return v.DeleteProtection }).(pulumi.BoolPtrOutput)
}

// A description of the firewall.
func (o LookupFirewallResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique IDs of the firewall endpoints for all of the subnets that you attached to the firewall. The subnets are not listed in any particular order. For example: `["us-west-2c:vpce-111122223333", "us-west-2a:vpce-987654321098", "us-west-2b:vpce-012345678901"]` .
func (o LookupFirewallResultOutput) EndpointIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFirewallResult) []string { return v.EndpointIds }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the `Firewall` .
func (o LookupFirewallResultOutput) FirewallArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.FirewallArn }).(pulumi.StringPtrOutput)
}

// The name of the `Firewall` resource.
func (o LookupFirewallResultOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.FirewallId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the firewall policy.
//
// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
func (o LookupFirewallResultOutput) FirewallPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.FirewallPolicyArn }).(pulumi.StringPtrOutput)
}

// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
func (o LookupFirewallResultOutput) FirewallPolicyChangeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *bool { return v.FirewallPolicyChangeProtection }).(pulumi.BoolPtrOutput)
}

// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
func (o LookupFirewallResultOutput) SubnetChangeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *bool { return v.SubnetChangeProtection }).(pulumi.BoolPtrOutput)
}

// The public subnets that Network Firewall is using for the firewall. Each subnet must belong to a different Availability Zone.
func (o LookupFirewallResultOutput) SubnetMappings() FirewallSubnetMappingArrayOutput {
	return o.ApplyT(func(v LookupFirewallResult) []FirewallSubnetMapping { return v.SubnetMappings }).(FirewallSubnetMappingArrayOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o LookupFirewallResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupFirewallResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallResultOutput{})
}
