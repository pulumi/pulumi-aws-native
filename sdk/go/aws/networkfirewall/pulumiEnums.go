// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingConfigurationLogDestinationConfigLogDestinationType string

const (
	LoggingConfigurationLogDestinationConfigLogDestinationTypeS3                  = LoggingConfigurationLogDestinationConfigLogDestinationType("S3")
	LoggingConfigurationLogDestinationConfigLogDestinationTypeCloudWatchLogs      = LoggingConfigurationLogDestinationConfigLogDestinationType("CloudWatchLogs")
	LoggingConfigurationLogDestinationConfigLogDestinationTypeKinesisDataFirehose = LoggingConfigurationLogDestinationConfigLogDestinationType("KinesisDataFirehose")
)

func (LoggingConfigurationLogDestinationConfigLogDestinationType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return e.ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return LoggingConfigurationLogDestinationConfigLogDestinationType(e).ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx).ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o.ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLogDestinationConfigLogDestinationType) *LoggingConfigurationLogDestinationConfigLogDestinationType {
		return &v
	}).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogDestinationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogDestinationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) Elem() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o.ApplyT(func(v *LoggingConfigurationLogDestinationConfigLogDestinationType) LoggingConfigurationLogDestinationConfigLogDestinationType {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLogDestinationConfigLogDestinationType
		return ret
	}).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationLogDestinationConfigLogDestinationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationLogDestinationConfigLogDestinationTypeInput is an input type that accepts LoggingConfigurationLogDestinationConfigLogDestinationTypeArgs and LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigLogDestinationTypeInput` via:
//
//          LoggingConfigurationLogDestinationConfigLogDestinationTypeArgs{...}
type LoggingConfigurationLogDestinationConfigLogDestinationTypeInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput
	ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput
}

var loggingConfigurationLogDestinationConfigLogDestinationTypePtrType = reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()

type LoggingConfigurationLogDestinationConfigLogDestinationTypePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput
	ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput
}

type loggingConfigurationLogDestinationConfigLogDestinationTypePtr string

func LoggingConfigurationLogDestinationConfigLogDestinationTypePtr(v string) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrInput {
	return (*loggingConfigurationLogDestinationConfigLogDestinationTypePtr)(&v)
}

func (*loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ElementType() reflect.Type {
	return loggingConfigurationLogDestinationConfigLogDestinationTypePtrType
}

func (in *loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

type LoggingConfigurationLogDestinationConfigLogType string

const (
	LoggingConfigurationLogDestinationConfigLogTypeAlert = LoggingConfigurationLogDestinationConfigLogType("ALERT")
	LoggingConfigurationLogDestinationConfigLogTypeFlow  = LoggingConfigurationLogDestinationConfigLogType("FLOW")
)

func (LoggingConfigurationLogDestinationConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return e.ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return LoggingConfigurationLogDestinationConfigLogType(e).ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx).ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationLogDestinationConfigLogTypeOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o.ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLogDestinationConfigLogType) *LoggingConfigurationLogDestinationConfigLogType {
		return &v
	}).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationLogDestinationConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) Elem() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o.ApplyT(func(v *LoggingConfigurationLogDestinationConfigLogType) LoggingConfigurationLogDestinationConfigLogType {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLogDestinationConfigLogType
		return ret
	}).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationLogDestinationConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationLogDestinationConfigLogTypeInput is an input type that accepts LoggingConfigurationLogDestinationConfigLogTypeArgs and LoggingConfigurationLogDestinationConfigLogTypeOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigLogTypeInput` via:
//
//          LoggingConfigurationLogDestinationConfigLogTypeArgs{...}
type LoggingConfigurationLogDestinationConfigLogTypeInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput
	ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput
}

var loggingConfigurationLogDestinationConfigLogTypePtrType = reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()

type LoggingConfigurationLogDestinationConfigLogTypePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput
	ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput
}

type loggingConfigurationLogDestinationConfigLogTypePtr string

func LoggingConfigurationLogDestinationConfigLogTypePtr(v string) LoggingConfigurationLogDestinationConfigLogTypePtrInput {
	return (*loggingConfigurationLogDestinationConfigLogTypePtr)(&v)
}

func (*loggingConfigurationLogDestinationConfigLogTypePtr) ElementType() reflect.Type {
	return loggingConfigurationLogDestinationConfigLogTypePtrType
}

func (in *loggingConfigurationLogDestinationConfigLogTypePtr) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogTypePtr) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

type RuleGroupGeneratedRulesType string

const (
	RuleGroupGeneratedRulesTypeAllowlist = RuleGroupGeneratedRulesType("ALLOWLIST")
	RuleGroupGeneratedRulesTypeDenylist  = RuleGroupGeneratedRulesType("DENYLIST")
)

func (RuleGroupGeneratedRulesType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupGeneratedRulesTypeOutput)
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupGeneratedRulesTypeOutput)
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return e.ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return RuleGroupGeneratedRulesType(e).ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx).ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx)
}

func (e RuleGroupGeneratedRulesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupGeneratedRulesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupGeneratedRulesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupGeneratedRulesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupGeneratedRulesTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupGeneratedRulesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypeOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return o.ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupGeneratedRulesType) *RuleGroupGeneratedRulesType {
		return &v
	}).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupGeneratedRulesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupGeneratedRulesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupGeneratedRulesTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupGeneratedRulesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypePtrOutput) Elem() RuleGroupGeneratedRulesTypeOutput {
	return o.ApplyT(func(v *RuleGroupGeneratedRulesType) RuleGroupGeneratedRulesType {
		if v != nil {
			return *v
		}
		var ret RuleGroupGeneratedRulesType
		return ret
	}).(RuleGroupGeneratedRulesTypeOutput)
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupGeneratedRulesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupGeneratedRulesTypeInput is an input type that accepts RuleGroupGeneratedRulesTypeArgs and RuleGroupGeneratedRulesTypeOutput values.
// You can construct a concrete instance of `RuleGroupGeneratedRulesTypeInput` via:
//
//          RuleGroupGeneratedRulesTypeArgs{...}
type RuleGroupGeneratedRulesTypeInput interface {
	pulumi.Input

	ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput
	ToRuleGroupGeneratedRulesTypeOutputWithContext(context.Context) RuleGroupGeneratedRulesTypeOutput
}

var ruleGroupGeneratedRulesTypePtrType = reflect.TypeOf((**RuleGroupGeneratedRulesType)(nil)).Elem()

type RuleGroupGeneratedRulesTypePtrInput interface {
	pulumi.Input

	ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput
	ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Context) RuleGroupGeneratedRulesTypePtrOutput
}

type ruleGroupGeneratedRulesTypePtr string

func RuleGroupGeneratedRulesTypePtr(v string) RuleGroupGeneratedRulesTypePtrInput {
	return (*ruleGroupGeneratedRulesTypePtr)(&v)
}

func (*ruleGroupGeneratedRulesTypePtr) ElementType() reflect.Type {
	return ruleGroupGeneratedRulesTypePtrType
}

func (in *ruleGroupGeneratedRulesTypePtr) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (in *ruleGroupGeneratedRulesTypePtr) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupGeneratedRulesTypePtrOutput)
}

type RuleGroupHeaderDirection string

const (
	RuleGroupHeaderDirectionForward = RuleGroupHeaderDirection("FORWARD")
	RuleGroupHeaderDirectionAny     = RuleGroupHeaderDirection("ANY")
)

func (RuleGroupHeaderDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderDirection)(nil)).Elem()
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput {
	return pulumi.ToOutput(e).(RuleGroupHeaderDirectionOutput)
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupHeaderDirectionOutput)
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return e.ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return RuleGroupHeaderDirection(e).ToRuleGroupHeaderDirectionOutputWithContext(ctx).ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx)
}

func (e RuleGroupHeaderDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupHeaderDirectionOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderDirection)(nil)).Elem()
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput {
	return o
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionOutput {
	return o
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return o.ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupHeaderDirection) *RuleGroupHeaderDirection {
		return &v
	}).(RuleGroupHeaderDirectionPtrOutput)
}

func (o RuleGroupHeaderDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupHeaderDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupHeaderDirectionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupHeaderDirection)(nil)).Elem()
}

func (o RuleGroupHeaderDirectionPtrOutput) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return o
}

func (o RuleGroupHeaderDirectionPtrOutput) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return o
}

func (o RuleGroupHeaderDirectionPtrOutput) Elem() RuleGroupHeaderDirectionOutput {
	return o.ApplyT(func(v *RuleGroupHeaderDirection) RuleGroupHeaderDirection {
		if v != nil {
			return *v
		}
		var ret RuleGroupHeaderDirection
		return ret
	}).(RuleGroupHeaderDirectionOutput)
}

func (o RuleGroupHeaderDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupHeaderDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupHeaderDirectionInput is an input type that accepts RuleGroupHeaderDirectionArgs and RuleGroupHeaderDirectionOutput values.
// You can construct a concrete instance of `RuleGroupHeaderDirectionInput` via:
//
//          RuleGroupHeaderDirectionArgs{...}
type RuleGroupHeaderDirectionInput interface {
	pulumi.Input

	ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput
	ToRuleGroupHeaderDirectionOutputWithContext(context.Context) RuleGroupHeaderDirectionOutput
}

var ruleGroupHeaderDirectionPtrType = reflect.TypeOf((**RuleGroupHeaderDirection)(nil)).Elem()

type RuleGroupHeaderDirectionPtrInput interface {
	pulumi.Input

	ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput
	ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Context) RuleGroupHeaderDirectionPtrOutput
}

type ruleGroupHeaderDirectionPtr string

func RuleGroupHeaderDirectionPtr(v string) RuleGroupHeaderDirectionPtrInput {
	return (*ruleGroupHeaderDirectionPtr)(&v)
}

func (*ruleGroupHeaderDirectionPtr) ElementType() reflect.Type {
	return ruleGroupHeaderDirectionPtrType
}

func (in *ruleGroupHeaderDirectionPtr) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupHeaderDirectionPtrOutput)
}

func (in *ruleGroupHeaderDirectionPtr) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupHeaderDirectionPtrOutput)
}

type RuleGroupHeaderProtocol string

const (
	RuleGroupHeaderProtocolIp     = RuleGroupHeaderProtocol("IP")
	RuleGroupHeaderProtocolTcp    = RuleGroupHeaderProtocol("TCP")
	RuleGroupHeaderProtocolUdp    = RuleGroupHeaderProtocol("UDP")
	RuleGroupHeaderProtocolIcmp   = RuleGroupHeaderProtocol("ICMP")
	RuleGroupHeaderProtocolHttp   = RuleGroupHeaderProtocol("HTTP")
	RuleGroupHeaderProtocolFtp    = RuleGroupHeaderProtocol("FTP")
	RuleGroupHeaderProtocolTls    = RuleGroupHeaderProtocol("TLS")
	RuleGroupHeaderProtocolSmb    = RuleGroupHeaderProtocol("SMB")
	RuleGroupHeaderProtocolDns    = RuleGroupHeaderProtocol("DNS")
	RuleGroupHeaderProtocolDcerpc = RuleGroupHeaderProtocol("DCERPC")
	RuleGroupHeaderProtocolSsh    = RuleGroupHeaderProtocol("SSH")
	RuleGroupHeaderProtocolSmtp   = RuleGroupHeaderProtocol("SMTP")
	RuleGroupHeaderProtocolImap   = RuleGroupHeaderProtocol("IMAP")
	RuleGroupHeaderProtocolMsn    = RuleGroupHeaderProtocol("MSN")
	RuleGroupHeaderProtocolKrb5   = RuleGroupHeaderProtocol("KRB5")
	RuleGroupHeaderProtocolIkev2  = RuleGroupHeaderProtocol("IKEV2")
	RuleGroupHeaderProtocolTftp   = RuleGroupHeaderProtocol("TFTP")
	RuleGroupHeaderProtocolNtp    = RuleGroupHeaderProtocol("NTP")
	RuleGroupHeaderProtocolDhcp   = RuleGroupHeaderProtocol("DHCP")
)

func (RuleGroupHeaderProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderProtocol)(nil)).Elem()
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput {
	return pulumi.ToOutput(e).(RuleGroupHeaderProtocolOutput)
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupHeaderProtocolOutput)
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return e.ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return RuleGroupHeaderProtocol(e).ToRuleGroupHeaderProtocolOutputWithContext(ctx).ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx)
}

func (e RuleGroupHeaderProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupHeaderProtocolOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderProtocol)(nil)).Elem()
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput {
	return o
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolOutput {
	return o
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return o.ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupHeaderProtocol) *RuleGroupHeaderProtocol {
		return &v
	}).(RuleGroupHeaderProtocolPtrOutput)
}

func (o RuleGroupHeaderProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupHeaderProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupHeaderProtocolPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupHeaderProtocol)(nil)).Elem()
}

func (o RuleGroupHeaderProtocolPtrOutput) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return o
}

func (o RuleGroupHeaderProtocolPtrOutput) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return o
}

func (o RuleGroupHeaderProtocolPtrOutput) Elem() RuleGroupHeaderProtocolOutput {
	return o.ApplyT(func(v *RuleGroupHeaderProtocol) RuleGroupHeaderProtocol {
		if v != nil {
			return *v
		}
		var ret RuleGroupHeaderProtocol
		return ret
	}).(RuleGroupHeaderProtocolOutput)
}

func (o RuleGroupHeaderProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupHeaderProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupHeaderProtocolInput is an input type that accepts RuleGroupHeaderProtocolArgs and RuleGroupHeaderProtocolOutput values.
// You can construct a concrete instance of `RuleGroupHeaderProtocolInput` via:
//
//          RuleGroupHeaderProtocolArgs{...}
type RuleGroupHeaderProtocolInput interface {
	pulumi.Input

	ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput
	ToRuleGroupHeaderProtocolOutputWithContext(context.Context) RuleGroupHeaderProtocolOutput
}

var ruleGroupHeaderProtocolPtrType = reflect.TypeOf((**RuleGroupHeaderProtocol)(nil)).Elem()

type RuleGroupHeaderProtocolPtrInput interface {
	pulumi.Input

	ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput
	ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Context) RuleGroupHeaderProtocolPtrOutput
}

type ruleGroupHeaderProtocolPtr string

func RuleGroupHeaderProtocolPtr(v string) RuleGroupHeaderProtocolPtrInput {
	return (*ruleGroupHeaderProtocolPtr)(&v)
}

func (*ruleGroupHeaderProtocolPtr) ElementType() reflect.Type {
	return ruleGroupHeaderProtocolPtrType
}

func (in *ruleGroupHeaderProtocolPtr) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupHeaderProtocolPtrOutput)
}

func (in *ruleGroupHeaderProtocolPtr) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupHeaderProtocolPtrOutput)
}

type RuleGroupStatefulRuleAction string

const (
	RuleGroupStatefulRuleActionPass  = RuleGroupStatefulRuleAction("PASS")
	RuleGroupStatefulRuleActionDrop  = RuleGroupStatefulRuleAction("DROP")
	RuleGroupStatefulRuleActionAlert = RuleGroupStatefulRuleAction("ALERT")
)

func (RuleGroupStatefulRuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput {
	return pulumi.ToOutput(e).(RuleGroupStatefulRuleActionOutput)
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupStatefulRuleActionOutput)
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return e.ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Background())
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return RuleGroupStatefulRuleAction(e).ToRuleGroupStatefulRuleActionOutputWithContext(ctx).ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx)
}

func (e RuleGroupStatefulRuleAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupStatefulRuleAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupStatefulRuleAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupStatefulRuleAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupStatefulRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput {
	return o
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionOutput {
	return o
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return o.ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupStatefulRuleAction) *RuleGroupStatefulRuleAction {
		return &v
	}).(RuleGroupStatefulRuleActionPtrOutput)
}

func (o RuleGroupStatefulRuleActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupStatefulRuleAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupStatefulRuleActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupStatefulRuleAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupStatefulRuleActionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return o
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return o
}

func (o RuleGroupStatefulRuleActionPtrOutput) Elem() RuleGroupStatefulRuleActionOutput {
	return o.ApplyT(func(v *RuleGroupStatefulRuleAction) RuleGroupStatefulRuleAction {
		if v != nil {
			return *v
		}
		var ret RuleGroupStatefulRuleAction
		return ret
	}).(RuleGroupStatefulRuleActionOutput)
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupStatefulRuleAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupStatefulRuleActionInput is an input type that accepts RuleGroupStatefulRuleActionArgs and RuleGroupStatefulRuleActionOutput values.
// You can construct a concrete instance of `RuleGroupStatefulRuleActionInput` via:
//
//          RuleGroupStatefulRuleActionArgs{...}
type RuleGroupStatefulRuleActionInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput
	ToRuleGroupStatefulRuleActionOutputWithContext(context.Context) RuleGroupStatefulRuleActionOutput
}

var ruleGroupStatefulRuleActionPtrType = reflect.TypeOf((**RuleGroupStatefulRuleAction)(nil)).Elem()

type RuleGroupStatefulRuleActionPtrInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput
	ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Context) RuleGroupStatefulRuleActionPtrOutput
}

type ruleGroupStatefulRuleActionPtr string

func RuleGroupStatefulRuleActionPtr(v string) RuleGroupStatefulRuleActionPtrInput {
	return (*ruleGroupStatefulRuleActionPtr)(&v)
}

func (*ruleGroupStatefulRuleActionPtr) ElementType() reflect.Type {
	return ruleGroupStatefulRuleActionPtrType
}

func (in *ruleGroupStatefulRuleActionPtr) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupStatefulRuleActionPtrOutput)
}

func (in *ruleGroupStatefulRuleActionPtr) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupStatefulRuleActionPtrOutput)
}

type RuleGroupTCPFlag string

const (
	RuleGroupTCPFlagFin = RuleGroupTCPFlag("FIN")
	RuleGroupTCPFlagSyn = RuleGroupTCPFlag("SYN")
	RuleGroupTCPFlagRst = RuleGroupTCPFlag("RST")
	RuleGroupTCPFlagPsh = RuleGroupTCPFlag("PSH")
	RuleGroupTCPFlagAck = RuleGroupTCPFlag("ACK")
	RuleGroupTCPFlagUrg = RuleGroupTCPFlag("URG")
	RuleGroupTCPFlagEce = RuleGroupTCPFlag("ECE")
	RuleGroupTCPFlagCwr = RuleGroupTCPFlag("CWR")
)

func (RuleGroupTCPFlag) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTCPFlag)(nil)).Elem()
}

func (e RuleGroupTCPFlag) ToRuleGroupTCPFlagOutput() RuleGroupTCPFlagOutput {
	return pulumi.ToOutput(e).(RuleGroupTCPFlagOutput)
}

func (e RuleGroupTCPFlag) ToRuleGroupTCPFlagOutputWithContext(ctx context.Context) RuleGroupTCPFlagOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTCPFlagOutput)
}

func (e RuleGroupTCPFlag) ToRuleGroupTCPFlagPtrOutput() RuleGroupTCPFlagPtrOutput {
	return e.ToRuleGroupTCPFlagPtrOutputWithContext(context.Background())
}

func (e RuleGroupTCPFlag) ToRuleGroupTCPFlagPtrOutputWithContext(ctx context.Context) RuleGroupTCPFlagPtrOutput {
	return RuleGroupTCPFlag(e).ToRuleGroupTCPFlagOutputWithContext(ctx).ToRuleGroupTCPFlagPtrOutputWithContext(ctx)
}

func (e RuleGroupTCPFlag) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTCPFlag) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTCPFlag) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTCPFlag) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTCPFlagOutput struct{ *pulumi.OutputState }

func (RuleGroupTCPFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTCPFlag)(nil)).Elem()
}

func (o RuleGroupTCPFlagOutput) ToRuleGroupTCPFlagOutput() RuleGroupTCPFlagOutput {
	return o
}

func (o RuleGroupTCPFlagOutput) ToRuleGroupTCPFlagOutputWithContext(ctx context.Context) RuleGroupTCPFlagOutput {
	return o
}

func (o RuleGroupTCPFlagOutput) ToRuleGroupTCPFlagPtrOutput() RuleGroupTCPFlagPtrOutput {
	return o.ToRuleGroupTCPFlagPtrOutputWithContext(context.Background())
}

func (o RuleGroupTCPFlagOutput) ToRuleGroupTCPFlagPtrOutputWithContext(ctx context.Context) RuleGroupTCPFlagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTCPFlag) *RuleGroupTCPFlag {
		return &v
	}).(RuleGroupTCPFlagPtrOutput)
}

func (o RuleGroupTCPFlagOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTCPFlagOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTCPFlag) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTCPFlagOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTCPFlagOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTCPFlag) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTCPFlagPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTCPFlagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTCPFlag)(nil)).Elem()
}

func (o RuleGroupTCPFlagPtrOutput) ToRuleGroupTCPFlagPtrOutput() RuleGroupTCPFlagPtrOutput {
	return o
}

func (o RuleGroupTCPFlagPtrOutput) ToRuleGroupTCPFlagPtrOutputWithContext(ctx context.Context) RuleGroupTCPFlagPtrOutput {
	return o
}

func (o RuleGroupTCPFlagPtrOutput) Elem() RuleGroupTCPFlagOutput {
	return o.ApplyT(func(v *RuleGroupTCPFlag) RuleGroupTCPFlag {
		if v != nil {
			return *v
		}
		var ret RuleGroupTCPFlag
		return ret
	}).(RuleGroupTCPFlagOutput)
}

func (o RuleGroupTCPFlagPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTCPFlagPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTCPFlag) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTCPFlagInput is an input type that accepts RuleGroupTCPFlagArgs and RuleGroupTCPFlagOutput values.
// You can construct a concrete instance of `RuleGroupTCPFlagInput` via:
//
//          RuleGroupTCPFlagArgs{...}
type RuleGroupTCPFlagInput interface {
	pulumi.Input

	ToRuleGroupTCPFlagOutput() RuleGroupTCPFlagOutput
	ToRuleGroupTCPFlagOutputWithContext(context.Context) RuleGroupTCPFlagOutput
}

var ruleGroupTCPFlagPtrType = reflect.TypeOf((**RuleGroupTCPFlag)(nil)).Elem()

type RuleGroupTCPFlagPtrInput interface {
	pulumi.Input

	ToRuleGroupTCPFlagPtrOutput() RuleGroupTCPFlagPtrOutput
	ToRuleGroupTCPFlagPtrOutputWithContext(context.Context) RuleGroupTCPFlagPtrOutput
}

type ruleGroupTCPFlagPtr string

func RuleGroupTCPFlagPtr(v string) RuleGroupTCPFlagPtrInput {
	return (*ruleGroupTCPFlagPtr)(&v)
}

func (*ruleGroupTCPFlagPtr) ElementType() reflect.Type {
	return ruleGroupTCPFlagPtrType
}

func (in *ruleGroupTCPFlagPtr) ToRuleGroupTCPFlagPtrOutput() RuleGroupTCPFlagPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTCPFlagPtrOutput)
}

func (in *ruleGroupTCPFlagPtr) ToRuleGroupTCPFlagPtrOutputWithContext(ctx context.Context) RuleGroupTCPFlagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTCPFlagPtrOutput)
}

// RuleGroupTCPFlagArrayInput is an input type that accepts RuleGroupTCPFlagArray and RuleGroupTCPFlagArrayOutput values.
// You can construct a concrete instance of `RuleGroupTCPFlagArrayInput` via:
//
//          RuleGroupTCPFlagArray{ RuleGroupTCPFlagArgs{...} }
type RuleGroupTCPFlagArrayInput interface {
	pulumi.Input

	ToRuleGroupTCPFlagArrayOutput() RuleGroupTCPFlagArrayOutput
	ToRuleGroupTCPFlagArrayOutputWithContext(context.Context) RuleGroupTCPFlagArrayOutput
}

type RuleGroupTCPFlagArray []RuleGroupTCPFlag

func (RuleGroupTCPFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTCPFlag)(nil)).Elem()
}

func (i RuleGroupTCPFlagArray) ToRuleGroupTCPFlagArrayOutput() RuleGroupTCPFlagArrayOutput {
	return i.ToRuleGroupTCPFlagArrayOutputWithContext(context.Background())
}

func (i RuleGroupTCPFlagArray) ToRuleGroupTCPFlagArrayOutputWithContext(ctx context.Context) RuleGroupTCPFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTCPFlagArrayOutput)
}

type RuleGroupTCPFlagArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTCPFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTCPFlag)(nil)).Elem()
}

func (o RuleGroupTCPFlagArrayOutput) ToRuleGroupTCPFlagArrayOutput() RuleGroupTCPFlagArrayOutput {
	return o
}

func (o RuleGroupTCPFlagArrayOutput) ToRuleGroupTCPFlagArrayOutputWithContext(ctx context.Context) RuleGroupTCPFlagArrayOutput {
	return o
}

func (o RuleGroupTCPFlagArrayOutput) Index(i pulumi.IntInput) RuleGroupTCPFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTCPFlag {
		return vs[0].([]RuleGroupTCPFlag)[vs[1].(int)]
	}).(RuleGroupTCPFlagOutput)
}

type RuleGroupTargetType string

const (
	RuleGroupTargetTypeTlsSni   = RuleGroupTargetType("TLS_SNI")
	RuleGroupTargetTypeHttpHost = RuleGroupTargetType("HTTP_HOST")
)

func (RuleGroupTargetType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTargetType)(nil)).Elem()
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupTargetTypeOutput)
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypeOutputWithContext(ctx context.Context) RuleGroupTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTargetTypeOutput)
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return e.ToRuleGroupTargetTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return RuleGroupTargetType(e).ToRuleGroupTargetTypeOutputWithContext(ctx).ToRuleGroupTargetTypePtrOutputWithContext(ctx)
}

func (e RuleGroupTargetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTargetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTargetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTargetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTargetTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput {
	return o
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypeOutputWithContext(ctx context.Context) RuleGroupTargetTypeOutput {
	return o
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return o.ToRuleGroupTargetTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTargetType) *RuleGroupTargetType {
		return &v
	}).(RuleGroupTargetTypePtrOutput)
}

func (o RuleGroupTargetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTargetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTargetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTargetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTargetTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypePtrOutput) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return o
}

func (o RuleGroupTargetTypePtrOutput) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return o
}

func (o RuleGroupTargetTypePtrOutput) Elem() RuleGroupTargetTypeOutput {
	return o.ApplyT(func(v *RuleGroupTargetType) RuleGroupTargetType {
		if v != nil {
			return *v
		}
		var ret RuleGroupTargetType
		return ret
	}).(RuleGroupTargetTypeOutput)
}

func (o RuleGroupTargetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTargetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTargetTypeInput is an input type that accepts RuleGroupTargetTypeArgs and RuleGroupTargetTypeOutput values.
// You can construct a concrete instance of `RuleGroupTargetTypeInput` via:
//
//          RuleGroupTargetTypeArgs{...}
type RuleGroupTargetTypeInput interface {
	pulumi.Input

	ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput
	ToRuleGroupTargetTypeOutputWithContext(context.Context) RuleGroupTargetTypeOutput
}

var ruleGroupTargetTypePtrType = reflect.TypeOf((**RuleGroupTargetType)(nil)).Elem()

type RuleGroupTargetTypePtrInput interface {
	pulumi.Input

	ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput
	ToRuleGroupTargetTypePtrOutputWithContext(context.Context) RuleGroupTargetTypePtrOutput
}

type ruleGroupTargetTypePtr string

func RuleGroupTargetTypePtr(v string) RuleGroupTargetTypePtrInput {
	return (*ruleGroupTargetTypePtr)(&v)
}

func (*ruleGroupTargetTypePtr) ElementType() reflect.Type {
	return ruleGroupTargetTypePtrType
}

func (in *ruleGroupTargetTypePtr) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTargetTypePtrOutput)
}

func (in *ruleGroupTargetTypePtr) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTargetTypePtrOutput)
}

// RuleGroupTargetTypeArrayInput is an input type that accepts RuleGroupTargetTypeArray and RuleGroupTargetTypeArrayOutput values.
// You can construct a concrete instance of `RuleGroupTargetTypeArrayInput` via:
//
//          RuleGroupTargetTypeArray{ RuleGroupTargetTypeArgs{...} }
type RuleGroupTargetTypeArrayInput interface {
	pulumi.Input

	ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput
	ToRuleGroupTargetTypeArrayOutputWithContext(context.Context) RuleGroupTargetTypeArrayOutput
}

type RuleGroupTargetTypeArray []RuleGroupTargetType

func (RuleGroupTargetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTargetType)(nil)).Elem()
}

func (i RuleGroupTargetTypeArray) ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput {
	return i.ToRuleGroupTargetTypeArrayOutputWithContext(context.Background())
}

func (i RuleGroupTargetTypeArray) ToRuleGroupTargetTypeArrayOutputWithContext(ctx context.Context) RuleGroupTargetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTargetTypeArrayOutput)
}

type RuleGroupTargetTypeArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypeArrayOutput) ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput {
	return o
}

func (o RuleGroupTargetTypeArrayOutput) ToRuleGroupTargetTypeArrayOutputWithContext(ctx context.Context) RuleGroupTargetTypeArrayOutput {
	return o
}

func (o RuleGroupTargetTypeArrayOutput) Index(i pulumi.IntInput) RuleGroupTargetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTargetType {
		return vs[0].([]RuleGroupTargetType)[vs[1].(int)]
	}).(RuleGroupTargetTypeOutput)
}

type RuleGroupType string

const (
	RuleGroupTypeStateless = RuleGroupType("STATELESS")
	RuleGroupTypeStateful  = RuleGroupType("STATEFUL")
)

func (RuleGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupType)(nil)).Elem()
}

func (e RuleGroupType) ToRuleGroupTypeOutput() RuleGroupTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupTypeOutput)
}

func (e RuleGroupType) ToRuleGroupTypeOutputWithContext(ctx context.Context) RuleGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTypeOutput)
}

func (e RuleGroupType) ToRuleGroupTypePtrOutput() RuleGroupTypePtrOutput {
	return e.ToRuleGroupTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupType) ToRuleGroupTypePtrOutputWithContext(ctx context.Context) RuleGroupTypePtrOutput {
	return RuleGroupType(e).ToRuleGroupTypeOutputWithContext(ctx).ToRuleGroupTypePtrOutputWithContext(ctx)
}

func (e RuleGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupType)(nil)).Elem()
}

func (o RuleGroupTypeOutput) ToRuleGroupTypeOutput() RuleGroupTypeOutput {
	return o
}

func (o RuleGroupTypeOutput) ToRuleGroupTypeOutputWithContext(ctx context.Context) RuleGroupTypeOutput {
	return o
}

func (o RuleGroupTypeOutput) ToRuleGroupTypePtrOutput() RuleGroupTypePtrOutput {
	return o.ToRuleGroupTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupTypeOutput) ToRuleGroupTypePtrOutputWithContext(ctx context.Context) RuleGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupType) *RuleGroupType {
		return &v
	}).(RuleGroupTypePtrOutput)
}

func (o RuleGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupType)(nil)).Elem()
}

func (o RuleGroupTypePtrOutput) ToRuleGroupTypePtrOutput() RuleGroupTypePtrOutput {
	return o
}

func (o RuleGroupTypePtrOutput) ToRuleGroupTypePtrOutputWithContext(ctx context.Context) RuleGroupTypePtrOutput {
	return o
}

func (o RuleGroupTypePtrOutput) Elem() RuleGroupTypeOutput {
	return o.ApplyT(func(v *RuleGroupType) RuleGroupType {
		if v != nil {
			return *v
		}
		var ret RuleGroupType
		return ret
	}).(RuleGroupTypeOutput)
}

func (o RuleGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTypeInput is an input type that accepts RuleGroupTypeArgs and RuleGroupTypeOutput values.
// You can construct a concrete instance of `RuleGroupTypeInput` via:
//
//          RuleGroupTypeArgs{...}
type RuleGroupTypeInput interface {
	pulumi.Input

	ToRuleGroupTypeOutput() RuleGroupTypeOutput
	ToRuleGroupTypeOutputWithContext(context.Context) RuleGroupTypeOutput
}

var ruleGroupTypePtrType = reflect.TypeOf((**RuleGroupType)(nil)).Elem()

type RuleGroupTypePtrInput interface {
	pulumi.Input

	ToRuleGroupTypePtrOutput() RuleGroupTypePtrOutput
	ToRuleGroupTypePtrOutputWithContext(context.Context) RuleGroupTypePtrOutput
}

type ruleGroupTypePtr string

func RuleGroupTypePtr(v string) RuleGroupTypePtrInput {
	return (*ruleGroupTypePtr)(&v)
}

func (*ruleGroupTypePtr) ElementType() reflect.Type {
	return ruleGroupTypePtrType
}

func (in *ruleGroupTypePtr) ToRuleGroupTypePtrOutput() RuleGroupTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTypePtrOutput)
}

func (in *ruleGroupTypePtr) ToRuleGroupTypePtrOutputWithContext(ctx context.Context) RuleGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogTypeOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupGeneratedRulesTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupGeneratedRulesTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderDirectionOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderDirectionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderProtocolOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderProtocolPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleActionOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleActionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTCPFlagOutput{})
	pulumi.RegisterOutputType(RuleGroupTCPFlagPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTCPFlagArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypeArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupTypePtrOutput{})
}
