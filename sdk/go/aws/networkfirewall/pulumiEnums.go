// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FirewallPolicyOverrideAction string

const (
	FirewallPolicyOverrideActionDropToAlert = FirewallPolicyOverrideAction("DROP_TO_ALERT")
)

func (FirewallPolicyOverrideAction) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyOverrideAction)(nil)).Elem()
}

func (e FirewallPolicyOverrideAction) ToFirewallPolicyOverrideActionOutput() FirewallPolicyOverrideActionOutput {
	return pulumi.ToOutput(e).(FirewallPolicyOverrideActionOutput)
}

func (e FirewallPolicyOverrideAction) ToFirewallPolicyOverrideActionOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallPolicyOverrideActionOutput)
}

func (e FirewallPolicyOverrideAction) ToFirewallPolicyOverrideActionPtrOutput() FirewallPolicyOverrideActionPtrOutput {
	return e.ToFirewallPolicyOverrideActionPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyOverrideAction) ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionPtrOutput {
	return FirewallPolicyOverrideAction(e).ToFirewallPolicyOverrideActionOutputWithContext(ctx).ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx)
}

func (e FirewallPolicyOverrideAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyOverrideAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyOverrideAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyOverrideAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallPolicyOverrideActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyOverrideAction)(nil)).Elem()
}

func (o FirewallPolicyOverrideActionOutput) ToFirewallPolicyOverrideActionOutput() FirewallPolicyOverrideActionOutput {
	return o
}

func (o FirewallPolicyOverrideActionOutput) ToFirewallPolicyOverrideActionOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionOutput {
	return o
}

func (o FirewallPolicyOverrideActionOutput) ToFirewallPolicyOverrideActionPtrOutput() FirewallPolicyOverrideActionPtrOutput {
	return o.ToFirewallPolicyOverrideActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyOverrideActionOutput) ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyOverrideAction) *FirewallPolicyOverrideAction {
		return &v
	}).(FirewallPolicyOverrideActionPtrOutput)
}

func (o FirewallPolicyOverrideActionOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyOverrideAction] {
	return pulumix.Output[FirewallPolicyOverrideAction]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyOverrideActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPolicyOverrideActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyOverrideAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPolicyOverrideActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyOverrideActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyOverrideAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyOverrideActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOverrideActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyOverrideAction)(nil)).Elem()
}

func (o FirewallPolicyOverrideActionPtrOutput) ToFirewallPolicyOverrideActionPtrOutput() FirewallPolicyOverrideActionPtrOutput {
	return o
}

func (o FirewallPolicyOverrideActionPtrOutput) ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionPtrOutput {
	return o
}

func (o FirewallPolicyOverrideActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyOverrideAction] {
	return pulumix.Output[*FirewallPolicyOverrideAction]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyOverrideActionPtrOutput) Elem() FirewallPolicyOverrideActionOutput {
	return o.ApplyT(func(v *FirewallPolicyOverrideAction) FirewallPolicyOverrideAction {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyOverrideAction
		return ret
	}).(FirewallPolicyOverrideActionOutput)
}

func (o FirewallPolicyOverrideActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyOverrideActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPolicyOverrideAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallPolicyOverrideActionInput is an input type that accepts FirewallPolicyOverrideActionArgs and FirewallPolicyOverrideActionOutput values.
// You can construct a concrete instance of `FirewallPolicyOverrideActionInput` via:
//
//	FirewallPolicyOverrideActionArgs{...}
type FirewallPolicyOverrideActionInput interface {
	pulumi.Input

	ToFirewallPolicyOverrideActionOutput() FirewallPolicyOverrideActionOutput
	ToFirewallPolicyOverrideActionOutputWithContext(context.Context) FirewallPolicyOverrideActionOutput
}

var firewallPolicyOverrideActionPtrType = reflect.TypeOf((**FirewallPolicyOverrideAction)(nil)).Elem()

type FirewallPolicyOverrideActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyOverrideActionPtrOutput() FirewallPolicyOverrideActionPtrOutput
	ToFirewallPolicyOverrideActionPtrOutputWithContext(context.Context) FirewallPolicyOverrideActionPtrOutput
}

type firewallPolicyOverrideActionPtr string

func FirewallPolicyOverrideActionPtr(v string) FirewallPolicyOverrideActionPtrInput {
	return (*firewallPolicyOverrideActionPtr)(&v)
}

func (*firewallPolicyOverrideActionPtr) ElementType() reflect.Type {
	return firewallPolicyOverrideActionPtrType
}

func (in *firewallPolicyOverrideActionPtr) ToFirewallPolicyOverrideActionPtrOutput() FirewallPolicyOverrideActionPtrOutput {
	return pulumi.ToOutput(in).(FirewallPolicyOverrideActionPtrOutput)
}

func (in *firewallPolicyOverrideActionPtr) ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx context.Context) FirewallPolicyOverrideActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallPolicyOverrideActionPtrOutput)
}

func (in *firewallPolicyOverrideActionPtr) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyOverrideAction] {
	return pulumix.Output[*FirewallPolicyOverrideAction]{
		OutputState: in.ToFirewallPolicyOverrideActionPtrOutputWithContext(ctx).OutputState,
	}
}

type FirewallPolicyRuleOrder string

const (
	FirewallPolicyRuleOrderDefaultActionOrder = FirewallPolicyRuleOrder("DEFAULT_ACTION_ORDER")
	FirewallPolicyRuleOrderStrictOrder        = FirewallPolicyRuleOrder("STRICT_ORDER")
)

func (FirewallPolicyRuleOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleOrder)(nil)).Elem()
}

func (e FirewallPolicyRuleOrder) ToFirewallPolicyRuleOrderOutput() FirewallPolicyRuleOrderOutput {
	return pulumi.ToOutput(e).(FirewallPolicyRuleOrderOutput)
}

func (e FirewallPolicyRuleOrder) ToFirewallPolicyRuleOrderOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallPolicyRuleOrderOutput)
}

func (e FirewallPolicyRuleOrder) ToFirewallPolicyRuleOrderPtrOutput() FirewallPolicyRuleOrderPtrOutput {
	return e.ToFirewallPolicyRuleOrderPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyRuleOrder) ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderPtrOutput {
	return FirewallPolicyRuleOrder(e).ToFirewallPolicyRuleOrderOutputWithContext(ctx).ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx)
}

func (e FirewallPolicyRuleOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyRuleOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyRuleOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyRuleOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallPolicyRuleOrderOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleOrder)(nil)).Elem()
}

func (o FirewallPolicyRuleOrderOutput) ToFirewallPolicyRuleOrderOutput() FirewallPolicyRuleOrderOutput {
	return o
}

func (o FirewallPolicyRuleOrderOutput) ToFirewallPolicyRuleOrderOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderOutput {
	return o
}

func (o FirewallPolicyRuleOrderOutput) ToFirewallPolicyRuleOrderPtrOutput() FirewallPolicyRuleOrderPtrOutput {
	return o.ToFirewallPolicyRuleOrderPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleOrderOutput) ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyRuleOrder) *FirewallPolicyRuleOrder {
		return &v
	}).(FirewallPolicyRuleOrderPtrOutput)
}

func (o FirewallPolicyRuleOrderOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyRuleOrder] {
	return pulumix.Output[FirewallPolicyRuleOrder]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyRuleOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyRuleOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPolicyRuleOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyRuleOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleOrderPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyRuleOrder)(nil)).Elem()
}

func (o FirewallPolicyRuleOrderPtrOutput) ToFirewallPolicyRuleOrderPtrOutput() FirewallPolicyRuleOrderPtrOutput {
	return o
}

func (o FirewallPolicyRuleOrderPtrOutput) ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderPtrOutput {
	return o
}

func (o FirewallPolicyRuleOrderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyRuleOrder] {
	return pulumix.Output[*FirewallPolicyRuleOrder]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyRuleOrderPtrOutput) Elem() FirewallPolicyRuleOrderOutput {
	return o.ApplyT(func(v *FirewallPolicyRuleOrder) FirewallPolicyRuleOrder {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyRuleOrder
		return ret
	}).(FirewallPolicyRuleOrderOutput)
}

func (o FirewallPolicyRuleOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPolicyRuleOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallPolicyRuleOrderInput is an input type that accepts FirewallPolicyRuleOrderArgs and FirewallPolicyRuleOrderOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleOrderInput` via:
//
//	FirewallPolicyRuleOrderArgs{...}
type FirewallPolicyRuleOrderInput interface {
	pulumi.Input

	ToFirewallPolicyRuleOrderOutput() FirewallPolicyRuleOrderOutput
	ToFirewallPolicyRuleOrderOutputWithContext(context.Context) FirewallPolicyRuleOrderOutput
}

var firewallPolicyRuleOrderPtrType = reflect.TypeOf((**FirewallPolicyRuleOrder)(nil)).Elem()

type FirewallPolicyRuleOrderPtrInput interface {
	pulumi.Input

	ToFirewallPolicyRuleOrderPtrOutput() FirewallPolicyRuleOrderPtrOutput
	ToFirewallPolicyRuleOrderPtrOutputWithContext(context.Context) FirewallPolicyRuleOrderPtrOutput
}

type firewallPolicyRuleOrderPtr string

func FirewallPolicyRuleOrderPtr(v string) FirewallPolicyRuleOrderPtrInput {
	return (*firewallPolicyRuleOrderPtr)(&v)
}

func (*firewallPolicyRuleOrderPtr) ElementType() reflect.Type {
	return firewallPolicyRuleOrderPtrType
}

func (in *firewallPolicyRuleOrderPtr) ToFirewallPolicyRuleOrderPtrOutput() FirewallPolicyRuleOrderPtrOutput {
	return pulumi.ToOutput(in).(FirewallPolicyRuleOrderPtrOutput)
}

func (in *firewallPolicyRuleOrderPtr) ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallPolicyRuleOrderPtrOutput)
}

func (in *firewallPolicyRuleOrderPtr) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyRuleOrder] {
	return pulumix.Output[*FirewallPolicyRuleOrder]{
		OutputState: in.ToFirewallPolicyRuleOrderPtrOutputWithContext(ctx).OutputState,
	}
}

type FirewallPolicyStreamExceptionPolicy string

const (
	FirewallPolicyStreamExceptionPolicyDrop     = FirewallPolicyStreamExceptionPolicy("DROP")
	FirewallPolicyStreamExceptionPolicyContinue = FirewallPolicyStreamExceptionPolicy("CONTINUE")
	FirewallPolicyStreamExceptionPolicyReject   = FirewallPolicyStreamExceptionPolicy("REJECT")
)

func (FirewallPolicyStreamExceptionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStreamExceptionPolicy)(nil)).Elem()
}

func (e FirewallPolicyStreamExceptionPolicy) ToFirewallPolicyStreamExceptionPolicyOutput() FirewallPolicyStreamExceptionPolicyOutput {
	return pulumi.ToOutput(e).(FirewallPolicyStreamExceptionPolicyOutput)
}

func (e FirewallPolicyStreamExceptionPolicy) ToFirewallPolicyStreamExceptionPolicyOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallPolicyStreamExceptionPolicyOutput)
}

func (e FirewallPolicyStreamExceptionPolicy) ToFirewallPolicyStreamExceptionPolicyPtrOutput() FirewallPolicyStreamExceptionPolicyPtrOutput {
	return e.ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyStreamExceptionPolicy) ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyPtrOutput {
	return FirewallPolicyStreamExceptionPolicy(e).ToFirewallPolicyStreamExceptionPolicyOutputWithContext(ctx).ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx)
}

func (e FirewallPolicyStreamExceptionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyStreamExceptionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyStreamExceptionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyStreamExceptionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallPolicyStreamExceptionPolicyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStreamExceptionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyStreamExceptionPolicy)(nil)).Elem()
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToFirewallPolicyStreamExceptionPolicyOutput() FirewallPolicyStreamExceptionPolicyOutput {
	return o
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToFirewallPolicyStreamExceptionPolicyOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyOutput {
	return o
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToFirewallPolicyStreamExceptionPolicyPtrOutput() FirewallPolicyStreamExceptionPolicyPtrOutput {
	return o.ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyStreamExceptionPolicy) *FirewallPolicyStreamExceptionPolicy {
		return &v
	}).(FirewallPolicyStreamExceptionPolicyPtrOutput)
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyStreamExceptionPolicy] {
	return pulumix.Output[FirewallPolicyStreamExceptionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyStreamExceptionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyStreamExceptionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyStreamExceptionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyStreamExceptionPolicyPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyStreamExceptionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyStreamExceptionPolicy)(nil)).Elem()
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) ToFirewallPolicyStreamExceptionPolicyPtrOutput() FirewallPolicyStreamExceptionPolicyPtrOutput {
	return o
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyPtrOutput {
	return o
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyStreamExceptionPolicy] {
	return pulumix.Output[*FirewallPolicyStreamExceptionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) Elem() FirewallPolicyStreamExceptionPolicyOutput {
	return o.ApplyT(func(v *FirewallPolicyStreamExceptionPolicy) FirewallPolicyStreamExceptionPolicy {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyStreamExceptionPolicy
		return ret
	}).(FirewallPolicyStreamExceptionPolicyOutput)
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyStreamExceptionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPolicyStreamExceptionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallPolicyStreamExceptionPolicyInput is an input type that accepts FirewallPolicyStreamExceptionPolicyArgs and FirewallPolicyStreamExceptionPolicyOutput values.
// You can construct a concrete instance of `FirewallPolicyStreamExceptionPolicyInput` via:
//
//	FirewallPolicyStreamExceptionPolicyArgs{...}
type FirewallPolicyStreamExceptionPolicyInput interface {
	pulumi.Input

	ToFirewallPolicyStreamExceptionPolicyOutput() FirewallPolicyStreamExceptionPolicyOutput
	ToFirewallPolicyStreamExceptionPolicyOutputWithContext(context.Context) FirewallPolicyStreamExceptionPolicyOutput
}

var firewallPolicyStreamExceptionPolicyPtrType = reflect.TypeOf((**FirewallPolicyStreamExceptionPolicy)(nil)).Elem()

type FirewallPolicyStreamExceptionPolicyPtrInput interface {
	pulumi.Input

	ToFirewallPolicyStreamExceptionPolicyPtrOutput() FirewallPolicyStreamExceptionPolicyPtrOutput
	ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(context.Context) FirewallPolicyStreamExceptionPolicyPtrOutput
}

type firewallPolicyStreamExceptionPolicyPtr string

func FirewallPolicyStreamExceptionPolicyPtr(v string) FirewallPolicyStreamExceptionPolicyPtrInput {
	return (*firewallPolicyStreamExceptionPolicyPtr)(&v)
}

func (*firewallPolicyStreamExceptionPolicyPtr) ElementType() reflect.Type {
	return firewallPolicyStreamExceptionPolicyPtrType
}

func (in *firewallPolicyStreamExceptionPolicyPtr) ToFirewallPolicyStreamExceptionPolicyPtrOutput() FirewallPolicyStreamExceptionPolicyPtrOutput {
	return pulumi.ToOutput(in).(FirewallPolicyStreamExceptionPolicyPtrOutput)
}

func (in *firewallPolicyStreamExceptionPolicyPtr) ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyStreamExceptionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallPolicyStreamExceptionPolicyPtrOutput)
}

func (in *firewallPolicyStreamExceptionPolicyPtr) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyStreamExceptionPolicy] {
	return pulumix.Output[*FirewallPolicyStreamExceptionPolicy]{
		OutputState: in.ToFirewallPolicyStreamExceptionPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type LoggingConfigurationLogDestinationConfigLogDestinationType string

const (
	LoggingConfigurationLogDestinationConfigLogDestinationTypeS3                  = LoggingConfigurationLogDestinationConfigLogDestinationType("S3")
	LoggingConfigurationLogDestinationConfigLogDestinationTypeCloudWatchLogs      = LoggingConfigurationLogDestinationConfigLogDestinationType("CloudWatchLogs")
	LoggingConfigurationLogDestinationConfigLogDestinationTypeKinesisDataFirehose = LoggingConfigurationLogDestinationConfigLogDestinationType("KinesisDataFirehose")
)

func (LoggingConfigurationLogDestinationConfigLogDestinationType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return e.ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return LoggingConfigurationLogDestinationConfigLogDestinationType(e).ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx).ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogDestinationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o.ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLogDestinationConfigLogDestinationType) *LoggingConfigurationLogDestinationConfigLogDestinationType {
		return &v
	}).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationLogDestinationConfigLogDestinationType] {
	return pulumix.Output[LoggingConfigurationLogDestinationConfigLogDestinationType]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogDestinationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogDestinationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLogDestinationConfigLogDestinationType] {
	return pulumix.Output[*LoggingConfigurationLogDestinationConfigLogDestinationType]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) Elem() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput {
	return o.ApplyT(func(v *LoggingConfigurationLogDestinationConfigLogDestinationType) LoggingConfigurationLogDestinationConfigLogDestinationType {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLogDestinationConfigLogDestinationType
		return ret
	}).(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationLogDestinationConfigLogDestinationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationLogDestinationConfigLogDestinationTypeInput is an input type that accepts LoggingConfigurationLogDestinationConfigLogDestinationTypeArgs and LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigLogDestinationTypeInput` via:
//
//	LoggingConfigurationLogDestinationConfigLogDestinationTypeArgs{...}
type LoggingConfigurationLogDestinationConfigLogDestinationTypeInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput
	ToLoggingConfigurationLogDestinationConfigLogDestinationTypeOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput
}

var loggingConfigurationLogDestinationConfigLogDestinationTypePtrType = reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogDestinationType)(nil)).Elem()

type LoggingConfigurationLogDestinationConfigLogDestinationTypePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput
	ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput
}

type loggingConfigurationLogDestinationConfigLogDestinationTypePtr string

func LoggingConfigurationLogDestinationConfigLogDestinationTypePtr(v string) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrInput {
	return (*loggingConfigurationLogDestinationConfigLogDestinationTypePtr)(&v)
}

func (*loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ElementType() reflect.Type {
	return loggingConfigurationLogDestinationConfigLogDestinationTypePtrType
}

func (in *loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput() LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogDestinationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLogDestinationConfigLogDestinationType] {
	return pulumix.Output[*LoggingConfigurationLogDestinationConfigLogDestinationType]{
		OutputState: in.ToLoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutputWithContext(ctx).OutputState,
	}
}

type LoggingConfigurationLogDestinationConfigLogType string

const (
	LoggingConfigurationLogDestinationConfigLogTypeAlert = LoggingConfigurationLogDestinationConfigLogType("ALERT")
	LoggingConfigurationLogDestinationConfigLogTypeFlow  = LoggingConfigurationLogDestinationConfigLogType("FLOW")
)

func (LoggingConfigurationLogDestinationConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return e.ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return LoggingConfigurationLogDestinationConfigLogType(e).ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx).ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLogDestinationConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationLogDestinationConfigLogTypeOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o.ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLogDestinationConfigLogType) *LoggingConfigurationLogDestinationConfigLogType {
		return &v
	}).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationLogDestinationConfigLogType] {
	return pulumix.Output[LoggingConfigurationLogDestinationConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLogDestinationConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationLogDestinationConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return o
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLogDestinationConfigLogType] {
	return pulumix.Output[*LoggingConfigurationLogDestinationConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) Elem() LoggingConfigurationLogDestinationConfigLogTypeOutput {
	return o.ApplyT(func(v *LoggingConfigurationLogDestinationConfigLogType) LoggingConfigurationLogDestinationConfigLogType {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLogDestinationConfigLogType
		return ret
	}).(LoggingConfigurationLogDestinationConfigLogTypeOutput)
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLogDestinationConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationLogDestinationConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationLogDestinationConfigLogTypeInput is an input type that accepts LoggingConfigurationLogDestinationConfigLogTypeArgs and LoggingConfigurationLogDestinationConfigLogTypeOutput values.
// You can construct a concrete instance of `LoggingConfigurationLogDestinationConfigLogTypeInput` via:
//
//	LoggingConfigurationLogDestinationConfigLogTypeArgs{...}
type LoggingConfigurationLogDestinationConfigLogTypeInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogTypeOutput() LoggingConfigurationLogDestinationConfigLogTypeOutput
	ToLoggingConfigurationLogDestinationConfigLogTypeOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogTypeOutput
}

var loggingConfigurationLogDestinationConfigLogTypePtrType = reflect.TypeOf((**LoggingConfigurationLogDestinationConfigLogType)(nil)).Elem()

type LoggingConfigurationLogDestinationConfigLogTypePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput
	ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput
}

type loggingConfigurationLogDestinationConfigLogTypePtr string

func LoggingConfigurationLogDestinationConfigLogTypePtr(v string) LoggingConfigurationLogDestinationConfigLogTypePtrInput {
	return (*loggingConfigurationLogDestinationConfigLogTypePtr)(&v)
}

func (*loggingConfigurationLogDestinationConfigLogTypePtr) ElementType() reflect.Type {
	return loggingConfigurationLogDestinationConfigLogTypePtrType
}

func (in *loggingConfigurationLogDestinationConfigLogTypePtr) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutput() LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogTypePtr) ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx context.Context) LoggingConfigurationLogDestinationConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationLogDestinationConfigLogTypePtrOutput)
}

func (in *loggingConfigurationLogDestinationConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLogDestinationConfigLogType] {
	return pulumix.Output[*LoggingConfigurationLogDestinationConfigLogType]{
		OutputState: in.ToLoggingConfigurationLogDestinationConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupGeneratedRulesType string

const (
	RuleGroupGeneratedRulesTypeAllowlist = RuleGroupGeneratedRulesType("ALLOWLIST")
	RuleGroupGeneratedRulesTypeDenylist  = RuleGroupGeneratedRulesType("DENYLIST")
)

func (RuleGroupGeneratedRulesType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupGeneratedRulesTypeOutput)
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupGeneratedRulesTypeOutput)
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return e.ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupGeneratedRulesType) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return RuleGroupGeneratedRulesType(e).ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx).ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx)
}

func (e RuleGroupGeneratedRulesType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupGeneratedRulesType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupGeneratedRulesType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupGeneratedRulesType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupGeneratedRulesTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupGeneratedRulesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypeOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypeOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return o.ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupGeneratedRulesType) *RuleGroupGeneratedRulesType {
		return &v
	}).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (o RuleGroupGeneratedRulesTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupGeneratedRulesType] {
	return pulumix.Output[RuleGroupGeneratedRulesType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupGeneratedRulesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupGeneratedRulesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupGeneratedRulesTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupGeneratedRulesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupGeneratedRulesType)(nil)).Elem()
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return o
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupGeneratedRulesType] {
	return pulumix.Output[*RuleGroupGeneratedRulesType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupGeneratedRulesTypePtrOutput) Elem() RuleGroupGeneratedRulesTypeOutput {
	return o.ApplyT(func(v *RuleGroupGeneratedRulesType) RuleGroupGeneratedRulesType {
		if v != nil {
			return *v
		}
		var ret RuleGroupGeneratedRulesType
		return ret
	}).(RuleGroupGeneratedRulesTypeOutput)
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupGeneratedRulesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupGeneratedRulesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupGeneratedRulesTypeInput is an input type that accepts RuleGroupGeneratedRulesTypeArgs and RuleGroupGeneratedRulesTypeOutput values.
// You can construct a concrete instance of `RuleGroupGeneratedRulesTypeInput` via:
//
//	RuleGroupGeneratedRulesTypeArgs{...}
type RuleGroupGeneratedRulesTypeInput interface {
	pulumi.Input

	ToRuleGroupGeneratedRulesTypeOutput() RuleGroupGeneratedRulesTypeOutput
	ToRuleGroupGeneratedRulesTypeOutputWithContext(context.Context) RuleGroupGeneratedRulesTypeOutput
}

var ruleGroupGeneratedRulesTypePtrType = reflect.TypeOf((**RuleGroupGeneratedRulesType)(nil)).Elem()

type RuleGroupGeneratedRulesTypePtrInput interface {
	pulumi.Input

	ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput
	ToRuleGroupGeneratedRulesTypePtrOutputWithContext(context.Context) RuleGroupGeneratedRulesTypePtrOutput
}

type ruleGroupGeneratedRulesTypePtr string

func RuleGroupGeneratedRulesTypePtr(v string) RuleGroupGeneratedRulesTypePtrInput {
	return (*ruleGroupGeneratedRulesTypePtr)(&v)
}

func (*ruleGroupGeneratedRulesTypePtr) ElementType() reflect.Type {
	return ruleGroupGeneratedRulesTypePtrType
}

func (in *ruleGroupGeneratedRulesTypePtr) ToRuleGroupGeneratedRulesTypePtrOutput() RuleGroupGeneratedRulesTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (in *ruleGroupGeneratedRulesTypePtr) ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx context.Context) RuleGroupGeneratedRulesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupGeneratedRulesTypePtrOutput)
}

func (in *ruleGroupGeneratedRulesTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupGeneratedRulesType] {
	return pulumix.Output[*RuleGroupGeneratedRulesType]{
		OutputState: in.ToRuleGroupGeneratedRulesTypePtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupHeaderDirection string

const (
	RuleGroupHeaderDirectionForward = RuleGroupHeaderDirection("FORWARD")
	RuleGroupHeaderDirectionAny     = RuleGroupHeaderDirection("ANY")
)

func (RuleGroupHeaderDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderDirection)(nil)).Elem()
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput {
	return pulumi.ToOutput(e).(RuleGroupHeaderDirectionOutput)
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupHeaderDirectionOutput)
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return e.ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderDirection) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return RuleGroupHeaderDirection(e).ToRuleGroupHeaderDirectionOutputWithContext(ctx).ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx)
}

func (e RuleGroupHeaderDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupHeaderDirectionOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderDirection)(nil)).Elem()
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput {
	return o
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionOutput {
	return o
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return o.ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupHeaderDirection) *RuleGroupHeaderDirection {
		return &v
	}).(RuleGroupHeaderDirectionPtrOutput)
}

func (o RuleGroupHeaderDirectionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupHeaderDirection] {
	return pulumix.Output[RuleGroupHeaderDirection]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupHeaderDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupHeaderDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupHeaderDirectionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupHeaderDirection)(nil)).Elem()
}

func (o RuleGroupHeaderDirectionPtrOutput) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return o
}

func (o RuleGroupHeaderDirectionPtrOutput) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return o
}

func (o RuleGroupHeaderDirectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupHeaderDirection] {
	return pulumix.Output[*RuleGroupHeaderDirection]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupHeaderDirectionPtrOutput) Elem() RuleGroupHeaderDirectionOutput {
	return o.ApplyT(func(v *RuleGroupHeaderDirection) RuleGroupHeaderDirection {
		if v != nil {
			return *v
		}
		var ret RuleGroupHeaderDirection
		return ret
	}).(RuleGroupHeaderDirectionOutput)
}

func (o RuleGroupHeaderDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupHeaderDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupHeaderDirectionInput is an input type that accepts RuleGroupHeaderDirectionArgs and RuleGroupHeaderDirectionOutput values.
// You can construct a concrete instance of `RuleGroupHeaderDirectionInput` via:
//
//	RuleGroupHeaderDirectionArgs{...}
type RuleGroupHeaderDirectionInput interface {
	pulumi.Input

	ToRuleGroupHeaderDirectionOutput() RuleGroupHeaderDirectionOutput
	ToRuleGroupHeaderDirectionOutputWithContext(context.Context) RuleGroupHeaderDirectionOutput
}

var ruleGroupHeaderDirectionPtrType = reflect.TypeOf((**RuleGroupHeaderDirection)(nil)).Elem()

type RuleGroupHeaderDirectionPtrInput interface {
	pulumi.Input

	ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput
	ToRuleGroupHeaderDirectionPtrOutputWithContext(context.Context) RuleGroupHeaderDirectionPtrOutput
}

type ruleGroupHeaderDirectionPtr string

func RuleGroupHeaderDirectionPtr(v string) RuleGroupHeaderDirectionPtrInput {
	return (*ruleGroupHeaderDirectionPtr)(&v)
}

func (*ruleGroupHeaderDirectionPtr) ElementType() reflect.Type {
	return ruleGroupHeaderDirectionPtrType
}

func (in *ruleGroupHeaderDirectionPtr) ToRuleGroupHeaderDirectionPtrOutput() RuleGroupHeaderDirectionPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupHeaderDirectionPtrOutput)
}

func (in *ruleGroupHeaderDirectionPtr) ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx context.Context) RuleGroupHeaderDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupHeaderDirectionPtrOutput)
}

func (in *ruleGroupHeaderDirectionPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupHeaderDirection] {
	return pulumix.Output[*RuleGroupHeaderDirection]{
		OutputState: in.ToRuleGroupHeaderDirectionPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupHeaderProtocol string

const (
	RuleGroupHeaderProtocolIp     = RuleGroupHeaderProtocol("IP")
	RuleGroupHeaderProtocolTcp    = RuleGroupHeaderProtocol("TCP")
	RuleGroupHeaderProtocolUdp    = RuleGroupHeaderProtocol("UDP")
	RuleGroupHeaderProtocolIcmp   = RuleGroupHeaderProtocol("ICMP")
	RuleGroupHeaderProtocolHttp   = RuleGroupHeaderProtocol("HTTP")
	RuleGroupHeaderProtocolFtp    = RuleGroupHeaderProtocol("FTP")
	RuleGroupHeaderProtocolTls    = RuleGroupHeaderProtocol("TLS")
	RuleGroupHeaderProtocolSmb    = RuleGroupHeaderProtocol("SMB")
	RuleGroupHeaderProtocolDns    = RuleGroupHeaderProtocol("DNS")
	RuleGroupHeaderProtocolDcerpc = RuleGroupHeaderProtocol("DCERPC")
	RuleGroupHeaderProtocolSsh    = RuleGroupHeaderProtocol("SSH")
	RuleGroupHeaderProtocolSmtp   = RuleGroupHeaderProtocol("SMTP")
	RuleGroupHeaderProtocolImap   = RuleGroupHeaderProtocol("IMAP")
	RuleGroupHeaderProtocolMsn    = RuleGroupHeaderProtocol("MSN")
	RuleGroupHeaderProtocolKrb5   = RuleGroupHeaderProtocol("KRB5")
	RuleGroupHeaderProtocolIkev2  = RuleGroupHeaderProtocol("IKEV2")
	RuleGroupHeaderProtocolTftp   = RuleGroupHeaderProtocol("TFTP")
	RuleGroupHeaderProtocolNtp    = RuleGroupHeaderProtocol("NTP")
	RuleGroupHeaderProtocolDhcp   = RuleGroupHeaderProtocol("DHCP")
)

func (RuleGroupHeaderProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderProtocol)(nil)).Elem()
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput {
	return pulumi.ToOutput(e).(RuleGroupHeaderProtocolOutput)
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupHeaderProtocolOutput)
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return e.ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderProtocol) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return RuleGroupHeaderProtocol(e).ToRuleGroupHeaderProtocolOutputWithContext(ctx).ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx)
}

func (e RuleGroupHeaderProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupHeaderProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupHeaderProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupHeaderProtocolOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupHeaderProtocol)(nil)).Elem()
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput {
	return o
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolOutput {
	return o
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return o.ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupHeaderProtocol) *RuleGroupHeaderProtocol {
		return &v
	}).(RuleGroupHeaderProtocolPtrOutput)
}

func (o RuleGroupHeaderProtocolOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupHeaderProtocol] {
	return pulumix.Output[RuleGroupHeaderProtocol]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupHeaderProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupHeaderProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupHeaderProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupHeaderProtocolPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupHeaderProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupHeaderProtocol)(nil)).Elem()
}

func (o RuleGroupHeaderProtocolPtrOutput) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return o
}

func (o RuleGroupHeaderProtocolPtrOutput) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return o
}

func (o RuleGroupHeaderProtocolPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupHeaderProtocol] {
	return pulumix.Output[*RuleGroupHeaderProtocol]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupHeaderProtocolPtrOutput) Elem() RuleGroupHeaderProtocolOutput {
	return o.ApplyT(func(v *RuleGroupHeaderProtocol) RuleGroupHeaderProtocol {
		if v != nil {
			return *v
		}
		var ret RuleGroupHeaderProtocol
		return ret
	}).(RuleGroupHeaderProtocolOutput)
}

func (o RuleGroupHeaderProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupHeaderProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupHeaderProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupHeaderProtocolInput is an input type that accepts RuleGroupHeaderProtocolArgs and RuleGroupHeaderProtocolOutput values.
// You can construct a concrete instance of `RuleGroupHeaderProtocolInput` via:
//
//	RuleGroupHeaderProtocolArgs{...}
type RuleGroupHeaderProtocolInput interface {
	pulumi.Input

	ToRuleGroupHeaderProtocolOutput() RuleGroupHeaderProtocolOutput
	ToRuleGroupHeaderProtocolOutputWithContext(context.Context) RuleGroupHeaderProtocolOutput
}

var ruleGroupHeaderProtocolPtrType = reflect.TypeOf((**RuleGroupHeaderProtocol)(nil)).Elem()

type RuleGroupHeaderProtocolPtrInput interface {
	pulumi.Input

	ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput
	ToRuleGroupHeaderProtocolPtrOutputWithContext(context.Context) RuleGroupHeaderProtocolPtrOutput
}

type ruleGroupHeaderProtocolPtr string

func RuleGroupHeaderProtocolPtr(v string) RuleGroupHeaderProtocolPtrInput {
	return (*ruleGroupHeaderProtocolPtr)(&v)
}

func (*ruleGroupHeaderProtocolPtr) ElementType() reflect.Type {
	return ruleGroupHeaderProtocolPtrType
}

func (in *ruleGroupHeaderProtocolPtr) ToRuleGroupHeaderProtocolPtrOutput() RuleGroupHeaderProtocolPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupHeaderProtocolPtrOutput)
}

func (in *ruleGroupHeaderProtocolPtr) ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx context.Context) RuleGroupHeaderProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupHeaderProtocolPtrOutput)
}

func (in *ruleGroupHeaderProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupHeaderProtocol] {
	return pulumix.Output[*RuleGroupHeaderProtocol]{
		OutputState: in.ToRuleGroupHeaderProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupRuleOrder string

const (
	RuleGroupRuleOrderDefaultActionOrder = RuleGroupRuleOrder("DEFAULT_ACTION_ORDER")
	RuleGroupRuleOrderStrictOrder        = RuleGroupRuleOrder("STRICT_ORDER")
)

func (RuleGroupRuleOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleOrder)(nil)).Elem()
}

func (e RuleGroupRuleOrder) ToRuleGroupRuleOrderOutput() RuleGroupRuleOrderOutput {
	return pulumi.ToOutput(e).(RuleGroupRuleOrderOutput)
}

func (e RuleGroupRuleOrder) ToRuleGroupRuleOrderOutputWithContext(ctx context.Context) RuleGroupRuleOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupRuleOrderOutput)
}

func (e RuleGroupRuleOrder) ToRuleGroupRuleOrderPtrOutput() RuleGroupRuleOrderPtrOutput {
	return e.ToRuleGroupRuleOrderPtrOutputWithContext(context.Background())
}

func (e RuleGroupRuleOrder) ToRuleGroupRuleOrderPtrOutputWithContext(ctx context.Context) RuleGroupRuleOrderPtrOutput {
	return RuleGroupRuleOrder(e).ToRuleGroupRuleOrderOutputWithContext(ctx).ToRuleGroupRuleOrderPtrOutputWithContext(ctx)
}

func (e RuleGroupRuleOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupRuleOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupRuleOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupRuleOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupRuleOrderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleOrder)(nil)).Elem()
}

func (o RuleGroupRuleOrderOutput) ToRuleGroupRuleOrderOutput() RuleGroupRuleOrderOutput {
	return o
}

func (o RuleGroupRuleOrderOutput) ToRuleGroupRuleOrderOutputWithContext(ctx context.Context) RuleGroupRuleOrderOutput {
	return o
}

func (o RuleGroupRuleOrderOutput) ToRuleGroupRuleOrderPtrOutput() RuleGroupRuleOrderPtrOutput {
	return o.ToRuleGroupRuleOrderPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleOrderOutput) ToRuleGroupRuleOrderPtrOutputWithContext(ctx context.Context) RuleGroupRuleOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRuleOrder) *RuleGroupRuleOrder {
		return &v
	}).(RuleGroupRuleOrderPtrOutput)
}

func (o RuleGroupRuleOrderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleOrder] {
	return pulumix.Output[RuleGroupRuleOrder]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupRuleOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupRuleOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupRuleOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupRuleOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupRuleOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupRuleOrderPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleOrder)(nil)).Elem()
}

func (o RuleGroupRuleOrderPtrOutput) ToRuleGroupRuleOrderPtrOutput() RuleGroupRuleOrderPtrOutput {
	return o
}

func (o RuleGroupRuleOrderPtrOutput) ToRuleGroupRuleOrderPtrOutputWithContext(ctx context.Context) RuleGroupRuleOrderPtrOutput {
	return o
}

func (o RuleGroupRuleOrderPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleOrder] {
	return pulumix.Output[*RuleGroupRuleOrder]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupRuleOrderPtrOutput) Elem() RuleGroupRuleOrderOutput {
	return o.ApplyT(func(v *RuleGroupRuleOrder) RuleGroupRuleOrder {
		if v != nil {
			return *v
		}
		var ret RuleGroupRuleOrder
		return ret
	}).(RuleGroupRuleOrderOutput)
}

func (o RuleGroupRuleOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupRuleOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupRuleOrderInput is an input type that accepts RuleGroupRuleOrderArgs and RuleGroupRuleOrderOutput values.
// You can construct a concrete instance of `RuleGroupRuleOrderInput` via:
//
//	RuleGroupRuleOrderArgs{...}
type RuleGroupRuleOrderInput interface {
	pulumi.Input

	ToRuleGroupRuleOrderOutput() RuleGroupRuleOrderOutput
	ToRuleGroupRuleOrderOutputWithContext(context.Context) RuleGroupRuleOrderOutput
}

var ruleGroupRuleOrderPtrType = reflect.TypeOf((**RuleGroupRuleOrder)(nil)).Elem()

type RuleGroupRuleOrderPtrInput interface {
	pulumi.Input

	ToRuleGroupRuleOrderPtrOutput() RuleGroupRuleOrderPtrOutput
	ToRuleGroupRuleOrderPtrOutputWithContext(context.Context) RuleGroupRuleOrderPtrOutput
}

type ruleGroupRuleOrderPtr string

func RuleGroupRuleOrderPtr(v string) RuleGroupRuleOrderPtrInput {
	return (*ruleGroupRuleOrderPtr)(&v)
}

func (*ruleGroupRuleOrderPtr) ElementType() reflect.Type {
	return ruleGroupRuleOrderPtrType
}

func (in *ruleGroupRuleOrderPtr) ToRuleGroupRuleOrderPtrOutput() RuleGroupRuleOrderPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupRuleOrderPtrOutput)
}

func (in *ruleGroupRuleOrderPtr) ToRuleGroupRuleOrderPtrOutputWithContext(ctx context.Context) RuleGroupRuleOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupRuleOrderPtrOutput)
}

func (in *ruleGroupRuleOrderPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleOrder] {
	return pulumix.Output[*RuleGroupRuleOrder]{
		OutputState: in.ToRuleGroupRuleOrderPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupStatefulRuleAction string

const (
	RuleGroupStatefulRuleActionPass   = RuleGroupStatefulRuleAction("PASS")
	RuleGroupStatefulRuleActionDrop   = RuleGroupStatefulRuleAction("DROP")
	RuleGroupStatefulRuleActionAlert  = RuleGroupStatefulRuleAction("ALERT")
	RuleGroupStatefulRuleActionReject = RuleGroupStatefulRuleAction("REJECT")
)

func (RuleGroupStatefulRuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput {
	return pulumi.ToOutput(e).(RuleGroupStatefulRuleActionOutput)
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupStatefulRuleActionOutput)
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return e.ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Background())
}

func (e RuleGroupStatefulRuleAction) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return RuleGroupStatefulRuleAction(e).ToRuleGroupStatefulRuleActionOutputWithContext(ctx).ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx)
}

func (e RuleGroupStatefulRuleAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupStatefulRuleAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupStatefulRuleAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupStatefulRuleAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupStatefulRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput {
	return o
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionOutput {
	return o
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return o.ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupStatefulRuleAction) *RuleGroupStatefulRuleAction {
		return &v
	}).(RuleGroupStatefulRuleActionPtrOutput)
}

func (o RuleGroupStatefulRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupStatefulRuleAction] {
	return pulumix.Output[RuleGroupStatefulRuleAction]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupStatefulRuleActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupStatefulRuleAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupStatefulRuleActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupStatefulRuleAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupStatefulRuleActionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupStatefulRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatefulRuleAction)(nil)).Elem()
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return o
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return o
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupStatefulRuleAction] {
	return pulumix.Output[*RuleGroupStatefulRuleAction]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupStatefulRuleActionPtrOutput) Elem() RuleGroupStatefulRuleActionOutput {
	return o.ApplyT(func(v *RuleGroupStatefulRuleAction) RuleGroupStatefulRuleAction {
		if v != nil {
			return *v
		}
		var ret RuleGroupStatefulRuleAction
		return ret
	}).(RuleGroupStatefulRuleActionOutput)
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatefulRuleActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupStatefulRuleAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupStatefulRuleActionInput is an input type that accepts RuleGroupStatefulRuleActionArgs and RuleGroupStatefulRuleActionOutput values.
// You can construct a concrete instance of `RuleGroupStatefulRuleActionInput` via:
//
//	RuleGroupStatefulRuleActionArgs{...}
type RuleGroupStatefulRuleActionInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleActionOutput() RuleGroupStatefulRuleActionOutput
	ToRuleGroupStatefulRuleActionOutputWithContext(context.Context) RuleGroupStatefulRuleActionOutput
}

var ruleGroupStatefulRuleActionPtrType = reflect.TypeOf((**RuleGroupStatefulRuleAction)(nil)).Elem()

type RuleGroupStatefulRuleActionPtrInput interface {
	pulumi.Input

	ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput
	ToRuleGroupStatefulRuleActionPtrOutputWithContext(context.Context) RuleGroupStatefulRuleActionPtrOutput
}

type ruleGroupStatefulRuleActionPtr string

func RuleGroupStatefulRuleActionPtr(v string) RuleGroupStatefulRuleActionPtrInput {
	return (*ruleGroupStatefulRuleActionPtr)(&v)
}

func (*ruleGroupStatefulRuleActionPtr) ElementType() reflect.Type {
	return ruleGroupStatefulRuleActionPtrType
}

func (in *ruleGroupStatefulRuleActionPtr) ToRuleGroupStatefulRuleActionPtrOutput() RuleGroupStatefulRuleActionPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupStatefulRuleActionPtrOutput)
}

func (in *ruleGroupStatefulRuleActionPtr) ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupStatefulRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupStatefulRuleActionPtrOutput)
}

func (in *ruleGroupStatefulRuleActionPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupStatefulRuleAction] {
	return pulumix.Output[*RuleGroupStatefulRuleAction]{
		OutputState: in.ToRuleGroupStatefulRuleActionPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupTargetType string

const (
	RuleGroupTargetTypeTlsSni   = RuleGroupTargetType("TLS_SNI")
	RuleGroupTargetTypeHttpHost = RuleGroupTargetType("HTTP_HOST")
)

func (RuleGroupTargetType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTargetType)(nil)).Elem()
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupTargetTypeOutput)
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypeOutputWithContext(ctx context.Context) RuleGroupTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTargetTypeOutput)
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return e.ToRuleGroupTargetTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupTargetType) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return RuleGroupTargetType(e).ToRuleGroupTargetTypeOutputWithContext(ctx).ToRuleGroupTargetTypePtrOutputWithContext(ctx)
}

func (e RuleGroupTargetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTargetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTargetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTargetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTargetTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput {
	return o
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypeOutputWithContext(ctx context.Context) RuleGroupTargetTypeOutput {
	return o
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return o.ToRuleGroupTargetTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTargetType) *RuleGroupTargetType {
		return &v
	}).(RuleGroupTargetTypePtrOutput)
}

func (o RuleGroupTargetTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupTargetType] {
	return pulumix.Output[RuleGroupTargetType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTargetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTargetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTargetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTargetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTargetTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypePtrOutput) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return o
}

func (o RuleGroupTargetTypePtrOutput) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return o
}

func (o RuleGroupTargetTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTargetType] {
	return pulumix.Output[*RuleGroupTargetType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTargetTypePtrOutput) Elem() RuleGroupTargetTypeOutput {
	return o.ApplyT(func(v *RuleGroupTargetType) RuleGroupTargetType {
		if v != nil {
			return *v
		}
		var ret RuleGroupTargetType
		return ret
	}).(RuleGroupTargetTypeOutput)
}

func (o RuleGroupTargetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTargetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTargetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTargetTypeInput is an input type that accepts RuleGroupTargetTypeArgs and RuleGroupTargetTypeOutput values.
// You can construct a concrete instance of `RuleGroupTargetTypeInput` via:
//
//	RuleGroupTargetTypeArgs{...}
type RuleGroupTargetTypeInput interface {
	pulumi.Input

	ToRuleGroupTargetTypeOutput() RuleGroupTargetTypeOutput
	ToRuleGroupTargetTypeOutputWithContext(context.Context) RuleGroupTargetTypeOutput
}

var ruleGroupTargetTypePtrType = reflect.TypeOf((**RuleGroupTargetType)(nil)).Elem()

type RuleGroupTargetTypePtrInput interface {
	pulumi.Input

	ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput
	ToRuleGroupTargetTypePtrOutputWithContext(context.Context) RuleGroupTargetTypePtrOutput
}

type ruleGroupTargetTypePtr string

func RuleGroupTargetTypePtr(v string) RuleGroupTargetTypePtrInput {
	return (*ruleGroupTargetTypePtr)(&v)
}

func (*ruleGroupTargetTypePtr) ElementType() reflect.Type {
	return ruleGroupTargetTypePtrType
}

func (in *ruleGroupTargetTypePtr) ToRuleGroupTargetTypePtrOutput() RuleGroupTargetTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTargetTypePtrOutput)
}

func (in *ruleGroupTargetTypePtr) ToRuleGroupTargetTypePtrOutputWithContext(ctx context.Context) RuleGroupTargetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTargetTypePtrOutput)
}

func (in *ruleGroupTargetTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTargetType] {
	return pulumix.Output[*RuleGroupTargetType]{
		OutputState: in.ToRuleGroupTargetTypePtrOutputWithContext(ctx).OutputState,
	}
}

// RuleGroupTargetTypeArrayInput is an input type that accepts RuleGroupTargetTypeArray and RuleGroupTargetTypeArrayOutput values.
// You can construct a concrete instance of `RuleGroupTargetTypeArrayInput` via:
//
//	RuleGroupTargetTypeArray{ RuleGroupTargetTypeArgs{...} }
type RuleGroupTargetTypeArrayInput interface {
	pulumi.Input

	ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput
	ToRuleGroupTargetTypeArrayOutputWithContext(context.Context) RuleGroupTargetTypeArrayOutput
}

type RuleGroupTargetTypeArray []RuleGroupTargetType

func (RuleGroupTargetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTargetType)(nil)).Elem()
}

func (i RuleGroupTargetTypeArray) ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput {
	return i.ToRuleGroupTargetTypeArrayOutputWithContext(context.Background())
}

func (i RuleGroupTargetTypeArray) ToRuleGroupTargetTypeArrayOutputWithContext(ctx context.Context) RuleGroupTargetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTargetTypeArrayOutput)
}

func (i RuleGroupTargetTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupTargetType] {
	return pulumix.Output[[]RuleGroupTargetType]{
		OutputState: i.ToRuleGroupTargetTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupTargetTypeArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTargetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTargetType)(nil)).Elem()
}

func (o RuleGroupTargetTypeArrayOutput) ToRuleGroupTargetTypeArrayOutput() RuleGroupTargetTypeArrayOutput {
	return o
}

func (o RuleGroupTargetTypeArrayOutput) ToRuleGroupTargetTypeArrayOutputWithContext(ctx context.Context) RuleGroupTargetTypeArrayOutput {
	return o
}

func (o RuleGroupTargetTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupTargetType] {
	return pulumix.Output[[]RuleGroupTargetType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTargetTypeArrayOutput) Index(i pulumi.IntInput) RuleGroupTargetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTargetType {
		return vs[0].([]RuleGroupTargetType)[vs[1].(int)]
	}).(RuleGroupTargetTypeOutput)
}

type RuleGroupTcpFlag string

const (
	RuleGroupTcpFlagFin = RuleGroupTcpFlag("FIN")
	RuleGroupTcpFlagSyn = RuleGroupTcpFlag("SYN")
	RuleGroupTcpFlagRst = RuleGroupTcpFlag("RST")
	RuleGroupTcpFlagPsh = RuleGroupTcpFlag("PSH")
	RuleGroupTcpFlagAck = RuleGroupTcpFlag("ACK")
	RuleGroupTcpFlagUrg = RuleGroupTcpFlag("URG")
	RuleGroupTcpFlagEce = RuleGroupTcpFlag("ECE")
	RuleGroupTcpFlagCwr = RuleGroupTcpFlag("CWR")
)

func (RuleGroupTcpFlag) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTcpFlag)(nil)).Elem()
}

func (e RuleGroupTcpFlag) ToRuleGroupTcpFlagOutput() RuleGroupTcpFlagOutput {
	return pulumi.ToOutput(e).(RuleGroupTcpFlagOutput)
}

func (e RuleGroupTcpFlag) ToRuleGroupTcpFlagOutputWithContext(ctx context.Context) RuleGroupTcpFlagOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTcpFlagOutput)
}

func (e RuleGroupTcpFlag) ToRuleGroupTcpFlagPtrOutput() RuleGroupTcpFlagPtrOutput {
	return e.ToRuleGroupTcpFlagPtrOutputWithContext(context.Background())
}

func (e RuleGroupTcpFlag) ToRuleGroupTcpFlagPtrOutputWithContext(ctx context.Context) RuleGroupTcpFlagPtrOutput {
	return RuleGroupTcpFlag(e).ToRuleGroupTcpFlagOutputWithContext(ctx).ToRuleGroupTcpFlagPtrOutputWithContext(ctx)
}

func (e RuleGroupTcpFlag) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTcpFlag) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTcpFlag) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTcpFlag) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTcpFlagOutput struct{ *pulumi.OutputState }

func (RuleGroupTcpFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTcpFlag)(nil)).Elem()
}

func (o RuleGroupTcpFlagOutput) ToRuleGroupTcpFlagOutput() RuleGroupTcpFlagOutput {
	return o
}

func (o RuleGroupTcpFlagOutput) ToRuleGroupTcpFlagOutputWithContext(ctx context.Context) RuleGroupTcpFlagOutput {
	return o
}

func (o RuleGroupTcpFlagOutput) ToRuleGroupTcpFlagPtrOutput() RuleGroupTcpFlagPtrOutput {
	return o.ToRuleGroupTcpFlagPtrOutputWithContext(context.Background())
}

func (o RuleGroupTcpFlagOutput) ToRuleGroupTcpFlagPtrOutputWithContext(ctx context.Context) RuleGroupTcpFlagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTcpFlag) *RuleGroupTcpFlag {
		return &v
	}).(RuleGroupTcpFlagPtrOutput)
}

func (o RuleGroupTcpFlagOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupTcpFlag] {
	return pulumix.Output[RuleGroupTcpFlag]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTcpFlagOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTcpFlagOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTcpFlag) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTcpFlagOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTcpFlagOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTcpFlag) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTcpFlagPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTcpFlagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTcpFlag)(nil)).Elem()
}

func (o RuleGroupTcpFlagPtrOutput) ToRuleGroupTcpFlagPtrOutput() RuleGroupTcpFlagPtrOutput {
	return o
}

func (o RuleGroupTcpFlagPtrOutput) ToRuleGroupTcpFlagPtrOutputWithContext(ctx context.Context) RuleGroupTcpFlagPtrOutput {
	return o
}

func (o RuleGroupTcpFlagPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTcpFlag] {
	return pulumix.Output[*RuleGroupTcpFlag]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTcpFlagPtrOutput) Elem() RuleGroupTcpFlagOutput {
	return o.ApplyT(func(v *RuleGroupTcpFlag) RuleGroupTcpFlag {
		if v != nil {
			return *v
		}
		var ret RuleGroupTcpFlag
		return ret
	}).(RuleGroupTcpFlagOutput)
}

func (o RuleGroupTcpFlagPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTcpFlagPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTcpFlag) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTcpFlagInput is an input type that accepts RuleGroupTcpFlagArgs and RuleGroupTcpFlagOutput values.
// You can construct a concrete instance of `RuleGroupTcpFlagInput` via:
//
//	RuleGroupTcpFlagArgs{...}
type RuleGroupTcpFlagInput interface {
	pulumi.Input

	ToRuleGroupTcpFlagOutput() RuleGroupTcpFlagOutput
	ToRuleGroupTcpFlagOutputWithContext(context.Context) RuleGroupTcpFlagOutput
}

var ruleGroupTcpFlagPtrType = reflect.TypeOf((**RuleGroupTcpFlag)(nil)).Elem()

type RuleGroupTcpFlagPtrInput interface {
	pulumi.Input

	ToRuleGroupTcpFlagPtrOutput() RuleGroupTcpFlagPtrOutput
	ToRuleGroupTcpFlagPtrOutputWithContext(context.Context) RuleGroupTcpFlagPtrOutput
}

type ruleGroupTcpFlagPtr string

func RuleGroupTcpFlagPtr(v string) RuleGroupTcpFlagPtrInput {
	return (*ruleGroupTcpFlagPtr)(&v)
}

func (*ruleGroupTcpFlagPtr) ElementType() reflect.Type {
	return ruleGroupTcpFlagPtrType
}

func (in *ruleGroupTcpFlagPtr) ToRuleGroupTcpFlagPtrOutput() RuleGroupTcpFlagPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTcpFlagPtrOutput)
}

func (in *ruleGroupTcpFlagPtr) ToRuleGroupTcpFlagPtrOutputWithContext(ctx context.Context) RuleGroupTcpFlagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTcpFlagPtrOutput)
}

func (in *ruleGroupTcpFlagPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTcpFlag] {
	return pulumix.Output[*RuleGroupTcpFlag]{
		OutputState: in.ToRuleGroupTcpFlagPtrOutputWithContext(ctx).OutputState,
	}
}

// RuleGroupTcpFlagArrayInput is an input type that accepts RuleGroupTcpFlagArray and RuleGroupTcpFlagArrayOutput values.
// You can construct a concrete instance of `RuleGroupTcpFlagArrayInput` via:
//
//	RuleGroupTcpFlagArray{ RuleGroupTcpFlagArgs{...} }
type RuleGroupTcpFlagArrayInput interface {
	pulumi.Input

	ToRuleGroupTcpFlagArrayOutput() RuleGroupTcpFlagArrayOutput
	ToRuleGroupTcpFlagArrayOutputWithContext(context.Context) RuleGroupTcpFlagArrayOutput
}

type RuleGroupTcpFlagArray []RuleGroupTcpFlag

func (RuleGroupTcpFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTcpFlag)(nil)).Elem()
}

func (i RuleGroupTcpFlagArray) ToRuleGroupTcpFlagArrayOutput() RuleGroupTcpFlagArrayOutput {
	return i.ToRuleGroupTcpFlagArrayOutputWithContext(context.Background())
}

func (i RuleGroupTcpFlagArray) ToRuleGroupTcpFlagArrayOutputWithContext(ctx context.Context) RuleGroupTcpFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTcpFlagArrayOutput)
}

func (i RuleGroupTcpFlagArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupTcpFlag] {
	return pulumix.Output[[]RuleGroupTcpFlag]{
		OutputState: i.ToRuleGroupTcpFlagArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupTcpFlagArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTcpFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTcpFlag)(nil)).Elem()
}

func (o RuleGroupTcpFlagArrayOutput) ToRuleGroupTcpFlagArrayOutput() RuleGroupTcpFlagArrayOutput {
	return o
}

func (o RuleGroupTcpFlagArrayOutput) ToRuleGroupTcpFlagArrayOutputWithContext(ctx context.Context) RuleGroupTcpFlagArrayOutput {
	return o
}

func (o RuleGroupTcpFlagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupTcpFlag] {
	return pulumix.Output[[]RuleGroupTcpFlag]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTcpFlagArrayOutput) Index(i pulumi.IntInput) RuleGroupTcpFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTcpFlag {
		return vs[0].([]RuleGroupTcpFlag)[vs[1].(int)]
	}).(RuleGroupTcpFlagOutput)
}

type RuleGroupTypeEnum string

const (
	RuleGroupTypeEnumStateless = RuleGroupTypeEnum("STATELESS")
	RuleGroupTypeEnumStateful  = RuleGroupTypeEnum("STATEFUL")
)

func (RuleGroupTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTypeEnum)(nil)).Elem()
}

func (e RuleGroupTypeEnum) ToRuleGroupTypeEnumOutput() RuleGroupTypeEnumOutput {
	return pulumi.ToOutput(e).(RuleGroupTypeEnumOutput)
}

func (e RuleGroupTypeEnum) ToRuleGroupTypeEnumOutputWithContext(ctx context.Context) RuleGroupTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTypeEnumOutput)
}

func (e RuleGroupTypeEnum) ToRuleGroupTypeEnumPtrOutput() RuleGroupTypeEnumPtrOutput {
	return e.ToRuleGroupTypeEnumPtrOutputWithContext(context.Background())
}

func (e RuleGroupTypeEnum) ToRuleGroupTypeEnumPtrOutputWithContext(ctx context.Context) RuleGroupTypeEnumPtrOutput {
	return RuleGroupTypeEnum(e).ToRuleGroupTypeEnumOutputWithContext(ctx).ToRuleGroupTypeEnumPtrOutputWithContext(ctx)
}

func (e RuleGroupTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTypeEnumOutput struct{ *pulumi.OutputState }

func (RuleGroupTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTypeEnum)(nil)).Elem()
}

func (o RuleGroupTypeEnumOutput) ToRuleGroupTypeEnumOutput() RuleGroupTypeEnumOutput {
	return o
}

func (o RuleGroupTypeEnumOutput) ToRuleGroupTypeEnumOutputWithContext(ctx context.Context) RuleGroupTypeEnumOutput {
	return o
}

func (o RuleGroupTypeEnumOutput) ToRuleGroupTypeEnumPtrOutput() RuleGroupTypeEnumPtrOutput {
	return o.ToRuleGroupTypeEnumPtrOutputWithContext(context.Background())
}

func (o RuleGroupTypeEnumOutput) ToRuleGroupTypeEnumPtrOutputWithContext(ctx context.Context) RuleGroupTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTypeEnum) *RuleGroupTypeEnum {
		return &v
	}).(RuleGroupTypeEnumPtrOutput)
}

func (o RuleGroupTypeEnumOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupTypeEnum] {
	return pulumix.Output[RuleGroupTypeEnum]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTypeEnum)(nil)).Elem()
}

func (o RuleGroupTypeEnumPtrOutput) ToRuleGroupTypeEnumPtrOutput() RuleGroupTypeEnumPtrOutput {
	return o
}

func (o RuleGroupTypeEnumPtrOutput) ToRuleGroupTypeEnumPtrOutputWithContext(ctx context.Context) RuleGroupTypeEnumPtrOutput {
	return o
}

func (o RuleGroupTypeEnumPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTypeEnum] {
	return pulumix.Output[*RuleGroupTypeEnum]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTypeEnumPtrOutput) Elem() RuleGroupTypeEnumOutput {
	return o.ApplyT(func(v *RuleGroupTypeEnum) RuleGroupTypeEnum {
		if v != nil {
			return *v
		}
		var ret RuleGroupTypeEnum
		return ret
	}).(RuleGroupTypeEnumOutput)
}

func (o RuleGroupTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTypeEnumInput is an input type that accepts RuleGroupTypeEnumArgs and RuleGroupTypeEnumOutput values.
// You can construct a concrete instance of `RuleGroupTypeEnumInput` via:
//
//	RuleGroupTypeEnumArgs{...}
type RuleGroupTypeEnumInput interface {
	pulumi.Input

	ToRuleGroupTypeEnumOutput() RuleGroupTypeEnumOutput
	ToRuleGroupTypeEnumOutputWithContext(context.Context) RuleGroupTypeEnumOutput
}

var ruleGroupTypeEnumPtrType = reflect.TypeOf((**RuleGroupTypeEnum)(nil)).Elem()

type RuleGroupTypeEnumPtrInput interface {
	pulumi.Input

	ToRuleGroupTypeEnumPtrOutput() RuleGroupTypeEnumPtrOutput
	ToRuleGroupTypeEnumPtrOutputWithContext(context.Context) RuleGroupTypeEnumPtrOutput
}

type ruleGroupTypeEnumPtr string

func RuleGroupTypeEnumPtr(v string) RuleGroupTypeEnumPtrInput {
	return (*ruleGroupTypeEnumPtr)(&v)
}

func (*ruleGroupTypeEnumPtr) ElementType() reflect.Type {
	return ruleGroupTypeEnumPtrType
}

func (in *ruleGroupTypeEnumPtr) ToRuleGroupTypeEnumPtrOutput() RuleGroupTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTypeEnumPtrOutput)
}

func (in *ruleGroupTypeEnumPtr) ToRuleGroupTypeEnumPtrOutputWithContext(ctx context.Context) RuleGroupTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTypeEnumPtrOutput)
}

func (in *ruleGroupTypeEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTypeEnum] {
	return pulumix.Output[*RuleGroupTypeEnum]{
		OutputState: in.ToRuleGroupTypeEnumPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyOverrideActionInput)(nil)).Elem(), FirewallPolicyOverrideAction("DROP_TO_ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyOverrideActionPtrInput)(nil)).Elem(), FirewallPolicyOverrideAction("DROP_TO_ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleOrderInput)(nil)).Elem(), FirewallPolicyRuleOrder("DEFAULT_ACTION_ORDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleOrderPtrInput)(nil)).Elem(), FirewallPolicyRuleOrder("DEFAULT_ACTION_ORDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyStreamExceptionPolicyInput)(nil)).Elem(), FirewallPolicyStreamExceptionPolicy("DROP"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyStreamExceptionPolicyPtrInput)(nil)).Elem(), FirewallPolicyStreamExceptionPolicy("DROP"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationTypeInput)(nil)).Elem(), LoggingConfigurationLogDestinationConfigLogDestinationType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogDestinationTypePtrInput)(nil)).Elem(), LoggingConfigurationLogDestinationConfigLogDestinationType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogTypeInput)(nil)).Elem(), LoggingConfigurationLogDestinationConfigLogType("ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLogDestinationConfigLogTypePtrInput)(nil)).Elem(), LoggingConfigurationLogDestinationConfigLogType("ALERT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupGeneratedRulesTypeInput)(nil)).Elem(), RuleGroupGeneratedRulesType("ALLOWLIST"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupGeneratedRulesTypePtrInput)(nil)).Elem(), RuleGroupGeneratedRulesType("ALLOWLIST"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupHeaderDirectionInput)(nil)).Elem(), RuleGroupHeaderDirection("FORWARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupHeaderDirectionPtrInput)(nil)).Elem(), RuleGroupHeaderDirection("FORWARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupHeaderProtocolInput)(nil)).Elem(), RuleGroupHeaderProtocol("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupHeaderProtocolPtrInput)(nil)).Elem(), RuleGroupHeaderProtocol("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupRuleOrderInput)(nil)).Elem(), RuleGroupRuleOrder("DEFAULT_ACTION_ORDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupRuleOrderPtrInput)(nil)).Elem(), RuleGroupRuleOrder("DEFAULT_ACTION_ORDER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupStatefulRuleActionInput)(nil)).Elem(), RuleGroupStatefulRuleAction("PASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupStatefulRuleActionPtrInput)(nil)).Elem(), RuleGroupStatefulRuleAction("PASS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTargetTypeInput)(nil)).Elem(), RuleGroupTargetType("TLS_SNI"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTargetTypePtrInput)(nil)).Elem(), RuleGroupTargetType("TLS_SNI"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTargetTypeArrayInput)(nil)).Elem(), RuleGroupTargetTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTcpFlagInput)(nil)).Elem(), RuleGroupTcpFlag("FIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTcpFlagPtrInput)(nil)).Elem(), RuleGroupTcpFlag("FIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTcpFlagArrayInput)(nil)).Elem(), RuleGroupTcpFlagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTypeEnumInput)(nil)).Elem(), RuleGroupTypeEnum("STATELESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTypeEnumPtrInput)(nil)).Elem(), RuleGroupTypeEnum("STATELESS"))
	pulumi.RegisterOutputType(FirewallPolicyOverrideActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyOverrideActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleOrderOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleOrderPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStreamExceptionPolicyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyStreamExceptionPolicyPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogDestinationTypeOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogDestinationTypePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogTypeOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLogDestinationConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupGeneratedRulesTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupGeneratedRulesTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderDirectionOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderDirectionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderProtocolOutput{})
	pulumi.RegisterOutputType(RuleGroupHeaderProtocolPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOrderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOrderPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleActionOutput{})
	pulumi.RegisterOutputType(RuleGroupStatefulRuleActionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTargetTypeArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTcpFlagOutput{})
	pulumi.RegisterOutputType(RuleGroupTcpFlagPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTcpFlagArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTypeEnumOutput{})
	pulumi.RegisterOutputType(RuleGroupTypeEnumPtrOutput{})
}
