// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::NetworkFirewall::Firewall
type Firewall struct {
	pulumi.CustomResourceState

	DeleteProtection               pulumi.BoolPtrOutput             `pulumi:"deleteProtection"`
	Description                    pulumi.StringPtrOutput           `pulumi:"description"`
	EndpointIds                    pulumi.StringArrayOutput         `pulumi:"endpointIds"`
	FirewallArn                    pulumi.StringOutput              `pulumi:"firewallArn"`
	FirewallId                     pulumi.StringOutput              `pulumi:"firewallId"`
	FirewallName                   pulumi.StringOutput              `pulumi:"firewallName"`
	FirewallPolicyArn              pulumi.StringOutput              `pulumi:"firewallPolicyArn"`
	FirewallPolicyChangeProtection pulumi.BoolPtrOutput             `pulumi:"firewallPolicyChangeProtection"`
	SubnetChangeProtection         pulumi.BoolPtrOutput             `pulumi:"subnetChangeProtection"`
	SubnetMappings                 FirewallSubnetMappingArrayOutput `pulumi:"subnetMappings"`
	Tags                           FirewallTagArrayOutput           `pulumi:"tags"`
	VpcId                          pulumi.StringOutput              `pulumi:"vpcId"`
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOption) (*Firewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallPolicyArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicyArn'")
	}
	if args.SubnetMappings == nil {
		return nil, errors.New("invalid value for required argument 'SubnetMappings'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource Firewall
	err := ctx.RegisterResource("aws-native:networkfirewall:Firewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallState, opts ...pulumi.ResourceOption) (*Firewall, error) {
	var resource Firewall
	err := ctx.ReadResource("aws-native:networkfirewall:Firewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Firewall resources.
type firewallState struct {
}

type FirewallState struct {
}

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallState)(nil)).Elem()
}

type firewallArgs struct {
	DeleteProtection               *bool                   `pulumi:"deleteProtection"`
	Description                    *string                 `pulumi:"description"`
	FirewallName                   *string                 `pulumi:"firewallName"`
	FirewallPolicyArn              string                  `pulumi:"firewallPolicyArn"`
	FirewallPolicyChangeProtection *bool                   `pulumi:"firewallPolicyChangeProtection"`
	SubnetChangeProtection         *bool                   `pulumi:"subnetChangeProtection"`
	SubnetMappings                 []FirewallSubnetMapping `pulumi:"subnetMappings"`
	Tags                           []FirewallTag           `pulumi:"tags"`
	VpcId                          string                  `pulumi:"vpcId"`
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	DeleteProtection               pulumi.BoolPtrInput
	Description                    pulumi.StringPtrInput
	FirewallName                   pulumi.StringPtrInput
	FirewallPolicyArn              pulumi.StringInput
	FirewallPolicyChangeProtection pulumi.BoolPtrInput
	SubnetChangeProtection         pulumi.BoolPtrInput
	SubnetMappings                 FirewallSubnetMappingArrayInput
	Tags                           FirewallTagArrayInput
	VpcId                          pulumi.StringInput
}

func (FirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallArgs)(nil)).Elem()
}

type FirewallInput interface {
	pulumi.Input

	ToFirewallOutput() FirewallOutput
	ToFirewallOutputWithContext(ctx context.Context) FirewallOutput
}

func (*Firewall) ElementType() reflect.Type {
	return reflect.TypeOf((*Firewall)(nil))
}

func (i *Firewall) ToFirewallOutput() FirewallOutput {
	return i.ToFirewallOutputWithContext(context.Background())
}

func (i *Firewall) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutput)
}

type FirewallOutput struct{ *pulumi.OutputState }

func (FirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Firewall)(nil))
}

func (o FirewallOutput) ToFirewallOutput() FirewallOutput {
	return o
}

func (o FirewallOutput) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInput)(nil)).Elem(), &Firewall{})
	pulumi.RegisterOutputType(FirewallOutput{})
}
