// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::NetworkFirewall::Firewall
type Firewall struct {
	pulumi.CustomResourceState

	// A setting indicating whether the firewall is protected against changes to its Availability Zone configuration. When set to `TRUE` , you must first disable this protection before adding or removing Availability Zones.
	AvailabilityZoneChangeProtection pulumi.BoolPtrOutput `pulumi:"availabilityZoneChangeProtection"`
	// The Availability Zones where the firewall endpoints are created for a transit gateway-attached firewall. Each mapping specifies an Availability Zone where the firewall processes traffic.
	AvailabilityZoneMappings FirewallAvailabilityZoneMappingArrayOutput `pulumi:"availabilityZoneMappings"`
	// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
	DeleteProtection pulumi.BoolPtrOutput `pulumi:"deleteProtection"`
	// A description of the firewall.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The types of analysis to enable for the firewall. Can be TLS_SNI, HTTP_HOST, or both.
	EnabledAnalysisTypes FirewallEnabledAnalysisTypeArrayOutput `pulumi:"enabledAnalysisTypes"`
	// The unique IDs of the firewall endpoints for all of the subnets that you attached to the firewall. The subnets are not listed in any particular order. For example: `["us-west-2c:vpce-111122223333", "us-west-2a:vpce-987654321098", "us-west-2b:vpce-012345678901"]` .
	EndpointIds pulumi.StringArrayOutput `pulumi:"endpointIds"`
	// The Amazon Resource Name (ARN) of the firewall.
	FirewallArn pulumi.StringOutput `pulumi:"firewallArn"`
	// The name of the firewallresource.
	FirewallId pulumi.StringOutput `pulumi:"firewallId"`
	// The descriptive name of the firewall. You can't change the name of a firewall after you create it.
	FirewallName pulumi.StringOutput `pulumi:"firewallName"`
	// The Amazon Resource Name (ARN) of the firewall policy.
	//
	// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
	FirewallPolicyArn pulumi.StringOutput `pulumi:"firewallPolicyArn"`
	// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	FirewallPolicyChangeProtection pulumi.BoolPtrOutput `pulumi:"firewallPolicyChangeProtection"`
	// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	SubnetChangeProtection pulumi.BoolPtrOutput `pulumi:"subnetChangeProtection"`
	// The primary public subnets that Network Firewall is using for the firewall. Network Firewall creates a firewall endpoint in each subnet. Create a subnet mapping for each Availability Zone where you want to use the firewall.
	//
	// These subnets are all defined for a single, primary VPC, and each must belong to a different Availability Zone. Each of these subnets establishes the availability of the firewall in its Availability Zone.
	//
	// In addition to these subnets, you can define other endpoints for the firewall in `VpcEndpointAssociation` resources. You can define these additional endpoints for any VPC, and for any of the Availability Zones where the firewall resource already has a subnet mapping. VPC endpoint associations give you the ability to protect multiple VPCs using a single firewall, and to define multiple firewall endpoints for a VPC in a single Availability Zone.
	SubnetMappings FirewallSubnetMappingArrayOutput `pulumi:"subnetMappings"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags                       aws.TagArrayOutput  `pulumi:"tags"`
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// The unique identifier of the transit gateway associated with this firewall. This field is only present for transit gateway-attached firewalls.
	TransitGatewayId pulumi.StringPtrOutput `pulumi:"transitGatewayId"`
	// The unique identifier of the VPC where the firewall is in use. You can't change the VPC of a firewall after you create the firewall.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOption) (*Firewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallPolicyArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicyArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"firewallName",
		"vpcId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Firewall
	err := ctx.RegisterResource("aws-native:networkfirewall:Firewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallState, opts ...pulumi.ResourceOption) (*Firewall, error) {
	var resource Firewall
	err := ctx.ReadResource("aws-native:networkfirewall:Firewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Firewall resources.
type firewallState struct {
}

type FirewallState struct {
}

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallState)(nil)).Elem()
}

type firewallArgs struct {
	// A setting indicating whether the firewall is protected against changes to its Availability Zone configuration. When set to `TRUE` , you must first disable this protection before adding or removing Availability Zones.
	AvailabilityZoneChangeProtection *bool `pulumi:"availabilityZoneChangeProtection"`
	// The Availability Zones where the firewall endpoints are created for a transit gateway-attached firewall. Each mapping specifies an Availability Zone where the firewall processes traffic.
	AvailabilityZoneMappings []FirewallAvailabilityZoneMapping `pulumi:"availabilityZoneMappings"`
	// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A description of the firewall.
	Description *string `pulumi:"description"`
	// The types of analysis to enable for the firewall. Can be TLS_SNI, HTTP_HOST, or both.
	EnabledAnalysisTypes []FirewallEnabledAnalysisType `pulumi:"enabledAnalysisTypes"`
	// The descriptive name of the firewall. You can't change the name of a firewall after you create it.
	FirewallName *string `pulumi:"firewallName"`
	// The Amazon Resource Name (ARN) of the firewall policy.
	//
	// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
	FirewallPolicyArn string `pulumi:"firewallPolicyArn"`
	// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	FirewallPolicyChangeProtection *bool `pulumi:"firewallPolicyChangeProtection"`
	// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	SubnetChangeProtection *bool `pulumi:"subnetChangeProtection"`
	// The primary public subnets that Network Firewall is using for the firewall. Network Firewall creates a firewall endpoint in each subnet. Create a subnet mapping for each Availability Zone where you want to use the firewall.
	//
	// These subnets are all defined for a single, primary VPC, and each must belong to a different Availability Zone. Each of these subnets establishes the availability of the firewall in its Availability Zone.
	//
	// In addition to these subnets, you can define other endpoints for the firewall in `VpcEndpointAssociation` resources. You can define these additional endpoints for any VPC, and for any of the Availability Zones where the firewall resource already has a subnet mapping. VPC endpoint associations give you the ability to protect multiple VPCs using a single firewall, and to define multiple firewall endpoints for a VPC in a single Availability Zone.
	SubnetMappings []FirewallSubnetMapping `pulumi:"subnetMappings"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
	// The unique identifier of the transit gateway associated with this firewall. This field is only present for transit gateway-attached firewalls.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// The unique identifier of the VPC where the firewall is in use. You can't change the VPC of a firewall after you create the firewall.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	// A setting indicating whether the firewall is protected against changes to its Availability Zone configuration. When set to `TRUE` , you must first disable this protection before adding or removing Availability Zones.
	AvailabilityZoneChangeProtection pulumi.BoolPtrInput
	// The Availability Zones where the firewall endpoints are created for a transit gateway-attached firewall. Each mapping specifies an Availability Zone where the firewall processes traffic.
	AvailabilityZoneMappings FirewallAvailabilityZoneMappingArrayInput
	// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
	DeleteProtection pulumi.BoolPtrInput
	// A description of the firewall.
	Description pulumi.StringPtrInput
	// The types of analysis to enable for the firewall. Can be TLS_SNI, HTTP_HOST, or both.
	EnabledAnalysisTypes FirewallEnabledAnalysisTypeArrayInput
	// The descriptive name of the firewall. You can't change the name of a firewall after you create it.
	FirewallName pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the firewall policy.
	//
	// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
	FirewallPolicyArn pulumi.StringInput
	// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	FirewallPolicyChangeProtection pulumi.BoolPtrInput
	// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
	SubnetChangeProtection pulumi.BoolPtrInput
	// The primary public subnets that Network Firewall is using for the firewall. Network Firewall creates a firewall endpoint in each subnet. Create a subnet mapping for each Availability Zone where you want to use the firewall.
	//
	// These subnets are all defined for a single, primary VPC, and each must belong to a different Availability Zone. Each of these subnets establishes the availability of the firewall in its Availability Zone.
	//
	// In addition to these subnets, you can define other endpoints for the firewall in `VpcEndpointAssociation` resources. You can define these additional endpoints for any VPC, and for any of the Availability Zones where the firewall resource already has a subnet mapping. VPC endpoint associations give you the ability to protect multiple VPCs using a single firewall, and to define multiple firewall endpoints for a VPC in a single Availability Zone.
	SubnetMappings FirewallSubnetMappingArrayInput
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags aws.TagArrayInput
	// The unique identifier of the transit gateway associated with this firewall. This field is only present for transit gateway-attached firewalls.
	TransitGatewayId pulumi.StringPtrInput
	// The unique identifier of the VPC where the firewall is in use. You can't change the VPC of a firewall after you create the firewall.
	VpcId pulumi.StringPtrInput
}

func (FirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallArgs)(nil)).Elem()
}

type FirewallInput interface {
	pulumi.Input

	ToFirewallOutput() FirewallOutput
	ToFirewallOutputWithContext(ctx context.Context) FirewallOutput
}

func (*Firewall) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (i *Firewall) ToFirewallOutput() FirewallOutput {
	return i.ToFirewallOutputWithContext(context.Background())
}

func (i *Firewall) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutput)
}

type FirewallOutput struct{ *pulumi.OutputState }

func (FirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (o FirewallOutput) ToFirewallOutput() FirewallOutput {
	return o
}

func (o FirewallOutput) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return o
}

// A setting indicating whether the firewall is protected against changes to its Availability Zone configuration. When set to `TRUE` , you must first disable this protection before adding or removing Availability Zones.
func (o FirewallOutput) AvailabilityZoneChangeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.BoolPtrOutput { return v.AvailabilityZoneChangeProtection }).(pulumi.BoolPtrOutput)
}

// The Availability Zones where the firewall endpoints are created for a transit gateway-attached firewall. Each mapping specifies an Availability Zone where the firewall processes traffic.
func (o FirewallOutput) AvailabilityZoneMappings() FirewallAvailabilityZoneMappingArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallAvailabilityZoneMappingArrayOutput { return v.AvailabilityZoneMappings }).(FirewallAvailabilityZoneMappingArrayOutput)
}

// A flag indicating whether it is possible to delete the firewall. A setting of `TRUE` indicates that the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. When you create a firewall, the operation initializes this flag to `TRUE` .
func (o FirewallOutput) DeleteProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.BoolPtrOutput { return v.DeleteProtection }).(pulumi.BoolPtrOutput)
}

// A description of the firewall.
func (o FirewallOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The types of analysis to enable for the firewall. Can be TLS_SNI, HTTP_HOST, or both.
func (o FirewallOutput) EnabledAnalysisTypes() FirewallEnabledAnalysisTypeArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallEnabledAnalysisTypeArrayOutput { return v.EnabledAnalysisTypes }).(FirewallEnabledAnalysisTypeArrayOutput)
}

// The unique IDs of the firewall endpoints for all of the subnets that you attached to the firewall. The subnets are not listed in any particular order. For example: `["us-west-2c:vpce-111122223333", "us-west-2a:vpce-987654321098", "us-west-2b:vpce-012345678901"]` .
func (o FirewallOutput) EndpointIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringArrayOutput { return v.EndpointIds }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the firewall.
func (o FirewallOutput) FirewallArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.FirewallArn }).(pulumi.StringOutput)
}

// The name of the firewallresource.
func (o FirewallOutput) FirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.FirewallId }).(pulumi.StringOutput)
}

// The descriptive name of the firewall. You can't change the name of a firewall after you create it.
func (o FirewallOutput) FirewallName() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.FirewallName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the firewall policy.
//
// The relationship of firewall to firewall policy is many to one. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
func (o FirewallOutput) FirewallPolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.FirewallPolicyArn }).(pulumi.StringOutput)
}

// A setting indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
func (o FirewallOutput) FirewallPolicyChangeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.BoolPtrOutput { return v.FirewallPolicyChangeProtection }).(pulumi.BoolPtrOutput)
}

// A setting indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. When you create a firewall, the operation initializes this setting to `TRUE` .
func (o FirewallOutput) SubnetChangeProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.BoolPtrOutput { return v.SubnetChangeProtection }).(pulumi.BoolPtrOutput)
}

// The primary public subnets that Network Firewall is using for the firewall. Network Firewall creates a firewall endpoint in each subnet. Create a subnet mapping for each Availability Zone where you want to use the firewall.
//
// These subnets are all defined for a single, primary VPC, and each must belong to a different Availability Zone. Each of these subnets establishes the availability of the firewall in its Availability Zone.
//
// In addition to these subnets, you can define other endpoints for the firewall in `VpcEndpointAssociation` resources. You can define these additional endpoints for any VPC, and for any of the Availability Zones where the firewall resource already has a subnet mapping. VPC endpoint associations give you the ability to protect multiple VPCs using a single firewall, and to define multiple firewall endpoints for a VPC in a single Availability Zone.
func (o FirewallOutput) SubnetMappings() FirewallSubnetMappingArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallSubnetMappingArrayOutput { return v.SubnetMappings }).(FirewallSubnetMappingArrayOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o FirewallOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Firewall) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o FirewallOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringOutput { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// The unique identifier of the transit gateway associated with this firewall. This field is only present for transit gateway-attached firewalls.
func (o FirewallOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// The unique identifier of the VPC where the firewall is in use. You can't change the VPC of a firewall after you create the firewall.
func (o FirewallOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInput)(nil)).Elem(), &Firewall{})
	pulumi.RegisterOutputType(FirewallOutput{})
}
