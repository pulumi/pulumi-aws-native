// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppSync::GraphQLApi
type GraphQlApi struct {
	pulumi.CustomResourceState

	// A list of additional authentication providers for the GraphqlApi API.
	AdditionalAuthenticationProviders GraphQlApiAdditionalAuthenticationProviderArrayOutput `pulumi:"additionalAuthenticationProviders"`
	// Unique AWS AppSync GraphQL API identifier.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
	ApiType pulumi.StringPtrOutput `pulumi:"apiType"`
	// The Amazon Resource Name (ARN) of the API key
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Security configuration for your GraphQL API
	AuthenticationType pulumi.StringOutput `pulumi:"authenticationType"`
	// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
	EnhancedMetricsConfig GraphQlApiEnhancedMetricsConfigPtrOutput `pulumi:"enhancedMetricsConfig"`
	// A map containing the list of resources with their properties and environment variables.
	EnvironmentVariables pulumi.StringMapOutput `pulumi:"environmentVariables"`
	// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
	GraphQlDns pulumi.StringOutput `pulumi:"graphQlDns"`
	// The GraphQL endpoint ARN.
	GraphQlEndpointArn pulumi.StringOutput `pulumi:"graphQlEndpointArn"`
	// The Endpoint URL of your GraphQL API.
	GraphQlUrl pulumi.StringOutput `pulumi:"graphQlUrl"`
	// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
	IntrospectionConfig pulumi.StringPtrOutput `pulumi:"introspectionConfig"`
	// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
	LambdaAuthorizerConfig GraphQlApiLambdaAuthorizerConfigPtrOutput `pulumi:"lambdaAuthorizerConfig"`
	// The Amazon CloudWatch Logs configuration.
	LogConfig GraphQlApiLogConfigPtrOutput `pulumi:"logConfig"`
	// The AWS Identity and Access Management service role ARN for a merged API.
	MergedApiExecutionRoleArn pulumi.StringPtrOutput `pulumi:"mergedApiExecutionRoleArn"`
	// The API name
	Name pulumi.StringOutput `pulumi:"name"`
	// The OpenID Connect configuration.
	OpenIdConnectConfig GraphQlApiOpenIdConnectConfigPtrOutput `pulumi:"openIdConnectConfig"`
	// The owner contact information for an API resource.
	OwnerContact pulumi.StringPtrOutput `pulumi:"ownerContact"`
	// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
	QueryDepthLimit pulumi.IntPtrOutput `pulumi:"queryDepthLimit"`
	// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
	RealtimeDns pulumi.StringOutput `pulumi:"realtimeDns"`
	// The GraphQL API real-time endpoint URL.
	RealtimeUrl pulumi.StringOutput `pulumi:"realtimeUrl"`
	// The maximum number of resolvers that can be invoked in a single request.
	ResolverCountLimit pulumi.IntPtrOutput `pulumi:"resolverCountLimit"`
	// An arbitrary set of tags (key-value pairs) for this GraphQL API.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
	UserPoolConfig GraphQlApiUserPoolConfigPtrOutput `pulumi:"userPoolConfig"`
	// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
	Visibility pulumi.StringPtrOutput `pulumi:"visibility"`
	// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
	XrayEnabled pulumi.BoolPtrOutput `pulumi:"xrayEnabled"`
}

// NewGraphQlApi registers a new resource with the given unique name, arguments, and options.
func NewGraphQlApi(ctx *pulumi.Context,
	name string, args *GraphQlApiArgs, opts ...pulumi.ResourceOption) (*GraphQlApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GraphQlApi
	err := ctx.RegisterResource("aws-native:appsync:GraphQlApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGraphQlApi gets an existing GraphQlApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGraphQlApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GraphQlApiState, opts ...pulumi.ResourceOption) (*GraphQlApi, error) {
	var resource GraphQlApi
	err := ctx.ReadResource("aws-native:appsync:GraphQlApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GraphQlApi resources.
type graphQlApiState struct {
}

type GraphQlApiState struct {
}

func (GraphQlApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*graphQlApiState)(nil)).Elem()
}

type graphQlApiArgs struct {
	// A list of additional authentication providers for the GraphqlApi API.
	AdditionalAuthenticationProviders []GraphQlApiAdditionalAuthenticationProvider `pulumi:"additionalAuthenticationProviders"`
	// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
	ApiType *string `pulumi:"apiType"`
	// Security configuration for your GraphQL API
	AuthenticationType string `pulumi:"authenticationType"`
	// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
	EnhancedMetricsConfig *GraphQlApiEnhancedMetricsConfig `pulumi:"enhancedMetricsConfig"`
	// A map containing the list of resources with their properties and environment variables.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
	IntrospectionConfig *string `pulumi:"introspectionConfig"`
	// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
	LambdaAuthorizerConfig *GraphQlApiLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	// The Amazon CloudWatch Logs configuration.
	LogConfig *GraphQlApiLogConfig `pulumi:"logConfig"`
	// The AWS Identity and Access Management service role ARN for a merged API.
	MergedApiExecutionRoleArn *string `pulumi:"mergedApiExecutionRoleArn"`
	// The API name
	Name *string `pulumi:"name"`
	// The OpenID Connect configuration.
	OpenIdConnectConfig *GraphQlApiOpenIdConnectConfig `pulumi:"openIdConnectConfig"`
	// The owner contact information for an API resource.
	OwnerContact *string `pulumi:"ownerContact"`
	// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
	QueryDepthLimit *int `pulumi:"queryDepthLimit"`
	// The maximum number of resolvers that can be invoked in a single request.
	ResolverCountLimit *int `pulumi:"resolverCountLimit"`
	// An arbitrary set of tags (key-value pairs) for this GraphQL API.
	Tags []aws.Tag `pulumi:"tags"`
	// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
	UserPoolConfig *GraphQlApiUserPoolConfig `pulumi:"userPoolConfig"`
	// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
	Visibility *string `pulumi:"visibility"`
	// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
	XrayEnabled *bool `pulumi:"xrayEnabled"`
}

// The set of arguments for constructing a GraphQlApi resource.
type GraphQlApiArgs struct {
	// A list of additional authentication providers for the GraphqlApi API.
	AdditionalAuthenticationProviders GraphQlApiAdditionalAuthenticationProviderArrayInput
	// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
	ApiType pulumi.StringPtrInput
	// Security configuration for your GraphQL API
	AuthenticationType pulumi.StringInput
	// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
	EnhancedMetricsConfig GraphQlApiEnhancedMetricsConfigPtrInput
	// A map containing the list of resources with their properties and environment variables.
	EnvironmentVariables pulumi.StringMapInput
	// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
	IntrospectionConfig pulumi.StringPtrInput
	// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
	LambdaAuthorizerConfig GraphQlApiLambdaAuthorizerConfigPtrInput
	// The Amazon CloudWatch Logs configuration.
	LogConfig GraphQlApiLogConfigPtrInput
	// The AWS Identity and Access Management service role ARN for a merged API.
	MergedApiExecutionRoleArn pulumi.StringPtrInput
	// The API name
	Name pulumi.StringPtrInput
	// The OpenID Connect configuration.
	OpenIdConnectConfig GraphQlApiOpenIdConnectConfigPtrInput
	// The owner contact information for an API resource.
	OwnerContact pulumi.StringPtrInput
	// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
	QueryDepthLimit pulumi.IntPtrInput
	// The maximum number of resolvers that can be invoked in a single request.
	ResolverCountLimit pulumi.IntPtrInput
	// An arbitrary set of tags (key-value pairs) for this GraphQL API.
	Tags aws.TagArrayInput
	// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
	UserPoolConfig GraphQlApiUserPoolConfigPtrInput
	// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
	Visibility pulumi.StringPtrInput
	// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
	XrayEnabled pulumi.BoolPtrInput
}

func (GraphQlApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*graphQlApiArgs)(nil)).Elem()
}

type GraphQlApiInput interface {
	pulumi.Input

	ToGraphQlApiOutput() GraphQlApiOutput
	ToGraphQlApiOutputWithContext(ctx context.Context) GraphQlApiOutput
}

func (*GraphQlApi) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApi)(nil)).Elem()
}

func (i *GraphQlApi) ToGraphQlApiOutput() GraphQlApiOutput {
	return i.ToGraphQlApiOutputWithContext(context.Background())
}

func (i *GraphQlApi) ToGraphQlApiOutputWithContext(ctx context.Context) GraphQlApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiOutput)
}

type GraphQlApiOutput struct{ *pulumi.OutputState }

func (GraphQlApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApi)(nil)).Elem()
}

func (o GraphQlApiOutput) ToGraphQlApiOutput() GraphQlApiOutput {
	return o
}

func (o GraphQlApiOutput) ToGraphQlApiOutputWithContext(ctx context.Context) GraphQlApiOutput {
	return o
}

// A list of additional authentication providers for the GraphqlApi API.
func (o GraphQlApiOutput) AdditionalAuthenticationProviders() GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiAdditionalAuthenticationProviderArrayOutput {
		return v.AdditionalAuthenticationProviders
	}).(GraphQlApiAdditionalAuthenticationProviderArrayOutput)
}

// Unique AWS AppSync GraphQL API identifier.
func (o GraphQlApiOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
func (o GraphQlApiOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringPtrOutput { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the API key
func (o GraphQlApiOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Security configuration for your GraphQL API
func (o GraphQlApiOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
func (o GraphQlApiOutput) EnhancedMetricsConfig() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiEnhancedMetricsConfigPtrOutput { return v.EnhancedMetricsConfig }).(GraphQlApiEnhancedMetricsConfigPtrOutput)
}

// A map containing the list of resources with their properties and environment variables.
func (o GraphQlApiOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
func (o GraphQlApiOutput) GraphQlDns() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.GraphQlDns }).(pulumi.StringOutput)
}

// The GraphQL endpoint ARN.
func (o GraphQlApiOutput) GraphQlEndpointArn() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.GraphQlEndpointArn }).(pulumi.StringOutput)
}

// The Endpoint URL of your GraphQL API.
func (o GraphQlApiOutput) GraphQlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.GraphQlUrl }).(pulumi.StringOutput)
}

// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
func (o GraphQlApiOutput) IntrospectionConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringPtrOutput { return v.IntrospectionConfig }).(pulumi.StringPtrOutput)
}

// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
func (o GraphQlApiOutput) LambdaAuthorizerConfig() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiLambdaAuthorizerConfigPtrOutput { return v.LambdaAuthorizerConfig }).(GraphQlApiLambdaAuthorizerConfigPtrOutput)
}

// The Amazon CloudWatch Logs configuration.
func (o GraphQlApiOutput) LogConfig() GraphQlApiLogConfigPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiLogConfigPtrOutput { return v.LogConfig }).(GraphQlApiLogConfigPtrOutput)
}

// The AWS Identity and Access Management service role ARN for a merged API.
func (o GraphQlApiOutput) MergedApiExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringPtrOutput { return v.MergedApiExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// The API name
func (o GraphQlApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The OpenID Connect configuration.
func (o GraphQlApiOutput) OpenIdConnectConfig() GraphQlApiOpenIdConnectConfigPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiOpenIdConnectConfigPtrOutput { return v.OpenIdConnectConfig }).(GraphQlApiOpenIdConnectConfigPtrOutput)
}

// The owner contact information for an API resource.
func (o GraphQlApiOutput) OwnerContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringPtrOutput { return v.OwnerContact }).(pulumi.StringPtrOutput)
}

// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
func (o GraphQlApiOutput) QueryDepthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.IntPtrOutput { return v.QueryDepthLimit }).(pulumi.IntPtrOutput)
}

// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
func (o GraphQlApiOutput) RealtimeDns() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.RealtimeDns }).(pulumi.StringOutput)
}

// The GraphQL API real-time endpoint URL.
func (o GraphQlApiOutput) RealtimeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringOutput { return v.RealtimeUrl }).(pulumi.StringOutput)
}

// The maximum number of resolvers that can be invoked in a single request.
func (o GraphQlApiOutput) ResolverCountLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.IntPtrOutput { return v.ResolverCountLimit }).(pulumi.IntPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this GraphQL API.
func (o GraphQlApiOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *GraphQlApi) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
func (o GraphQlApiOutput) UserPoolConfig() GraphQlApiUserPoolConfigPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) GraphQlApiUserPoolConfigPtrOutput { return v.UserPoolConfig }).(GraphQlApiUserPoolConfigPtrOutput)
}

// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
func (o GraphQlApiOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.StringPtrOutput { return v.Visibility }).(pulumi.StringPtrOutput)
}

// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
func (o GraphQlApiOutput) XrayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GraphQlApi) pulumi.BoolPtrOutput { return v.XrayEnabled }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiInput)(nil)).Elem(), &GraphQlApi{})
	pulumi.RegisterOutputType(GraphQlApiOutput{})
}
