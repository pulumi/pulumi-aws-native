// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppSync::GraphQLSchema
//
// Deprecated: GraphQlSchema is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type GraphQlSchema struct {
	pulumi.CustomResourceState

	ApiId                pulumi.StringOutput    `pulumi:"apiId"`
	Definition           pulumi.StringPtrOutput `pulumi:"definition"`
	DefinitionS3Location pulumi.StringPtrOutput `pulumi:"definitionS3Location"`
}

// NewGraphQlSchema registers a new resource with the given unique name, arguments, and options.
func NewGraphQlSchema(ctx *pulumi.Context,
	name string, args *GraphQlSchemaArgs, opts ...pulumi.ResourceOption) (*GraphQlSchema, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GraphQlSchema
	err := ctx.RegisterResource("aws-native:appsync:GraphQlSchema", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGraphQlSchema gets an existing GraphQlSchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGraphQlSchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GraphQlSchemaState, opts ...pulumi.ResourceOption) (*GraphQlSchema, error) {
	var resource GraphQlSchema
	err := ctx.ReadResource("aws-native:appsync:GraphQlSchema", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GraphQlSchema resources.
type graphQlSchemaState struct {
}

type GraphQlSchemaState struct {
}

func (GraphQlSchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*graphQlSchemaState)(nil)).Elem()
}

type graphQlSchemaArgs struct {
	ApiId                string  `pulumi:"apiId"`
	Definition           *string `pulumi:"definition"`
	DefinitionS3Location *string `pulumi:"definitionS3Location"`
}

// The set of arguments for constructing a GraphQlSchema resource.
type GraphQlSchemaArgs struct {
	ApiId                pulumi.StringInput
	Definition           pulumi.StringPtrInput
	DefinitionS3Location pulumi.StringPtrInput
}

func (GraphQlSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*graphQlSchemaArgs)(nil)).Elem()
}

type GraphQlSchemaInput interface {
	pulumi.Input

	ToGraphQlSchemaOutput() GraphQlSchemaOutput
	ToGraphQlSchemaOutputWithContext(ctx context.Context) GraphQlSchemaOutput
}

func (*GraphQlSchema) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlSchema)(nil)).Elem()
}

func (i *GraphQlSchema) ToGraphQlSchemaOutput() GraphQlSchemaOutput {
	return i.ToGraphQlSchemaOutputWithContext(context.Background())
}

func (i *GraphQlSchema) ToGraphQlSchemaOutputWithContext(ctx context.Context) GraphQlSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlSchemaOutput)
}

type GraphQlSchemaOutput struct{ *pulumi.OutputState }

func (GraphQlSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlSchema)(nil)).Elem()
}

func (o GraphQlSchemaOutput) ToGraphQlSchemaOutput() GraphQlSchemaOutput {
	return o
}

func (o GraphQlSchemaOutput) ToGraphQlSchemaOutputWithContext(ctx context.Context) GraphQlSchemaOutput {
	return o
}

func (o GraphQlSchemaOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphQlSchema) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

func (o GraphQlSchemaOutput) Definition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlSchema) pulumi.StringPtrOutput { return v.Definition }).(pulumi.StringPtrOutput)
}

func (o GraphQlSchemaOutput) DefinitionS3Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlSchema) pulumi.StringPtrOutput { return v.DefinitionS3Location }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlSchemaInput)(nil)).Elem(), &GraphQlSchema{})
	pulumi.RegisterOutputType(GraphQlSchemaOutput{})
}
