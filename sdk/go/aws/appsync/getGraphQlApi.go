// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppSync::GraphQLApi
func LookupGraphQlApi(ctx *pulumi.Context, args *LookupGraphQlApiArgs, opts ...pulumi.InvokeOption) (*LookupGraphQlApiResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGraphQlApiResult
	err := ctx.Invoke("aws-native:appsync:getGraphQlApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGraphQlApiArgs struct {
	// Unique AWS AppSync GraphQL API identifier.
	ApiId string `pulumi:"apiId"`
}

type LookupGraphQlApiResult struct {
	// A list of additional authentication providers for the GraphqlApi API.
	AdditionalAuthenticationProviders []GraphQlApiAdditionalAuthenticationProvider `pulumi:"additionalAuthenticationProviders"`
	// Unique AWS AppSync GraphQL API identifier.
	ApiId *string `pulumi:"apiId"`
	// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
	ApiType *string `pulumi:"apiType"`
	// The Amazon Resource Name (ARN) of the API key
	Arn *string `pulumi:"arn"`
	// Security configuration for your GraphQL API
	AuthenticationType *string `pulumi:"authenticationType"`
	// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
	EnhancedMetricsConfig *GraphQlApiEnhancedMetricsConfig `pulumi:"enhancedMetricsConfig"`
	// A map containing the list of resources with their properties and environment variables.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
	GraphQlDns *string `pulumi:"graphQlDns"`
	// The GraphQL endpoint ARN.
	GraphQlEndpointArn *string `pulumi:"graphQlEndpointArn"`
	// The Endpoint URL of your GraphQL API.
	GraphQlUrl *string `pulumi:"graphQlUrl"`
	// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
	IntrospectionConfig *string `pulumi:"introspectionConfig"`
	// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
	LambdaAuthorizerConfig *GraphQlApiLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	// The Amazon CloudWatch Logs configuration.
	LogConfig *GraphQlApiLogConfig `pulumi:"logConfig"`
	// The AWS Identity and Access Management service role ARN for a merged API.
	MergedApiExecutionRoleArn *string `pulumi:"mergedApiExecutionRoleArn"`
	// The API name
	Name *string `pulumi:"name"`
	// The OpenID Connect configuration.
	OpenIdConnectConfig *GraphQlApiOpenIdConnectConfig `pulumi:"openIdConnectConfig"`
	// The owner contact information for an API resource.
	OwnerContact *string `pulumi:"ownerContact"`
	// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
	QueryDepthLimit *int `pulumi:"queryDepthLimit"`
	// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
	RealtimeDns *string `pulumi:"realtimeDns"`
	// The GraphQL API real-time endpoint URL.
	RealtimeUrl *string `pulumi:"realtimeUrl"`
	// The maximum number of resolvers that can be invoked in a single request.
	ResolverCountLimit *int `pulumi:"resolverCountLimit"`
	// An arbitrary set of tags (key-value pairs) for this GraphQL API.
	Tags []aws.Tag `pulumi:"tags"`
	// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
	UserPoolConfig *GraphQlApiUserPoolConfig `pulumi:"userPoolConfig"`
	// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
	Visibility *string `pulumi:"visibility"`
	// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
	XrayEnabled *bool `pulumi:"xrayEnabled"`
}

func LookupGraphQlApiOutput(ctx *pulumi.Context, args LookupGraphQlApiOutputArgs, opts ...pulumi.InvokeOption) LookupGraphQlApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGraphQlApiResultOutput, error) {
			args := v.(LookupGraphQlApiArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGraphQlApiResult
			secret, err := ctx.InvokePackageRaw("aws-native:appsync:getGraphQlApi", args, &rv, "", opts...)
			if err != nil {
				return LookupGraphQlApiResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGraphQlApiResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGraphQlApiResultOutput), nil
			}
			return output, nil
		}).(LookupGraphQlApiResultOutput)
}

type LookupGraphQlApiOutputArgs struct {
	// Unique AWS AppSync GraphQL API identifier.
	ApiId pulumi.StringInput `pulumi:"apiId"`
}

func (LookupGraphQlApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGraphQlApiArgs)(nil)).Elem()
}

type LookupGraphQlApiResultOutput struct{ *pulumi.OutputState }

func (LookupGraphQlApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGraphQlApiResult)(nil)).Elem()
}

func (o LookupGraphQlApiResultOutput) ToLookupGraphQlApiResultOutput() LookupGraphQlApiResultOutput {
	return o
}

func (o LookupGraphQlApiResultOutput) ToLookupGraphQlApiResultOutputWithContext(ctx context.Context) LookupGraphQlApiResultOutput {
	return o
}

// A list of additional authentication providers for the GraphqlApi API.
func (o LookupGraphQlApiResultOutput) AdditionalAuthenticationProviders() GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) []GraphQlApiAdditionalAuthenticationProvider {
		return v.AdditionalAuthenticationProviders
	}).(GraphQlApiAdditionalAuthenticationProviderArrayOutput)
}

// Unique AWS AppSync GraphQL API identifier.
func (o LookupGraphQlApiResultOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).
func (o LookupGraphQlApiResultOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the API key
func (o LookupGraphQlApiResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Security configuration for your GraphQL API
func (o LookupGraphQlApiResultOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.
func (o LookupGraphQlApiResultOutput) EnhancedMetricsConfig() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *GraphQlApiEnhancedMetricsConfig { return v.EnhancedMetricsConfig }).(GraphQlApiEnhancedMetricsConfigPtrOutput)
}

// A map containing the list of resources with their properties and environment variables.
func (o LookupGraphQlApiResultOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.
func (o LookupGraphQlApiResultOutput) GraphQlDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.GraphQlDns }).(pulumi.StringPtrOutput)
}

// The GraphQL endpoint ARN.
func (o LookupGraphQlApiResultOutput) GraphQlEndpointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.GraphQlEndpointArn }).(pulumi.StringPtrOutput)
}

// The Endpoint URL of your GraphQL API.
func (o LookupGraphQlApiResultOutput) GraphQlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.GraphQlUrl }).(pulumi.StringPtrOutput)
}

// Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.
func (o LookupGraphQlApiResultOutput) IntrospectionConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.IntrospectionConfig }).(pulumi.StringPtrOutput)
}

// A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.
func (o LookupGraphQlApiResultOutput) LambdaAuthorizerConfig() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *GraphQlApiLambdaAuthorizerConfig { return v.LambdaAuthorizerConfig }).(GraphQlApiLambdaAuthorizerConfigPtrOutput)
}

// The Amazon CloudWatch Logs configuration.
func (o LookupGraphQlApiResultOutput) LogConfig() GraphQlApiLogConfigPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *GraphQlApiLogConfig { return v.LogConfig }).(GraphQlApiLogConfigPtrOutput)
}

// The AWS Identity and Access Management service role ARN for a merged API.
func (o LookupGraphQlApiResultOutput) MergedApiExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.MergedApiExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// The API name
func (o LookupGraphQlApiResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OpenID Connect configuration.
func (o LookupGraphQlApiResultOutput) OpenIdConnectConfig() GraphQlApiOpenIdConnectConfigPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *GraphQlApiOpenIdConnectConfig { return v.OpenIdConnectConfig }).(GraphQlApiOpenIdConnectConfigPtrOutput)
}

// The owner contact information for an API resource.
func (o LookupGraphQlApiResultOutput) OwnerContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.OwnerContact }).(pulumi.StringPtrOutput)
}

// The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.
func (o LookupGraphQlApiResultOutput) QueryDepthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *int { return v.QueryDepthLimit }).(pulumi.IntPtrOutput)
}

// The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.
func (o LookupGraphQlApiResultOutput) RealtimeDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.RealtimeDns }).(pulumi.StringPtrOutput)
}

// The GraphQL API real-time endpoint URL.
func (o LookupGraphQlApiResultOutput) RealtimeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.RealtimeUrl }).(pulumi.StringPtrOutput)
}

// The maximum number of resolvers that can be invoked in a single request.
func (o LookupGraphQlApiResultOutput) ResolverCountLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *int { return v.ResolverCountLimit }).(pulumi.IntPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this GraphQL API.
func (o LookupGraphQlApiResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.
func (o LookupGraphQlApiResultOutput) UserPoolConfig() GraphQlApiUserPoolConfigPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *GraphQlApiUserPoolConfig { return v.UserPoolConfig }).(GraphQlApiUserPoolConfigPtrOutput)
}

// Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.
func (o LookupGraphQlApiResultOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

// A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.
func (o LookupGraphQlApiResultOutput) XrayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupGraphQlApiResult) *bool { return v.XrayEnabled }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGraphQlApiResultOutput{})
}
