// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppSync::DataSource
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/appsync"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			graphQlApiId := cfg.Require("graphQlApiId")
//			dataSourceName := cfg.Require("dataSourceName")
//			dataSourceDescription := cfg.Require("dataSourceDescription")
//			serviceRoleArn := cfg.Require("serviceRoleArn")
//			lambdaFunctionArn := cfg.Require("lambdaFunctionArn")
//			_, err := appsync.NewDataSource(ctx, "dataSource", &appsync.DataSourceArgs{
//				ApiId:          pulumi.String(graphQlApiId),
//				Name:           pulumi.String(dataSourceName),
//				Description:    pulumi.String(dataSourceDescription),
//				Type:           pulumi.String("AWS_LAMBDA"),
//				ServiceRoleArn: pulumi.String(serviceRoleArn),
//				LambdaConfig: &appsync.DataSourceLambdaConfigArgs{
//					LambdaFunctionArn: pulumi.String(lambdaFunctionArn),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/appsync"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			graphQlApiId := cfg.Require("graphQlApiId")
//			dataSourceName := cfg.Require("dataSourceName")
//			dataSourceDescription := cfg.Require("dataSourceDescription")
//			serviceRoleArn := cfg.Require("serviceRoleArn")
//			lambdaFunctionArn := cfg.Require("lambdaFunctionArn")
//			_, err := appsync.NewDataSource(ctx, "dataSource", &appsync.DataSourceArgs{
//				ApiId:          pulumi.String(graphQlApiId),
//				Name:           pulumi.String(dataSourceName),
//				Description:    pulumi.String(dataSourceDescription),
//				Type:           pulumi.String("AWS_LAMBDA"),
//				ServiceRoleArn: pulumi.String(serviceRoleArn),
//				LambdaConfig: &appsync.DataSourceLambdaConfigArgs{
//					LambdaFunctionArn: pulumi.String(lambdaFunctionArn),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DataSource struct {
	pulumi.CustomResourceState

	// Unique AWS AppSync GraphQL API identifier where this data source will be created.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
	DataSourceArn pulumi.StringOutput `pulumi:"dataSourceArn"`
	// The description of the data source.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// AWS Region and TableName for an Amazon DynamoDB table in your account.
	DynamoDbConfig DataSourceDynamoDbConfigPtrOutput `pulumi:"dynamoDbConfig"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
	ElasticsearchConfig DataSourceElasticsearchConfigPtrOutput `pulumi:"elasticsearchConfig"`
	// ARN for the EventBridge bus.
	EventBridgeConfig DataSourceEventBridgeConfigPtrOutput `pulumi:"eventBridgeConfig"`
	// Endpoints for an HTTP data source.
	HttpConfig DataSourceHttpConfigPtrOutput `pulumi:"httpConfig"`
	// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
	LambdaConfig DataSourceLambdaConfigPtrOutput `pulumi:"lambdaConfig"`
	// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
	//
	// `MetricsConfig` can be `ENABLED` or `DISABLED` .
	MetricsConfig DataSourceMetricsConfigPtrOutput `pulumi:"metricsConfig"`
	// Friendly name for you to identify your AppSync data source after creation.
	Name pulumi.StringOutput `pulumi:"name"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	OpenSearchServiceConfig DataSourceOpenSearchServiceConfigPtrOutput `pulumi:"openSearchServiceConfig"`
	// Relational Database configuration of the relational database data source.
	RelationalDatabaseConfig DataSourceRelationalDatabaseConfigPtrOutput `pulumi:"relationalDatabaseConfig"`
	// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
	ServiceRoleArn pulumi.StringPtrOutput `pulumi:"serviceRoleArn"`
	// The type of the data source.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDataSource registers a new resource with the given unique name, arguments, and options.
func NewDataSource(ctx *pulumi.Context,
	name string, args *DataSourceArgs, opts ...pulumi.ResourceOption) (*DataSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"apiId",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataSource
	err := ctx.RegisterResource("aws-native:appsync:DataSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataSource gets an existing DataSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataSourceState, opts ...pulumi.ResourceOption) (*DataSource, error) {
	var resource DataSource
	err := ctx.ReadResource("aws-native:appsync:DataSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataSource resources.
type dataSourceState struct {
}

type DataSourceState struct {
}

func (DataSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataSourceState)(nil)).Elem()
}

type dataSourceArgs struct {
	// Unique AWS AppSync GraphQL API identifier where this data source will be created.
	ApiId string `pulumi:"apiId"`
	// The description of the data source.
	Description *string `pulumi:"description"`
	// AWS Region and TableName for an Amazon DynamoDB table in your account.
	DynamoDbConfig *DataSourceDynamoDbConfig `pulumi:"dynamoDbConfig"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
	ElasticsearchConfig *DataSourceElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// ARN for the EventBridge bus.
	EventBridgeConfig *DataSourceEventBridgeConfig `pulumi:"eventBridgeConfig"`
	// Endpoints for an HTTP data source.
	HttpConfig *DataSourceHttpConfig `pulumi:"httpConfig"`
	// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
	LambdaConfig *DataSourceLambdaConfig `pulumi:"lambdaConfig"`
	// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
	//
	// `MetricsConfig` can be `ENABLED` or `DISABLED` .
	MetricsConfig *DataSourceMetricsConfig `pulumi:"metricsConfig"`
	// Friendly name for you to identify your AppSync data source after creation.
	Name *string `pulumi:"name"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	OpenSearchServiceConfig *DataSourceOpenSearchServiceConfig `pulumi:"openSearchServiceConfig"`
	// Relational Database configuration of the relational database data source.
	RelationalDatabaseConfig *DataSourceRelationalDatabaseConfig `pulumi:"relationalDatabaseConfig"`
	// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
	ServiceRoleArn *string `pulumi:"serviceRoleArn"`
	// The type of the data source.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a DataSource resource.
type DataSourceArgs struct {
	// Unique AWS AppSync GraphQL API identifier where this data source will be created.
	ApiId pulumi.StringInput
	// The description of the data source.
	Description pulumi.StringPtrInput
	// AWS Region and TableName for an Amazon DynamoDB table in your account.
	DynamoDbConfig DataSourceDynamoDbConfigPtrInput
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
	ElasticsearchConfig DataSourceElasticsearchConfigPtrInput
	// ARN for the EventBridge bus.
	EventBridgeConfig DataSourceEventBridgeConfigPtrInput
	// Endpoints for an HTTP data source.
	HttpConfig DataSourceHttpConfigPtrInput
	// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
	LambdaConfig DataSourceLambdaConfigPtrInput
	// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
	//
	// `MetricsConfig` can be `ENABLED` or `DISABLED` .
	MetricsConfig DataSourceMetricsConfigPtrInput
	// Friendly name for you to identify your AppSync data source after creation.
	Name pulumi.StringPtrInput
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	OpenSearchServiceConfig DataSourceOpenSearchServiceConfigPtrInput
	// Relational Database configuration of the relational database data source.
	RelationalDatabaseConfig DataSourceRelationalDatabaseConfigPtrInput
	// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
	ServiceRoleArn pulumi.StringPtrInput
	// The type of the data source.
	Type pulumi.StringInput
}

func (DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataSourceArgs)(nil)).Elem()
}

type DataSourceInput interface {
	pulumi.Input

	ToDataSourceOutput() DataSourceOutput
	ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput
}

func (*DataSource) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSource)(nil)).Elem()
}

func (i *DataSource) ToDataSourceOutput() DataSourceOutput {
	return i.ToDataSourceOutputWithContext(context.Background())
}

func (i *DataSource) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOutput)
}

type DataSourceOutput struct{ *pulumi.OutputState }

func (DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSource)(nil)).Elem()
}

func (o DataSourceOutput) ToDataSourceOutput() DataSourceOutput {
	return o
}

func (o DataSourceOutput) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return o
}

// Unique AWS AppSync GraphQL API identifier where this data source will be created.
func (o DataSourceOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
func (o DataSourceOutput) DataSourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.DataSourceArn }).(pulumi.StringOutput)
}

// The description of the data source.
func (o DataSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// AWS Region and TableName for an Amazon DynamoDB table in your account.
func (o DataSourceOutput) DynamoDbConfig() DataSourceDynamoDbConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceDynamoDbConfigPtrOutput { return v.DynamoDbConfig }).(DataSourceDynamoDbConfigPtrOutput)
}

// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
func (o DataSourceOutput) ElasticsearchConfig() DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceElasticsearchConfigPtrOutput { return v.ElasticsearchConfig }).(DataSourceElasticsearchConfigPtrOutput)
}

// ARN for the EventBridge bus.
func (o DataSourceOutput) EventBridgeConfig() DataSourceEventBridgeConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceEventBridgeConfigPtrOutput { return v.EventBridgeConfig }).(DataSourceEventBridgeConfigPtrOutput)
}

// Endpoints for an HTTP data source.
func (o DataSourceOutput) HttpConfig() DataSourceHttpConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceHttpConfigPtrOutput { return v.HttpConfig }).(DataSourceHttpConfigPtrOutput)
}

// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
func (o DataSourceOutput) LambdaConfig() DataSourceLambdaConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceLambdaConfigPtrOutput { return v.LambdaConfig }).(DataSourceLambdaConfigPtrOutput)
}

// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
//
// `MetricsConfig` can be `ENABLED` or `DISABLED` .
func (o DataSourceOutput) MetricsConfig() DataSourceMetricsConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceMetricsConfigPtrOutput { return v.MetricsConfig }).(DataSourceMetricsConfigPtrOutput)
}

// Friendly name for you to identify your AppSync data source after creation.
func (o DataSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
func (o DataSourceOutput) OpenSearchServiceConfig() DataSourceOpenSearchServiceConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceOpenSearchServiceConfigPtrOutput { return v.OpenSearchServiceConfig }).(DataSourceOpenSearchServiceConfigPtrOutput)
}

// Relational Database configuration of the relational database data source.
func (o DataSourceOutput) RelationalDatabaseConfig() DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceRelationalDatabaseConfigPtrOutput { return v.RelationalDatabaseConfig }).(DataSourceRelationalDatabaseConfigPtrOutput)
}

// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
func (o DataSourceOutput) ServiceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringPtrOutput { return v.ServiceRoleArn }).(pulumi.StringPtrOutput)
}

// The type of the data source.
func (o DataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceInput)(nil)).Elem(), &DataSource{})
	pulumi.RegisterOutputType(DataSourceOutput{})
}
