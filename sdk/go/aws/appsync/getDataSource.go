// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppSync::DataSource
func LookupDataSource(ctx *pulumi.Context, args *LookupDataSourceArgs, opts ...pulumi.InvokeOption) (*LookupDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataSourceResult
	err := ctx.Invoke("aws-native:appsync:getDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataSourceArgs struct {
	// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
	DataSourceArn string `pulumi:"dataSourceArn"`
}

type LookupDataSourceResult struct {
	// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
	DataSourceArn *string `pulumi:"dataSourceArn"`
	// The description of the data source.
	Description *string `pulumi:"description"`
	// AWS Region and TableName for an Amazon DynamoDB table in your account.
	DynamoDbConfig *DataSourceDynamoDbConfig `pulumi:"dynamoDbConfig"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
	ElasticsearchConfig *DataSourceElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// ARN for the EventBridge bus.
	EventBridgeConfig *DataSourceEventBridgeConfig `pulumi:"eventBridgeConfig"`
	// Endpoints for an HTTP data source.
	HttpConfig *DataSourceHttpConfig `pulumi:"httpConfig"`
	// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
	LambdaConfig *DataSourceLambdaConfig `pulumi:"lambdaConfig"`
	// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
	//
	// `MetricsConfig` can be `ENABLED` or `DISABLED` .
	MetricsConfig *DataSourceMetricsConfig `pulumi:"metricsConfig"`
	// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
	OpenSearchServiceConfig *DataSourceOpenSearchServiceConfig `pulumi:"openSearchServiceConfig"`
	// Relational Database configuration of the relational database data source.
	RelationalDatabaseConfig *DataSourceRelationalDatabaseConfig `pulumi:"relationalDatabaseConfig"`
	// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
	ServiceRoleArn *string `pulumi:"serviceRoleArn"`
	// The type of the data source.
	Type *string `pulumi:"type"`
}

func LookupDataSourceOutput(ctx *pulumi.Context, args LookupDataSourceOutputArgs, opts ...pulumi.InvokeOption) LookupDataSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDataSourceResultOutput, error) {
			args := v.(LookupDataSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:appsync:getDataSource", args, LookupDataSourceResultOutput{}, options).(LookupDataSourceResultOutput), nil
		}).(LookupDataSourceResultOutput)
}

type LookupDataSourceOutputArgs struct {
	// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
	DataSourceArn pulumi.StringInput `pulumi:"dataSourceArn"`
}

func (LookupDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceArgs)(nil)).Elem()
}

type LookupDataSourceResultOutput struct{ *pulumi.OutputState }

func (LookupDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceResult)(nil)).Elem()
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutput() LookupDataSourceResultOutput {
	return o
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutputWithContext(ctx context.Context) LookupDataSourceResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the API key, such as arn:aws:appsync:us-east-1:123456789012:apis/graphqlapiid/datasources/datasourcename.
func (o LookupDataSourceResultOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DataSourceArn }).(pulumi.StringPtrOutput)
}

// The description of the data source.
func (o LookupDataSourceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// AWS Region and TableName for an Amazon DynamoDB table in your account.
func (o LookupDataSourceResultOutput) DynamoDbConfig() DataSourceDynamoDbConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceDynamoDbConfig { return v.DynamoDbConfig }).(DataSourceDynamoDbConfigPtrOutput)
}

// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
// As of September 2021, Amazon Elasticsearch Service is Amazon OpenSearch Service. This property is deprecated. For new data sources, use OpenSearchServiceConfig to specify an OpenSearch Service data source.
func (o LookupDataSourceResultOutput) ElasticsearchConfig() DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceElasticsearchConfig { return v.ElasticsearchConfig }).(DataSourceElasticsearchConfigPtrOutput)
}

// ARN for the EventBridge bus.
func (o LookupDataSourceResultOutput) EventBridgeConfig() DataSourceEventBridgeConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceEventBridgeConfig { return v.EventBridgeConfig }).(DataSourceEventBridgeConfigPtrOutput)
}

// Endpoints for an HTTP data source.
func (o LookupDataSourceResultOutput) HttpConfig() DataSourceHttpConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceHttpConfig { return v.HttpConfig }).(DataSourceHttpConfigPtrOutput)
}

// An ARN of a Lambda function in valid ARN format. This can be the ARN of a Lambda function that exists in the current account or in another account.
func (o LookupDataSourceResultOutput) LambdaConfig() DataSourceLambdaConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceLambdaConfig { return v.LambdaConfig }).(DataSourceLambdaConfigPtrOutput)
}

// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
//
// `MetricsConfig` can be `ENABLED` or `DISABLED` .
func (o LookupDataSourceResultOutput) MetricsConfig() DataSourceMetricsConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceMetricsConfig { return v.MetricsConfig }).(DataSourceMetricsConfigPtrOutput)
}

// AWS Region and Endpoints for an Amazon OpenSearch Service domain in your account.
func (o LookupDataSourceResultOutput) OpenSearchServiceConfig() DataSourceOpenSearchServiceConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceOpenSearchServiceConfig { return v.OpenSearchServiceConfig }).(DataSourceOpenSearchServiceConfigPtrOutput)
}

// Relational Database configuration of the relational database data source.
func (o LookupDataSourceResultOutput) RelationalDatabaseConfig() DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceRelationalDatabaseConfig { return v.RelationalDatabaseConfig }).(DataSourceRelationalDatabaseConfigPtrOutput)
}

// The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.
func (o LookupDataSourceResultOutput) ServiceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.ServiceRoleArn }).(pulumi.StringPtrOutput)
}

// The type of the data source.
func (o LookupDataSourceResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataSourceResultOutput{})
}
