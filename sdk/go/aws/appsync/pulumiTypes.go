// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataSourceAuthorizationConfig struct {
	AuthorizationType string                  `pulumi:"authorizationType"`
	AwsIamConfig      *DataSourceAwsIamConfig `pulumi:"awsIamConfig"`
}

// DataSourceAuthorizationConfigInput is an input type that accepts DataSourceAuthorizationConfigArgs and DataSourceAuthorizationConfigOutput values.
// You can construct a concrete instance of `DataSourceAuthorizationConfigInput` via:
//
//	DataSourceAuthorizationConfigArgs{...}
type DataSourceAuthorizationConfigInput interface {
	pulumi.Input

	ToDataSourceAuthorizationConfigOutput() DataSourceAuthorizationConfigOutput
	ToDataSourceAuthorizationConfigOutputWithContext(context.Context) DataSourceAuthorizationConfigOutput
}

type DataSourceAuthorizationConfigArgs struct {
	AuthorizationType pulumi.StringInput             `pulumi:"authorizationType"`
	AwsIamConfig      DataSourceAwsIamConfigPtrInput `pulumi:"awsIamConfig"`
}

func (DataSourceAuthorizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuthorizationConfig)(nil)).Elem()
}

func (i DataSourceAuthorizationConfigArgs) ToDataSourceAuthorizationConfigOutput() DataSourceAuthorizationConfigOutput {
	return i.ToDataSourceAuthorizationConfigOutputWithContext(context.Background())
}

func (i DataSourceAuthorizationConfigArgs) ToDataSourceAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuthorizationConfigOutput)
}

func (i DataSourceAuthorizationConfigArgs) ToDataSourceAuthorizationConfigPtrOutput() DataSourceAuthorizationConfigPtrOutput {
	return i.ToDataSourceAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceAuthorizationConfigArgs) ToDataSourceAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuthorizationConfigOutput).ToDataSourceAuthorizationConfigPtrOutputWithContext(ctx)
}

// DataSourceAuthorizationConfigPtrInput is an input type that accepts DataSourceAuthorizationConfigArgs, DataSourceAuthorizationConfigPtr and DataSourceAuthorizationConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceAuthorizationConfigPtrInput` via:
//
//	        DataSourceAuthorizationConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceAuthorizationConfigPtrInput interface {
	pulumi.Input

	ToDataSourceAuthorizationConfigPtrOutput() DataSourceAuthorizationConfigPtrOutput
	ToDataSourceAuthorizationConfigPtrOutputWithContext(context.Context) DataSourceAuthorizationConfigPtrOutput
}

type dataSourceAuthorizationConfigPtrType DataSourceAuthorizationConfigArgs

func DataSourceAuthorizationConfigPtr(v *DataSourceAuthorizationConfigArgs) DataSourceAuthorizationConfigPtrInput {
	return (*dataSourceAuthorizationConfigPtrType)(v)
}

func (*dataSourceAuthorizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuthorizationConfig)(nil)).Elem()
}

func (i *dataSourceAuthorizationConfigPtrType) ToDataSourceAuthorizationConfigPtrOutput() DataSourceAuthorizationConfigPtrOutput {
	return i.ToDataSourceAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuthorizationConfigPtrType) ToDataSourceAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuthorizationConfigPtrOutput)
}

type DataSourceAuthorizationConfigOutput struct{ *pulumi.OutputState }

func (DataSourceAuthorizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceAuthorizationConfigOutput) ToDataSourceAuthorizationConfigOutput() DataSourceAuthorizationConfigOutput {
	return o
}

func (o DataSourceAuthorizationConfigOutput) ToDataSourceAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigOutput {
	return o
}

func (o DataSourceAuthorizationConfigOutput) ToDataSourceAuthorizationConfigPtrOutput() DataSourceAuthorizationConfigPtrOutput {
	return o.ToDataSourceAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceAuthorizationConfigOutput) ToDataSourceAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuthorizationConfig) *DataSourceAuthorizationConfig {
		return &v
	}).(DataSourceAuthorizationConfigPtrOutput)
}

func (o DataSourceAuthorizationConfigOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuthorizationConfig) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

func (o DataSourceAuthorizationConfigOutput) AwsIamConfig() DataSourceAwsIamConfigPtrOutput {
	return o.ApplyT(func(v DataSourceAuthorizationConfig) *DataSourceAwsIamConfig { return v.AwsIamConfig }).(DataSourceAwsIamConfigPtrOutput)
}

type DataSourceAuthorizationConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuthorizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceAuthorizationConfigPtrOutput) ToDataSourceAuthorizationConfigPtrOutput() DataSourceAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceAuthorizationConfigPtrOutput) ToDataSourceAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceAuthorizationConfigPtrOutput) Elem() DataSourceAuthorizationConfigOutput {
	return o.ApplyT(func(v *DataSourceAuthorizationConfig) DataSourceAuthorizationConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceAuthorizationConfig
		return ret
	}).(DataSourceAuthorizationConfigOutput)
}

func (o DataSourceAuthorizationConfigPtrOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuthorizationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationType
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceAuthorizationConfigPtrOutput) AwsIamConfig() DataSourceAwsIamConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceAuthorizationConfig) *DataSourceAwsIamConfig {
		if v == nil {
			return nil
		}
		return v.AwsIamConfig
	}).(DataSourceAwsIamConfigPtrOutput)
}

type DataSourceAwsIamConfig struct {
	SigningRegion      *string `pulumi:"signingRegion"`
	SigningServiceName *string `pulumi:"signingServiceName"`
}

// DataSourceAwsIamConfigInput is an input type that accepts DataSourceAwsIamConfigArgs and DataSourceAwsIamConfigOutput values.
// You can construct a concrete instance of `DataSourceAwsIamConfigInput` via:
//
//	DataSourceAwsIamConfigArgs{...}
type DataSourceAwsIamConfigInput interface {
	pulumi.Input

	ToDataSourceAwsIamConfigOutput() DataSourceAwsIamConfigOutput
	ToDataSourceAwsIamConfigOutputWithContext(context.Context) DataSourceAwsIamConfigOutput
}

type DataSourceAwsIamConfigArgs struct {
	SigningRegion      pulumi.StringPtrInput `pulumi:"signingRegion"`
	SigningServiceName pulumi.StringPtrInput `pulumi:"signingServiceName"`
}

func (DataSourceAwsIamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAwsIamConfig)(nil)).Elem()
}

func (i DataSourceAwsIamConfigArgs) ToDataSourceAwsIamConfigOutput() DataSourceAwsIamConfigOutput {
	return i.ToDataSourceAwsIamConfigOutputWithContext(context.Background())
}

func (i DataSourceAwsIamConfigArgs) ToDataSourceAwsIamConfigOutputWithContext(ctx context.Context) DataSourceAwsIamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAwsIamConfigOutput)
}

func (i DataSourceAwsIamConfigArgs) ToDataSourceAwsIamConfigPtrOutput() DataSourceAwsIamConfigPtrOutput {
	return i.ToDataSourceAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceAwsIamConfigArgs) ToDataSourceAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAwsIamConfigOutput).ToDataSourceAwsIamConfigPtrOutputWithContext(ctx)
}

// DataSourceAwsIamConfigPtrInput is an input type that accepts DataSourceAwsIamConfigArgs, DataSourceAwsIamConfigPtr and DataSourceAwsIamConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceAwsIamConfigPtrInput` via:
//
//	        DataSourceAwsIamConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceAwsIamConfigPtrInput interface {
	pulumi.Input

	ToDataSourceAwsIamConfigPtrOutput() DataSourceAwsIamConfigPtrOutput
	ToDataSourceAwsIamConfigPtrOutputWithContext(context.Context) DataSourceAwsIamConfigPtrOutput
}

type dataSourceAwsIamConfigPtrType DataSourceAwsIamConfigArgs

func DataSourceAwsIamConfigPtr(v *DataSourceAwsIamConfigArgs) DataSourceAwsIamConfigPtrInput {
	return (*dataSourceAwsIamConfigPtrType)(v)
}

func (*dataSourceAwsIamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAwsIamConfig)(nil)).Elem()
}

func (i *dataSourceAwsIamConfigPtrType) ToDataSourceAwsIamConfigPtrOutput() DataSourceAwsIamConfigPtrOutput {
	return i.ToDataSourceAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceAwsIamConfigPtrType) ToDataSourceAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAwsIamConfigPtrOutput)
}

type DataSourceAwsIamConfigOutput struct{ *pulumi.OutputState }

func (DataSourceAwsIamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAwsIamConfig)(nil)).Elem()
}

func (o DataSourceAwsIamConfigOutput) ToDataSourceAwsIamConfigOutput() DataSourceAwsIamConfigOutput {
	return o
}

func (o DataSourceAwsIamConfigOutput) ToDataSourceAwsIamConfigOutputWithContext(ctx context.Context) DataSourceAwsIamConfigOutput {
	return o
}

func (o DataSourceAwsIamConfigOutput) ToDataSourceAwsIamConfigPtrOutput() DataSourceAwsIamConfigPtrOutput {
	return o.ToDataSourceAwsIamConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceAwsIamConfigOutput) ToDataSourceAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceAwsIamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAwsIamConfig) *DataSourceAwsIamConfig {
		return &v
	}).(DataSourceAwsIamConfigPtrOutput)
}

func (o DataSourceAwsIamConfigOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAwsIamConfig) *string { return v.SigningRegion }).(pulumi.StringPtrOutput)
}

func (o DataSourceAwsIamConfigOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAwsIamConfig) *string { return v.SigningServiceName }).(pulumi.StringPtrOutput)
}

type DataSourceAwsIamConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAwsIamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAwsIamConfig)(nil)).Elem()
}

func (o DataSourceAwsIamConfigPtrOutput) ToDataSourceAwsIamConfigPtrOutput() DataSourceAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceAwsIamConfigPtrOutput) ToDataSourceAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceAwsIamConfigPtrOutput) Elem() DataSourceAwsIamConfigOutput {
	return o.ApplyT(func(v *DataSourceAwsIamConfig) DataSourceAwsIamConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceAwsIamConfig
		return ret
	}).(DataSourceAwsIamConfigOutput)
}

func (o DataSourceAwsIamConfigPtrOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningRegion
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceAwsIamConfigPtrOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningServiceName
	}).(pulumi.StringPtrOutput)
}

type DataSourceDeltaSyncConfig struct {
	BaseTableTtl       string `pulumi:"baseTableTtl"`
	DeltaSyncTableName string `pulumi:"deltaSyncTableName"`
	DeltaSyncTableTtl  string `pulumi:"deltaSyncTableTtl"`
}

// DataSourceDeltaSyncConfigInput is an input type that accepts DataSourceDeltaSyncConfigArgs and DataSourceDeltaSyncConfigOutput values.
// You can construct a concrete instance of `DataSourceDeltaSyncConfigInput` via:
//
//	DataSourceDeltaSyncConfigArgs{...}
type DataSourceDeltaSyncConfigInput interface {
	pulumi.Input

	ToDataSourceDeltaSyncConfigOutput() DataSourceDeltaSyncConfigOutput
	ToDataSourceDeltaSyncConfigOutputWithContext(context.Context) DataSourceDeltaSyncConfigOutput
}

type DataSourceDeltaSyncConfigArgs struct {
	BaseTableTtl       pulumi.StringInput `pulumi:"baseTableTtl"`
	DeltaSyncTableName pulumi.StringInput `pulumi:"deltaSyncTableName"`
	DeltaSyncTableTtl  pulumi.StringInput `pulumi:"deltaSyncTableTtl"`
}

func (DataSourceDeltaSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDeltaSyncConfig)(nil)).Elem()
}

func (i DataSourceDeltaSyncConfigArgs) ToDataSourceDeltaSyncConfigOutput() DataSourceDeltaSyncConfigOutput {
	return i.ToDataSourceDeltaSyncConfigOutputWithContext(context.Background())
}

func (i DataSourceDeltaSyncConfigArgs) ToDataSourceDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDeltaSyncConfigOutput)
}

func (i DataSourceDeltaSyncConfigArgs) ToDataSourceDeltaSyncConfigPtrOutput() DataSourceDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDeltaSyncConfigArgs) ToDataSourceDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDeltaSyncConfigOutput).ToDataSourceDeltaSyncConfigPtrOutputWithContext(ctx)
}

// DataSourceDeltaSyncConfigPtrInput is an input type that accepts DataSourceDeltaSyncConfigArgs, DataSourceDeltaSyncConfigPtr and DataSourceDeltaSyncConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDeltaSyncConfigPtrInput` via:
//
//	        DataSourceDeltaSyncConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceDeltaSyncConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDeltaSyncConfigPtrOutput() DataSourceDeltaSyncConfigPtrOutput
	ToDataSourceDeltaSyncConfigPtrOutputWithContext(context.Context) DataSourceDeltaSyncConfigPtrOutput
}

type dataSourceDeltaSyncConfigPtrType DataSourceDeltaSyncConfigArgs

func DataSourceDeltaSyncConfigPtr(v *DataSourceDeltaSyncConfigArgs) DataSourceDeltaSyncConfigPtrInput {
	return (*dataSourceDeltaSyncConfigPtrType)(v)
}

func (*dataSourceDeltaSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDeltaSyncConfig)(nil)).Elem()
}

func (i *dataSourceDeltaSyncConfigPtrType) ToDataSourceDeltaSyncConfigPtrOutput() DataSourceDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDeltaSyncConfigPtrType) ToDataSourceDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDeltaSyncConfigPtrOutput)
}

type DataSourceDeltaSyncConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDeltaSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDeltaSyncConfigOutput) ToDataSourceDeltaSyncConfigOutput() DataSourceDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDeltaSyncConfigOutput) ToDataSourceDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDeltaSyncConfigOutput) ToDataSourceDeltaSyncConfigPtrOutput() DataSourceDeltaSyncConfigPtrOutput {
	return o.ToDataSourceDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDeltaSyncConfigOutput) ToDataSourceDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDeltaSyncConfig) *DataSourceDeltaSyncConfig {
		return &v
	}).(DataSourceDeltaSyncConfigPtrOutput)
}

func (o DataSourceDeltaSyncConfigOutput) BaseTableTtl() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDeltaSyncConfig) string { return v.BaseTableTtl }).(pulumi.StringOutput)
}

func (o DataSourceDeltaSyncConfigOutput) DeltaSyncTableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDeltaSyncConfig) string { return v.DeltaSyncTableName }).(pulumi.StringOutput)
}

func (o DataSourceDeltaSyncConfigOutput) DeltaSyncTableTtl() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDeltaSyncConfig) string { return v.DeltaSyncTableTtl }).(pulumi.StringOutput)
}

type DataSourceDeltaSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDeltaSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDeltaSyncConfigPtrOutput) ToDataSourceDeltaSyncConfigPtrOutput() DataSourceDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDeltaSyncConfigPtrOutput) ToDataSourceDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDeltaSyncConfigPtrOutput) Elem() DataSourceDeltaSyncConfigOutput {
	return o.ApplyT(func(v *DataSourceDeltaSyncConfig) DataSourceDeltaSyncConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDeltaSyncConfig
		return ret
	}).(DataSourceDeltaSyncConfigOutput)
}

func (o DataSourceDeltaSyncConfigPtrOutput) BaseTableTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDeltaSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.BaseTableTtl
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceDeltaSyncConfigPtrOutput) DeltaSyncTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDeltaSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncTableName
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceDeltaSyncConfigPtrOutput) DeltaSyncTableTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDeltaSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncTableTtl
	}).(pulumi.StringPtrOutput)
}

type DataSourceDynamoDbConfig struct {
	AwsRegion            string                     `pulumi:"awsRegion"`
	DeltaSyncConfig      *DataSourceDeltaSyncConfig `pulumi:"deltaSyncConfig"`
	TableName            string                     `pulumi:"tableName"`
	UseCallerCredentials *bool                      `pulumi:"useCallerCredentials"`
	Versioned            *bool                      `pulumi:"versioned"`
}

// DataSourceDynamoDbConfigInput is an input type that accepts DataSourceDynamoDbConfigArgs and DataSourceDynamoDbConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamoDbConfigInput` via:
//
//	DataSourceDynamoDbConfigArgs{...}
type DataSourceDynamoDbConfigInput interface {
	pulumi.Input

	ToDataSourceDynamoDbConfigOutput() DataSourceDynamoDbConfigOutput
	ToDataSourceDynamoDbConfigOutputWithContext(context.Context) DataSourceDynamoDbConfigOutput
}

type DataSourceDynamoDbConfigArgs struct {
	AwsRegion            pulumi.StringInput                `pulumi:"awsRegion"`
	DeltaSyncConfig      DataSourceDeltaSyncConfigPtrInput `pulumi:"deltaSyncConfig"`
	TableName            pulumi.StringInput                `pulumi:"tableName"`
	UseCallerCredentials pulumi.BoolPtrInput               `pulumi:"useCallerCredentials"`
	Versioned            pulumi.BoolPtrInput               `pulumi:"versioned"`
}

func (DataSourceDynamoDbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamoDbConfig)(nil)).Elem()
}

func (i DataSourceDynamoDbConfigArgs) ToDataSourceDynamoDbConfigOutput() DataSourceDynamoDbConfigOutput {
	return i.ToDataSourceDynamoDbConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamoDbConfigArgs) ToDataSourceDynamoDbConfigOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamoDbConfigOutput)
}

func (i DataSourceDynamoDbConfigArgs) ToDataSourceDynamoDbConfigPtrOutput() DataSourceDynamoDbConfigPtrOutput {
	return i.ToDataSourceDynamoDbConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamoDbConfigArgs) ToDataSourceDynamoDbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamoDbConfigOutput).ToDataSourceDynamoDbConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamoDbConfigPtrInput is an input type that accepts DataSourceDynamoDbConfigArgs, DataSourceDynamoDbConfigPtr and DataSourceDynamoDbConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamoDbConfigPtrInput` via:
//
//	        DataSourceDynamoDbConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceDynamoDbConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamoDbConfigPtrOutput() DataSourceDynamoDbConfigPtrOutput
	ToDataSourceDynamoDbConfigPtrOutputWithContext(context.Context) DataSourceDynamoDbConfigPtrOutput
}

type dataSourceDynamoDbConfigPtrType DataSourceDynamoDbConfigArgs

func DataSourceDynamoDbConfigPtr(v *DataSourceDynamoDbConfigArgs) DataSourceDynamoDbConfigPtrInput {
	return (*dataSourceDynamoDbConfigPtrType)(v)
}

func (*dataSourceDynamoDbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamoDbConfig)(nil)).Elem()
}

func (i *dataSourceDynamoDbConfigPtrType) ToDataSourceDynamoDbConfigPtrOutput() DataSourceDynamoDbConfigPtrOutput {
	return i.ToDataSourceDynamoDbConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamoDbConfigPtrType) ToDataSourceDynamoDbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamoDbConfigPtrOutput)
}

type DataSourceDynamoDbConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamoDbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamoDbConfig)(nil)).Elem()
}

func (o DataSourceDynamoDbConfigOutput) ToDataSourceDynamoDbConfigOutput() DataSourceDynamoDbConfigOutput {
	return o
}

func (o DataSourceDynamoDbConfigOutput) ToDataSourceDynamoDbConfigOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigOutput {
	return o
}

func (o DataSourceDynamoDbConfigOutput) ToDataSourceDynamoDbConfigPtrOutput() DataSourceDynamoDbConfigPtrOutput {
	return o.ToDataSourceDynamoDbConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamoDbConfigOutput) ToDataSourceDynamoDbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDynamoDbConfig) *DataSourceDynamoDbConfig {
		return &v
	}).(DataSourceDynamoDbConfigPtrOutput)
}

func (o DataSourceDynamoDbConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamoDbConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o DataSourceDynamoDbConfigOutput) DeltaSyncConfig() DataSourceDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v DataSourceDynamoDbConfig) *DataSourceDeltaSyncConfig { return v.DeltaSyncConfig }).(DataSourceDeltaSyncConfigPtrOutput)
}

func (o DataSourceDynamoDbConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamoDbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

func (o DataSourceDynamoDbConfigOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamoDbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

func (o DataSourceDynamoDbConfigOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamoDbConfig) *bool { return v.Versioned }).(pulumi.BoolPtrOutput)
}

type DataSourceDynamoDbConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamoDbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamoDbConfig)(nil)).Elem()
}

func (o DataSourceDynamoDbConfigPtrOutput) ToDataSourceDynamoDbConfigPtrOutput() DataSourceDynamoDbConfigPtrOutput {
	return o
}

func (o DataSourceDynamoDbConfigPtrOutput) ToDataSourceDynamoDbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamoDbConfigPtrOutput {
	return o
}

func (o DataSourceDynamoDbConfigPtrOutput) Elem() DataSourceDynamoDbConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) DataSourceDynamoDbConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDynamoDbConfig
		return ret
	}).(DataSourceDynamoDbConfigOutput)
}

func (o DataSourceDynamoDbConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceDynamoDbConfigPtrOutput) DeltaSyncConfig() DataSourceDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) *DataSourceDeltaSyncConfig {
		if v == nil {
			return nil
		}
		return v.DeltaSyncConfig
	}).(DataSourceDeltaSyncConfigPtrOutput)
}

func (o DataSourceDynamoDbConfigPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceDynamoDbConfigPtrOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseCallerCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o DataSourceDynamoDbConfigPtrOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamoDbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Versioned
	}).(pulumi.BoolPtrOutput)
}

type DataSourceElasticsearchConfig struct {
	AwsRegion string `pulumi:"awsRegion"`
	Endpoint  string `pulumi:"endpoint"`
}

// DataSourceElasticsearchConfigInput is an input type that accepts DataSourceElasticsearchConfigArgs and DataSourceElasticsearchConfigOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigInput` via:
//
//	DataSourceElasticsearchConfigArgs{...}
type DataSourceElasticsearchConfigInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput
	ToDataSourceElasticsearchConfigOutputWithContext(context.Context) DataSourceElasticsearchConfigOutput
}

type DataSourceElasticsearchConfigArgs struct {
	AwsRegion pulumi.StringInput `pulumi:"awsRegion"`
	Endpoint  pulumi.StringInput `pulumi:"endpoint"`
}

func (DataSourceElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return i.ToDataSourceElasticsearchConfigOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput)
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput).ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx)
}

// DataSourceElasticsearchConfigPtrInput is an input type that accepts DataSourceElasticsearchConfigArgs, DataSourceElasticsearchConfigPtr and DataSourceElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigPtrInput` via:
//
//	        DataSourceElasticsearchConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput
	ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Context) DataSourceElasticsearchConfigPtrOutput
}

type dataSourceElasticsearchConfigPtrType DataSourceElasticsearchConfigArgs

func DataSourceElasticsearchConfigPtr(v *DataSourceElasticsearchConfigArgs) DataSourceElasticsearchConfigPtrInput {
	return (*dataSourceElasticsearchConfigPtrType)(v)
}

func (*dataSourceElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigPtrOutput)
}

type DataSourceElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceElasticsearchConfig) *DataSourceElasticsearchConfig {
		return &v
	}).(DataSourceElasticsearchConfigPtrOutput)
}

func (o DataSourceElasticsearchConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o DataSourceElasticsearchConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) Elem() DataSourceElasticsearchConfigOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) DataSourceElasticsearchConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceElasticsearchConfig
		return ret
	}).(DataSourceElasticsearchConfigOutput)
}

func (o DataSourceElasticsearchConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceElasticsearchConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DataSourceEventBridgeConfig struct {
	EventBusArn string `pulumi:"eventBusArn"`
}

// DataSourceEventBridgeConfigInput is an input type that accepts DataSourceEventBridgeConfigArgs and DataSourceEventBridgeConfigOutput values.
// You can construct a concrete instance of `DataSourceEventBridgeConfigInput` via:
//
//	DataSourceEventBridgeConfigArgs{...}
type DataSourceEventBridgeConfigInput interface {
	pulumi.Input

	ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput
	ToDataSourceEventBridgeConfigOutputWithContext(context.Context) DataSourceEventBridgeConfigOutput
}

type DataSourceEventBridgeConfigArgs struct {
	EventBusArn pulumi.StringInput `pulumi:"eventBusArn"`
}

func (DataSourceEventBridgeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEventBridgeConfig)(nil)).Elem()
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput {
	return i.ToDataSourceEventBridgeConfigOutputWithContext(context.Background())
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigOutput)
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return i.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigOutput).ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx)
}

// DataSourceEventBridgeConfigPtrInput is an input type that accepts DataSourceEventBridgeConfigArgs, DataSourceEventBridgeConfigPtr and DataSourceEventBridgeConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceEventBridgeConfigPtrInput` via:
//
//	        DataSourceEventBridgeConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceEventBridgeConfigPtrInput interface {
	pulumi.Input

	ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput
	ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Context) DataSourceEventBridgeConfigPtrOutput
}

type dataSourceEventBridgeConfigPtrType DataSourceEventBridgeConfigArgs

func DataSourceEventBridgeConfigPtr(v *DataSourceEventBridgeConfigArgs) DataSourceEventBridgeConfigPtrInput {
	return (*dataSourceEventBridgeConfigPtrType)(v)
}

func (*dataSourceEventBridgeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceEventBridgeConfig)(nil)).Elem()
}

func (i *dataSourceEventBridgeConfigPtrType) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return i.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceEventBridgeConfigPtrType) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigPtrOutput)
}

type DataSourceEventBridgeConfigOutput struct{ *pulumi.OutputState }

func (DataSourceEventBridgeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEventBridgeConfig)(nil)).Elem()
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput {
	return o
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigOutput {
	return o
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return o.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceEventBridgeConfig) *DataSourceEventBridgeConfig {
		return &v
	}).(DataSourceEventBridgeConfigPtrOutput)
}

func (o DataSourceEventBridgeConfigOutput) EventBusArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceEventBridgeConfig) string { return v.EventBusArn }).(pulumi.StringOutput)
}

type DataSourceEventBridgeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceEventBridgeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceEventBridgeConfig)(nil)).Elem()
}

func (o DataSourceEventBridgeConfigPtrOutput) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return o
}

func (o DataSourceEventBridgeConfigPtrOutput) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return o
}

func (o DataSourceEventBridgeConfigPtrOutput) Elem() DataSourceEventBridgeConfigOutput {
	return o.ApplyT(func(v *DataSourceEventBridgeConfig) DataSourceEventBridgeConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceEventBridgeConfig
		return ret
	}).(DataSourceEventBridgeConfigOutput)
}

func (o DataSourceEventBridgeConfigPtrOutput) EventBusArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceEventBridgeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EventBusArn
	}).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfig struct {
	AuthorizationConfig *DataSourceAuthorizationConfig `pulumi:"authorizationConfig"`
	Endpoint            string                         `pulumi:"endpoint"`
}

// DataSourceHttpConfigInput is an input type that accepts DataSourceHttpConfigArgs and DataSourceHttpConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigInput` via:
//
//	DataSourceHttpConfigArgs{...}
type DataSourceHttpConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput
	ToDataSourceHttpConfigOutputWithContext(context.Context) DataSourceHttpConfigOutput
}

type DataSourceHttpConfigArgs struct {
	AuthorizationConfig DataSourceAuthorizationConfigPtrInput `pulumi:"authorizationConfig"`
	Endpoint            pulumi.StringInput                    `pulumi:"endpoint"`
}

func (DataSourceHttpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return i.ToDataSourceHttpConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput)
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput).ToDataSourceHttpConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigPtrInput is an input type that accepts DataSourceHttpConfigArgs, DataSourceHttpConfigPtr and DataSourceHttpConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigPtrInput` via:
//
//	        DataSourceHttpConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceHttpConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput
	ToDataSourceHttpConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigPtrOutput
}

type dataSourceHttpConfigPtrType DataSourceHttpConfigArgs

func DataSourceHttpConfigPtr(v *DataSourceHttpConfigArgs) DataSourceHttpConfigPtrInput {
	return (*dataSourceHttpConfigPtrType)(v)
}

func (*dataSourceHttpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigPtrOutput)
}

type DataSourceHttpConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfig) *DataSourceHttpConfig {
		return &v
	}).(DataSourceHttpConfigPtrOutput)
}

func (o DataSourceHttpConfigOutput) AuthorizationConfig() DataSourceAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) *DataSourceAuthorizationConfig { return v.AuthorizationConfig }).(DataSourceAuthorizationConfigPtrOutput)
}

func (o DataSourceHttpConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceHttpConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) Elem() DataSourceHttpConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) DataSourceHttpConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfig
		return ret
	}).(DataSourceHttpConfigOutput)
}

func (o DataSourceHttpConfigPtrOutput) AuthorizationConfig() DataSourceAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *DataSourceAuthorizationConfig {
		if v == nil {
			return nil
		}
		return v.AuthorizationConfig
	}).(DataSourceAuthorizationConfigPtrOutput)
}

func (o DataSourceHttpConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DataSourceLambdaConfig struct {
	LambdaFunctionArn string `pulumi:"lambdaFunctionArn"`
}

// DataSourceLambdaConfigInput is an input type that accepts DataSourceLambdaConfigArgs and DataSourceLambdaConfigOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigInput` via:
//
//	DataSourceLambdaConfigArgs{...}
type DataSourceLambdaConfigInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput
	ToDataSourceLambdaConfigOutputWithContext(context.Context) DataSourceLambdaConfigOutput
}

type DataSourceLambdaConfigArgs struct {
	LambdaFunctionArn pulumi.StringInput `pulumi:"lambdaFunctionArn"`
}

func (DataSourceLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return i.ToDataSourceLambdaConfigOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput)
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput).ToDataSourceLambdaConfigPtrOutputWithContext(ctx)
}

// DataSourceLambdaConfigPtrInput is an input type that accepts DataSourceLambdaConfigArgs, DataSourceLambdaConfigPtr and DataSourceLambdaConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigPtrInput` via:
//
//	        DataSourceLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceLambdaConfigPtrInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput
	ToDataSourceLambdaConfigPtrOutputWithContext(context.Context) DataSourceLambdaConfigPtrOutput
}

type dataSourceLambdaConfigPtrType DataSourceLambdaConfigArgs

func DataSourceLambdaConfigPtr(v *DataSourceLambdaConfigArgs) DataSourceLambdaConfigPtrInput {
	return (*dataSourceLambdaConfigPtrType)(v)
}

func (*dataSourceLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigPtrOutput)
}

type DataSourceLambdaConfigOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceLambdaConfig) *DataSourceLambdaConfig {
		return &v
	}).(DataSourceLambdaConfigPtrOutput)
}

func (o DataSourceLambdaConfigOutput) LambdaFunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) string { return v.LambdaFunctionArn }).(pulumi.StringOutput)
}

type DataSourceLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) Elem() DataSourceLambdaConfigOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) DataSourceLambdaConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceLambdaConfig
		return ret
	}).(DataSourceLambdaConfigOutput)
}

func (o DataSourceLambdaConfigPtrOutput) LambdaFunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaFunctionArn
	}).(pulumi.StringPtrOutput)
}

type DataSourceOpenSearchServiceConfig struct {
	AwsRegion string `pulumi:"awsRegion"`
	Endpoint  string `pulumi:"endpoint"`
}

// DataSourceOpenSearchServiceConfigInput is an input type that accepts DataSourceOpenSearchServiceConfigArgs and DataSourceOpenSearchServiceConfigOutput values.
// You can construct a concrete instance of `DataSourceOpenSearchServiceConfigInput` via:
//
//	DataSourceOpenSearchServiceConfigArgs{...}
type DataSourceOpenSearchServiceConfigInput interface {
	pulumi.Input

	ToDataSourceOpenSearchServiceConfigOutput() DataSourceOpenSearchServiceConfigOutput
	ToDataSourceOpenSearchServiceConfigOutputWithContext(context.Context) DataSourceOpenSearchServiceConfigOutput
}

type DataSourceOpenSearchServiceConfigArgs struct {
	AwsRegion pulumi.StringInput `pulumi:"awsRegion"`
	Endpoint  pulumi.StringInput `pulumi:"endpoint"`
}

func (DataSourceOpenSearchServiceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOpenSearchServiceConfig)(nil)).Elem()
}

func (i DataSourceOpenSearchServiceConfigArgs) ToDataSourceOpenSearchServiceConfigOutput() DataSourceOpenSearchServiceConfigOutput {
	return i.ToDataSourceOpenSearchServiceConfigOutputWithContext(context.Background())
}

func (i DataSourceOpenSearchServiceConfigArgs) ToDataSourceOpenSearchServiceConfigOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpenSearchServiceConfigOutput)
}

func (i DataSourceOpenSearchServiceConfigArgs) ToDataSourceOpenSearchServiceConfigPtrOutput() DataSourceOpenSearchServiceConfigPtrOutput {
	return i.ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceOpenSearchServiceConfigArgs) ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpenSearchServiceConfigOutput).ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(ctx)
}

// DataSourceOpenSearchServiceConfigPtrInput is an input type that accepts DataSourceOpenSearchServiceConfigArgs, DataSourceOpenSearchServiceConfigPtr and DataSourceOpenSearchServiceConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceOpenSearchServiceConfigPtrInput` via:
//
//	        DataSourceOpenSearchServiceConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceOpenSearchServiceConfigPtrInput interface {
	pulumi.Input

	ToDataSourceOpenSearchServiceConfigPtrOutput() DataSourceOpenSearchServiceConfigPtrOutput
	ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(context.Context) DataSourceOpenSearchServiceConfigPtrOutput
}

type dataSourceOpenSearchServiceConfigPtrType DataSourceOpenSearchServiceConfigArgs

func DataSourceOpenSearchServiceConfigPtr(v *DataSourceOpenSearchServiceConfigArgs) DataSourceOpenSearchServiceConfigPtrInput {
	return (*dataSourceOpenSearchServiceConfigPtrType)(v)
}

func (*dataSourceOpenSearchServiceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOpenSearchServiceConfig)(nil)).Elem()
}

func (i *dataSourceOpenSearchServiceConfigPtrType) ToDataSourceOpenSearchServiceConfigPtrOutput() DataSourceOpenSearchServiceConfigPtrOutput {
	return i.ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceOpenSearchServiceConfigPtrType) ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpenSearchServiceConfigPtrOutput)
}

type DataSourceOpenSearchServiceConfigOutput struct{ *pulumi.OutputState }

func (DataSourceOpenSearchServiceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOpenSearchServiceConfig)(nil)).Elem()
}

func (o DataSourceOpenSearchServiceConfigOutput) ToDataSourceOpenSearchServiceConfigOutput() DataSourceOpenSearchServiceConfigOutput {
	return o
}

func (o DataSourceOpenSearchServiceConfigOutput) ToDataSourceOpenSearchServiceConfigOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigOutput {
	return o
}

func (o DataSourceOpenSearchServiceConfigOutput) ToDataSourceOpenSearchServiceConfigPtrOutput() DataSourceOpenSearchServiceConfigPtrOutput {
	return o.ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceOpenSearchServiceConfigOutput) ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceOpenSearchServiceConfig) *DataSourceOpenSearchServiceConfig {
		return &v
	}).(DataSourceOpenSearchServiceConfigPtrOutput)
}

func (o DataSourceOpenSearchServiceConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOpenSearchServiceConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o DataSourceOpenSearchServiceConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOpenSearchServiceConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceOpenSearchServiceConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceOpenSearchServiceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOpenSearchServiceConfig)(nil)).Elem()
}

func (o DataSourceOpenSearchServiceConfigPtrOutput) ToDataSourceOpenSearchServiceConfigPtrOutput() DataSourceOpenSearchServiceConfigPtrOutput {
	return o
}

func (o DataSourceOpenSearchServiceConfigPtrOutput) ToDataSourceOpenSearchServiceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpenSearchServiceConfigPtrOutput {
	return o
}

func (o DataSourceOpenSearchServiceConfigPtrOutput) Elem() DataSourceOpenSearchServiceConfigOutput {
	return o.ApplyT(func(v *DataSourceOpenSearchServiceConfig) DataSourceOpenSearchServiceConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceOpenSearchServiceConfig
		return ret
	}).(DataSourceOpenSearchServiceConfigOutput)
}

func (o DataSourceOpenSearchServiceConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOpenSearchServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceOpenSearchServiceConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOpenSearchServiceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DataSourceRdsHttpEndpointConfig struct {
	AwsRegion           string  `pulumi:"awsRegion"`
	AwsSecretStoreArn   string  `pulumi:"awsSecretStoreArn"`
	DatabaseName        *string `pulumi:"databaseName"`
	DbClusterIdentifier string  `pulumi:"dbClusterIdentifier"`
	Schema              *string `pulumi:"schema"`
}

// DataSourceRdsHttpEndpointConfigInput is an input type that accepts DataSourceRdsHttpEndpointConfigArgs and DataSourceRdsHttpEndpointConfigOutput values.
// You can construct a concrete instance of `DataSourceRdsHttpEndpointConfigInput` via:
//
//	DataSourceRdsHttpEndpointConfigArgs{...}
type DataSourceRdsHttpEndpointConfigInput interface {
	pulumi.Input

	ToDataSourceRdsHttpEndpointConfigOutput() DataSourceRdsHttpEndpointConfigOutput
	ToDataSourceRdsHttpEndpointConfigOutputWithContext(context.Context) DataSourceRdsHttpEndpointConfigOutput
}

type DataSourceRdsHttpEndpointConfigArgs struct {
	AwsRegion           pulumi.StringInput    `pulumi:"awsRegion"`
	AwsSecretStoreArn   pulumi.StringInput    `pulumi:"awsSecretStoreArn"`
	DatabaseName        pulumi.StringPtrInput `pulumi:"databaseName"`
	DbClusterIdentifier pulumi.StringInput    `pulumi:"dbClusterIdentifier"`
	Schema              pulumi.StringPtrInput `pulumi:"schema"`
}

func (DataSourceRdsHttpEndpointConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsHttpEndpointConfig)(nil)).Elem()
}

func (i DataSourceRdsHttpEndpointConfigArgs) ToDataSourceRdsHttpEndpointConfigOutput() DataSourceRdsHttpEndpointConfigOutput {
	return i.ToDataSourceRdsHttpEndpointConfigOutputWithContext(context.Background())
}

func (i DataSourceRdsHttpEndpointConfigArgs) ToDataSourceRdsHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsHttpEndpointConfigOutput)
}

func (i DataSourceRdsHttpEndpointConfigArgs) ToDataSourceRdsHttpEndpointConfigPtrOutput() DataSourceRdsHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRdsHttpEndpointConfigArgs) ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsHttpEndpointConfigOutput).ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(ctx)
}

// DataSourceRdsHttpEndpointConfigPtrInput is an input type that accepts DataSourceRdsHttpEndpointConfigArgs, DataSourceRdsHttpEndpointConfigPtr and DataSourceRdsHttpEndpointConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRdsHttpEndpointConfigPtrInput` via:
//
//	        DataSourceRdsHttpEndpointConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceRdsHttpEndpointConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRdsHttpEndpointConfigPtrOutput() DataSourceRdsHttpEndpointConfigPtrOutput
	ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(context.Context) DataSourceRdsHttpEndpointConfigPtrOutput
}

type dataSourceRdsHttpEndpointConfigPtrType DataSourceRdsHttpEndpointConfigArgs

func DataSourceRdsHttpEndpointConfigPtr(v *DataSourceRdsHttpEndpointConfigArgs) DataSourceRdsHttpEndpointConfigPtrInput {
	return (*dataSourceRdsHttpEndpointConfigPtrType)(v)
}

func (*dataSourceRdsHttpEndpointConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsHttpEndpointConfig)(nil)).Elem()
}

func (i *dataSourceRdsHttpEndpointConfigPtrType) ToDataSourceRdsHttpEndpointConfigPtrOutput() DataSourceRdsHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRdsHttpEndpointConfigPtrType) ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsHttpEndpointConfigPtrOutput)
}

type DataSourceRdsHttpEndpointConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRdsHttpEndpointConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRdsHttpEndpointConfigOutput) ToDataSourceRdsHttpEndpointConfigOutput() DataSourceRdsHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRdsHttpEndpointConfigOutput) ToDataSourceRdsHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRdsHttpEndpointConfigOutput) ToDataSourceRdsHttpEndpointConfigPtrOutput() DataSourceRdsHttpEndpointConfigPtrOutput {
	return o.ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRdsHttpEndpointConfigOutput) ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRdsHttpEndpointConfig) *DataSourceRdsHttpEndpointConfig {
		return &v
	}).(DataSourceRdsHttpEndpointConfigPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsHttpEndpointConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o DataSourceRdsHttpEndpointConfigOutput) AwsSecretStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsHttpEndpointConfig) string { return v.AwsSecretStoreArn }).(pulumi.StringOutput)
}

func (o DataSourceRdsHttpEndpointConfigOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRdsHttpEndpointConfig) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigOutput) DbClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsHttpEndpointConfig) string { return v.DbClusterIdentifier }).(pulumi.StringOutput)
}

func (o DataSourceRdsHttpEndpointConfigOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRdsHttpEndpointConfig) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type DataSourceRdsHttpEndpointConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRdsHttpEndpointConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) ToDataSourceRdsHttpEndpointConfigPtrOutput() DataSourceRdsHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) ToDataSourceRdsHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRdsHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) Elem() DataSourceRdsHttpEndpointConfigOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) DataSourceRdsHttpEndpointConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRdsHttpEndpointConfig
		return ret
	}).(DataSourceRdsHttpEndpointConfigOutput)
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) AwsSecretStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsSecretStoreArn
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) DbClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DbClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceRdsHttpEndpointConfigPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfig struct {
	RdsHttpEndpointConfig        *DataSourceRdsHttpEndpointConfig `pulumi:"rdsHttpEndpointConfig"`
	RelationalDatabaseSourceType string                           `pulumi:"relationalDatabaseSourceType"`
}

// DataSourceRelationalDatabaseConfigInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs and DataSourceRelationalDatabaseConfigOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigInput` via:
//
//	DataSourceRelationalDatabaseConfigArgs{...}
type DataSourceRelationalDatabaseConfigInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput
	ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigOutput
}

type DataSourceRelationalDatabaseConfigArgs struct {
	RdsHttpEndpointConfig        DataSourceRdsHttpEndpointConfigPtrInput `pulumi:"rdsHttpEndpointConfig"`
	RelationalDatabaseSourceType pulumi.StringInput                      `pulumi:"relationalDatabaseSourceType"`
}

func (DataSourceRelationalDatabaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return i.ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput)
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput).ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx)
}

// DataSourceRelationalDatabaseConfigPtrInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs, DataSourceRelationalDatabaseConfigPtr and DataSourceRelationalDatabaseConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigPtrInput` via:
//
//	        DataSourceRelationalDatabaseConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceRelationalDatabaseConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput
	ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigPtrOutput
}

type dataSourceRelationalDatabaseConfigPtrType DataSourceRelationalDatabaseConfigArgs

func DataSourceRelationalDatabaseConfigPtr(v *DataSourceRelationalDatabaseConfigArgs) DataSourceRelationalDatabaseConfigPtrInput {
	return (*dataSourceRelationalDatabaseConfigPtrType)(v)
}

func (*dataSourceRelationalDatabaseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigPtrOutput)
}

type DataSourceRelationalDatabaseConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfig {
		return &v
	}).(DataSourceRelationalDatabaseConfigPtrOutput)
}

func (o DataSourceRelationalDatabaseConfigOutput) RdsHttpEndpointConfig() DataSourceRdsHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) *DataSourceRdsHttpEndpointConfig {
		return v.RdsHttpEndpointConfig
	}).(DataSourceRdsHttpEndpointConfigPtrOutput)
}

func (o DataSourceRelationalDatabaseConfigOutput) RelationalDatabaseSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) string { return v.RelationalDatabaseSourceType }).(pulumi.StringOutput)
}

type DataSourceRelationalDatabaseConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) Elem() DataSourceRelationalDatabaseConfigOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) DataSourceRelationalDatabaseConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRelationalDatabaseConfig
		return ret
	}).(DataSourceRelationalDatabaseConfigOutput)
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) RdsHttpEndpointConfig() DataSourceRdsHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *DataSourceRdsHttpEndpointConfig {
		if v == nil {
			return nil
		}
		return v.RdsHttpEndpointConfig
	}).(DataSourceRdsHttpEndpointConfigPtrOutput)
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) RelationalDatabaseSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RelationalDatabaseSourceType
	}).(pulumi.StringPtrOutput)
}

// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type FunctionConfigurationAppSyncRuntime struct {
	// The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
	Name string `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is 1.0.0.
	RuntimeVersion string `pulumi:"runtimeVersion"`
}

// FunctionConfigurationAppSyncRuntimeInput is an input type that accepts FunctionConfigurationAppSyncRuntimeArgs and FunctionConfigurationAppSyncRuntimeOutput values.
// You can construct a concrete instance of `FunctionConfigurationAppSyncRuntimeInput` via:
//
//	FunctionConfigurationAppSyncRuntimeArgs{...}
type FunctionConfigurationAppSyncRuntimeInput interface {
	pulumi.Input

	ToFunctionConfigurationAppSyncRuntimeOutput() FunctionConfigurationAppSyncRuntimeOutput
	ToFunctionConfigurationAppSyncRuntimeOutputWithContext(context.Context) FunctionConfigurationAppSyncRuntimeOutput
}

// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type FunctionConfigurationAppSyncRuntimeArgs struct {
	// The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
	Name pulumi.StringInput `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is 1.0.0.
	RuntimeVersion pulumi.StringInput `pulumi:"runtimeVersion"`
}

func (FunctionConfigurationAppSyncRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationAppSyncRuntime)(nil)).Elem()
}

func (i FunctionConfigurationAppSyncRuntimeArgs) ToFunctionConfigurationAppSyncRuntimeOutput() FunctionConfigurationAppSyncRuntimeOutput {
	return i.ToFunctionConfigurationAppSyncRuntimeOutputWithContext(context.Background())
}

func (i FunctionConfigurationAppSyncRuntimeArgs) ToFunctionConfigurationAppSyncRuntimeOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationAppSyncRuntimeOutput)
}

func (i FunctionConfigurationAppSyncRuntimeArgs) ToFunctionConfigurationAppSyncRuntimePtrOutput() FunctionConfigurationAppSyncRuntimePtrOutput {
	return i.ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (i FunctionConfigurationAppSyncRuntimeArgs) ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationAppSyncRuntimeOutput).ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(ctx)
}

// FunctionConfigurationAppSyncRuntimePtrInput is an input type that accepts FunctionConfigurationAppSyncRuntimeArgs, FunctionConfigurationAppSyncRuntimePtr and FunctionConfigurationAppSyncRuntimePtrOutput values.
// You can construct a concrete instance of `FunctionConfigurationAppSyncRuntimePtrInput` via:
//
//	        FunctionConfigurationAppSyncRuntimeArgs{...}
//
//	or:
//
//	        nil
type FunctionConfigurationAppSyncRuntimePtrInput interface {
	pulumi.Input

	ToFunctionConfigurationAppSyncRuntimePtrOutput() FunctionConfigurationAppSyncRuntimePtrOutput
	ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(context.Context) FunctionConfigurationAppSyncRuntimePtrOutput
}

type functionConfigurationAppSyncRuntimePtrType FunctionConfigurationAppSyncRuntimeArgs

func FunctionConfigurationAppSyncRuntimePtr(v *FunctionConfigurationAppSyncRuntimeArgs) FunctionConfigurationAppSyncRuntimePtrInput {
	return (*functionConfigurationAppSyncRuntimePtrType)(v)
}

func (*functionConfigurationAppSyncRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationAppSyncRuntime)(nil)).Elem()
}

func (i *functionConfigurationAppSyncRuntimePtrType) ToFunctionConfigurationAppSyncRuntimePtrOutput() FunctionConfigurationAppSyncRuntimePtrOutput {
	return i.ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (i *functionConfigurationAppSyncRuntimePtrType) ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationAppSyncRuntimePtrOutput)
}

// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type FunctionConfigurationAppSyncRuntimeOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationAppSyncRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationAppSyncRuntime)(nil)).Elem()
}

func (o FunctionConfigurationAppSyncRuntimeOutput) ToFunctionConfigurationAppSyncRuntimeOutput() FunctionConfigurationAppSyncRuntimeOutput {
	return o
}

func (o FunctionConfigurationAppSyncRuntimeOutput) ToFunctionConfigurationAppSyncRuntimeOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimeOutput {
	return o
}

func (o FunctionConfigurationAppSyncRuntimeOutput) ToFunctionConfigurationAppSyncRuntimePtrOutput() FunctionConfigurationAppSyncRuntimePtrOutput {
	return o.ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (o FunctionConfigurationAppSyncRuntimeOutput) ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionConfigurationAppSyncRuntime) *FunctionConfigurationAppSyncRuntime {
		return &v
	}).(FunctionConfigurationAppSyncRuntimePtrOutput)
}

// The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
func (o FunctionConfigurationAppSyncRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionConfigurationAppSyncRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the runtime to use. Currently, the only allowed version is 1.0.0.
func (o FunctionConfigurationAppSyncRuntimeOutput) RuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionConfigurationAppSyncRuntime) string { return v.RuntimeVersion }).(pulumi.StringOutput)
}

type FunctionConfigurationAppSyncRuntimePtrOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationAppSyncRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationAppSyncRuntime)(nil)).Elem()
}

func (o FunctionConfigurationAppSyncRuntimePtrOutput) ToFunctionConfigurationAppSyncRuntimePtrOutput() FunctionConfigurationAppSyncRuntimePtrOutput {
	return o
}

func (o FunctionConfigurationAppSyncRuntimePtrOutput) ToFunctionConfigurationAppSyncRuntimePtrOutputWithContext(ctx context.Context) FunctionConfigurationAppSyncRuntimePtrOutput {
	return o
}

func (o FunctionConfigurationAppSyncRuntimePtrOutput) Elem() FunctionConfigurationAppSyncRuntimeOutput {
	return o.ApplyT(func(v *FunctionConfigurationAppSyncRuntime) FunctionConfigurationAppSyncRuntime {
		if v != nil {
			return *v
		}
		var ret FunctionConfigurationAppSyncRuntime
		return ret
	}).(FunctionConfigurationAppSyncRuntimeOutput)
}

// The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
func (o FunctionConfigurationAppSyncRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationAppSyncRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of the runtime to use. Currently, the only allowed version is 1.0.0.
func (o FunctionConfigurationAppSyncRuntimePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationAppSyncRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.
type FunctionConfigurationLambdaConflictHandlerConfig struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// FunctionConfigurationLambdaConflictHandlerConfigInput is an input type that accepts FunctionConfigurationLambdaConflictHandlerConfigArgs and FunctionConfigurationLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `FunctionConfigurationLambdaConflictHandlerConfigInput` via:
//
//	FunctionConfigurationLambdaConflictHandlerConfigArgs{...}
type FunctionConfigurationLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToFunctionConfigurationLambdaConflictHandlerConfigOutput() FunctionConfigurationLambdaConflictHandlerConfigOutput
	ToFunctionConfigurationLambdaConflictHandlerConfigOutputWithContext(context.Context) FunctionConfigurationLambdaConflictHandlerConfigOutput
}

// The LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.
type FunctionConfigurationLambdaConflictHandlerConfigArgs struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (FunctionConfigurationLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i FunctionConfigurationLambdaConflictHandlerConfigArgs) ToFunctionConfigurationLambdaConflictHandlerConfigOutput() FunctionConfigurationLambdaConflictHandlerConfigOutput {
	return i.ToFunctionConfigurationLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i FunctionConfigurationLambdaConflictHandlerConfigArgs) ToFunctionConfigurationLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationLambdaConflictHandlerConfigOutput)
}

func (i FunctionConfigurationLambdaConflictHandlerConfigArgs) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutput() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i FunctionConfigurationLambdaConflictHandlerConfigArgs) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationLambdaConflictHandlerConfigOutput).ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// FunctionConfigurationLambdaConflictHandlerConfigPtrInput is an input type that accepts FunctionConfigurationLambdaConflictHandlerConfigArgs, FunctionConfigurationLambdaConflictHandlerConfigPtr and FunctionConfigurationLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `FunctionConfigurationLambdaConflictHandlerConfigPtrInput` via:
//
//	        FunctionConfigurationLambdaConflictHandlerConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionConfigurationLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutput() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput
	ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) FunctionConfigurationLambdaConflictHandlerConfigPtrOutput
}

type functionConfigurationLambdaConflictHandlerConfigPtrType FunctionConfigurationLambdaConflictHandlerConfigArgs

func FunctionConfigurationLambdaConflictHandlerConfigPtr(v *FunctionConfigurationLambdaConflictHandlerConfigArgs) FunctionConfigurationLambdaConflictHandlerConfigPtrInput {
	return (*functionConfigurationLambdaConflictHandlerConfigPtrType)(v)
}

func (*functionConfigurationLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *functionConfigurationLambdaConflictHandlerConfigPtrType) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutput() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *functionConfigurationLambdaConflictHandlerConfigPtrType) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationLambdaConflictHandlerConfigPtrOutput)
}

// The LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.
type FunctionConfigurationLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionConfigurationLambdaConflictHandlerConfigOutput) ToFunctionConfigurationLambdaConflictHandlerConfigOutput() FunctionConfigurationLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionConfigurationLambdaConflictHandlerConfigOutput) ToFunctionConfigurationLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionConfigurationLambdaConflictHandlerConfigOutput) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutput() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o.ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o FunctionConfigurationLambdaConflictHandlerConfigOutput) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionConfigurationLambdaConflictHandlerConfig) *FunctionConfigurationLambdaConflictHandlerConfig {
		return &v
	}).(FunctionConfigurationLambdaConflictHandlerConfigPtrOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o FunctionConfigurationLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionConfigurationLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type FunctionConfigurationLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionConfigurationLambdaConflictHandlerConfigPtrOutput) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutput() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionConfigurationLambdaConflictHandlerConfigPtrOutput) ToFunctionConfigurationLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionConfigurationLambdaConflictHandlerConfigPtrOutput) Elem() FunctionConfigurationLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *FunctionConfigurationLambdaConflictHandlerConfig) FunctionConfigurationLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret FunctionConfigurationLambdaConflictHandlerConfig
		return ret
	}).(FunctionConfigurationLambdaConflictHandlerConfigOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o FunctionConfigurationLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

// Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type FunctionConfigurationSyncConfig struct {
	// The Conflict Detection strategy to use.
	ConflictDetection string `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict.
	ConflictHandler             *string                                           `pulumi:"conflictHandler"`
	LambdaConflictHandlerConfig *FunctionConfigurationLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// FunctionConfigurationSyncConfigInput is an input type that accepts FunctionConfigurationSyncConfigArgs and FunctionConfigurationSyncConfigOutput values.
// You can construct a concrete instance of `FunctionConfigurationSyncConfigInput` via:
//
//	FunctionConfigurationSyncConfigArgs{...}
type FunctionConfigurationSyncConfigInput interface {
	pulumi.Input

	ToFunctionConfigurationSyncConfigOutput() FunctionConfigurationSyncConfigOutput
	ToFunctionConfigurationSyncConfigOutputWithContext(context.Context) FunctionConfigurationSyncConfigOutput
}

// Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type FunctionConfigurationSyncConfigArgs struct {
	// The Conflict Detection strategy to use.
	ConflictDetection pulumi.StringInput `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict.
	ConflictHandler             pulumi.StringPtrInput                                    `pulumi:"conflictHandler"`
	LambdaConflictHandlerConfig FunctionConfigurationLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (FunctionConfigurationSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationSyncConfig)(nil)).Elem()
}

func (i FunctionConfigurationSyncConfigArgs) ToFunctionConfigurationSyncConfigOutput() FunctionConfigurationSyncConfigOutput {
	return i.ToFunctionConfigurationSyncConfigOutputWithContext(context.Background())
}

func (i FunctionConfigurationSyncConfigArgs) ToFunctionConfigurationSyncConfigOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationSyncConfigOutput)
}

func (i FunctionConfigurationSyncConfigArgs) ToFunctionConfigurationSyncConfigPtrOutput() FunctionConfigurationSyncConfigPtrOutput {
	return i.ToFunctionConfigurationSyncConfigPtrOutputWithContext(context.Background())
}

func (i FunctionConfigurationSyncConfigArgs) ToFunctionConfigurationSyncConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationSyncConfigOutput).ToFunctionConfigurationSyncConfigPtrOutputWithContext(ctx)
}

// FunctionConfigurationSyncConfigPtrInput is an input type that accepts FunctionConfigurationSyncConfigArgs, FunctionConfigurationSyncConfigPtr and FunctionConfigurationSyncConfigPtrOutput values.
// You can construct a concrete instance of `FunctionConfigurationSyncConfigPtrInput` via:
//
//	        FunctionConfigurationSyncConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionConfigurationSyncConfigPtrInput interface {
	pulumi.Input

	ToFunctionConfigurationSyncConfigPtrOutput() FunctionConfigurationSyncConfigPtrOutput
	ToFunctionConfigurationSyncConfigPtrOutputWithContext(context.Context) FunctionConfigurationSyncConfigPtrOutput
}

type functionConfigurationSyncConfigPtrType FunctionConfigurationSyncConfigArgs

func FunctionConfigurationSyncConfigPtr(v *FunctionConfigurationSyncConfigArgs) FunctionConfigurationSyncConfigPtrInput {
	return (*functionConfigurationSyncConfigPtrType)(v)
}

func (*functionConfigurationSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationSyncConfig)(nil)).Elem()
}

func (i *functionConfigurationSyncConfigPtrType) ToFunctionConfigurationSyncConfigPtrOutput() FunctionConfigurationSyncConfigPtrOutput {
	return i.ToFunctionConfigurationSyncConfigPtrOutputWithContext(context.Background())
}

func (i *functionConfigurationSyncConfigPtrType) ToFunctionConfigurationSyncConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigurationSyncConfigPtrOutput)
}

// Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type FunctionConfigurationSyncConfigOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfigurationSyncConfig)(nil)).Elem()
}

func (o FunctionConfigurationSyncConfigOutput) ToFunctionConfigurationSyncConfigOutput() FunctionConfigurationSyncConfigOutput {
	return o
}

func (o FunctionConfigurationSyncConfigOutput) ToFunctionConfigurationSyncConfigOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigOutput {
	return o
}

func (o FunctionConfigurationSyncConfigOutput) ToFunctionConfigurationSyncConfigPtrOutput() FunctionConfigurationSyncConfigPtrOutput {
	return o.ToFunctionConfigurationSyncConfigPtrOutputWithContext(context.Background())
}

func (o FunctionConfigurationSyncConfigOutput) ToFunctionConfigurationSyncConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionConfigurationSyncConfig) *FunctionConfigurationSyncConfig {
		return &v
	}).(FunctionConfigurationSyncConfigPtrOutput)
}

// The Conflict Detection strategy to use.
func (o FunctionConfigurationSyncConfigOutput) ConflictDetection() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionConfigurationSyncConfig) string { return v.ConflictDetection }).(pulumi.StringOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict.
func (o FunctionConfigurationSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionConfigurationSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

func (o FunctionConfigurationSyncConfigOutput) LambdaConflictHandlerConfig() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v FunctionConfigurationSyncConfig) *FunctionConfigurationLambdaConflictHandlerConfig {
		return v.LambdaConflictHandlerConfig
	}).(FunctionConfigurationLambdaConflictHandlerConfigPtrOutput)
}

type FunctionConfigurationSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionConfigurationSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfigurationSyncConfig)(nil)).Elem()
}

func (o FunctionConfigurationSyncConfigPtrOutput) ToFunctionConfigurationSyncConfigPtrOutput() FunctionConfigurationSyncConfigPtrOutput {
	return o
}

func (o FunctionConfigurationSyncConfigPtrOutput) ToFunctionConfigurationSyncConfigPtrOutputWithContext(ctx context.Context) FunctionConfigurationSyncConfigPtrOutput {
	return o
}

func (o FunctionConfigurationSyncConfigPtrOutput) Elem() FunctionConfigurationSyncConfigOutput {
	return o.ApplyT(func(v *FunctionConfigurationSyncConfig) FunctionConfigurationSyncConfig {
		if v != nil {
			return *v
		}
		var ret FunctionConfigurationSyncConfig
		return ret
	}).(FunctionConfigurationSyncConfigOutput)
}

// The Conflict Detection strategy to use.
func (o FunctionConfigurationSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict.
func (o FunctionConfigurationSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

func (o FunctionConfigurationSyncConfigPtrOutput) LambdaConflictHandlerConfig() FunctionConfigurationLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *FunctionConfigurationSyncConfig) *FunctionConfigurationLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(FunctionConfigurationLambdaConflictHandlerConfigPtrOutput)
}

type GraphQlApiAdditionalAuthenticationProvider struct {
	AuthenticationType     string                            `pulumi:"authenticationType"`
	LambdaAuthorizerConfig *GraphQlApiLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	OpenIdConnectConfig    *GraphQlApiOpenIdConnectConfig    `pulumi:"openIdConnectConfig"`
	UserPoolConfig         *GraphQlApiCognitoUserPoolConfig  `pulumi:"userPoolConfig"`
}

// GraphQlApiAdditionalAuthenticationProviderInput is an input type that accepts GraphQlApiAdditionalAuthenticationProviderArgs and GraphQlApiAdditionalAuthenticationProviderOutput values.
// You can construct a concrete instance of `GraphQlApiAdditionalAuthenticationProviderInput` via:
//
//	GraphQlApiAdditionalAuthenticationProviderArgs{...}
type GraphQlApiAdditionalAuthenticationProviderInput interface {
	pulumi.Input

	ToGraphQlApiAdditionalAuthenticationProviderOutput() GraphQlApiAdditionalAuthenticationProviderOutput
	ToGraphQlApiAdditionalAuthenticationProviderOutputWithContext(context.Context) GraphQlApiAdditionalAuthenticationProviderOutput
}

type GraphQlApiAdditionalAuthenticationProviderArgs struct {
	AuthenticationType     pulumi.StringInput                       `pulumi:"authenticationType"`
	LambdaAuthorizerConfig GraphQlApiLambdaAuthorizerConfigPtrInput `pulumi:"lambdaAuthorizerConfig"`
	OpenIdConnectConfig    GraphQlApiOpenIdConnectConfigPtrInput    `pulumi:"openIdConnectConfig"`
	UserPoolConfig         GraphQlApiCognitoUserPoolConfigPtrInput  `pulumi:"userPoolConfig"`
}

func (GraphQlApiAdditionalAuthenticationProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQlApiAdditionalAuthenticationProviderArgs) ToGraphQlApiAdditionalAuthenticationProviderOutput() GraphQlApiAdditionalAuthenticationProviderOutput {
	return i.ToGraphQlApiAdditionalAuthenticationProviderOutputWithContext(context.Background())
}

func (i GraphQlApiAdditionalAuthenticationProviderArgs) ToGraphQlApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQlApiAdditionalAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiAdditionalAuthenticationProviderOutput)
}

// GraphQlApiAdditionalAuthenticationProviderArrayInput is an input type that accepts GraphQlApiAdditionalAuthenticationProviderArray and GraphQlApiAdditionalAuthenticationProviderArrayOutput values.
// You can construct a concrete instance of `GraphQlApiAdditionalAuthenticationProviderArrayInput` via:
//
//	GraphQlApiAdditionalAuthenticationProviderArray{ GraphQlApiAdditionalAuthenticationProviderArgs{...} }
type GraphQlApiAdditionalAuthenticationProviderArrayInput interface {
	pulumi.Input

	ToGraphQlApiAdditionalAuthenticationProviderArrayOutput() GraphQlApiAdditionalAuthenticationProviderArrayOutput
	ToGraphQlApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Context) GraphQlApiAdditionalAuthenticationProviderArrayOutput
}

type GraphQlApiAdditionalAuthenticationProviderArray []GraphQlApiAdditionalAuthenticationProviderInput

func (GraphQlApiAdditionalAuthenticationProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQlApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQlApiAdditionalAuthenticationProviderArray) ToGraphQlApiAdditionalAuthenticationProviderArrayOutput() GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return i.ToGraphQlApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Background())
}

func (i GraphQlApiAdditionalAuthenticationProviderArray) ToGraphQlApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiAdditionalAuthenticationProviderArrayOutput)
}

type GraphQlApiAdditionalAuthenticationProviderOutput struct{ *pulumi.OutputState }

func (GraphQlApiAdditionalAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) ToGraphQlApiAdditionalAuthenticationProviderOutput() GraphQlApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) ToGraphQlApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQlApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiAdditionalAuthenticationProvider) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) LambdaAuthorizerConfig() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v GraphQlApiAdditionalAuthenticationProvider) *GraphQlApiLambdaAuthorizerConfig {
		return v.LambdaAuthorizerConfig
	}).(GraphQlApiLambdaAuthorizerConfigPtrOutput)
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) OpenIdConnectConfig() GraphQlApiOpenIdConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQlApiAdditionalAuthenticationProvider) *GraphQlApiOpenIdConnectConfig {
		return v.OpenIdConnectConfig
	}).(GraphQlApiOpenIdConnectConfigPtrOutput)
}

func (o GraphQlApiAdditionalAuthenticationProviderOutput) UserPoolConfig() GraphQlApiCognitoUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQlApiAdditionalAuthenticationProvider) *GraphQlApiCognitoUserPoolConfig {
		return v.UserPoolConfig
	}).(GraphQlApiCognitoUserPoolConfigPtrOutput)
}

type GraphQlApiAdditionalAuthenticationProviderArrayOutput struct{ *pulumi.OutputState }

func (GraphQlApiAdditionalAuthenticationProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQlApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQlApiAdditionalAuthenticationProviderArrayOutput) ToGraphQlApiAdditionalAuthenticationProviderArrayOutput() GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQlApiAdditionalAuthenticationProviderArrayOutput) ToGraphQlApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQlApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQlApiAdditionalAuthenticationProviderArrayOutput) Index(i pulumi.IntInput) GraphQlApiAdditionalAuthenticationProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQlApiAdditionalAuthenticationProvider {
		return vs[0].([]GraphQlApiAdditionalAuthenticationProvider)[vs[1].(int)]
	}).(GraphQlApiAdditionalAuthenticationProviderOutput)
}

type GraphQlApiCognitoUserPoolConfig struct {
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	AwsRegion        *string `pulumi:"awsRegion"`
	UserPoolId       *string `pulumi:"userPoolId"`
}

// GraphQlApiCognitoUserPoolConfigInput is an input type that accepts GraphQlApiCognitoUserPoolConfigArgs and GraphQlApiCognitoUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQlApiCognitoUserPoolConfigInput` via:
//
//	GraphQlApiCognitoUserPoolConfigArgs{...}
type GraphQlApiCognitoUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQlApiCognitoUserPoolConfigOutput() GraphQlApiCognitoUserPoolConfigOutput
	ToGraphQlApiCognitoUserPoolConfigOutputWithContext(context.Context) GraphQlApiCognitoUserPoolConfigOutput
}

type GraphQlApiCognitoUserPoolConfigArgs struct {
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	AwsRegion        pulumi.StringPtrInput `pulumi:"awsRegion"`
	UserPoolId       pulumi.StringPtrInput `pulumi:"userPoolId"`
}

func (GraphQlApiCognitoUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiCognitoUserPoolConfig)(nil)).Elem()
}

func (i GraphQlApiCognitoUserPoolConfigArgs) ToGraphQlApiCognitoUserPoolConfigOutput() GraphQlApiCognitoUserPoolConfigOutput {
	return i.ToGraphQlApiCognitoUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQlApiCognitoUserPoolConfigArgs) ToGraphQlApiCognitoUserPoolConfigOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiCognitoUserPoolConfigOutput)
}

func (i GraphQlApiCognitoUserPoolConfigArgs) ToGraphQlApiCognitoUserPoolConfigPtrOutput() GraphQlApiCognitoUserPoolConfigPtrOutput {
	return i.ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiCognitoUserPoolConfigArgs) ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiCognitoUserPoolConfigOutput).ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQlApiCognitoUserPoolConfigPtrInput is an input type that accepts GraphQlApiCognitoUserPoolConfigArgs, GraphQlApiCognitoUserPoolConfigPtr and GraphQlApiCognitoUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiCognitoUserPoolConfigPtrInput` via:
//
//	        GraphQlApiCognitoUserPoolConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiCognitoUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiCognitoUserPoolConfigPtrOutput() GraphQlApiCognitoUserPoolConfigPtrOutput
	ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(context.Context) GraphQlApiCognitoUserPoolConfigPtrOutput
}

type graphQlApiCognitoUserPoolConfigPtrType GraphQlApiCognitoUserPoolConfigArgs

func GraphQlApiCognitoUserPoolConfigPtr(v *GraphQlApiCognitoUserPoolConfigArgs) GraphQlApiCognitoUserPoolConfigPtrInput {
	return (*graphQlApiCognitoUserPoolConfigPtrType)(v)
}

func (*graphQlApiCognitoUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiCognitoUserPoolConfig)(nil)).Elem()
}

func (i *graphQlApiCognitoUserPoolConfigPtrType) ToGraphQlApiCognitoUserPoolConfigPtrOutput() GraphQlApiCognitoUserPoolConfigPtrOutput {
	return i.ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiCognitoUserPoolConfigPtrType) ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiCognitoUserPoolConfigPtrOutput)
}

type GraphQlApiCognitoUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiCognitoUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiCognitoUserPoolConfig)(nil)).Elem()
}

func (o GraphQlApiCognitoUserPoolConfigOutput) ToGraphQlApiCognitoUserPoolConfigOutput() GraphQlApiCognitoUserPoolConfigOutput {
	return o
}

func (o GraphQlApiCognitoUserPoolConfigOutput) ToGraphQlApiCognitoUserPoolConfigOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigOutput {
	return o
}

func (o GraphQlApiCognitoUserPoolConfigOutput) ToGraphQlApiCognitoUserPoolConfigPtrOutput() GraphQlApiCognitoUserPoolConfigPtrOutput {
	return o.ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiCognitoUserPoolConfigOutput) ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiCognitoUserPoolConfig) *GraphQlApiCognitoUserPoolConfig {
		return &v
	}).(GraphQlApiCognitoUserPoolConfigPtrOutput)
}

func (o GraphQlApiCognitoUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiCognitoUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiCognitoUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiCognitoUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiCognitoUserPoolConfigOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiCognitoUserPoolConfig) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type GraphQlApiCognitoUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiCognitoUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiCognitoUserPoolConfig)(nil)).Elem()
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) ToGraphQlApiCognitoUserPoolConfigPtrOutput() GraphQlApiCognitoUserPoolConfigPtrOutput {
	return o
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) ToGraphQlApiCognitoUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiCognitoUserPoolConfigPtrOutput {
	return o
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) Elem() GraphQlApiCognitoUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQlApiCognitoUserPoolConfig) GraphQlApiCognitoUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiCognitoUserPoolConfig
		return ret
	}).(GraphQlApiCognitoUserPoolConfigOutput)
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiCognitoUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiCognitoUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiCognitoUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiCognitoUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type GraphQlApiEnhancedMetricsConfig struct {
	DataSourceLevelMetricsBehavior string `pulumi:"dataSourceLevelMetricsBehavior"`
	OperationLevelMetricsConfig    string `pulumi:"operationLevelMetricsConfig"`
	ResolverLevelMetricsBehavior   string `pulumi:"resolverLevelMetricsBehavior"`
}

// GraphQlApiEnhancedMetricsConfigInput is an input type that accepts GraphQlApiEnhancedMetricsConfigArgs and GraphQlApiEnhancedMetricsConfigOutput values.
// You can construct a concrete instance of `GraphQlApiEnhancedMetricsConfigInput` via:
//
//	GraphQlApiEnhancedMetricsConfigArgs{...}
type GraphQlApiEnhancedMetricsConfigInput interface {
	pulumi.Input

	ToGraphQlApiEnhancedMetricsConfigOutput() GraphQlApiEnhancedMetricsConfigOutput
	ToGraphQlApiEnhancedMetricsConfigOutputWithContext(context.Context) GraphQlApiEnhancedMetricsConfigOutput
}

type GraphQlApiEnhancedMetricsConfigArgs struct {
	DataSourceLevelMetricsBehavior pulumi.StringInput `pulumi:"dataSourceLevelMetricsBehavior"`
	OperationLevelMetricsConfig    pulumi.StringInput `pulumi:"operationLevelMetricsConfig"`
	ResolverLevelMetricsBehavior   pulumi.StringInput `pulumi:"resolverLevelMetricsBehavior"`
}

func (GraphQlApiEnhancedMetricsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiEnhancedMetricsConfig)(nil)).Elem()
}

func (i GraphQlApiEnhancedMetricsConfigArgs) ToGraphQlApiEnhancedMetricsConfigOutput() GraphQlApiEnhancedMetricsConfigOutput {
	return i.ToGraphQlApiEnhancedMetricsConfigOutputWithContext(context.Background())
}

func (i GraphQlApiEnhancedMetricsConfigArgs) ToGraphQlApiEnhancedMetricsConfigOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiEnhancedMetricsConfigOutput)
}

func (i GraphQlApiEnhancedMetricsConfigArgs) ToGraphQlApiEnhancedMetricsConfigPtrOutput() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return i.ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiEnhancedMetricsConfigArgs) ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiEnhancedMetricsConfigOutput).ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(ctx)
}

// GraphQlApiEnhancedMetricsConfigPtrInput is an input type that accepts GraphQlApiEnhancedMetricsConfigArgs, GraphQlApiEnhancedMetricsConfigPtr and GraphQlApiEnhancedMetricsConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiEnhancedMetricsConfigPtrInput` via:
//
//	        GraphQlApiEnhancedMetricsConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiEnhancedMetricsConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiEnhancedMetricsConfigPtrOutput() GraphQlApiEnhancedMetricsConfigPtrOutput
	ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(context.Context) GraphQlApiEnhancedMetricsConfigPtrOutput
}

type graphQlApiEnhancedMetricsConfigPtrType GraphQlApiEnhancedMetricsConfigArgs

func GraphQlApiEnhancedMetricsConfigPtr(v *GraphQlApiEnhancedMetricsConfigArgs) GraphQlApiEnhancedMetricsConfigPtrInput {
	return (*graphQlApiEnhancedMetricsConfigPtrType)(v)
}

func (*graphQlApiEnhancedMetricsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiEnhancedMetricsConfig)(nil)).Elem()
}

func (i *graphQlApiEnhancedMetricsConfigPtrType) ToGraphQlApiEnhancedMetricsConfigPtrOutput() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return i.ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiEnhancedMetricsConfigPtrType) ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiEnhancedMetricsConfigPtrOutput)
}

type GraphQlApiEnhancedMetricsConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiEnhancedMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiEnhancedMetricsConfig)(nil)).Elem()
}

func (o GraphQlApiEnhancedMetricsConfigOutput) ToGraphQlApiEnhancedMetricsConfigOutput() GraphQlApiEnhancedMetricsConfigOutput {
	return o
}

func (o GraphQlApiEnhancedMetricsConfigOutput) ToGraphQlApiEnhancedMetricsConfigOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigOutput {
	return o
}

func (o GraphQlApiEnhancedMetricsConfigOutput) ToGraphQlApiEnhancedMetricsConfigPtrOutput() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o.ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiEnhancedMetricsConfigOutput) ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiEnhancedMetricsConfig) *GraphQlApiEnhancedMetricsConfig {
		return &v
	}).(GraphQlApiEnhancedMetricsConfigPtrOutput)
}

func (o GraphQlApiEnhancedMetricsConfigOutput) DataSourceLevelMetricsBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiEnhancedMetricsConfig) string { return v.DataSourceLevelMetricsBehavior }).(pulumi.StringOutput)
}

func (o GraphQlApiEnhancedMetricsConfigOutput) OperationLevelMetricsConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiEnhancedMetricsConfig) string { return v.OperationLevelMetricsConfig }).(pulumi.StringOutput)
}

func (o GraphQlApiEnhancedMetricsConfigOutput) ResolverLevelMetricsBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiEnhancedMetricsConfig) string { return v.ResolverLevelMetricsBehavior }).(pulumi.StringOutput)
}

type GraphQlApiEnhancedMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiEnhancedMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiEnhancedMetricsConfig)(nil)).Elem()
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) ToGraphQlApiEnhancedMetricsConfigPtrOutput() GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) ToGraphQlApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQlApiEnhancedMetricsConfigPtrOutput {
	return o
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) Elem() GraphQlApiEnhancedMetricsConfigOutput {
	return o.ApplyT(func(v *GraphQlApiEnhancedMetricsConfig) GraphQlApiEnhancedMetricsConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiEnhancedMetricsConfig
		return ret
	}).(GraphQlApiEnhancedMetricsConfigOutput)
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) DataSourceLevelMetricsBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceLevelMetricsBehavior
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) OperationLevelMetricsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.OperationLevelMetricsConfig
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiEnhancedMetricsConfigPtrOutput) ResolverLevelMetricsBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverLevelMetricsBehavior
	}).(pulumi.StringPtrOutput)
}

type GraphQlApiLambdaAuthorizerConfig struct {
	AuthorizerResultTtlInSeconds *float64 `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerUri                *string  `pulumi:"authorizerUri"`
	IdentityValidationExpression *string  `pulumi:"identityValidationExpression"`
}

// GraphQlApiLambdaAuthorizerConfigInput is an input type that accepts GraphQlApiLambdaAuthorizerConfigArgs and GraphQlApiLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `GraphQlApiLambdaAuthorizerConfigInput` via:
//
//	GraphQlApiLambdaAuthorizerConfigArgs{...}
type GraphQlApiLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToGraphQlApiLambdaAuthorizerConfigOutput() GraphQlApiLambdaAuthorizerConfigOutput
	ToGraphQlApiLambdaAuthorizerConfigOutputWithContext(context.Context) GraphQlApiLambdaAuthorizerConfigOutput
}

type GraphQlApiLambdaAuthorizerConfigArgs struct {
	AuthorizerResultTtlInSeconds pulumi.Float64PtrInput `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerUri                pulumi.StringPtrInput  `pulumi:"authorizerUri"`
	IdentityValidationExpression pulumi.StringPtrInput  `pulumi:"identityValidationExpression"`
}

func (GraphQlApiLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i GraphQlApiLambdaAuthorizerConfigArgs) ToGraphQlApiLambdaAuthorizerConfigOutput() GraphQlApiLambdaAuthorizerConfigOutput {
	return i.ToGraphQlApiLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i GraphQlApiLambdaAuthorizerConfigArgs) ToGraphQlApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLambdaAuthorizerConfigOutput)
}

func (i GraphQlApiLambdaAuthorizerConfigArgs) ToGraphQlApiLambdaAuthorizerConfigPtrOutput() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiLambdaAuthorizerConfigArgs) ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLambdaAuthorizerConfigOutput).ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// GraphQlApiLambdaAuthorizerConfigPtrInput is an input type that accepts GraphQlApiLambdaAuthorizerConfigArgs, GraphQlApiLambdaAuthorizerConfigPtr and GraphQlApiLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiLambdaAuthorizerConfigPtrInput` via:
//
//	        GraphQlApiLambdaAuthorizerConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiLambdaAuthorizerConfigPtrOutput() GraphQlApiLambdaAuthorizerConfigPtrOutput
	ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(context.Context) GraphQlApiLambdaAuthorizerConfigPtrOutput
}

type graphQlApiLambdaAuthorizerConfigPtrType GraphQlApiLambdaAuthorizerConfigArgs

func GraphQlApiLambdaAuthorizerConfigPtr(v *GraphQlApiLambdaAuthorizerConfigArgs) GraphQlApiLambdaAuthorizerConfigPtrInput {
	return (*graphQlApiLambdaAuthorizerConfigPtrType)(v)
}

func (*graphQlApiLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *graphQlApiLambdaAuthorizerConfigPtrType) ToGraphQlApiLambdaAuthorizerConfigPtrOutput() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiLambdaAuthorizerConfigPtrType) ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLambdaAuthorizerConfigPtrOutput)
}

type GraphQlApiLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) ToGraphQlApiLambdaAuthorizerConfigOutput() GraphQlApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) ToGraphQlApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) ToGraphQlApiLambdaAuthorizerConfigPtrOutput() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o.ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiLambdaAuthorizerConfig) *GraphQlApiLambdaAuthorizerConfig {
		return &v
	}).(GraphQlApiLambdaAuthorizerConfigPtrOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GraphQlApiLambdaAuthorizerConfig) *float64 { return v.AuthorizerResultTtlInSeconds }).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiLambdaAuthorizerConfig) *string { return v.AuthorizerUri }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiLambdaAuthorizerConfig) *string { return v.IdentityValidationExpression }).(pulumi.StringPtrOutput)
}

type GraphQlApiLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) ToGraphQlApiLambdaAuthorizerConfigPtrOutput() GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) ToGraphQlApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) Elem() GraphQlApiLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *GraphQlApiLambdaAuthorizerConfig) GraphQlApiLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiLambdaAuthorizerConfig
		return ret
	}).(GraphQlApiLambdaAuthorizerConfigOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GraphQlApiLambdaAuthorizerConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQlApiLogConfig struct {
	CloudWatchLogsRoleArn *string `pulumi:"cloudWatchLogsRoleArn"`
	ExcludeVerboseContent *bool   `pulumi:"excludeVerboseContent"`
	FieldLogLevel         *string `pulumi:"fieldLogLevel"`
}

// GraphQlApiLogConfigInput is an input type that accepts GraphQlApiLogConfigArgs and GraphQlApiLogConfigOutput values.
// You can construct a concrete instance of `GraphQlApiLogConfigInput` via:
//
//	GraphQlApiLogConfigArgs{...}
type GraphQlApiLogConfigInput interface {
	pulumi.Input

	ToGraphQlApiLogConfigOutput() GraphQlApiLogConfigOutput
	ToGraphQlApiLogConfigOutputWithContext(context.Context) GraphQlApiLogConfigOutput
}

type GraphQlApiLogConfigArgs struct {
	CloudWatchLogsRoleArn pulumi.StringPtrInput `pulumi:"cloudWatchLogsRoleArn"`
	ExcludeVerboseContent pulumi.BoolPtrInput   `pulumi:"excludeVerboseContent"`
	FieldLogLevel         pulumi.StringPtrInput `pulumi:"fieldLogLevel"`
}

func (GraphQlApiLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiLogConfig)(nil)).Elem()
}

func (i GraphQlApiLogConfigArgs) ToGraphQlApiLogConfigOutput() GraphQlApiLogConfigOutput {
	return i.ToGraphQlApiLogConfigOutputWithContext(context.Background())
}

func (i GraphQlApiLogConfigArgs) ToGraphQlApiLogConfigOutputWithContext(ctx context.Context) GraphQlApiLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLogConfigOutput)
}

func (i GraphQlApiLogConfigArgs) ToGraphQlApiLogConfigPtrOutput() GraphQlApiLogConfigPtrOutput {
	return i.ToGraphQlApiLogConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiLogConfigArgs) ToGraphQlApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLogConfigOutput).ToGraphQlApiLogConfigPtrOutputWithContext(ctx)
}

// GraphQlApiLogConfigPtrInput is an input type that accepts GraphQlApiLogConfigArgs, GraphQlApiLogConfigPtr and GraphQlApiLogConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiLogConfigPtrInput` via:
//
//	        GraphQlApiLogConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiLogConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiLogConfigPtrOutput() GraphQlApiLogConfigPtrOutput
	ToGraphQlApiLogConfigPtrOutputWithContext(context.Context) GraphQlApiLogConfigPtrOutput
}

type graphQlApiLogConfigPtrType GraphQlApiLogConfigArgs

func GraphQlApiLogConfigPtr(v *GraphQlApiLogConfigArgs) GraphQlApiLogConfigPtrInput {
	return (*graphQlApiLogConfigPtrType)(v)
}

func (*graphQlApiLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiLogConfig)(nil)).Elem()
}

func (i *graphQlApiLogConfigPtrType) ToGraphQlApiLogConfigPtrOutput() GraphQlApiLogConfigPtrOutput {
	return i.ToGraphQlApiLogConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiLogConfigPtrType) ToGraphQlApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiLogConfigPtrOutput)
}

type GraphQlApiLogConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiLogConfig)(nil)).Elem()
}

func (o GraphQlApiLogConfigOutput) ToGraphQlApiLogConfigOutput() GraphQlApiLogConfigOutput {
	return o
}

func (o GraphQlApiLogConfigOutput) ToGraphQlApiLogConfigOutputWithContext(ctx context.Context) GraphQlApiLogConfigOutput {
	return o
}

func (o GraphQlApiLogConfigOutput) ToGraphQlApiLogConfigPtrOutput() GraphQlApiLogConfigPtrOutput {
	return o.ToGraphQlApiLogConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiLogConfigOutput) ToGraphQlApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiLogConfig) *GraphQlApiLogConfig {
		return &v
	}).(GraphQlApiLogConfigPtrOutput)
}

func (o GraphQlApiLogConfigOutput) CloudWatchLogsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiLogConfig) *string { return v.CloudWatchLogsRoleArn }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiLogConfigOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GraphQlApiLogConfig) *bool { return v.ExcludeVerboseContent }).(pulumi.BoolPtrOutput)
}

func (o GraphQlApiLogConfigOutput) FieldLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiLogConfig) *string { return v.FieldLogLevel }).(pulumi.StringPtrOutput)
}

type GraphQlApiLogConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiLogConfig)(nil)).Elem()
}

func (o GraphQlApiLogConfigPtrOutput) ToGraphQlApiLogConfigPtrOutput() GraphQlApiLogConfigPtrOutput {
	return o
}

func (o GraphQlApiLogConfigPtrOutput) ToGraphQlApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQlApiLogConfigPtrOutput {
	return o
}

func (o GraphQlApiLogConfigPtrOutput) Elem() GraphQlApiLogConfigOutput {
	return o.ApplyT(func(v *GraphQlApiLogConfig) GraphQlApiLogConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiLogConfig
		return ret
	}).(GraphQlApiLogConfigOutput)
}

func (o GraphQlApiLogConfigPtrOutput) CloudWatchLogsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogsRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiLogConfigPtrOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GraphQlApiLogConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeVerboseContent
	}).(pulumi.BoolPtrOutput)
}

func (o GraphQlApiLogConfigPtrOutput) FieldLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return v.FieldLogLevel
	}).(pulumi.StringPtrOutput)
}

type GraphQlApiOpenIdConnectConfig struct {
	AuthTtl  *float64 `pulumi:"authTtl"`
	ClientId *string  `pulumi:"clientId"`
	IatTtl   *float64 `pulumi:"iatTtl"`
	Issuer   *string  `pulumi:"issuer"`
}

// GraphQlApiOpenIdConnectConfigInput is an input type that accepts GraphQlApiOpenIdConnectConfigArgs and GraphQlApiOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `GraphQlApiOpenIdConnectConfigInput` via:
//
//	GraphQlApiOpenIdConnectConfigArgs{...}
type GraphQlApiOpenIdConnectConfigInput interface {
	pulumi.Input

	ToGraphQlApiOpenIdConnectConfigOutput() GraphQlApiOpenIdConnectConfigOutput
	ToGraphQlApiOpenIdConnectConfigOutputWithContext(context.Context) GraphQlApiOpenIdConnectConfigOutput
}

type GraphQlApiOpenIdConnectConfigArgs struct {
	AuthTtl  pulumi.Float64PtrInput `pulumi:"authTtl"`
	ClientId pulumi.StringPtrInput  `pulumi:"clientId"`
	IatTtl   pulumi.Float64PtrInput `pulumi:"iatTtl"`
	Issuer   pulumi.StringPtrInput  `pulumi:"issuer"`
}

func (GraphQlApiOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiOpenIdConnectConfig)(nil)).Elem()
}

func (i GraphQlApiOpenIdConnectConfigArgs) ToGraphQlApiOpenIdConnectConfigOutput() GraphQlApiOpenIdConnectConfigOutput {
	return i.ToGraphQlApiOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i GraphQlApiOpenIdConnectConfigArgs) ToGraphQlApiOpenIdConnectConfigOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiOpenIdConnectConfigOutput)
}

func (i GraphQlApiOpenIdConnectConfigArgs) ToGraphQlApiOpenIdConnectConfigPtrOutput() GraphQlApiOpenIdConnectConfigPtrOutput {
	return i.ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiOpenIdConnectConfigArgs) ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiOpenIdConnectConfigOutput).ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(ctx)
}

// GraphQlApiOpenIdConnectConfigPtrInput is an input type that accepts GraphQlApiOpenIdConnectConfigArgs, GraphQlApiOpenIdConnectConfigPtr and GraphQlApiOpenIdConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiOpenIdConnectConfigPtrInput` via:
//
//	        GraphQlApiOpenIdConnectConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiOpenIdConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiOpenIdConnectConfigPtrOutput() GraphQlApiOpenIdConnectConfigPtrOutput
	ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(context.Context) GraphQlApiOpenIdConnectConfigPtrOutput
}

type graphQlApiOpenIdConnectConfigPtrType GraphQlApiOpenIdConnectConfigArgs

func GraphQlApiOpenIdConnectConfigPtr(v *GraphQlApiOpenIdConnectConfigArgs) GraphQlApiOpenIdConnectConfigPtrInput {
	return (*graphQlApiOpenIdConnectConfigPtrType)(v)
}

func (*graphQlApiOpenIdConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiOpenIdConnectConfig)(nil)).Elem()
}

func (i *graphQlApiOpenIdConnectConfigPtrType) ToGraphQlApiOpenIdConnectConfigPtrOutput() GraphQlApiOpenIdConnectConfigPtrOutput {
	return i.ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiOpenIdConnectConfigPtrType) ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiOpenIdConnectConfigPtrOutput)
}

type GraphQlApiOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiOpenIdConnectConfig)(nil)).Elem()
}

func (o GraphQlApiOpenIdConnectConfigOutput) ToGraphQlApiOpenIdConnectConfigOutput() GraphQlApiOpenIdConnectConfigOutput {
	return o
}

func (o GraphQlApiOpenIdConnectConfigOutput) ToGraphQlApiOpenIdConnectConfigOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigOutput {
	return o
}

func (o GraphQlApiOpenIdConnectConfigOutput) ToGraphQlApiOpenIdConnectConfigPtrOutput() GraphQlApiOpenIdConnectConfigPtrOutput {
	return o.ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiOpenIdConnectConfigOutput) ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiOpenIdConnectConfig) *GraphQlApiOpenIdConnectConfig {
		return &v
	}).(GraphQlApiOpenIdConnectConfigPtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigOutput) AuthTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GraphQlApiOpenIdConnectConfig) *float64 { return v.AuthTtl }).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiOpenIdConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigOutput) IatTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GraphQlApiOpenIdConnectConfig) *float64 { return v.IatTtl }).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiOpenIdConnectConfig) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type GraphQlApiOpenIdConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiOpenIdConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiOpenIdConnectConfig)(nil)).Elem()
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) ToGraphQlApiOpenIdConnectConfigPtrOutput() GraphQlApiOpenIdConnectConfigPtrOutput {
	return o
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) ToGraphQlApiOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) GraphQlApiOpenIdConnectConfigPtrOutput {
	return o
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) Elem() GraphQlApiOpenIdConnectConfigOutput {
	return o.ApplyT(func(v *GraphQlApiOpenIdConnectConfig) GraphQlApiOpenIdConnectConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiOpenIdConnectConfig
		return ret
	}).(GraphQlApiOpenIdConnectConfigOutput)
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) AuthTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GraphQlApiOpenIdConnectConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) IatTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GraphQlApiOpenIdConnectConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.Float64PtrOutput)
}

func (o GraphQlApiOpenIdConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

type GraphQlApiTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GraphQlApiTagInput is an input type that accepts GraphQlApiTagArgs and GraphQlApiTagOutput values.
// You can construct a concrete instance of `GraphQlApiTagInput` via:
//
//	GraphQlApiTagArgs{...}
type GraphQlApiTagInput interface {
	pulumi.Input

	ToGraphQlApiTagOutput() GraphQlApiTagOutput
	ToGraphQlApiTagOutputWithContext(context.Context) GraphQlApiTagOutput
}

type GraphQlApiTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GraphQlApiTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiTag)(nil)).Elem()
}

func (i GraphQlApiTagArgs) ToGraphQlApiTagOutput() GraphQlApiTagOutput {
	return i.ToGraphQlApiTagOutputWithContext(context.Background())
}

func (i GraphQlApiTagArgs) ToGraphQlApiTagOutputWithContext(ctx context.Context) GraphQlApiTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiTagOutput)
}

// GraphQlApiTagArrayInput is an input type that accepts GraphQlApiTagArray and GraphQlApiTagArrayOutput values.
// You can construct a concrete instance of `GraphQlApiTagArrayInput` via:
//
//	GraphQlApiTagArray{ GraphQlApiTagArgs{...} }
type GraphQlApiTagArrayInput interface {
	pulumi.Input

	ToGraphQlApiTagArrayOutput() GraphQlApiTagArrayOutput
	ToGraphQlApiTagArrayOutputWithContext(context.Context) GraphQlApiTagArrayOutput
}

type GraphQlApiTagArray []GraphQlApiTagInput

func (GraphQlApiTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQlApiTag)(nil)).Elem()
}

func (i GraphQlApiTagArray) ToGraphQlApiTagArrayOutput() GraphQlApiTagArrayOutput {
	return i.ToGraphQlApiTagArrayOutputWithContext(context.Background())
}

func (i GraphQlApiTagArray) ToGraphQlApiTagArrayOutputWithContext(ctx context.Context) GraphQlApiTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiTagArrayOutput)
}

type GraphQlApiTagOutput struct{ *pulumi.OutputState }

func (GraphQlApiTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiTag)(nil)).Elem()
}

func (o GraphQlApiTagOutput) ToGraphQlApiTagOutput() GraphQlApiTagOutput {
	return o
}

func (o GraphQlApiTagOutput) ToGraphQlApiTagOutputWithContext(ctx context.Context) GraphQlApiTagOutput {
	return o
}

func (o GraphQlApiTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GraphQlApiTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQlApiTag) string { return v.Value }).(pulumi.StringOutput)
}

type GraphQlApiTagArrayOutput struct{ *pulumi.OutputState }

func (GraphQlApiTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQlApiTag)(nil)).Elem()
}

func (o GraphQlApiTagArrayOutput) ToGraphQlApiTagArrayOutput() GraphQlApiTagArrayOutput {
	return o
}

func (o GraphQlApiTagArrayOutput) ToGraphQlApiTagArrayOutputWithContext(ctx context.Context) GraphQlApiTagArrayOutput {
	return o
}

func (o GraphQlApiTagArrayOutput) Index(i pulumi.IntInput) GraphQlApiTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQlApiTag {
		return vs[0].([]GraphQlApiTag)[vs[1].(int)]
	}).(GraphQlApiTagOutput)
}

type GraphQlApiUserPoolConfig struct {
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	AwsRegion        *string `pulumi:"awsRegion"`
	DefaultAction    *string `pulumi:"defaultAction"`
	UserPoolId       *string `pulumi:"userPoolId"`
}

// GraphQlApiUserPoolConfigInput is an input type that accepts GraphQlApiUserPoolConfigArgs and GraphQlApiUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQlApiUserPoolConfigInput` via:
//
//	GraphQlApiUserPoolConfigArgs{...}
type GraphQlApiUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQlApiUserPoolConfigOutput() GraphQlApiUserPoolConfigOutput
	ToGraphQlApiUserPoolConfigOutputWithContext(context.Context) GraphQlApiUserPoolConfigOutput
}

type GraphQlApiUserPoolConfigArgs struct {
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	AwsRegion        pulumi.StringPtrInput `pulumi:"awsRegion"`
	DefaultAction    pulumi.StringPtrInput `pulumi:"defaultAction"`
	UserPoolId       pulumi.StringPtrInput `pulumi:"userPoolId"`
}

func (GraphQlApiUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiUserPoolConfig)(nil)).Elem()
}

func (i GraphQlApiUserPoolConfigArgs) ToGraphQlApiUserPoolConfigOutput() GraphQlApiUserPoolConfigOutput {
	return i.ToGraphQlApiUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQlApiUserPoolConfigArgs) ToGraphQlApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiUserPoolConfigOutput)
}

func (i GraphQlApiUserPoolConfigArgs) ToGraphQlApiUserPoolConfigPtrOutput() GraphQlApiUserPoolConfigPtrOutput {
	return i.ToGraphQlApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQlApiUserPoolConfigArgs) ToGraphQlApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiUserPoolConfigOutput).ToGraphQlApiUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQlApiUserPoolConfigPtrInput is an input type that accepts GraphQlApiUserPoolConfigArgs, GraphQlApiUserPoolConfigPtr and GraphQlApiUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQlApiUserPoolConfigPtrInput` via:
//
//	        GraphQlApiUserPoolConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQlApiUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQlApiUserPoolConfigPtrOutput() GraphQlApiUserPoolConfigPtrOutput
	ToGraphQlApiUserPoolConfigPtrOutputWithContext(context.Context) GraphQlApiUserPoolConfigPtrOutput
}

type graphQlApiUserPoolConfigPtrType GraphQlApiUserPoolConfigArgs

func GraphQlApiUserPoolConfigPtr(v *GraphQlApiUserPoolConfigArgs) GraphQlApiUserPoolConfigPtrInput {
	return (*graphQlApiUserPoolConfigPtrType)(v)
}

func (*graphQlApiUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiUserPoolConfig)(nil)).Elem()
}

func (i *graphQlApiUserPoolConfigPtrType) ToGraphQlApiUserPoolConfigPtrOutput() GraphQlApiUserPoolConfigPtrOutput {
	return i.ToGraphQlApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQlApiUserPoolConfigPtrType) ToGraphQlApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQlApiUserPoolConfigPtrOutput)
}

type GraphQlApiUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQlApiUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQlApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQlApiUserPoolConfigOutput) ToGraphQlApiUserPoolConfigOutput() GraphQlApiUserPoolConfigOutput {
	return o
}

func (o GraphQlApiUserPoolConfigOutput) ToGraphQlApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigOutput {
	return o
}

func (o GraphQlApiUserPoolConfigOutput) ToGraphQlApiUserPoolConfigPtrOutput() GraphQlApiUserPoolConfigPtrOutput {
	return o.ToGraphQlApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQlApiUserPoolConfigOutput) ToGraphQlApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQlApiUserPoolConfig) *GraphQlApiUserPoolConfig {
		return &v
	}).(GraphQlApiUserPoolConfigPtrOutput)
}

func (o GraphQlApiUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiUserPoolConfig) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQlApiUserPoolConfig) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type GraphQlApiUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQlApiUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQlApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQlApiUserPoolConfigPtrOutput) ToGraphQlApiUserPoolConfigPtrOutput() GraphQlApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQlApiUserPoolConfigPtrOutput) ToGraphQlApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQlApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQlApiUserPoolConfigPtrOutput) Elem() GraphQlApiUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQlApiUserPoolConfig) GraphQlApiUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQlApiUserPoolConfig
		return ret
	}).(GraphQlApiUserPoolConfigOutput)
}

func (o GraphQlApiUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

func (o GraphQlApiUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQlApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type ResolverAppSyncRuntime struct {
	// The ``name`` of the runtime to use. Currently, the only allowed value is ``APPSYNC_JS``.
	Name string `pulumi:"name"`
	// The ``version`` of the runtime to use. Currently, the only allowed version is ``1.0.0``.
	RuntimeVersion string `pulumi:"runtimeVersion"`
}

// ResolverAppSyncRuntimeInput is an input type that accepts ResolverAppSyncRuntimeArgs and ResolverAppSyncRuntimeOutput values.
// You can construct a concrete instance of `ResolverAppSyncRuntimeInput` via:
//
//	ResolverAppSyncRuntimeArgs{...}
type ResolverAppSyncRuntimeInput interface {
	pulumi.Input

	ToResolverAppSyncRuntimeOutput() ResolverAppSyncRuntimeOutput
	ToResolverAppSyncRuntimeOutputWithContext(context.Context) ResolverAppSyncRuntimeOutput
}

// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type ResolverAppSyncRuntimeArgs struct {
	// The ``name`` of the runtime to use. Currently, the only allowed value is ``APPSYNC_JS``.
	Name pulumi.StringInput `pulumi:"name"`
	// The ``version`` of the runtime to use. Currently, the only allowed version is ``1.0.0``.
	RuntimeVersion pulumi.StringInput `pulumi:"runtimeVersion"`
}

func (ResolverAppSyncRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverAppSyncRuntime)(nil)).Elem()
}

func (i ResolverAppSyncRuntimeArgs) ToResolverAppSyncRuntimeOutput() ResolverAppSyncRuntimeOutput {
	return i.ToResolverAppSyncRuntimeOutputWithContext(context.Background())
}

func (i ResolverAppSyncRuntimeArgs) ToResolverAppSyncRuntimeOutputWithContext(ctx context.Context) ResolverAppSyncRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverAppSyncRuntimeOutput)
}

func (i ResolverAppSyncRuntimeArgs) ToResolverAppSyncRuntimePtrOutput() ResolverAppSyncRuntimePtrOutput {
	return i.ToResolverAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (i ResolverAppSyncRuntimeArgs) ToResolverAppSyncRuntimePtrOutputWithContext(ctx context.Context) ResolverAppSyncRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverAppSyncRuntimeOutput).ToResolverAppSyncRuntimePtrOutputWithContext(ctx)
}

// ResolverAppSyncRuntimePtrInput is an input type that accepts ResolverAppSyncRuntimeArgs, ResolverAppSyncRuntimePtr and ResolverAppSyncRuntimePtrOutput values.
// You can construct a concrete instance of `ResolverAppSyncRuntimePtrInput` via:
//
//	        ResolverAppSyncRuntimeArgs{...}
//
//	or:
//
//	        nil
type ResolverAppSyncRuntimePtrInput interface {
	pulumi.Input

	ToResolverAppSyncRuntimePtrOutput() ResolverAppSyncRuntimePtrOutput
	ToResolverAppSyncRuntimePtrOutputWithContext(context.Context) ResolverAppSyncRuntimePtrOutput
}

type resolverAppSyncRuntimePtrType ResolverAppSyncRuntimeArgs

func ResolverAppSyncRuntimePtr(v *ResolverAppSyncRuntimeArgs) ResolverAppSyncRuntimePtrInput {
	return (*resolverAppSyncRuntimePtrType)(v)
}

func (*resolverAppSyncRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverAppSyncRuntime)(nil)).Elem()
}

func (i *resolverAppSyncRuntimePtrType) ToResolverAppSyncRuntimePtrOutput() ResolverAppSyncRuntimePtrOutput {
	return i.ToResolverAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (i *resolverAppSyncRuntimePtrType) ToResolverAppSyncRuntimePtrOutputWithContext(ctx context.Context) ResolverAppSyncRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverAppSyncRuntimePtrOutput)
}

// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type ResolverAppSyncRuntimeOutput struct{ *pulumi.OutputState }

func (ResolverAppSyncRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverAppSyncRuntime)(nil)).Elem()
}

func (o ResolverAppSyncRuntimeOutput) ToResolverAppSyncRuntimeOutput() ResolverAppSyncRuntimeOutput {
	return o
}

func (o ResolverAppSyncRuntimeOutput) ToResolverAppSyncRuntimeOutputWithContext(ctx context.Context) ResolverAppSyncRuntimeOutput {
	return o
}

func (o ResolverAppSyncRuntimeOutput) ToResolverAppSyncRuntimePtrOutput() ResolverAppSyncRuntimePtrOutput {
	return o.ToResolverAppSyncRuntimePtrOutputWithContext(context.Background())
}

func (o ResolverAppSyncRuntimeOutput) ToResolverAppSyncRuntimePtrOutputWithContext(ctx context.Context) ResolverAppSyncRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverAppSyncRuntime) *ResolverAppSyncRuntime {
		return &v
	}).(ResolverAppSyncRuntimePtrOutput)
}

// The “name“ of the runtime to use. Currently, the only allowed value is “APPSYNC_JS“.
func (o ResolverAppSyncRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverAppSyncRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// The “version“ of the runtime to use. Currently, the only allowed version is “1.0.0“.
func (o ResolverAppSyncRuntimeOutput) RuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverAppSyncRuntime) string { return v.RuntimeVersion }).(pulumi.StringOutput)
}

type ResolverAppSyncRuntimePtrOutput struct{ *pulumi.OutputState }

func (ResolverAppSyncRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverAppSyncRuntime)(nil)).Elem()
}

func (o ResolverAppSyncRuntimePtrOutput) ToResolverAppSyncRuntimePtrOutput() ResolverAppSyncRuntimePtrOutput {
	return o
}

func (o ResolverAppSyncRuntimePtrOutput) ToResolverAppSyncRuntimePtrOutputWithContext(ctx context.Context) ResolverAppSyncRuntimePtrOutput {
	return o
}

func (o ResolverAppSyncRuntimePtrOutput) Elem() ResolverAppSyncRuntimeOutput {
	return o.ApplyT(func(v *ResolverAppSyncRuntime) ResolverAppSyncRuntime {
		if v != nil {
			return *v
		}
		var ret ResolverAppSyncRuntime
		return ret
	}).(ResolverAppSyncRuntimeOutput)
}

// The “name“ of the runtime to use. Currently, the only allowed value is “APPSYNC_JS“.
func (o ResolverAppSyncRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverAppSyncRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The “version“ of the runtime to use. Currently, the only allowed version is “1.0.0“.
func (o ResolverAppSyncRuntimePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverAppSyncRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The caching configuration for a resolver that has caching activated.
type ResolverCachingConfig struct {
	// The caching keys for a resolver that has caching activated.
	//  Valid values are entries from the ``$context.arguments``, ``$context.source``, and ``$context.identity`` maps.
	CachingKeys []string `pulumi:"cachingKeys"`
	// The TTL in seconds for a resolver that has caching activated.
	//  Valid values are 1–3,600 seconds.
	Ttl float64 `pulumi:"ttl"`
}

// ResolverCachingConfigInput is an input type that accepts ResolverCachingConfigArgs and ResolverCachingConfigOutput values.
// You can construct a concrete instance of `ResolverCachingConfigInput` via:
//
//	ResolverCachingConfigArgs{...}
type ResolverCachingConfigInput interface {
	pulumi.Input

	ToResolverCachingConfigOutput() ResolverCachingConfigOutput
	ToResolverCachingConfigOutputWithContext(context.Context) ResolverCachingConfigOutput
}

// The caching configuration for a resolver that has caching activated.
type ResolverCachingConfigArgs struct {
	// The caching keys for a resolver that has caching activated.
	//  Valid values are entries from the ``$context.arguments``, ``$context.source``, and ``$context.identity`` maps.
	CachingKeys pulumi.StringArrayInput `pulumi:"cachingKeys"`
	// The TTL in seconds for a resolver that has caching activated.
	//  Valid values are 1–3,600 seconds.
	Ttl pulumi.Float64Input `pulumi:"ttl"`
}

func (ResolverCachingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return i.ToResolverCachingConfigOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput)
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput).ToResolverCachingConfigPtrOutputWithContext(ctx)
}

// ResolverCachingConfigPtrInput is an input type that accepts ResolverCachingConfigArgs, ResolverCachingConfigPtr and ResolverCachingConfigPtrOutput values.
// You can construct a concrete instance of `ResolverCachingConfigPtrInput` via:
//
//	        ResolverCachingConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverCachingConfigPtrInput interface {
	pulumi.Input

	ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput
	ToResolverCachingConfigPtrOutputWithContext(context.Context) ResolverCachingConfigPtrOutput
}

type resolverCachingConfigPtrType ResolverCachingConfigArgs

func ResolverCachingConfigPtr(v *ResolverCachingConfigArgs) ResolverCachingConfigPtrInput {
	return (*resolverCachingConfigPtrType)(v)
}

func (*resolverCachingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigPtrOutput)
}

// The caching configuration for a resolver that has caching activated.
type ResolverCachingConfigOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverCachingConfig) *ResolverCachingConfig {
		return &v
	}).(ResolverCachingConfigPtrOutput)
}

// The caching keys for a resolver that has caching activated.
//
//	Valid values are entries from the ``$context.arguments``, ``$context.source``, and ``$context.identity`` maps.
func (o ResolverCachingConfigOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverCachingConfig) []string { return v.CachingKeys }).(pulumi.StringArrayOutput)
}

// The TTL in seconds for a resolver that has caching activated.
//
//	Valid values are 1–3,600 seconds.
func (o ResolverCachingConfigOutput) Ttl() pulumi.Float64Output {
	return o.ApplyT(func(v ResolverCachingConfig) float64 { return v.Ttl }).(pulumi.Float64Output)
}

type ResolverCachingConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) Elem() ResolverCachingConfigOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) ResolverCachingConfig {
		if v != nil {
			return *v
		}
		var ret ResolverCachingConfig
		return ret
	}).(ResolverCachingConfigOutput)
}

// The caching keys for a resolver that has caching activated.
//
//	Valid values are entries from the ``$context.arguments``, ``$context.source``, and ``$context.identity`` maps.
func (o ResolverCachingConfigPtrOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) []string {
		if v == nil {
			return nil
		}
		return v.CachingKeys
	}).(pulumi.StringArrayOutput)
}

// The TTL in seconds for a resolver that has caching activated.
//
//	Valid values are 1–3,600 seconds.
func (o ResolverCachingConfigPtrOutput) Ttl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ttl
	}).(pulumi.Float64PtrOutput)
}

// The “LambdaConflictHandlerConfig“ when configuring LAMBDA as the Conflict Handler.
type ResolverLambdaConflictHandlerConfig struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// ResolverLambdaConflictHandlerConfigInput is an input type that accepts ResolverLambdaConflictHandlerConfigArgs and ResolverLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `ResolverLambdaConflictHandlerConfigInput` via:
//
//	ResolverLambdaConflictHandlerConfigArgs{...}
type ResolverLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToResolverLambdaConflictHandlerConfigOutput() ResolverLambdaConflictHandlerConfigOutput
	ToResolverLambdaConflictHandlerConfigOutputWithContext(context.Context) ResolverLambdaConflictHandlerConfigOutput
}

// The “LambdaConflictHandlerConfig“ when configuring LAMBDA as the Conflict Handler.
type ResolverLambdaConflictHandlerConfigArgs struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (ResolverLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i ResolverLambdaConflictHandlerConfigArgs) ToResolverLambdaConflictHandlerConfigOutput() ResolverLambdaConflictHandlerConfigOutput {
	return i.ToResolverLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i ResolverLambdaConflictHandlerConfigArgs) ToResolverLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLambdaConflictHandlerConfigOutput)
}

func (i ResolverLambdaConflictHandlerConfigArgs) ToResolverLambdaConflictHandlerConfigPtrOutput() ResolverLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i ResolverLambdaConflictHandlerConfigArgs) ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLambdaConflictHandlerConfigOutput).ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// ResolverLambdaConflictHandlerConfigPtrInput is an input type that accepts ResolverLambdaConflictHandlerConfigArgs, ResolverLambdaConflictHandlerConfigPtr and ResolverLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `ResolverLambdaConflictHandlerConfigPtrInput` via:
//
//	        ResolverLambdaConflictHandlerConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToResolverLambdaConflictHandlerConfigPtrOutput() ResolverLambdaConflictHandlerConfigPtrOutput
	ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) ResolverLambdaConflictHandlerConfigPtrOutput
}

type resolverLambdaConflictHandlerConfigPtrType ResolverLambdaConflictHandlerConfigArgs

func ResolverLambdaConflictHandlerConfigPtr(v *ResolverLambdaConflictHandlerConfigArgs) ResolverLambdaConflictHandlerConfigPtrInput {
	return (*resolverLambdaConflictHandlerConfigPtrType)(v)
}

func (*resolverLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *resolverLambdaConflictHandlerConfigPtrType) ToResolverLambdaConflictHandlerConfigPtrOutput() ResolverLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *resolverLambdaConflictHandlerConfigPtrType) ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverLambdaConflictHandlerConfigPtrOutput)
}

// The “LambdaConflictHandlerConfig“ when configuring LAMBDA as the Conflict Handler.
type ResolverLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (ResolverLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverLambdaConflictHandlerConfigOutput) ToResolverLambdaConflictHandlerConfigOutput() ResolverLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverLambdaConflictHandlerConfigOutput) ToResolverLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverLambdaConflictHandlerConfigOutput) ToResolverLambdaConflictHandlerConfigPtrOutput() ResolverLambdaConflictHandlerConfigPtrOutput {
	return o.ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o ResolverLambdaConflictHandlerConfigOutput) ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverLambdaConflictHandlerConfig) *ResolverLambdaConflictHandlerConfig {
		return &v
	}).(ResolverLambdaConflictHandlerConfigPtrOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o ResolverLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type ResolverLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverLambdaConflictHandlerConfigPtrOutput) ToResolverLambdaConflictHandlerConfigPtrOutput() ResolverLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverLambdaConflictHandlerConfigPtrOutput) ToResolverLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverLambdaConflictHandlerConfigPtrOutput) Elem() ResolverLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *ResolverLambdaConflictHandlerConfig) ResolverLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret ResolverLambdaConflictHandlerConfig
		return ret
	}).(ResolverLambdaConflictHandlerConfigOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o ResolverLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

// Use the “PipelineConfig“ property type to specify “PipelineConfig“ for an APSYlong resolver.
//
//	``PipelineConfig`` is a property of the [AWS::AppSync::Resolver](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html) resource.
type ResolverPipelineConfig struct {
	// A list of ``Function`` objects.
	Functions []string `pulumi:"functions"`
}

// ResolverPipelineConfigInput is an input type that accepts ResolverPipelineConfigArgs and ResolverPipelineConfigOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigInput` via:
//
//	ResolverPipelineConfigArgs{...}
type ResolverPipelineConfigInput interface {
	pulumi.Input

	ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput
	ToResolverPipelineConfigOutputWithContext(context.Context) ResolverPipelineConfigOutput
}

// Use the “PipelineConfig“ property type to specify “PipelineConfig“ for an APSYlong resolver.
//
//	``PipelineConfig`` is a property of the [AWS::AppSync::Resolver](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html) resource.
type ResolverPipelineConfigArgs struct {
	// A list of ``Function`` objects.
	Functions pulumi.StringArrayInput `pulumi:"functions"`
}

func (ResolverPipelineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return i.ToResolverPipelineConfigOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput)
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput).ToResolverPipelineConfigPtrOutputWithContext(ctx)
}

// ResolverPipelineConfigPtrInput is an input type that accepts ResolverPipelineConfigArgs, ResolverPipelineConfigPtr and ResolverPipelineConfigPtrOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigPtrInput` via:
//
//	        ResolverPipelineConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverPipelineConfigPtrInput interface {
	pulumi.Input

	ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput
	ToResolverPipelineConfigPtrOutputWithContext(context.Context) ResolverPipelineConfigPtrOutput
}

type resolverPipelineConfigPtrType ResolverPipelineConfigArgs

func ResolverPipelineConfigPtr(v *ResolverPipelineConfigArgs) ResolverPipelineConfigPtrInput {
	return (*resolverPipelineConfigPtrType)(v)
}

func (*resolverPipelineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigPtrOutput)
}

// Use the “PipelineConfig“ property type to specify “PipelineConfig“ for an APSYlong resolver.
//
//	``PipelineConfig`` is a property of the [AWS::AppSync::Resolver](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html) resource.
type ResolverPipelineConfigOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverPipelineConfig) *ResolverPipelineConfig {
		return &v
	}).(ResolverPipelineConfigPtrOutput)
}

// A list of “Function“ objects.
func (o ResolverPipelineConfigOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) []string { return v.Functions }).(pulumi.StringArrayOutput)
}

type ResolverPipelineConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) Elem() ResolverPipelineConfigOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) ResolverPipelineConfig {
		if v != nil {
			return *v
		}
		var ret ResolverPipelineConfig
		return ret
	}).(ResolverPipelineConfigOutput)
}

// A list of “Function“ objects.
func (o ResolverPipelineConfigPtrOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) []string {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(pulumi.StringArrayOutput)
}

// Describes a Sync configuration for a resolver.
//
//	Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type ResolverSyncConfig struct {
	// The Conflict Detection strategy to use.
	//   +   *VERSION*: Detect conflicts based on object versions for this resolver.
	//   +   *NONE*: Do not detect conflicts when invoking this resolver.
	ConflictDetection string `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict.
	//   +   *OPTIMISTIC_CONCURRENCY*: Resolve conflicts by rejecting mutations when versions don't match the latest version at the server.
	//   +   *AUTOMERGE*: Resolve conflicts with the Automerge conflict resolution strategy.
	//   +   *LAMBDA*: Resolve conflicts with an LAMlong function supplied in the ``LambdaConflictHandlerConfig``.
	ConflictHandler *string `pulumi:"conflictHandler"`
	// The ``LambdaConflictHandlerConfig`` when configuring ``LAMBDA`` as the Conflict Handler.
	LambdaConflictHandlerConfig *ResolverLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// ResolverSyncConfigInput is an input type that accepts ResolverSyncConfigArgs and ResolverSyncConfigOutput values.
// You can construct a concrete instance of `ResolverSyncConfigInput` via:
//
//	ResolverSyncConfigArgs{...}
type ResolverSyncConfigInput interface {
	pulumi.Input

	ToResolverSyncConfigOutput() ResolverSyncConfigOutput
	ToResolverSyncConfigOutputWithContext(context.Context) ResolverSyncConfigOutput
}

// Describes a Sync configuration for a resolver.
//
//	Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type ResolverSyncConfigArgs struct {
	// The Conflict Detection strategy to use.
	//   +   *VERSION*: Detect conflicts based on object versions for this resolver.
	//   +   *NONE*: Do not detect conflicts when invoking this resolver.
	ConflictDetection pulumi.StringInput `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict.
	//   +   *OPTIMISTIC_CONCURRENCY*: Resolve conflicts by rejecting mutations when versions don't match the latest version at the server.
	//   +   *AUTOMERGE*: Resolve conflicts with the Automerge conflict resolution strategy.
	//   +   *LAMBDA*: Resolve conflicts with an LAMlong function supplied in the ``LambdaConflictHandlerConfig``.
	ConflictHandler pulumi.StringPtrInput `pulumi:"conflictHandler"`
	// The ``LambdaConflictHandlerConfig`` when configuring ``LAMBDA`` as the Conflict Handler.
	LambdaConflictHandlerConfig ResolverLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (ResolverSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return i.ToResolverSyncConfigOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput)
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput).ToResolverSyncConfigPtrOutputWithContext(ctx)
}

// ResolverSyncConfigPtrInput is an input type that accepts ResolverSyncConfigArgs, ResolverSyncConfigPtr and ResolverSyncConfigPtrOutput values.
// You can construct a concrete instance of `ResolverSyncConfigPtrInput` via:
//
//	        ResolverSyncConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverSyncConfigPtrInput interface {
	pulumi.Input

	ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput
	ToResolverSyncConfigPtrOutputWithContext(context.Context) ResolverSyncConfigPtrOutput
}

type resolverSyncConfigPtrType ResolverSyncConfigArgs

func ResolverSyncConfigPtr(v *ResolverSyncConfigArgs) ResolverSyncConfigPtrInput {
	return (*resolverSyncConfigPtrType)(v)
}

func (*resolverSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigPtrOutput)
}

// Describes a Sync configuration for a resolver.
//
//	Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
type ResolverSyncConfigOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverSyncConfig) *ResolverSyncConfig {
		return &v
	}).(ResolverSyncConfigPtrOutput)
}

// The Conflict Detection strategy to use.
//   - *VERSION*: Detect conflicts based on object versions for this resolver.
//   - *NONE*: Do not detect conflicts when invoking this resolver.
func (o ResolverSyncConfigOutput) ConflictDetection() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverSyncConfig) string { return v.ConflictDetection }).(pulumi.StringOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict.
//   - *OPTIMISTIC_CONCURRENCY*: Resolve conflicts by rejecting mutations when versions don't match the latest version at the server.
//   - *AUTOMERGE*: Resolve conflicts with the Automerge conflict resolution strategy.
//   - *LAMBDA*: Resolve conflicts with an LAMlong function supplied in the “LambdaConflictHandlerConfig“.
func (o ResolverSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

// The “LambdaConflictHandlerConfig“ when configuring “LAMBDA“ as the Conflict Handler.
func (o ResolverSyncConfigOutput) LambdaConflictHandlerConfig() ResolverLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *ResolverLambdaConflictHandlerConfig { return v.LambdaConflictHandlerConfig }).(ResolverLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) Elem() ResolverSyncConfigOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) ResolverSyncConfig {
		if v != nil {
			return *v
		}
		var ret ResolverSyncConfig
		return ret
	}).(ResolverSyncConfigOutput)
}

// The Conflict Detection strategy to use.
//   - *VERSION*: Detect conflicts based on object versions for this resolver.
//   - *NONE*: Do not detect conflicts when invoking this resolver.
func (o ResolverSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict.
//   - *OPTIMISTIC_CONCURRENCY*: Resolve conflicts by rejecting mutations when versions don't match the latest version at the server.
//   - *AUTOMERGE*: Resolve conflicts with the Automerge conflict resolution strategy.
//   - *LAMBDA*: Resolve conflicts with an LAMlong function supplied in the “LambdaConflictHandlerConfig“.
func (o ResolverSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

// The “LambdaConflictHandlerConfig“ when configuring “LAMBDA“ as the Conflict Handler.
func (o ResolverSyncConfigPtrOutput) LambdaConflictHandlerConfig() ResolverLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *ResolverLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(ResolverLambdaConflictHandlerConfigPtrOutput)
}

type SourceApiAssociationConfig struct {
	// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
	MergeType *SourceApiAssociationConfigMergeType `pulumi:"mergeType"`
}

// SourceApiAssociationConfigInput is an input type that accepts SourceApiAssociationConfigArgs and SourceApiAssociationConfigOutput values.
// You can construct a concrete instance of `SourceApiAssociationConfigInput` via:
//
//	SourceApiAssociationConfigArgs{...}
type SourceApiAssociationConfigInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigOutput() SourceApiAssociationConfigOutput
	ToSourceApiAssociationConfigOutputWithContext(context.Context) SourceApiAssociationConfigOutput
}

type SourceApiAssociationConfigArgs struct {
	// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
	MergeType SourceApiAssociationConfigMergeTypePtrInput `pulumi:"mergeType"`
}

func (SourceApiAssociationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfig)(nil)).Elem()
}

func (i SourceApiAssociationConfigArgs) ToSourceApiAssociationConfigOutput() SourceApiAssociationConfigOutput {
	return i.ToSourceApiAssociationConfigOutputWithContext(context.Background())
}

func (i SourceApiAssociationConfigArgs) ToSourceApiAssociationConfigOutputWithContext(ctx context.Context) SourceApiAssociationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationConfigOutput)
}

func (i SourceApiAssociationConfigArgs) ToSourceApiAssociationConfigPtrOutput() SourceApiAssociationConfigPtrOutput {
	return i.ToSourceApiAssociationConfigPtrOutputWithContext(context.Background())
}

func (i SourceApiAssociationConfigArgs) ToSourceApiAssociationConfigPtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationConfigOutput).ToSourceApiAssociationConfigPtrOutputWithContext(ctx)
}

// SourceApiAssociationConfigPtrInput is an input type that accepts SourceApiAssociationConfigArgs, SourceApiAssociationConfigPtr and SourceApiAssociationConfigPtrOutput values.
// You can construct a concrete instance of `SourceApiAssociationConfigPtrInput` via:
//
//	        SourceApiAssociationConfigArgs{...}
//
//	or:
//
//	        nil
type SourceApiAssociationConfigPtrInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigPtrOutput() SourceApiAssociationConfigPtrOutput
	ToSourceApiAssociationConfigPtrOutputWithContext(context.Context) SourceApiAssociationConfigPtrOutput
}

type sourceApiAssociationConfigPtrType SourceApiAssociationConfigArgs

func SourceApiAssociationConfigPtr(v *SourceApiAssociationConfigArgs) SourceApiAssociationConfigPtrInput {
	return (*sourceApiAssociationConfigPtrType)(v)
}

func (*sourceApiAssociationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationConfig)(nil)).Elem()
}

func (i *sourceApiAssociationConfigPtrType) ToSourceApiAssociationConfigPtrOutput() SourceApiAssociationConfigPtrOutput {
	return i.ToSourceApiAssociationConfigPtrOutputWithContext(context.Background())
}

func (i *sourceApiAssociationConfigPtrType) ToSourceApiAssociationConfigPtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationConfigPtrOutput)
}

type SourceApiAssociationConfigOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfig)(nil)).Elem()
}

func (o SourceApiAssociationConfigOutput) ToSourceApiAssociationConfigOutput() SourceApiAssociationConfigOutput {
	return o
}

func (o SourceApiAssociationConfigOutput) ToSourceApiAssociationConfigOutputWithContext(ctx context.Context) SourceApiAssociationConfigOutput {
	return o
}

func (o SourceApiAssociationConfigOutput) ToSourceApiAssociationConfigPtrOutput() SourceApiAssociationConfigPtrOutput {
	return o.ToSourceApiAssociationConfigPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigOutput) ToSourceApiAssociationConfigPtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationConfig) *SourceApiAssociationConfig {
		return &v
	}).(SourceApiAssociationConfigPtrOutput)
}

// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
func (o SourceApiAssociationConfigOutput) MergeType() SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ApplyT(func(v SourceApiAssociationConfig) *SourceApiAssociationConfigMergeType { return v.MergeType }).(SourceApiAssociationConfigMergeTypePtrOutput)
}

type SourceApiAssociationConfigPtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationConfig)(nil)).Elem()
}

func (o SourceApiAssociationConfigPtrOutput) ToSourceApiAssociationConfigPtrOutput() SourceApiAssociationConfigPtrOutput {
	return o
}

func (o SourceApiAssociationConfigPtrOutput) ToSourceApiAssociationConfigPtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigPtrOutput {
	return o
}

func (o SourceApiAssociationConfigPtrOutput) Elem() SourceApiAssociationConfigOutput {
	return o.ApplyT(func(v *SourceApiAssociationConfig) SourceApiAssociationConfig {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationConfig
		return ret
	}).(SourceApiAssociationConfigOutput)
}

// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
func (o SourceApiAssociationConfigPtrOutput) MergeType() SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ApplyT(func(v *SourceApiAssociationConfig) *SourceApiAssociationConfigMergeType {
		if v == nil {
			return nil
		}
		return v.MergeType
	}).(SourceApiAssociationConfigMergeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuthorizationConfigInput)(nil)).Elem(), DataSourceAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuthorizationConfigPtrInput)(nil)).Elem(), DataSourceAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAwsIamConfigInput)(nil)).Elem(), DataSourceAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAwsIamConfigPtrInput)(nil)).Elem(), DataSourceAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDeltaSyncConfigInput)(nil)).Elem(), DataSourceDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDeltaSyncConfigPtrInput)(nil)).Elem(), DataSourceDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamoDbConfigInput)(nil)).Elem(), DataSourceDynamoDbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamoDbConfigPtrInput)(nil)).Elem(), DataSourceDynamoDbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigPtrInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEventBridgeConfigInput)(nil)).Elem(), DataSourceEventBridgeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEventBridgeConfigPtrInput)(nil)).Elem(), DataSourceEventBridgeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigPtrInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOpenSearchServiceConfigInput)(nil)).Elem(), DataSourceOpenSearchServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOpenSearchServiceConfigPtrInput)(nil)).Elem(), DataSourceOpenSearchServiceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsHttpEndpointConfigInput)(nil)).Elem(), DataSourceRdsHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsHttpEndpointConfigPtrInput)(nil)).Elem(), DataSourceRdsHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigPtrInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationAppSyncRuntimeInput)(nil)).Elem(), FunctionConfigurationAppSyncRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationAppSyncRuntimePtrInput)(nil)).Elem(), FunctionConfigurationAppSyncRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationLambdaConflictHandlerConfigInput)(nil)).Elem(), FunctionConfigurationLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), FunctionConfigurationLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationSyncConfigInput)(nil)).Elem(), FunctionConfigurationSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigurationSyncConfigPtrInput)(nil)).Elem(), FunctionConfigurationSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiAdditionalAuthenticationProviderInput)(nil)).Elem(), GraphQlApiAdditionalAuthenticationProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiAdditionalAuthenticationProviderArrayInput)(nil)).Elem(), GraphQlApiAdditionalAuthenticationProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiCognitoUserPoolConfigInput)(nil)).Elem(), GraphQlApiCognitoUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiCognitoUserPoolConfigPtrInput)(nil)).Elem(), GraphQlApiCognitoUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiEnhancedMetricsConfigInput)(nil)).Elem(), GraphQlApiEnhancedMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiEnhancedMetricsConfigPtrInput)(nil)).Elem(), GraphQlApiEnhancedMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiLambdaAuthorizerConfigInput)(nil)).Elem(), GraphQlApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiLambdaAuthorizerConfigPtrInput)(nil)).Elem(), GraphQlApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiLogConfigInput)(nil)).Elem(), GraphQlApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiLogConfigPtrInput)(nil)).Elem(), GraphQlApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiOpenIdConnectConfigInput)(nil)).Elem(), GraphQlApiOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiOpenIdConnectConfigPtrInput)(nil)).Elem(), GraphQlApiOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiTagInput)(nil)).Elem(), GraphQlApiTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiTagArrayInput)(nil)).Elem(), GraphQlApiTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiUserPoolConfigInput)(nil)).Elem(), GraphQlApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQlApiUserPoolConfigPtrInput)(nil)).Elem(), GraphQlApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverAppSyncRuntimeInput)(nil)).Elem(), ResolverAppSyncRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverAppSyncRuntimePtrInput)(nil)).Elem(), ResolverAppSyncRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigPtrInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverLambdaConflictHandlerConfigInput)(nil)).Elem(), ResolverLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), ResolverLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigPtrInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigPtrInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigInput)(nil)).Elem(), SourceApiAssociationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigPtrInput)(nil)).Elem(), SourceApiAssociationConfigArgs{})
	pulumi.RegisterOutputType(DataSourceAuthorizationConfigOutput{})
	pulumi.RegisterOutputType(DataSourceAuthorizationConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAwsIamConfigOutput{})
	pulumi.RegisterOutputType(DataSourceAwsIamConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDeltaSyncConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDeltaSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDynamoDbConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamoDbConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceEventBridgeConfigOutput{})
	pulumi.RegisterOutputType(DataSourceEventBridgeConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOpenSearchServiceConfigOutput{})
	pulumi.RegisterOutputType(DataSourceOpenSearchServiceConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRdsHttpEndpointConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRdsHttpEndpointConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationAppSyncRuntimeOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationAppSyncRuntimePtrOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationLambdaConflictHandlerConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationSyncConfigOutput{})
	pulumi.RegisterOutputType(FunctionConfigurationSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiAdditionalAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(GraphQlApiAdditionalAuthenticationProviderArrayOutput{})
	pulumi.RegisterOutputType(GraphQlApiCognitoUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiCognitoUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiEnhancedMetricsConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiEnhancedMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiLogConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiLogConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiOpenIdConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQlApiTagOutput{})
	pulumi.RegisterOutputType(GraphQlApiTagArrayOutput{})
	pulumi.RegisterOutputType(GraphQlApiUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQlApiUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverAppSyncRuntimeOutput{})
	pulumi.RegisterOutputType(ResolverAppSyncRuntimePtrOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(ResolverLambdaConflictHandlerConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigPtrOutput{})
}
