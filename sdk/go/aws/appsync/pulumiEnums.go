// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResolverMetricsConfig string

const (
	ResolverMetricsConfigEnabled  = ResolverMetricsConfig("ENABLED")
	ResolverMetricsConfigDisabled = ResolverMetricsConfig("DISABLED")
)

func (ResolverMetricsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverMetricsConfig)(nil)).Elem()
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput {
	return pulumi.ToOutput(e).(ResolverMetricsConfigOutput)
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigOutputWithContext(ctx context.Context) ResolverMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverMetricsConfigOutput)
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return e.ToResolverMetricsConfigPtrOutputWithContext(context.Background())
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return ResolverMetricsConfig(e).ToResolverMetricsConfigOutputWithContext(ctx).ToResolverMetricsConfigPtrOutputWithContext(ctx)
}

func (e ResolverMetricsConfig) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverMetricsConfig) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverMetricsConfig) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverMetricsConfig) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverMetricsConfigOutput struct{ *pulumi.OutputState }

func (ResolverMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverMetricsConfig)(nil)).Elem()
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput {
	return o
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigOutputWithContext(ctx context.Context) ResolverMetricsConfigOutput {
	return o
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return o.ToResolverMetricsConfigPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverMetricsConfig) *ResolverMetricsConfig {
		return &v
	}).(ResolverMetricsConfigPtrOutput)
}

func (o ResolverMetricsConfigOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverMetricsConfig) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverMetricsConfigOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverMetricsConfig) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverMetricsConfig)(nil)).Elem()
}

func (o ResolverMetricsConfigPtrOutput) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return o
}

func (o ResolverMetricsConfigPtrOutput) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return o
}

func (o ResolverMetricsConfigPtrOutput) Elem() ResolverMetricsConfigOutput {
	return o.ApplyT(func(v *ResolverMetricsConfig) ResolverMetricsConfig {
		if v != nil {
			return *v
		}
		var ret ResolverMetricsConfig
		return ret
	}).(ResolverMetricsConfigOutput)
}

func (o ResolverMetricsConfigPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverMetricsConfig) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverMetricsConfigInput is an input type that accepts values of the ResolverMetricsConfig enum
// A concrete instance of `ResolverMetricsConfigInput` can be one of the following:
//
//	ResolverMetricsConfigEnabled
//	ResolverMetricsConfigDisabled
type ResolverMetricsConfigInput interface {
	pulumi.Input

	ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput
	ToResolverMetricsConfigOutputWithContext(context.Context) ResolverMetricsConfigOutput
}

var resolverMetricsConfigPtrType = reflect.TypeOf((**ResolverMetricsConfig)(nil)).Elem()

type ResolverMetricsConfigPtrInput interface {
	pulumi.Input

	ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput
	ToResolverMetricsConfigPtrOutputWithContext(context.Context) ResolverMetricsConfigPtrOutput
}

type resolverMetricsConfigPtr string

func ResolverMetricsConfigPtr(v string) ResolverMetricsConfigPtrInput {
	return (*resolverMetricsConfigPtr)(&v)
}

func (*resolverMetricsConfigPtr) ElementType() reflect.Type {
	return resolverMetricsConfigPtrType
}

func (in *resolverMetricsConfigPtr) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return pulumi.ToOutput(in).(ResolverMetricsConfigPtrOutput)
}

func (in *resolverMetricsConfigPtr) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverMetricsConfigPtrOutput)
}

// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
type SourceApiAssociationConfigMergeType string

const (
	SourceApiAssociationConfigMergeTypeAutoMerge   = SourceApiAssociationConfigMergeType("AUTO_MERGE")
	SourceApiAssociationConfigMergeTypeManualMerge = SourceApiAssociationConfigMergeType("MANUAL_MERGE")
)

func (SourceApiAssociationConfigMergeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput {
	return pulumi.ToOutput(e).(SourceApiAssociationConfigMergeTypeOutput)
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceApiAssociationConfigMergeTypeOutput)
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return e.ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Background())
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return SourceApiAssociationConfigMergeType(e).ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx).ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx)
}

func (e SourceApiAssociationConfigMergeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceApiAssociationConfigMergeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceApiAssociationConfigMergeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceApiAssociationConfigMergeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceApiAssociationConfigMergeTypeOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigMergeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypeOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationConfigMergeType) *SourceApiAssociationConfigMergeType {
		return &v
	}).(SourceApiAssociationConfigMergeTypePtrOutput)
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationConfigMergeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationConfigMergeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceApiAssociationConfigMergeTypePtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigMergeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) Elem() SourceApiAssociationConfigMergeTypeOutput {
	return o.ApplyT(func(v *SourceApiAssociationConfigMergeType) SourceApiAssociationConfigMergeType {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationConfigMergeType
		return ret
	}).(SourceApiAssociationConfigMergeTypeOutput)
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceApiAssociationConfigMergeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceApiAssociationConfigMergeTypeInput is an input type that accepts values of the SourceApiAssociationConfigMergeType enum
// A concrete instance of `SourceApiAssociationConfigMergeTypeInput` can be one of the following:
//
//	SourceApiAssociationConfigMergeTypeAutoMerge
//	SourceApiAssociationConfigMergeTypeManualMerge
type SourceApiAssociationConfigMergeTypeInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput
	ToSourceApiAssociationConfigMergeTypeOutputWithContext(context.Context) SourceApiAssociationConfigMergeTypeOutput
}

var sourceApiAssociationConfigMergeTypePtrType = reflect.TypeOf((**SourceApiAssociationConfigMergeType)(nil)).Elem()

type SourceApiAssociationConfigMergeTypePtrInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput
	ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Context) SourceApiAssociationConfigMergeTypePtrOutput
}

type sourceApiAssociationConfigMergeTypePtr string

func SourceApiAssociationConfigMergeTypePtr(v string) SourceApiAssociationConfigMergeTypePtrInput {
	return (*sourceApiAssociationConfigMergeTypePtr)(&v)
}

func (*sourceApiAssociationConfigMergeTypePtr) ElementType() reflect.Type {
	return sourceApiAssociationConfigMergeTypePtrType
}

func (in *sourceApiAssociationConfigMergeTypePtr) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return pulumi.ToOutput(in).(SourceApiAssociationConfigMergeTypePtrOutput)
}

func (in *sourceApiAssociationConfigMergeTypePtr) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceApiAssociationConfigMergeTypePtrOutput)
}

// Current status of SourceApiAssociation.
type SourceApiAssociationStatus string

const (
	SourceApiAssociationStatusMergeScheduled          = SourceApiAssociationStatus("MERGE_SCHEDULED")
	SourceApiAssociationStatusMergeFailed             = SourceApiAssociationStatus("MERGE_FAILED")
	SourceApiAssociationStatusMergeSuccess            = SourceApiAssociationStatus("MERGE_SUCCESS")
	SourceApiAssociationStatusMergeInProgress         = SourceApiAssociationStatus("MERGE_IN_PROGRESS")
	SourceApiAssociationStatusAutoMergeScheduleFailed = SourceApiAssociationStatus("AUTO_MERGE_SCHEDULE_FAILED")
	SourceApiAssociationStatusDeletionScheduled       = SourceApiAssociationStatus("DELETION_SCHEDULED")
	SourceApiAssociationStatusDeletionInProgress      = SourceApiAssociationStatus("DELETION_IN_PROGRESS")
	SourceApiAssociationStatusDeletionFailed          = SourceApiAssociationStatus("DELETION_FAILED")
)

type SourceApiAssociationStatusOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationStatus)(nil)).Elem()
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusOutput() SourceApiAssociationStatusOutput {
	return o
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusOutputWithContext(ctx context.Context) SourceApiAssociationStatusOutput {
	return o
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusPtrOutput() SourceApiAssociationStatusPtrOutput {
	return o.ToSourceApiAssociationStatusPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusPtrOutputWithContext(ctx context.Context) SourceApiAssociationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationStatus) *SourceApiAssociationStatus {
		return &v
	}).(SourceApiAssociationStatusPtrOutput)
}

func (o SourceApiAssociationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceApiAssociationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceApiAssociationStatusPtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationStatus)(nil)).Elem()
}

func (o SourceApiAssociationStatusPtrOutput) ToSourceApiAssociationStatusPtrOutput() SourceApiAssociationStatusPtrOutput {
	return o
}

func (o SourceApiAssociationStatusPtrOutput) ToSourceApiAssociationStatusPtrOutputWithContext(ctx context.Context) SourceApiAssociationStatusPtrOutput {
	return o
}

func (o SourceApiAssociationStatusPtrOutput) Elem() SourceApiAssociationStatusOutput {
	return o.ApplyT(func(v *SourceApiAssociationStatus) SourceApiAssociationStatus {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationStatus
		return ret
	}).(SourceApiAssociationStatusOutput)
}

func (o SourceApiAssociationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceApiAssociationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverMetricsConfigInput)(nil)).Elem(), ResolverMetricsConfig("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverMetricsConfigPtrInput)(nil)).Elem(), ResolverMetricsConfig("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigMergeTypeInput)(nil)).Elem(), SourceApiAssociationConfigMergeType("AUTO_MERGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigMergeTypePtrInput)(nil)).Elem(), SourceApiAssociationConfigMergeType("AUTO_MERGE"))
	pulumi.RegisterOutputType(ResolverMetricsConfigOutput{})
	pulumi.RegisterOutputType(ResolverMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigMergeTypeOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigMergeTypePtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationStatusOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationStatusPtrOutput{})
}
