// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security configuration for your AppSync API.
type ApiAuthenticationType string

const (
	ApiAuthenticationTypeAmazonCognitoUserPools = ApiAuthenticationType("AMAZON_COGNITO_USER_POOLS")
	ApiAuthenticationTypeAwsIam                 = ApiAuthenticationType("AWS_IAM")
	ApiAuthenticationTypeApiKey                 = ApiAuthenticationType("API_KEY")
	ApiAuthenticationTypeOpenidConnect          = ApiAuthenticationType("OPENID_CONNECT")
	ApiAuthenticationTypeAwsLambda              = ApiAuthenticationType("AWS_LAMBDA")
)

func (ApiAuthenticationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiAuthenticationType)(nil)).Elem()
}

func (e ApiAuthenticationType) ToApiAuthenticationTypeOutput() ApiAuthenticationTypeOutput {
	return pulumi.ToOutput(e).(ApiAuthenticationTypeOutput)
}

func (e ApiAuthenticationType) ToApiAuthenticationTypeOutputWithContext(ctx context.Context) ApiAuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApiAuthenticationTypeOutput)
}

func (e ApiAuthenticationType) ToApiAuthenticationTypePtrOutput() ApiAuthenticationTypePtrOutput {
	return e.ToApiAuthenticationTypePtrOutputWithContext(context.Background())
}

func (e ApiAuthenticationType) ToApiAuthenticationTypePtrOutputWithContext(ctx context.Context) ApiAuthenticationTypePtrOutput {
	return ApiAuthenticationType(e).ToApiAuthenticationTypeOutputWithContext(ctx).ToApiAuthenticationTypePtrOutputWithContext(ctx)
}

func (e ApiAuthenticationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiAuthenticationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiAuthenticationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApiAuthenticationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApiAuthenticationTypeOutput struct{ *pulumi.OutputState }

func (ApiAuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiAuthenticationType)(nil)).Elem()
}

func (o ApiAuthenticationTypeOutput) ToApiAuthenticationTypeOutput() ApiAuthenticationTypeOutput {
	return o
}

func (o ApiAuthenticationTypeOutput) ToApiAuthenticationTypeOutputWithContext(ctx context.Context) ApiAuthenticationTypeOutput {
	return o
}

func (o ApiAuthenticationTypeOutput) ToApiAuthenticationTypePtrOutput() ApiAuthenticationTypePtrOutput {
	return o.ToApiAuthenticationTypePtrOutputWithContext(context.Background())
}

func (o ApiAuthenticationTypeOutput) ToApiAuthenticationTypePtrOutputWithContext(ctx context.Context) ApiAuthenticationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiAuthenticationType) *ApiAuthenticationType {
		return &v
	}).(ApiAuthenticationTypePtrOutput)
}

func (o ApiAuthenticationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApiAuthenticationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiAuthenticationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApiAuthenticationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiAuthenticationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiAuthenticationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApiAuthenticationTypePtrOutput struct{ *pulumi.OutputState }

func (ApiAuthenticationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiAuthenticationType)(nil)).Elem()
}

func (o ApiAuthenticationTypePtrOutput) ToApiAuthenticationTypePtrOutput() ApiAuthenticationTypePtrOutput {
	return o
}

func (o ApiAuthenticationTypePtrOutput) ToApiAuthenticationTypePtrOutputWithContext(ctx context.Context) ApiAuthenticationTypePtrOutput {
	return o
}

func (o ApiAuthenticationTypePtrOutput) Elem() ApiAuthenticationTypeOutput {
	return o.ApplyT(func(v *ApiAuthenticationType) ApiAuthenticationType {
		if v != nil {
			return *v
		}
		var ret ApiAuthenticationType
		return ret
	}).(ApiAuthenticationTypeOutput)
}

func (o ApiAuthenticationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiAuthenticationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApiAuthenticationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApiAuthenticationTypeInput is an input type that accepts values of the ApiAuthenticationType enum
// A concrete instance of `ApiAuthenticationTypeInput` can be one of the following:
//
//	ApiAuthenticationTypeAmazonCognitoUserPools
//	ApiAuthenticationTypeAwsIam
//	ApiAuthenticationTypeApiKey
//	ApiAuthenticationTypeOpenidConnect
//	ApiAuthenticationTypeAwsLambda
type ApiAuthenticationTypeInput interface {
	pulumi.Input

	ToApiAuthenticationTypeOutput() ApiAuthenticationTypeOutput
	ToApiAuthenticationTypeOutputWithContext(context.Context) ApiAuthenticationTypeOutput
}

var apiAuthenticationTypePtrType = reflect.TypeOf((**ApiAuthenticationType)(nil)).Elem()

type ApiAuthenticationTypePtrInput interface {
	pulumi.Input

	ToApiAuthenticationTypePtrOutput() ApiAuthenticationTypePtrOutput
	ToApiAuthenticationTypePtrOutputWithContext(context.Context) ApiAuthenticationTypePtrOutput
}

type apiAuthenticationTypePtr string

func ApiAuthenticationTypePtr(v string) ApiAuthenticationTypePtrInput {
	return (*apiAuthenticationTypePtr)(&v)
}

func (*apiAuthenticationTypePtr) ElementType() reflect.Type {
	return apiAuthenticationTypePtrType
}

func (in *apiAuthenticationTypePtr) ToApiAuthenticationTypePtrOutput() ApiAuthenticationTypePtrOutput {
	return pulumi.ToOutput(in).(ApiAuthenticationTypePtrOutput)
}

func (in *apiAuthenticationTypePtr) ToApiAuthenticationTypePtrOutputWithContext(ctx context.Context) ApiAuthenticationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApiAuthenticationTypePtrOutput)
}

// Logging level for the AppSync API.
type ApiEventLogLevel string

const (
	ApiEventLogLevelNone  = ApiEventLogLevel("NONE")
	ApiEventLogLevelError = ApiEventLogLevel("ERROR")
	ApiEventLogLevelAll   = ApiEventLogLevel("ALL")
	ApiEventLogLevelInfo  = ApiEventLogLevel("INFO")
	ApiEventLogLevelDebug = ApiEventLogLevel("DEBUG")
)

func (ApiEventLogLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventLogLevel)(nil)).Elem()
}

func (e ApiEventLogLevel) ToApiEventLogLevelOutput() ApiEventLogLevelOutput {
	return pulumi.ToOutput(e).(ApiEventLogLevelOutput)
}

func (e ApiEventLogLevel) ToApiEventLogLevelOutputWithContext(ctx context.Context) ApiEventLogLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApiEventLogLevelOutput)
}

func (e ApiEventLogLevel) ToApiEventLogLevelPtrOutput() ApiEventLogLevelPtrOutput {
	return e.ToApiEventLogLevelPtrOutputWithContext(context.Background())
}

func (e ApiEventLogLevel) ToApiEventLogLevelPtrOutputWithContext(ctx context.Context) ApiEventLogLevelPtrOutput {
	return ApiEventLogLevel(e).ToApiEventLogLevelOutputWithContext(ctx).ToApiEventLogLevelPtrOutputWithContext(ctx)
}

func (e ApiEventLogLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiEventLogLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiEventLogLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApiEventLogLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApiEventLogLevelOutput struct{ *pulumi.OutputState }

func (ApiEventLogLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventLogLevel)(nil)).Elem()
}

func (o ApiEventLogLevelOutput) ToApiEventLogLevelOutput() ApiEventLogLevelOutput {
	return o
}

func (o ApiEventLogLevelOutput) ToApiEventLogLevelOutputWithContext(ctx context.Context) ApiEventLogLevelOutput {
	return o
}

func (o ApiEventLogLevelOutput) ToApiEventLogLevelPtrOutput() ApiEventLogLevelPtrOutput {
	return o.ToApiEventLogLevelPtrOutputWithContext(context.Background())
}

func (o ApiEventLogLevelOutput) ToApiEventLogLevelPtrOutputWithContext(ctx context.Context) ApiEventLogLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventLogLevel) *ApiEventLogLevel {
		return &v
	}).(ApiEventLogLevelPtrOutput)
}

func (o ApiEventLogLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApiEventLogLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiEventLogLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApiEventLogLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiEventLogLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiEventLogLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApiEventLogLevelPtrOutput struct{ *pulumi.OutputState }

func (ApiEventLogLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventLogLevel)(nil)).Elem()
}

func (o ApiEventLogLevelPtrOutput) ToApiEventLogLevelPtrOutput() ApiEventLogLevelPtrOutput {
	return o
}

func (o ApiEventLogLevelPtrOutput) ToApiEventLogLevelPtrOutputWithContext(ctx context.Context) ApiEventLogLevelPtrOutput {
	return o
}

func (o ApiEventLogLevelPtrOutput) Elem() ApiEventLogLevelOutput {
	return o.ApplyT(func(v *ApiEventLogLevel) ApiEventLogLevel {
		if v != nil {
			return *v
		}
		var ret ApiEventLogLevel
		return ret
	}).(ApiEventLogLevelOutput)
}

func (o ApiEventLogLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiEventLogLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApiEventLogLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApiEventLogLevelInput is an input type that accepts values of the ApiEventLogLevel enum
// A concrete instance of `ApiEventLogLevelInput` can be one of the following:
//
//	ApiEventLogLevelNone
//	ApiEventLogLevelError
//	ApiEventLogLevelAll
//	ApiEventLogLevelInfo
//	ApiEventLogLevelDebug
type ApiEventLogLevelInput interface {
	pulumi.Input

	ToApiEventLogLevelOutput() ApiEventLogLevelOutput
	ToApiEventLogLevelOutputWithContext(context.Context) ApiEventLogLevelOutput
}

var apiEventLogLevelPtrType = reflect.TypeOf((**ApiEventLogLevel)(nil)).Elem()

type ApiEventLogLevelPtrInput interface {
	pulumi.Input

	ToApiEventLogLevelPtrOutput() ApiEventLogLevelPtrOutput
	ToApiEventLogLevelPtrOutputWithContext(context.Context) ApiEventLogLevelPtrOutput
}

type apiEventLogLevelPtr string

func ApiEventLogLevelPtr(v string) ApiEventLogLevelPtrInput {
	return (*apiEventLogLevelPtr)(&v)
}

func (*apiEventLogLevelPtr) ElementType() reflect.Type {
	return apiEventLogLevelPtrType
}

func (in *apiEventLogLevelPtr) ToApiEventLogLevelPtrOutput() ApiEventLogLevelPtrOutput {
	return pulumi.ToOutput(in).(ApiEventLogLevelPtrOutput)
}

func (in *apiEventLogLevelPtr) ToApiEventLogLevelPtrOutputWithContext(ctx context.Context) ApiEventLogLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApiEventLogLevelPtrOutput)
}

// Enables or disables enhanced data source metrics for specified data sources. Note that `MetricsConfig` won't be used unless the `dataSourceLevelMetricsBehavior` value is set to `PER_DATA_SOURCE_METRICS` . If the `dataSourceLevelMetricsBehavior` is set to `FULL_REQUEST_DATA_SOURCE_METRICS` instead, `MetricsConfig` will be ignored. However, you can still set its value.
//
// `MetricsConfig` can be `ENABLED` or `DISABLED` .
type DataSourceMetricsConfig string

const (
	DataSourceMetricsConfigDisabled = DataSourceMetricsConfig("DISABLED")
	DataSourceMetricsConfigEnabled  = DataSourceMetricsConfig("ENABLED")
)

func (DataSourceMetricsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMetricsConfig)(nil)).Elem()
}

func (e DataSourceMetricsConfig) ToDataSourceMetricsConfigOutput() DataSourceMetricsConfigOutput {
	return pulumi.ToOutput(e).(DataSourceMetricsConfigOutput)
}

func (e DataSourceMetricsConfig) ToDataSourceMetricsConfigOutputWithContext(ctx context.Context) DataSourceMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceMetricsConfigOutput)
}

func (e DataSourceMetricsConfig) ToDataSourceMetricsConfigPtrOutput() DataSourceMetricsConfigPtrOutput {
	return e.ToDataSourceMetricsConfigPtrOutputWithContext(context.Background())
}

func (e DataSourceMetricsConfig) ToDataSourceMetricsConfigPtrOutputWithContext(ctx context.Context) DataSourceMetricsConfigPtrOutput {
	return DataSourceMetricsConfig(e).ToDataSourceMetricsConfigOutputWithContext(ctx).ToDataSourceMetricsConfigPtrOutputWithContext(ctx)
}

func (e DataSourceMetricsConfig) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceMetricsConfig) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceMetricsConfig) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceMetricsConfig) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceMetricsConfigOutput struct{ *pulumi.OutputState }

func (DataSourceMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMetricsConfig)(nil)).Elem()
}

func (o DataSourceMetricsConfigOutput) ToDataSourceMetricsConfigOutput() DataSourceMetricsConfigOutput {
	return o
}

func (o DataSourceMetricsConfigOutput) ToDataSourceMetricsConfigOutputWithContext(ctx context.Context) DataSourceMetricsConfigOutput {
	return o
}

func (o DataSourceMetricsConfigOutput) ToDataSourceMetricsConfigPtrOutput() DataSourceMetricsConfigPtrOutput {
	return o.ToDataSourceMetricsConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceMetricsConfigOutput) ToDataSourceMetricsConfigPtrOutputWithContext(ctx context.Context) DataSourceMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMetricsConfig) *DataSourceMetricsConfig {
		return &v
	}).(DataSourceMetricsConfigPtrOutput)
}

func (o DataSourceMetricsConfigOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceMetricsConfigOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceMetricsConfig) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceMetricsConfigOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceMetricsConfigOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceMetricsConfig) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMetricsConfig)(nil)).Elem()
}

func (o DataSourceMetricsConfigPtrOutput) ToDataSourceMetricsConfigPtrOutput() DataSourceMetricsConfigPtrOutput {
	return o
}

func (o DataSourceMetricsConfigPtrOutput) ToDataSourceMetricsConfigPtrOutputWithContext(ctx context.Context) DataSourceMetricsConfigPtrOutput {
	return o
}

func (o DataSourceMetricsConfigPtrOutput) Elem() DataSourceMetricsConfigOutput {
	return o.ApplyT(func(v *DataSourceMetricsConfig) DataSourceMetricsConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceMetricsConfig
		return ret
	}).(DataSourceMetricsConfigOutput)
}

func (o DataSourceMetricsConfigPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceMetricsConfigPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceMetricsConfig) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceMetricsConfigInput is an input type that accepts values of the DataSourceMetricsConfig enum
// A concrete instance of `DataSourceMetricsConfigInput` can be one of the following:
//
//	DataSourceMetricsConfigDisabled
//	DataSourceMetricsConfigEnabled
type DataSourceMetricsConfigInput interface {
	pulumi.Input

	ToDataSourceMetricsConfigOutput() DataSourceMetricsConfigOutput
	ToDataSourceMetricsConfigOutputWithContext(context.Context) DataSourceMetricsConfigOutput
}

var dataSourceMetricsConfigPtrType = reflect.TypeOf((**DataSourceMetricsConfig)(nil)).Elem()

type DataSourceMetricsConfigPtrInput interface {
	pulumi.Input

	ToDataSourceMetricsConfigPtrOutput() DataSourceMetricsConfigPtrOutput
	ToDataSourceMetricsConfigPtrOutputWithContext(context.Context) DataSourceMetricsConfigPtrOutput
}

type dataSourceMetricsConfigPtr string

func DataSourceMetricsConfigPtr(v string) DataSourceMetricsConfigPtrInput {
	return (*dataSourceMetricsConfigPtr)(&v)
}

func (*dataSourceMetricsConfigPtr) ElementType() reflect.Type {
	return dataSourceMetricsConfigPtrType
}

func (in *dataSourceMetricsConfigPtr) ToDataSourceMetricsConfigPtrOutput() DataSourceMetricsConfigPtrOutput {
	return pulumi.ToOutput(in).(DataSourceMetricsConfigPtrOutput)
}

func (in *dataSourceMetricsConfigPtr) ToDataSourceMetricsConfigPtrOutputWithContext(ctx context.Context) DataSourceMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceMetricsConfigPtrOutput)
}

// Enables or disables enhanced resolver metrics for specified resolvers. Note that “MetricsConfig“ won't be used unless the “resolverLevelMetricsBehavior“ value is set to “PER_RESOLVER_METRICS“. If the “resolverLevelMetricsBehavior“ is set to “FULL_REQUEST_RESOLVER_METRICS“ instead, “MetricsConfig“ will be ignored. However, you can still set its value.
type ResolverMetricsConfig string

const (
	ResolverMetricsConfigEnabled  = ResolverMetricsConfig("ENABLED")
	ResolverMetricsConfigDisabled = ResolverMetricsConfig("DISABLED")
)

func (ResolverMetricsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverMetricsConfig)(nil)).Elem()
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput {
	return pulumi.ToOutput(e).(ResolverMetricsConfigOutput)
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigOutputWithContext(ctx context.Context) ResolverMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResolverMetricsConfigOutput)
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return e.ToResolverMetricsConfigPtrOutputWithContext(context.Background())
}

func (e ResolverMetricsConfig) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return ResolverMetricsConfig(e).ToResolverMetricsConfigOutputWithContext(ctx).ToResolverMetricsConfigPtrOutputWithContext(ctx)
}

func (e ResolverMetricsConfig) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverMetricsConfig) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResolverMetricsConfig) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResolverMetricsConfig) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResolverMetricsConfigOutput struct{ *pulumi.OutputState }

func (ResolverMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverMetricsConfig)(nil)).Elem()
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput {
	return o
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigOutputWithContext(ctx context.Context) ResolverMetricsConfigOutput {
	return o
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return o.ToResolverMetricsConfigPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverMetricsConfig) *ResolverMetricsConfig {
		return &v
	}).(ResolverMetricsConfigPtrOutput)
}

func (o ResolverMetricsConfigOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverMetricsConfig) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResolverMetricsConfigOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResolverMetricsConfig) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResolverMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverMetricsConfig)(nil)).Elem()
}

func (o ResolverMetricsConfigPtrOutput) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return o
}

func (o ResolverMetricsConfigPtrOutput) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return o
}

func (o ResolverMetricsConfigPtrOutput) Elem() ResolverMetricsConfigOutput {
	return o.ApplyT(func(v *ResolverMetricsConfig) ResolverMetricsConfig {
		if v != nil {
			return *v
		}
		var ret ResolverMetricsConfig
		return ret
	}).(ResolverMetricsConfigOutput)
}

func (o ResolverMetricsConfigPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResolverMetricsConfigPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResolverMetricsConfig) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResolverMetricsConfigInput is an input type that accepts values of the ResolverMetricsConfig enum
// A concrete instance of `ResolverMetricsConfigInput` can be one of the following:
//
//	ResolverMetricsConfigEnabled
//	ResolverMetricsConfigDisabled
type ResolverMetricsConfigInput interface {
	pulumi.Input

	ToResolverMetricsConfigOutput() ResolverMetricsConfigOutput
	ToResolverMetricsConfigOutputWithContext(context.Context) ResolverMetricsConfigOutput
}

var resolverMetricsConfigPtrType = reflect.TypeOf((**ResolverMetricsConfig)(nil)).Elem()

type ResolverMetricsConfigPtrInput interface {
	pulumi.Input

	ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput
	ToResolverMetricsConfigPtrOutputWithContext(context.Context) ResolverMetricsConfigPtrOutput
}

type resolverMetricsConfigPtr string

func ResolverMetricsConfigPtr(v string) ResolverMetricsConfigPtrInput {
	return (*resolverMetricsConfigPtr)(&v)
}

func (*resolverMetricsConfigPtr) ElementType() reflect.Type {
	return resolverMetricsConfigPtrType
}

func (in *resolverMetricsConfigPtr) ToResolverMetricsConfigPtrOutput() ResolverMetricsConfigPtrOutput {
	return pulumi.ToOutput(in).(ResolverMetricsConfigPtrOutput)
}

func (in *resolverMetricsConfigPtr) ToResolverMetricsConfigPtrOutputWithContext(ctx context.Context) ResolverMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResolverMetricsConfigPtrOutput)
}

// Configuration of the merged behavior for the association. For example when it could be auto or has to be manual.
type SourceApiAssociationConfigMergeType string

const (
	SourceApiAssociationConfigMergeTypeAutoMerge   = SourceApiAssociationConfigMergeType("AUTO_MERGE")
	SourceApiAssociationConfigMergeTypeManualMerge = SourceApiAssociationConfigMergeType("MANUAL_MERGE")
)

func (SourceApiAssociationConfigMergeType) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput {
	return pulumi.ToOutput(e).(SourceApiAssociationConfigMergeTypeOutput)
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceApiAssociationConfigMergeTypeOutput)
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return e.ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Background())
}

func (e SourceApiAssociationConfigMergeType) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return SourceApiAssociationConfigMergeType(e).ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx).ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx)
}

func (e SourceApiAssociationConfigMergeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceApiAssociationConfigMergeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceApiAssociationConfigMergeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceApiAssociationConfigMergeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceApiAssociationConfigMergeTypeOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigMergeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypeOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypeOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationConfigMergeType) *SourceApiAssociationConfigMergeType {
		return &v
	}).(SourceApiAssociationConfigMergeTypePtrOutput)
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationConfigMergeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationConfigMergeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceApiAssociationConfigMergeTypePtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationConfigMergeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationConfigMergeType)(nil)).Elem()
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return o
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) Elem() SourceApiAssociationConfigMergeTypeOutput {
	return o.ApplyT(func(v *SourceApiAssociationConfigMergeType) SourceApiAssociationConfigMergeType {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationConfigMergeType
		return ret
	}).(SourceApiAssociationConfigMergeTypeOutput)
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationConfigMergeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceApiAssociationConfigMergeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceApiAssociationConfigMergeTypeInput is an input type that accepts values of the SourceApiAssociationConfigMergeType enum
// A concrete instance of `SourceApiAssociationConfigMergeTypeInput` can be one of the following:
//
//	SourceApiAssociationConfigMergeTypeAutoMerge
//	SourceApiAssociationConfigMergeTypeManualMerge
type SourceApiAssociationConfigMergeTypeInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigMergeTypeOutput() SourceApiAssociationConfigMergeTypeOutput
	ToSourceApiAssociationConfigMergeTypeOutputWithContext(context.Context) SourceApiAssociationConfigMergeTypeOutput
}

var sourceApiAssociationConfigMergeTypePtrType = reflect.TypeOf((**SourceApiAssociationConfigMergeType)(nil)).Elem()

type SourceApiAssociationConfigMergeTypePtrInput interface {
	pulumi.Input

	ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput
	ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(context.Context) SourceApiAssociationConfigMergeTypePtrOutput
}

type sourceApiAssociationConfigMergeTypePtr string

func SourceApiAssociationConfigMergeTypePtr(v string) SourceApiAssociationConfigMergeTypePtrInput {
	return (*sourceApiAssociationConfigMergeTypePtr)(&v)
}

func (*sourceApiAssociationConfigMergeTypePtr) ElementType() reflect.Type {
	return sourceApiAssociationConfigMergeTypePtrType
}

func (in *sourceApiAssociationConfigMergeTypePtr) ToSourceApiAssociationConfigMergeTypePtrOutput() SourceApiAssociationConfigMergeTypePtrOutput {
	return pulumi.ToOutput(in).(SourceApiAssociationConfigMergeTypePtrOutput)
}

func (in *sourceApiAssociationConfigMergeTypePtr) ToSourceApiAssociationConfigMergeTypePtrOutputWithContext(ctx context.Context) SourceApiAssociationConfigMergeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceApiAssociationConfigMergeTypePtrOutput)
}

// Current status of SourceApiAssociation.
type SourceApiAssociationStatus string

const (
	SourceApiAssociationStatusMergeScheduled          = SourceApiAssociationStatus("MERGE_SCHEDULED")
	SourceApiAssociationStatusMergeFailed             = SourceApiAssociationStatus("MERGE_FAILED")
	SourceApiAssociationStatusMergeSuccess            = SourceApiAssociationStatus("MERGE_SUCCESS")
	SourceApiAssociationStatusMergeInProgress         = SourceApiAssociationStatus("MERGE_IN_PROGRESS")
	SourceApiAssociationStatusAutoMergeScheduleFailed = SourceApiAssociationStatus("AUTO_MERGE_SCHEDULE_FAILED")
	SourceApiAssociationStatusDeletionScheduled       = SourceApiAssociationStatus("DELETION_SCHEDULED")
	SourceApiAssociationStatusDeletionInProgress      = SourceApiAssociationStatus("DELETION_IN_PROGRESS")
	SourceApiAssociationStatusDeletionFailed          = SourceApiAssociationStatus("DELETION_FAILED")
)

type SourceApiAssociationStatusOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationStatus)(nil)).Elem()
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusOutput() SourceApiAssociationStatusOutput {
	return o
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusOutputWithContext(ctx context.Context) SourceApiAssociationStatusOutput {
	return o
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusPtrOutput() SourceApiAssociationStatusPtrOutput {
	return o.ToSourceApiAssociationStatusPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToSourceApiAssociationStatusPtrOutputWithContext(ctx context.Context) SourceApiAssociationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationStatus) *SourceApiAssociationStatus {
		return &v
	}).(SourceApiAssociationStatusPtrOutput)
}

func (o SourceApiAssociationStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceApiAssociationStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceApiAssociationStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceApiAssociationStatusPtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationStatus)(nil)).Elem()
}

func (o SourceApiAssociationStatusPtrOutput) ToSourceApiAssociationStatusPtrOutput() SourceApiAssociationStatusPtrOutput {
	return o
}

func (o SourceApiAssociationStatusPtrOutput) ToSourceApiAssociationStatusPtrOutputWithContext(ctx context.Context) SourceApiAssociationStatusPtrOutput {
	return o
}

func (o SourceApiAssociationStatusPtrOutput) Elem() SourceApiAssociationStatusOutput {
	return o.ApplyT(func(v *SourceApiAssociationStatus) SourceApiAssociationStatus {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationStatus
		return ret
	}).(SourceApiAssociationStatusOutput)
}

func (o SourceApiAssociationStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceApiAssociationStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAuthenticationTypeInput)(nil)).Elem(), ApiAuthenticationType("AMAZON_COGNITO_USER_POOLS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAuthenticationTypePtrInput)(nil)).Elem(), ApiAuthenticationType("AMAZON_COGNITO_USER_POOLS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventLogLevelInput)(nil)).Elem(), ApiEventLogLevel("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventLogLevelPtrInput)(nil)).Elem(), ApiEventLogLevel("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMetricsConfigInput)(nil)).Elem(), DataSourceMetricsConfig("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMetricsConfigPtrInput)(nil)).Elem(), DataSourceMetricsConfig("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverMetricsConfigInput)(nil)).Elem(), ResolverMetricsConfig("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverMetricsConfigPtrInput)(nil)).Elem(), ResolverMetricsConfig("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigMergeTypeInput)(nil)).Elem(), SourceApiAssociationConfigMergeType("AUTO_MERGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationConfigMergeTypePtrInput)(nil)).Elem(), SourceApiAssociationConfigMergeType("AUTO_MERGE"))
	pulumi.RegisterOutputType(ApiAuthenticationTypeOutput{})
	pulumi.RegisterOutputType(ApiAuthenticationTypePtrOutput{})
	pulumi.RegisterOutputType(ApiEventLogLevelOutput{})
	pulumi.RegisterOutputType(ApiEventLogLevelPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMetricsConfigOutput{})
	pulumi.RegisterOutputType(DataSourceMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverMetricsConfigOutput{})
	pulumi.RegisterOutputType(ResolverMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigMergeTypeOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationConfigMergeTypePtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationStatusOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationStatusPtrOutput{})
}
