// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AppSync Api
type Api struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the AppSync Api
	ApiArn pulumi.StringOutput `pulumi:"apiArn"`
	// The unique identifier for the AppSync Api generated by the service
	ApiId       pulumi.StringOutput     `pulumi:"apiId"`
	Dns         pulumi.StringMapOutput  `pulumi:"dns"`
	EventConfig ApiEventConfigPtrOutput `pulumi:"eventConfig"`
	// The API name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The owner contact information for an API resource.
	//
	// This field accepts any string input with a length of 0 - 256 characters.
	OwnerContact pulumi.StringPtrOutput `pulumi:"ownerContact"`
	// The tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil {
		args = &ApiArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Api
	err := ctx.RegisterResource("aws-native:appsync:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("aws-native:appsync:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
}

type ApiState struct {
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	EventConfig *ApiEventConfig `pulumi:"eventConfig"`
	// The API name.
	Name *string `pulumi:"name"`
	// The owner contact information for an API resource.
	//
	// This field accepts any string input with a length of 0 - 256 characters.
	OwnerContact *string `pulumi:"ownerContact"`
	// The tags.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	EventConfig ApiEventConfigPtrInput
	// The API name.
	Name pulumi.StringPtrInput
	// The owner contact information for an API resource.
	//
	// This field accepts any string input with a length of 0 - 256 characters.
	OwnerContact pulumi.StringPtrInput
	// The tags.
	Tags aws.TagArrayInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}

type ApiInput interface {
	pulumi.Input

	ToApiOutput() ApiOutput
	ToApiOutputWithContext(ctx context.Context) ApiOutput
}

func (*Api) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (i *Api) ToApiOutput() ApiOutput {
	return i.ToApiOutputWithContext(context.Background())
}

func (i *Api) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOutput)
}

type ApiOutput struct{ *pulumi.OutputState }

func (ApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (o ApiOutput) ToApiOutput() ApiOutput {
	return o
}

func (o ApiOutput) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return o
}

// The Amazon Resource Name (ARN) of the AppSync Api
func (o ApiOutput) ApiArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ApiArn }).(pulumi.StringOutput)
}

// The unique identifier for the AppSync Api generated by the service
func (o ApiOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

func (o ApiOutput) Dns() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Api) pulumi.StringMapOutput { return v.Dns }).(pulumi.StringMapOutput)
}

func (o ApiOutput) EventConfig() ApiEventConfigPtrOutput {
	return o.ApplyT(func(v *Api) ApiEventConfigPtrOutput { return v.EventConfig }).(ApiEventConfigPtrOutput)
}

// The API name.
func (o ApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The owner contact information for an API resource.
//
// This field accepts any string input with a length of 0 - 256 characters.
func (o ApiOutput) OwnerContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.OwnerContact }).(pulumi.StringPtrOutput)
}

// The tags.
func (o ApiOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Api) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiInput)(nil)).Elem(), &Api{})
	pulumi.RegisterOutputType(ApiOutput{})
}
