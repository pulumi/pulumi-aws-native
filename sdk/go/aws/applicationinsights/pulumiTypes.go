// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package applicationinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A CloudWatch alarm to be monitored for the component.
type ApplicationAlarm struct {
	// The name of the CloudWatch alarm to be monitored for the component.
	AlarmName string `pulumi:"alarmName"`
	// Indicates the degree of outage when the alarm goes off.
	Severity *ApplicationAlarmSeverity `pulumi:"severity"`
}

// ApplicationAlarmInput is an input type that accepts ApplicationAlarmArgs and ApplicationAlarmOutput values.
// You can construct a concrete instance of `ApplicationAlarmInput` via:
//
//          ApplicationAlarmArgs{...}
type ApplicationAlarmInput interface {
	pulumi.Input

	ToApplicationAlarmOutput() ApplicationAlarmOutput
	ToApplicationAlarmOutputWithContext(context.Context) ApplicationAlarmOutput
}

// A CloudWatch alarm to be monitored for the component.
type ApplicationAlarmArgs struct {
	// The name of the CloudWatch alarm to be monitored for the component.
	AlarmName pulumi.StringInput `pulumi:"alarmName"`
	// Indicates the degree of outage when the alarm goes off.
	Severity ApplicationAlarmSeverityPtrInput `pulumi:"severity"`
}

func (ApplicationAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAlarm)(nil)).Elem()
}

func (i ApplicationAlarmArgs) ToApplicationAlarmOutput() ApplicationAlarmOutput {
	return i.ToApplicationAlarmOutputWithContext(context.Background())
}

func (i ApplicationAlarmArgs) ToApplicationAlarmOutputWithContext(ctx context.Context) ApplicationAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAlarmOutput)
}

// ApplicationAlarmArrayInput is an input type that accepts ApplicationAlarmArray and ApplicationAlarmArrayOutput values.
// You can construct a concrete instance of `ApplicationAlarmArrayInput` via:
//
//          ApplicationAlarmArray{ ApplicationAlarmArgs{...} }
type ApplicationAlarmArrayInput interface {
	pulumi.Input

	ToApplicationAlarmArrayOutput() ApplicationAlarmArrayOutput
	ToApplicationAlarmArrayOutputWithContext(context.Context) ApplicationAlarmArrayOutput
}

type ApplicationAlarmArray []ApplicationAlarmInput

func (ApplicationAlarmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAlarm)(nil)).Elem()
}

func (i ApplicationAlarmArray) ToApplicationAlarmArrayOutput() ApplicationAlarmArrayOutput {
	return i.ToApplicationAlarmArrayOutputWithContext(context.Background())
}

func (i ApplicationAlarmArray) ToApplicationAlarmArrayOutputWithContext(ctx context.Context) ApplicationAlarmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAlarmArrayOutput)
}

// A CloudWatch alarm to be monitored for the component.
type ApplicationAlarmOutput struct{ *pulumi.OutputState }

func (ApplicationAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAlarm)(nil)).Elem()
}

func (o ApplicationAlarmOutput) ToApplicationAlarmOutput() ApplicationAlarmOutput {
	return o
}

func (o ApplicationAlarmOutput) ToApplicationAlarmOutputWithContext(ctx context.Context) ApplicationAlarmOutput {
	return o
}

// The name of the CloudWatch alarm to be monitored for the component.
func (o ApplicationAlarmOutput) AlarmName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAlarm) string { return v.AlarmName }).(pulumi.StringOutput)
}

// Indicates the degree of outage when the alarm goes off.
func (o ApplicationAlarmOutput) Severity() ApplicationAlarmSeverityPtrOutput {
	return o.ApplyT(func(v ApplicationAlarm) *ApplicationAlarmSeverity { return v.Severity }).(ApplicationAlarmSeverityPtrOutput)
}

type ApplicationAlarmArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAlarmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAlarm)(nil)).Elem()
}

func (o ApplicationAlarmArrayOutput) ToApplicationAlarmArrayOutput() ApplicationAlarmArrayOutput {
	return o
}

func (o ApplicationAlarmArrayOutput) ToApplicationAlarmArrayOutputWithContext(ctx context.Context) ApplicationAlarmArrayOutput {
	return o
}

func (o ApplicationAlarmArrayOutput) Index(i pulumi.IntInput) ApplicationAlarmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAlarm {
		return vs[0].([]ApplicationAlarm)[vs[1].(int)]
	}).(ApplicationAlarmOutput)
}

// A metric to be monitored for the component.
type ApplicationAlarmMetric struct {
	// The name of the metric to be monitored for the component.
	AlarmMetricName string `pulumi:"alarmMetricName"`
}

// ApplicationAlarmMetricInput is an input type that accepts ApplicationAlarmMetricArgs and ApplicationAlarmMetricOutput values.
// You can construct a concrete instance of `ApplicationAlarmMetricInput` via:
//
//          ApplicationAlarmMetricArgs{...}
type ApplicationAlarmMetricInput interface {
	pulumi.Input

	ToApplicationAlarmMetricOutput() ApplicationAlarmMetricOutput
	ToApplicationAlarmMetricOutputWithContext(context.Context) ApplicationAlarmMetricOutput
}

// A metric to be monitored for the component.
type ApplicationAlarmMetricArgs struct {
	// The name of the metric to be monitored for the component.
	AlarmMetricName pulumi.StringInput `pulumi:"alarmMetricName"`
}

func (ApplicationAlarmMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAlarmMetric)(nil)).Elem()
}

func (i ApplicationAlarmMetricArgs) ToApplicationAlarmMetricOutput() ApplicationAlarmMetricOutput {
	return i.ToApplicationAlarmMetricOutputWithContext(context.Background())
}

func (i ApplicationAlarmMetricArgs) ToApplicationAlarmMetricOutputWithContext(ctx context.Context) ApplicationAlarmMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAlarmMetricOutput)
}

// ApplicationAlarmMetricArrayInput is an input type that accepts ApplicationAlarmMetricArray and ApplicationAlarmMetricArrayOutput values.
// You can construct a concrete instance of `ApplicationAlarmMetricArrayInput` via:
//
//          ApplicationAlarmMetricArray{ ApplicationAlarmMetricArgs{...} }
type ApplicationAlarmMetricArrayInput interface {
	pulumi.Input

	ToApplicationAlarmMetricArrayOutput() ApplicationAlarmMetricArrayOutput
	ToApplicationAlarmMetricArrayOutputWithContext(context.Context) ApplicationAlarmMetricArrayOutput
}

type ApplicationAlarmMetricArray []ApplicationAlarmMetricInput

func (ApplicationAlarmMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAlarmMetric)(nil)).Elem()
}

func (i ApplicationAlarmMetricArray) ToApplicationAlarmMetricArrayOutput() ApplicationAlarmMetricArrayOutput {
	return i.ToApplicationAlarmMetricArrayOutputWithContext(context.Background())
}

func (i ApplicationAlarmMetricArray) ToApplicationAlarmMetricArrayOutputWithContext(ctx context.Context) ApplicationAlarmMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAlarmMetricArrayOutput)
}

// A metric to be monitored for the component.
type ApplicationAlarmMetricOutput struct{ *pulumi.OutputState }

func (ApplicationAlarmMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAlarmMetric)(nil)).Elem()
}

func (o ApplicationAlarmMetricOutput) ToApplicationAlarmMetricOutput() ApplicationAlarmMetricOutput {
	return o
}

func (o ApplicationAlarmMetricOutput) ToApplicationAlarmMetricOutputWithContext(ctx context.Context) ApplicationAlarmMetricOutput {
	return o
}

// The name of the metric to be monitored for the component.
func (o ApplicationAlarmMetricOutput) AlarmMetricName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAlarmMetric) string { return v.AlarmMetricName }).(pulumi.StringOutput)
}

type ApplicationAlarmMetricArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAlarmMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAlarmMetric)(nil)).Elem()
}

func (o ApplicationAlarmMetricArrayOutput) ToApplicationAlarmMetricArrayOutput() ApplicationAlarmMetricArrayOutput {
	return o
}

func (o ApplicationAlarmMetricArrayOutput) ToApplicationAlarmMetricArrayOutputWithContext(ctx context.Context) ApplicationAlarmMetricArrayOutput {
	return o
}

func (o ApplicationAlarmMetricArrayOutput) Index(i pulumi.IntInput) ApplicationAlarmMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAlarmMetric {
		return vs[0].([]ApplicationAlarmMetric)[vs[1].(int)]
	}).(ApplicationAlarmMetricOutput)
}

// The configuration settings of the component.
type ApplicationComponentConfiguration struct {
	// The configuration settings
	ConfigurationDetails *ApplicationConfigurationDetails `pulumi:"configurationDetails"`
	// Sub component configurations of the component.
	SubComponentTypeConfigurations []ApplicationSubComponentTypeConfiguration `pulumi:"subComponentTypeConfigurations"`
}

// ApplicationComponentConfigurationInput is an input type that accepts ApplicationComponentConfigurationArgs and ApplicationComponentConfigurationOutput values.
// You can construct a concrete instance of `ApplicationComponentConfigurationInput` via:
//
//          ApplicationComponentConfigurationArgs{...}
type ApplicationComponentConfigurationInput interface {
	pulumi.Input

	ToApplicationComponentConfigurationOutput() ApplicationComponentConfigurationOutput
	ToApplicationComponentConfigurationOutputWithContext(context.Context) ApplicationComponentConfigurationOutput
}

// The configuration settings of the component.
type ApplicationComponentConfigurationArgs struct {
	// The configuration settings
	ConfigurationDetails ApplicationConfigurationDetailsPtrInput `pulumi:"configurationDetails"`
	// Sub component configurations of the component.
	SubComponentTypeConfigurations ApplicationSubComponentTypeConfigurationArrayInput `pulumi:"subComponentTypeConfigurations"`
}

func (ApplicationComponentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationComponentConfiguration)(nil)).Elem()
}

func (i ApplicationComponentConfigurationArgs) ToApplicationComponentConfigurationOutput() ApplicationComponentConfigurationOutput {
	return i.ToApplicationComponentConfigurationOutputWithContext(context.Background())
}

func (i ApplicationComponentConfigurationArgs) ToApplicationComponentConfigurationOutputWithContext(ctx context.Context) ApplicationComponentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationComponentConfigurationOutput)
}

func (i ApplicationComponentConfigurationArgs) ToApplicationComponentConfigurationPtrOutput() ApplicationComponentConfigurationPtrOutput {
	return i.ToApplicationComponentConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationComponentConfigurationArgs) ToApplicationComponentConfigurationPtrOutputWithContext(ctx context.Context) ApplicationComponentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationComponentConfigurationOutput).ToApplicationComponentConfigurationPtrOutputWithContext(ctx)
}

// ApplicationComponentConfigurationPtrInput is an input type that accepts ApplicationComponentConfigurationArgs, ApplicationComponentConfigurationPtr and ApplicationComponentConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationComponentConfigurationPtrInput` via:
//
//          ApplicationComponentConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationComponentConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationComponentConfigurationPtrOutput() ApplicationComponentConfigurationPtrOutput
	ToApplicationComponentConfigurationPtrOutputWithContext(context.Context) ApplicationComponentConfigurationPtrOutput
}

type applicationComponentConfigurationPtrType ApplicationComponentConfigurationArgs

func ApplicationComponentConfigurationPtr(v *ApplicationComponentConfigurationArgs) ApplicationComponentConfigurationPtrInput {
	return (*applicationComponentConfigurationPtrType)(v)
}

func (*applicationComponentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationComponentConfiguration)(nil)).Elem()
}

func (i *applicationComponentConfigurationPtrType) ToApplicationComponentConfigurationPtrOutput() ApplicationComponentConfigurationPtrOutput {
	return i.ToApplicationComponentConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationComponentConfigurationPtrType) ToApplicationComponentConfigurationPtrOutputWithContext(ctx context.Context) ApplicationComponentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationComponentConfigurationPtrOutput)
}

// The configuration settings of the component.
type ApplicationComponentConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationComponentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationComponentConfiguration)(nil)).Elem()
}

func (o ApplicationComponentConfigurationOutput) ToApplicationComponentConfigurationOutput() ApplicationComponentConfigurationOutput {
	return o
}

func (o ApplicationComponentConfigurationOutput) ToApplicationComponentConfigurationOutputWithContext(ctx context.Context) ApplicationComponentConfigurationOutput {
	return o
}

func (o ApplicationComponentConfigurationOutput) ToApplicationComponentConfigurationPtrOutput() ApplicationComponentConfigurationPtrOutput {
	return o.ToApplicationComponentConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationComponentConfigurationOutput) ToApplicationComponentConfigurationPtrOutputWithContext(ctx context.Context) ApplicationComponentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationComponentConfiguration) *ApplicationComponentConfiguration {
		return &v
	}).(ApplicationComponentConfigurationPtrOutput)
}

// The configuration settings
func (o ApplicationComponentConfigurationOutput) ConfigurationDetails() ApplicationConfigurationDetailsPtrOutput {
	return o.ApplyT(func(v ApplicationComponentConfiguration) *ApplicationConfigurationDetails {
		return v.ConfigurationDetails
	}).(ApplicationConfigurationDetailsPtrOutput)
}

// Sub component configurations of the component.
func (o ApplicationComponentConfigurationOutput) SubComponentTypeConfigurations() ApplicationSubComponentTypeConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationComponentConfiguration) []ApplicationSubComponentTypeConfiguration {
		return v.SubComponentTypeConfigurations
	}).(ApplicationSubComponentTypeConfigurationArrayOutput)
}

type ApplicationComponentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationComponentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationComponentConfiguration)(nil)).Elem()
}

func (o ApplicationComponentConfigurationPtrOutput) ToApplicationComponentConfigurationPtrOutput() ApplicationComponentConfigurationPtrOutput {
	return o
}

func (o ApplicationComponentConfigurationPtrOutput) ToApplicationComponentConfigurationPtrOutputWithContext(ctx context.Context) ApplicationComponentConfigurationPtrOutput {
	return o
}

func (o ApplicationComponentConfigurationPtrOutput) Elem() ApplicationComponentConfigurationOutput {
	return o.ApplyT(func(v *ApplicationComponentConfiguration) ApplicationComponentConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationComponentConfiguration
		return ret
	}).(ApplicationComponentConfigurationOutput)
}

// The configuration settings
func (o ApplicationComponentConfigurationPtrOutput) ConfigurationDetails() ApplicationConfigurationDetailsPtrOutput {
	return o.ApplyT(func(v *ApplicationComponentConfiguration) *ApplicationConfigurationDetails {
		if v == nil {
			return nil
		}
		return v.ConfigurationDetails
	}).(ApplicationConfigurationDetailsPtrOutput)
}

// Sub component configurations of the component.
func (o ApplicationComponentConfigurationPtrOutput) SubComponentTypeConfigurations() ApplicationSubComponentTypeConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationComponentConfiguration) []ApplicationSubComponentTypeConfiguration {
		if v == nil {
			return nil
		}
		return v.SubComponentTypeConfigurations
	}).(ApplicationSubComponentTypeConfigurationArrayOutput)
}

// The monitoring setting of the component.
type ApplicationComponentMonitoringSetting struct {
	// The ARN of the compnonent.
	ComponentARN *string `pulumi:"componentARN"`
	// The component monitoring configuration mode.
	ComponentConfigurationMode ApplicationComponentMonitoringSettingComponentConfigurationMode `pulumi:"componentConfigurationMode"`
	// The name of the component.
	ComponentName *string `pulumi:"componentName"`
	// The monitoring configuration of the component.
	CustomComponentConfiguration *ApplicationComponentConfiguration `pulumi:"customComponentConfiguration"`
	// The overwritten settings on default component monitoring configuration.
	DefaultOverwriteComponentConfiguration *ApplicationComponentConfiguration `pulumi:"defaultOverwriteComponentConfiguration"`
	// The tier of the application component.
	Tier string `pulumi:"tier"`
}

// ApplicationComponentMonitoringSettingInput is an input type that accepts ApplicationComponentMonitoringSettingArgs and ApplicationComponentMonitoringSettingOutput values.
// You can construct a concrete instance of `ApplicationComponentMonitoringSettingInput` via:
//
//          ApplicationComponentMonitoringSettingArgs{...}
type ApplicationComponentMonitoringSettingInput interface {
	pulumi.Input

	ToApplicationComponentMonitoringSettingOutput() ApplicationComponentMonitoringSettingOutput
	ToApplicationComponentMonitoringSettingOutputWithContext(context.Context) ApplicationComponentMonitoringSettingOutput
}

// The monitoring setting of the component.
type ApplicationComponentMonitoringSettingArgs struct {
	// The ARN of the compnonent.
	ComponentARN pulumi.StringPtrInput `pulumi:"componentARN"`
	// The component monitoring configuration mode.
	ComponentConfigurationMode ApplicationComponentMonitoringSettingComponentConfigurationModeInput `pulumi:"componentConfigurationMode"`
	// The name of the component.
	ComponentName pulumi.StringPtrInput `pulumi:"componentName"`
	// The monitoring configuration of the component.
	CustomComponentConfiguration ApplicationComponentConfigurationPtrInput `pulumi:"customComponentConfiguration"`
	// The overwritten settings on default component monitoring configuration.
	DefaultOverwriteComponentConfiguration ApplicationComponentConfigurationPtrInput `pulumi:"defaultOverwriteComponentConfiguration"`
	// The tier of the application component.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ApplicationComponentMonitoringSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationComponentMonitoringSetting)(nil)).Elem()
}

func (i ApplicationComponentMonitoringSettingArgs) ToApplicationComponentMonitoringSettingOutput() ApplicationComponentMonitoringSettingOutput {
	return i.ToApplicationComponentMonitoringSettingOutputWithContext(context.Background())
}

func (i ApplicationComponentMonitoringSettingArgs) ToApplicationComponentMonitoringSettingOutputWithContext(ctx context.Context) ApplicationComponentMonitoringSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationComponentMonitoringSettingOutput)
}

// ApplicationComponentMonitoringSettingArrayInput is an input type that accepts ApplicationComponentMonitoringSettingArray and ApplicationComponentMonitoringSettingArrayOutput values.
// You can construct a concrete instance of `ApplicationComponentMonitoringSettingArrayInput` via:
//
//          ApplicationComponentMonitoringSettingArray{ ApplicationComponentMonitoringSettingArgs{...} }
type ApplicationComponentMonitoringSettingArrayInput interface {
	pulumi.Input

	ToApplicationComponentMonitoringSettingArrayOutput() ApplicationComponentMonitoringSettingArrayOutput
	ToApplicationComponentMonitoringSettingArrayOutputWithContext(context.Context) ApplicationComponentMonitoringSettingArrayOutput
}

type ApplicationComponentMonitoringSettingArray []ApplicationComponentMonitoringSettingInput

func (ApplicationComponentMonitoringSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationComponentMonitoringSetting)(nil)).Elem()
}

func (i ApplicationComponentMonitoringSettingArray) ToApplicationComponentMonitoringSettingArrayOutput() ApplicationComponentMonitoringSettingArrayOutput {
	return i.ToApplicationComponentMonitoringSettingArrayOutputWithContext(context.Background())
}

func (i ApplicationComponentMonitoringSettingArray) ToApplicationComponentMonitoringSettingArrayOutputWithContext(ctx context.Context) ApplicationComponentMonitoringSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationComponentMonitoringSettingArrayOutput)
}

// The monitoring setting of the component.
type ApplicationComponentMonitoringSettingOutput struct{ *pulumi.OutputState }

func (ApplicationComponentMonitoringSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationComponentMonitoringSetting)(nil)).Elem()
}

func (o ApplicationComponentMonitoringSettingOutput) ToApplicationComponentMonitoringSettingOutput() ApplicationComponentMonitoringSettingOutput {
	return o
}

func (o ApplicationComponentMonitoringSettingOutput) ToApplicationComponentMonitoringSettingOutputWithContext(ctx context.Context) ApplicationComponentMonitoringSettingOutput {
	return o
}

// The ARN of the compnonent.
func (o ApplicationComponentMonitoringSettingOutput) ComponentARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) *string { return v.ComponentARN }).(pulumi.StringPtrOutput)
}

// The component monitoring configuration mode.
func (o ApplicationComponentMonitoringSettingOutput) ComponentConfigurationMode() ApplicationComponentMonitoringSettingComponentConfigurationModeOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) ApplicationComponentMonitoringSettingComponentConfigurationMode {
		return v.ComponentConfigurationMode
	}).(ApplicationComponentMonitoringSettingComponentConfigurationModeOutput)
}

// The name of the component.
func (o ApplicationComponentMonitoringSettingOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// The monitoring configuration of the component.
func (o ApplicationComponentMonitoringSettingOutput) CustomComponentConfiguration() ApplicationComponentConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) *ApplicationComponentConfiguration {
		return v.CustomComponentConfiguration
	}).(ApplicationComponentConfigurationPtrOutput)
}

// The overwritten settings on default component monitoring configuration.
func (o ApplicationComponentMonitoringSettingOutput) DefaultOverwriteComponentConfiguration() ApplicationComponentConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) *ApplicationComponentConfiguration {
		return v.DefaultOverwriteComponentConfiguration
	}).(ApplicationComponentConfigurationPtrOutput)
}

// The tier of the application component.
func (o ApplicationComponentMonitoringSettingOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationComponentMonitoringSetting) string { return v.Tier }).(pulumi.StringOutput)
}

type ApplicationComponentMonitoringSettingArrayOutput struct{ *pulumi.OutputState }

func (ApplicationComponentMonitoringSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationComponentMonitoringSetting)(nil)).Elem()
}

func (o ApplicationComponentMonitoringSettingArrayOutput) ToApplicationComponentMonitoringSettingArrayOutput() ApplicationComponentMonitoringSettingArrayOutput {
	return o
}

func (o ApplicationComponentMonitoringSettingArrayOutput) ToApplicationComponentMonitoringSettingArrayOutputWithContext(ctx context.Context) ApplicationComponentMonitoringSettingArrayOutput {
	return o
}

func (o ApplicationComponentMonitoringSettingArrayOutput) Index(i pulumi.IntInput) ApplicationComponentMonitoringSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationComponentMonitoringSetting {
		return vs[0].([]ApplicationComponentMonitoringSetting)[vs[1].(int)]
	}).(ApplicationComponentMonitoringSettingOutput)
}

// The configuration settings.
type ApplicationConfigurationDetails struct {
	// A list of metrics to monitor for the component.
	AlarmMetrics []ApplicationAlarmMetric `pulumi:"alarmMetrics"`
	// A list of alarms to monitor for the component.
	Alarms []ApplicationAlarm `pulumi:"alarms"`
	// The HA cluster Prometheus Exporter settings.
	HAClusterPrometheusExporter *ApplicationHAClusterPrometheusExporter `pulumi:"hAClusterPrometheusExporter"`
	// The HANA DB Prometheus Exporter settings.
	HANAPrometheusExporter *ApplicationHANAPrometheusExporter `pulumi:"hANAPrometheusExporter"`
	// The JMX Prometheus Exporter settings.
	JMXPrometheusExporter *ApplicationJMXPrometheusExporter `pulumi:"jMXPrometheusExporter"`
	// A list of logs to monitor for the component.
	Logs []ApplicationLog `pulumi:"logs"`
	// A list of Windows Events to log.
	WindowsEvents []ApplicationWindowsEvent `pulumi:"windowsEvents"`
}

// ApplicationConfigurationDetailsInput is an input type that accepts ApplicationConfigurationDetailsArgs and ApplicationConfigurationDetailsOutput values.
// You can construct a concrete instance of `ApplicationConfigurationDetailsInput` via:
//
//          ApplicationConfigurationDetailsArgs{...}
type ApplicationConfigurationDetailsInput interface {
	pulumi.Input

	ToApplicationConfigurationDetailsOutput() ApplicationConfigurationDetailsOutput
	ToApplicationConfigurationDetailsOutputWithContext(context.Context) ApplicationConfigurationDetailsOutput
}

// The configuration settings.
type ApplicationConfigurationDetailsArgs struct {
	// A list of metrics to monitor for the component.
	AlarmMetrics ApplicationAlarmMetricArrayInput `pulumi:"alarmMetrics"`
	// A list of alarms to monitor for the component.
	Alarms ApplicationAlarmArrayInput `pulumi:"alarms"`
	// The HA cluster Prometheus Exporter settings.
	HAClusterPrometheusExporter ApplicationHAClusterPrometheusExporterPtrInput `pulumi:"hAClusterPrometheusExporter"`
	// The HANA DB Prometheus Exporter settings.
	HANAPrometheusExporter ApplicationHANAPrometheusExporterPtrInput `pulumi:"hANAPrometheusExporter"`
	// The JMX Prometheus Exporter settings.
	JMXPrometheusExporter ApplicationJMXPrometheusExporterPtrInput `pulumi:"jMXPrometheusExporter"`
	// A list of logs to monitor for the component.
	Logs ApplicationLogArrayInput `pulumi:"logs"`
	// A list of Windows Events to log.
	WindowsEvents ApplicationWindowsEventArrayInput `pulumi:"windowsEvents"`
}

func (ApplicationConfigurationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationDetails)(nil)).Elem()
}

func (i ApplicationConfigurationDetailsArgs) ToApplicationConfigurationDetailsOutput() ApplicationConfigurationDetailsOutput {
	return i.ToApplicationConfigurationDetailsOutputWithContext(context.Background())
}

func (i ApplicationConfigurationDetailsArgs) ToApplicationConfigurationDetailsOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationDetailsOutput)
}

func (i ApplicationConfigurationDetailsArgs) ToApplicationConfigurationDetailsPtrOutput() ApplicationConfigurationDetailsPtrOutput {
	return i.ToApplicationConfigurationDetailsPtrOutputWithContext(context.Background())
}

func (i ApplicationConfigurationDetailsArgs) ToApplicationConfigurationDetailsPtrOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationDetailsOutput).ToApplicationConfigurationDetailsPtrOutputWithContext(ctx)
}

// ApplicationConfigurationDetailsPtrInput is an input type that accepts ApplicationConfigurationDetailsArgs, ApplicationConfigurationDetailsPtr and ApplicationConfigurationDetailsPtrOutput values.
// You can construct a concrete instance of `ApplicationConfigurationDetailsPtrInput` via:
//
//          ApplicationConfigurationDetailsArgs{...}
//
//  or:
//
//          nil
type ApplicationConfigurationDetailsPtrInput interface {
	pulumi.Input

	ToApplicationConfigurationDetailsPtrOutput() ApplicationConfigurationDetailsPtrOutput
	ToApplicationConfigurationDetailsPtrOutputWithContext(context.Context) ApplicationConfigurationDetailsPtrOutput
}

type applicationConfigurationDetailsPtrType ApplicationConfigurationDetailsArgs

func ApplicationConfigurationDetailsPtr(v *ApplicationConfigurationDetailsArgs) ApplicationConfigurationDetailsPtrInput {
	return (*applicationConfigurationDetailsPtrType)(v)
}

func (*applicationConfigurationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationDetails)(nil)).Elem()
}

func (i *applicationConfigurationDetailsPtrType) ToApplicationConfigurationDetailsPtrOutput() ApplicationConfigurationDetailsPtrOutput {
	return i.ToApplicationConfigurationDetailsPtrOutputWithContext(context.Background())
}

func (i *applicationConfigurationDetailsPtrType) ToApplicationConfigurationDetailsPtrOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigurationDetailsPtrOutput)
}

// The configuration settings.
type ApplicationConfigurationDetailsOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationConfigurationDetails)(nil)).Elem()
}

func (o ApplicationConfigurationDetailsOutput) ToApplicationConfigurationDetailsOutput() ApplicationConfigurationDetailsOutput {
	return o
}

func (o ApplicationConfigurationDetailsOutput) ToApplicationConfigurationDetailsOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsOutput {
	return o
}

func (o ApplicationConfigurationDetailsOutput) ToApplicationConfigurationDetailsPtrOutput() ApplicationConfigurationDetailsPtrOutput {
	return o.ToApplicationConfigurationDetailsPtrOutputWithContext(context.Background())
}

func (o ApplicationConfigurationDetailsOutput) ToApplicationConfigurationDetailsPtrOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationConfigurationDetails) *ApplicationConfigurationDetails {
		return &v
	}).(ApplicationConfigurationDetailsPtrOutput)
}

// A list of metrics to monitor for the component.
func (o ApplicationConfigurationDetailsOutput) AlarmMetrics() ApplicationAlarmMetricArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) []ApplicationAlarmMetric { return v.AlarmMetrics }).(ApplicationAlarmMetricArrayOutput)
}

// A list of alarms to monitor for the component.
func (o ApplicationConfigurationDetailsOutput) Alarms() ApplicationAlarmArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) []ApplicationAlarm { return v.Alarms }).(ApplicationAlarmArrayOutput)
}

// The HA cluster Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsOutput) HAClusterPrometheusExporter() ApplicationHAClusterPrometheusExporterPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) *ApplicationHAClusterPrometheusExporter {
		return v.HAClusterPrometheusExporter
	}).(ApplicationHAClusterPrometheusExporterPtrOutput)
}

// The HANA DB Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsOutput) HANAPrometheusExporter() ApplicationHANAPrometheusExporterPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) *ApplicationHANAPrometheusExporter {
		return v.HANAPrometheusExporter
	}).(ApplicationHANAPrometheusExporterPtrOutput)
}

// The JMX Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsOutput) JMXPrometheusExporter() ApplicationJMXPrometheusExporterPtrOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) *ApplicationJMXPrometheusExporter {
		return v.JMXPrometheusExporter
	}).(ApplicationJMXPrometheusExporterPtrOutput)
}

// A list of logs to monitor for the component.
func (o ApplicationConfigurationDetailsOutput) Logs() ApplicationLogArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) []ApplicationLog { return v.Logs }).(ApplicationLogArrayOutput)
}

// A list of Windows Events to log.
func (o ApplicationConfigurationDetailsOutput) WindowsEvents() ApplicationWindowsEventArrayOutput {
	return o.ApplyT(func(v ApplicationConfigurationDetails) []ApplicationWindowsEvent { return v.WindowsEvents }).(ApplicationWindowsEventArrayOutput)
}

type ApplicationConfigurationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationConfigurationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfigurationDetails)(nil)).Elem()
}

func (o ApplicationConfigurationDetailsPtrOutput) ToApplicationConfigurationDetailsPtrOutput() ApplicationConfigurationDetailsPtrOutput {
	return o
}

func (o ApplicationConfigurationDetailsPtrOutput) ToApplicationConfigurationDetailsPtrOutputWithContext(ctx context.Context) ApplicationConfigurationDetailsPtrOutput {
	return o
}

func (o ApplicationConfigurationDetailsPtrOutput) Elem() ApplicationConfigurationDetailsOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) ApplicationConfigurationDetails {
		if v != nil {
			return *v
		}
		var ret ApplicationConfigurationDetails
		return ret
	}).(ApplicationConfigurationDetailsOutput)
}

// A list of metrics to monitor for the component.
func (o ApplicationConfigurationDetailsPtrOutput) AlarmMetrics() ApplicationAlarmMetricArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) []ApplicationAlarmMetric {
		if v == nil {
			return nil
		}
		return v.AlarmMetrics
	}).(ApplicationAlarmMetricArrayOutput)
}

// A list of alarms to monitor for the component.
func (o ApplicationConfigurationDetailsPtrOutput) Alarms() ApplicationAlarmArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) []ApplicationAlarm {
		if v == nil {
			return nil
		}
		return v.Alarms
	}).(ApplicationAlarmArrayOutput)
}

// The HA cluster Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsPtrOutput) HAClusterPrometheusExporter() ApplicationHAClusterPrometheusExporterPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) *ApplicationHAClusterPrometheusExporter {
		if v == nil {
			return nil
		}
		return v.HAClusterPrometheusExporter
	}).(ApplicationHAClusterPrometheusExporterPtrOutput)
}

// The HANA DB Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsPtrOutput) HANAPrometheusExporter() ApplicationHANAPrometheusExporterPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) *ApplicationHANAPrometheusExporter {
		if v == nil {
			return nil
		}
		return v.HANAPrometheusExporter
	}).(ApplicationHANAPrometheusExporterPtrOutput)
}

// The JMX Prometheus Exporter settings.
func (o ApplicationConfigurationDetailsPtrOutput) JMXPrometheusExporter() ApplicationJMXPrometheusExporterPtrOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) *ApplicationJMXPrometheusExporter {
		if v == nil {
			return nil
		}
		return v.JMXPrometheusExporter
	}).(ApplicationJMXPrometheusExporterPtrOutput)
}

// A list of logs to monitor for the component.
func (o ApplicationConfigurationDetailsPtrOutput) Logs() ApplicationLogArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) []ApplicationLog {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(ApplicationLogArrayOutput)
}

// A list of Windows Events to log.
func (o ApplicationConfigurationDetailsPtrOutput) WindowsEvents() ApplicationWindowsEventArrayOutput {
	return o.ApplyT(func(v *ApplicationConfigurationDetails) []ApplicationWindowsEvent {
		if v == nil {
			return nil
		}
		return v.WindowsEvents
	}).(ApplicationWindowsEventArrayOutput)
}

// The custom grouped component.
type ApplicationCustomComponent struct {
	// The name of the component.
	ComponentName string `pulumi:"componentName"`
	// The list of resource ARNs that belong to the component.
	ResourceList []string `pulumi:"resourceList"`
}

// ApplicationCustomComponentInput is an input type that accepts ApplicationCustomComponentArgs and ApplicationCustomComponentOutput values.
// You can construct a concrete instance of `ApplicationCustomComponentInput` via:
//
//          ApplicationCustomComponentArgs{...}
type ApplicationCustomComponentInput interface {
	pulumi.Input

	ToApplicationCustomComponentOutput() ApplicationCustomComponentOutput
	ToApplicationCustomComponentOutputWithContext(context.Context) ApplicationCustomComponentOutput
}

// The custom grouped component.
type ApplicationCustomComponentArgs struct {
	// The name of the component.
	ComponentName pulumi.StringInput `pulumi:"componentName"`
	// The list of resource ARNs that belong to the component.
	ResourceList pulumi.StringArrayInput `pulumi:"resourceList"`
}

func (ApplicationCustomComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCustomComponent)(nil)).Elem()
}

func (i ApplicationCustomComponentArgs) ToApplicationCustomComponentOutput() ApplicationCustomComponentOutput {
	return i.ToApplicationCustomComponentOutputWithContext(context.Background())
}

func (i ApplicationCustomComponentArgs) ToApplicationCustomComponentOutputWithContext(ctx context.Context) ApplicationCustomComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomComponentOutput)
}

// ApplicationCustomComponentArrayInput is an input type that accepts ApplicationCustomComponentArray and ApplicationCustomComponentArrayOutput values.
// You can construct a concrete instance of `ApplicationCustomComponentArrayInput` via:
//
//          ApplicationCustomComponentArray{ ApplicationCustomComponentArgs{...} }
type ApplicationCustomComponentArrayInput interface {
	pulumi.Input

	ToApplicationCustomComponentArrayOutput() ApplicationCustomComponentArrayOutput
	ToApplicationCustomComponentArrayOutputWithContext(context.Context) ApplicationCustomComponentArrayOutput
}

type ApplicationCustomComponentArray []ApplicationCustomComponentInput

func (ApplicationCustomComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationCustomComponent)(nil)).Elem()
}

func (i ApplicationCustomComponentArray) ToApplicationCustomComponentArrayOutput() ApplicationCustomComponentArrayOutput {
	return i.ToApplicationCustomComponentArrayOutputWithContext(context.Background())
}

func (i ApplicationCustomComponentArray) ToApplicationCustomComponentArrayOutputWithContext(ctx context.Context) ApplicationCustomComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomComponentArrayOutput)
}

// The custom grouped component.
type ApplicationCustomComponentOutput struct{ *pulumi.OutputState }

func (ApplicationCustomComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCustomComponent)(nil)).Elem()
}

func (o ApplicationCustomComponentOutput) ToApplicationCustomComponentOutput() ApplicationCustomComponentOutput {
	return o
}

func (o ApplicationCustomComponentOutput) ToApplicationCustomComponentOutputWithContext(ctx context.Context) ApplicationCustomComponentOutput {
	return o
}

// The name of the component.
func (o ApplicationCustomComponentOutput) ComponentName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationCustomComponent) string { return v.ComponentName }).(pulumi.StringOutput)
}

// The list of resource ARNs that belong to the component.
func (o ApplicationCustomComponentOutput) ResourceList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationCustomComponent) []string { return v.ResourceList }).(pulumi.StringArrayOutput)
}

type ApplicationCustomComponentArrayOutput struct{ *pulumi.OutputState }

func (ApplicationCustomComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationCustomComponent)(nil)).Elem()
}

func (o ApplicationCustomComponentArrayOutput) ToApplicationCustomComponentArrayOutput() ApplicationCustomComponentArrayOutput {
	return o
}

func (o ApplicationCustomComponentArrayOutput) ToApplicationCustomComponentArrayOutputWithContext(ctx context.Context) ApplicationCustomComponentArrayOutput {
	return o
}

func (o ApplicationCustomComponentArrayOutput) Index(i pulumi.IntInput) ApplicationCustomComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationCustomComponent {
		return vs[0].([]ApplicationCustomComponent)[vs[1].(int)]
	}).(ApplicationCustomComponentOutput)
}

// The HA cluster Prometheus Exporter settings.
type ApplicationHAClusterPrometheusExporter struct {
	// Prometheus exporter port.
	PrometheusPort *string `pulumi:"prometheusPort"`
}

// ApplicationHAClusterPrometheusExporterInput is an input type that accepts ApplicationHAClusterPrometheusExporterArgs and ApplicationHAClusterPrometheusExporterOutput values.
// You can construct a concrete instance of `ApplicationHAClusterPrometheusExporterInput` via:
//
//          ApplicationHAClusterPrometheusExporterArgs{...}
type ApplicationHAClusterPrometheusExporterInput interface {
	pulumi.Input

	ToApplicationHAClusterPrometheusExporterOutput() ApplicationHAClusterPrometheusExporterOutput
	ToApplicationHAClusterPrometheusExporterOutputWithContext(context.Context) ApplicationHAClusterPrometheusExporterOutput
}

// The HA cluster Prometheus Exporter settings.
type ApplicationHAClusterPrometheusExporterArgs struct {
	// Prometheus exporter port.
	PrometheusPort pulumi.StringPtrInput `pulumi:"prometheusPort"`
}

func (ApplicationHAClusterPrometheusExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHAClusterPrometheusExporter)(nil)).Elem()
}

func (i ApplicationHAClusterPrometheusExporterArgs) ToApplicationHAClusterPrometheusExporterOutput() ApplicationHAClusterPrometheusExporterOutput {
	return i.ToApplicationHAClusterPrometheusExporterOutputWithContext(context.Background())
}

func (i ApplicationHAClusterPrometheusExporterArgs) ToApplicationHAClusterPrometheusExporterOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHAClusterPrometheusExporterOutput)
}

func (i ApplicationHAClusterPrometheusExporterArgs) ToApplicationHAClusterPrometheusExporterPtrOutput() ApplicationHAClusterPrometheusExporterPtrOutput {
	return i.ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i ApplicationHAClusterPrometheusExporterArgs) ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHAClusterPrometheusExporterOutput).ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(ctx)
}

// ApplicationHAClusterPrometheusExporterPtrInput is an input type that accepts ApplicationHAClusterPrometheusExporterArgs, ApplicationHAClusterPrometheusExporterPtr and ApplicationHAClusterPrometheusExporterPtrOutput values.
// You can construct a concrete instance of `ApplicationHAClusterPrometheusExporterPtrInput` via:
//
//          ApplicationHAClusterPrometheusExporterArgs{...}
//
//  or:
//
//          nil
type ApplicationHAClusterPrometheusExporterPtrInput interface {
	pulumi.Input

	ToApplicationHAClusterPrometheusExporterPtrOutput() ApplicationHAClusterPrometheusExporterPtrOutput
	ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(context.Context) ApplicationHAClusterPrometheusExporterPtrOutput
}

type applicationHAClusterPrometheusExporterPtrType ApplicationHAClusterPrometheusExporterArgs

func ApplicationHAClusterPrometheusExporterPtr(v *ApplicationHAClusterPrometheusExporterArgs) ApplicationHAClusterPrometheusExporterPtrInput {
	return (*applicationHAClusterPrometheusExporterPtrType)(v)
}

func (*applicationHAClusterPrometheusExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHAClusterPrometheusExporter)(nil)).Elem()
}

func (i *applicationHAClusterPrometheusExporterPtrType) ToApplicationHAClusterPrometheusExporterPtrOutput() ApplicationHAClusterPrometheusExporterPtrOutput {
	return i.ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i *applicationHAClusterPrometheusExporterPtrType) ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHAClusterPrometheusExporterPtrOutput)
}

// The HA cluster Prometheus Exporter settings.
type ApplicationHAClusterPrometheusExporterOutput struct{ *pulumi.OutputState }

func (ApplicationHAClusterPrometheusExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHAClusterPrometheusExporter)(nil)).Elem()
}

func (o ApplicationHAClusterPrometheusExporterOutput) ToApplicationHAClusterPrometheusExporterOutput() ApplicationHAClusterPrometheusExporterOutput {
	return o
}

func (o ApplicationHAClusterPrometheusExporterOutput) ToApplicationHAClusterPrometheusExporterOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterOutput {
	return o
}

func (o ApplicationHAClusterPrometheusExporterOutput) ToApplicationHAClusterPrometheusExporterPtrOutput() ApplicationHAClusterPrometheusExporterPtrOutput {
	return o.ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(context.Background())
}

func (o ApplicationHAClusterPrometheusExporterOutput) ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHAClusterPrometheusExporter) *ApplicationHAClusterPrometheusExporter {
		return &v
	}).(ApplicationHAClusterPrometheusExporterPtrOutput)
}

// Prometheus exporter port.
func (o ApplicationHAClusterPrometheusExporterOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHAClusterPrometheusExporter) *string { return v.PrometheusPort }).(pulumi.StringPtrOutput)
}

type ApplicationHAClusterPrometheusExporterPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHAClusterPrometheusExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHAClusterPrometheusExporter)(nil)).Elem()
}

func (o ApplicationHAClusterPrometheusExporterPtrOutput) ToApplicationHAClusterPrometheusExporterPtrOutput() ApplicationHAClusterPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationHAClusterPrometheusExporterPtrOutput) ToApplicationHAClusterPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHAClusterPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationHAClusterPrometheusExporterPtrOutput) Elem() ApplicationHAClusterPrometheusExporterOutput {
	return o.ApplyT(func(v *ApplicationHAClusterPrometheusExporter) ApplicationHAClusterPrometheusExporter {
		if v != nil {
			return *v
		}
		var ret ApplicationHAClusterPrometheusExporter
		return ret
	}).(ApplicationHAClusterPrometheusExporterOutput)
}

// Prometheus exporter port.
func (o ApplicationHAClusterPrometheusExporterPtrOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHAClusterPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.PrometheusPort
	}).(pulumi.StringPtrOutput)
}

// The HANA DB Prometheus Exporter settings.
type ApplicationHANAPrometheusExporter struct {
	// A flag which indicates agreeing to install SAP HANA DB client.
	AgreeToInstallHANADBClient *bool `pulumi:"agreeToInstallHANADBClient"`
	// The HANA DB port.
	HANAPort *string `pulumi:"hANAPort"`
	// HANA DB SID.
	HANASID *string `pulumi:"hANASID"`
	// The secret name which manages the HANA DB credentials e.g. {
	//   "username": "<>",
	//   "password": "<>"
	// }.
	HANASecretName *string `pulumi:"hANASecretName"`
	// Prometheus exporter port.
	PrometheusPort *string `pulumi:"prometheusPort"`
}

// ApplicationHANAPrometheusExporterInput is an input type that accepts ApplicationHANAPrometheusExporterArgs and ApplicationHANAPrometheusExporterOutput values.
// You can construct a concrete instance of `ApplicationHANAPrometheusExporterInput` via:
//
//          ApplicationHANAPrometheusExporterArgs{...}
type ApplicationHANAPrometheusExporterInput interface {
	pulumi.Input

	ToApplicationHANAPrometheusExporterOutput() ApplicationHANAPrometheusExporterOutput
	ToApplicationHANAPrometheusExporterOutputWithContext(context.Context) ApplicationHANAPrometheusExporterOutput
}

// The HANA DB Prometheus Exporter settings.
type ApplicationHANAPrometheusExporterArgs struct {
	// A flag which indicates agreeing to install SAP HANA DB client.
	AgreeToInstallHANADBClient pulumi.BoolPtrInput `pulumi:"agreeToInstallHANADBClient"`
	// The HANA DB port.
	HANAPort pulumi.StringPtrInput `pulumi:"hANAPort"`
	// HANA DB SID.
	HANASID pulumi.StringPtrInput `pulumi:"hANASID"`
	// The secret name which manages the HANA DB credentials e.g. {
	//   "username": "<>",
	//   "password": "<>"
	// }.
	HANASecretName pulumi.StringPtrInput `pulumi:"hANASecretName"`
	// Prometheus exporter port.
	PrometheusPort pulumi.StringPtrInput `pulumi:"prometheusPort"`
}

func (ApplicationHANAPrometheusExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHANAPrometheusExporter)(nil)).Elem()
}

func (i ApplicationHANAPrometheusExporterArgs) ToApplicationHANAPrometheusExporterOutput() ApplicationHANAPrometheusExporterOutput {
	return i.ToApplicationHANAPrometheusExporterOutputWithContext(context.Background())
}

func (i ApplicationHANAPrometheusExporterArgs) ToApplicationHANAPrometheusExporterOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHANAPrometheusExporterOutput)
}

func (i ApplicationHANAPrometheusExporterArgs) ToApplicationHANAPrometheusExporterPtrOutput() ApplicationHANAPrometheusExporterPtrOutput {
	return i.ToApplicationHANAPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i ApplicationHANAPrometheusExporterArgs) ToApplicationHANAPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHANAPrometheusExporterOutput).ToApplicationHANAPrometheusExporterPtrOutputWithContext(ctx)
}

// ApplicationHANAPrometheusExporterPtrInput is an input type that accepts ApplicationHANAPrometheusExporterArgs, ApplicationHANAPrometheusExporterPtr and ApplicationHANAPrometheusExporterPtrOutput values.
// You can construct a concrete instance of `ApplicationHANAPrometheusExporterPtrInput` via:
//
//          ApplicationHANAPrometheusExporterArgs{...}
//
//  or:
//
//          nil
type ApplicationHANAPrometheusExporterPtrInput interface {
	pulumi.Input

	ToApplicationHANAPrometheusExporterPtrOutput() ApplicationHANAPrometheusExporterPtrOutput
	ToApplicationHANAPrometheusExporterPtrOutputWithContext(context.Context) ApplicationHANAPrometheusExporterPtrOutput
}

type applicationHANAPrometheusExporterPtrType ApplicationHANAPrometheusExporterArgs

func ApplicationHANAPrometheusExporterPtr(v *ApplicationHANAPrometheusExporterArgs) ApplicationHANAPrometheusExporterPtrInput {
	return (*applicationHANAPrometheusExporterPtrType)(v)
}

func (*applicationHANAPrometheusExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHANAPrometheusExporter)(nil)).Elem()
}

func (i *applicationHANAPrometheusExporterPtrType) ToApplicationHANAPrometheusExporterPtrOutput() ApplicationHANAPrometheusExporterPtrOutput {
	return i.ToApplicationHANAPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i *applicationHANAPrometheusExporterPtrType) ToApplicationHANAPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHANAPrometheusExporterPtrOutput)
}

// The HANA DB Prometheus Exporter settings.
type ApplicationHANAPrometheusExporterOutput struct{ *pulumi.OutputState }

func (ApplicationHANAPrometheusExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHANAPrometheusExporter)(nil)).Elem()
}

func (o ApplicationHANAPrometheusExporterOutput) ToApplicationHANAPrometheusExporterOutput() ApplicationHANAPrometheusExporterOutput {
	return o
}

func (o ApplicationHANAPrometheusExporterOutput) ToApplicationHANAPrometheusExporterOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterOutput {
	return o
}

func (o ApplicationHANAPrometheusExporterOutput) ToApplicationHANAPrometheusExporterPtrOutput() ApplicationHANAPrometheusExporterPtrOutput {
	return o.ToApplicationHANAPrometheusExporterPtrOutputWithContext(context.Background())
}

func (o ApplicationHANAPrometheusExporterOutput) ToApplicationHANAPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHANAPrometheusExporter) *ApplicationHANAPrometheusExporter {
		return &v
	}).(ApplicationHANAPrometheusExporterPtrOutput)
}

// A flag which indicates agreeing to install SAP HANA DB client.
func (o ApplicationHANAPrometheusExporterOutput) AgreeToInstallHANADBClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationHANAPrometheusExporter) *bool { return v.AgreeToInstallHANADBClient }).(pulumi.BoolPtrOutput)
}

// The HANA DB port.
func (o ApplicationHANAPrometheusExporterOutput) HANAPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHANAPrometheusExporter) *string { return v.HANAPort }).(pulumi.StringPtrOutput)
}

// HANA DB SID.
func (o ApplicationHANAPrometheusExporterOutput) HANASID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHANAPrometheusExporter) *string { return v.HANASID }).(pulumi.StringPtrOutput)
}

// The secret name which manages the HANA DB credentials e.g. {
//   "username": "<>",
//   "password": "<>"
// }.
func (o ApplicationHANAPrometheusExporterOutput) HANASecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHANAPrometheusExporter) *string { return v.HANASecretName }).(pulumi.StringPtrOutput)
}

// Prometheus exporter port.
func (o ApplicationHANAPrometheusExporterOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHANAPrometheusExporter) *string { return v.PrometheusPort }).(pulumi.StringPtrOutput)
}

type ApplicationHANAPrometheusExporterPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHANAPrometheusExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHANAPrometheusExporter)(nil)).Elem()
}

func (o ApplicationHANAPrometheusExporterPtrOutput) ToApplicationHANAPrometheusExporterPtrOutput() ApplicationHANAPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationHANAPrometheusExporterPtrOutput) ToApplicationHANAPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationHANAPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationHANAPrometheusExporterPtrOutput) Elem() ApplicationHANAPrometheusExporterOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) ApplicationHANAPrometheusExporter {
		if v != nil {
			return *v
		}
		var ret ApplicationHANAPrometheusExporter
		return ret
	}).(ApplicationHANAPrometheusExporterOutput)
}

// A flag which indicates agreeing to install SAP HANA DB client.
func (o ApplicationHANAPrometheusExporterPtrOutput) AgreeToInstallHANADBClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) *bool {
		if v == nil {
			return nil
		}
		return v.AgreeToInstallHANADBClient
	}).(pulumi.BoolPtrOutput)
}

// The HANA DB port.
func (o ApplicationHANAPrometheusExporterPtrOutput) HANAPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.HANAPort
	}).(pulumi.StringPtrOutput)
}

// HANA DB SID.
func (o ApplicationHANAPrometheusExporterPtrOutput) HANASID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.HANASID
	}).(pulumi.StringPtrOutput)
}

// The secret name which manages the HANA DB credentials e.g. {
//   "username": "<>",
//   "password": "<>"
// }.
func (o ApplicationHANAPrometheusExporterPtrOutput) HANASecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.HANASecretName
	}).(pulumi.StringPtrOutput)
}

// Prometheus exporter port.
func (o ApplicationHANAPrometheusExporterPtrOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHANAPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.PrometheusPort
	}).(pulumi.StringPtrOutput)
}

// The JMX Prometheus Exporter settings.
type ApplicationJMXPrometheusExporter struct {
	// Java agent host port
	HostPort *string `pulumi:"hostPort"`
	// JMX service URL.
	JMXURL *string `pulumi:"jMXURL"`
	// Prometheus exporter port.
	PrometheusPort *string `pulumi:"prometheusPort"`
}

// ApplicationJMXPrometheusExporterInput is an input type that accepts ApplicationJMXPrometheusExporterArgs and ApplicationJMXPrometheusExporterOutput values.
// You can construct a concrete instance of `ApplicationJMXPrometheusExporterInput` via:
//
//          ApplicationJMXPrometheusExporterArgs{...}
type ApplicationJMXPrometheusExporterInput interface {
	pulumi.Input

	ToApplicationJMXPrometheusExporterOutput() ApplicationJMXPrometheusExporterOutput
	ToApplicationJMXPrometheusExporterOutputWithContext(context.Context) ApplicationJMXPrometheusExporterOutput
}

// The JMX Prometheus Exporter settings.
type ApplicationJMXPrometheusExporterArgs struct {
	// Java agent host port
	HostPort pulumi.StringPtrInput `pulumi:"hostPort"`
	// JMX service URL.
	JMXURL pulumi.StringPtrInput `pulumi:"jMXURL"`
	// Prometheus exporter port.
	PrometheusPort pulumi.StringPtrInput `pulumi:"prometheusPort"`
}

func (ApplicationJMXPrometheusExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJMXPrometheusExporter)(nil)).Elem()
}

func (i ApplicationJMXPrometheusExporterArgs) ToApplicationJMXPrometheusExporterOutput() ApplicationJMXPrometheusExporterOutput {
	return i.ToApplicationJMXPrometheusExporterOutputWithContext(context.Background())
}

func (i ApplicationJMXPrometheusExporterArgs) ToApplicationJMXPrometheusExporterOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJMXPrometheusExporterOutput)
}

func (i ApplicationJMXPrometheusExporterArgs) ToApplicationJMXPrometheusExporterPtrOutput() ApplicationJMXPrometheusExporterPtrOutput {
	return i.ToApplicationJMXPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i ApplicationJMXPrometheusExporterArgs) ToApplicationJMXPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJMXPrometheusExporterOutput).ToApplicationJMXPrometheusExporterPtrOutputWithContext(ctx)
}

// ApplicationJMXPrometheusExporterPtrInput is an input type that accepts ApplicationJMXPrometheusExporterArgs, ApplicationJMXPrometheusExporterPtr and ApplicationJMXPrometheusExporterPtrOutput values.
// You can construct a concrete instance of `ApplicationJMXPrometheusExporterPtrInput` via:
//
//          ApplicationJMXPrometheusExporterArgs{...}
//
//  or:
//
//          nil
type ApplicationJMXPrometheusExporterPtrInput interface {
	pulumi.Input

	ToApplicationJMXPrometheusExporterPtrOutput() ApplicationJMXPrometheusExporterPtrOutput
	ToApplicationJMXPrometheusExporterPtrOutputWithContext(context.Context) ApplicationJMXPrometheusExporterPtrOutput
}

type applicationJMXPrometheusExporterPtrType ApplicationJMXPrometheusExporterArgs

func ApplicationJMXPrometheusExporterPtr(v *ApplicationJMXPrometheusExporterArgs) ApplicationJMXPrometheusExporterPtrInput {
	return (*applicationJMXPrometheusExporterPtrType)(v)
}

func (*applicationJMXPrometheusExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJMXPrometheusExporter)(nil)).Elem()
}

func (i *applicationJMXPrometheusExporterPtrType) ToApplicationJMXPrometheusExporterPtrOutput() ApplicationJMXPrometheusExporterPtrOutput {
	return i.ToApplicationJMXPrometheusExporterPtrOutputWithContext(context.Background())
}

func (i *applicationJMXPrometheusExporterPtrType) ToApplicationJMXPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJMXPrometheusExporterPtrOutput)
}

// The JMX Prometheus Exporter settings.
type ApplicationJMXPrometheusExporterOutput struct{ *pulumi.OutputState }

func (ApplicationJMXPrometheusExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJMXPrometheusExporter)(nil)).Elem()
}

func (o ApplicationJMXPrometheusExporterOutput) ToApplicationJMXPrometheusExporterOutput() ApplicationJMXPrometheusExporterOutput {
	return o
}

func (o ApplicationJMXPrometheusExporterOutput) ToApplicationJMXPrometheusExporterOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterOutput {
	return o
}

func (o ApplicationJMXPrometheusExporterOutput) ToApplicationJMXPrometheusExporterPtrOutput() ApplicationJMXPrometheusExporterPtrOutput {
	return o.ToApplicationJMXPrometheusExporterPtrOutputWithContext(context.Background())
}

func (o ApplicationJMXPrometheusExporterOutput) ToApplicationJMXPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationJMXPrometheusExporter) *ApplicationJMXPrometheusExporter {
		return &v
	}).(ApplicationJMXPrometheusExporterPtrOutput)
}

// Java agent host port
func (o ApplicationJMXPrometheusExporterOutput) HostPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJMXPrometheusExporter) *string { return v.HostPort }).(pulumi.StringPtrOutput)
}

// JMX service URL.
func (o ApplicationJMXPrometheusExporterOutput) JMXURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJMXPrometheusExporter) *string { return v.JMXURL }).(pulumi.StringPtrOutput)
}

// Prometheus exporter port.
func (o ApplicationJMXPrometheusExporterOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationJMXPrometheusExporter) *string { return v.PrometheusPort }).(pulumi.StringPtrOutput)
}

type ApplicationJMXPrometheusExporterPtrOutput struct{ *pulumi.OutputState }

func (ApplicationJMXPrometheusExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJMXPrometheusExporter)(nil)).Elem()
}

func (o ApplicationJMXPrometheusExporterPtrOutput) ToApplicationJMXPrometheusExporterPtrOutput() ApplicationJMXPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationJMXPrometheusExporterPtrOutput) ToApplicationJMXPrometheusExporterPtrOutputWithContext(ctx context.Context) ApplicationJMXPrometheusExporterPtrOutput {
	return o
}

func (o ApplicationJMXPrometheusExporterPtrOutput) Elem() ApplicationJMXPrometheusExporterOutput {
	return o.ApplyT(func(v *ApplicationJMXPrometheusExporter) ApplicationJMXPrometheusExporter {
		if v != nil {
			return *v
		}
		var ret ApplicationJMXPrometheusExporter
		return ret
	}).(ApplicationJMXPrometheusExporterOutput)
}

// Java agent host port
func (o ApplicationJMXPrometheusExporterPtrOutput) HostPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJMXPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.HostPort
	}).(pulumi.StringPtrOutput)
}

// JMX service URL.
func (o ApplicationJMXPrometheusExporterPtrOutput) JMXURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJMXPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.JMXURL
	}).(pulumi.StringPtrOutput)
}

// Prometheus exporter port.
func (o ApplicationJMXPrometheusExporterPtrOutput) PrometheusPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJMXPrometheusExporter) *string {
		if v == nil {
			return nil
		}
		return v.PrometheusPort
	}).(pulumi.StringPtrOutput)
}

// A log to be monitored for the component.
type ApplicationLog struct {
	// The type of encoding of the logs to be monitored.
	Encoding *ApplicationLogEncoding `pulumi:"encoding"`
	// The CloudWatch log group name to be associated to the monitored log.
	LogGroupName *string `pulumi:"logGroupName"`
	// The path of the logs to be monitored.
	LogPath *string `pulumi:"logPath"`
	// The log type decides the log patterns against which Application Insights analyzes the log.
	LogType string `pulumi:"logType"`
	// The name of the log pattern set.
	PatternSet *string `pulumi:"patternSet"`
}

// ApplicationLogInput is an input type that accepts ApplicationLogArgs and ApplicationLogOutput values.
// You can construct a concrete instance of `ApplicationLogInput` via:
//
//          ApplicationLogArgs{...}
type ApplicationLogInput interface {
	pulumi.Input

	ToApplicationLogOutput() ApplicationLogOutput
	ToApplicationLogOutputWithContext(context.Context) ApplicationLogOutput
}

// A log to be monitored for the component.
type ApplicationLogArgs struct {
	// The type of encoding of the logs to be monitored.
	Encoding ApplicationLogEncodingPtrInput `pulumi:"encoding"`
	// The CloudWatch log group name to be associated to the monitored log.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The path of the logs to be monitored.
	LogPath pulumi.StringPtrInput `pulumi:"logPath"`
	// The log type decides the log patterns against which Application Insights analyzes the log.
	LogType pulumi.StringInput `pulumi:"logType"`
	// The name of the log pattern set.
	PatternSet pulumi.StringPtrInput `pulumi:"patternSet"`
}

func (ApplicationLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLog)(nil)).Elem()
}

func (i ApplicationLogArgs) ToApplicationLogOutput() ApplicationLogOutput {
	return i.ToApplicationLogOutputWithContext(context.Background())
}

func (i ApplicationLogArgs) ToApplicationLogOutputWithContext(ctx context.Context) ApplicationLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogOutput)
}

// ApplicationLogArrayInput is an input type that accepts ApplicationLogArray and ApplicationLogArrayOutput values.
// You can construct a concrete instance of `ApplicationLogArrayInput` via:
//
//          ApplicationLogArray{ ApplicationLogArgs{...} }
type ApplicationLogArrayInput interface {
	pulumi.Input

	ToApplicationLogArrayOutput() ApplicationLogArrayOutput
	ToApplicationLogArrayOutputWithContext(context.Context) ApplicationLogArrayOutput
}

type ApplicationLogArray []ApplicationLogInput

func (ApplicationLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLog)(nil)).Elem()
}

func (i ApplicationLogArray) ToApplicationLogArrayOutput() ApplicationLogArrayOutput {
	return i.ToApplicationLogArrayOutputWithContext(context.Background())
}

func (i ApplicationLogArray) ToApplicationLogArrayOutputWithContext(ctx context.Context) ApplicationLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogArrayOutput)
}

// A log to be monitored for the component.
type ApplicationLogOutput struct{ *pulumi.OutputState }

func (ApplicationLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLog)(nil)).Elem()
}

func (o ApplicationLogOutput) ToApplicationLogOutput() ApplicationLogOutput {
	return o
}

func (o ApplicationLogOutput) ToApplicationLogOutputWithContext(ctx context.Context) ApplicationLogOutput {
	return o
}

// The type of encoding of the logs to be monitored.
func (o ApplicationLogOutput) Encoding() ApplicationLogEncodingPtrOutput {
	return o.ApplyT(func(v ApplicationLog) *ApplicationLogEncoding { return v.Encoding }).(ApplicationLogEncodingPtrOutput)
}

// The CloudWatch log group name to be associated to the monitored log.
func (o ApplicationLogOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLog) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The path of the logs to be monitored.
func (o ApplicationLogOutput) LogPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLog) *string { return v.LogPath }).(pulumi.StringPtrOutput)
}

// The log type decides the log patterns against which Application Insights analyzes the log.
func (o ApplicationLogOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLog) string { return v.LogType }).(pulumi.StringOutput)
}

// The name of the log pattern set.
func (o ApplicationLogOutput) PatternSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLog) *string { return v.PatternSet }).(pulumi.StringPtrOutput)
}

type ApplicationLogArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLog)(nil)).Elem()
}

func (o ApplicationLogArrayOutput) ToApplicationLogArrayOutput() ApplicationLogArrayOutput {
	return o
}

func (o ApplicationLogArrayOutput) ToApplicationLogArrayOutputWithContext(ctx context.Context) ApplicationLogArrayOutput {
	return o
}

func (o ApplicationLogArrayOutput) Index(i pulumi.IntInput) ApplicationLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLog {
		return vs[0].([]ApplicationLog)[vs[1].(int)]
	}).(ApplicationLogOutput)
}

// The log pattern.
type ApplicationLogPattern struct {
	// The log pattern.
	Pattern string `pulumi:"pattern"`
	// The name of the log pattern.
	PatternName string `pulumi:"patternName"`
	// Rank of the log pattern.
	Rank int `pulumi:"rank"`
}

// ApplicationLogPatternInput is an input type that accepts ApplicationLogPatternArgs and ApplicationLogPatternOutput values.
// You can construct a concrete instance of `ApplicationLogPatternInput` via:
//
//          ApplicationLogPatternArgs{...}
type ApplicationLogPatternInput interface {
	pulumi.Input

	ToApplicationLogPatternOutput() ApplicationLogPatternOutput
	ToApplicationLogPatternOutputWithContext(context.Context) ApplicationLogPatternOutput
}

// The log pattern.
type ApplicationLogPatternArgs struct {
	// The log pattern.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// The name of the log pattern.
	PatternName pulumi.StringInput `pulumi:"patternName"`
	// Rank of the log pattern.
	Rank pulumi.IntInput `pulumi:"rank"`
}

func (ApplicationLogPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogPattern)(nil)).Elem()
}

func (i ApplicationLogPatternArgs) ToApplicationLogPatternOutput() ApplicationLogPatternOutput {
	return i.ToApplicationLogPatternOutputWithContext(context.Background())
}

func (i ApplicationLogPatternArgs) ToApplicationLogPatternOutputWithContext(ctx context.Context) ApplicationLogPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogPatternOutput)
}

// ApplicationLogPatternArrayInput is an input type that accepts ApplicationLogPatternArray and ApplicationLogPatternArrayOutput values.
// You can construct a concrete instance of `ApplicationLogPatternArrayInput` via:
//
//          ApplicationLogPatternArray{ ApplicationLogPatternArgs{...} }
type ApplicationLogPatternArrayInput interface {
	pulumi.Input

	ToApplicationLogPatternArrayOutput() ApplicationLogPatternArrayOutput
	ToApplicationLogPatternArrayOutputWithContext(context.Context) ApplicationLogPatternArrayOutput
}

type ApplicationLogPatternArray []ApplicationLogPatternInput

func (ApplicationLogPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLogPattern)(nil)).Elem()
}

func (i ApplicationLogPatternArray) ToApplicationLogPatternArrayOutput() ApplicationLogPatternArrayOutput {
	return i.ToApplicationLogPatternArrayOutputWithContext(context.Background())
}

func (i ApplicationLogPatternArray) ToApplicationLogPatternArrayOutputWithContext(ctx context.Context) ApplicationLogPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogPatternArrayOutput)
}

// The log pattern.
type ApplicationLogPatternOutput struct{ *pulumi.OutputState }

func (ApplicationLogPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogPattern)(nil)).Elem()
}

func (o ApplicationLogPatternOutput) ToApplicationLogPatternOutput() ApplicationLogPatternOutput {
	return o
}

func (o ApplicationLogPatternOutput) ToApplicationLogPatternOutputWithContext(ctx context.Context) ApplicationLogPatternOutput {
	return o
}

// The log pattern.
func (o ApplicationLogPatternOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLogPattern) string { return v.Pattern }).(pulumi.StringOutput)
}

// The name of the log pattern.
func (o ApplicationLogPatternOutput) PatternName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLogPattern) string { return v.PatternName }).(pulumi.StringOutput)
}

// Rank of the log pattern.
func (o ApplicationLogPatternOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationLogPattern) int { return v.Rank }).(pulumi.IntOutput)
}

type ApplicationLogPatternArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLogPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLogPattern)(nil)).Elem()
}

func (o ApplicationLogPatternArrayOutput) ToApplicationLogPatternArrayOutput() ApplicationLogPatternArrayOutput {
	return o
}

func (o ApplicationLogPatternArrayOutput) ToApplicationLogPatternArrayOutputWithContext(ctx context.Context) ApplicationLogPatternArrayOutput {
	return o
}

func (o ApplicationLogPatternArrayOutput) Index(i pulumi.IntInput) ApplicationLogPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLogPattern {
		return vs[0].([]ApplicationLogPattern)[vs[1].(int)]
	}).(ApplicationLogPatternOutput)
}

// The log pattern set.
type ApplicationLogPatternSet struct {
	// The log patterns of a set.
	LogPatterns []ApplicationLogPattern `pulumi:"logPatterns"`
	// The name of the log pattern set.
	PatternSetName string `pulumi:"patternSetName"`
}

// ApplicationLogPatternSetInput is an input type that accepts ApplicationLogPatternSetArgs and ApplicationLogPatternSetOutput values.
// You can construct a concrete instance of `ApplicationLogPatternSetInput` via:
//
//          ApplicationLogPatternSetArgs{...}
type ApplicationLogPatternSetInput interface {
	pulumi.Input

	ToApplicationLogPatternSetOutput() ApplicationLogPatternSetOutput
	ToApplicationLogPatternSetOutputWithContext(context.Context) ApplicationLogPatternSetOutput
}

// The log pattern set.
type ApplicationLogPatternSetArgs struct {
	// The log patterns of a set.
	LogPatterns ApplicationLogPatternArrayInput `pulumi:"logPatterns"`
	// The name of the log pattern set.
	PatternSetName pulumi.StringInput `pulumi:"patternSetName"`
}

func (ApplicationLogPatternSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogPatternSet)(nil)).Elem()
}

func (i ApplicationLogPatternSetArgs) ToApplicationLogPatternSetOutput() ApplicationLogPatternSetOutput {
	return i.ToApplicationLogPatternSetOutputWithContext(context.Background())
}

func (i ApplicationLogPatternSetArgs) ToApplicationLogPatternSetOutputWithContext(ctx context.Context) ApplicationLogPatternSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogPatternSetOutput)
}

// ApplicationLogPatternSetArrayInput is an input type that accepts ApplicationLogPatternSetArray and ApplicationLogPatternSetArrayOutput values.
// You can construct a concrete instance of `ApplicationLogPatternSetArrayInput` via:
//
//          ApplicationLogPatternSetArray{ ApplicationLogPatternSetArgs{...} }
type ApplicationLogPatternSetArrayInput interface {
	pulumi.Input

	ToApplicationLogPatternSetArrayOutput() ApplicationLogPatternSetArrayOutput
	ToApplicationLogPatternSetArrayOutputWithContext(context.Context) ApplicationLogPatternSetArrayOutput
}

type ApplicationLogPatternSetArray []ApplicationLogPatternSetInput

func (ApplicationLogPatternSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLogPatternSet)(nil)).Elem()
}

func (i ApplicationLogPatternSetArray) ToApplicationLogPatternSetArrayOutput() ApplicationLogPatternSetArrayOutput {
	return i.ToApplicationLogPatternSetArrayOutputWithContext(context.Background())
}

func (i ApplicationLogPatternSetArray) ToApplicationLogPatternSetArrayOutputWithContext(ctx context.Context) ApplicationLogPatternSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogPatternSetArrayOutput)
}

// The log pattern set.
type ApplicationLogPatternSetOutput struct{ *pulumi.OutputState }

func (ApplicationLogPatternSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogPatternSet)(nil)).Elem()
}

func (o ApplicationLogPatternSetOutput) ToApplicationLogPatternSetOutput() ApplicationLogPatternSetOutput {
	return o
}

func (o ApplicationLogPatternSetOutput) ToApplicationLogPatternSetOutputWithContext(ctx context.Context) ApplicationLogPatternSetOutput {
	return o
}

// The log patterns of a set.
func (o ApplicationLogPatternSetOutput) LogPatterns() ApplicationLogPatternArrayOutput {
	return o.ApplyT(func(v ApplicationLogPatternSet) []ApplicationLogPattern { return v.LogPatterns }).(ApplicationLogPatternArrayOutput)
}

// The name of the log pattern set.
func (o ApplicationLogPatternSetOutput) PatternSetName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLogPatternSet) string { return v.PatternSetName }).(pulumi.StringOutput)
}

type ApplicationLogPatternSetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLogPatternSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLogPatternSet)(nil)).Elem()
}

func (o ApplicationLogPatternSetArrayOutput) ToApplicationLogPatternSetArrayOutput() ApplicationLogPatternSetArrayOutput {
	return o
}

func (o ApplicationLogPatternSetArrayOutput) ToApplicationLogPatternSetArrayOutputWithContext(ctx context.Context) ApplicationLogPatternSetArrayOutput {
	return o
}

func (o ApplicationLogPatternSetArrayOutput) Index(i pulumi.IntInput) ApplicationLogPatternSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLogPatternSet {
		return vs[0].([]ApplicationLogPatternSet)[vs[1].(int)]
	}).(ApplicationLogPatternSetOutput)
}

// The configuration settings of sub components.
type ApplicationSubComponentConfigurationDetails struct {
	// A list of metrics to monitor for the component.
	AlarmMetrics []ApplicationAlarmMetric `pulumi:"alarmMetrics"`
	// A list of logs to monitor for the component.
	Logs []ApplicationLog `pulumi:"logs"`
	// A list of Windows Events to log.
	WindowsEvents []ApplicationWindowsEvent `pulumi:"windowsEvents"`
}

// ApplicationSubComponentConfigurationDetailsInput is an input type that accepts ApplicationSubComponentConfigurationDetailsArgs and ApplicationSubComponentConfigurationDetailsOutput values.
// You can construct a concrete instance of `ApplicationSubComponentConfigurationDetailsInput` via:
//
//          ApplicationSubComponentConfigurationDetailsArgs{...}
type ApplicationSubComponentConfigurationDetailsInput interface {
	pulumi.Input

	ToApplicationSubComponentConfigurationDetailsOutput() ApplicationSubComponentConfigurationDetailsOutput
	ToApplicationSubComponentConfigurationDetailsOutputWithContext(context.Context) ApplicationSubComponentConfigurationDetailsOutput
}

// The configuration settings of sub components.
type ApplicationSubComponentConfigurationDetailsArgs struct {
	// A list of metrics to monitor for the component.
	AlarmMetrics ApplicationAlarmMetricArrayInput `pulumi:"alarmMetrics"`
	// A list of logs to monitor for the component.
	Logs ApplicationLogArrayInput `pulumi:"logs"`
	// A list of Windows Events to log.
	WindowsEvents ApplicationWindowsEventArrayInput `pulumi:"windowsEvents"`
}

func (ApplicationSubComponentConfigurationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSubComponentConfigurationDetails)(nil)).Elem()
}

func (i ApplicationSubComponentConfigurationDetailsArgs) ToApplicationSubComponentConfigurationDetailsOutput() ApplicationSubComponentConfigurationDetailsOutput {
	return i.ToApplicationSubComponentConfigurationDetailsOutputWithContext(context.Background())
}

func (i ApplicationSubComponentConfigurationDetailsArgs) ToApplicationSubComponentConfigurationDetailsOutputWithContext(ctx context.Context) ApplicationSubComponentConfigurationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSubComponentConfigurationDetailsOutput)
}

// The configuration settings of sub components.
type ApplicationSubComponentConfigurationDetailsOutput struct{ *pulumi.OutputState }

func (ApplicationSubComponentConfigurationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSubComponentConfigurationDetails)(nil)).Elem()
}

func (o ApplicationSubComponentConfigurationDetailsOutput) ToApplicationSubComponentConfigurationDetailsOutput() ApplicationSubComponentConfigurationDetailsOutput {
	return o
}

func (o ApplicationSubComponentConfigurationDetailsOutput) ToApplicationSubComponentConfigurationDetailsOutputWithContext(ctx context.Context) ApplicationSubComponentConfigurationDetailsOutput {
	return o
}

// A list of metrics to monitor for the component.
func (o ApplicationSubComponentConfigurationDetailsOutput) AlarmMetrics() ApplicationAlarmMetricArrayOutput {
	return o.ApplyT(func(v ApplicationSubComponentConfigurationDetails) []ApplicationAlarmMetric { return v.AlarmMetrics }).(ApplicationAlarmMetricArrayOutput)
}

// A list of logs to monitor for the component.
func (o ApplicationSubComponentConfigurationDetailsOutput) Logs() ApplicationLogArrayOutput {
	return o.ApplyT(func(v ApplicationSubComponentConfigurationDetails) []ApplicationLog { return v.Logs }).(ApplicationLogArrayOutput)
}

// A list of Windows Events to log.
func (o ApplicationSubComponentConfigurationDetailsOutput) WindowsEvents() ApplicationWindowsEventArrayOutput {
	return o.ApplyT(func(v ApplicationSubComponentConfigurationDetails) []ApplicationWindowsEvent { return v.WindowsEvents }).(ApplicationWindowsEventArrayOutput)
}

// One type sub component configurations for the component.
type ApplicationSubComponentTypeConfiguration struct {
	// The configuration settings of sub components.
	SubComponentConfigurationDetails ApplicationSubComponentConfigurationDetails `pulumi:"subComponentConfigurationDetails"`
	// The sub component type.
	SubComponentType ApplicationSubComponentTypeConfigurationSubComponentType `pulumi:"subComponentType"`
}

// ApplicationSubComponentTypeConfigurationInput is an input type that accepts ApplicationSubComponentTypeConfigurationArgs and ApplicationSubComponentTypeConfigurationOutput values.
// You can construct a concrete instance of `ApplicationSubComponentTypeConfigurationInput` via:
//
//          ApplicationSubComponentTypeConfigurationArgs{...}
type ApplicationSubComponentTypeConfigurationInput interface {
	pulumi.Input

	ToApplicationSubComponentTypeConfigurationOutput() ApplicationSubComponentTypeConfigurationOutput
	ToApplicationSubComponentTypeConfigurationOutputWithContext(context.Context) ApplicationSubComponentTypeConfigurationOutput
}

// One type sub component configurations for the component.
type ApplicationSubComponentTypeConfigurationArgs struct {
	// The configuration settings of sub components.
	SubComponentConfigurationDetails ApplicationSubComponentConfigurationDetailsInput `pulumi:"subComponentConfigurationDetails"`
	// The sub component type.
	SubComponentType ApplicationSubComponentTypeConfigurationSubComponentTypeInput `pulumi:"subComponentType"`
}

func (ApplicationSubComponentTypeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSubComponentTypeConfiguration)(nil)).Elem()
}

func (i ApplicationSubComponentTypeConfigurationArgs) ToApplicationSubComponentTypeConfigurationOutput() ApplicationSubComponentTypeConfigurationOutput {
	return i.ToApplicationSubComponentTypeConfigurationOutputWithContext(context.Background())
}

func (i ApplicationSubComponentTypeConfigurationArgs) ToApplicationSubComponentTypeConfigurationOutputWithContext(ctx context.Context) ApplicationSubComponentTypeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSubComponentTypeConfigurationOutput)
}

// ApplicationSubComponentTypeConfigurationArrayInput is an input type that accepts ApplicationSubComponentTypeConfigurationArray and ApplicationSubComponentTypeConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationSubComponentTypeConfigurationArrayInput` via:
//
//          ApplicationSubComponentTypeConfigurationArray{ ApplicationSubComponentTypeConfigurationArgs{...} }
type ApplicationSubComponentTypeConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationSubComponentTypeConfigurationArrayOutput() ApplicationSubComponentTypeConfigurationArrayOutput
	ToApplicationSubComponentTypeConfigurationArrayOutputWithContext(context.Context) ApplicationSubComponentTypeConfigurationArrayOutput
}

type ApplicationSubComponentTypeConfigurationArray []ApplicationSubComponentTypeConfigurationInput

func (ApplicationSubComponentTypeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSubComponentTypeConfiguration)(nil)).Elem()
}

func (i ApplicationSubComponentTypeConfigurationArray) ToApplicationSubComponentTypeConfigurationArrayOutput() ApplicationSubComponentTypeConfigurationArrayOutput {
	return i.ToApplicationSubComponentTypeConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationSubComponentTypeConfigurationArray) ToApplicationSubComponentTypeConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSubComponentTypeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSubComponentTypeConfigurationArrayOutput)
}

// One type sub component configurations for the component.
type ApplicationSubComponentTypeConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationSubComponentTypeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSubComponentTypeConfiguration)(nil)).Elem()
}

func (o ApplicationSubComponentTypeConfigurationOutput) ToApplicationSubComponentTypeConfigurationOutput() ApplicationSubComponentTypeConfigurationOutput {
	return o
}

func (o ApplicationSubComponentTypeConfigurationOutput) ToApplicationSubComponentTypeConfigurationOutputWithContext(ctx context.Context) ApplicationSubComponentTypeConfigurationOutput {
	return o
}

// The configuration settings of sub components.
func (o ApplicationSubComponentTypeConfigurationOutput) SubComponentConfigurationDetails() ApplicationSubComponentConfigurationDetailsOutput {
	return o.ApplyT(func(v ApplicationSubComponentTypeConfiguration) ApplicationSubComponentConfigurationDetails {
		return v.SubComponentConfigurationDetails
	}).(ApplicationSubComponentConfigurationDetailsOutput)
}

// The sub component type.
func (o ApplicationSubComponentTypeConfigurationOutput) SubComponentType() ApplicationSubComponentTypeConfigurationSubComponentTypeOutput {
	return o.ApplyT(func(v ApplicationSubComponentTypeConfiguration) ApplicationSubComponentTypeConfigurationSubComponentType {
		return v.SubComponentType
	}).(ApplicationSubComponentTypeConfigurationSubComponentTypeOutput)
}

type ApplicationSubComponentTypeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSubComponentTypeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSubComponentTypeConfiguration)(nil)).Elem()
}

func (o ApplicationSubComponentTypeConfigurationArrayOutput) ToApplicationSubComponentTypeConfigurationArrayOutput() ApplicationSubComponentTypeConfigurationArrayOutput {
	return o
}

func (o ApplicationSubComponentTypeConfigurationArrayOutput) ToApplicationSubComponentTypeConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSubComponentTypeConfigurationArrayOutput {
	return o
}

func (o ApplicationSubComponentTypeConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationSubComponentTypeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSubComponentTypeConfiguration {
		return vs[0].([]ApplicationSubComponentTypeConfiguration)[vs[1].(int)]
	}).(ApplicationSubComponentTypeConfigurationOutput)
}

// A key-value pair to associate with a resource.
type ApplicationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ApplicationTagInput is an input type that accepts ApplicationTagArgs and ApplicationTagOutput values.
// You can construct a concrete instance of `ApplicationTagInput` via:
//
//          ApplicationTagArgs{...}
type ApplicationTagInput interface {
	pulumi.Input

	ToApplicationTagOutput() ApplicationTagOutput
	ToApplicationTagOutputWithContext(context.Context) ApplicationTagOutput
}

// A key-value pair to associate with a resource.
type ApplicationTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArgs) ToApplicationTagOutput() ApplicationTagOutput {
	return i.ToApplicationTagOutputWithContext(context.Background())
}

func (i ApplicationTagArgs) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagOutput)
}

// ApplicationTagArrayInput is an input type that accepts ApplicationTagArray and ApplicationTagArrayOutput values.
// You can construct a concrete instance of `ApplicationTagArrayInput` via:
//
//          ApplicationTagArray{ ApplicationTagArgs{...} }
type ApplicationTagArrayInput interface {
	pulumi.Input

	ToApplicationTagArrayOutput() ApplicationTagArrayOutput
	ToApplicationTagArrayOutputWithContext(context.Context) ApplicationTagArrayOutput
}

type ApplicationTagArray []ApplicationTagInput

func (ApplicationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArray) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return i.ToApplicationTagArrayOutputWithContext(context.Background())
}

func (i ApplicationTagArray) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ApplicationTagOutput struct{ *pulumi.OutputState }

func (ApplicationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagOutput) ToApplicationTagOutput() ApplicationTagOutput {
	return o
}

func (o ApplicationTagOutput) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApplicationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApplicationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationTagArrayOutput struct{ *pulumi.OutputState }

func (ApplicationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) Index(i pulumi.IntInput) ApplicationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationTag {
		return vs[0].([]ApplicationTag)[vs[1].(int)]
	}).(ApplicationTagOutput)
}

// A Windows Event to be monitored for the component.
type ApplicationWindowsEvent struct {
	// The levels of event to log.
	EventLevels []ApplicationEventLevel `pulumi:"eventLevels"`
	// The type of Windows Events to log.
	EventName string `pulumi:"eventName"`
	// The CloudWatch log group name to be associated to the monitored log.
	LogGroupName string `pulumi:"logGroupName"`
	// The name of the log pattern set.
	PatternSet *string `pulumi:"patternSet"`
}

// ApplicationWindowsEventInput is an input type that accepts ApplicationWindowsEventArgs and ApplicationWindowsEventOutput values.
// You can construct a concrete instance of `ApplicationWindowsEventInput` via:
//
//          ApplicationWindowsEventArgs{...}
type ApplicationWindowsEventInput interface {
	pulumi.Input

	ToApplicationWindowsEventOutput() ApplicationWindowsEventOutput
	ToApplicationWindowsEventOutputWithContext(context.Context) ApplicationWindowsEventOutput
}

// A Windows Event to be monitored for the component.
type ApplicationWindowsEventArgs struct {
	// The levels of event to log.
	EventLevels ApplicationEventLevelArrayInput `pulumi:"eventLevels"`
	// The type of Windows Events to log.
	EventName pulumi.StringInput `pulumi:"eventName"`
	// The CloudWatch log group name to be associated to the monitored log.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// The name of the log pattern set.
	PatternSet pulumi.StringPtrInput `pulumi:"patternSet"`
}

func (ApplicationWindowsEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWindowsEvent)(nil)).Elem()
}

func (i ApplicationWindowsEventArgs) ToApplicationWindowsEventOutput() ApplicationWindowsEventOutput {
	return i.ToApplicationWindowsEventOutputWithContext(context.Background())
}

func (i ApplicationWindowsEventArgs) ToApplicationWindowsEventOutputWithContext(ctx context.Context) ApplicationWindowsEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWindowsEventOutput)
}

// ApplicationWindowsEventArrayInput is an input type that accepts ApplicationWindowsEventArray and ApplicationWindowsEventArrayOutput values.
// You can construct a concrete instance of `ApplicationWindowsEventArrayInput` via:
//
//          ApplicationWindowsEventArray{ ApplicationWindowsEventArgs{...} }
type ApplicationWindowsEventArrayInput interface {
	pulumi.Input

	ToApplicationWindowsEventArrayOutput() ApplicationWindowsEventArrayOutput
	ToApplicationWindowsEventArrayOutputWithContext(context.Context) ApplicationWindowsEventArrayOutput
}

type ApplicationWindowsEventArray []ApplicationWindowsEventInput

func (ApplicationWindowsEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationWindowsEvent)(nil)).Elem()
}

func (i ApplicationWindowsEventArray) ToApplicationWindowsEventArrayOutput() ApplicationWindowsEventArrayOutput {
	return i.ToApplicationWindowsEventArrayOutputWithContext(context.Background())
}

func (i ApplicationWindowsEventArray) ToApplicationWindowsEventArrayOutputWithContext(ctx context.Context) ApplicationWindowsEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWindowsEventArrayOutput)
}

// A Windows Event to be monitored for the component.
type ApplicationWindowsEventOutput struct{ *pulumi.OutputState }

func (ApplicationWindowsEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWindowsEvent)(nil)).Elem()
}

func (o ApplicationWindowsEventOutput) ToApplicationWindowsEventOutput() ApplicationWindowsEventOutput {
	return o
}

func (o ApplicationWindowsEventOutput) ToApplicationWindowsEventOutputWithContext(ctx context.Context) ApplicationWindowsEventOutput {
	return o
}

// The levels of event to log.
func (o ApplicationWindowsEventOutput) EventLevels() ApplicationEventLevelArrayOutput {
	return o.ApplyT(func(v ApplicationWindowsEvent) []ApplicationEventLevel { return v.EventLevels }).(ApplicationEventLevelArrayOutput)
}

// The type of Windows Events to log.
func (o ApplicationWindowsEventOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationWindowsEvent) string { return v.EventName }).(pulumi.StringOutput)
}

// The CloudWatch log group name to be associated to the monitored log.
func (o ApplicationWindowsEventOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationWindowsEvent) string { return v.LogGroupName }).(pulumi.StringOutput)
}

// The name of the log pattern set.
func (o ApplicationWindowsEventOutput) PatternSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationWindowsEvent) *string { return v.PatternSet }).(pulumi.StringPtrOutput)
}

type ApplicationWindowsEventArrayOutput struct{ *pulumi.OutputState }

func (ApplicationWindowsEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationWindowsEvent)(nil)).Elem()
}

func (o ApplicationWindowsEventArrayOutput) ToApplicationWindowsEventArrayOutput() ApplicationWindowsEventArrayOutput {
	return o
}

func (o ApplicationWindowsEventArrayOutput) ToApplicationWindowsEventArrayOutputWithContext(ctx context.Context) ApplicationWindowsEventArrayOutput {
	return o
}

func (o ApplicationWindowsEventArrayOutput) Index(i pulumi.IntInput) ApplicationWindowsEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationWindowsEvent {
		return vs[0].([]ApplicationWindowsEvent)[vs[1].(int)]
	}).(ApplicationWindowsEventOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAlarmInput)(nil)).Elem(), ApplicationAlarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAlarmArrayInput)(nil)).Elem(), ApplicationAlarmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAlarmMetricInput)(nil)).Elem(), ApplicationAlarmMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAlarmMetricArrayInput)(nil)).Elem(), ApplicationAlarmMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationComponentConfigurationInput)(nil)).Elem(), ApplicationComponentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationComponentConfigurationPtrInput)(nil)).Elem(), ApplicationComponentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationComponentMonitoringSettingInput)(nil)).Elem(), ApplicationComponentMonitoringSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationComponentMonitoringSettingArrayInput)(nil)).Elem(), ApplicationComponentMonitoringSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationConfigurationDetailsInput)(nil)).Elem(), ApplicationConfigurationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationConfigurationDetailsPtrInput)(nil)).Elem(), ApplicationConfigurationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomComponentInput)(nil)).Elem(), ApplicationCustomComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomComponentArrayInput)(nil)).Elem(), ApplicationCustomComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHAClusterPrometheusExporterInput)(nil)).Elem(), ApplicationHAClusterPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHAClusterPrometheusExporterPtrInput)(nil)).Elem(), ApplicationHAClusterPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHANAPrometheusExporterInput)(nil)).Elem(), ApplicationHANAPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHANAPrometheusExporterPtrInput)(nil)).Elem(), ApplicationHANAPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationJMXPrometheusExporterInput)(nil)).Elem(), ApplicationJMXPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationJMXPrometheusExporterPtrInput)(nil)).Elem(), ApplicationJMXPrometheusExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogInput)(nil)).Elem(), ApplicationLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogArrayInput)(nil)).Elem(), ApplicationLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogPatternInput)(nil)).Elem(), ApplicationLogPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogPatternArrayInput)(nil)).Elem(), ApplicationLogPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogPatternSetInput)(nil)).Elem(), ApplicationLogPatternSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLogPatternSetArrayInput)(nil)).Elem(), ApplicationLogPatternSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSubComponentConfigurationDetailsInput)(nil)).Elem(), ApplicationSubComponentConfigurationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSubComponentTypeConfigurationInput)(nil)).Elem(), ApplicationSubComponentTypeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSubComponentTypeConfigurationArrayInput)(nil)).Elem(), ApplicationSubComponentTypeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagInput)(nil)).Elem(), ApplicationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagArrayInput)(nil)).Elem(), ApplicationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWindowsEventInput)(nil)).Elem(), ApplicationWindowsEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWindowsEventArrayInput)(nil)).Elem(), ApplicationWindowsEventArray{})
	pulumi.RegisterOutputType(ApplicationAlarmOutput{})
	pulumi.RegisterOutputType(ApplicationAlarmArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAlarmMetricOutput{})
	pulumi.RegisterOutputType(ApplicationAlarmMetricArrayOutput{})
	pulumi.RegisterOutputType(ApplicationComponentConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationComponentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationComponentMonitoringSettingOutput{})
	pulumi.RegisterOutputType(ApplicationComponentMonitoringSettingArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationDetailsOutput{})
	pulumi.RegisterOutputType(ApplicationConfigurationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ApplicationCustomComponentOutput{})
	pulumi.RegisterOutputType(ApplicationCustomComponentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationHAClusterPrometheusExporterOutput{})
	pulumi.RegisterOutputType(ApplicationHAClusterPrometheusExporterPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHANAPrometheusExporterOutput{})
	pulumi.RegisterOutputType(ApplicationHANAPrometheusExporterPtrOutput{})
	pulumi.RegisterOutputType(ApplicationJMXPrometheusExporterOutput{})
	pulumi.RegisterOutputType(ApplicationJMXPrometheusExporterPtrOutput{})
	pulumi.RegisterOutputType(ApplicationLogOutput{})
	pulumi.RegisterOutputType(ApplicationLogArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLogPatternOutput{})
	pulumi.RegisterOutputType(ApplicationLogPatternArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLogPatternSetOutput{})
	pulumi.RegisterOutputType(ApplicationLogPatternSetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSubComponentConfigurationDetailsOutput{})
	pulumi.RegisterOutputType(ApplicationSubComponentTypeConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationSubComponentTypeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationTagOutput{})
	pulumi.RegisterOutputType(ApplicationTagArrayOutput{})
	pulumi.RegisterOutputType(ApplicationWindowsEventOutput{})
	pulumi.RegisterOutputType(ApplicationWindowsEventArrayOutput{})
}
