// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::ApplicationInsights::Application
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	var rv LookupApplicationResult
	err := ctx.Invoke("aws-native:applicationinsights:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationArgs struct {
	// The ARN of the ApplicationInsights application.
	ApplicationARN string `pulumi:"applicationARN"`
}

type LookupApplicationResult struct {
	// The ARN of the ApplicationInsights application.
	ApplicationARN *string `pulumi:"applicationARN"`
	// If set to true, application will be configured with recommended monitoring configuration.
	AutoConfigurationEnabled *bool `pulumi:"autoConfigurationEnabled"`
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources.
	CWEMonitorEnabled *bool `pulumi:"cWEMonitorEnabled"`
	// The monitoring settings of the components.
	ComponentMonitoringSettings []ApplicationComponentMonitoringSetting `pulumi:"componentMonitoringSettings"`
	// The custom grouped components.
	CustomComponents []ApplicationCustomComponent `pulumi:"customComponents"`
	// The log pattern sets.
	LogPatternSets []ApplicationLogPatternSet `pulumi:"logPatternSets"`
	// When set to true, creates opsItems for any problems detected on an application.
	OpsCenterEnabled *bool `pulumi:"opsCenterEnabled"`
	// The SNS topic provided to Application Insights that is associated to the created opsItem.
	OpsItemSNSTopicArn *string `pulumi:"opsItemSNSTopicArn"`
	// The tags of Application Insights application.
	Tags []ApplicationTag `pulumi:"tags"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationResult, error) {
			args := v.(LookupApplicationArgs)
			r, err := LookupApplication(ctx, &args, opts...)
			var s LookupApplicationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationResultOutput)
}

type LookupApplicationOutputArgs struct {
	// The ARN of the ApplicationInsights application.
	ApplicationARN pulumi.StringInput `pulumi:"applicationARN"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

// The ARN of the ApplicationInsights application.
func (o LookupApplicationResultOutput) ApplicationARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationARN }).(pulumi.StringPtrOutput)
}

// If set to true, application will be configured with recommended monitoring configuration.
func (o LookupApplicationResultOutput) AutoConfigurationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *bool { return v.AutoConfigurationEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether Application Insights can listen to CloudWatch events for the application resources.
func (o LookupApplicationResultOutput) CWEMonitorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *bool { return v.CWEMonitorEnabled }).(pulumi.BoolPtrOutput)
}

// The monitoring settings of the components.
func (o LookupApplicationResultOutput) ComponentMonitoringSettings() ApplicationComponentMonitoringSettingArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationComponentMonitoringSetting {
		return v.ComponentMonitoringSettings
	}).(ApplicationComponentMonitoringSettingArrayOutput)
}

// The custom grouped components.
func (o LookupApplicationResultOutput) CustomComponents() ApplicationCustomComponentArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationCustomComponent { return v.CustomComponents }).(ApplicationCustomComponentArrayOutput)
}

// The log pattern sets.
func (o LookupApplicationResultOutput) LogPatternSets() ApplicationLogPatternSetArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationLogPatternSet { return v.LogPatternSets }).(ApplicationLogPatternSetArrayOutput)
}

// When set to true, creates opsItems for any problems detected on an application.
func (o LookupApplicationResultOutput) OpsCenterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *bool { return v.OpsCenterEnabled }).(pulumi.BoolPtrOutput)
}

// The SNS topic provided to Application Insights that is associated to the created opsItem.
func (o LookupApplicationResultOutput) OpsItemSNSTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.OpsItemSNSTopicArn }).(pulumi.StringPtrOutput)
}

// The tags of Application Insights application.
func (o LookupApplicationResultOutput) Tags() ApplicationTagArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationTag { return v.Tags }).(ApplicationTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
