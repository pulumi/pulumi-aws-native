// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::DocDB::DBInstance
//
// Deprecated: DbInstance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DbInstance struct {
	pulumi.CustomResourceState

	AutoMinorVersionUpgrade    pulumi.BoolPtrOutput     `pulumi:"autoMinorVersionUpgrade"`
	AvailabilityZone           pulumi.StringPtrOutput   `pulumi:"availabilityZone"`
	CaCertificateIdentifier    pulumi.StringPtrOutput   `pulumi:"caCertificateIdentifier"`
	CertificateRotationRestart pulumi.BoolPtrOutput     `pulumi:"certificateRotationRestart"`
	DbClusterIdentifier        pulumi.StringOutput      `pulumi:"dbClusterIdentifier"`
	DbInstanceClass            pulumi.StringOutput      `pulumi:"dbInstanceClass"`
	DbInstanceIdentifier       pulumi.StringPtrOutput   `pulumi:"dbInstanceIdentifier"`
	EnablePerformanceInsights  pulumi.BoolPtrOutput     `pulumi:"enablePerformanceInsights"`
	Endpoint                   pulumi.StringOutput      `pulumi:"endpoint"`
	Port                       pulumi.StringOutput      `pulumi:"port"`
	PreferredMaintenanceWindow pulumi.StringPtrOutput   `pulumi:"preferredMaintenanceWindow"`
	Tags                       DbInstanceTagArrayOutput `pulumi:"tags"`
}

// NewDbInstance registers a new resource with the given unique name, arguments, and options.
func NewDbInstance(ctx *pulumi.Context,
	name string, args *DbInstanceArgs, opts ...pulumi.ResourceOption) (*DbInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DbClusterIdentifier'")
	}
	if args.DbInstanceClass == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceClass'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"availabilityZone",
		"dbClusterIdentifier",
		"dbInstanceIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DbInstance
	err := ctx.RegisterResource("aws-native:docdb:DbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbInstance gets an existing DbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbInstanceState, opts ...pulumi.ResourceOption) (*DbInstance, error) {
	var resource DbInstance
	err := ctx.ReadResource("aws-native:docdb:DbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbInstance resources.
type dbInstanceState struct {
}

type DbInstanceState struct {
}

func (DbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbInstanceState)(nil)).Elem()
}

type dbInstanceArgs struct {
	AutoMinorVersionUpgrade    *bool           `pulumi:"autoMinorVersionUpgrade"`
	AvailabilityZone           *string         `pulumi:"availabilityZone"`
	CaCertificateIdentifier    *string         `pulumi:"caCertificateIdentifier"`
	CertificateRotationRestart *bool           `pulumi:"certificateRotationRestart"`
	DbClusterIdentifier        string          `pulumi:"dbClusterIdentifier"`
	DbInstanceClass            string          `pulumi:"dbInstanceClass"`
	DbInstanceIdentifier       *string         `pulumi:"dbInstanceIdentifier"`
	EnablePerformanceInsights  *bool           `pulumi:"enablePerformanceInsights"`
	PreferredMaintenanceWindow *string         `pulumi:"preferredMaintenanceWindow"`
	Tags                       []DbInstanceTag `pulumi:"tags"`
}

// The set of arguments for constructing a DbInstance resource.
type DbInstanceArgs struct {
	AutoMinorVersionUpgrade    pulumi.BoolPtrInput
	AvailabilityZone           pulumi.StringPtrInput
	CaCertificateIdentifier    pulumi.StringPtrInput
	CertificateRotationRestart pulumi.BoolPtrInput
	DbClusterIdentifier        pulumi.StringInput
	DbInstanceClass            pulumi.StringInput
	DbInstanceIdentifier       pulumi.StringPtrInput
	EnablePerformanceInsights  pulumi.BoolPtrInput
	PreferredMaintenanceWindow pulumi.StringPtrInput
	Tags                       DbInstanceTagArrayInput
}

func (DbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbInstanceArgs)(nil)).Elem()
}

type DbInstanceInput interface {
	pulumi.Input

	ToDbInstanceOutput() DbInstanceOutput
	ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput
}

func (*DbInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstance)(nil)).Elem()
}

func (i *DbInstance) ToDbInstanceOutput() DbInstanceOutput {
	return i.ToDbInstanceOutputWithContext(context.Background())
}

func (i *DbInstance) ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbInstanceOutput)
}

func (i *DbInstance) ToOutput(ctx context.Context) pulumix.Output[*DbInstance] {
	return pulumix.Output[*DbInstance]{
		OutputState: i.ToDbInstanceOutputWithContext(ctx).OutputState,
	}
}

type DbInstanceOutput struct{ *pulumi.OutputState }

func (DbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbInstance)(nil)).Elem()
}

func (o DbInstanceOutput) ToDbInstanceOutput() DbInstanceOutput {
	return o
}

func (o DbInstanceOutput) ToDbInstanceOutputWithContext(ctx context.Context) DbInstanceOutput {
	return o
}

func (o DbInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*DbInstance] {
	return pulumix.Output[*DbInstance]{
		OutputState: o.OutputState,
	}
}

func (o DbInstanceOutput) AutoMinorVersionUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.BoolPtrOutput { return v.AutoMinorVersionUpgrade }).(pulumi.BoolPtrOutput)
}

func (o DbInstanceOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o DbInstanceOutput) CaCertificateIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.CaCertificateIdentifier }).(pulumi.StringPtrOutput)
}

func (o DbInstanceOutput) CertificateRotationRestart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.BoolPtrOutput { return v.CertificateRotationRestart }).(pulumi.BoolPtrOutput)
}

func (o DbInstanceOutput) DbClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.DbClusterIdentifier }).(pulumi.StringOutput)
}

func (o DbInstanceOutput) DbInstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.DbInstanceClass }).(pulumi.StringOutput)
}

func (o DbInstanceOutput) DbInstanceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.DbInstanceIdentifier }).(pulumi.StringPtrOutput)
}

func (o DbInstanceOutput) EnablePerformanceInsights() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.BoolPtrOutput { return v.EnablePerformanceInsights }).(pulumi.BoolPtrOutput)
}

func (o DbInstanceOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o DbInstanceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

func (o DbInstanceOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbInstance) pulumi.StringPtrOutput { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

func (o DbInstanceOutput) Tags() DbInstanceTagArrayOutput {
	return o.ApplyT(func(v *DbInstance) DbInstanceTagArrayOutput { return v.Tags }).(DbInstanceTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbInstanceInput)(nil)).Elem(), &DbInstance{})
	pulumi.RegisterOutputType(DbInstanceOutput{})
}
