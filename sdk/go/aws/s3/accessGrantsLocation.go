// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::S3::AccessGrantsLocation resource is an Amazon S3 resource type hosted in an access grants instance which can be the target of S3 access grants.
type AccessGrantsLocation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the specified Access Grants location.
	AccessGrantsLocationArn pulumi.StringOutput `pulumi:"accessGrantsLocationArn"`
	// The unique identifier for the specified Access Grants location.
	AccessGrantsLocationId pulumi.StringOutput `pulumi:"accessGrantsLocationId"`
	// The Amazon Resource Name (ARN) of the access grant location's associated IAM role.
	IamRoleArn pulumi.StringPtrOutput `pulumi:"iamRoleArn"`
	// Descriptor for where the location actually points
	LocationScope pulumi.StringPtrOutput       `pulumi:"locationScope"`
	Tags          aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
}

// NewAccessGrantsLocation registers a new resource with the given unique name, arguments, and options.
func NewAccessGrantsLocation(ctx *pulumi.Context,
	name string, args *AccessGrantsLocationArgs, opts ...pulumi.ResourceOption) (*AccessGrantsLocation, error) {
	if args == nil {
		args = &AccessGrantsLocationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"tags[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessGrantsLocation
	err := ctx.RegisterResource("aws-native:s3:AccessGrantsLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessGrantsLocation gets an existing AccessGrantsLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessGrantsLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessGrantsLocationState, opts ...pulumi.ResourceOption) (*AccessGrantsLocation, error) {
	var resource AccessGrantsLocation
	err := ctx.ReadResource("aws-native:s3:AccessGrantsLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessGrantsLocation resources.
type accessGrantsLocationState struct {
}

type AccessGrantsLocationState struct {
}

func (AccessGrantsLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGrantsLocationState)(nil)).Elem()
}

type accessGrantsLocationArgs struct {
	// The Amazon Resource Name (ARN) of the access grant location's associated IAM role.
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// Descriptor for where the location actually points
	LocationScope *string             `pulumi:"locationScope"`
	Tags          []aws.CreateOnlyTag `pulumi:"tags"`
}

// The set of arguments for constructing a AccessGrantsLocation resource.
type AccessGrantsLocationArgs struct {
	// The Amazon Resource Name (ARN) of the access grant location's associated IAM role.
	IamRoleArn pulumi.StringPtrInput
	// Descriptor for where the location actually points
	LocationScope pulumi.StringPtrInput
	Tags          aws.CreateOnlyTagArrayInput
}

func (AccessGrantsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGrantsLocationArgs)(nil)).Elem()
}

type AccessGrantsLocationInput interface {
	pulumi.Input

	ToAccessGrantsLocationOutput() AccessGrantsLocationOutput
	ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput
}

func (*AccessGrantsLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocation)(nil)).Elem()
}

func (i *AccessGrantsLocation) ToAccessGrantsLocationOutput() AccessGrantsLocationOutput {
	return i.ToAccessGrantsLocationOutputWithContext(context.Background())
}

func (i *AccessGrantsLocation) ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationOutput)
}

type AccessGrantsLocationOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocation)(nil)).Elem()
}

func (o AccessGrantsLocationOutput) ToAccessGrantsLocationOutput() AccessGrantsLocationOutput {
	return o
}

func (o AccessGrantsLocationOutput) ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the specified Access Grants location.
func (o AccessGrantsLocationOutput) AccessGrantsLocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.AccessGrantsLocationArn }).(pulumi.StringOutput)
}

// The unique identifier for the specified Access Grants location.
func (o AccessGrantsLocationOutput) AccessGrantsLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.AccessGrantsLocationId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the access grant location's associated IAM role.
func (o AccessGrantsLocationOutput) IamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringPtrOutput { return v.IamRoleArn }).(pulumi.StringPtrOutput)
}

// Descriptor for where the location actually points
func (o AccessGrantsLocationOutput) LocationScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringPtrOutput { return v.LocationScope }).(pulumi.StringPtrOutput)
}

func (o AccessGrantsLocationOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationInput)(nil)).Elem(), &AccessGrantsLocation{})
	pulumi.RegisterOutputType(AccessGrantsLocationOutput{})
}
