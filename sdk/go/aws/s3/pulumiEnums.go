// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise, NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and bucket access policies.
type AccessPointNetworkOrigin string

const (
	AccessPointNetworkOriginInternet = AccessPointNetworkOrigin("Internet")
	AccessPointNetworkOriginVpc      = AccessPointNetworkOrigin("VPC")
)

func (AccessPointNetworkOrigin) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointNetworkOrigin)(nil)).Elem()
}

func (e AccessPointNetworkOrigin) ToAccessPointNetworkOriginOutput() AccessPointNetworkOriginOutput {
	return pulumi.ToOutput(e).(AccessPointNetworkOriginOutput)
}

func (e AccessPointNetworkOrigin) ToAccessPointNetworkOriginOutputWithContext(ctx context.Context) AccessPointNetworkOriginOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessPointNetworkOriginOutput)
}

func (e AccessPointNetworkOrigin) ToAccessPointNetworkOriginPtrOutput() AccessPointNetworkOriginPtrOutput {
	return e.ToAccessPointNetworkOriginPtrOutputWithContext(context.Background())
}

func (e AccessPointNetworkOrigin) ToAccessPointNetworkOriginPtrOutputWithContext(ctx context.Context) AccessPointNetworkOriginPtrOutput {
	return AccessPointNetworkOrigin(e).ToAccessPointNetworkOriginOutputWithContext(ctx).ToAccessPointNetworkOriginPtrOutputWithContext(ctx)
}

func (e AccessPointNetworkOrigin) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessPointNetworkOrigin) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessPointNetworkOrigin) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessPointNetworkOrigin) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessPointNetworkOriginOutput struct{ *pulumi.OutputState }

func (AccessPointNetworkOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointNetworkOrigin)(nil)).Elem()
}

func (o AccessPointNetworkOriginOutput) ToAccessPointNetworkOriginOutput() AccessPointNetworkOriginOutput {
	return o
}

func (o AccessPointNetworkOriginOutput) ToAccessPointNetworkOriginOutputWithContext(ctx context.Context) AccessPointNetworkOriginOutput {
	return o
}

func (o AccessPointNetworkOriginOutput) ToAccessPointNetworkOriginPtrOutput() AccessPointNetworkOriginPtrOutput {
	return o.ToAccessPointNetworkOriginPtrOutputWithContext(context.Background())
}

func (o AccessPointNetworkOriginOutput) ToAccessPointNetworkOriginPtrOutputWithContext(ctx context.Context) AccessPointNetworkOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointNetworkOrigin) *AccessPointNetworkOrigin {
		return &v
	}).(AccessPointNetworkOriginPtrOutput)
}

func (o AccessPointNetworkOriginOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessPointNetworkOriginOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessPointNetworkOrigin) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessPointNetworkOriginOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessPointNetworkOriginOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessPointNetworkOrigin) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessPointNetworkOriginPtrOutput struct{ *pulumi.OutputState }

func (AccessPointNetworkOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointNetworkOrigin)(nil)).Elem()
}

func (o AccessPointNetworkOriginPtrOutput) ToAccessPointNetworkOriginPtrOutput() AccessPointNetworkOriginPtrOutput {
	return o
}

func (o AccessPointNetworkOriginPtrOutput) ToAccessPointNetworkOriginPtrOutputWithContext(ctx context.Context) AccessPointNetworkOriginPtrOutput {
	return o
}

func (o AccessPointNetworkOriginPtrOutput) Elem() AccessPointNetworkOriginOutput {
	return o.ApplyT(func(v *AccessPointNetworkOrigin) AccessPointNetworkOrigin {
		if v != nil {
			return *v
		}
		var ret AccessPointNetworkOrigin
		return ret
	}).(AccessPointNetworkOriginOutput)
}

func (o AccessPointNetworkOriginPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessPointNetworkOriginPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessPointNetworkOrigin) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessPointNetworkOriginInput is an input type that accepts AccessPointNetworkOriginArgs and AccessPointNetworkOriginOutput values.
// You can construct a concrete instance of `AccessPointNetworkOriginInput` via:
//
//          AccessPointNetworkOriginArgs{...}
type AccessPointNetworkOriginInput interface {
	pulumi.Input

	ToAccessPointNetworkOriginOutput() AccessPointNetworkOriginOutput
	ToAccessPointNetworkOriginOutputWithContext(context.Context) AccessPointNetworkOriginOutput
}

var accessPointNetworkOriginPtrType = reflect.TypeOf((**AccessPointNetworkOrigin)(nil)).Elem()

type AccessPointNetworkOriginPtrInput interface {
	pulumi.Input

	ToAccessPointNetworkOriginPtrOutput() AccessPointNetworkOriginPtrOutput
	ToAccessPointNetworkOriginPtrOutputWithContext(context.Context) AccessPointNetworkOriginPtrOutput
}

type accessPointNetworkOriginPtr string

func AccessPointNetworkOriginPtr(v string) AccessPointNetworkOriginPtrInput {
	return (*accessPointNetworkOriginPtr)(&v)
}

func (*accessPointNetworkOriginPtr) ElementType() reflect.Type {
	return accessPointNetworkOriginPtrType
}

func (in *accessPointNetworkOriginPtr) ToAccessPointNetworkOriginPtrOutput() AccessPointNetworkOriginPtrOutput {
	return pulumi.ToOutput(in).(AccessPointNetworkOriginPtrOutput)
}

func (in *accessPointNetworkOriginPtr) ToAccessPointNetworkOriginPtrOutputWithContext(ctx context.Context) AccessPointNetworkOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessPointNetworkOriginPtrOutput)
}

// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
type StorageLensS3BucketDestinationFormat string

const (
	StorageLensS3BucketDestinationFormatCsv     = StorageLensS3BucketDestinationFormat("CSV")
	StorageLensS3BucketDestinationFormatParquet = StorageLensS3BucketDestinationFormat("Parquet")
)

func (StorageLensS3BucketDestinationFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestinationFormat)(nil)).Elem()
}

func (e StorageLensS3BucketDestinationFormat) ToStorageLensS3BucketDestinationFormatOutput() StorageLensS3BucketDestinationFormatOutput {
	return pulumi.ToOutput(e).(StorageLensS3BucketDestinationFormatOutput)
}

func (e StorageLensS3BucketDestinationFormat) ToStorageLensS3BucketDestinationFormatOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageLensS3BucketDestinationFormatOutput)
}

func (e StorageLensS3BucketDestinationFormat) ToStorageLensS3BucketDestinationFormatPtrOutput() StorageLensS3BucketDestinationFormatPtrOutput {
	return e.ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(context.Background())
}

func (e StorageLensS3BucketDestinationFormat) ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatPtrOutput {
	return StorageLensS3BucketDestinationFormat(e).ToStorageLensS3BucketDestinationFormatOutputWithContext(ctx).ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(ctx)
}

func (e StorageLensS3BucketDestinationFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageLensS3BucketDestinationFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageLensS3BucketDestinationFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageLensS3BucketDestinationFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageLensS3BucketDestinationFormatOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestinationFormat)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStorageLensS3BucketDestinationFormatOutput() StorageLensS3BucketDestinationFormatOutput {
	return o
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStorageLensS3BucketDestinationFormatOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatOutput {
	return o
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStorageLensS3BucketDestinationFormatPtrOutput() StorageLensS3BucketDestinationFormatPtrOutput {
	return o.ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensS3BucketDestinationFormat) *StorageLensS3BucketDestinationFormat {
		return &v
	}).(StorageLensS3BucketDestinationFormatPtrOutput)
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageLensS3BucketDestinationFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageLensS3BucketDestinationFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageLensS3BucketDestinationFormatPtrOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensS3BucketDestinationFormat)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationFormatPtrOutput) ToStorageLensS3BucketDestinationFormatPtrOutput() StorageLensS3BucketDestinationFormatPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationFormatPtrOutput) ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationFormatPtrOutput) Elem() StorageLensS3BucketDestinationFormatOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestinationFormat) StorageLensS3BucketDestinationFormat {
		if v != nil {
			return *v
		}
		var ret StorageLensS3BucketDestinationFormat
		return ret
	}).(StorageLensS3BucketDestinationFormatOutput)
}

func (o StorageLensS3BucketDestinationFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageLensS3BucketDestinationFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageLensS3BucketDestinationFormatInput is an input type that accepts StorageLensS3BucketDestinationFormatArgs and StorageLensS3BucketDestinationFormatOutput values.
// You can construct a concrete instance of `StorageLensS3BucketDestinationFormatInput` via:
//
//          StorageLensS3BucketDestinationFormatArgs{...}
type StorageLensS3BucketDestinationFormatInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationFormatOutput() StorageLensS3BucketDestinationFormatOutput
	ToStorageLensS3BucketDestinationFormatOutputWithContext(context.Context) StorageLensS3BucketDestinationFormatOutput
}

var storageLensS3BucketDestinationFormatPtrType = reflect.TypeOf((**StorageLensS3BucketDestinationFormat)(nil)).Elem()

type StorageLensS3BucketDestinationFormatPtrInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationFormatPtrOutput() StorageLensS3BucketDestinationFormatPtrOutput
	ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(context.Context) StorageLensS3BucketDestinationFormatPtrOutput
}

type storageLensS3BucketDestinationFormatPtr string

func StorageLensS3BucketDestinationFormatPtr(v string) StorageLensS3BucketDestinationFormatPtrInput {
	return (*storageLensS3BucketDestinationFormatPtr)(&v)
}

func (*storageLensS3BucketDestinationFormatPtr) ElementType() reflect.Type {
	return storageLensS3BucketDestinationFormatPtrType
}

func (in *storageLensS3BucketDestinationFormatPtr) ToStorageLensS3BucketDestinationFormatPtrOutput() StorageLensS3BucketDestinationFormatPtrOutput {
	return pulumi.ToOutput(in).(StorageLensS3BucketDestinationFormatPtrOutput)
}

func (in *storageLensS3BucketDestinationFormatPtr) ToStorageLensS3BucketDestinationFormatPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageLensS3BucketDestinationFormatPtrOutput)
}

// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
type StorageLensS3BucketDestinationOutputSchemaVersion string

const (
	StorageLensS3BucketDestinationOutputSchemaVersionV1 = StorageLensS3BucketDestinationOutputSchemaVersion("V_1")
)

func (StorageLensS3BucketDestinationOutputSchemaVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestinationOutputSchemaVersion)(nil)).Elem()
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStorageLensS3BucketDestinationOutputSchemaVersionOutput() StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return pulumi.ToOutput(e).(StorageLensS3BucketDestinationOutputSchemaVersionOutput)
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStorageLensS3BucketDestinationOutputSchemaVersionOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageLensS3BucketDestinationOutputSchemaVersionOutput)
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutput() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return e.ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(context.Background())
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return StorageLensS3BucketDestinationOutputSchemaVersion(e).ToStorageLensS3BucketDestinationOutputSchemaVersionOutputWithContext(ctx).ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(ctx)
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageLensS3BucketDestinationOutputSchemaVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageLensS3BucketDestinationOutputSchemaVersionOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationOutputSchemaVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestinationOutputSchemaVersion)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionOutput() StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutput() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return o.ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensS3BucketDestinationOutputSchemaVersion) *StorageLensS3BucketDestinationOutputSchemaVersion {
		return &v
	}).(StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput)
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageLensS3BucketDestinationOutputSchemaVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageLensS3BucketDestinationOutputSchemaVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensS3BucketDestinationOutputSchemaVersion)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutput() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) Elem() StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestinationOutputSchemaVersion) StorageLensS3BucketDestinationOutputSchemaVersion {
		if v != nil {
			return *v
		}
		var ret StorageLensS3BucketDestinationOutputSchemaVersion
		return ret
	}).(StorageLensS3BucketDestinationOutputSchemaVersionOutput)
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageLensS3BucketDestinationOutputSchemaVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageLensS3BucketDestinationOutputSchemaVersionInput is an input type that accepts StorageLensS3BucketDestinationOutputSchemaVersionArgs and StorageLensS3BucketDestinationOutputSchemaVersionOutput values.
// You can construct a concrete instance of `StorageLensS3BucketDestinationOutputSchemaVersionInput` via:
//
//          StorageLensS3BucketDestinationOutputSchemaVersionArgs{...}
type StorageLensS3BucketDestinationOutputSchemaVersionInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationOutputSchemaVersionOutput() StorageLensS3BucketDestinationOutputSchemaVersionOutput
	ToStorageLensS3BucketDestinationOutputSchemaVersionOutputWithContext(context.Context) StorageLensS3BucketDestinationOutputSchemaVersionOutput
}

var storageLensS3BucketDestinationOutputSchemaVersionPtrType = reflect.TypeOf((**StorageLensS3BucketDestinationOutputSchemaVersion)(nil)).Elem()

type StorageLensS3BucketDestinationOutputSchemaVersionPtrInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutput() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput
	ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(context.Context) StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput
}

type storageLensS3BucketDestinationOutputSchemaVersionPtr string

func StorageLensS3BucketDestinationOutputSchemaVersionPtr(v string) StorageLensS3BucketDestinationOutputSchemaVersionPtrInput {
	return (*storageLensS3BucketDestinationOutputSchemaVersionPtr)(&v)
}

func (*storageLensS3BucketDestinationOutputSchemaVersionPtr) ElementType() reflect.Type {
	return storageLensS3BucketDestinationOutputSchemaVersionPtrType
}

func (in *storageLensS3BucketDestinationOutputSchemaVersionPtr) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutput() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return pulumi.ToOutput(in).(StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput)
}

func (in *storageLensS3BucketDestinationOutputSchemaVersionPtr) ToStorageLensS3BucketDestinationOutputSchemaVersionPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessPointNetworkOriginOutput{})
	pulumi.RegisterOutputType(AccessPointNetworkOriginPtrOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationFormatOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationFormatPtrOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationOutputSchemaVersionOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput{})
}
