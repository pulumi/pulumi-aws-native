// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::S3::StorageLensGroup resource is an Amazon S3 resource type that you can use to create Storage Lens Group.
func LookupStorageLensGroup(ctx *pulumi.Context, args *LookupStorageLensGroupArgs, opts ...pulumi.InvokeOption) (*LookupStorageLensGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageLensGroupResult
	err := ctx.Invoke("aws-native:s3:getStorageLensGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStorageLensGroupArgs struct {
	// This property contains the Storage Lens group name.
	Name string `pulumi:"name"`
}

type LookupStorageLensGroupResult struct {
	// This property contains the criteria for the Storage Lens group data that is displayed
	Filter *StorageLensGroupFilter `pulumi:"filter"`
	// The ARN for the Amazon S3 Storage Lens Group.
	StorageLensGroupArn *string `pulumi:"storageLensGroupArn"`
	// A set of tags (key-value pairs) for this Amazon S3 Storage Lens Group.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupStorageLensGroupOutput(ctx *pulumi.Context, args LookupStorageLensGroupOutputArgs, opts ...pulumi.InvokeOption) LookupStorageLensGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStorageLensGroupResultOutput, error) {
			args := v.(LookupStorageLensGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:s3:getStorageLensGroup", args, LookupStorageLensGroupResultOutput{}, options).(LookupStorageLensGroupResultOutput), nil
		}).(LookupStorageLensGroupResultOutput)
}

type LookupStorageLensGroupOutputArgs struct {
	// This property contains the Storage Lens group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupStorageLensGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageLensGroupArgs)(nil)).Elem()
}

type LookupStorageLensGroupResultOutput struct{ *pulumi.OutputState }

func (LookupStorageLensGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageLensGroupResult)(nil)).Elem()
}

func (o LookupStorageLensGroupResultOutput) ToLookupStorageLensGroupResultOutput() LookupStorageLensGroupResultOutput {
	return o
}

func (o LookupStorageLensGroupResultOutput) ToLookupStorageLensGroupResultOutputWithContext(ctx context.Context) LookupStorageLensGroupResultOutput {
	return o
}

// This property contains the criteria for the Storage Lens group data that is displayed
func (o LookupStorageLensGroupResultOutput) Filter() StorageLensGroupFilterPtrOutput {
	return o.ApplyT(func(v LookupStorageLensGroupResult) *StorageLensGroupFilter { return v.Filter }).(StorageLensGroupFilterPtrOutput)
}

// The ARN for the Amazon S3 Storage Lens Group.
func (o LookupStorageLensGroupResultOutput) StorageLensGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageLensGroupResult) *string { return v.StorageLensGroupArn }).(pulumi.StringPtrOutput)
}

// A set of tags (key-value pairs) for this Amazon S3 Storage Lens Group.
func (o LookupStorageLensGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupStorageLensGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageLensGroupResultOutput{})
}
