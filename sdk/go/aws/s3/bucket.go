// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3::Bucket
type Bucket struct {
	pulumi.CustomResourceState

	AccelerateConfiguration          BucketAccelerateConfigurationPtrOutput           `pulumi:"accelerateConfiguration"`
	AccessControl                    pulumi.StringPtrOutput                           `pulumi:"accessControl"`
	AnalyticsConfigurations          BucketAnalyticsConfigurationArrayOutput          `pulumi:"analyticsConfigurations"`
	Arn                              pulumi.StringOutput                              `pulumi:"arn"`
	BucketEncryption                 BucketEncryptionPtrOutput                        `pulumi:"bucketEncryption"`
	BucketName                       pulumi.StringPtrOutput                           `pulumi:"bucketName"`
	CorsConfiguration                BucketCorsConfigurationPtrOutput                 `pulumi:"corsConfiguration"`
	DomainName                       pulumi.StringOutput                              `pulumi:"domainName"`
	DualStackDomainName              pulumi.StringOutput                              `pulumi:"dualStackDomainName"`
	IntelligentTieringConfigurations BucketIntelligentTieringConfigurationArrayOutput `pulumi:"intelligentTieringConfigurations"`
	InventoryConfigurations          BucketInventoryConfigurationArrayOutput          `pulumi:"inventoryConfigurations"`
	LifecycleConfiguration           BucketLifecycleConfigurationPtrOutput            `pulumi:"lifecycleConfiguration"`
	LoggingConfiguration             BucketLoggingConfigurationPtrOutput              `pulumi:"loggingConfiguration"`
	MetricsConfigurations            BucketMetricsConfigurationArrayOutput            `pulumi:"metricsConfigurations"`
	NotificationConfiguration        BucketNotificationConfigurationPtrOutput         `pulumi:"notificationConfiguration"`
	ObjectLockConfiguration          BucketObjectLockConfigurationPtrOutput           `pulumi:"objectLockConfiguration"`
	ObjectLockEnabled                pulumi.BoolPtrOutput                             `pulumi:"objectLockEnabled"`
	OwnershipControls                BucketOwnershipControlsPtrOutput                 `pulumi:"ownershipControls"`
	PublicAccessBlockConfiguration   BucketPublicAccessBlockConfigurationPtrOutput    `pulumi:"publicAccessBlockConfiguration"`
	RegionalDomainName               pulumi.StringOutput                              `pulumi:"regionalDomainName"`
	ReplicationConfiguration         BucketReplicationConfigurationPtrOutput          `pulumi:"replicationConfiguration"`
	Tags                             BucketTagArrayOutput                             `pulumi:"tags"`
	VersioningConfiguration          BucketVersioningConfigurationPtrOutput           `pulumi:"versioningConfiguration"`
	WebsiteConfiguration             BucketWebsiteConfigurationPtrOutput              `pulumi:"websiteConfiguration"`
	WebsiteURL                       pulumi.StringOutput                              `pulumi:"websiteURL"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		args = &BucketArgs{}
	}

	var resource Bucket
	err := ctx.RegisterResource("aws-native:s3:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("aws-native:s3:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
}

type BucketState struct {
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	AccelerateConfiguration          *BucketAccelerateConfiguration          `pulumi:"accelerateConfiguration"`
	AccessControl                    *string                                 `pulumi:"accessControl"`
	AnalyticsConfigurations          []BucketAnalyticsConfiguration          `pulumi:"analyticsConfigurations"`
	BucketEncryption                 *BucketEncryption                       `pulumi:"bucketEncryption"`
	BucketName                       *string                                 `pulumi:"bucketName"`
	CorsConfiguration                *BucketCorsConfiguration                `pulumi:"corsConfiguration"`
	IntelligentTieringConfigurations []BucketIntelligentTieringConfiguration `pulumi:"intelligentTieringConfigurations"`
	InventoryConfigurations          []BucketInventoryConfiguration          `pulumi:"inventoryConfigurations"`
	LifecycleConfiguration           *BucketLifecycleConfiguration           `pulumi:"lifecycleConfiguration"`
	LoggingConfiguration             *BucketLoggingConfiguration             `pulumi:"loggingConfiguration"`
	MetricsConfigurations            []BucketMetricsConfiguration            `pulumi:"metricsConfigurations"`
	NotificationConfiguration        *BucketNotificationConfiguration        `pulumi:"notificationConfiguration"`
	ObjectLockConfiguration          *BucketObjectLockConfiguration          `pulumi:"objectLockConfiguration"`
	ObjectLockEnabled                *bool                                   `pulumi:"objectLockEnabled"`
	OwnershipControls                *BucketOwnershipControls                `pulumi:"ownershipControls"`
	PublicAccessBlockConfiguration   *BucketPublicAccessBlockConfiguration   `pulumi:"publicAccessBlockConfiguration"`
	ReplicationConfiguration         *BucketReplicationConfiguration         `pulumi:"replicationConfiguration"`
	Tags                             []BucketTag                             `pulumi:"tags"`
	VersioningConfiguration          *BucketVersioningConfiguration          `pulumi:"versioningConfiguration"`
	WebsiteConfiguration             *BucketWebsiteConfiguration             `pulumi:"websiteConfiguration"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	AccelerateConfiguration          BucketAccelerateConfigurationPtrInput
	AccessControl                    pulumi.StringPtrInput
	AnalyticsConfigurations          BucketAnalyticsConfigurationArrayInput
	BucketEncryption                 BucketEncryptionPtrInput
	BucketName                       pulumi.StringPtrInput
	CorsConfiguration                BucketCorsConfigurationPtrInput
	IntelligentTieringConfigurations BucketIntelligentTieringConfigurationArrayInput
	InventoryConfigurations          BucketInventoryConfigurationArrayInput
	LifecycleConfiguration           BucketLifecycleConfigurationPtrInput
	LoggingConfiguration             BucketLoggingConfigurationPtrInput
	MetricsConfigurations            BucketMetricsConfigurationArrayInput
	NotificationConfiguration        BucketNotificationConfigurationPtrInput
	ObjectLockConfiguration          BucketObjectLockConfigurationPtrInput
	ObjectLockEnabled                pulumi.BoolPtrInput
	OwnershipControls                BucketOwnershipControlsPtrInput
	PublicAccessBlockConfiguration   BucketPublicAccessBlockConfigurationPtrInput
	ReplicationConfiguration         BucketReplicationConfigurationPtrInput
	Tags                             BucketTagArrayInput
	VersioningConfiguration          BucketVersioningConfigurationPtrInput
	WebsiteConfiguration             BucketWebsiteConfigurationPtrInput
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(ctx context.Context) BucketOutput
}

func (*Bucket) ElementType() reflect.Type {
	return reflect.TypeOf((*Bucket)(nil))
}

func (i *Bucket) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i *Bucket) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bucket)(nil))
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BucketOutput{})
}
