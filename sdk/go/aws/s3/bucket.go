// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::S3::Bucket“ resource creates an Amazon S3 bucket in the same AWS Region where you create the AWS CloudFormation stack.
//
//	To control how AWS CloudFormation handles the bucket when the stack is deleted, you can set a deletion policy for your bucket. You can choose to *retain* the bucket or to *delete* the bucket. For more information, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html).
//	 You can only delete empty buckets. Deletion fails for buckets that have contents.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ivs"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			s3Bucket, err := s3.NewBucket(ctx, "s3Bucket", nil)
//			if err != nil {
//				return err
//			}
//			recordingConfiguration, err := ivs.NewRecordingConfiguration(ctx, "recordingConfiguration", &ivs.RecordingConfigurationArgs{
//				Name: pulumi.String("MyRecordingConfiguration"),
//				DestinationConfiguration: &ivs.RecordingConfigurationDestinationConfigurationArgs{
//					S3: &ivs.RecordingConfigurationS3DestinationConfigurationArgs{
//						BucketName: s3Bucket.ID(),
//					},
//				},
//				ThumbnailConfiguration: &ivs.RecordingConfigurationThumbnailConfigurationArgs{
//					RecordingMode:         ivs.RecordingConfigurationThumbnailConfigurationRecordingModeInterval,
//					TargetIntervalSeconds: pulumi.Int(60),
//					Storage: ivs.RecordingConfigurationThumbnailConfigurationStorageItemArray{
//						ivs.RecordingConfigurationThumbnailConfigurationStorageItemSequential,
//						ivs.RecordingConfigurationThumbnailConfigurationStorageItemLatest,
//					},
//					Resolution: ivs.RecordingConfigurationThumbnailConfigurationResolutionHd,
//				},
//				RenditionConfiguration: &ivs.RecordingConfigurationRenditionConfigurationArgs{
//					RenditionSelection: ivs.RecordingConfigurationRenditionConfigurationRenditionSelectionCustom,
//					Renditions: ivs.RecordingConfigurationRenditionConfigurationRenditionsItemArray{
//						ivs.RecordingConfigurationRenditionConfigurationRenditionsItemHd,
//						ivs.RecordingConfigurationRenditionConfigurationRenditionsItemSd,
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				s3Bucket,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = ivs.NewChannel(ctx, "channel", &ivs.ChannelArgs{
//				Name:                      pulumi.String("MyRecordedChannel"),
//				RecordingConfigurationArn: recordingConfiguration.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				recordingConfiguration,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ivs"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			s3Bucket, err := s3.NewBucket(ctx, "s3Bucket", nil)
//			if err != nil {
//				return err
//			}
//			recordingConfiguration, err := ivs.NewRecordingConfiguration(ctx, "recordingConfiguration", &ivs.RecordingConfigurationArgs{
//				Name: pulumi.String("MyRecordingConfiguration"),
//				DestinationConfiguration: &ivs.RecordingConfigurationDestinationConfigurationArgs{
//					S3: &ivs.RecordingConfigurationS3DestinationConfigurationArgs{
//						BucketName: s3Bucket.ID(),
//					},
//				},
//				ThumbnailConfiguration: &ivs.RecordingConfigurationThumbnailConfigurationArgs{
//					RecordingMode:         ivs.RecordingConfigurationThumbnailConfigurationRecordingModeInterval,
//					TargetIntervalSeconds: pulumi.Int(60),
//					Resolution:            ivs.RecordingConfigurationThumbnailConfigurationResolutionHd,
//					Storage: ivs.RecordingConfigurationThumbnailConfigurationStorageItemArray{
//						ivs.RecordingConfigurationThumbnailConfigurationStorageItemSequential,
//						ivs.RecordingConfigurationThumbnailConfigurationStorageItemLatest,
//					},
//				},
//				RenditionConfiguration: &ivs.RecordingConfigurationRenditionConfigurationArgs{
//					RenditionSelection: ivs.RecordingConfigurationRenditionConfigurationRenditionSelectionCustom,
//					Renditions: ivs.RecordingConfigurationRenditionConfigurationRenditionsItemArray{
//						ivs.RecordingConfigurationRenditionConfigurationRenditionsItemHd,
//						ivs.RecordingConfigurationRenditionConfigurationRenditionsItemSd,
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				s3Bucket,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = ivs.NewChannel(ctx, "channel", &ivs.ChannelArgs{
//				Name:                      pulumi.String("MyRecordedChannel"),
//				RecordingConfigurationArn: recordingConfiguration.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				recordingConfiguration,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iam"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/s3"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			latestAmiId := ""
//			if param := cfg.Get("latestAmiId"); param != "" {
//				latestAmiId = param
//			}
//			var tmp0 string
//			if latestAmiId == "" {
//				tmp0 = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
//			} else {
//				tmp0 = awsnative.GetSsmParameterString(ctx, &aws.GetSsmParameterStringArgs{
//					Name: latestAmiId,
//				}, nil).Value
//			}
//			_ := tmp0
//			gitHubOwner := cfg.Require("gitHubOwner")
//			gitHubRepo := cfg.Require("gitHubRepo")
//			gitHubBranch := cfg.Require("gitHubBranch")
//			_, err := s3.NewBucket(ctx, "ssmAssocLogs", nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRole(ctx, "ssmInstanceRole", &iam.RoleArgs{
//				Policies: iam.RolePolicyTypeArray{
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//									},
//									"resource": []string{
//										"arn:aws:s3:::aws-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::aws-windows-downloads-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-packages-${AWS::Region}/*",
//										"arn:aws:s3:::${AWS::Region}-birdwatcher-prod/*",
//										"arn:aws:s3:::patch-baseline-snapshot-${AWS::Region}/*",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("ssm-custom-s3-policy"),
//					},
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//										"s3:PutObject",
//										"s3:PutObjectAcl",
//										"s3:ListBucket",
//									},
//									"resource": []string{
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}/*",
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("s3-instance-bucket-policy"),
//					},
//				},
//				Path: pulumi.String("/"),
//				ManagedPolicyArns: pulumi.StringArray{
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"),
//				},
//				AssumeRolePolicyDocument: pulumi.Any(map[string]interface{}{
//					"version": "2012-10-17",
//					"statement": []map[string]interface{}{
//						map[string]interface{}{
//							"effect": "Allow",
//							"principal": map[string]interface{}{
//								"service": []string{
//									"ec2.amazonaws.com",
//									"ssm.amazonaws.com",
//								},
//							},
//							"action": "sts:AssumeRole",
//						},
//					},
//				}),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewInstanceProfile(ctx, "ssmInstanceProfile", &iam.InstanceProfileArgs{
//				Roles: pulumi.StringArray{
//					pulumi.String("SSMInstanceRole"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewInstance(ctx, "ec2Instance", &ec2.InstanceArgs{
//				ImageId:            pulumi.String("LatestAmiId"),
//				InstanceType:       pulumi.String("t3.small"),
//				IamInstanceProfile: pulumi.String("SSMInstanceProfile"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ssm.NewAssociation(ctx, "ansibleAssociation", &ssm.AssociationArgs{
//				Name: pulumi.String("AWS-ApplyAnsiblePlaybooks"),
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("InstanceIds"),
//						Values: pulumi.StringArray{
//							pulumi.String("EC2Instance"),
//						},
//					},
//				},
//				OutputLocation: &ssm.AssociationInstanceAssociationOutputLocationArgs{
//					S3Location: &ssm.AssociationS3OutputLocationArgs{
//						OutputS3BucketName: pulumi.String("SSMAssocLogs"),
//						OutputS3KeyPrefix:  pulumi.String("logs/"),
//					},
//				},
//				Parameters: pulumi.StringArrayMap{
//					"sourceType": pulumi.StringArray{
//						pulumi.String("GitHub"),
//					},
//					"sourceInfo": pulumi.StringArray{
//						pulumi.String("{\"owner\":\"${GitHubOwner}\",\n\"repository\":\"${GitHubRepo}\",\n\"path\":\"\",\n\"getOptions\":\"branch:${GitHubBranch}\"}\n"),
//					},
//					"installDependencies": pulumi.StringArray{
//						pulumi.String("True"),
//					},
//					"playbookFile": pulumi.StringArray{
//						pulumi.String("playbook.yml"),
//					},
//					"extraVariables": pulumi.StringArray{
//						pulumi.String("SSM=True"),
//					},
//					"check": pulumi.StringArray{
//						pulumi.String("False"),
//					},
//					"verbose": pulumi.StringArray{
//						pulumi.String("-v"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("webServerPublic", pulumi.String("EC2Instance.PublicDnsName"))
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iam"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/s3"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			latestAmiId := ""
//			if param := cfg.Get("latestAmiId"); param != "" {
//				latestAmiId = param
//			}
//			var tmp0 string
//			if latestAmiId == "" {
//				tmp0 = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
//			} else {
//				tmp0 = awsnative.GetSsmParameterString(ctx, &aws.GetSsmParameterStringArgs{
//					Name: latestAmiId,
//				}, nil).Value
//			}
//			_ := tmp0
//			_, err := s3.NewBucket(ctx, "ssmAssocLogs", nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRole(ctx, "ssmInstanceRole", &iam.RoleArgs{
//				Policies: iam.RolePolicyTypeArray{
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//									},
//									"resource": []string{
//										"arn:aws:s3:::aws-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::aws-windows-downloads-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-packages-${AWS::Region}/*",
//										"arn:aws:s3:::${AWS::Region}-birdwatcher-prod/*",
//										"arn:aws:s3:::patch-baseline-snapshot-${AWS::Region}/*",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("ssm-custom-s3-policy"),
//					},
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//										"s3:PutObject",
//										"s3:PutObjectAcl",
//										"s3:ListBucket",
//									},
//									"resource": []string{
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}/*",
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("s3-instance-bucket-policy"),
//					},
//				},
//				Path: pulumi.String("/"),
//				ManagedPolicyArns: pulumi.StringArray{
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"),
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy"),
//				},
//				AssumeRolePolicyDocument: pulumi.Any(map[string]interface{}{
//					"version": "2012-10-17",
//					"statement": []map[string]interface{}{
//						map[string]interface{}{
//							"effect": "Allow",
//							"principal": map[string]interface{}{
//								"service": []string{
//									"ec2.amazonaws.com",
//									"ssm.amazonaws.com",
//								},
//							},
//							"action": "sts:AssumeRole",
//						},
//					},
//				}),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewInstanceProfile(ctx, "ssmInstanceProfile", &iam.InstanceProfileArgs{
//				Roles: pulumi.StringArray{
//					pulumi.String("SSMInstanceRole"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ec2Instance, err := ec2.NewInstance(ctx, "ec2Instance", &ec2.InstanceArgs{
//				ImageId:            pulumi.String("LatestAmiId"),
//				InstanceType:       pulumi.String("t3.medium"),
//				IamInstanceProfile: pulumi.String("SSMInstanceProfile"),
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("nginx"),
//						Value: pulumi.String("yes"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ssm.NewAssociation(ctx, "nginxAssociation", &ssm.AssociationArgs{
//				Name: pulumi.String("AWS-RunShellScript"),
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("tag:nginx"),
//						Values: pulumi.StringArray{
//							pulumi.String("yes"),
//						},
//					},
//				},
//				OutputLocation: &ssm.AssociationInstanceAssociationOutputLocationArgs{
//					S3Location: &ssm.AssociationS3OutputLocationArgs{
//						OutputS3BucketName: pulumi.String("SSMAssocLogs"),
//						OutputS3KeyPrefix:  pulumi.String("logs/"),
//					},
//				},
//				Parameters: pulumi.StringArrayMap{
//					"commands": pulumi.StringArray{
//						pulumi.String("sudo amazon-linux-extras install nginx1 -y\nsudo service nginx start\n"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				ec2Instance,
//			}))
//			if err != nil {
//				return err
//			}
//			ctx.Export("webServerPublic", pulumi.String("EC2Instance.PublicDnsName"))
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/iam"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/s3"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			latestAmiId := ""
//			if param := cfg.Get("latestAmiId"); param != "" {
//				latestAmiId = param
//			}
//			var tmp0 string
//			if latestAmiId == "" {
//				tmp0 = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
//			} else {
//				tmp0 = awsnative.GetSsmParameterString(ctx, &aws.GetSsmParameterStringArgs{
//					Name: latestAmiId,
//				}, nil).Value
//			}
//			_ := tmp0
//			_, err := s3.NewBucket(ctx, "ssmAssocLogs", nil)
//			if err != nil {
//				return err
//			}
//			_, err = ssm.NewDocument(ctx, "nginxInstallAutomation", &ssm.DocumentArgs{
//				DocumentType: ssm.DocumentTypeAutomation,
//				Content: pulumi.Any(map[string]interface{}{
//					"schemaVersion": "0.3",
//					"description":   "Updates AMI with Linux distribution packages and installs Nginx software",
//					"assumeRole":    "{{AutomationAssumeRole}}",
//					"parameters": map[string]interface{}{
//						"instanceId": map[string]interface{}{
//							"description": "ID of the Instance.",
//							"type":        "String",
//						},
//						"automationAssumeRole": map[string]interface{}{
//							"default":     "",
//							"description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
//							"type":        "String",
//						},
//					},
//					"mainSteps": []interface{}{
//						map[string]interface{}{
//							"name":           "updateOSSoftware",
//							"action":         "aws:runCommand",
//							"maxAttempts":    3,
//							"timeoutSeconds": 3600,
//							"inputs": map[string]interface{}{
//								"documentName": "AWS-RunShellScript",
//								"instanceIds": []string{
//									"{{InstanceId}}",
//								},
//								"cloudWatchOutputConfig": map[string]interface{}{
//									"cloudWatchOutputEnabled": "true",
//								},
//								"parameters": map[string]interface{}{
//									"commands": []string{
//										`#!/bin/bash
//
// sudo yum update -y
// needs-restarting -r
// if [ $? -eq 1 ]
// then
//
//	exit 194
//
// else
//
//	exit 0
//
// fi
// `,
//
//									},
//								},
//							},
//						},
//						map[string]interface{}{
//							"name":   "InstallNginx",
//							"action": "aws:runCommand",
//							"inputs": map[string]interface{}{
//								"documentName": "AWS-RunShellScript",
//								"instanceIds": []string{
//									"{{InstanceId}}",
//								},
//								"cloudWatchOutputConfig": map[string]interface{}{
//									"cloudWatchOutputEnabled": "true",
//								},
//								"parameters": map[string]interface{}{
//									"commands": []string{
//										"sudo amazon-linux-extras install nginx1 -y\nsudo service nginx start\n",
//									},
//								},
//							},
//						},
//						map[string]interface{}{
//							"name":           "TestInstall",
//							"action":         "aws:runCommand",
//							"maxAttempts":    3,
//							"timeoutSeconds": 3600,
//							"onFailure":      "Abort",
//							"inputs": map[string]interface{}{
//								"documentName": "AWS-RunShellScript",
//								"instanceIds": []string{
//									"{{InstanceId}}",
//								},
//								"parameters": map[string]interface{}{
//									"commands": []string{
//										"curl localhost\n",
//									},
//								},
//							},
//						},
//					},
//				}),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRole(ctx, "ssmExecutionRole", &iam.RoleArgs{
//				Policies: iam.RolePolicyTypeArray{
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"ssm:StartAssociationsOnce",
//										"ssm:CreateAssociation",
//										"ssm:CreateAssociationBatch",
//										"ssm:UpdateAssociation",
//									},
//									"resource": "*",
//									"effect":   "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("ssm-association"),
//					},
//				},
//				Path: pulumi.String("/"),
//				ManagedPolicyArns: pulumi.StringArray{
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonSSMAutomationRole"),
//				},
//				AssumeRolePolicyDocument: pulumi.Any(map[string]interface{}{
//					"version": "2012-10-17",
//					"statement": []map[string]interface{}{
//						map[string]interface{}{
//							"effect": "Allow",
//							"principal": map[string]interface{}{
//								"service": []string{
//									"ec2.amazonaws.com",
//									"ssm.amazonaws.com",
//								},
//							},
//							"action": "sts:AssumeRole",
//						},
//					},
//				}),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRole(ctx, "ssmInstanceRole", &iam.RoleArgs{
//				Policies: iam.RolePolicyTypeArray{
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//									},
//									"resource": []string{
//										"arn:aws:s3:::aws-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::aws-windows-downloads-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-${AWS::Region}/*",
//										"arn:aws:s3:::amazon-ssm-packages-${AWS::Region}/*",
//										"arn:aws:s3:::${AWS::Region}-birdwatcher-prod/*",
//										"arn:aws:s3:::patch-baseline-snapshot-${AWS::Region}/*",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("ssm-custom-s3-policy"),
//					},
//					&iam.RolePolicyTypeArgs{
//						PolicyDocument: pulumi.Any(map[string]interface{}{
//							"version": "2012-10-17",
//							"statement": []map[string]interface{}{
//								map[string]interface{}{
//									"action": []string{
//										"s3:GetObject",
//										"s3:PutObject",
//										"s3:PutObjectAcl",
//										"s3:ListBucket",
//									},
//									"resource": []string{
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}/*",
//										"arn:${AWS::Partition}:s3:::${SSMAssocLogs}",
//									},
//									"effect": "Allow",
//								},
//							},
//						}),
//						PolicyName: pulumi.String("s3-instance-bucket-policy"),
//					},
//				},
//				Path: pulumi.String("/"),
//				ManagedPolicyArns: pulumi.StringArray{
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"),
//					pulumi.String("arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy"),
//				},
//				AssumeRolePolicyDocument: pulumi.Any(map[string]interface{}{
//					"version": "2012-10-17",
//					"statement": []map[string]interface{}{
//						map[string]interface{}{
//							"effect": "Allow",
//							"principal": map[string]interface{}{
//								"service": []string{
//									"ec2.amazonaws.com",
//									"ssm.amazonaws.com",
//								},
//							},
//							"action": "sts:AssumeRole",
//						},
//					},
//				}),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewInstanceProfile(ctx, "ssmInstanceProfile", &iam.InstanceProfileArgs{
//				Roles: pulumi.StringArray{
//					pulumi.String("SSMInstanceRole"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ec2Instance, err := ec2.NewInstance(ctx, "ec2Instance", &ec2.InstanceArgs{
//				ImageId:            pulumi.String("LatestAmiId"),
//				InstanceType:       pulumi.String("t3.medium"),
//				IamInstanceProfile: pulumi.String("SSMInstanceProfile"),
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("nginx"),
//						Value: pulumi.String("true"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ssm.NewAssociation(ctx, "nginxAssociation", &ssm.AssociationArgs{
//				Name: pulumi.String("nginxInstallAutomation"),
//				OutputLocation: &ssm.AssociationInstanceAssociationOutputLocationArgs{
//					S3Location: &ssm.AssociationS3OutputLocationArgs{
//						OutputS3BucketName: pulumi.String("SSMAssocLogs"),
//						OutputS3KeyPrefix:  pulumi.String("logs/"),
//					},
//				},
//				AutomationTargetParameterName: pulumi.String("InstanceId"),
//				Parameters: pulumi.StringArrayMap{
//					"automationAssumeRole": pulumi.StringArray{
//						pulumi.String("SSMExecutionRole.Arn"),
//					},
//				},
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("tag:nginx"),
//						Values: pulumi.StringArray{
//							pulumi.String("true"),
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				ec2Instance,
//			}))
//			if err != nil {
//				return err
//			}
//			ctx.Export("webServerPublic", pulumi.String("EC2Instance.PublicDnsName"))
//			return nil
//		})
//	}
//
// ```
type Bucket struct {
	pulumi.CustomResourceState

	// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
	AccelerateConfiguration BucketAccelerateConfigurationPtrOutput `pulumi:"accelerateConfiguration"`
	// This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
	//   A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
	//   S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
	//   The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
	AccessControl BucketAccessControlPtrOutput `pulumi:"accessControl"`
	// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
	AnalyticsConfigurations BucketAnalyticsConfigurationArrayOutput `pulumi:"analyticsConfigurations"`
	// Returns the Amazon Resource Name (ARN) of the specified bucket.
	//
	// Example: `arn:aws:s3:::DOC-EXAMPLE-BUCKET`
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
	BucketEncryption BucketEncryptionPtrOutput `pulumi:"bucketEncryption"`
	// A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html). For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) in the *Amazon S3 User Guide*.
	//   If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
	BucketName pulumi.StringPtrOutput `pulumi:"bucketName"`
	// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
	CorsConfiguration BucketCorsConfigurationPtrOutput `pulumi:"corsConfiguration"`
	// Returns the IPv4 DNS name of the specified bucket.
	//
	// Example: `DOC-EXAMPLE-BUCKET.s3.amazonaws.com`
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Returns the IPv6 DNS name of the specified bucket.
	//
	// Example: `DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com`
	//
	// For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html) .
	DualStackDomainName pulumi.StringOutput `pulumi:"dualStackDomainName"`
	// Defines how Amazon S3 handles Intelligent-Tiering storage.
	IntelligentTieringConfigurations BucketIntelligentTieringConfigurationArrayOutput `pulumi:"intelligentTieringConfigurations"`
	// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
	InventoryConfigurations BucketInventoryConfigurationArrayOutput `pulumi:"inventoryConfigurations"`
	// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
	LifecycleConfiguration BucketLifecycleConfigurationPtrOutput `pulumi:"lifecycleConfiguration"`
	// Settings that define where logs are stored.
	LoggingConfiguration BucketLoggingConfigurationPtrOutput `pulumi:"loggingConfiguration"`
	// The S3 Metadata configuration for a general purpose bucket.
	MetadataConfiguration BucketMetadataConfigurationPtrOutput `pulumi:"metadataConfiguration"`
	// The metadata table configuration of an S3 general purpose bucket.
	MetadataTableConfiguration BucketMetadataTableConfigurationPtrOutput `pulumi:"metadataTableConfiguration"`
	// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
	MetricsConfigurations BucketMetricsConfigurationArrayOutput `pulumi:"metricsConfigurations"`
	// Configuration that defines how Amazon S3 handles bucket notifications.
	NotificationConfiguration BucketNotificationConfigurationPtrOutput `pulumi:"notificationConfiguration"`
	// This operation is not supported for directory buckets.
	//   Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
	//    +  The ``DefaultRetention`` settings require both a mode and a period.
	//   +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	//   +  You can enable Object Lock for new or existing buckets. For more information, see [Configuring Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-configure.html).
	ObjectLockConfiguration BucketObjectLockConfigurationPtrOutput `pulumi:"objectLockConfiguration"`
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled pulumi.BoolPtrOutput `pulumi:"objectLockEnabled"`
	// Configuration that defines how Amazon S3 handles Object Ownership rules.
	OwnershipControls BucketOwnershipControlsPtrOutput `pulumi:"ownershipControls"`
	// Configuration that defines how Amazon S3 handles public access.
	PublicAccessBlockConfiguration BucketPublicAccessBlockConfigurationPtrOutput `pulumi:"publicAccessBlockConfiguration"`
	// Returns the regional domain name of the specified bucket.
	//
	// Example: `DOC-EXAMPLE-BUCKET.s3.us-east-2.amazonaws.com`
	RegionalDomainName pulumi.StringOutput `pulumi:"regionalDomainName"`
	// Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the ``VersioningConfiguration`` property.
	//  Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
	ReplicationConfiguration BucketReplicationConfigurationPtrOutput `pulumi:"replicationConfiguration"`
	// An arbitrary set of tags (key-value pairs) for this S3 bucket.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
	//   When you enable versioning on a bucket for the first time, it might take a short amount of time for the change to be fully propagated. We recommend that you wait for 15 minutes after enabling versioning before issuing write operations (``PUT`` or ``DELETE``) on objects in the bucket.
	VersioningConfiguration BucketVersioningConfigurationPtrOutput `pulumi:"versioningConfiguration"`
	// Information used to configure the bucket as a static website. For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
	WebsiteConfiguration BucketWebsiteConfigurationPtrOutput `pulumi:"websiteConfiguration"`
	// Returns the Amazon S3 website endpoint for the specified bucket.
	//
	// Example (IPv4): `http://DOC-EXAMPLE-BUCKET.s3-website.us-east-2.amazonaws.com`
	//
	// Example (IPv6): `http://DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com`
	WebsiteUrl pulumi.StringOutput `pulumi:"websiteUrl"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		args = &BucketArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"bucketName",
		"metadataConfiguration.journalTableConfiguration.encryptionConfiguration",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bucket
	err := ctx.RegisterResource("aws-native:s3:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("aws-native:s3:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
}

type BucketState struct {
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
	AccelerateConfiguration *BucketAccelerateConfiguration `pulumi:"accelerateConfiguration"`
	// This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
	//   A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
	//   S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
	//   The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
	AccessControl *BucketAccessControl `pulumi:"accessControl"`
	// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
	AnalyticsConfigurations []BucketAnalyticsConfiguration `pulumi:"analyticsConfigurations"`
	// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
	BucketEncryption *BucketEncryption `pulumi:"bucketEncryption"`
	// A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html). For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) in the *Amazon S3 User Guide*.
	//   If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
	BucketName *string `pulumi:"bucketName"`
	// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
	CorsConfiguration *BucketCorsConfiguration `pulumi:"corsConfiguration"`
	// Defines how Amazon S3 handles Intelligent-Tiering storage.
	IntelligentTieringConfigurations []BucketIntelligentTieringConfiguration `pulumi:"intelligentTieringConfigurations"`
	// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
	InventoryConfigurations []BucketInventoryConfiguration `pulumi:"inventoryConfigurations"`
	// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
	LifecycleConfiguration *BucketLifecycleConfiguration `pulumi:"lifecycleConfiguration"`
	// Settings that define where logs are stored.
	LoggingConfiguration *BucketLoggingConfiguration `pulumi:"loggingConfiguration"`
	// The S3 Metadata configuration for a general purpose bucket.
	MetadataConfiguration *BucketMetadataConfiguration `pulumi:"metadataConfiguration"`
	// The metadata table configuration of an S3 general purpose bucket.
	MetadataTableConfiguration *BucketMetadataTableConfiguration `pulumi:"metadataTableConfiguration"`
	// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
	MetricsConfigurations []BucketMetricsConfiguration `pulumi:"metricsConfigurations"`
	// Configuration that defines how Amazon S3 handles bucket notifications.
	NotificationConfiguration *BucketNotificationConfiguration `pulumi:"notificationConfiguration"`
	// This operation is not supported for directory buckets.
	//   Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
	//    +  The ``DefaultRetention`` settings require both a mode and a period.
	//   +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	//   +  You can enable Object Lock for new or existing buckets. For more information, see [Configuring Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-configure.html).
	ObjectLockConfiguration *BucketObjectLockConfiguration `pulumi:"objectLockConfiguration"`
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled *bool `pulumi:"objectLockEnabled"`
	// Configuration that defines how Amazon S3 handles Object Ownership rules.
	OwnershipControls *BucketOwnershipControls `pulumi:"ownershipControls"`
	// Configuration that defines how Amazon S3 handles public access.
	PublicAccessBlockConfiguration *BucketPublicAccessBlockConfiguration `pulumi:"publicAccessBlockConfiguration"`
	// Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the ``VersioningConfiguration`` property.
	//  Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
	ReplicationConfiguration *BucketReplicationConfiguration `pulumi:"replicationConfiguration"`
	// An arbitrary set of tags (key-value pairs) for this S3 bucket.
	Tags []aws.Tag `pulumi:"tags"`
	// Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
	//   When you enable versioning on a bucket for the first time, it might take a short amount of time for the change to be fully propagated. We recommend that you wait for 15 minutes after enabling versioning before issuing write operations (``PUT`` or ``DELETE``) on objects in the bucket.
	VersioningConfiguration *BucketVersioningConfiguration `pulumi:"versioningConfiguration"`
	// Information used to configure the bucket as a static website. For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
	WebsiteConfiguration *BucketWebsiteConfiguration `pulumi:"websiteConfiguration"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
	AccelerateConfiguration BucketAccelerateConfigurationPtrInput
	// This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
	//   A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
	//   S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
	//   The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
	AccessControl BucketAccessControlPtrInput
	// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
	AnalyticsConfigurations BucketAnalyticsConfigurationArrayInput
	// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
	BucketEncryption BucketEncryptionPtrInput
	// A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html). For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) in the *Amazon S3 User Guide*.
	//   If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
	BucketName pulumi.StringPtrInput
	// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
	CorsConfiguration BucketCorsConfigurationPtrInput
	// Defines how Amazon S3 handles Intelligent-Tiering storage.
	IntelligentTieringConfigurations BucketIntelligentTieringConfigurationArrayInput
	// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
	InventoryConfigurations BucketInventoryConfigurationArrayInput
	// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
	LifecycleConfiguration BucketLifecycleConfigurationPtrInput
	// Settings that define where logs are stored.
	LoggingConfiguration BucketLoggingConfigurationPtrInput
	// The S3 Metadata configuration for a general purpose bucket.
	MetadataConfiguration BucketMetadataConfigurationPtrInput
	// The metadata table configuration of an S3 general purpose bucket.
	MetadataTableConfiguration BucketMetadataTableConfigurationPtrInput
	// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
	MetricsConfigurations BucketMetricsConfigurationArrayInput
	// Configuration that defines how Amazon S3 handles bucket notifications.
	NotificationConfiguration BucketNotificationConfigurationPtrInput
	// This operation is not supported for directory buckets.
	//   Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
	//    +  The ``DefaultRetention`` settings require both a mode and a period.
	//   +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
	//   +  You can enable Object Lock for new or existing buckets. For more information, see [Configuring Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-configure.html).
	ObjectLockConfiguration BucketObjectLockConfigurationPtrInput
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled pulumi.BoolPtrInput
	// Configuration that defines how Amazon S3 handles Object Ownership rules.
	OwnershipControls BucketOwnershipControlsPtrInput
	// Configuration that defines how Amazon S3 handles public access.
	PublicAccessBlockConfiguration BucketPublicAccessBlockConfigurationPtrInput
	// Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the ``VersioningConfiguration`` property.
	//  Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
	ReplicationConfiguration BucketReplicationConfigurationPtrInput
	// An arbitrary set of tags (key-value pairs) for this S3 bucket.
	Tags aws.TagArrayInput
	// Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
	//   When you enable versioning on a bucket for the first time, it might take a short amount of time for the change to be fully propagated. We recommend that you wait for 15 minutes after enabling versioning before issuing write operations (``PUT`` or ``DELETE``) on objects in the bucket.
	VersioningConfiguration BucketVersioningConfigurationPtrInput
	// Information used to configure the bucket as a static website. For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
	WebsiteConfiguration BucketWebsiteConfigurationPtrInput
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(ctx context.Context) BucketOutput
}

func (*Bucket) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (i *Bucket) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i *Bucket) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
func (o BucketOutput) AccelerateConfiguration() BucketAccelerateConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketAccelerateConfigurationPtrOutput { return v.AccelerateConfiguration }).(BucketAccelerateConfigurationPtrOutput)
}

// This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
//
//	A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
//	S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
//	The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
func (o BucketOutput) AccessControl() BucketAccessControlPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketAccessControlPtrOutput { return v.AccessControl }).(BucketAccessControlPtrOutput)
}

// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
func (o BucketOutput) AnalyticsConfigurations() BucketAnalyticsConfigurationArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketAnalyticsConfigurationArrayOutput { return v.AnalyticsConfigurations }).(BucketAnalyticsConfigurationArrayOutput)
}

// Returns the Amazon Resource Name (ARN) of the specified bucket.
//
// Example: `arn:aws:s3:::DOC-EXAMPLE-BUCKET`
func (o BucketOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
func (o BucketOutput) BucketEncryption() BucketEncryptionPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketEncryptionPtrOutput { return v.BucketEncryption }).(BucketEncryptionPtrOutput)
}

// A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html). For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) in the *Amazon S3 User Guide*.
//
//	If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
func (o BucketOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
func (o BucketOutput) CorsConfiguration() BucketCorsConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketCorsConfigurationPtrOutput { return v.CorsConfiguration }).(BucketCorsConfigurationPtrOutput)
}

// Returns the IPv4 DNS name of the specified bucket.
//
// Example: `DOC-EXAMPLE-BUCKET.s3.amazonaws.com`
func (o BucketOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Returns the IPv6 DNS name of the specified bucket.
//
// Example: `DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com`
//
// For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html) .
func (o BucketOutput) DualStackDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.DualStackDomainName }).(pulumi.StringOutput)
}

// Defines how Amazon S3 handles Intelligent-Tiering storage.
func (o BucketOutput) IntelligentTieringConfigurations() BucketIntelligentTieringConfigurationArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketIntelligentTieringConfigurationArrayOutput {
		return v.IntelligentTieringConfigurations
	}).(BucketIntelligentTieringConfigurationArrayOutput)
}

// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
func (o BucketOutput) InventoryConfigurations() BucketInventoryConfigurationArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketInventoryConfigurationArrayOutput { return v.InventoryConfigurations }).(BucketInventoryConfigurationArrayOutput)
}

// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
func (o BucketOutput) LifecycleConfiguration() BucketLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketLifecycleConfigurationPtrOutput { return v.LifecycleConfiguration }).(BucketLifecycleConfigurationPtrOutput)
}

// Settings that define where logs are stored.
func (o BucketOutput) LoggingConfiguration() BucketLoggingConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketLoggingConfigurationPtrOutput { return v.LoggingConfiguration }).(BucketLoggingConfigurationPtrOutput)
}

// The S3 Metadata configuration for a general purpose bucket.
func (o BucketOutput) MetadataConfiguration() BucketMetadataConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketMetadataConfigurationPtrOutput { return v.MetadataConfiguration }).(BucketMetadataConfigurationPtrOutput)
}

// The metadata table configuration of an S3 general purpose bucket.
func (o BucketOutput) MetadataTableConfiguration() BucketMetadataTableConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketMetadataTableConfigurationPtrOutput { return v.MetadataTableConfiguration }).(BucketMetadataTableConfigurationPtrOutput)
}

// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
func (o BucketOutput) MetricsConfigurations() BucketMetricsConfigurationArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketMetricsConfigurationArrayOutput { return v.MetricsConfigurations }).(BucketMetricsConfigurationArrayOutput)
}

// Configuration that defines how Amazon S3 handles bucket notifications.
func (o BucketOutput) NotificationConfiguration() BucketNotificationConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketNotificationConfigurationPtrOutput { return v.NotificationConfiguration }).(BucketNotificationConfigurationPtrOutput)
}

// This operation is not supported for directory buckets.
//
//	Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
//	 +  The ``DefaultRetention`` settings require both a mode and a period.
//	+  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
//	+  You can enable Object Lock for new or existing buckets. For more information, see [Configuring Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-configure.html).
func (o BucketOutput) ObjectLockConfiguration() BucketObjectLockConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketObjectLockConfigurationPtrOutput { return v.ObjectLockConfiguration }).(BucketObjectLockConfigurationPtrOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o BucketOutput) ObjectLockEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.ObjectLockEnabled }).(pulumi.BoolPtrOutput)
}

// Configuration that defines how Amazon S3 handles Object Ownership rules.
func (o BucketOutput) OwnershipControls() BucketOwnershipControlsPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketOwnershipControlsPtrOutput { return v.OwnershipControls }).(BucketOwnershipControlsPtrOutput)
}

// Configuration that defines how Amazon S3 handles public access.
func (o BucketOutput) PublicAccessBlockConfiguration() BucketPublicAccessBlockConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketPublicAccessBlockConfigurationPtrOutput { return v.PublicAccessBlockConfiguration }).(BucketPublicAccessBlockConfigurationPtrOutput)
}

// Returns the regional domain name of the specified bucket.
//
// Example: `DOC-EXAMPLE-BUCKET.s3.us-east-2.amazonaws.com`
func (o BucketOutput) RegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.RegionalDomainName }).(pulumi.StringOutput)
}

// Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the “VersioningConfiguration“ property.
//
//	Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
func (o BucketOutput) ReplicationConfiguration() BucketReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketReplicationConfigurationPtrOutput { return v.ReplicationConfiguration }).(BucketReplicationConfigurationPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this S3 bucket.
func (o BucketOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Bucket) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
//
//	When you enable versioning on a bucket for the first time, it might take a short amount of time for the change to be fully propagated. We recommend that you wait for 15 minutes after enabling versioning before issuing write operations (``PUT`` or ``DELETE``) on objects in the bucket.
func (o BucketOutput) VersioningConfiguration() BucketVersioningConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketVersioningConfigurationPtrOutput { return v.VersioningConfiguration }).(BucketVersioningConfigurationPtrOutput)
}

// Information used to configure the bucket as a static website. For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
func (o BucketOutput) WebsiteConfiguration() BucketWebsiteConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketWebsiteConfigurationPtrOutput { return v.WebsiteConfiguration }).(BucketWebsiteConfigurationPtrOutput)
}

// Returns the Amazon S3 website endpoint for the specified bucket.
//
// Example (IPv4): `http://DOC-EXAMPLE-BUCKET.s3-website.us-east-2.amazonaws.com`
//
// Example (IPv6): `http://DOC-EXAMPLE-BUCKET.s3.dualstack.us-east-2.amazonaws.com`
func (o BucketOutput) WebsiteUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.WebsiteUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInput)(nil)).Elem(), &Bucket{})
	pulumi.RegisterOutputType(BucketOutput{})
}
