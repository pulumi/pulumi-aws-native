// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessGrantGrantee struct {
	// The unique identifier of the Grantee
	GranteeIdentifier string `pulumi:"granteeIdentifier"`
	// Configures the transfer acceleration state for an Amazon S3 bucket.
	GranteeType AccessGrantGranteeGranteeType `pulumi:"granteeType"`
}

// AccessGrantGranteeInput is an input type that accepts AccessGrantGranteeArgs and AccessGrantGranteeOutput values.
// You can construct a concrete instance of `AccessGrantGranteeInput` via:
//
//	AccessGrantGranteeArgs{...}
type AccessGrantGranteeInput interface {
	pulumi.Input

	ToAccessGrantGranteeOutput() AccessGrantGranteeOutput
	ToAccessGrantGranteeOutputWithContext(context.Context) AccessGrantGranteeOutput
}

type AccessGrantGranteeArgs struct {
	// The unique identifier of the Grantee
	GranteeIdentifier pulumi.StringInput `pulumi:"granteeIdentifier"`
	// Configures the transfer acceleration state for an Amazon S3 bucket.
	GranteeType AccessGrantGranteeGranteeTypeInput `pulumi:"granteeType"`
}

func (AccessGrantGranteeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGrantGrantee)(nil)).Elem()
}

func (i AccessGrantGranteeArgs) ToAccessGrantGranteeOutput() AccessGrantGranteeOutput {
	return i.ToAccessGrantGranteeOutputWithContext(context.Background())
}

func (i AccessGrantGranteeArgs) ToAccessGrantGranteeOutputWithContext(ctx context.Context) AccessGrantGranteeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantGranteeOutput)
}

type AccessGrantGranteeOutput struct{ *pulumi.OutputState }

func (AccessGrantGranteeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGrantGrantee)(nil)).Elem()
}

func (o AccessGrantGranteeOutput) ToAccessGrantGranteeOutput() AccessGrantGranteeOutput {
	return o
}

func (o AccessGrantGranteeOutput) ToAccessGrantGranteeOutputWithContext(ctx context.Context) AccessGrantGranteeOutput {
	return o
}

// The unique identifier of the Grantee
func (o AccessGrantGranteeOutput) GranteeIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGrantGrantee) string { return v.GranteeIdentifier }).(pulumi.StringOutput)
}

// Configures the transfer acceleration state for an Amazon S3 bucket.
func (o AccessGrantGranteeOutput) GranteeType() AccessGrantGranteeGranteeTypeOutput {
	return o.ApplyT(func(v AccessGrantGrantee) AccessGrantGranteeGranteeType { return v.GranteeType }).(AccessGrantGranteeGranteeTypeOutput)
}

type AccessGrantGranteePtrOutput struct{ *pulumi.OutputState }

func (AccessGrantGranteePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantGrantee)(nil)).Elem()
}

func (o AccessGrantGranteePtrOutput) ToAccessGrantGranteePtrOutput() AccessGrantGranteePtrOutput {
	return o
}

func (o AccessGrantGranteePtrOutput) ToAccessGrantGranteePtrOutputWithContext(ctx context.Context) AccessGrantGranteePtrOutput {
	return o
}

func (o AccessGrantGranteePtrOutput) Elem() AccessGrantGranteeOutput {
	return o.ApplyT(func(v *AccessGrantGrantee) AccessGrantGrantee {
		if v != nil {
			return *v
		}
		var ret AccessGrantGrantee
		return ret
	}).(AccessGrantGranteeOutput)
}

// The unique identifier of the Grantee
func (o AccessGrantGranteePtrOutput) GranteeIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGrantGrantee) *string {
		if v == nil {
			return nil
		}
		return &v.GranteeIdentifier
	}).(pulumi.StringPtrOutput)
}

// Configures the transfer acceleration state for an Amazon S3 bucket.
func (o AccessGrantGranteePtrOutput) GranteeType() AccessGrantGranteeGranteeTypePtrOutput {
	return o.ApplyT(func(v *AccessGrantGrantee) *AccessGrantGranteeGranteeType {
		if v == nil {
			return nil
		}
		return &v.GranteeType
	}).(AccessGrantGranteeGranteeTypePtrOutput)
}

type AccessGrantTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type AccessGrantsInstanceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type AccessGrantsLocationConfiguration struct {
	// The S3 sub prefix of a registered location in your S3 Access Grants instance
	S3SubPrefix string `pulumi:"s3SubPrefix"`
}

// AccessGrantsLocationConfigurationInput is an input type that accepts AccessGrantsLocationConfigurationArgs and AccessGrantsLocationConfigurationOutput values.
// You can construct a concrete instance of `AccessGrantsLocationConfigurationInput` via:
//
//	AccessGrantsLocationConfigurationArgs{...}
type AccessGrantsLocationConfigurationInput interface {
	pulumi.Input

	ToAccessGrantsLocationConfigurationOutput() AccessGrantsLocationConfigurationOutput
	ToAccessGrantsLocationConfigurationOutputWithContext(context.Context) AccessGrantsLocationConfigurationOutput
}

type AccessGrantsLocationConfigurationArgs struct {
	// The S3 sub prefix of a registered location in your S3 Access Grants instance
	S3SubPrefix pulumi.StringInput `pulumi:"s3SubPrefix"`
}

func (AccessGrantsLocationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGrantsLocationConfiguration)(nil)).Elem()
}

func (i AccessGrantsLocationConfigurationArgs) ToAccessGrantsLocationConfigurationOutput() AccessGrantsLocationConfigurationOutput {
	return i.ToAccessGrantsLocationConfigurationOutputWithContext(context.Background())
}

func (i AccessGrantsLocationConfigurationArgs) ToAccessGrantsLocationConfigurationOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationConfigurationOutput)
}

func (i AccessGrantsLocationConfigurationArgs) ToAccessGrantsLocationConfigurationPtrOutput() AccessGrantsLocationConfigurationPtrOutput {
	return i.ToAccessGrantsLocationConfigurationPtrOutputWithContext(context.Background())
}

func (i AccessGrantsLocationConfigurationArgs) ToAccessGrantsLocationConfigurationPtrOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationConfigurationOutput).ToAccessGrantsLocationConfigurationPtrOutputWithContext(ctx)
}

// AccessGrantsLocationConfigurationPtrInput is an input type that accepts AccessGrantsLocationConfigurationArgs, AccessGrantsLocationConfigurationPtr and AccessGrantsLocationConfigurationPtrOutput values.
// You can construct a concrete instance of `AccessGrantsLocationConfigurationPtrInput` via:
//
//	        AccessGrantsLocationConfigurationArgs{...}
//
//	or:
//
//	        nil
type AccessGrantsLocationConfigurationPtrInput interface {
	pulumi.Input

	ToAccessGrantsLocationConfigurationPtrOutput() AccessGrantsLocationConfigurationPtrOutput
	ToAccessGrantsLocationConfigurationPtrOutputWithContext(context.Context) AccessGrantsLocationConfigurationPtrOutput
}

type accessGrantsLocationConfigurationPtrType AccessGrantsLocationConfigurationArgs

func AccessGrantsLocationConfigurationPtr(v *AccessGrantsLocationConfigurationArgs) AccessGrantsLocationConfigurationPtrInput {
	return (*accessGrantsLocationConfigurationPtrType)(v)
}

func (*accessGrantsLocationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocationConfiguration)(nil)).Elem()
}

func (i *accessGrantsLocationConfigurationPtrType) ToAccessGrantsLocationConfigurationPtrOutput() AccessGrantsLocationConfigurationPtrOutput {
	return i.ToAccessGrantsLocationConfigurationPtrOutputWithContext(context.Background())
}

func (i *accessGrantsLocationConfigurationPtrType) ToAccessGrantsLocationConfigurationPtrOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationConfigurationPtrOutput)
}

type AccessGrantsLocationConfigurationOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessGrantsLocationConfiguration)(nil)).Elem()
}

func (o AccessGrantsLocationConfigurationOutput) ToAccessGrantsLocationConfigurationOutput() AccessGrantsLocationConfigurationOutput {
	return o
}

func (o AccessGrantsLocationConfigurationOutput) ToAccessGrantsLocationConfigurationOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationOutput {
	return o
}

func (o AccessGrantsLocationConfigurationOutput) ToAccessGrantsLocationConfigurationPtrOutput() AccessGrantsLocationConfigurationPtrOutput {
	return o.ToAccessGrantsLocationConfigurationPtrOutputWithContext(context.Background())
}

func (o AccessGrantsLocationConfigurationOutput) ToAccessGrantsLocationConfigurationPtrOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessGrantsLocationConfiguration) *AccessGrantsLocationConfiguration {
		return &v
	}).(AccessGrantsLocationConfigurationPtrOutput)
}

// The S3 sub prefix of a registered location in your S3 Access Grants instance
func (o AccessGrantsLocationConfigurationOutput) S3SubPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AccessGrantsLocationConfiguration) string { return v.S3SubPrefix }).(pulumi.StringOutput)
}

type AccessGrantsLocationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocationConfiguration)(nil)).Elem()
}

func (o AccessGrantsLocationConfigurationPtrOutput) ToAccessGrantsLocationConfigurationPtrOutput() AccessGrantsLocationConfigurationPtrOutput {
	return o
}

func (o AccessGrantsLocationConfigurationPtrOutput) ToAccessGrantsLocationConfigurationPtrOutputWithContext(ctx context.Context) AccessGrantsLocationConfigurationPtrOutput {
	return o
}

func (o AccessGrantsLocationConfigurationPtrOutput) Elem() AccessGrantsLocationConfigurationOutput {
	return o.ApplyT(func(v *AccessGrantsLocationConfiguration) AccessGrantsLocationConfiguration {
		if v != nil {
			return *v
		}
		var ret AccessGrantsLocationConfiguration
		return ret
	}).(AccessGrantsLocationConfigurationOutput)
}

// The S3 sub prefix of a registered location in your S3 Access Grants instance
func (o AccessGrantsLocationConfigurationPtrOutput) S3SubPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessGrantsLocationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.S3SubPrefix
	}).(pulumi.StringPtrOutput)
}

type AccessGrantsLocationTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type AccessPointPublicAccessBlockConfiguration struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
	// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	//  - PUT Object calls fail if the request includes a public ACL.
	//    . - PUT Bucket calls fail if the request includes a public ACL.
	//    Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls *bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy *bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls *bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
	// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

// AccessPointPublicAccessBlockConfigurationInput is an input type that accepts AccessPointPublicAccessBlockConfigurationArgs and AccessPointPublicAccessBlockConfigurationOutput values.
// You can construct a concrete instance of `AccessPointPublicAccessBlockConfigurationInput` via:
//
//	AccessPointPublicAccessBlockConfigurationArgs{...}
type AccessPointPublicAccessBlockConfigurationInput interface {
	pulumi.Input

	ToAccessPointPublicAccessBlockConfigurationOutput() AccessPointPublicAccessBlockConfigurationOutput
	ToAccessPointPublicAccessBlockConfigurationOutputWithContext(context.Context) AccessPointPublicAccessBlockConfigurationOutput
}

type AccessPointPublicAccessBlockConfigurationArgs struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
	// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	//  - PUT Object calls fail if the request includes a public ACL.
	//    . - PUT Bucket calls fail if the request includes a public ACL.
	//    Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls pulumi.BoolPtrInput `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy pulumi.BoolPtrInput `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls pulumi.BoolPtrInput `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
	// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets pulumi.BoolPtrInput `pulumi:"restrictPublicBuckets"`
}

func (AccessPointPublicAccessBlockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i AccessPointPublicAccessBlockConfigurationArgs) ToAccessPointPublicAccessBlockConfigurationOutput() AccessPointPublicAccessBlockConfigurationOutput {
	return i.ToAccessPointPublicAccessBlockConfigurationOutputWithContext(context.Background())
}

func (i AccessPointPublicAccessBlockConfigurationArgs) ToAccessPointPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPublicAccessBlockConfigurationOutput)
}

func (i AccessPointPublicAccessBlockConfigurationArgs) ToAccessPointPublicAccessBlockConfigurationPtrOutput() AccessPointPublicAccessBlockConfigurationPtrOutput {
	return i.ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i AccessPointPublicAccessBlockConfigurationArgs) ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPublicAccessBlockConfigurationOutput).ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx)
}

// AccessPointPublicAccessBlockConfigurationPtrInput is an input type that accepts AccessPointPublicAccessBlockConfigurationArgs, AccessPointPublicAccessBlockConfigurationPtr and AccessPointPublicAccessBlockConfigurationPtrOutput values.
// You can construct a concrete instance of `AccessPointPublicAccessBlockConfigurationPtrInput` via:
//
//	        AccessPointPublicAccessBlockConfigurationArgs{...}
//
//	or:
//
//	        nil
type AccessPointPublicAccessBlockConfigurationPtrInput interface {
	pulumi.Input

	ToAccessPointPublicAccessBlockConfigurationPtrOutput() AccessPointPublicAccessBlockConfigurationPtrOutput
	ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Context) AccessPointPublicAccessBlockConfigurationPtrOutput
}

type accessPointPublicAccessBlockConfigurationPtrType AccessPointPublicAccessBlockConfigurationArgs

func AccessPointPublicAccessBlockConfigurationPtr(v *AccessPointPublicAccessBlockConfigurationArgs) AccessPointPublicAccessBlockConfigurationPtrInput {
	return (*accessPointPublicAccessBlockConfigurationPtrType)(v)
}

func (*accessPointPublicAccessBlockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i *accessPointPublicAccessBlockConfigurationPtrType) ToAccessPointPublicAccessBlockConfigurationPtrOutput() AccessPointPublicAccessBlockConfigurationPtrOutput {
	return i.ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i *accessPointPublicAccessBlockConfigurationPtrType) ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPublicAccessBlockConfigurationPtrOutput)
}

type AccessPointPublicAccessBlockConfigurationOutput struct{ *pulumi.OutputState }

func (AccessPointPublicAccessBlockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o AccessPointPublicAccessBlockConfigurationOutput) ToAccessPointPublicAccessBlockConfigurationOutput() AccessPointPublicAccessBlockConfigurationOutput {
	return o
}

func (o AccessPointPublicAccessBlockConfigurationOutput) ToAccessPointPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationOutput {
	return o
}

func (o AccessPointPublicAccessBlockConfigurationOutput) ToAccessPointPublicAccessBlockConfigurationPtrOutput() AccessPointPublicAccessBlockConfigurationPtrOutput {
	return o.ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (o AccessPointPublicAccessBlockConfigurationOutput) ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointPublicAccessBlockConfiguration) *AccessPointPublicAccessBlockConfiguration {
		return &v
	}).(AccessPointPublicAccessBlockConfigurationPtrOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
//   - PUT Object calls fail if the request includes a public ACL.
//     . - PUT Bucket calls fail if the request includes a public ACL.
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o AccessPointPublicAccessBlockConfigurationOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPointPublicAccessBlockConfiguration) *bool { return v.BlockPublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
func (o AccessPointPublicAccessBlockConfigurationOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPointPublicAccessBlockConfiguration) *bool { return v.BlockPublicPolicy }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o AccessPointPublicAccessBlockConfigurationOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPointPublicAccessBlockConfiguration) *bool { return v.IgnorePublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o AccessPointPublicAccessBlockConfigurationOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPointPublicAccessBlockConfiguration) *bool { return v.RestrictPublicBuckets }).(pulumi.BoolPtrOutput)
}

type AccessPointPublicAccessBlockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccessPointPublicAccessBlockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o AccessPointPublicAccessBlockConfigurationPtrOutput) ToAccessPointPublicAccessBlockConfigurationPtrOutput() AccessPointPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o AccessPointPublicAccessBlockConfigurationPtrOutput) ToAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) AccessPointPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o AccessPointPublicAccessBlockConfigurationPtrOutput) Elem() AccessPointPublicAccessBlockConfigurationOutput {
	return o.ApplyT(func(v *AccessPointPublicAccessBlockConfiguration) AccessPointPublicAccessBlockConfiguration {
		if v != nil {
			return *v
		}
		var ret AccessPointPublicAccessBlockConfiguration
		return ret
	}).(AccessPointPublicAccessBlockConfigurationOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
//   - PUT Object calls fail if the request includes a public ACL.
//     . - PUT Bucket calls fail if the request includes a public ACL.
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o AccessPointPublicAccessBlockConfigurationPtrOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
func (o AccessPointPublicAccessBlockConfigurationPtrOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicPolicy
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o AccessPointPublicAccessBlockConfigurationPtrOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o AccessPointPublicAccessBlockConfigurationPtrOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictPublicBuckets
	}).(pulumi.BoolPtrOutput)
}

// The Virtual Private Cloud (VPC) configuration for a bucket access point.
type AccessPointVpcConfiguration struct {
	// If this field is specified, this access point will only allow connections from the specified VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

// AccessPointVpcConfigurationInput is an input type that accepts AccessPointVpcConfigurationArgs and AccessPointVpcConfigurationOutput values.
// You can construct a concrete instance of `AccessPointVpcConfigurationInput` via:
//
//	AccessPointVpcConfigurationArgs{...}
type AccessPointVpcConfigurationInput interface {
	pulumi.Input

	ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput
	ToAccessPointVpcConfigurationOutputWithContext(context.Context) AccessPointVpcConfigurationOutput
}

// The Virtual Private Cloud (VPC) configuration for a bucket access point.
type AccessPointVpcConfigurationArgs struct {
	// If this field is specified, this access point will only allow connections from the specified VPC ID.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (AccessPointVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointVpcConfiguration)(nil)).Elem()
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput {
	return i.ToAccessPointVpcConfigurationOutputWithContext(context.Background())
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationOutputWithContext(ctx context.Context) AccessPointVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointVpcConfigurationOutput)
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationPtrOutput() AccessPointVpcConfigurationPtrOutput {
	return i.ToAccessPointVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationPtrOutputWithContext(ctx context.Context) AccessPointVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointVpcConfigurationOutput).ToAccessPointVpcConfigurationPtrOutputWithContext(ctx)
}

// AccessPointVpcConfigurationPtrInput is an input type that accepts AccessPointVpcConfigurationArgs, AccessPointVpcConfigurationPtr and AccessPointVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `AccessPointVpcConfigurationPtrInput` via:
//
//	        AccessPointVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type AccessPointVpcConfigurationPtrInput interface {
	pulumi.Input

	ToAccessPointVpcConfigurationPtrOutput() AccessPointVpcConfigurationPtrOutput
	ToAccessPointVpcConfigurationPtrOutputWithContext(context.Context) AccessPointVpcConfigurationPtrOutput
}

type accessPointVpcConfigurationPtrType AccessPointVpcConfigurationArgs

func AccessPointVpcConfigurationPtr(v *AccessPointVpcConfigurationArgs) AccessPointVpcConfigurationPtrInput {
	return (*accessPointVpcConfigurationPtrType)(v)
}

func (*accessPointVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointVpcConfiguration)(nil)).Elem()
}

func (i *accessPointVpcConfigurationPtrType) ToAccessPointVpcConfigurationPtrOutput() AccessPointVpcConfigurationPtrOutput {
	return i.ToAccessPointVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *accessPointVpcConfigurationPtrType) ToAccessPointVpcConfigurationPtrOutputWithContext(ctx context.Context) AccessPointVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointVpcConfigurationPtrOutput)
}

// The Virtual Private Cloud (VPC) configuration for a bucket access point.
type AccessPointVpcConfigurationOutput struct{ *pulumi.OutputState }

func (AccessPointVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointVpcConfiguration)(nil)).Elem()
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput {
	return o
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationOutputWithContext(ctx context.Context) AccessPointVpcConfigurationOutput {
	return o
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationPtrOutput() AccessPointVpcConfigurationPtrOutput {
	return o.ToAccessPointVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationPtrOutputWithContext(ctx context.Context) AccessPointVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointVpcConfiguration) *AccessPointVpcConfiguration {
		return &v
	}).(AccessPointVpcConfigurationPtrOutput)
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o AccessPointVpcConfigurationOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointVpcConfiguration) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type AccessPointVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccessPointVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointVpcConfiguration)(nil)).Elem()
}

func (o AccessPointVpcConfigurationPtrOutput) ToAccessPointVpcConfigurationPtrOutput() AccessPointVpcConfigurationPtrOutput {
	return o
}

func (o AccessPointVpcConfigurationPtrOutput) ToAccessPointVpcConfigurationPtrOutputWithContext(ctx context.Context) AccessPointVpcConfigurationPtrOutput {
	return o
}

func (o AccessPointVpcConfigurationPtrOutput) Elem() AccessPointVpcConfigurationOutput {
	return o.ApplyT(func(v *AccessPointVpcConfiguration) AccessPointVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret AccessPointVpcConfiguration
		return ret
	}).(AccessPointVpcConfigurationOutput)
}

// If this field is specified, this access point will only allow connections from the specified VPC ID.
func (o AccessPointVpcConfigurationPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
type BucketAbortIncompleteMultipartUpload struct {
	// Specifies the number of days after which Amazon S3 stops an incomplete multipart upload.
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

// BucketAbortIncompleteMultipartUploadInput is an input type that accepts BucketAbortIncompleteMultipartUploadArgs and BucketAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `BucketAbortIncompleteMultipartUploadInput` via:
//
//	BucketAbortIncompleteMultipartUploadArgs{...}
type BucketAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput
	ToBucketAbortIncompleteMultipartUploadOutputWithContext(context.Context) BucketAbortIncompleteMultipartUploadOutput
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
type BucketAbortIncompleteMultipartUploadArgs struct {
	// Specifies the number of days after which Amazon S3 stops an incomplete multipart upload.
	DaysAfterInitiation pulumi.IntInput `pulumi:"daysAfterInitiation"`
}

func (BucketAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput {
	return i.ToBucketAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadOutput)
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadOutput).ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx)
}

// BucketAbortIncompleteMultipartUploadPtrInput is an input type that accepts BucketAbortIncompleteMultipartUploadArgs, BucketAbortIncompleteMultipartUploadPtr and BucketAbortIncompleteMultipartUploadPtrOutput values.
// You can construct a concrete instance of `BucketAbortIncompleteMultipartUploadPtrInput` via:
//
//	        BucketAbortIncompleteMultipartUploadArgs{...}
//
//	or:
//
//	        nil
type BucketAbortIncompleteMultipartUploadPtrInput interface {
	pulumi.Input

	ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput
	ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Context) BucketAbortIncompleteMultipartUploadPtrOutput
}

type bucketAbortIncompleteMultipartUploadPtrType BucketAbortIncompleteMultipartUploadArgs

func BucketAbortIncompleteMultipartUploadPtr(v *BucketAbortIncompleteMultipartUploadArgs) BucketAbortIncompleteMultipartUploadPtrInput {
	return (*bucketAbortIncompleteMultipartUploadPtrType)(v)
}

func (*bucketAbortIncompleteMultipartUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i *bucketAbortIncompleteMultipartUploadPtrType) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i *bucketAbortIncompleteMultipartUploadPtrType) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
type BucketAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAbortIncompleteMultipartUpload) *BucketAbortIncompleteMultipartUpload {
		return &v
	}).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the number of days after which Amazon S3 stops an incomplete multipart upload.
func (o BucketAbortIncompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntOutput {
	return o.ApplyT(func(v BucketAbortIncompleteMultipartUpload) int { return v.DaysAfterInitiation }).(pulumi.IntOutput)
}

type BucketAbortIncompleteMultipartUploadPtrOutput struct{ *pulumi.OutputState }

func (BucketAbortIncompleteMultipartUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) Elem() BucketAbortIncompleteMultipartUploadOutput {
	return o.ApplyT(func(v *BucketAbortIncompleteMultipartUpload) BucketAbortIncompleteMultipartUpload {
		if v != nil {
			return *v
		}
		var ret BucketAbortIncompleteMultipartUpload
		return ret
	}).(BucketAbortIncompleteMultipartUploadOutput)
}

// Specifies the number of days after which Amazon S3 stops an incomplete multipart upload.
func (o BucketAbortIncompleteMultipartUploadPtrOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketAbortIncompleteMultipartUpload) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterInitiation
	}).(pulumi.IntPtrOutput)
}

// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
type BucketAccelerateConfiguration struct {
	// Specifies the transfer acceleration status of the bucket.
	AccelerationStatus BucketAccelerateConfigurationAccelerationStatus `pulumi:"accelerationStatus"`
}

// BucketAccelerateConfigurationInput is an input type that accepts BucketAccelerateConfigurationArgs and BucketAccelerateConfigurationOutput values.
// You can construct a concrete instance of `BucketAccelerateConfigurationInput` via:
//
//	BucketAccelerateConfigurationArgs{...}
type BucketAccelerateConfigurationInput interface {
	pulumi.Input

	ToBucketAccelerateConfigurationOutput() BucketAccelerateConfigurationOutput
	ToBucketAccelerateConfigurationOutputWithContext(context.Context) BucketAccelerateConfigurationOutput
}

// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
type BucketAccelerateConfigurationArgs struct {
	// Specifies the transfer acceleration status of the bucket.
	AccelerationStatus BucketAccelerateConfigurationAccelerationStatusInput `pulumi:"accelerationStatus"`
}

func (BucketAccelerateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccelerateConfiguration)(nil)).Elem()
}

func (i BucketAccelerateConfigurationArgs) ToBucketAccelerateConfigurationOutput() BucketAccelerateConfigurationOutput {
	return i.ToBucketAccelerateConfigurationOutputWithContext(context.Background())
}

func (i BucketAccelerateConfigurationArgs) ToBucketAccelerateConfigurationOutputWithContext(ctx context.Context) BucketAccelerateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccelerateConfigurationOutput)
}

func (i BucketAccelerateConfigurationArgs) ToBucketAccelerateConfigurationPtrOutput() BucketAccelerateConfigurationPtrOutput {
	return i.ToBucketAccelerateConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketAccelerateConfigurationArgs) ToBucketAccelerateConfigurationPtrOutputWithContext(ctx context.Context) BucketAccelerateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccelerateConfigurationOutput).ToBucketAccelerateConfigurationPtrOutputWithContext(ctx)
}

// BucketAccelerateConfigurationPtrInput is an input type that accepts BucketAccelerateConfigurationArgs, BucketAccelerateConfigurationPtr and BucketAccelerateConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketAccelerateConfigurationPtrInput` via:
//
//	        BucketAccelerateConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketAccelerateConfigurationPtrInput interface {
	pulumi.Input

	ToBucketAccelerateConfigurationPtrOutput() BucketAccelerateConfigurationPtrOutput
	ToBucketAccelerateConfigurationPtrOutputWithContext(context.Context) BucketAccelerateConfigurationPtrOutput
}

type bucketAccelerateConfigurationPtrType BucketAccelerateConfigurationArgs

func BucketAccelerateConfigurationPtr(v *BucketAccelerateConfigurationArgs) BucketAccelerateConfigurationPtrInput {
	return (*bucketAccelerateConfigurationPtrType)(v)
}

func (*bucketAccelerateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccelerateConfiguration)(nil)).Elem()
}

func (i *bucketAccelerateConfigurationPtrType) ToBucketAccelerateConfigurationPtrOutput() BucketAccelerateConfigurationPtrOutput {
	return i.ToBucketAccelerateConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketAccelerateConfigurationPtrType) ToBucketAccelerateConfigurationPtrOutputWithContext(ctx context.Context) BucketAccelerateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccelerateConfigurationPtrOutput)
}

// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
type BucketAccelerateConfigurationOutput struct{ *pulumi.OutputState }

func (BucketAccelerateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccelerateConfiguration)(nil)).Elem()
}

func (o BucketAccelerateConfigurationOutput) ToBucketAccelerateConfigurationOutput() BucketAccelerateConfigurationOutput {
	return o
}

func (o BucketAccelerateConfigurationOutput) ToBucketAccelerateConfigurationOutputWithContext(ctx context.Context) BucketAccelerateConfigurationOutput {
	return o
}

func (o BucketAccelerateConfigurationOutput) ToBucketAccelerateConfigurationPtrOutput() BucketAccelerateConfigurationPtrOutput {
	return o.ToBucketAccelerateConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketAccelerateConfigurationOutput) ToBucketAccelerateConfigurationPtrOutputWithContext(ctx context.Context) BucketAccelerateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAccelerateConfiguration) *BucketAccelerateConfiguration {
		return &v
	}).(BucketAccelerateConfigurationPtrOutput)
}

// Specifies the transfer acceleration status of the bucket.
func (o BucketAccelerateConfigurationOutput) AccelerationStatus() BucketAccelerateConfigurationAccelerationStatusOutput {
	return o.ApplyT(func(v BucketAccelerateConfiguration) BucketAccelerateConfigurationAccelerationStatus {
		return v.AccelerationStatus
	}).(BucketAccelerateConfigurationAccelerationStatusOutput)
}

type BucketAccelerateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketAccelerateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccelerateConfiguration)(nil)).Elem()
}

func (o BucketAccelerateConfigurationPtrOutput) ToBucketAccelerateConfigurationPtrOutput() BucketAccelerateConfigurationPtrOutput {
	return o
}

func (o BucketAccelerateConfigurationPtrOutput) ToBucketAccelerateConfigurationPtrOutputWithContext(ctx context.Context) BucketAccelerateConfigurationPtrOutput {
	return o
}

func (o BucketAccelerateConfigurationPtrOutput) Elem() BucketAccelerateConfigurationOutput {
	return o.ApplyT(func(v *BucketAccelerateConfiguration) BucketAccelerateConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketAccelerateConfiguration
		return ret
	}).(BucketAccelerateConfigurationOutput)
}

// Specifies the transfer acceleration status of the bucket.
func (o BucketAccelerateConfigurationPtrOutput) AccelerationStatus() BucketAccelerateConfigurationAccelerationStatusPtrOutput {
	return o.ApplyT(func(v *BucketAccelerateConfiguration) *BucketAccelerateConfigurationAccelerationStatus {
		if v == nil {
			return nil
		}
		return &v.AccelerationStatus
	}).(BucketAccelerateConfigurationAccelerationStatusPtrOutput)
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
type BucketAccessControlTranslation struct {
	// Specifies the replica ownership. For default and valid values, see [PUT bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API Reference*.
	Owner string `pulumi:"owner"`
}

// BucketAccessControlTranslationInput is an input type that accepts BucketAccessControlTranslationArgs and BucketAccessControlTranslationOutput values.
// You can construct a concrete instance of `BucketAccessControlTranslationInput` via:
//
//	BucketAccessControlTranslationArgs{...}
type BucketAccessControlTranslationInput interface {
	pulumi.Input

	ToBucketAccessControlTranslationOutput() BucketAccessControlTranslationOutput
	ToBucketAccessControlTranslationOutputWithContext(context.Context) BucketAccessControlTranslationOutput
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
type BucketAccessControlTranslationArgs struct {
	// Specifies the replica ownership. For default and valid values, see [PUT bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API Reference*.
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (BucketAccessControlTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlTranslation)(nil)).Elem()
}

func (i BucketAccessControlTranslationArgs) ToBucketAccessControlTranslationOutput() BucketAccessControlTranslationOutput {
	return i.ToBucketAccessControlTranslationOutputWithContext(context.Background())
}

func (i BucketAccessControlTranslationArgs) ToBucketAccessControlTranslationOutputWithContext(ctx context.Context) BucketAccessControlTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlTranslationOutput)
}

func (i BucketAccessControlTranslationArgs) ToBucketAccessControlTranslationPtrOutput() BucketAccessControlTranslationPtrOutput {
	return i.ToBucketAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (i BucketAccessControlTranslationArgs) ToBucketAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketAccessControlTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlTranslationOutput).ToBucketAccessControlTranslationPtrOutputWithContext(ctx)
}

// BucketAccessControlTranslationPtrInput is an input type that accepts BucketAccessControlTranslationArgs, BucketAccessControlTranslationPtr and BucketAccessControlTranslationPtrOutput values.
// You can construct a concrete instance of `BucketAccessControlTranslationPtrInput` via:
//
//	        BucketAccessControlTranslationArgs{...}
//
//	or:
//
//	        nil
type BucketAccessControlTranslationPtrInput interface {
	pulumi.Input

	ToBucketAccessControlTranslationPtrOutput() BucketAccessControlTranslationPtrOutput
	ToBucketAccessControlTranslationPtrOutputWithContext(context.Context) BucketAccessControlTranslationPtrOutput
}

type bucketAccessControlTranslationPtrType BucketAccessControlTranslationArgs

func BucketAccessControlTranslationPtr(v *BucketAccessControlTranslationArgs) BucketAccessControlTranslationPtrInput {
	return (*bucketAccessControlTranslationPtrType)(v)
}

func (*bucketAccessControlTranslationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlTranslation)(nil)).Elem()
}

func (i *bucketAccessControlTranslationPtrType) ToBucketAccessControlTranslationPtrOutput() BucketAccessControlTranslationPtrOutput {
	return i.ToBucketAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (i *bucketAccessControlTranslationPtrType) ToBucketAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketAccessControlTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlTranslationPtrOutput)
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
type BucketAccessControlTranslationOutput struct{ *pulumi.OutputState }

func (BucketAccessControlTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlTranslation)(nil)).Elem()
}

func (o BucketAccessControlTranslationOutput) ToBucketAccessControlTranslationOutput() BucketAccessControlTranslationOutput {
	return o
}

func (o BucketAccessControlTranslationOutput) ToBucketAccessControlTranslationOutputWithContext(ctx context.Context) BucketAccessControlTranslationOutput {
	return o
}

func (o BucketAccessControlTranslationOutput) ToBucketAccessControlTranslationPtrOutput() BucketAccessControlTranslationPtrOutput {
	return o.ToBucketAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (o BucketAccessControlTranslationOutput) ToBucketAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketAccessControlTranslationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAccessControlTranslation) *BucketAccessControlTranslation {
		return &v
	}).(BucketAccessControlTranslationPtrOutput)
}

// Specifies the replica ownership. For default and valid values, see [PUT bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API Reference*.
func (o BucketAccessControlTranslationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlTranslation) string { return v.Owner }).(pulumi.StringOutput)
}

type BucketAccessControlTranslationPtrOutput struct{ *pulumi.OutputState }

func (BucketAccessControlTranslationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlTranslation)(nil)).Elem()
}

func (o BucketAccessControlTranslationPtrOutput) ToBucketAccessControlTranslationPtrOutput() BucketAccessControlTranslationPtrOutput {
	return o
}

func (o BucketAccessControlTranslationPtrOutput) ToBucketAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketAccessControlTranslationPtrOutput {
	return o
}

func (o BucketAccessControlTranslationPtrOutput) Elem() BucketAccessControlTranslationOutput {
	return o.ApplyT(func(v *BucketAccessControlTranslation) BucketAccessControlTranslation {
		if v != nil {
			return *v
		}
		var ret BucketAccessControlTranslation
		return ret
	}).(BucketAccessControlTranslationOutput)
}

// Specifies the replica ownership. For default and valid values, see [PUT bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the *Amazon S3 API Reference*.
func (o BucketAccessControlTranslationPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessControlTranslation) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
type BucketAnalyticsConfiguration struct {
	// The ID that identifies the analytics configuration.
	Id string `pulumi:"id"`
	// The prefix that an object must have to be included in the analytics results.
	Prefix *string `pulumi:"prefix"`
	// Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes.
	StorageClassAnalysis BucketStorageClassAnalysis `pulumi:"storageClassAnalysis"`
	// The tags to use when evaluating an analytics filter.
	//  The analytics only includes objects that meet the filter's criteria. If no filter is specified, all of the contents of the bucket are included in the analysis.
	TagFilters []BucketTagFilter `pulumi:"tagFilters"`
}

// BucketAnalyticsConfigurationInput is an input type that accepts BucketAnalyticsConfigurationArgs and BucketAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `BucketAnalyticsConfigurationInput` via:
//
//	BucketAnalyticsConfigurationArgs{...}
type BucketAnalyticsConfigurationInput interface {
	pulumi.Input

	ToBucketAnalyticsConfigurationOutput() BucketAnalyticsConfigurationOutput
	ToBucketAnalyticsConfigurationOutputWithContext(context.Context) BucketAnalyticsConfigurationOutput
}

// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
type BucketAnalyticsConfigurationArgs struct {
	// The ID that identifies the analytics configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The prefix that an object must have to be included in the analytics results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes.
	StorageClassAnalysis BucketStorageClassAnalysisInput `pulumi:"storageClassAnalysis"`
	// The tags to use when evaluating an analytics filter.
	//  The analytics only includes objects that meet the filter's criteria. If no filter is specified, all of the contents of the bucket are included in the analysis.
	TagFilters BucketTagFilterArrayInput `pulumi:"tagFilters"`
}

func (BucketAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAnalyticsConfiguration)(nil)).Elem()
}

func (i BucketAnalyticsConfigurationArgs) ToBucketAnalyticsConfigurationOutput() BucketAnalyticsConfigurationOutput {
	return i.ToBucketAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i BucketAnalyticsConfigurationArgs) ToBucketAnalyticsConfigurationOutputWithContext(ctx context.Context) BucketAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAnalyticsConfigurationOutput)
}

// BucketAnalyticsConfigurationArrayInput is an input type that accepts BucketAnalyticsConfigurationArray and BucketAnalyticsConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketAnalyticsConfigurationArrayInput` via:
//
//	BucketAnalyticsConfigurationArray{ BucketAnalyticsConfigurationArgs{...} }
type BucketAnalyticsConfigurationArrayInput interface {
	pulumi.Input

	ToBucketAnalyticsConfigurationArrayOutput() BucketAnalyticsConfigurationArrayOutput
	ToBucketAnalyticsConfigurationArrayOutputWithContext(context.Context) BucketAnalyticsConfigurationArrayOutput
}

type BucketAnalyticsConfigurationArray []BucketAnalyticsConfigurationInput

func (BucketAnalyticsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAnalyticsConfiguration)(nil)).Elem()
}

func (i BucketAnalyticsConfigurationArray) ToBucketAnalyticsConfigurationArrayOutput() BucketAnalyticsConfigurationArrayOutput {
	return i.ToBucketAnalyticsConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketAnalyticsConfigurationArray) ToBucketAnalyticsConfigurationArrayOutputWithContext(ctx context.Context) BucketAnalyticsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAnalyticsConfigurationArrayOutput)
}

// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
type BucketAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (BucketAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAnalyticsConfiguration)(nil)).Elem()
}

func (o BucketAnalyticsConfigurationOutput) ToBucketAnalyticsConfigurationOutput() BucketAnalyticsConfigurationOutput {
	return o
}

func (o BucketAnalyticsConfigurationOutput) ToBucketAnalyticsConfigurationOutputWithContext(ctx context.Context) BucketAnalyticsConfigurationOutput {
	return o
}

// The ID that identifies the analytics configuration.
func (o BucketAnalyticsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAnalyticsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The prefix that an object must have to be included in the analytics results.
func (o BucketAnalyticsConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAnalyticsConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Contains data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes.
func (o BucketAnalyticsConfigurationOutput) StorageClassAnalysis() BucketStorageClassAnalysisOutput {
	return o.ApplyT(func(v BucketAnalyticsConfiguration) BucketStorageClassAnalysis { return v.StorageClassAnalysis }).(BucketStorageClassAnalysisOutput)
}

// The tags to use when evaluating an analytics filter.
//
//	The analytics only includes objects that meet the filter's criteria. If no filter is specified, all of the contents of the bucket are included in the analysis.
func (o BucketAnalyticsConfigurationOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v BucketAnalyticsConfiguration) []BucketTagFilter { return v.TagFilters }).(BucketTagFilterArrayOutput)
}

type BucketAnalyticsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketAnalyticsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAnalyticsConfiguration)(nil)).Elem()
}

func (o BucketAnalyticsConfigurationArrayOutput) ToBucketAnalyticsConfigurationArrayOutput() BucketAnalyticsConfigurationArrayOutput {
	return o
}

func (o BucketAnalyticsConfigurationArrayOutput) ToBucketAnalyticsConfigurationArrayOutputWithContext(ctx context.Context) BucketAnalyticsConfigurationArrayOutput {
	return o
}

func (o BucketAnalyticsConfigurationArrayOutput) Index(i pulumi.IntInput) BucketAnalyticsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketAnalyticsConfiguration {
		return vs[0].([]BucketAnalyticsConfiguration)[vs[1].(int)]
	}).(BucketAnalyticsConfigurationOutput)
}

// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
type BucketCorsConfiguration struct {
	// A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
	CorsRules []BucketCorsRule `pulumi:"corsRules"`
}

// BucketCorsConfigurationInput is an input type that accepts BucketCorsConfigurationArgs and BucketCorsConfigurationOutput values.
// You can construct a concrete instance of `BucketCorsConfigurationInput` via:
//
//	BucketCorsConfigurationArgs{...}
type BucketCorsConfigurationInput interface {
	pulumi.Input

	ToBucketCorsConfigurationOutput() BucketCorsConfigurationOutput
	ToBucketCorsConfigurationOutputWithContext(context.Context) BucketCorsConfigurationOutput
}

// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
type BucketCorsConfigurationArgs struct {
	// A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
	CorsRules BucketCorsRuleArrayInput `pulumi:"corsRules"`
}

func (BucketCorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsConfiguration)(nil)).Elem()
}

func (i BucketCorsConfigurationArgs) ToBucketCorsConfigurationOutput() BucketCorsConfigurationOutput {
	return i.ToBucketCorsConfigurationOutputWithContext(context.Background())
}

func (i BucketCorsConfigurationArgs) ToBucketCorsConfigurationOutputWithContext(ctx context.Context) BucketCorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsConfigurationOutput)
}

func (i BucketCorsConfigurationArgs) ToBucketCorsConfigurationPtrOutput() BucketCorsConfigurationPtrOutput {
	return i.ToBucketCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketCorsConfigurationArgs) ToBucketCorsConfigurationPtrOutputWithContext(ctx context.Context) BucketCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsConfigurationOutput).ToBucketCorsConfigurationPtrOutputWithContext(ctx)
}

// BucketCorsConfigurationPtrInput is an input type that accepts BucketCorsConfigurationArgs, BucketCorsConfigurationPtr and BucketCorsConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketCorsConfigurationPtrInput` via:
//
//	        BucketCorsConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketCorsConfigurationPtrInput interface {
	pulumi.Input

	ToBucketCorsConfigurationPtrOutput() BucketCorsConfigurationPtrOutput
	ToBucketCorsConfigurationPtrOutputWithContext(context.Context) BucketCorsConfigurationPtrOutput
}

type bucketCorsConfigurationPtrType BucketCorsConfigurationArgs

func BucketCorsConfigurationPtr(v *BucketCorsConfigurationArgs) BucketCorsConfigurationPtrInput {
	return (*bucketCorsConfigurationPtrType)(v)
}

func (*bucketCorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketCorsConfiguration)(nil)).Elem()
}

func (i *bucketCorsConfigurationPtrType) ToBucketCorsConfigurationPtrOutput() BucketCorsConfigurationPtrOutput {
	return i.ToBucketCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketCorsConfigurationPtrType) ToBucketCorsConfigurationPtrOutputWithContext(ctx context.Context) BucketCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsConfigurationPtrOutput)
}

// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
type BucketCorsConfigurationOutput struct{ *pulumi.OutputState }

func (BucketCorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsConfiguration)(nil)).Elem()
}

func (o BucketCorsConfigurationOutput) ToBucketCorsConfigurationOutput() BucketCorsConfigurationOutput {
	return o
}

func (o BucketCorsConfigurationOutput) ToBucketCorsConfigurationOutputWithContext(ctx context.Context) BucketCorsConfigurationOutput {
	return o
}

func (o BucketCorsConfigurationOutput) ToBucketCorsConfigurationPtrOutput() BucketCorsConfigurationPtrOutput {
	return o.ToBucketCorsConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketCorsConfigurationOutput) ToBucketCorsConfigurationPtrOutputWithContext(ctx context.Context) BucketCorsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketCorsConfiguration) *BucketCorsConfiguration {
		return &v
	}).(BucketCorsConfigurationPtrOutput)
}

// A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
func (o BucketCorsConfigurationOutput) CorsRules() BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v BucketCorsConfiguration) []BucketCorsRule { return v.CorsRules }).(BucketCorsRuleArrayOutput)
}

type BucketCorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketCorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketCorsConfiguration)(nil)).Elem()
}

func (o BucketCorsConfigurationPtrOutput) ToBucketCorsConfigurationPtrOutput() BucketCorsConfigurationPtrOutput {
	return o
}

func (o BucketCorsConfigurationPtrOutput) ToBucketCorsConfigurationPtrOutputWithContext(ctx context.Context) BucketCorsConfigurationPtrOutput {
	return o
}

func (o BucketCorsConfigurationPtrOutput) Elem() BucketCorsConfigurationOutput {
	return o.ApplyT(func(v *BucketCorsConfiguration) BucketCorsConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketCorsConfiguration
		return ret
	}).(BucketCorsConfigurationOutput)
}

// A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
func (o BucketCorsConfigurationPtrOutput) CorsRules() BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *BucketCorsConfiguration) []BucketCorsRule {
		if v == nil {
			return nil
		}
		return v.CorsRules
	}).(BucketCorsRuleArrayOutput)
}

// Specifies a cross-origin access rule for an Amazon S3 bucket.
type BucketCorsRule struct {
	// Headers that are specified in the ``Access-Control-Request-Headers`` header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// An HTTP method that you allow the origin to run.
	//  *Allowed values*: ``GET`` | ``PUT`` | ``HEAD`` | ``POST`` | ``DELETE``
	AllowedMethods []BucketCorsRuleAllowedMethodsItem `pulumi:"allowedMethods"`
	// One or more origins you want customers to be able to access the bucket from.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// A unique identifier for this rule. The value must be no more than 255 characters.
	Id *string `pulumi:"id"`
	// The time in seconds that your browser is to cache the preflight response for the specified resource.
	MaxAge *int `pulumi:"maxAge"`
}

// BucketCorsRuleInput is an input type that accepts BucketCorsRuleArgs and BucketCorsRuleOutput values.
// You can construct a concrete instance of `BucketCorsRuleInput` via:
//
//	BucketCorsRuleArgs{...}
type BucketCorsRuleInput interface {
	pulumi.Input

	ToBucketCorsRuleOutput() BucketCorsRuleOutput
	ToBucketCorsRuleOutputWithContext(context.Context) BucketCorsRuleOutput
}

// Specifies a cross-origin access rule for an Amazon S3 bucket.
type BucketCorsRuleArgs struct {
	// Headers that are specified in the ``Access-Control-Request-Headers`` header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// An HTTP method that you allow the origin to run.
	//  *Allowed values*: ``GET`` | ``PUT`` | ``HEAD`` | ``POST`` | ``DELETE``
	AllowedMethods BucketCorsRuleAllowedMethodsItemArrayInput `pulumi:"allowedMethods"`
	// One or more origins you want customers to be able to access the bucket from.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// A unique identifier for this rule. The value must be no more than 255 characters.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The time in seconds that your browser is to cache the preflight response for the specified resource.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (BucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return i.ToBucketCorsRuleOutputWithContext(context.Background())
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleOutput)
}

// BucketCorsRuleArrayInput is an input type that accepts BucketCorsRuleArray and BucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `BucketCorsRuleArrayInput` via:
//
//	BucketCorsRuleArray{ BucketCorsRuleArgs{...} }
type BucketCorsRuleArrayInput interface {
	pulumi.Input

	ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput
	ToBucketCorsRuleArrayOutputWithContext(context.Context) BucketCorsRuleArrayOutput
}

type BucketCorsRuleArray []BucketCorsRuleInput

func (BucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return i.ToBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleArrayOutput)
}

// Specifies a cross-origin access rule for an Amazon S3 bucket.
type BucketCorsRuleOutput struct{ *pulumi.OutputState }

func (BucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return o
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return o
}

// Headers that are specified in the “Access-Control-Request-Headers“ header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.
func (o BucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// An HTTP method that you allow the origin to run.
//
//	*Allowed values*: ``GET`` | ``PUT`` | ``HEAD`` | ``POST`` | ``DELETE``
func (o BucketCorsRuleOutput) AllowedMethods() BucketCorsRuleAllowedMethodsItemArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []BucketCorsRuleAllowedMethodsItem { return v.AllowedMethods }).(BucketCorsRuleAllowedMethodsItemArrayOutput)
}

// One or more origins you want customers to be able to access the bucket from.
func (o BucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript “XMLHttpRequest“ object).
func (o BucketCorsRuleOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// A unique identifier for this rule. The value must be no more than 255 characters.
func (o BucketCorsRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketCorsRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The time in seconds that your browser is to cache the preflight response for the specified resource.
func (o BucketCorsRuleOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCorsRule) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type BucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) Index(i pulumi.IntInput) BucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorsRule {
		return vs[0].([]BucketCorsRule)[vs[1].(int)]
	}).(BucketCorsRuleOutput)
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
type BucketDataExport struct {
	// The place to store the data for an analysis.
	Destination BucketDestination `pulumi:"destination"`
	// The version of the output schema to use when exporting data. Must be ``V_1``.
	OutputSchemaVersion string `pulumi:"outputSchemaVersion"`
}

// BucketDataExportInput is an input type that accepts BucketDataExportArgs and BucketDataExportOutput values.
// You can construct a concrete instance of `BucketDataExportInput` via:
//
//	BucketDataExportArgs{...}
type BucketDataExportInput interface {
	pulumi.Input

	ToBucketDataExportOutput() BucketDataExportOutput
	ToBucketDataExportOutputWithContext(context.Context) BucketDataExportOutput
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
type BucketDataExportArgs struct {
	// The place to store the data for an analysis.
	Destination BucketDestinationInput `pulumi:"destination"`
	// The version of the output schema to use when exporting data. Must be ``V_1``.
	OutputSchemaVersion pulumi.StringInput `pulumi:"outputSchemaVersion"`
}

func (BucketDataExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDataExport)(nil)).Elem()
}

func (i BucketDataExportArgs) ToBucketDataExportOutput() BucketDataExportOutput {
	return i.ToBucketDataExportOutputWithContext(context.Background())
}

func (i BucketDataExportArgs) ToBucketDataExportOutputWithContext(ctx context.Context) BucketDataExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDataExportOutput)
}

func (i BucketDataExportArgs) ToBucketDataExportPtrOutput() BucketDataExportPtrOutput {
	return i.ToBucketDataExportPtrOutputWithContext(context.Background())
}

func (i BucketDataExportArgs) ToBucketDataExportPtrOutputWithContext(ctx context.Context) BucketDataExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDataExportOutput).ToBucketDataExportPtrOutputWithContext(ctx)
}

// BucketDataExportPtrInput is an input type that accepts BucketDataExportArgs, BucketDataExportPtr and BucketDataExportPtrOutput values.
// You can construct a concrete instance of `BucketDataExportPtrInput` via:
//
//	        BucketDataExportArgs{...}
//
//	or:
//
//	        nil
type BucketDataExportPtrInput interface {
	pulumi.Input

	ToBucketDataExportPtrOutput() BucketDataExportPtrOutput
	ToBucketDataExportPtrOutputWithContext(context.Context) BucketDataExportPtrOutput
}

type bucketDataExportPtrType BucketDataExportArgs

func BucketDataExportPtr(v *BucketDataExportArgs) BucketDataExportPtrInput {
	return (*bucketDataExportPtrType)(v)
}

func (*bucketDataExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDataExport)(nil)).Elem()
}

func (i *bucketDataExportPtrType) ToBucketDataExportPtrOutput() BucketDataExportPtrOutput {
	return i.ToBucketDataExportPtrOutputWithContext(context.Background())
}

func (i *bucketDataExportPtrType) ToBucketDataExportPtrOutputWithContext(ctx context.Context) BucketDataExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDataExportPtrOutput)
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
type BucketDataExportOutput struct{ *pulumi.OutputState }

func (BucketDataExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDataExport)(nil)).Elem()
}

func (o BucketDataExportOutput) ToBucketDataExportOutput() BucketDataExportOutput {
	return o
}

func (o BucketDataExportOutput) ToBucketDataExportOutputWithContext(ctx context.Context) BucketDataExportOutput {
	return o
}

func (o BucketDataExportOutput) ToBucketDataExportPtrOutput() BucketDataExportPtrOutput {
	return o.ToBucketDataExportPtrOutputWithContext(context.Background())
}

func (o BucketDataExportOutput) ToBucketDataExportPtrOutputWithContext(ctx context.Context) BucketDataExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketDataExport) *BucketDataExport {
		return &v
	}).(BucketDataExportPtrOutput)
}

// The place to store the data for an analysis.
func (o BucketDataExportOutput) Destination() BucketDestinationOutput {
	return o.ApplyT(func(v BucketDataExport) BucketDestination { return v.Destination }).(BucketDestinationOutput)
}

// The version of the output schema to use when exporting data. Must be “V_1“.
func (o BucketDataExportOutput) OutputSchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BucketDataExport) string { return v.OutputSchemaVersion }).(pulumi.StringOutput)
}

type BucketDataExportPtrOutput struct{ *pulumi.OutputState }

func (BucketDataExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDataExport)(nil)).Elem()
}

func (o BucketDataExportPtrOutput) ToBucketDataExportPtrOutput() BucketDataExportPtrOutput {
	return o
}

func (o BucketDataExportPtrOutput) ToBucketDataExportPtrOutputWithContext(ctx context.Context) BucketDataExportPtrOutput {
	return o
}

func (o BucketDataExportPtrOutput) Elem() BucketDataExportOutput {
	return o.ApplyT(func(v *BucketDataExport) BucketDataExport {
		if v != nil {
			return *v
		}
		var ret BucketDataExport
		return ret
	}).(BucketDataExportOutput)
}

// The place to store the data for an analysis.
func (o BucketDataExportPtrOutput) Destination() BucketDestinationPtrOutput {
	return o.ApplyT(func(v *BucketDataExport) *BucketDestination {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(BucketDestinationPtrOutput)
}

// The version of the output schema to use when exporting data. Must be “V_1“.
func (o BucketDataExportPtrOutput) OutputSchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDataExport) *string {
		if v == nil {
			return nil
		}
		return &v.OutputSchemaVersion
	}).(pulumi.StringPtrOutput)
}

// The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.
//   - The “DefaultRetention“ settings require both a mode and a period.
//   - The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
type BucketDefaultRetention struct {
	// The number of days that you want to specify for the default retention period. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Days *int `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Mode *BucketDefaultRetentionMode `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Years *int `pulumi:"years"`
}

// BucketDefaultRetentionInput is an input type that accepts BucketDefaultRetentionArgs and BucketDefaultRetentionOutput values.
// You can construct a concrete instance of `BucketDefaultRetentionInput` via:
//
//	BucketDefaultRetentionArgs{...}
type BucketDefaultRetentionInput interface {
	pulumi.Input

	ToBucketDefaultRetentionOutput() BucketDefaultRetentionOutput
	ToBucketDefaultRetentionOutputWithContext(context.Context) BucketDefaultRetentionOutput
}

// The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.
//   - The “DefaultRetention“ settings require both a mode and a period.
//   - The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
type BucketDefaultRetentionArgs struct {
	// The number of days that you want to specify for the default retention period. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Mode BucketDefaultRetentionModePtrInput `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period. If Object Lock is turned on, you must specify ``Mode`` and specify either ``Days`` or ``Years``.
	Years pulumi.IntPtrInput `pulumi:"years"`
}

func (BucketDefaultRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDefaultRetention)(nil)).Elem()
}

func (i BucketDefaultRetentionArgs) ToBucketDefaultRetentionOutput() BucketDefaultRetentionOutput {
	return i.ToBucketDefaultRetentionOutputWithContext(context.Background())
}

func (i BucketDefaultRetentionArgs) ToBucketDefaultRetentionOutputWithContext(ctx context.Context) BucketDefaultRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefaultRetentionOutput)
}

func (i BucketDefaultRetentionArgs) ToBucketDefaultRetentionPtrOutput() BucketDefaultRetentionPtrOutput {
	return i.ToBucketDefaultRetentionPtrOutputWithContext(context.Background())
}

func (i BucketDefaultRetentionArgs) ToBucketDefaultRetentionPtrOutputWithContext(ctx context.Context) BucketDefaultRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefaultRetentionOutput).ToBucketDefaultRetentionPtrOutputWithContext(ctx)
}

// BucketDefaultRetentionPtrInput is an input type that accepts BucketDefaultRetentionArgs, BucketDefaultRetentionPtr and BucketDefaultRetentionPtrOutput values.
// You can construct a concrete instance of `BucketDefaultRetentionPtrInput` via:
//
//	        BucketDefaultRetentionArgs{...}
//
//	or:
//
//	        nil
type BucketDefaultRetentionPtrInput interface {
	pulumi.Input

	ToBucketDefaultRetentionPtrOutput() BucketDefaultRetentionPtrOutput
	ToBucketDefaultRetentionPtrOutputWithContext(context.Context) BucketDefaultRetentionPtrOutput
}

type bucketDefaultRetentionPtrType BucketDefaultRetentionArgs

func BucketDefaultRetentionPtr(v *BucketDefaultRetentionArgs) BucketDefaultRetentionPtrInput {
	return (*bucketDefaultRetentionPtrType)(v)
}

func (*bucketDefaultRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDefaultRetention)(nil)).Elem()
}

func (i *bucketDefaultRetentionPtrType) ToBucketDefaultRetentionPtrOutput() BucketDefaultRetentionPtrOutput {
	return i.ToBucketDefaultRetentionPtrOutputWithContext(context.Background())
}

func (i *bucketDefaultRetentionPtrType) ToBucketDefaultRetentionPtrOutputWithContext(ctx context.Context) BucketDefaultRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefaultRetentionPtrOutput)
}

// The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.
//   - The “DefaultRetention“ settings require both a mode and a period.
//   - The “DefaultRetention“ period can be either “Days“ or “Years“ but you must select one. You cannot specify “Days“ and “Years“ at the same time.
type BucketDefaultRetentionOutput struct{ *pulumi.OutputState }

func (BucketDefaultRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDefaultRetention)(nil)).Elem()
}

func (o BucketDefaultRetentionOutput) ToBucketDefaultRetentionOutput() BucketDefaultRetentionOutput {
	return o
}

func (o BucketDefaultRetentionOutput) ToBucketDefaultRetentionOutputWithContext(ctx context.Context) BucketDefaultRetentionOutput {
	return o
}

func (o BucketDefaultRetentionOutput) ToBucketDefaultRetentionPtrOutput() BucketDefaultRetentionPtrOutput {
	return o.ToBucketDefaultRetentionPtrOutputWithContext(context.Background())
}

func (o BucketDefaultRetentionOutput) ToBucketDefaultRetentionPtrOutputWithContext(ctx context.Context) BucketDefaultRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketDefaultRetention) *BucketDefaultRetention {
		return &v
	}).(BucketDefaultRetentionPtrOutput)
}

// The number of days that you want to specify for the default retention period. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketDefaultRetention) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionOutput) Mode() BucketDefaultRetentionModePtrOutput {
	return o.ApplyT(func(v BucketDefaultRetention) *BucketDefaultRetentionMode { return v.Mode }).(BucketDefaultRetentionModePtrOutput)
}

// The number of years that you want to specify for the default retention period. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionOutput) Years() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketDefaultRetention) *int { return v.Years }).(pulumi.IntPtrOutput)
}

type BucketDefaultRetentionPtrOutput struct{ *pulumi.OutputState }

func (BucketDefaultRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDefaultRetention)(nil)).Elem()
}

func (o BucketDefaultRetentionPtrOutput) ToBucketDefaultRetentionPtrOutput() BucketDefaultRetentionPtrOutput {
	return o
}

func (o BucketDefaultRetentionPtrOutput) ToBucketDefaultRetentionPtrOutputWithContext(ctx context.Context) BucketDefaultRetentionPtrOutput {
	return o
}

func (o BucketDefaultRetentionPtrOutput) Elem() BucketDefaultRetentionOutput {
	return o.ApplyT(func(v *BucketDefaultRetention) BucketDefaultRetention {
		if v != nil {
			return *v
		}
		var ret BucketDefaultRetention
		return ret
	}).(BucketDefaultRetentionOutput)
}

// The number of days that you want to specify for the default retention period. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketDefaultRetention) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionPtrOutput) Mode() BucketDefaultRetentionModePtrOutput {
	return o.ApplyT(func(v *BucketDefaultRetention) *BucketDefaultRetentionMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(BucketDefaultRetentionModePtrOutput)
}

// The number of years that you want to specify for the default retention period. If Object Lock is turned on, you must specify “Mode“ and specify either “Days“ or “Years“.
func (o BucketDefaultRetentionPtrOutput) Years() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketDefaultRetention) *int {
		if v == nil {
			return nil
		}
		return v.Years
	}).(pulumi.IntPtrOutput)
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
//
//	For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
//	 If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
type BucketDeleteMarkerReplication struct {
	// Indicates whether to replicate delete markers. Disabled by default.
	Status *BucketDeleteMarkerReplicationStatus `pulumi:"status"`
}

// BucketDeleteMarkerReplicationInput is an input type that accepts BucketDeleteMarkerReplicationArgs and BucketDeleteMarkerReplicationOutput values.
// You can construct a concrete instance of `BucketDeleteMarkerReplicationInput` via:
//
//	BucketDeleteMarkerReplicationArgs{...}
type BucketDeleteMarkerReplicationInput interface {
	pulumi.Input

	ToBucketDeleteMarkerReplicationOutput() BucketDeleteMarkerReplicationOutput
	ToBucketDeleteMarkerReplicationOutputWithContext(context.Context) BucketDeleteMarkerReplicationOutput
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
//
//	For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
//	 If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
type BucketDeleteMarkerReplicationArgs struct {
	// Indicates whether to replicate delete markers. Disabled by default.
	Status BucketDeleteMarkerReplicationStatusPtrInput `pulumi:"status"`
}

func (BucketDeleteMarkerReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDeleteMarkerReplication)(nil)).Elem()
}

func (i BucketDeleteMarkerReplicationArgs) ToBucketDeleteMarkerReplicationOutput() BucketDeleteMarkerReplicationOutput {
	return i.ToBucketDeleteMarkerReplicationOutputWithContext(context.Background())
}

func (i BucketDeleteMarkerReplicationArgs) ToBucketDeleteMarkerReplicationOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDeleteMarkerReplicationOutput)
}

func (i BucketDeleteMarkerReplicationArgs) ToBucketDeleteMarkerReplicationPtrOutput() BucketDeleteMarkerReplicationPtrOutput {
	return i.ToBucketDeleteMarkerReplicationPtrOutputWithContext(context.Background())
}

func (i BucketDeleteMarkerReplicationArgs) ToBucketDeleteMarkerReplicationPtrOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDeleteMarkerReplicationOutput).ToBucketDeleteMarkerReplicationPtrOutputWithContext(ctx)
}

// BucketDeleteMarkerReplicationPtrInput is an input type that accepts BucketDeleteMarkerReplicationArgs, BucketDeleteMarkerReplicationPtr and BucketDeleteMarkerReplicationPtrOutput values.
// You can construct a concrete instance of `BucketDeleteMarkerReplicationPtrInput` via:
//
//	        BucketDeleteMarkerReplicationArgs{...}
//
//	or:
//
//	        nil
type BucketDeleteMarkerReplicationPtrInput interface {
	pulumi.Input

	ToBucketDeleteMarkerReplicationPtrOutput() BucketDeleteMarkerReplicationPtrOutput
	ToBucketDeleteMarkerReplicationPtrOutputWithContext(context.Context) BucketDeleteMarkerReplicationPtrOutput
}

type bucketDeleteMarkerReplicationPtrType BucketDeleteMarkerReplicationArgs

func BucketDeleteMarkerReplicationPtr(v *BucketDeleteMarkerReplicationArgs) BucketDeleteMarkerReplicationPtrInput {
	return (*bucketDeleteMarkerReplicationPtrType)(v)
}

func (*bucketDeleteMarkerReplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDeleteMarkerReplication)(nil)).Elem()
}

func (i *bucketDeleteMarkerReplicationPtrType) ToBucketDeleteMarkerReplicationPtrOutput() BucketDeleteMarkerReplicationPtrOutput {
	return i.ToBucketDeleteMarkerReplicationPtrOutputWithContext(context.Background())
}

func (i *bucketDeleteMarkerReplicationPtrType) ToBucketDeleteMarkerReplicationPtrOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDeleteMarkerReplicationPtrOutput)
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
//
//	For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
//	 If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
type BucketDeleteMarkerReplicationOutput struct{ *pulumi.OutputState }

func (BucketDeleteMarkerReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDeleteMarkerReplication)(nil)).Elem()
}

func (o BucketDeleteMarkerReplicationOutput) ToBucketDeleteMarkerReplicationOutput() BucketDeleteMarkerReplicationOutput {
	return o
}

func (o BucketDeleteMarkerReplicationOutput) ToBucketDeleteMarkerReplicationOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationOutput {
	return o
}

func (o BucketDeleteMarkerReplicationOutput) ToBucketDeleteMarkerReplicationPtrOutput() BucketDeleteMarkerReplicationPtrOutput {
	return o.ToBucketDeleteMarkerReplicationPtrOutputWithContext(context.Background())
}

func (o BucketDeleteMarkerReplicationOutput) ToBucketDeleteMarkerReplicationPtrOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketDeleteMarkerReplication) *BucketDeleteMarkerReplication {
		return &v
	}).(BucketDeleteMarkerReplicationPtrOutput)
}

// Indicates whether to replicate delete markers. Disabled by default.
func (o BucketDeleteMarkerReplicationOutput) Status() BucketDeleteMarkerReplicationStatusPtrOutput {
	return o.ApplyT(func(v BucketDeleteMarkerReplication) *BucketDeleteMarkerReplicationStatus { return v.Status }).(BucketDeleteMarkerReplicationStatusPtrOutput)
}

type BucketDeleteMarkerReplicationPtrOutput struct{ *pulumi.OutputState }

func (BucketDeleteMarkerReplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDeleteMarkerReplication)(nil)).Elem()
}

func (o BucketDeleteMarkerReplicationPtrOutput) ToBucketDeleteMarkerReplicationPtrOutput() BucketDeleteMarkerReplicationPtrOutput {
	return o
}

func (o BucketDeleteMarkerReplicationPtrOutput) ToBucketDeleteMarkerReplicationPtrOutputWithContext(ctx context.Context) BucketDeleteMarkerReplicationPtrOutput {
	return o
}

func (o BucketDeleteMarkerReplicationPtrOutput) Elem() BucketDeleteMarkerReplicationOutput {
	return o.ApplyT(func(v *BucketDeleteMarkerReplication) BucketDeleteMarkerReplication {
		if v != nil {
			return *v
		}
		var ret BucketDeleteMarkerReplication
		return ret
	}).(BucketDeleteMarkerReplicationOutput)
}

// Indicates whether to replicate delete markers. Disabled by default.
func (o BucketDeleteMarkerReplicationPtrOutput) Status() BucketDeleteMarkerReplicationStatusPtrOutput {
	return o.ApplyT(func(v *BucketDeleteMarkerReplication) *BucketDeleteMarkerReplicationStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(BucketDeleteMarkerReplicationStatusPtrOutput)
}

// Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
type BucketDestination struct {
	// The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data.
	//    Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes.
	BucketAccountId *string `pulumi:"bucketAccountId"`
	// The Amazon Resource Name (ARN) of the bucket to which data is exported.
	BucketArn string `pulumi:"bucketArn"`
	// Specifies the file format used when exporting data to Amazon S3.
	//  *Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
	Format BucketDestinationFormat `pulumi:"format"`
	// The prefix to use when exporting data. The prefix is prepended to all results.
	Prefix *string `pulumi:"prefix"`
}

// BucketDestinationInput is an input type that accepts BucketDestinationArgs and BucketDestinationOutput values.
// You can construct a concrete instance of `BucketDestinationInput` via:
//
//	BucketDestinationArgs{...}
type BucketDestinationInput interface {
	pulumi.Input

	ToBucketDestinationOutput() BucketDestinationOutput
	ToBucketDestinationOutputWithContext(context.Context) BucketDestinationOutput
}

// Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
type BucketDestinationArgs struct {
	// The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data.
	//    Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes.
	BucketAccountId pulumi.StringPtrInput `pulumi:"bucketAccountId"`
	// The Amazon Resource Name (ARN) of the bucket to which data is exported.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Specifies the file format used when exporting data to Amazon S3.
	//  *Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
	Format BucketDestinationFormatInput `pulumi:"format"`
	// The prefix to use when exporting data. The prefix is prepended to all results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (BucketDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDestination)(nil)).Elem()
}

func (i BucketDestinationArgs) ToBucketDestinationOutput() BucketDestinationOutput {
	return i.ToBucketDestinationOutputWithContext(context.Background())
}

func (i BucketDestinationArgs) ToBucketDestinationOutputWithContext(ctx context.Context) BucketDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDestinationOutput)
}

func (i BucketDestinationArgs) ToBucketDestinationPtrOutput() BucketDestinationPtrOutput {
	return i.ToBucketDestinationPtrOutputWithContext(context.Background())
}

func (i BucketDestinationArgs) ToBucketDestinationPtrOutputWithContext(ctx context.Context) BucketDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDestinationOutput).ToBucketDestinationPtrOutputWithContext(ctx)
}

// BucketDestinationPtrInput is an input type that accepts BucketDestinationArgs, BucketDestinationPtr and BucketDestinationPtrOutput values.
// You can construct a concrete instance of `BucketDestinationPtrInput` via:
//
//	        BucketDestinationArgs{...}
//
//	or:
//
//	        nil
type BucketDestinationPtrInput interface {
	pulumi.Input

	ToBucketDestinationPtrOutput() BucketDestinationPtrOutput
	ToBucketDestinationPtrOutputWithContext(context.Context) BucketDestinationPtrOutput
}

type bucketDestinationPtrType BucketDestinationArgs

func BucketDestinationPtr(v *BucketDestinationArgs) BucketDestinationPtrInput {
	return (*bucketDestinationPtrType)(v)
}

func (*bucketDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDestination)(nil)).Elem()
}

func (i *bucketDestinationPtrType) ToBucketDestinationPtrOutput() BucketDestinationPtrOutput {
	return i.ToBucketDestinationPtrOutputWithContext(context.Background())
}

func (i *bucketDestinationPtrType) ToBucketDestinationPtrOutputWithContext(ctx context.Context) BucketDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDestinationPtrOutput)
}

// Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
type BucketDestinationOutput struct{ *pulumi.OutputState }

func (BucketDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDestination)(nil)).Elem()
}

func (o BucketDestinationOutput) ToBucketDestinationOutput() BucketDestinationOutput {
	return o
}

func (o BucketDestinationOutput) ToBucketDestinationOutputWithContext(ctx context.Context) BucketDestinationOutput {
	return o
}

func (o BucketDestinationOutput) ToBucketDestinationPtrOutput() BucketDestinationPtrOutput {
	return o.ToBucketDestinationPtrOutputWithContext(context.Background())
}

func (o BucketDestinationOutput) ToBucketDestinationPtrOutputWithContext(ctx context.Context) BucketDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketDestination) *BucketDestination {
		return &v
	}).(BucketDestinationPtrOutput)
}

// The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data.
//
//	Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes.
func (o BucketDestinationOutput) BucketAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDestination) *string { return v.BucketAccountId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket to which data is exported.
func (o BucketDestinationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v BucketDestination) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Specifies the file format used when exporting data to Amazon S3.
//
//	*Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
func (o BucketDestinationOutput) Format() BucketDestinationFormatOutput {
	return o.ApplyT(func(v BucketDestination) BucketDestinationFormat { return v.Format }).(BucketDestinationFormatOutput)
}

// The prefix to use when exporting data. The prefix is prepended to all results.
func (o BucketDestinationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDestination) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type BucketDestinationPtrOutput struct{ *pulumi.OutputState }

func (BucketDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDestination)(nil)).Elem()
}

func (o BucketDestinationPtrOutput) ToBucketDestinationPtrOutput() BucketDestinationPtrOutput {
	return o
}

func (o BucketDestinationPtrOutput) ToBucketDestinationPtrOutputWithContext(ctx context.Context) BucketDestinationPtrOutput {
	return o
}

func (o BucketDestinationPtrOutput) Elem() BucketDestinationOutput {
	return o.ApplyT(func(v *BucketDestination) BucketDestination {
		if v != nil {
			return *v
		}
		var ret BucketDestination
		return ret
	}).(BucketDestinationOutput)
}

// The account ID that owns the destination S3 bucket. If no account ID is provided, the owner is not validated before exporting data.
//
//	Although this value is optional, we strongly recommend that you set it to help prevent problems if the destination bucket ownership changes.
func (o BucketDestinationPtrOutput) BucketAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDestination) *string {
		if v == nil {
			return nil
		}
		return v.BucketAccountId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket to which data is exported.
func (o BucketDestinationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDestination) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Specifies the file format used when exporting data to Amazon S3.
//
//	*Allowed values*: ``CSV`` | ``ORC`` | ``Parquet``
func (o BucketDestinationPtrOutput) Format() BucketDestinationFormatPtrOutput {
	return o.ApplyT(func(v *BucketDestination) *BucketDestinationFormat {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(BucketDestinationFormatPtrOutput)
}

// The prefix to use when exporting data. The prefix is prepended to all results.
func (o BucketDestinationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDestination) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
type BucketEncryption struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration []BucketServerSideEncryptionRule `pulumi:"serverSideEncryptionConfiguration"`
}

// BucketEncryptionInput is an input type that accepts BucketEncryptionArgs and BucketEncryptionOutput values.
// You can construct a concrete instance of `BucketEncryptionInput` via:
//
//	BucketEncryptionArgs{...}
type BucketEncryptionInput interface {
	pulumi.Input

	ToBucketEncryptionOutput() BucketEncryptionOutput
	ToBucketEncryptionOutputWithContext(context.Context) BucketEncryptionOutput
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
type BucketEncryptionArgs struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration BucketServerSideEncryptionRuleArrayInput `pulumi:"serverSideEncryptionConfiguration"`
}

func (BucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return i.ToBucketEncryptionOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput)
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput).ToBucketEncryptionPtrOutputWithContext(ctx)
}

// BucketEncryptionPtrInput is an input type that accepts BucketEncryptionArgs, BucketEncryptionPtr and BucketEncryptionPtrOutput values.
// You can construct a concrete instance of `BucketEncryptionPtrInput` via:
//
//	        BucketEncryptionArgs{...}
//
//	or:
//
//	        nil
type BucketEncryptionPtrInput interface {
	pulumi.Input

	ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput
	ToBucketEncryptionPtrOutputWithContext(context.Context) BucketEncryptionPtrOutput
}

type bucketEncryptionPtrType BucketEncryptionArgs

func BucketEncryptionPtr(v *BucketEncryptionArgs) BucketEncryptionPtrInput {
	return (*bucketEncryptionPtrType)(v)
}

func (*bucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
type BucketEncryptionOutput struct{ *pulumi.OutputState }

func (BucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketEncryption) *BucketEncryption {
		return &v
	}).(BucketEncryptionPtrOutput)
}

// Specifies the default server-side-encryption configuration.
func (o BucketEncryptionOutput) ServerSideEncryptionConfiguration() BucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v BucketEncryption) []BucketServerSideEncryptionRule { return v.ServerSideEncryptionConfiguration }).(BucketServerSideEncryptionRuleArrayOutput)
}

type BucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) Elem() BucketEncryptionOutput {
	return o.ApplyT(func(v *BucketEncryption) BucketEncryption {
		if v != nil {
			return *v
		}
		var ret BucketEncryption
		return ret
	}).(BucketEncryptionOutput)
}

// Specifies the default server-side-encryption configuration.
func (o BucketEncryptionPtrOutput) ServerSideEncryptionConfiguration() BucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v *BucketEncryption) []BucketServerSideEncryptionRule {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionConfiguration
	}).(BucketServerSideEncryptionRuleArrayOutput)
}

// Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
type BucketEncryptionConfiguration struct {
	// Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	ReplicaKmsKeyId string `pulumi:"replicaKmsKeyId"`
}

// BucketEncryptionConfigurationInput is an input type that accepts BucketEncryptionConfigurationArgs and BucketEncryptionConfigurationOutput values.
// You can construct a concrete instance of `BucketEncryptionConfigurationInput` via:
//
//	BucketEncryptionConfigurationArgs{...}
type BucketEncryptionConfigurationInput interface {
	pulumi.Input

	ToBucketEncryptionConfigurationOutput() BucketEncryptionConfigurationOutput
	ToBucketEncryptionConfigurationOutputWithContext(context.Context) BucketEncryptionConfigurationOutput
}

// Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
type BucketEncryptionConfigurationArgs struct {
	// Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	ReplicaKmsKeyId pulumi.StringInput `pulumi:"replicaKmsKeyId"`
}

func (BucketEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionConfiguration)(nil)).Elem()
}

func (i BucketEncryptionConfigurationArgs) ToBucketEncryptionConfigurationOutput() BucketEncryptionConfigurationOutput {
	return i.ToBucketEncryptionConfigurationOutputWithContext(context.Background())
}

func (i BucketEncryptionConfigurationArgs) ToBucketEncryptionConfigurationOutputWithContext(ctx context.Context) BucketEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionConfigurationOutput)
}

func (i BucketEncryptionConfigurationArgs) ToBucketEncryptionConfigurationPtrOutput() BucketEncryptionConfigurationPtrOutput {
	return i.ToBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionConfigurationArgs) ToBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionConfigurationOutput).ToBucketEncryptionConfigurationPtrOutputWithContext(ctx)
}

// BucketEncryptionConfigurationPtrInput is an input type that accepts BucketEncryptionConfigurationArgs, BucketEncryptionConfigurationPtr and BucketEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketEncryptionConfigurationPtrInput` via:
//
//	        BucketEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToBucketEncryptionConfigurationPtrOutput() BucketEncryptionConfigurationPtrOutput
	ToBucketEncryptionConfigurationPtrOutputWithContext(context.Context) BucketEncryptionConfigurationPtrOutput
}

type bucketEncryptionConfigurationPtrType BucketEncryptionConfigurationArgs

func BucketEncryptionConfigurationPtr(v *BucketEncryptionConfigurationArgs) BucketEncryptionConfigurationPtrInput {
	return (*bucketEncryptionConfigurationPtrType)(v)
}

func (*bucketEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionConfiguration)(nil)).Elem()
}

func (i *bucketEncryptionConfigurationPtrType) ToBucketEncryptionConfigurationPtrOutput() BucketEncryptionConfigurationPtrOutput {
	return i.ToBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionConfigurationPtrType) ToBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionConfigurationPtrOutput)
}

// Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
type BucketEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (BucketEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionConfiguration)(nil)).Elem()
}

func (o BucketEncryptionConfigurationOutput) ToBucketEncryptionConfigurationOutput() BucketEncryptionConfigurationOutput {
	return o
}

func (o BucketEncryptionConfigurationOutput) ToBucketEncryptionConfigurationOutputWithContext(ctx context.Context) BucketEncryptionConfigurationOutput {
	return o
}

func (o BucketEncryptionConfigurationOutput) ToBucketEncryptionConfigurationPtrOutput() BucketEncryptionConfigurationPtrOutput {
	return o.ToBucketEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionConfigurationOutput) ToBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketEncryptionConfiguration) *BucketEncryptionConfiguration {
		return &v
	}).(BucketEncryptionConfigurationPtrOutput)
}

// Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o BucketEncryptionConfigurationOutput) ReplicaKmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryptionConfiguration) string { return v.ReplicaKmsKeyId }).(pulumi.StringOutput)
}

type BucketEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionConfiguration)(nil)).Elem()
}

func (o BucketEncryptionConfigurationPtrOutput) ToBucketEncryptionConfigurationPtrOutput() BucketEncryptionConfigurationPtrOutput {
	return o
}

func (o BucketEncryptionConfigurationPtrOutput) ToBucketEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketEncryptionConfigurationPtrOutput {
	return o
}

func (o BucketEncryptionConfigurationPtrOutput) Elem() BucketEncryptionConfigurationOutput {
	return o.ApplyT(func(v *BucketEncryptionConfiguration) BucketEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketEncryptionConfiguration
		return ret
	}).(BucketEncryptionConfigurationOutput)
}

// Specifies the ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o BucketEncryptionConfigurationPtrOutput) ReplicaKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicaKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*.
//
//	Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
type BucketEventBridgeConfiguration struct {
	// Enables delivery of events to Amazon EventBridge.
	EventBridgeEnabled bool `pulumi:"eventBridgeEnabled"`
}

// BucketEventBridgeConfigurationInput is an input type that accepts BucketEventBridgeConfigurationArgs and BucketEventBridgeConfigurationOutput values.
// You can construct a concrete instance of `BucketEventBridgeConfigurationInput` via:
//
//	BucketEventBridgeConfigurationArgs{...}
type BucketEventBridgeConfigurationInput interface {
	pulumi.Input

	ToBucketEventBridgeConfigurationOutput() BucketEventBridgeConfigurationOutput
	ToBucketEventBridgeConfigurationOutputWithContext(context.Context) BucketEventBridgeConfigurationOutput
}

// Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*.
//
//	Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
type BucketEventBridgeConfigurationArgs struct {
	// Enables delivery of events to Amazon EventBridge.
	EventBridgeEnabled pulumi.BoolInput `pulumi:"eventBridgeEnabled"`
}

func (BucketEventBridgeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEventBridgeConfiguration)(nil)).Elem()
}

func (i BucketEventBridgeConfigurationArgs) ToBucketEventBridgeConfigurationOutput() BucketEventBridgeConfigurationOutput {
	return i.ToBucketEventBridgeConfigurationOutputWithContext(context.Background())
}

func (i BucketEventBridgeConfigurationArgs) ToBucketEventBridgeConfigurationOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEventBridgeConfigurationOutput)
}

func (i BucketEventBridgeConfigurationArgs) ToBucketEventBridgeConfigurationPtrOutput() BucketEventBridgeConfigurationPtrOutput {
	return i.ToBucketEventBridgeConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketEventBridgeConfigurationArgs) ToBucketEventBridgeConfigurationPtrOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEventBridgeConfigurationOutput).ToBucketEventBridgeConfigurationPtrOutputWithContext(ctx)
}

// BucketEventBridgeConfigurationPtrInput is an input type that accepts BucketEventBridgeConfigurationArgs, BucketEventBridgeConfigurationPtr and BucketEventBridgeConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketEventBridgeConfigurationPtrInput` via:
//
//	        BucketEventBridgeConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketEventBridgeConfigurationPtrInput interface {
	pulumi.Input

	ToBucketEventBridgeConfigurationPtrOutput() BucketEventBridgeConfigurationPtrOutput
	ToBucketEventBridgeConfigurationPtrOutputWithContext(context.Context) BucketEventBridgeConfigurationPtrOutput
}

type bucketEventBridgeConfigurationPtrType BucketEventBridgeConfigurationArgs

func BucketEventBridgeConfigurationPtr(v *BucketEventBridgeConfigurationArgs) BucketEventBridgeConfigurationPtrInput {
	return (*bucketEventBridgeConfigurationPtrType)(v)
}

func (*bucketEventBridgeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEventBridgeConfiguration)(nil)).Elem()
}

func (i *bucketEventBridgeConfigurationPtrType) ToBucketEventBridgeConfigurationPtrOutput() BucketEventBridgeConfigurationPtrOutput {
	return i.ToBucketEventBridgeConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketEventBridgeConfigurationPtrType) ToBucketEventBridgeConfigurationPtrOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEventBridgeConfigurationPtrOutput)
}

// Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*.
//
//	Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
type BucketEventBridgeConfigurationOutput struct{ *pulumi.OutputState }

func (BucketEventBridgeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEventBridgeConfiguration)(nil)).Elem()
}

func (o BucketEventBridgeConfigurationOutput) ToBucketEventBridgeConfigurationOutput() BucketEventBridgeConfigurationOutput {
	return o
}

func (o BucketEventBridgeConfigurationOutput) ToBucketEventBridgeConfigurationOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationOutput {
	return o
}

func (o BucketEventBridgeConfigurationOutput) ToBucketEventBridgeConfigurationPtrOutput() BucketEventBridgeConfigurationPtrOutput {
	return o.ToBucketEventBridgeConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketEventBridgeConfigurationOutput) ToBucketEventBridgeConfigurationPtrOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketEventBridgeConfiguration) *BucketEventBridgeConfiguration {
		return &v
	}).(BucketEventBridgeConfigurationPtrOutput)
}

// Enables delivery of events to Amazon EventBridge.
func (o BucketEventBridgeConfigurationOutput) EventBridgeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketEventBridgeConfiguration) bool { return v.EventBridgeEnabled }).(pulumi.BoolOutput)
}

type BucketEventBridgeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketEventBridgeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEventBridgeConfiguration)(nil)).Elem()
}

func (o BucketEventBridgeConfigurationPtrOutput) ToBucketEventBridgeConfigurationPtrOutput() BucketEventBridgeConfigurationPtrOutput {
	return o
}

func (o BucketEventBridgeConfigurationPtrOutput) ToBucketEventBridgeConfigurationPtrOutputWithContext(ctx context.Context) BucketEventBridgeConfigurationPtrOutput {
	return o
}

func (o BucketEventBridgeConfigurationPtrOutput) Elem() BucketEventBridgeConfigurationOutput {
	return o.ApplyT(func(v *BucketEventBridgeConfiguration) BucketEventBridgeConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketEventBridgeConfiguration
		return ret
	}).(BucketEventBridgeConfigurationOutput)
}

// Enables delivery of events to Amazon EventBridge.
func (o BucketEventBridgeConfigurationPtrOutput) EventBridgeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketEventBridgeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.EventBridgeEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the Amazon S3 object key name to filter on. An object key name is the name assigned to an object in your Amazon S3 bucket. You specify whether to filter on the suffix or prefix of the object key name. A prefix is a specific string of characters at the beginning of an object key name, which you can use to organize objects. For example, you can start the key names of related objects with a prefix, such as “2023-“ or “engineering/“. Then, you can use “FilterRule“ to find objects in a bucket with key names that have the same prefix. A suffix is similar to a prefix, but it is at the end of the object key name instead of at the beginning.
type BucketFilterRule struct {
	// The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see [Configuring Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Name string `pulumi:"name"`
	// The value that the filter searches for in object key names.
	Value string `pulumi:"value"`
}

// BucketFilterRuleInput is an input type that accepts BucketFilterRuleArgs and BucketFilterRuleOutput values.
// You can construct a concrete instance of `BucketFilterRuleInput` via:
//
//	BucketFilterRuleArgs{...}
type BucketFilterRuleInput interface {
	pulumi.Input

	ToBucketFilterRuleOutput() BucketFilterRuleOutput
	ToBucketFilterRuleOutputWithContext(context.Context) BucketFilterRuleOutput
}

// Specifies the Amazon S3 object key name to filter on. An object key name is the name assigned to an object in your Amazon S3 bucket. You specify whether to filter on the suffix or prefix of the object key name. A prefix is a specific string of characters at the beginning of an object key name, which you can use to organize objects. For example, you can start the key names of related objects with a prefix, such as “2023-“ or “engineering/“. Then, you can use “FilterRule“ to find objects in a bucket with key names that have the same prefix. A suffix is similar to a prefix, but it is at the end of the object key name instead of at the beginning.
type BucketFilterRuleArgs struct {
	// The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see [Configuring Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Name pulumi.StringInput `pulumi:"name"`
	// The value that the filter searches for in object key names.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketFilterRule)(nil)).Elem()
}

func (i BucketFilterRuleArgs) ToBucketFilterRuleOutput() BucketFilterRuleOutput {
	return i.ToBucketFilterRuleOutputWithContext(context.Background())
}

func (i BucketFilterRuleArgs) ToBucketFilterRuleOutputWithContext(ctx context.Context) BucketFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterRuleOutput)
}

// BucketFilterRuleArrayInput is an input type that accepts BucketFilterRuleArray and BucketFilterRuleArrayOutput values.
// You can construct a concrete instance of `BucketFilterRuleArrayInput` via:
//
//	BucketFilterRuleArray{ BucketFilterRuleArgs{...} }
type BucketFilterRuleArrayInput interface {
	pulumi.Input

	ToBucketFilterRuleArrayOutput() BucketFilterRuleArrayOutput
	ToBucketFilterRuleArrayOutputWithContext(context.Context) BucketFilterRuleArrayOutput
}

type BucketFilterRuleArray []BucketFilterRuleInput

func (BucketFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketFilterRule)(nil)).Elem()
}

func (i BucketFilterRuleArray) ToBucketFilterRuleArrayOutput() BucketFilterRuleArrayOutput {
	return i.ToBucketFilterRuleArrayOutputWithContext(context.Background())
}

func (i BucketFilterRuleArray) ToBucketFilterRuleArrayOutputWithContext(ctx context.Context) BucketFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterRuleArrayOutput)
}

// Specifies the Amazon S3 object key name to filter on. An object key name is the name assigned to an object in your Amazon S3 bucket. You specify whether to filter on the suffix or prefix of the object key name. A prefix is a specific string of characters at the beginning of an object key name, which you can use to organize objects. For example, you can start the key names of related objects with a prefix, such as “2023-“ or “engineering/“. Then, you can use “FilterRule“ to find objects in a bucket with key names that have the same prefix. A suffix is similar to a prefix, but it is at the end of the object key name instead of at the beginning.
type BucketFilterRuleOutput struct{ *pulumi.OutputState }

func (BucketFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketFilterRule)(nil)).Elem()
}

func (o BucketFilterRuleOutput) ToBucketFilterRuleOutput() BucketFilterRuleOutput {
	return o
}

func (o BucketFilterRuleOutput) ToBucketFilterRuleOutputWithContext(ctx context.Context) BucketFilterRuleOutput {
	return o
}

// The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see [Configuring Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o BucketFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BucketFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

// The value that the filter searches for in object key names.
func (o BucketFilterRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketFilterRule) string { return v.Value }).(pulumi.StringOutput)
}

type BucketFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketFilterRule)(nil)).Elem()
}

func (o BucketFilterRuleArrayOutput) ToBucketFilterRuleArrayOutput() BucketFilterRuleArrayOutput {
	return o
}

func (o BucketFilterRuleArrayOutput) ToBucketFilterRuleArrayOutputWithContext(ctx context.Context) BucketFilterRuleArrayOutput {
	return o
}

func (o BucketFilterRuleArrayOutput) Index(i pulumi.IntInput) BucketFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketFilterRule {
		return vs[0].([]BucketFilterRule)[vs[1].(int)]
	}).(BucketFilterRuleOutput)
}

// Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
//
//	For information about the S3 Intelligent-Tiering storage class, see [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access).
type BucketIntelligentTieringConfiguration struct {
	// The ID used to identify the S3 Intelligent-Tiering configuration.
	Id string `pulumi:"id"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// Specifies the status of the configuration.
	Status BucketIntelligentTieringConfigurationStatus `pulumi:"status"`
	// A container for a key-value pair.
	TagFilters []BucketTagFilter `pulumi:"tagFilters"`
	// Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ``ARCHIVE_ACCESS`` and ``DEEP_ARCHIVE_ACCESS``.
	//   You only need Intelligent Tiering Configuration enabled on a bucket if you want to automatically move objects stored in the Intelligent-Tiering storage class to Archive Access or Deep Archive Access tiers.
	Tierings []BucketTiering `pulumi:"tierings"`
}

// BucketIntelligentTieringConfigurationInput is an input type that accepts BucketIntelligentTieringConfigurationArgs and BucketIntelligentTieringConfigurationOutput values.
// You can construct a concrete instance of `BucketIntelligentTieringConfigurationInput` via:
//
//	BucketIntelligentTieringConfigurationArgs{...}
type BucketIntelligentTieringConfigurationInput interface {
	pulumi.Input

	ToBucketIntelligentTieringConfigurationOutput() BucketIntelligentTieringConfigurationOutput
	ToBucketIntelligentTieringConfigurationOutputWithContext(context.Context) BucketIntelligentTieringConfigurationOutput
}

// Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
//
//	For information about the S3 Intelligent-Tiering storage class, see [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access).
type BucketIntelligentTieringConfigurationArgs struct {
	// The ID used to identify the S3 Intelligent-Tiering configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies the status of the configuration.
	Status BucketIntelligentTieringConfigurationStatusInput `pulumi:"status"`
	// A container for a key-value pair.
	TagFilters BucketTagFilterArrayInput `pulumi:"tagFilters"`
	// Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ``ARCHIVE_ACCESS`` and ``DEEP_ARCHIVE_ACCESS``.
	//   You only need Intelligent Tiering Configuration enabled on a bucket if you want to automatically move objects stored in the Intelligent-Tiering storage class to Archive Access or Deep Archive Access tiers.
	Tierings BucketTieringArrayInput `pulumi:"tierings"`
}

func (BucketIntelligentTieringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIntelligentTieringConfiguration)(nil)).Elem()
}

func (i BucketIntelligentTieringConfigurationArgs) ToBucketIntelligentTieringConfigurationOutput() BucketIntelligentTieringConfigurationOutput {
	return i.ToBucketIntelligentTieringConfigurationOutputWithContext(context.Background())
}

func (i BucketIntelligentTieringConfigurationArgs) ToBucketIntelligentTieringConfigurationOutputWithContext(ctx context.Context) BucketIntelligentTieringConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIntelligentTieringConfigurationOutput)
}

// BucketIntelligentTieringConfigurationArrayInput is an input type that accepts BucketIntelligentTieringConfigurationArray and BucketIntelligentTieringConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketIntelligentTieringConfigurationArrayInput` via:
//
//	BucketIntelligentTieringConfigurationArray{ BucketIntelligentTieringConfigurationArgs{...} }
type BucketIntelligentTieringConfigurationArrayInput interface {
	pulumi.Input

	ToBucketIntelligentTieringConfigurationArrayOutput() BucketIntelligentTieringConfigurationArrayOutput
	ToBucketIntelligentTieringConfigurationArrayOutputWithContext(context.Context) BucketIntelligentTieringConfigurationArrayOutput
}

type BucketIntelligentTieringConfigurationArray []BucketIntelligentTieringConfigurationInput

func (BucketIntelligentTieringConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIntelligentTieringConfiguration)(nil)).Elem()
}

func (i BucketIntelligentTieringConfigurationArray) ToBucketIntelligentTieringConfigurationArrayOutput() BucketIntelligentTieringConfigurationArrayOutput {
	return i.ToBucketIntelligentTieringConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketIntelligentTieringConfigurationArray) ToBucketIntelligentTieringConfigurationArrayOutputWithContext(ctx context.Context) BucketIntelligentTieringConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIntelligentTieringConfigurationArrayOutput)
}

// Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
//
//	For information about the S3 Intelligent-Tiering storage class, see [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access).
type BucketIntelligentTieringConfigurationOutput struct{ *pulumi.OutputState }

func (BucketIntelligentTieringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIntelligentTieringConfiguration)(nil)).Elem()
}

func (o BucketIntelligentTieringConfigurationOutput) ToBucketIntelligentTieringConfigurationOutput() BucketIntelligentTieringConfigurationOutput {
	return o
}

func (o BucketIntelligentTieringConfigurationOutput) ToBucketIntelligentTieringConfigurationOutputWithContext(ctx context.Context) BucketIntelligentTieringConfigurationOutput {
	return o
}

// The ID used to identify the S3 Intelligent-Tiering configuration.
func (o BucketIntelligentTieringConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIntelligentTieringConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o BucketIntelligentTieringConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIntelligentTieringConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies the status of the configuration.
func (o BucketIntelligentTieringConfigurationOutput) Status() BucketIntelligentTieringConfigurationStatusOutput {
	return o.ApplyT(func(v BucketIntelligentTieringConfiguration) BucketIntelligentTieringConfigurationStatus {
		return v.Status
	}).(BucketIntelligentTieringConfigurationStatusOutput)
}

// A container for a key-value pair.
func (o BucketIntelligentTieringConfigurationOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v BucketIntelligentTieringConfiguration) []BucketTagFilter { return v.TagFilters }).(BucketTagFilterArrayOutput)
}

// Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: “ARCHIVE_ACCESS“ and “DEEP_ARCHIVE_ACCESS“.
//
//	You only need Intelligent Tiering Configuration enabled on a bucket if you want to automatically move objects stored in the Intelligent-Tiering storage class to Archive Access or Deep Archive Access tiers.
func (o BucketIntelligentTieringConfigurationOutput) Tierings() BucketTieringArrayOutput {
	return o.ApplyT(func(v BucketIntelligentTieringConfiguration) []BucketTiering { return v.Tierings }).(BucketTieringArrayOutput)
}

type BucketIntelligentTieringConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketIntelligentTieringConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIntelligentTieringConfiguration)(nil)).Elem()
}

func (o BucketIntelligentTieringConfigurationArrayOutput) ToBucketIntelligentTieringConfigurationArrayOutput() BucketIntelligentTieringConfigurationArrayOutput {
	return o
}

func (o BucketIntelligentTieringConfigurationArrayOutput) ToBucketIntelligentTieringConfigurationArrayOutputWithContext(ctx context.Context) BucketIntelligentTieringConfigurationArrayOutput {
	return o
}

func (o BucketIntelligentTieringConfigurationArrayOutput) Index(i pulumi.IntInput) BucketIntelligentTieringConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketIntelligentTieringConfiguration {
		return vs[0].([]BucketIntelligentTieringConfiguration)[vs[1].(int)]
	}).(BucketIntelligentTieringConfigurationOutput)
}

// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
type BucketInventoryConfiguration struct {
	// Contains information about where to publish the inventory results.
	Destination BucketDestination `pulumi:"destination"`
	// Specifies whether the inventory is enabled or disabled. If set to ``True``, an inventory list is generated. If set to ``False``, no inventory list is generated.
	Enabled bool `pulumi:"enabled"`
	// The ID used to identify the inventory configuration.
	Id string `pulumi:"id"`
	// Object versions to include in the inventory list. If set to ``All``, the list includes all the object versions, which adds the version-related fields ``VersionId``, ``IsLatest``, and ``DeleteMarker`` to the list. If set to ``Current``, the list does not contain these version-related fields.
	IncludedObjectVersions BucketInventoryConfigurationIncludedObjectVersions `pulumi:"includedObjectVersions"`
	// Contains the optional fields that are included in the inventory results.
	OptionalFields []BucketInventoryConfigurationOptionalFieldsItem `pulumi:"optionalFields"`
	// Specifies the inventory filter prefix.
	Prefix *string `pulumi:"prefix"`
	// Specifies the schedule for generating inventory results.
	ScheduleFrequency BucketInventoryConfigurationScheduleFrequency `pulumi:"scheduleFrequency"`
}

// BucketInventoryConfigurationInput is an input type that accepts BucketInventoryConfigurationArgs and BucketInventoryConfigurationOutput values.
// You can construct a concrete instance of `BucketInventoryConfigurationInput` via:
//
//	BucketInventoryConfigurationArgs{...}
type BucketInventoryConfigurationInput interface {
	pulumi.Input

	ToBucketInventoryConfigurationOutput() BucketInventoryConfigurationOutput
	ToBucketInventoryConfigurationOutputWithContext(context.Context) BucketInventoryConfigurationOutput
}

// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
type BucketInventoryConfigurationArgs struct {
	// Contains information about where to publish the inventory results.
	Destination BucketDestinationInput `pulumi:"destination"`
	// Specifies whether the inventory is enabled or disabled. If set to ``True``, an inventory list is generated. If set to ``False``, no inventory list is generated.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID used to identify the inventory configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// Object versions to include in the inventory list. If set to ``All``, the list includes all the object versions, which adds the version-related fields ``VersionId``, ``IsLatest``, and ``DeleteMarker`` to the list. If set to ``Current``, the list does not contain these version-related fields.
	IncludedObjectVersions BucketInventoryConfigurationIncludedObjectVersionsInput `pulumi:"includedObjectVersions"`
	// Contains the optional fields that are included in the inventory results.
	OptionalFields BucketInventoryConfigurationOptionalFieldsItemArrayInput `pulumi:"optionalFields"`
	// Specifies the inventory filter prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies the schedule for generating inventory results.
	ScheduleFrequency BucketInventoryConfigurationScheduleFrequencyInput `pulumi:"scheduleFrequency"`
}

func (BucketInventoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketInventoryConfiguration)(nil)).Elem()
}

func (i BucketInventoryConfigurationArgs) ToBucketInventoryConfigurationOutput() BucketInventoryConfigurationOutput {
	return i.ToBucketInventoryConfigurationOutputWithContext(context.Background())
}

func (i BucketInventoryConfigurationArgs) ToBucketInventoryConfigurationOutputWithContext(ctx context.Context) BucketInventoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketInventoryConfigurationOutput)
}

// BucketInventoryConfigurationArrayInput is an input type that accepts BucketInventoryConfigurationArray and BucketInventoryConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketInventoryConfigurationArrayInput` via:
//
//	BucketInventoryConfigurationArray{ BucketInventoryConfigurationArgs{...} }
type BucketInventoryConfigurationArrayInput interface {
	pulumi.Input

	ToBucketInventoryConfigurationArrayOutput() BucketInventoryConfigurationArrayOutput
	ToBucketInventoryConfigurationArrayOutputWithContext(context.Context) BucketInventoryConfigurationArrayOutput
}

type BucketInventoryConfigurationArray []BucketInventoryConfigurationInput

func (BucketInventoryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketInventoryConfiguration)(nil)).Elem()
}

func (i BucketInventoryConfigurationArray) ToBucketInventoryConfigurationArrayOutput() BucketInventoryConfigurationArrayOutput {
	return i.ToBucketInventoryConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketInventoryConfigurationArray) ToBucketInventoryConfigurationArrayOutputWithContext(ctx context.Context) BucketInventoryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketInventoryConfigurationArrayOutput)
}

// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
type BucketInventoryConfigurationOutput struct{ *pulumi.OutputState }

func (BucketInventoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketInventoryConfiguration)(nil)).Elem()
}

func (o BucketInventoryConfigurationOutput) ToBucketInventoryConfigurationOutput() BucketInventoryConfigurationOutput {
	return o
}

func (o BucketInventoryConfigurationOutput) ToBucketInventoryConfigurationOutputWithContext(ctx context.Context) BucketInventoryConfigurationOutput {
	return o
}

// Contains information about where to publish the inventory results.
func (o BucketInventoryConfigurationOutput) Destination() BucketDestinationOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) BucketDestination { return v.Destination }).(BucketDestinationOutput)
}

// Specifies whether the inventory is enabled or disabled. If set to “True“, an inventory list is generated. If set to “False“, no inventory list is generated.
func (o BucketInventoryConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID used to identify the inventory configuration.
func (o BucketInventoryConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// Object versions to include in the inventory list. If set to “All“, the list includes all the object versions, which adds the version-related fields “VersionId“, “IsLatest“, and “DeleteMarker“ to the list. If set to “Current“, the list does not contain these version-related fields.
func (o BucketInventoryConfigurationOutput) IncludedObjectVersions() BucketInventoryConfigurationIncludedObjectVersionsOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) BucketInventoryConfigurationIncludedObjectVersions {
		return v.IncludedObjectVersions
	}).(BucketInventoryConfigurationIncludedObjectVersionsOutput)
}

// Contains the optional fields that are included in the inventory results.
func (o BucketInventoryConfigurationOutput) OptionalFields() BucketInventoryConfigurationOptionalFieldsItemArrayOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) []BucketInventoryConfigurationOptionalFieldsItem {
		return v.OptionalFields
	}).(BucketInventoryConfigurationOptionalFieldsItemArrayOutput)
}

// Specifies the inventory filter prefix.
func (o BucketInventoryConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies the schedule for generating inventory results.
func (o BucketInventoryConfigurationOutput) ScheduleFrequency() BucketInventoryConfigurationScheduleFrequencyOutput {
	return o.ApplyT(func(v BucketInventoryConfiguration) BucketInventoryConfigurationScheduleFrequency {
		return v.ScheduleFrequency
	}).(BucketInventoryConfigurationScheduleFrequencyOutput)
}

type BucketInventoryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketInventoryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketInventoryConfiguration)(nil)).Elem()
}

func (o BucketInventoryConfigurationArrayOutput) ToBucketInventoryConfigurationArrayOutput() BucketInventoryConfigurationArrayOutput {
	return o
}

func (o BucketInventoryConfigurationArrayOutput) ToBucketInventoryConfigurationArrayOutputWithContext(ctx context.Context) BucketInventoryConfigurationArrayOutput {
	return o
}

func (o BucketInventoryConfigurationArrayOutput) Index(i pulumi.IntInput) BucketInventoryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketInventoryConfiguration {
		return vs[0].([]BucketInventoryConfiguration)[vs[1].(int)]
	}).(BucketInventoryConfigurationOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
type BucketLambdaConfiguration struct {
	// The Amazon S3 bucket event for which to invoke the LAMlong function. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event string `pulumi:"event"`
	// The filtering rules that determine which objects invoke the AWS Lambda function. For example, you can create a filter so that only image files with a ``.jpg`` extension invoke the function when they are added to the Amazon S3 bucket.
	Filter *BucketNotificationFilter `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the LAMlong function that Amazon S3 invokes when the specified event type occurs.
	Function string `pulumi:"function"`
}

// BucketLambdaConfigurationInput is an input type that accepts BucketLambdaConfigurationArgs and BucketLambdaConfigurationOutput values.
// You can construct a concrete instance of `BucketLambdaConfigurationInput` via:
//
//	BucketLambdaConfigurationArgs{...}
type BucketLambdaConfigurationInput interface {
	pulumi.Input

	ToBucketLambdaConfigurationOutput() BucketLambdaConfigurationOutput
	ToBucketLambdaConfigurationOutputWithContext(context.Context) BucketLambdaConfigurationOutput
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
type BucketLambdaConfigurationArgs struct {
	// The Amazon S3 bucket event for which to invoke the LAMlong function. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event pulumi.StringInput `pulumi:"event"`
	// The filtering rules that determine which objects invoke the AWS Lambda function. For example, you can create a filter so that only image files with a ``.jpg`` extension invoke the function when they are added to the Amazon S3 bucket.
	Filter BucketNotificationFilterPtrInput `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the LAMlong function that Amazon S3 invokes when the specified event type occurs.
	Function pulumi.StringInput `pulumi:"function"`
}

func (BucketLambdaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLambdaConfiguration)(nil)).Elem()
}

func (i BucketLambdaConfigurationArgs) ToBucketLambdaConfigurationOutput() BucketLambdaConfigurationOutput {
	return i.ToBucketLambdaConfigurationOutputWithContext(context.Background())
}

func (i BucketLambdaConfigurationArgs) ToBucketLambdaConfigurationOutputWithContext(ctx context.Context) BucketLambdaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLambdaConfigurationOutput)
}

// BucketLambdaConfigurationArrayInput is an input type that accepts BucketLambdaConfigurationArray and BucketLambdaConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketLambdaConfigurationArrayInput` via:
//
//	BucketLambdaConfigurationArray{ BucketLambdaConfigurationArgs{...} }
type BucketLambdaConfigurationArrayInput interface {
	pulumi.Input

	ToBucketLambdaConfigurationArrayOutput() BucketLambdaConfigurationArrayOutput
	ToBucketLambdaConfigurationArrayOutputWithContext(context.Context) BucketLambdaConfigurationArrayOutput
}

type BucketLambdaConfigurationArray []BucketLambdaConfigurationInput

func (BucketLambdaConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLambdaConfiguration)(nil)).Elem()
}

func (i BucketLambdaConfigurationArray) ToBucketLambdaConfigurationArrayOutput() BucketLambdaConfigurationArrayOutput {
	return i.ToBucketLambdaConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketLambdaConfigurationArray) ToBucketLambdaConfigurationArrayOutputWithContext(ctx context.Context) BucketLambdaConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLambdaConfigurationArrayOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
type BucketLambdaConfigurationOutput struct{ *pulumi.OutputState }

func (BucketLambdaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLambdaConfiguration)(nil)).Elem()
}

func (o BucketLambdaConfigurationOutput) ToBucketLambdaConfigurationOutput() BucketLambdaConfigurationOutput {
	return o
}

func (o BucketLambdaConfigurationOutput) ToBucketLambdaConfigurationOutputWithContext(ctx context.Context) BucketLambdaConfigurationOutput {
	return o
}

// The Amazon S3 bucket event for which to invoke the LAMlong function. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o BucketLambdaConfigurationOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLambdaConfiguration) string { return v.Event }).(pulumi.StringOutput)
}

// The filtering rules that determine which objects invoke the AWS Lambda function. For example, you can create a filter so that only image files with a “.jpg“ extension invoke the function when they are added to the Amazon S3 bucket.
func (o BucketLambdaConfigurationOutput) Filter() BucketNotificationFilterPtrOutput {
	return o.ApplyT(func(v BucketLambdaConfiguration) *BucketNotificationFilter { return v.Filter }).(BucketNotificationFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the LAMlong function that Amazon S3 invokes when the specified event type occurs.
func (o BucketLambdaConfigurationOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLambdaConfiguration) string { return v.Function }).(pulumi.StringOutput)
}

type BucketLambdaConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketLambdaConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLambdaConfiguration)(nil)).Elem()
}

func (o BucketLambdaConfigurationArrayOutput) ToBucketLambdaConfigurationArrayOutput() BucketLambdaConfigurationArrayOutput {
	return o
}

func (o BucketLambdaConfigurationArrayOutput) ToBucketLambdaConfigurationArrayOutputWithContext(ctx context.Context) BucketLambdaConfigurationArrayOutput {
	return o
}

func (o BucketLambdaConfigurationArrayOutput) Index(i pulumi.IntInput) BucketLambdaConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLambdaConfiguration {
		return vs[0].([]BucketLambdaConfiguration)[vs[1].(int)]
	}).(BucketLambdaConfigurationOutput)
}

// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
type BucketLifecycleConfiguration struct {
	// A lifecycle rule for individual objects in an Amazon S3 bucket.
	Rules []BucketRule `pulumi:"rules"`
}

// BucketLifecycleConfigurationInput is an input type that accepts BucketLifecycleConfigurationArgs and BucketLifecycleConfigurationOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationInput` via:
//
//	BucketLifecycleConfigurationArgs{...}
type BucketLifecycleConfigurationInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput
	ToBucketLifecycleConfigurationOutputWithContext(context.Context) BucketLifecycleConfigurationOutput
}

// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
type BucketLifecycleConfigurationArgs struct {
	// A lifecycle rule for individual objects in an Amazon S3 bucket.
	Rules BucketRuleArrayInput `pulumi:"rules"`
}

func (BucketLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfiguration)(nil)).Elem()
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput {
	return i.ToBucketLifecycleConfigurationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationOutput)
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return i.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationOutput).ToBucketLifecycleConfigurationPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigurationPtrInput is an input type that accepts BucketLifecycleConfigurationArgs, BucketLifecycleConfigurationPtr and BucketLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationPtrInput` via:
//
//	        BucketLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput
	ToBucketLifecycleConfigurationPtrOutputWithContext(context.Context) BucketLifecycleConfigurationPtrOutput
}

type bucketLifecycleConfigurationPtrType BucketLifecycleConfigurationArgs

func BucketLifecycleConfigurationPtr(v *BucketLifecycleConfigurationArgs) BucketLifecycleConfigurationPtrInput {
	return (*bucketLifecycleConfigurationPtrType)(v)
}

func (*bucketLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfiguration)(nil)).Elem()
}

func (i *bucketLifecycleConfigurationPtrType) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return i.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigurationPtrType) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationPtrOutput)
}

// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
type BucketLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfiguration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput {
	return o
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationOutput {
	return o
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return o.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfiguration) *BucketLifecycleConfiguration {
		return &v
	}).(BucketLifecycleConfigurationPtrOutput)
}

// A lifecycle rule for individual objects in an Amazon S3 bucket.
func (o BucketLifecycleConfigurationOutput) Rules() BucketRuleArrayOutput {
	return o.ApplyT(func(v BucketLifecycleConfiguration) []BucketRule { return v.Rules }).(BucketRuleArrayOutput)
}

type BucketLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfiguration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationPtrOutput) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationPtrOutput) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationPtrOutput) Elem() BucketLifecycleConfigurationOutput {
	return o.ApplyT(func(v *BucketLifecycleConfiguration) BucketLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfiguration
		return ret
	}).(BucketLifecycleConfigurationOutput)
}

// A lifecycle rule for individual objects in an Amazon S3 bucket.
func (o BucketLifecycleConfigurationPtrOutput) Rules() BucketRuleArrayOutput {
	return o.ApplyT(func(v *BucketLifecycleConfiguration) []BucketRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(BucketRuleArrayOutput)
}

// Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For examples and more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
//
//	To successfully complete the ``AWS::S3::Bucket LoggingConfiguration`` request, you must have ``s3:PutObject`` and ``s3:PutObjectAcl`` in your IAM permissions.
type BucketLoggingConfiguration struct {
	// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.
	DestinationBucketName *string `pulumi:"destinationBucketName"`
	// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.
	LogFilePrefix *string `pulumi:"logFilePrefix"`
	// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed.
	TargetObjectKeyFormat *BucketTargetObjectKeyFormat `pulumi:"targetObjectKeyFormat"`
}

// BucketLoggingConfigurationInput is an input type that accepts BucketLoggingConfigurationArgs and BucketLoggingConfigurationOutput values.
// You can construct a concrete instance of `BucketLoggingConfigurationInput` via:
//
//	BucketLoggingConfigurationArgs{...}
type BucketLoggingConfigurationInput interface {
	pulumi.Input

	ToBucketLoggingConfigurationOutput() BucketLoggingConfigurationOutput
	ToBucketLoggingConfigurationOutputWithContext(context.Context) BucketLoggingConfigurationOutput
}

// Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For examples and more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
//
//	To successfully complete the ``AWS::S3::Bucket LoggingConfiguration`` request, you must have ``s3:PutObject`` and ``s3:PutObjectAcl`` in your IAM permissions.
type BucketLoggingConfigurationArgs struct {
	// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.
	DestinationBucketName pulumi.StringPtrInput `pulumi:"destinationBucketName"`
	// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.
	LogFilePrefix pulumi.StringPtrInput `pulumi:"logFilePrefix"`
	// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed.
	TargetObjectKeyFormat BucketTargetObjectKeyFormatPtrInput `pulumi:"targetObjectKeyFormat"`
}

func (BucketLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingConfiguration)(nil)).Elem()
}

func (i BucketLoggingConfigurationArgs) ToBucketLoggingConfigurationOutput() BucketLoggingConfigurationOutput {
	return i.ToBucketLoggingConfigurationOutputWithContext(context.Background())
}

func (i BucketLoggingConfigurationArgs) ToBucketLoggingConfigurationOutputWithContext(ctx context.Context) BucketLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingConfigurationOutput)
}

func (i BucketLoggingConfigurationArgs) ToBucketLoggingConfigurationPtrOutput() BucketLoggingConfigurationPtrOutput {
	return i.ToBucketLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketLoggingConfigurationArgs) ToBucketLoggingConfigurationPtrOutputWithContext(ctx context.Context) BucketLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingConfigurationOutput).ToBucketLoggingConfigurationPtrOutputWithContext(ctx)
}

// BucketLoggingConfigurationPtrInput is an input type that accepts BucketLoggingConfigurationArgs, BucketLoggingConfigurationPtr and BucketLoggingConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketLoggingConfigurationPtrInput` via:
//
//	        BucketLoggingConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketLoggingConfigurationPtrInput interface {
	pulumi.Input

	ToBucketLoggingConfigurationPtrOutput() BucketLoggingConfigurationPtrOutput
	ToBucketLoggingConfigurationPtrOutputWithContext(context.Context) BucketLoggingConfigurationPtrOutput
}

type bucketLoggingConfigurationPtrType BucketLoggingConfigurationArgs

func BucketLoggingConfigurationPtr(v *BucketLoggingConfigurationArgs) BucketLoggingConfigurationPtrInput {
	return (*bucketLoggingConfigurationPtrType)(v)
}

func (*bucketLoggingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingConfiguration)(nil)).Elem()
}

func (i *bucketLoggingConfigurationPtrType) ToBucketLoggingConfigurationPtrOutput() BucketLoggingConfigurationPtrOutput {
	return i.ToBucketLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketLoggingConfigurationPtrType) ToBucketLoggingConfigurationPtrOutputWithContext(ctx context.Context) BucketLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingConfigurationPtrOutput)
}

// Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For examples and more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
//
//	To successfully complete the ``AWS::S3::Bucket LoggingConfiguration`` request, you must have ``s3:PutObject`` and ``s3:PutObjectAcl`` in your IAM permissions.
type BucketLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (BucketLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingConfiguration)(nil)).Elem()
}

func (o BucketLoggingConfigurationOutput) ToBucketLoggingConfigurationOutput() BucketLoggingConfigurationOutput {
	return o
}

func (o BucketLoggingConfigurationOutput) ToBucketLoggingConfigurationOutputWithContext(ctx context.Context) BucketLoggingConfigurationOutput {
	return o
}

func (o BucketLoggingConfigurationOutput) ToBucketLoggingConfigurationPtrOutput() BucketLoggingConfigurationPtrOutput {
	return o.ToBucketLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketLoggingConfigurationOutput) ToBucketLoggingConfigurationPtrOutputWithContext(ctx context.Context) BucketLoggingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLoggingConfiguration) *BucketLoggingConfiguration {
		return &v
	}).(BucketLoggingConfigurationPtrOutput)
}

// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the “LoggingConfiguration“ property is defined.
func (o BucketLoggingConfigurationOutput) DestinationBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLoggingConfiguration) *string { return v.DestinationBucketName }).(pulumi.StringPtrOutput)
}

// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.
func (o BucketLoggingConfigurationOutput) LogFilePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLoggingConfiguration) *string { return v.LogFilePrefix }).(pulumi.StringPtrOutput)
}

// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed.
func (o BucketLoggingConfigurationOutput) TargetObjectKeyFormat() BucketTargetObjectKeyFormatPtrOutput {
	return o.ApplyT(func(v BucketLoggingConfiguration) *BucketTargetObjectKeyFormat { return v.TargetObjectKeyFormat }).(BucketTargetObjectKeyFormatPtrOutput)
}

type BucketLoggingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingConfiguration)(nil)).Elem()
}

func (o BucketLoggingConfigurationPtrOutput) ToBucketLoggingConfigurationPtrOutput() BucketLoggingConfigurationPtrOutput {
	return o
}

func (o BucketLoggingConfigurationPtrOutput) ToBucketLoggingConfigurationPtrOutputWithContext(ctx context.Context) BucketLoggingConfigurationPtrOutput {
	return o
}

func (o BucketLoggingConfigurationPtrOutput) Elem() BucketLoggingConfigurationOutput {
	return o.ApplyT(func(v *BucketLoggingConfiguration) BucketLoggingConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketLoggingConfiguration
		return ret
	}).(BucketLoggingConfigurationOutput)
}

// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the “LoggingConfiguration“ property is defined.
func (o BucketLoggingConfigurationPtrOutput) DestinationBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationBucketName
	}).(pulumi.StringPtrOutput)
}

// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.
func (o BucketLoggingConfigurationPtrOutput) LogFilePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogFilePrefix
	}).(pulumi.StringPtrOutput)
}

// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed.
func (o BucketLoggingConfigurationPtrOutput) TargetObjectKeyFormat() BucketTargetObjectKeyFormatPtrOutput {
	return o.ApplyT(func(v *BucketLoggingConfiguration) *BucketTargetObjectKeyFormat {
		if v == nil {
			return nil
		}
		return v.TargetObjectKeyFormat
	}).(BucketTargetObjectKeyFormatPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events.
type BucketMetrics struct {
	// A container specifying the time threshold for emitting the ``s3:Replication:OperationMissedThreshold`` event.
	EventThreshold *BucketReplicationTimeValue `pulumi:"eventThreshold"`
	// Specifies whether the replication metrics are enabled.
	Status BucketMetricsStatus `pulumi:"status"`
}

// BucketMetricsInput is an input type that accepts BucketMetricsArgs and BucketMetricsOutput values.
// You can construct a concrete instance of `BucketMetricsInput` via:
//
//	BucketMetricsArgs{...}
type BucketMetricsInput interface {
	pulumi.Input

	ToBucketMetricsOutput() BucketMetricsOutput
	ToBucketMetricsOutputWithContext(context.Context) BucketMetricsOutput
}

// A container specifying replication metrics-related settings enabling replication metrics and events.
type BucketMetricsArgs struct {
	// A container specifying the time threshold for emitting the ``s3:Replication:OperationMissedThreshold`` event.
	EventThreshold BucketReplicationTimeValuePtrInput `pulumi:"eventThreshold"`
	// Specifies whether the replication metrics are enabled.
	Status BucketMetricsStatusInput `pulumi:"status"`
}

func (BucketMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetrics)(nil)).Elem()
}

func (i BucketMetricsArgs) ToBucketMetricsOutput() BucketMetricsOutput {
	return i.ToBucketMetricsOutputWithContext(context.Background())
}

func (i BucketMetricsArgs) ToBucketMetricsOutputWithContext(ctx context.Context) BucketMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricsOutput)
}

func (i BucketMetricsArgs) ToBucketMetricsPtrOutput() BucketMetricsPtrOutput {
	return i.ToBucketMetricsPtrOutputWithContext(context.Background())
}

func (i BucketMetricsArgs) ToBucketMetricsPtrOutputWithContext(ctx context.Context) BucketMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricsOutput).ToBucketMetricsPtrOutputWithContext(ctx)
}

// BucketMetricsPtrInput is an input type that accepts BucketMetricsArgs, BucketMetricsPtr and BucketMetricsPtrOutput values.
// You can construct a concrete instance of `BucketMetricsPtrInput` via:
//
//	        BucketMetricsArgs{...}
//
//	or:
//
//	        nil
type BucketMetricsPtrInput interface {
	pulumi.Input

	ToBucketMetricsPtrOutput() BucketMetricsPtrOutput
	ToBucketMetricsPtrOutputWithContext(context.Context) BucketMetricsPtrOutput
}

type bucketMetricsPtrType BucketMetricsArgs

func BucketMetricsPtr(v *BucketMetricsArgs) BucketMetricsPtrInput {
	return (*bucketMetricsPtrType)(v)
}

func (*bucketMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetrics)(nil)).Elem()
}

func (i *bucketMetricsPtrType) ToBucketMetricsPtrOutput() BucketMetricsPtrOutput {
	return i.ToBucketMetricsPtrOutputWithContext(context.Background())
}

func (i *bucketMetricsPtrType) ToBucketMetricsPtrOutputWithContext(ctx context.Context) BucketMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricsPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events.
type BucketMetricsOutput struct{ *pulumi.OutputState }

func (BucketMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetrics)(nil)).Elem()
}

func (o BucketMetricsOutput) ToBucketMetricsOutput() BucketMetricsOutput {
	return o
}

func (o BucketMetricsOutput) ToBucketMetricsOutputWithContext(ctx context.Context) BucketMetricsOutput {
	return o
}

func (o BucketMetricsOutput) ToBucketMetricsPtrOutput() BucketMetricsPtrOutput {
	return o.ToBucketMetricsPtrOutputWithContext(context.Background())
}

func (o BucketMetricsOutput) ToBucketMetricsPtrOutputWithContext(ctx context.Context) BucketMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketMetrics) *BucketMetrics {
		return &v
	}).(BucketMetricsPtrOutput)
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event.
func (o BucketMetricsOutput) EventThreshold() BucketReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v BucketMetrics) *BucketReplicationTimeValue { return v.EventThreshold }).(BucketReplicationTimeValuePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o BucketMetricsOutput) Status() BucketMetricsStatusOutput {
	return o.ApplyT(func(v BucketMetrics) BucketMetricsStatus { return v.Status }).(BucketMetricsStatusOutput)
}

type BucketMetricsPtrOutput struct{ *pulumi.OutputState }

func (BucketMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetrics)(nil)).Elem()
}

func (o BucketMetricsPtrOutput) ToBucketMetricsPtrOutput() BucketMetricsPtrOutput {
	return o
}

func (o BucketMetricsPtrOutput) ToBucketMetricsPtrOutputWithContext(ctx context.Context) BucketMetricsPtrOutput {
	return o
}

func (o BucketMetricsPtrOutput) Elem() BucketMetricsOutput {
	return o.ApplyT(func(v *BucketMetrics) BucketMetrics {
		if v != nil {
			return *v
		}
		var ret BucketMetrics
		return ret
	}).(BucketMetricsOutput)
}

// A container specifying the time threshold for emitting the “s3:Replication:OperationMissedThreshold“ event.
func (o BucketMetricsPtrOutput) EventThreshold() BucketReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v *BucketMetrics) *BucketReplicationTimeValue {
		if v == nil {
			return nil
		}
		return v.EventThreshold
	}).(BucketReplicationTimeValuePtrOutput)
}

// Specifies whether the replication metrics are enabled.
func (o BucketMetricsPtrOutput) Status() BucketMetricsStatusPtrOutput {
	return o.ApplyT(func(v *BucketMetrics) *BucketMetricsStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(BucketMetricsStatusPtrOutput)
}

// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For examples, see [AWS::S3::Bucket](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples). For more information, see [PUT Bucket metrics](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) in the *Amazon S3 API Reference*.
type BucketMetricsConfiguration struct {
	// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
	AccessPointArn *string `pulumi:"accessPointArn"`
	// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
	Id string `pulumi:"id"`
	// The prefix that an object must have to be included in the metrics results.
	Prefix *string `pulumi:"prefix"`
	// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
	TagFilters []BucketTagFilter `pulumi:"tagFilters"`
}

// BucketMetricsConfigurationInput is an input type that accepts BucketMetricsConfigurationArgs and BucketMetricsConfigurationOutput values.
// You can construct a concrete instance of `BucketMetricsConfigurationInput` via:
//
//	BucketMetricsConfigurationArgs{...}
type BucketMetricsConfigurationInput interface {
	pulumi.Input

	ToBucketMetricsConfigurationOutput() BucketMetricsConfigurationOutput
	ToBucketMetricsConfigurationOutputWithContext(context.Context) BucketMetricsConfigurationOutput
}

// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For examples, see [AWS::S3::Bucket](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples). For more information, see [PUT Bucket metrics](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) in the *Amazon S3 API Reference*.
type BucketMetricsConfigurationArgs struct {
	// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
	AccessPointArn pulumi.StringPtrInput `pulumi:"accessPointArn"`
	// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// The prefix that an object must have to be included in the metrics results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
	TagFilters BucketTagFilterArrayInput `pulumi:"tagFilters"`
}

func (BucketMetricsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetricsConfiguration)(nil)).Elem()
}

func (i BucketMetricsConfigurationArgs) ToBucketMetricsConfigurationOutput() BucketMetricsConfigurationOutput {
	return i.ToBucketMetricsConfigurationOutputWithContext(context.Background())
}

func (i BucketMetricsConfigurationArgs) ToBucketMetricsConfigurationOutputWithContext(ctx context.Context) BucketMetricsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricsConfigurationOutput)
}

// BucketMetricsConfigurationArrayInput is an input type that accepts BucketMetricsConfigurationArray and BucketMetricsConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketMetricsConfigurationArrayInput` via:
//
//	BucketMetricsConfigurationArray{ BucketMetricsConfigurationArgs{...} }
type BucketMetricsConfigurationArrayInput interface {
	pulumi.Input

	ToBucketMetricsConfigurationArrayOutput() BucketMetricsConfigurationArrayOutput
	ToBucketMetricsConfigurationArrayOutputWithContext(context.Context) BucketMetricsConfigurationArrayOutput
}

type BucketMetricsConfigurationArray []BucketMetricsConfigurationInput

func (BucketMetricsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketMetricsConfiguration)(nil)).Elem()
}

func (i BucketMetricsConfigurationArray) ToBucketMetricsConfigurationArrayOutput() BucketMetricsConfigurationArrayOutput {
	return i.ToBucketMetricsConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketMetricsConfigurationArray) ToBucketMetricsConfigurationArrayOutputWithContext(ctx context.Context) BucketMetricsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricsConfigurationArrayOutput)
}

// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For examples, see [AWS::S3::Bucket](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples). For more information, see [PUT Bucket metrics](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) in the *Amazon S3 API Reference*.
type BucketMetricsConfigurationOutput struct{ *pulumi.OutputState }

func (BucketMetricsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetricsConfiguration)(nil)).Elem()
}

func (o BucketMetricsConfigurationOutput) ToBucketMetricsConfigurationOutput() BucketMetricsConfigurationOutput {
	return o
}

func (o BucketMetricsConfigurationOutput) ToBucketMetricsConfigurationOutputWithContext(ctx context.Context) BucketMetricsConfigurationOutput {
	return o
}

// The access point that was used while performing operations on the object. The metrics configuration only includes objects that meet the filter's criteria.
func (o BucketMetricsConfigurationOutput) AccessPointArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketMetricsConfiguration) *string { return v.AccessPointArn }).(pulumi.StringPtrOutput)
}

// The ID used to identify the metrics configuration. This can be any value you choose that helps you identify your metrics configuration.
func (o BucketMetricsConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketMetricsConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The prefix that an object must have to be included in the metrics results.
func (o BucketMetricsConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketMetricsConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a list of tag filters to use as a metrics configuration filter. The metrics configuration includes only objects that meet the filter's criteria.
func (o BucketMetricsConfigurationOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v BucketMetricsConfiguration) []BucketTagFilter { return v.TagFilters }).(BucketTagFilterArrayOutput)
}

type BucketMetricsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketMetricsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketMetricsConfiguration)(nil)).Elem()
}

func (o BucketMetricsConfigurationArrayOutput) ToBucketMetricsConfigurationArrayOutput() BucketMetricsConfigurationArrayOutput {
	return o
}

func (o BucketMetricsConfigurationArrayOutput) ToBucketMetricsConfigurationArrayOutputWithContext(ctx context.Context) BucketMetricsConfigurationArrayOutput {
	return o
}

func (o BucketMetricsConfigurationArrayOutput) Index(i pulumi.IntInput) BucketMetricsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketMetricsConfiguration {
		return vs[0].([]BucketMetricsConfiguration)[vs[1].(int)]
	}).(BucketMetricsConfigurationOutput)
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
type BucketNoncurrentVersionExpiration struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	NoncurrentDays int `pulumi:"noncurrentDays"`
}

// BucketNoncurrentVersionExpirationInput is an input type that accepts BucketNoncurrentVersionExpirationArgs and BucketNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `BucketNoncurrentVersionExpirationInput` via:
//
//	BucketNoncurrentVersionExpirationArgs{...}
type BucketNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToBucketNoncurrentVersionExpirationOutput() BucketNoncurrentVersionExpirationOutput
	ToBucketNoncurrentVersionExpirationOutputWithContext(context.Context) BucketNoncurrentVersionExpirationOutput
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
type BucketNoncurrentVersionExpirationArgs struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions pulumi.IntPtrInput `pulumi:"newerNoncurrentVersions"`
	// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	NoncurrentDays pulumi.IntInput `pulumi:"noncurrentDays"`
}

func (BucketNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNoncurrentVersionExpiration)(nil)).Elem()
}

func (i BucketNoncurrentVersionExpirationArgs) ToBucketNoncurrentVersionExpirationOutput() BucketNoncurrentVersionExpirationOutput {
	return i.ToBucketNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i BucketNoncurrentVersionExpirationArgs) ToBucketNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionExpirationOutput)
}

func (i BucketNoncurrentVersionExpirationArgs) ToBucketNoncurrentVersionExpirationPtrOutput() BucketNoncurrentVersionExpirationPtrOutput {
	return i.ToBucketNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i BucketNoncurrentVersionExpirationArgs) ToBucketNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionExpirationOutput).ToBucketNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// BucketNoncurrentVersionExpirationPtrInput is an input type that accepts BucketNoncurrentVersionExpirationArgs, BucketNoncurrentVersionExpirationPtr and BucketNoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `BucketNoncurrentVersionExpirationPtrInput` via:
//
//	        BucketNoncurrentVersionExpirationArgs{...}
//
//	or:
//
//	        nil
type BucketNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToBucketNoncurrentVersionExpirationPtrOutput() BucketNoncurrentVersionExpirationPtrOutput
	ToBucketNoncurrentVersionExpirationPtrOutputWithContext(context.Context) BucketNoncurrentVersionExpirationPtrOutput
}

type bucketNoncurrentVersionExpirationPtrType BucketNoncurrentVersionExpirationArgs

func BucketNoncurrentVersionExpirationPtr(v *BucketNoncurrentVersionExpirationArgs) BucketNoncurrentVersionExpirationPtrInput {
	return (*bucketNoncurrentVersionExpirationPtrType)(v)
}

func (*bucketNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *bucketNoncurrentVersionExpirationPtrType) ToBucketNoncurrentVersionExpirationPtrOutput() BucketNoncurrentVersionExpirationPtrOutput {
	return i.ToBucketNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketNoncurrentVersionExpirationPtrType) ToBucketNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionExpirationPtrOutput)
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
type BucketNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (BucketNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketNoncurrentVersionExpirationOutput) ToBucketNoncurrentVersionExpirationOutput() BucketNoncurrentVersionExpirationOutput {
	return o
}

func (o BucketNoncurrentVersionExpirationOutput) ToBucketNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationOutput {
	return o
}

func (o BucketNoncurrentVersionExpirationOutput) ToBucketNoncurrentVersionExpirationPtrOutput() BucketNoncurrentVersionExpirationPtrOutput {
	return o.ToBucketNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o BucketNoncurrentVersionExpirationOutput) ToBucketNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketNoncurrentVersionExpiration) *BucketNoncurrentVersionExpiration {
		return &v
	}).(BucketNoncurrentVersionExpirationPtrOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionExpirationOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketNoncurrentVersionExpiration) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionExpirationOutput) NoncurrentDays() pulumi.IntOutput {
	return o.ApplyT(func(v BucketNoncurrentVersionExpiration) int { return v.NoncurrentDays }).(pulumi.IntOutput)
}

type BucketNoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (BucketNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketNoncurrentVersionExpirationPtrOutput) ToBucketNoncurrentVersionExpirationPtrOutput() BucketNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketNoncurrentVersionExpirationPtrOutput) ToBucketNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketNoncurrentVersionExpirationPtrOutput) Elem() BucketNoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionExpiration) BucketNoncurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret BucketNoncurrentVersionExpiration
		return ret
	}).(BucketNoncurrentVersionExpirationOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionExpirationPtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of days an object is noncurrent before S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates When an Object Became Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionExpirationPtrOutput) NoncurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return &v.NoncurrentDays
	}).(pulumi.IntPtrOutput)
}

// Container for the transition rule that describes when noncurrent objects transition to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class at a specific period in the object's lifetime. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
type BucketNoncurrentVersionTransition struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions *int `pulumi:"newerNoncurrentVersions"`
	// The class of storage used to store the object.
	StorageClass BucketNoncurrentVersionTransitionStorageClass `pulumi:"storageClass"`
	// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	TransitionInDays int `pulumi:"transitionInDays"`
}

// BucketNoncurrentVersionTransitionInput is an input type that accepts BucketNoncurrentVersionTransitionArgs and BucketNoncurrentVersionTransitionOutput values.
// You can construct a concrete instance of `BucketNoncurrentVersionTransitionInput` via:
//
//	BucketNoncurrentVersionTransitionArgs{...}
type BucketNoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToBucketNoncurrentVersionTransitionOutput() BucketNoncurrentVersionTransitionOutput
	ToBucketNoncurrentVersionTransitionOutputWithContext(context.Context) BucketNoncurrentVersionTransitionOutput
}

// Container for the transition rule that describes when noncurrent objects transition to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class at a specific period in the object's lifetime. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
type BucketNoncurrentVersionTransitionArgs struct {
	// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
	NewerNoncurrentVersions pulumi.IntPtrInput `pulumi:"newerNoncurrentVersions"`
	// The class of storage used to store the object.
	StorageClass BucketNoncurrentVersionTransitionStorageClassInput `pulumi:"storageClass"`
	// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
	TransitionInDays pulumi.IntInput `pulumi:"transitionInDays"`
}

func (BucketNoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketNoncurrentVersionTransitionArgs) ToBucketNoncurrentVersionTransitionOutput() BucketNoncurrentVersionTransitionOutput {
	return i.ToBucketNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i BucketNoncurrentVersionTransitionArgs) ToBucketNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionTransitionOutput)
}

func (i BucketNoncurrentVersionTransitionArgs) ToBucketNoncurrentVersionTransitionPtrOutput() BucketNoncurrentVersionTransitionPtrOutput {
	return i.ToBucketNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (i BucketNoncurrentVersionTransitionArgs) ToBucketNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionTransitionOutput).ToBucketNoncurrentVersionTransitionPtrOutputWithContext(ctx)
}

// BucketNoncurrentVersionTransitionPtrInput is an input type that accepts BucketNoncurrentVersionTransitionArgs, BucketNoncurrentVersionTransitionPtr and BucketNoncurrentVersionTransitionPtrOutput values.
// You can construct a concrete instance of `BucketNoncurrentVersionTransitionPtrInput` via:
//
//	        BucketNoncurrentVersionTransitionArgs{...}
//
//	or:
//
//	        nil
type BucketNoncurrentVersionTransitionPtrInput interface {
	pulumi.Input

	ToBucketNoncurrentVersionTransitionPtrOutput() BucketNoncurrentVersionTransitionPtrOutput
	ToBucketNoncurrentVersionTransitionPtrOutputWithContext(context.Context) BucketNoncurrentVersionTransitionPtrOutput
}

type bucketNoncurrentVersionTransitionPtrType BucketNoncurrentVersionTransitionArgs

func BucketNoncurrentVersionTransitionPtr(v *BucketNoncurrentVersionTransitionArgs) BucketNoncurrentVersionTransitionPtrInput {
	return (*bucketNoncurrentVersionTransitionPtrType)(v)
}

func (*bucketNoncurrentVersionTransitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (i *bucketNoncurrentVersionTransitionPtrType) ToBucketNoncurrentVersionTransitionPtrOutput() BucketNoncurrentVersionTransitionPtrOutput {
	return i.ToBucketNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (i *bucketNoncurrentVersionTransitionPtrType) ToBucketNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionTransitionPtrOutput)
}

// BucketNoncurrentVersionTransitionArrayInput is an input type that accepts BucketNoncurrentVersionTransitionArray and BucketNoncurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `BucketNoncurrentVersionTransitionArrayInput` via:
//
//	BucketNoncurrentVersionTransitionArray{ BucketNoncurrentVersionTransitionArgs{...} }
type BucketNoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToBucketNoncurrentVersionTransitionArrayOutput() BucketNoncurrentVersionTransitionArrayOutput
	ToBucketNoncurrentVersionTransitionArrayOutputWithContext(context.Context) BucketNoncurrentVersionTransitionArrayOutput
}

type BucketNoncurrentVersionTransitionArray []BucketNoncurrentVersionTransitionInput

func (BucketNoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketNoncurrentVersionTransitionArray) ToBucketNoncurrentVersionTransitionArrayOutput() BucketNoncurrentVersionTransitionArrayOutput {
	return i.ToBucketNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i BucketNoncurrentVersionTransitionArray) ToBucketNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNoncurrentVersionTransitionArrayOutput)
}

// Container for the transition rule that describes when noncurrent objects transition to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the “STANDARD_IA“, “ONEZONE_IA“, “INTELLIGENT_TIERING“, “GLACIER_IR“, “GLACIER“, or “DEEP_ARCHIVE“ storage class at a specific period in the object's lifetime. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
type BucketNoncurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (BucketNoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketNoncurrentVersionTransitionOutput) ToBucketNoncurrentVersionTransitionOutput() BucketNoncurrentVersionTransitionOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionOutput) ToBucketNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionOutput) ToBucketNoncurrentVersionTransitionPtrOutput() BucketNoncurrentVersionTransitionPtrOutput {
	return o.ToBucketNoncurrentVersionTransitionPtrOutputWithContext(context.Background())
}

func (o BucketNoncurrentVersionTransitionOutput) ToBucketNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketNoncurrentVersionTransition) *BucketNoncurrentVersionTransition {
		return &v
	}).(BucketNoncurrentVersionTransitionPtrOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionTransitionOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketNoncurrentVersionTransition) *int { return v.NewerNoncurrentVersions }).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o BucketNoncurrentVersionTransitionOutput) StorageClass() BucketNoncurrentVersionTransitionStorageClassOutput {
	return o.ApplyT(func(v BucketNoncurrentVersionTransition) BucketNoncurrentVersionTransitionStorageClass {
		return v.StorageClass
	}).(BucketNoncurrentVersionTransitionStorageClassOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionTransitionOutput) TransitionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BucketNoncurrentVersionTransition) int { return v.TransitionInDays }).(pulumi.IntOutput)
}

type BucketNoncurrentVersionTransitionPtrOutput struct{ *pulumi.OutputState }

func (BucketNoncurrentVersionTransitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketNoncurrentVersionTransitionPtrOutput) ToBucketNoncurrentVersionTransitionPtrOutput() BucketNoncurrentVersionTransitionPtrOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionPtrOutput) ToBucketNoncurrentVersionTransitionPtrOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionPtrOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionPtrOutput) Elem() BucketNoncurrentVersionTransitionOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionTransition) BucketNoncurrentVersionTransition {
		if v != nil {
			return *v
		}
		var ret BucketNoncurrentVersionTransition
		return ret
	}).(BucketNoncurrentVersionTransitionOutput)
}

// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionTransitionPtrOutput) NewerNoncurrentVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionTransition) *int {
		if v == nil {
			return nil
		}
		return v.NewerNoncurrentVersions
	}).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object.
func (o BucketNoncurrentVersionTransitionPtrOutput) StorageClass() BucketNoncurrentVersionTransitionStorageClassPtrOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionTransition) *BucketNoncurrentVersionTransitionStorageClass {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(BucketNoncurrentVersionTransitionStorageClassPtrOutput)
}

// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.
func (o BucketNoncurrentVersionTransitionPtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketNoncurrentVersionTransition) *int {
		if v == nil {
			return nil
		}
		return &v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type BucketNoncurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketNoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketNoncurrentVersionTransitionArrayOutput) ToBucketNoncurrentVersionTransitionArrayOutput() BucketNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionArrayOutput) ToBucketNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketNoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) BucketNoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketNoncurrentVersionTransition {
		return vs[0].([]BucketNoncurrentVersionTransition)[vs[1].(int)]
	}).(BucketNoncurrentVersionTransitionOutput)
}

// Describes the notification configuration for an Amazon S3 bucket.
//
//	 If you create the target resource and related permissions in the same template, you might have a circular dependency.
//	For example, you might use the ``AWS::Lambda::Permission`` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function (AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
//	To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
//	For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3).
type BucketNotificationConfiguration struct {
	// Enables delivery of events to Amazon EventBridge.
	EventBridgeConfiguration *BucketEventBridgeConfiguration `pulumi:"eventBridgeConfiguration"`
	// Describes the LAMlong functions to invoke and the events for which to invoke them.
	LambdaConfigurations []BucketLambdaConfiguration `pulumi:"lambdaConfigurations"`
	// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
	QueueConfigurations []BucketQueueConfiguration `pulumi:"queueConfigurations"`
	// The topic to which notifications are sent and the events for which notifications are generated.
	TopicConfigurations []BucketTopicConfiguration `pulumi:"topicConfigurations"`
}

// BucketNotificationConfigurationInput is an input type that accepts BucketNotificationConfigurationArgs and BucketNotificationConfigurationOutput values.
// You can construct a concrete instance of `BucketNotificationConfigurationInput` via:
//
//	BucketNotificationConfigurationArgs{...}
type BucketNotificationConfigurationInput interface {
	pulumi.Input

	ToBucketNotificationConfigurationOutput() BucketNotificationConfigurationOutput
	ToBucketNotificationConfigurationOutputWithContext(context.Context) BucketNotificationConfigurationOutput
}

// Describes the notification configuration for an Amazon S3 bucket.
//
//	 If you create the target resource and related permissions in the same template, you might have a circular dependency.
//	For example, you might use the ``AWS::Lambda::Permission`` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function (AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
//	To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
//	For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3).
type BucketNotificationConfigurationArgs struct {
	// Enables delivery of events to Amazon EventBridge.
	EventBridgeConfiguration BucketEventBridgeConfigurationPtrInput `pulumi:"eventBridgeConfiguration"`
	// Describes the LAMlong functions to invoke and the events for which to invoke them.
	LambdaConfigurations BucketLambdaConfigurationArrayInput `pulumi:"lambdaConfigurations"`
	// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
	QueueConfigurations BucketQueueConfigurationArrayInput `pulumi:"queueConfigurations"`
	// The topic to which notifications are sent and the events for which notifications are generated.
	TopicConfigurations BucketTopicConfigurationArrayInput `pulumi:"topicConfigurations"`
}

func (BucketNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationConfiguration)(nil)).Elem()
}

func (i BucketNotificationConfigurationArgs) ToBucketNotificationConfigurationOutput() BucketNotificationConfigurationOutput {
	return i.ToBucketNotificationConfigurationOutputWithContext(context.Background())
}

func (i BucketNotificationConfigurationArgs) ToBucketNotificationConfigurationOutputWithContext(ctx context.Context) BucketNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationConfigurationOutput)
}

func (i BucketNotificationConfigurationArgs) ToBucketNotificationConfigurationPtrOutput() BucketNotificationConfigurationPtrOutput {
	return i.ToBucketNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketNotificationConfigurationArgs) ToBucketNotificationConfigurationPtrOutputWithContext(ctx context.Context) BucketNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationConfigurationOutput).ToBucketNotificationConfigurationPtrOutputWithContext(ctx)
}

// BucketNotificationConfigurationPtrInput is an input type that accepts BucketNotificationConfigurationArgs, BucketNotificationConfigurationPtr and BucketNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketNotificationConfigurationPtrInput` via:
//
//	        BucketNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToBucketNotificationConfigurationPtrOutput() BucketNotificationConfigurationPtrOutput
	ToBucketNotificationConfigurationPtrOutputWithContext(context.Context) BucketNotificationConfigurationPtrOutput
}

type bucketNotificationConfigurationPtrType BucketNotificationConfigurationArgs

func BucketNotificationConfigurationPtr(v *BucketNotificationConfigurationArgs) BucketNotificationConfigurationPtrInput {
	return (*bucketNotificationConfigurationPtrType)(v)
}

func (*bucketNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNotificationConfiguration)(nil)).Elem()
}

func (i *bucketNotificationConfigurationPtrType) ToBucketNotificationConfigurationPtrOutput() BucketNotificationConfigurationPtrOutput {
	return i.ToBucketNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketNotificationConfigurationPtrType) ToBucketNotificationConfigurationPtrOutputWithContext(ctx context.Context) BucketNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationConfigurationPtrOutput)
}

// Describes the notification configuration for an Amazon S3 bucket.
//
//	 If you create the target resource and related permissions in the same template, you might have a circular dependency.
//	For example, you might use the ``AWS::Lambda::Permission`` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function (AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
//	To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
//	For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3).
type BucketNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (BucketNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationConfiguration)(nil)).Elem()
}

func (o BucketNotificationConfigurationOutput) ToBucketNotificationConfigurationOutput() BucketNotificationConfigurationOutput {
	return o
}

func (o BucketNotificationConfigurationOutput) ToBucketNotificationConfigurationOutputWithContext(ctx context.Context) BucketNotificationConfigurationOutput {
	return o
}

func (o BucketNotificationConfigurationOutput) ToBucketNotificationConfigurationPtrOutput() BucketNotificationConfigurationPtrOutput {
	return o.ToBucketNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketNotificationConfigurationOutput) ToBucketNotificationConfigurationPtrOutputWithContext(ctx context.Context) BucketNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketNotificationConfiguration) *BucketNotificationConfiguration {
		return &v
	}).(BucketNotificationConfigurationPtrOutput)
}

// Enables delivery of events to Amazon EventBridge.
func (o BucketNotificationConfigurationOutput) EventBridgeConfiguration() BucketEventBridgeConfigurationPtrOutput {
	return o.ApplyT(func(v BucketNotificationConfiguration) *BucketEventBridgeConfiguration {
		return v.EventBridgeConfiguration
	}).(BucketEventBridgeConfigurationPtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o BucketNotificationConfigurationOutput) LambdaConfigurations() BucketLambdaConfigurationArrayOutput {
	return o.ApplyT(func(v BucketNotificationConfiguration) []BucketLambdaConfiguration { return v.LambdaConfigurations }).(BucketLambdaConfigurationArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o BucketNotificationConfigurationOutput) QueueConfigurations() BucketQueueConfigurationArrayOutput {
	return o.ApplyT(func(v BucketNotificationConfiguration) []BucketQueueConfiguration { return v.QueueConfigurations }).(BucketQueueConfigurationArrayOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o BucketNotificationConfigurationOutput) TopicConfigurations() BucketTopicConfigurationArrayOutput {
	return o.ApplyT(func(v BucketNotificationConfiguration) []BucketTopicConfiguration { return v.TopicConfigurations }).(BucketTopicConfigurationArrayOutput)
}

type BucketNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNotificationConfiguration)(nil)).Elem()
}

func (o BucketNotificationConfigurationPtrOutput) ToBucketNotificationConfigurationPtrOutput() BucketNotificationConfigurationPtrOutput {
	return o
}

func (o BucketNotificationConfigurationPtrOutput) ToBucketNotificationConfigurationPtrOutputWithContext(ctx context.Context) BucketNotificationConfigurationPtrOutput {
	return o
}

func (o BucketNotificationConfigurationPtrOutput) Elem() BucketNotificationConfigurationOutput {
	return o.ApplyT(func(v *BucketNotificationConfiguration) BucketNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketNotificationConfiguration
		return ret
	}).(BucketNotificationConfigurationOutput)
}

// Enables delivery of events to Amazon EventBridge.
func (o BucketNotificationConfigurationPtrOutput) EventBridgeConfiguration() BucketEventBridgeConfigurationPtrOutput {
	return o.ApplyT(func(v *BucketNotificationConfiguration) *BucketEventBridgeConfiguration {
		if v == nil {
			return nil
		}
		return v.EventBridgeConfiguration
	}).(BucketEventBridgeConfigurationPtrOutput)
}

// Describes the LAMlong functions to invoke and the events for which to invoke them.
func (o BucketNotificationConfigurationPtrOutput) LambdaConfigurations() BucketLambdaConfigurationArrayOutput {
	return o.ApplyT(func(v *BucketNotificationConfiguration) []BucketLambdaConfiguration {
		if v == nil {
			return nil
		}
		return v.LambdaConfigurations
	}).(BucketLambdaConfigurationArrayOutput)
}

// The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
func (o BucketNotificationConfigurationPtrOutput) QueueConfigurations() BucketQueueConfigurationArrayOutput {
	return o.ApplyT(func(v *BucketNotificationConfiguration) []BucketQueueConfiguration {
		if v == nil {
			return nil
		}
		return v.QueueConfigurations
	}).(BucketQueueConfigurationArrayOutput)
}

// The topic to which notifications are sent and the events for which notifications are generated.
func (o BucketNotificationConfigurationPtrOutput) TopicConfigurations() BucketTopicConfigurationArrayOutput {
	return o.ApplyT(func(v *BucketNotificationConfiguration) []BucketTopicConfiguration {
		if v == nil {
			return nil
		}
		return v.TopicConfigurations
	}).(BucketTopicConfigurationArrayOutput)
}

// Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
type BucketNotificationFilter struct {
	// A container for object key name prefix and suffix filtering rules.
	S3Key BucketS3KeyFilter `pulumi:"s3Key"`
}

// BucketNotificationFilterInput is an input type that accepts BucketNotificationFilterArgs and BucketNotificationFilterOutput values.
// You can construct a concrete instance of `BucketNotificationFilterInput` via:
//
//	BucketNotificationFilterArgs{...}
type BucketNotificationFilterInput interface {
	pulumi.Input

	ToBucketNotificationFilterOutput() BucketNotificationFilterOutput
	ToBucketNotificationFilterOutputWithContext(context.Context) BucketNotificationFilterOutput
}

// Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
type BucketNotificationFilterArgs struct {
	// A container for object key name prefix and suffix filtering rules.
	S3Key BucketS3KeyFilterInput `pulumi:"s3Key"`
}

func (BucketNotificationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationFilter)(nil)).Elem()
}

func (i BucketNotificationFilterArgs) ToBucketNotificationFilterOutput() BucketNotificationFilterOutput {
	return i.ToBucketNotificationFilterOutputWithContext(context.Background())
}

func (i BucketNotificationFilterArgs) ToBucketNotificationFilterOutputWithContext(ctx context.Context) BucketNotificationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationFilterOutput)
}

func (i BucketNotificationFilterArgs) ToBucketNotificationFilterPtrOutput() BucketNotificationFilterPtrOutput {
	return i.ToBucketNotificationFilterPtrOutputWithContext(context.Background())
}

func (i BucketNotificationFilterArgs) ToBucketNotificationFilterPtrOutputWithContext(ctx context.Context) BucketNotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationFilterOutput).ToBucketNotificationFilterPtrOutputWithContext(ctx)
}

// BucketNotificationFilterPtrInput is an input type that accepts BucketNotificationFilterArgs, BucketNotificationFilterPtr and BucketNotificationFilterPtrOutput values.
// You can construct a concrete instance of `BucketNotificationFilterPtrInput` via:
//
//	        BucketNotificationFilterArgs{...}
//
//	or:
//
//	        nil
type BucketNotificationFilterPtrInput interface {
	pulumi.Input

	ToBucketNotificationFilterPtrOutput() BucketNotificationFilterPtrOutput
	ToBucketNotificationFilterPtrOutputWithContext(context.Context) BucketNotificationFilterPtrOutput
}

type bucketNotificationFilterPtrType BucketNotificationFilterArgs

func BucketNotificationFilterPtr(v *BucketNotificationFilterArgs) BucketNotificationFilterPtrInput {
	return (*bucketNotificationFilterPtrType)(v)
}

func (*bucketNotificationFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNotificationFilter)(nil)).Elem()
}

func (i *bucketNotificationFilterPtrType) ToBucketNotificationFilterPtrOutput() BucketNotificationFilterPtrOutput {
	return i.ToBucketNotificationFilterPtrOutputWithContext(context.Background())
}

func (i *bucketNotificationFilterPtrType) ToBucketNotificationFilterPtrOutputWithContext(ctx context.Context) BucketNotificationFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationFilterPtrOutput)
}

// Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
type BucketNotificationFilterOutput struct{ *pulumi.OutputState }

func (BucketNotificationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationFilter)(nil)).Elem()
}

func (o BucketNotificationFilterOutput) ToBucketNotificationFilterOutput() BucketNotificationFilterOutput {
	return o
}

func (o BucketNotificationFilterOutput) ToBucketNotificationFilterOutputWithContext(ctx context.Context) BucketNotificationFilterOutput {
	return o
}

func (o BucketNotificationFilterOutput) ToBucketNotificationFilterPtrOutput() BucketNotificationFilterPtrOutput {
	return o.ToBucketNotificationFilterPtrOutputWithContext(context.Background())
}

func (o BucketNotificationFilterOutput) ToBucketNotificationFilterPtrOutputWithContext(ctx context.Context) BucketNotificationFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketNotificationFilter) *BucketNotificationFilter {
		return &v
	}).(BucketNotificationFilterPtrOutput)
}

// A container for object key name prefix and suffix filtering rules.
func (o BucketNotificationFilterOutput) S3Key() BucketS3KeyFilterOutput {
	return o.ApplyT(func(v BucketNotificationFilter) BucketS3KeyFilter { return v.S3Key }).(BucketS3KeyFilterOutput)
}

type BucketNotificationFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketNotificationFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketNotificationFilter)(nil)).Elem()
}

func (o BucketNotificationFilterPtrOutput) ToBucketNotificationFilterPtrOutput() BucketNotificationFilterPtrOutput {
	return o
}

func (o BucketNotificationFilterPtrOutput) ToBucketNotificationFilterPtrOutputWithContext(ctx context.Context) BucketNotificationFilterPtrOutput {
	return o
}

func (o BucketNotificationFilterPtrOutput) Elem() BucketNotificationFilterOutput {
	return o.ApplyT(func(v *BucketNotificationFilter) BucketNotificationFilter {
		if v != nil {
			return *v
		}
		var ret BucketNotificationFilter
		return ret
	}).(BucketNotificationFilterOutput)
}

// A container for object key name prefix and suffix filtering rules.
func (o BucketNotificationFilterPtrOutput) S3Key() BucketS3KeyFilterPtrOutput {
	return o.ApplyT(func(v *BucketNotificationFilter) *BucketS3KeyFilter {
		if v == nil {
			return nil
		}
		return &v.S3Key
	}).(BucketS3KeyFilterPtrOutput)
}

// Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
type BucketObjectLockConfiguration struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled *string `pulumi:"objectLockEnabled"`
	// Specifies the Object Lock rule for the specified object. Enable this rule when you apply ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
	Rule *BucketObjectLockRule `pulumi:"rule"`
}

// BucketObjectLockConfigurationInput is an input type that accepts BucketObjectLockConfigurationArgs and BucketObjectLockConfigurationOutput values.
// You can construct a concrete instance of `BucketObjectLockConfigurationInput` via:
//
//	BucketObjectLockConfigurationArgs{...}
type BucketObjectLockConfigurationInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput
	ToBucketObjectLockConfigurationOutputWithContext(context.Context) BucketObjectLockConfigurationOutput
}

// Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
type BucketObjectLockConfigurationArgs struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
	ObjectLockEnabled pulumi.StringPtrInput `pulumi:"objectLockEnabled"`
	// Specifies the Object Lock rule for the specified object. Enable this rule when you apply ``ObjectLockConfiguration`` to a bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
	Rule BucketObjectLockRulePtrInput `pulumi:"rule"`
}

func (BucketObjectLockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfiguration)(nil)).Elem()
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput {
	return i.ToBucketObjectLockConfigurationOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationOutputWithContext(ctx context.Context) BucketObjectLockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationOutput)
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return i.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationOutput).ToBucketObjectLockConfigurationPtrOutputWithContext(ctx)
}

// BucketObjectLockConfigurationPtrInput is an input type that accepts BucketObjectLockConfigurationArgs, BucketObjectLockConfigurationPtr and BucketObjectLockConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketObjectLockConfigurationPtrInput` via:
//
//	        BucketObjectLockConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketObjectLockConfigurationPtrInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput
	ToBucketObjectLockConfigurationPtrOutputWithContext(context.Context) BucketObjectLockConfigurationPtrOutput
}

type bucketObjectLockConfigurationPtrType BucketObjectLockConfigurationArgs

func BucketObjectLockConfigurationPtr(v *BucketObjectLockConfigurationArgs) BucketObjectLockConfigurationPtrInput {
	return (*bucketObjectLockConfigurationPtrType)(v)
}

func (*bucketObjectLockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfiguration)(nil)).Elem()
}

func (i *bucketObjectLockConfigurationPtrType) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return i.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketObjectLockConfigurationPtrType) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationPtrOutput)
}

// Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
type BucketObjectLockConfigurationOutput struct{ *pulumi.OutputState }

func (BucketObjectLockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfiguration)(nil)).Elem()
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput {
	return o
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationOutputWithContext(ctx context.Context) BucketObjectLockConfigurationOutput {
	return o
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return o.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketObjectLockConfiguration) *BucketObjectLockConfiguration {
		return &v
	}).(BucketObjectLockConfigurationPtrOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o BucketObjectLockConfigurationOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectLockConfiguration) *string { return v.ObjectLockEnabled }).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
func (o BucketObjectLockConfigurationOutput) Rule() BucketObjectLockRulePtrOutput {
	return o.ApplyT(func(v BucketObjectLockConfiguration) *BucketObjectLockRule { return v.Rule }).(BucketObjectLockRulePtrOutput)
}

type BucketObjectLockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketObjectLockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfiguration)(nil)).Elem()
}

func (o BucketObjectLockConfigurationPtrOutput) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return o
}

func (o BucketObjectLockConfigurationPtrOutput) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return o
}

func (o BucketObjectLockConfigurationPtrOutput) Elem() BucketObjectLockConfigurationOutput {
	return o.ApplyT(func(v *BucketObjectLockConfiguration) BucketObjectLockConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketObjectLockConfiguration
		return ret
	}).(BucketObjectLockConfigurationOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Enable “ObjectLockEnabled“ when you apply “ObjectLockConfiguration“ to a bucket.
func (o BucketObjectLockConfigurationPtrOutput) ObjectLockEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectLockConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ObjectLockEnabled
	}).(pulumi.StringPtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable this rule when you apply “ObjectLockConfiguration“ to a bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information, see [ObjectLockRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-objectlockrule.html) and [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
func (o BucketObjectLockConfigurationPtrOutput) Rule() BucketObjectLockRulePtrOutput {
	return o.ApplyT(func(v *BucketObjectLockConfiguration) *BucketObjectLockRule {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(BucketObjectLockRulePtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
type BucketObjectLockRule struct {
	// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
	DefaultRetention *BucketDefaultRetention `pulumi:"defaultRetention"`
}

// BucketObjectLockRuleInput is an input type that accepts BucketObjectLockRuleArgs and BucketObjectLockRuleOutput values.
// You can construct a concrete instance of `BucketObjectLockRuleInput` via:
//
//	BucketObjectLockRuleArgs{...}
type BucketObjectLockRuleInput interface {
	pulumi.Input

	ToBucketObjectLockRuleOutput() BucketObjectLockRuleOutput
	ToBucketObjectLockRuleOutputWithContext(context.Context) BucketObjectLockRuleOutput
}

// Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
type BucketObjectLockRuleArgs struct {
	// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both ``Mode`` and a period of either ``Days`` or ``Years``. You cannot specify ``Days`` and ``Years`` at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
	DefaultRetention BucketDefaultRetentionPtrInput `pulumi:"defaultRetention"`
}

func (BucketObjectLockRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockRule)(nil)).Elem()
}

func (i BucketObjectLockRuleArgs) ToBucketObjectLockRuleOutput() BucketObjectLockRuleOutput {
	return i.ToBucketObjectLockRuleOutputWithContext(context.Background())
}

func (i BucketObjectLockRuleArgs) ToBucketObjectLockRuleOutputWithContext(ctx context.Context) BucketObjectLockRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockRuleOutput)
}

func (i BucketObjectLockRuleArgs) ToBucketObjectLockRulePtrOutput() BucketObjectLockRulePtrOutput {
	return i.ToBucketObjectLockRulePtrOutputWithContext(context.Background())
}

func (i BucketObjectLockRuleArgs) ToBucketObjectLockRulePtrOutputWithContext(ctx context.Context) BucketObjectLockRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockRuleOutput).ToBucketObjectLockRulePtrOutputWithContext(ctx)
}

// BucketObjectLockRulePtrInput is an input type that accepts BucketObjectLockRuleArgs, BucketObjectLockRulePtr and BucketObjectLockRulePtrOutput values.
// You can construct a concrete instance of `BucketObjectLockRulePtrInput` via:
//
//	        BucketObjectLockRuleArgs{...}
//
//	or:
//
//	        nil
type BucketObjectLockRulePtrInput interface {
	pulumi.Input

	ToBucketObjectLockRulePtrOutput() BucketObjectLockRulePtrOutput
	ToBucketObjectLockRulePtrOutputWithContext(context.Context) BucketObjectLockRulePtrOutput
}

type bucketObjectLockRulePtrType BucketObjectLockRuleArgs

func BucketObjectLockRulePtr(v *BucketObjectLockRuleArgs) BucketObjectLockRulePtrInput {
	return (*bucketObjectLockRulePtrType)(v)
}

func (*bucketObjectLockRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockRule)(nil)).Elem()
}

func (i *bucketObjectLockRulePtrType) ToBucketObjectLockRulePtrOutput() BucketObjectLockRulePtrOutput {
	return i.ToBucketObjectLockRulePtrOutputWithContext(context.Background())
}

func (i *bucketObjectLockRulePtrType) ToBucketObjectLockRulePtrOutputWithContext(ctx context.Context) BucketObjectLockRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockRulePtrOutput)
}

// Specifies the Object Lock rule for the specified object. Enable the this rule when you apply “ObjectLockConfiguration“ to a bucket.
type BucketObjectLockRuleOutput struct{ *pulumi.OutputState }

func (BucketObjectLockRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockRule)(nil)).Elem()
}

func (o BucketObjectLockRuleOutput) ToBucketObjectLockRuleOutput() BucketObjectLockRuleOutput {
	return o
}

func (o BucketObjectLockRuleOutput) ToBucketObjectLockRuleOutputWithContext(ctx context.Context) BucketObjectLockRuleOutput {
	return o
}

func (o BucketObjectLockRuleOutput) ToBucketObjectLockRulePtrOutput() BucketObjectLockRulePtrOutput {
	return o.ToBucketObjectLockRulePtrOutputWithContext(context.Background())
}

func (o BucketObjectLockRuleOutput) ToBucketObjectLockRulePtrOutputWithContext(ctx context.Context) BucketObjectLockRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketObjectLockRule) *BucketObjectLockRule {
		return &v
	}).(BucketObjectLockRulePtrOutput)
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
func (o BucketObjectLockRuleOutput) DefaultRetention() BucketDefaultRetentionPtrOutput {
	return o.ApplyT(func(v BucketObjectLockRule) *BucketDefaultRetention { return v.DefaultRetention }).(BucketDefaultRetentionPtrOutput)
}

type BucketObjectLockRulePtrOutput struct{ *pulumi.OutputState }

func (BucketObjectLockRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockRule)(nil)).Elem()
}

func (o BucketObjectLockRulePtrOutput) ToBucketObjectLockRulePtrOutput() BucketObjectLockRulePtrOutput {
	return o
}

func (o BucketObjectLockRulePtrOutput) ToBucketObjectLockRulePtrOutputWithContext(ctx context.Context) BucketObjectLockRulePtrOutput {
	return o
}

func (o BucketObjectLockRulePtrOutput) Elem() BucketObjectLockRuleOutput {
	return o.ApplyT(func(v *BucketObjectLockRule) BucketObjectLockRule {
		if v != nil {
			return *v
		}
		var ret BucketObjectLockRule
		return ret
	}).(BucketObjectLockRuleOutput)
}

// The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. If Object Lock is turned on, bucket settings require both “Mode“ and a period of either “Days“ or “Years“. You cannot specify “Days“ and “Years“ at the same time. For more information about allowable values for mode and period, see [DefaultRetention](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-defaultretention.html).
func (o BucketObjectLockRulePtrOutput) DefaultRetention() BucketDefaultRetentionPtrOutput {
	return o.ApplyT(func(v *BucketObjectLockRule) *BucketDefaultRetention {
		if v == nil {
			return nil
		}
		return v.DefaultRetention
	}).(BucketDefaultRetentionPtrOutput)
}

// Specifies the container element for Object Ownership rules.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControls struct {
	// Specifies the container element for Object Ownership rules.
	Rules []BucketOwnershipControlsRule `pulumi:"rules"`
}

// BucketOwnershipControlsInput is an input type that accepts BucketOwnershipControlsArgs and BucketOwnershipControlsOutput values.
// You can construct a concrete instance of `BucketOwnershipControlsInput` via:
//
//	BucketOwnershipControlsArgs{...}
type BucketOwnershipControlsInput interface {
	pulumi.Input

	ToBucketOwnershipControlsOutput() BucketOwnershipControlsOutput
	ToBucketOwnershipControlsOutputWithContext(context.Context) BucketOwnershipControlsOutput
}

// Specifies the container element for Object Ownership rules.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControlsArgs struct {
	// Specifies the container element for Object Ownership rules.
	Rules BucketOwnershipControlsRuleArrayInput `pulumi:"rules"`
}

func (BucketOwnershipControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnershipControls)(nil)).Elem()
}

func (i BucketOwnershipControlsArgs) ToBucketOwnershipControlsOutput() BucketOwnershipControlsOutput {
	return i.ToBucketOwnershipControlsOutputWithContext(context.Background())
}

func (i BucketOwnershipControlsArgs) ToBucketOwnershipControlsOutputWithContext(ctx context.Context) BucketOwnershipControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnershipControlsOutput)
}

func (i BucketOwnershipControlsArgs) ToBucketOwnershipControlsPtrOutput() BucketOwnershipControlsPtrOutput {
	return i.ToBucketOwnershipControlsPtrOutputWithContext(context.Background())
}

func (i BucketOwnershipControlsArgs) ToBucketOwnershipControlsPtrOutputWithContext(ctx context.Context) BucketOwnershipControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnershipControlsOutput).ToBucketOwnershipControlsPtrOutputWithContext(ctx)
}

// BucketOwnershipControlsPtrInput is an input type that accepts BucketOwnershipControlsArgs, BucketOwnershipControlsPtr and BucketOwnershipControlsPtrOutput values.
// You can construct a concrete instance of `BucketOwnershipControlsPtrInput` via:
//
//	        BucketOwnershipControlsArgs{...}
//
//	or:
//
//	        nil
type BucketOwnershipControlsPtrInput interface {
	pulumi.Input

	ToBucketOwnershipControlsPtrOutput() BucketOwnershipControlsPtrOutput
	ToBucketOwnershipControlsPtrOutputWithContext(context.Context) BucketOwnershipControlsPtrOutput
}

type bucketOwnershipControlsPtrType BucketOwnershipControlsArgs

func BucketOwnershipControlsPtr(v *BucketOwnershipControlsArgs) BucketOwnershipControlsPtrInput {
	return (*bucketOwnershipControlsPtrType)(v)
}

func (*bucketOwnershipControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwnershipControls)(nil)).Elem()
}

func (i *bucketOwnershipControlsPtrType) ToBucketOwnershipControlsPtrOutput() BucketOwnershipControlsPtrOutput {
	return i.ToBucketOwnershipControlsPtrOutputWithContext(context.Background())
}

func (i *bucketOwnershipControlsPtrType) ToBucketOwnershipControlsPtrOutputWithContext(ctx context.Context) BucketOwnershipControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnershipControlsPtrOutput)
}

// Specifies the container element for Object Ownership rules.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControlsOutput struct{ *pulumi.OutputState }

func (BucketOwnershipControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnershipControls)(nil)).Elem()
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsOutput() BucketOwnershipControlsOutput {
	return o
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsOutputWithContext(ctx context.Context) BucketOwnershipControlsOutput {
	return o
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsPtrOutput() BucketOwnershipControlsPtrOutput {
	return o.ToBucketOwnershipControlsPtrOutputWithContext(context.Background())
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsPtrOutputWithContext(ctx context.Context) BucketOwnershipControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketOwnershipControls) *BucketOwnershipControls {
		return &v
	}).(BucketOwnershipControlsPtrOutput)
}

// Specifies the container element for Object Ownership rules.
func (o BucketOwnershipControlsOutput) Rules() BucketOwnershipControlsRuleArrayOutput {
	return o.ApplyT(func(v BucketOwnershipControls) []BucketOwnershipControlsRule { return v.Rules }).(BucketOwnershipControlsRuleArrayOutput)
}

type BucketOwnershipControlsPtrOutput struct{ *pulumi.OutputState }

func (BucketOwnershipControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwnershipControls)(nil)).Elem()
}

func (o BucketOwnershipControlsPtrOutput) ToBucketOwnershipControlsPtrOutput() BucketOwnershipControlsPtrOutput {
	return o
}

func (o BucketOwnershipControlsPtrOutput) ToBucketOwnershipControlsPtrOutputWithContext(ctx context.Context) BucketOwnershipControlsPtrOutput {
	return o
}

func (o BucketOwnershipControlsPtrOutput) Elem() BucketOwnershipControlsOutput {
	return o.ApplyT(func(v *BucketOwnershipControls) BucketOwnershipControls {
		if v != nil {
			return *v
		}
		var ret BucketOwnershipControls
		return ret
	}).(BucketOwnershipControlsOutput)
}

// Specifies the container element for Object Ownership rules.
func (o BucketOwnershipControlsPtrOutput) Rules() BucketOwnershipControlsRuleArrayOutput {
	return o.ApplyT(func(v *BucketOwnershipControls) []BucketOwnershipControlsRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(BucketOwnershipControlsRuleArrayOutput)
}

// Specifies an Object Ownership rule.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControlsRule struct {
	// Specifies an object ownership rule.
	ObjectOwnership *BucketOwnershipControlsRuleObjectOwnership `pulumi:"objectOwnership"`
}

// BucketOwnershipControlsRuleInput is an input type that accepts BucketOwnershipControlsRuleArgs and BucketOwnershipControlsRuleOutput values.
// You can construct a concrete instance of `BucketOwnershipControlsRuleInput` via:
//
//	BucketOwnershipControlsRuleArgs{...}
type BucketOwnershipControlsRuleInput interface {
	pulumi.Input

	ToBucketOwnershipControlsRuleOutput() BucketOwnershipControlsRuleOutput
	ToBucketOwnershipControlsRuleOutputWithContext(context.Context) BucketOwnershipControlsRuleOutput
}

// Specifies an Object Ownership rule.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControlsRuleArgs struct {
	// Specifies an object ownership rule.
	ObjectOwnership BucketOwnershipControlsRuleObjectOwnershipPtrInput `pulumi:"objectOwnership"`
}

func (BucketOwnershipControlsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnershipControlsRule)(nil)).Elem()
}

func (i BucketOwnershipControlsRuleArgs) ToBucketOwnershipControlsRuleOutput() BucketOwnershipControlsRuleOutput {
	return i.ToBucketOwnershipControlsRuleOutputWithContext(context.Background())
}

func (i BucketOwnershipControlsRuleArgs) ToBucketOwnershipControlsRuleOutputWithContext(ctx context.Context) BucketOwnershipControlsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnershipControlsRuleOutput)
}

// BucketOwnershipControlsRuleArrayInput is an input type that accepts BucketOwnershipControlsRuleArray and BucketOwnershipControlsRuleArrayOutput values.
// You can construct a concrete instance of `BucketOwnershipControlsRuleArrayInput` via:
//
//	BucketOwnershipControlsRuleArray{ BucketOwnershipControlsRuleArgs{...} }
type BucketOwnershipControlsRuleArrayInput interface {
	pulumi.Input

	ToBucketOwnershipControlsRuleArrayOutput() BucketOwnershipControlsRuleArrayOutput
	ToBucketOwnershipControlsRuleArrayOutputWithContext(context.Context) BucketOwnershipControlsRuleArrayOutput
}

type BucketOwnershipControlsRuleArray []BucketOwnershipControlsRuleInput

func (BucketOwnershipControlsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketOwnershipControlsRule)(nil)).Elem()
}

func (i BucketOwnershipControlsRuleArray) ToBucketOwnershipControlsRuleArrayOutput() BucketOwnershipControlsRuleArrayOutput {
	return i.ToBucketOwnershipControlsRuleArrayOutputWithContext(context.Background())
}

func (i BucketOwnershipControlsRuleArray) ToBucketOwnershipControlsRuleArrayOutputWithContext(ctx context.Context) BucketOwnershipControlsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnershipControlsRuleArrayOutput)
}

// Specifies an Object Ownership rule.
//
//	S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
type BucketOwnershipControlsRuleOutput struct{ *pulumi.OutputState }

func (BucketOwnershipControlsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnershipControlsRule)(nil)).Elem()
}

func (o BucketOwnershipControlsRuleOutput) ToBucketOwnershipControlsRuleOutput() BucketOwnershipControlsRuleOutput {
	return o
}

func (o BucketOwnershipControlsRuleOutput) ToBucketOwnershipControlsRuleOutputWithContext(ctx context.Context) BucketOwnershipControlsRuleOutput {
	return o
}

// Specifies an object ownership rule.
func (o BucketOwnershipControlsRuleOutput) ObjectOwnership() BucketOwnershipControlsRuleObjectOwnershipPtrOutput {
	return o.ApplyT(func(v BucketOwnershipControlsRule) *BucketOwnershipControlsRuleObjectOwnership {
		return v.ObjectOwnership
	}).(BucketOwnershipControlsRuleObjectOwnershipPtrOutput)
}

type BucketOwnershipControlsRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketOwnershipControlsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketOwnershipControlsRule)(nil)).Elem()
}

func (o BucketOwnershipControlsRuleArrayOutput) ToBucketOwnershipControlsRuleArrayOutput() BucketOwnershipControlsRuleArrayOutput {
	return o
}

func (o BucketOwnershipControlsRuleArrayOutput) ToBucketOwnershipControlsRuleArrayOutputWithContext(ctx context.Context) BucketOwnershipControlsRuleArrayOutput {
	return o
}

func (o BucketOwnershipControlsRuleArrayOutput) Index(i pulumi.IntInput) BucketOwnershipControlsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketOwnershipControlsRule {
		return vs[0].([]BucketOwnershipControlsRule)[vs[1].(int)]
	}).(BucketOwnershipControlsRuleOutput)
}

// The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see [The Meaning of "Public"](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status) in the *Amazon S3 User Guide*.
type BucketPublicAccessBlockConfiguration struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes the following behavior:
	//   +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.
	//   +  PUT Object calls fail if the request includes a public ACL.
	//   +  PUT Bucket calls fail if the request includes a public ACL.
	//
	//  Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls *bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to ``TRUE`` causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
	//  Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy *bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
	//  Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls *bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to ``TRUE`` restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy.
	//  Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

// BucketPublicAccessBlockConfigurationInput is an input type that accepts BucketPublicAccessBlockConfigurationArgs and BucketPublicAccessBlockConfigurationOutput values.
// You can construct a concrete instance of `BucketPublicAccessBlockConfigurationInput` via:
//
//	BucketPublicAccessBlockConfigurationArgs{...}
type BucketPublicAccessBlockConfigurationInput interface {
	pulumi.Input

	ToBucketPublicAccessBlockConfigurationOutput() BucketPublicAccessBlockConfigurationOutput
	ToBucketPublicAccessBlockConfigurationOutputWithContext(context.Context) BucketPublicAccessBlockConfigurationOutput
}

// The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see [The Meaning of "Public"](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status) in the *Amazon S3 User Guide*.
type BucketPublicAccessBlockConfigurationArgs struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes the following behavior:
	//   +  PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.
	//   +  PUT Object calls fail if the request includes a public ACL.
	//   +  PUT Bucket calls fail if the request includes a public ACL.
	//
	//  Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls pulumi.BoolPtrInput `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to ``TRUE`` causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
	//  Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy pulumi.BoolPtrInput `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to ``TRUE`` causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
	//  Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls pulumi.BoolPtrInput `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to ``TRUE`` restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy.
	//  Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets pulumi.BoolPtrInput `pulumi:"restrictPublicBuckets"`
}

func (BucketPublicAccessBlockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i BucketPublicAccessBlockConfigurationArgs) ToBucketPublicAccessBlockConfigurationOutput() BucketPublicAccessBlockConfigurationOutput {
	return i.ToBucketPublicAccessBlockConfigurationOutputWithContext(context.Background())
}

func (i BucketPublicAccessBlockConfigurationArgs) ToBucketPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketPublicAccessBlockConfigurationOutput)
}

func (i BucketPublicAccessBlockConfigurationArgs) ToBucketPublicAccessBlockConfigurationPtrOutput() BucketPublicAccessBlockConfigurationPtrOutput {
	return i.ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketPublicAccessBlockConfigurationArgs) ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketPublicAccessBlockConfigurationOutput).ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(ctx)
}

// BucketPublicAccessBlockConfigurationPtrInput is an input type that accepts BucketPublicAccessBlockConfigurationArgs, BucketPublicAccessBlockConfigurationPtr and BucketPublicAccessBlockConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketPublicAccessBlockConfigurationPtrInput` via:
//
//	        BucketPublicAccessBlockConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketPublicAccessBlockConfigurationPtrInput interface {
	pulumi.Input

	ToBucketPublicAccessBlockConfigurationPtrOutput() BucketPublicAccessBlockConfigurationPtrOutput
	ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(context.Context) BucketPublicAccessBlockConfigurationPtrOutput
}

type bucketPublicAccessBlockConfigurationPtrType BucketPublicAccessBlockConfigurationArgs

func BucketPublicAccessBlockConfigurationPtr(v *BucketPublicAccessBlockConfigurationArgs) BucketPublicAccessBlockConfigurationPtrInput {
	return (*bucketPublicAccessBlockConfigurationPtrType)(v)
}

func (*bucketPublicAccessBlockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i *bucketPublicAccessBlockConfigurationPtrType) ToBucketPublicAccessBlockConfigurationPtrOutput() BucketPublicAccessBlockConfigurationPtrOutput {
	return i.ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketPublicAccessBlockConfigurationPtrType) ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketPublicAccessBlockConfigurationPtrOutput)
}

// The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see [The Meaning of "Public"](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status) in the *Amazon S3 User Guide*.
type BucketPublicAccessBlockConfigurationOutput struct{ *pulumi.OutputState }

func (BucketPublicAccessBlockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o BucketPublicAccessBlockConfigurationOutput) ToBucketPublicAccessBlockConfigurationOutput() BucketPublicAccessBlockConfigurationOutput {
	return o
}

func (o BucketPublicAccessBlockConfigurationOutput) ToBucketPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationOutput {
	return o
}

func (o BucketPublicAccessBlockConfigurationOutput) ToBucketPublicAccessBlockConfigurationPtrOutput() BucketPublicAccessBlockConfigurationPtrOutput {
	return o.ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketPublicAccessBlockConfigurationOutput) ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketPublicAccessBlockConfiguration) *BucketPublicAccessBlockConfiguration {
		return &v
	}).(BucketPublicAccessBlockConfigurationPtrOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:
//
//   - PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.
//
//   - PUT Object calls fail if the request includes a public ACL.
//
//   - PUT Bucket calls fail if the request includes a public ACL.
//
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o BucketPublicAccessBlockConfigurationOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketPublicAccessBlockConfiguration) *bool { return v.BlockPublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
//
//	Enabling this setting doesn't affect existing bucket policies.
func (o BucketPublicAccessBlockConfigurationOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketPublicAccessBlockConfiguration) *bool { return v.BlockPublicPolicy }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
//
//	Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o BucketPublicAccessBlockConfigurationOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketPublicAccessBlockConfiguration) *bool { return v.IgnorePublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy.
//
//	Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o BucketPublicAccessBlockConfigurationOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketPublicAccessBlockConfiguration) *bool { return v.RestrictPublicBuckets }).(pulumi.BoolPtrOutput)
}

type BucketPublicAccessBlockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketPublicAccessBlockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o BucketPublicAccessBlockConfigurationPtrOutput) ToBucketPublicAccessBlockConfigurationPtrOutput() BucketPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o BucketPublicAccessBlockConfigurationPtrOutput) ToBucketPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) BucketPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o BucketPublicAccessBlockConfigurationPtrOutput) Elem() BucketPublicAccessBlockConfigurationOutput {
	return o.ApplyT(func(v *BucketPublicAccessBlockConfiguration) BucketPublicAccessBlockConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketPublicAccessBlockConfiguration
		return ret
	}).(BucketPublicAccessBlockConfigurationOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to “TRUE“ causes the following behavior:
//
//   - PUT Bucket ACL and PUT Object ACL calls fail if the specified ACL is public.
//
//   - PUT Object calls fail if the request includes a public ACL.
//
//   - PUT Bucket calls fail if the request includes a public ACL.
//
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o BucketPublicAccessBlockConfigurationPtrOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to “TRUE“ causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
//
//	Enabling this setting doesn't affect existing bucket policies.
func (o BucketPublicAccessBlockConfigurationPtrOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicPolicy
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to “TRUE“ causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
//
//	Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o BucketPublicAccessBlockConfigurationPtrOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to “TRUE“ restricts access to this bucket to only AWS-service principals and authorized users within this account if the bucket has a public policy.
//
//	Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o BucketPublicAccessBlockConfigurationPtrOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictPublicBuckets
	}).(pulumi.BoolPtrOutput)
}

// Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
type BucketQueueConfiguration struct {
	// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event string `pulumi:"event"`
	// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter *BucketNotificationFilter `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
	Queue string `pulumi:"queue"`
}

// BucketQueueConfigurationInput is an input type that accepts BucketQueueConfigurationArgs and BucketQueueConfigurationOutput values.
// You can construct a concrete instance of `BucketQueueConfigurationInput` via:
//
//	BucketQueueConfigurationArgs{...}
type BucketQueueConfigurationInput interface {
	pulumi.Input

	ToBucketQueueConfigurationOutput() BucketQueueConfigurationOutput
	ToBucketQueueConfigurationOutputWithContext(context.Context) BucketQueueConfigurationOutput
}

// Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
type BucketQueueConfigurationArgs struct {
	// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event pulumi.StringInput `pulumi:"event"`
	// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
	Filter BucketNotificationFilterPtrInput `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
	Queue pulumi.StringInput `pulumi:"queue"`
}

func (BucketQueueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketQueueConfiguration)(nil)).Elem()
}

func (i BucketQueueConfigurationArgs) ToBucketQueueConfigurationOutput() BucketQueueConfigurationOutput {
	return i.ToBucketQueueConfigurationOutputWithContext(context.Background())
}

func (i BucketQueueConfigurationArgs) ToBucketQueueConfigurationOutputWithContext(ctx context.Context) BucketQueueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketQueueConfigurationOutput)
}

// BucketQueueConfigurationArrayInput is an input type that accepts BucketQueueConfigurationArray and BucketQueueConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketQueueConfigurationArrayInput` via:
//
//	BucketQueueConfigurationArray{ BucketQueueConfigurationArgs{...} }
type BucketQueueConfigurationArrayInput interface {
	pulumi.Input

	ToBucketQueueConfigurationArrayOutput() BucketQueueConfigurationArrayOutput
	ToBucketQueueConfigurationArrayOutputWithContext(context.Context) BucketQueueConfigurationArrayOutput
}

type BucketQueueConfigurationArray []BucketQueueConfigurationInput

func (BucketQueueConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketQueueConfiguration)(nil)).Elem()
}

func (i BucketQueueConfigurationArray) ToBucketQueueConfigurationArrayOutput() BucketQueueConfigurationArrayOutput {
	return i.ToBucketQueueConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketQueueConfigurationArray) ToBucketQueueConfigurationArrayOutputWithContext(ctx context.Context) BucketQueueConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketQueueConfigurationArrayOutput)
}

// Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
type BucketQueueConfigurationOutput struct{ *pulumi.OutputState }

func (BucketQueueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketQueueConfiguration)(nil)).Elem()
}

func (o BucketQueueConfigurationOutput) ToBucketQueueConfigurationOutput() BucketQueueConfigurationOutput {
	return o
}

func (o BucketQueueConfigurationOutput) ToBucketQueueConfigurationOutputWithContext(ctx context.Context) BucketQueueConfigurationOutput {
	return o
}

// The Amazon S3 bucket event about which you want to publish messages to Amazon SQS. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o BucketQueueConfigurationOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v BucketQueueConfiguration) string { return v.Event }).(pulumi.StringOutput)
}

// The filtering rules that determine which objects trigger notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket. For more information, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/user-guide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
func (o BucketQueueConfigurationOutput) Filter() BucketNotificationFilterPtrOutput {
	return o.ApplyT(func(v BucketQueueConfiguration) *BucketNotificationFilter { return v.Filter }).(BucketNotificationFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. FIFO queues are not allowed when enabling an SQS queue as the event notification destination.
func (o BucketQueueConfigurationOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v BucketQueueConfiguration) string { return v.Queue }).(pulumi.StringOutput)
}

type BucketQueueConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketQueueConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketQueueConfiguration)(nil)).Elem()
}

func (o BucketQueueConfigurationArrayOutput) ToBucketQueueConfigurationArrayOutput() BucketQueueConfigurationArrayOutput {
	return o
}

func (o BucketQueueConfigurationArrayOutput) ToBucketQueueConfigurationArrayOutputWithContext(ctx context.Context) BucketQueueConfigurationArrayOutput {
	return o
}

func (o BucketQueueConfigurationArrayOutput) Index(i pulumi.IntInput) BucketQueueConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketQueueConfiguration {
		return vs[0].([]BucketQueueConfiguration)[vs[1].(int)]
	}).(BucketQueueConfigurationOutput)
}

// Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
type BucketRedirectAllRequestsTo struct {
	// Name of the host where requests are redirected.
	HostName string `pulumi:"hostName"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *BucketRedirectAllRequestsToProtocol `pulumi:"protocol"`
}

// BucketRedirectAllRequestsToInput is an input type that accepts BucketRedirectAllRequestsToArgs and BucketRedirectAllRequestsToOutput values.
// You can construct a concrete instance of `BucketRedirectAllRequestsToInput` via:
//
//	BucketRedirectAllRequestsToArgs{...}
type BucketRedirectAllRequestsToInput interface {
	pulumi.Input

	ToBucketRedirectAllRequestsToOutput() BucketRedirectAllRequestsToOutput
	ToBucketRedirectAllRequestsToOutputWithContext(context.Context) BucketRedirectAllRequestsToOutput
}

// Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
type BucketRedirectAllRequestsToArgs struct {
	// Name of the host where requests are redirected.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol BucketRedirectAllRequestsToProtocolPtrInput `pulumi:"protocol"`
}

func (BucketRedirectAllRequestsToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRedirectAllRequestsTo)(nil)).Elem()
}

func (i BucketRedirectAllRequestsToArgs) ToBucketRedirectAllRequestsToOutput() BucketRedirectAllRequestsToOutput {
	return i.ToBucketRedirectAllRequestsToOutputWithContext(context.Background())
}

func (i BucketRedirectAllRequestsToArgs) ToBucketRedirectAllRequestsToOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRedirectAllRequestsToOutput)
}

func (i BucketRedirectAllRequestsToArgs) ToBucketRedirectAllRequestsToPtrOutput() BucketRedirectAllRequestsToPtrOutput {
	return i.ToBucketRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (i BucketRedirectAllRequestsToArgs) ToBucketRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRedirectAllRequestsToOutput).ToBucketRedirectAllRequestsToPtrOutputWithContext(ctx)
}

// BucketRedirectAllRequestsToPtrInput is an input type that accepts BucketRedirectAllRequestsToArgs, BucketRedirectAllRequestsToPtr and BucketRedirectAllRequestsToPtrOutput values.
// You can construct a concrete instance of `BucketRedirectAllRequestsToPtrInput` via:
//
//	        BucketRedirectAllRequestsToArgs{...}
//
//	or:
//
//	        nil
type BucketRedirectAllRequestsToPtrInput interface {
	pulumi.Input

	ToBucketRedirectAllRequestsToPtrOutput() BucketRedirectAllRequestsToPtrOutput
	ToBucketRedirectAllRequestsToPtrOutputWithContext(context.Context) BucketRedirectAllRequestsToPtrOutput
}

type bucketRedirectAllRequestsToPtrType BucketRedirectAllRequestsToArgs

func BucketRedirectAllRequestsToPtr(v *BucketRedirectAllRequestsToArgs) BucketRedirectAllRequestsToPtrInput {
	return (*bucketRedirectAllRequestsToPtrType)(v)
}

func (*bucketRedirectAllRequestsToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRedirectAllRequestsTo)(nil)).Elem()
}

func (i *bucketRedirectAllRequestsToPtrType) ToBucketRedirectAllRequestsToPtrOutput() BucketRedirectAllRequestsToPtrOutput {
	return i.ToBucketRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (i *bucketRedirectAllRequestsToPtrType) ToBucketRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRedirectAllRequestsToPtrOutput)
}

// Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
type BucketRedirectAllRequestsToOutput struct{ *pulumi.OutputState }

func (BucketRedirectAllRequestsToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRedirectAllRequestsTo)(nil)).Elem()
}

func (o BucketRedirectAllRequestsToOutput) ToBucketRedirectAllRequestsToOutput() BucketRedirectAllRequestsToOutput {
	return o
}

func (o BucketRedirectAllRequestsToOutput) ToBucketRedirectAllRequestsToOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToOutput {
	return o
}

func (o BucketRedirectAllRequestsToOutput) ToBucketRedirectAllRequestsToPtrOutput() BucketRedirectAllRequestsToPtrOutput {
	return o.ToBucketRedirectAllRequestsToPtrOutputWithContext(context.Background())
}

func (o BucketRedirectAllRequestsToOutput) ToBucketRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketRedirectAllRequestsTo) *BucketRedirectAllRequestsTo {
		return &v
	}).(BucketRedirectAllRequestsToPtrOutput)
}

// Name of the host where requests are redirected.
func (o BucketRedirectAllRequestsToOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketRedirectAllRequestsTo) string { return v.HostName }).(pulumi.StringOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketRedirectAllRequestsToOutput) Protocol() BucketRedirectAllRequestsToProtocolPtrOutput {
	return o.ApplyT(func(v BucketRedirectAllRequestsTo) *BucketRedirectAllRequestsToProtocol { return v.Protocol }).(BucketRedirectAllRequestsToProtocolPtrOutput)
}

type BucketRedirectAllRequestsToPtrOutput struct{ *pulumi.OutputState }

func (BucketRedirectAllRequestsToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRedirectAllRequestsTo)(nil)).Elem()
}

func (o BucketRedirectAllRequestsToPtrOutput) ToBucketRedirectAllRequestsToPtrOutput() BucketRedirectAllRequestsToPtrOutput {
	return o
}

func (o BucketRedirectAllRequestsToPtrOutput) ToBucketRedirectAllRequestsToPtrOutputWithContext(ctx context.Context) BucketRedirectAllRequestsToPtrOutput {
	return o
}

func (o BucketRedirectAllRequestsToPtrOutput) Elem() BucketRedirectAllRequestsToOutput {
	return o.ApplyT(func(v *BucketRedirectAllRequestsTo) BucketRedirectAllRequestsTo {
		if v != nil {
			return *v
		}
		var ret BucketRedirectAllRequestsTo
		return ret
	}).(BucketRedirectAllRequestsToOutput)
}

// Name of the host where requests are redirected.
func (o BucketRedirectAllRequestsToPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRedirectAllRequestsTo) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketRedirectAllRequestsToPtrOutput) Protocol() BucketRedirectAllRequestsToProtocolPtrOutput {
	return o.ApplyT(func(v *BucketRedirectAllRequestsTo) *BucketRedirectAllRequestsToProtocol {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(BucketRedirectAllRequestsToProtocolPtrOutput)
}

// Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
type BucketRedirectRule struct {
	// The host name to use in the redirect request.
	HostName *string `pulumi:"hostName"`
	// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
	HttpRedirectCode *string `pulumi:"httpRedirectCode"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol *BucketRedirectRuleProtocol `pulumi:"protocol"`
	// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyPrefixWith *string `pulumi:"replaceKeyPrefixWith"`
	// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyWith *string `pulumi:"replaceKeyWith"`
}

// BucketRedirectRuleInput is an input type that accepts BucketRedirectRuleArgs and BucketRedirectRuleOutput values.
// You can construct a concrete instance of `BucketRedirectRuleInput` via:
//
//	BucketRedirectRuleArgs{...}
type BucketRedirectRuleInput interface {
	pulumi.Input

	ToBucketRedirectRuleOutput() BucketRedirectRuleOutput
	ToBucketRedirectRuleOutputWithContext(context.Context) BucketRedirectRuleOutput
}

// Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
type BucketRedirectRuleArgs struct {
	// The host name to use in the redirect request.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
	HttpRedirectCode pulumi.StringPtrInput `pulumi:"httpRedirectCode"`
	// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
	Protocol BucketRedirectRuleProtocolPtrInput `pulumi:"protocol"`
	// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyPrefixWith pulumi.StringPtrInput `pulumi:"replaceKeyPrefixWith"`
	// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	ReplaceKeyWith pulumi.StringPtrInput `pulumi:"replaceKeyWith"`
}

func (BucketRedirectRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRedirectRule)(nil)).Elem()
}

func (i BucketRedirectRuleArgs) ToBucketRedirectRuleOutput() BucketRedirectRuleOutput {
	return i.ToBucketRedirectRuleOutputWithContext(context.Background())
}

func (i BucketRedirectRuleArgs) ToBucketRedirectRuleOutputWithContext(ctx context.Context) BucketRedirectRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRedirectRuleOutput)
}

// Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
type BucketRedirectRuleOutput struct{ *pulumi.OutputState }

func (BucketRedirectRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRedirectRule)(nil)).Elem()
}

func (o BucketRedirectRuleOutput) ToBucketRedirectRuleOutput() BucketRedirectRuleOutput {
	return o
}

func (o BucketRedirectRuleOutput) ToBucketRedirectRuleOutputWithContext(ctx context.Context) BucketRedirectRuleOutput {
	return o
}

// The host name to use in the redirect request.
func (o BucketRedirectRuleOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRedirectRule) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
func (o BucketRedirectRuleOutput) HttpRedirectCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRedirectRule) *string { return v.HttpRedirectCode }).(pulumi.StringPtrOutput)
}

// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketRedirectRuleOutput) Protocol() BucketRedirectRuleProtocolPtrOutput {
	return o.ApplyT(func(v BucketRedirectRule) *BucketRedirectRuleProtocol { return v.Protocol }).(BucketRedirectRuleProtocolPtrOutput)
}

// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix “docs/“ (objects in the “docs/“ folder) to “documents/“, you can set a condition block with “KeyPrefixEquals“ set to “docs/“ and in the Redirect set “ReplaceKeyPrefixWith“ to “/documents“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyWith“ is not provided.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketRedirectRuleOutput) ReplaceKeyPrefixWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRedirectRule) *string { return v.ReplaceKeyPrefixWith }).(pulumi.StringPtrOutput)
}

// The specific object key to use in the redirect request. For example, redirect request to “error.html“. Not required if one of the siblings is present. Can be present only if “ReplaceKeyPrefixWith“ is not provided.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketRedirectRuleOutput) ReplaceKeyWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRedirectRule) *string { return v.ReplaceKeyWith }).(pulumi.StringPtrOutput)
}

// A filter that you can specify for selection for modifications on replicas.
type BucketReplicaModifications struct {
	// Specifies whether Amazon S3 replicates modifications on replicas.
	//  *Allowed values*: ``Enabled`` | ``Disabled``
	Status BucketReplicaModificationsStatus `pulumi:"status"`
}

// BucketReplicaModificationsInput is an input type that accepts BucketReplicaModificationsArgs and BucketReplicaModificationsOutput values.
// You can construct a concrete instance of `BucketReplicaModificationsInput` via:
//
//	BucketReplicaModificationsArgs{...}
type BucketReplicaModificationsInput interface {
	pulumi.Input

	ToBucketReplicaModificationsOutput() BucketReplicaModificationsOutput
	ToBucketReplicaModificationsOutputWithContext(context.Context) BucketReplicaModificationsOutput
}

// A filter that you can specify for selection for modifications on replicas.
type BucketReplicaModificationsArgs struct {
	// Specifies whether Amazon S3 replicates modifications on replicas.
	//  *Allowed values*: ``Enabled`` | ``Disabled``
	Status BucketReplicaModificationsStatusInput `pulumi:"status"`
}

func (BucketReplicaModificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicaModifications)(nil)).Elem()
}

func (i BucketReplicaModificationsArgs) ToBucketReplicaModificationsOutput() BucketReplicaModificationsOutput {
	return i.ToBucketReplicaModificationsOutputWithContext(context.Background())
}

func (i BucketReplicaModificationsArgs) ToBucketReplicaModificationsOutputWithContext(ctx context.Context) BucketReplicaModificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicaModificationsOutput)
}

func (i BucketReplicaModificationsArgs) ToBucketReplicaModificationsPtrOutput() BucketReplicaModificationsPtrOutput {
	return i.ToBucketReplicaModificationsPtrOutputWithContext(context.Background())
}

func (i BucketReplicaModificationsArgs) ToBucketReplicaModificationsPtrOutputWithContext(ctx context.Context) BucketReplicaModificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicaModificationsOutput).ToBucketReplicaModificationsPtrOutputWithContext(ctx)
}

// BucketReplicaModificationsPtrInput is an input type that accepts BucketReplicaModificationsArgs, BucketReplicaModificationsPtr and BucketReplicaModificationsPtrOutput values.
// You can construct a concrete instance of `BucketReplicaModificationsPtrInput` via:
//
//	        BucketReplicaModificationsArgs{...}
//
//	or:
//
//	        nil
type BucketReplicaModificationsPtrInput interface {
	pulumi.Input

	ToBucketReplicaModificationsPtrOutput() BucketReplicaModificationsPtrOutput
	ToBucketReplicaModificationsPtrOutputWithContext(context.Context) BucketReplicaModificationsPtrOutput
}

type bucketReplicaModificationsPtrType BucketReplicaModificationsArgs

func BucketReplicaModificationsPtr(v *BucketReplicaModificationsArgs) BucketReplicaModificationsPtrInput {
	return (*bucketReplicaModificationsPtrType)(v)
}

func (*bucketReplicaModificationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicaModifications)(nil)).Elem()
}

func (i *bucketReplicaModificationsPtrType) ToBucketReplicaModificationsPtrOutput() BucketReplicaModificationsPtrOutput {
	return i.ToBucketReplicaModificationsPtrOutputWithContext(context.Background())
}

func (i *bucketReplicaModificationsPtrType) ToBucketReplicaModificationsPtrOutputWithContext(ctx context.Context) BucketReplicaModificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicaModificationsPtrOutput)
}

// A filter that you can specify for selection for modifications on replicas.
type BucketReplicaModificationsOutput struct{ *pulumi.OutputState }

func (BucketReplicaModificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicaModifications)(nil)).Elem()
}

func (o BucketReplicaModificationsOutput) ToBucketReplicaModificationsOutput() BucketReplicaModificationsOutput {
	return o
}

func (o BucketReplicaModificationsOutput) ToBucketReplicaModificationsOutputWithContext(ctx context.Context) BucketReplicaModificationsOutput {
	return o
}

func (o BucketReplicaModificationsOutput) ToBucketReplicaModificationsPtrOutput() BucketReplicaModificationsPtrOutput {
	return o.ToBucketReplicaModificationsPtrOutputWithContext(context.Background())
}

func (o BucketReplicaModificationsOutput) ToBucketReplicaModificationsPtrOutputWithContext(ctx context.Context) BucketReplicaModificationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicaModifications) *BucketReplicaModifications {
		return &v
	}).(BucketReplicaModificationsPtrOutput)
}

// Specifies whether Amazon S3 replicates modifications on replicas.
//
//	*Allowed values*: ``Enabled`` | ``Disabled``
func (o BucketReplicaModificationsOutput) Status() BucketReplicaModificationsStatusOutput {
	return o.ApplyT(func(v BucketReplicaModifications) BucketReplicaModificationsStatus { return v.Status }).(BucketReplicaModificationsStatusOutput)
}

type BucketReplicaModificationsPtrOutput struct{ *pulumi.OutputState }

func (BucketReplicaModificationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicaModifications)(nil)).Elem()
}

func (o BucketReplicaModificationsPtrOutput) ToBucketReplicaModificationsPtrOutput() BucketReplicaModificationsPtrOutput {
	return o
}

func (o BucketReplicaModificationsPtrOutput) ToBucketReplicaModificationsPtrOutputWithContext(ctx context.Context) BucketReplicaModificationsPtrOutput {
	return o
}

func (o BucketReplicaModificationsPtrOutput) Elem() BucketReplicaModificationsOutput {
	return o.ApplyT(func(v *BucketReplicaModifications) BucketReplicaModifications {
		if v != nil {
			return *v
		}
		var ret BucketReplicaModifications
		return ret
	}).(BucketReplicaModificationsOutput)
}

// Specifies whether Amazon S3 replicates modifications on replicas.
//
//	*Allowed values*: ``Enabled`` | ``Disabled``
func (o BucketReplicaModificationsPtrOutput) Status() BucketReplicaModificationsStatusPtrOutput {
	return o.ApplyT(func(v *BucketReplicaModifications) *BucketReplicaModificationsStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(BucketReplicaModificationsStatusPtrOutput)
}

// A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB. The latest version of the replication configuration XML is V2. For more information about XML V2 replication configurations, see [Replication configuration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-add-config.html) in the *Amazon S3 User Guide*.
type BucketReplicationConfiguration struct {
	// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
	Role string `pulumi:"role"`
	// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
	Rules []BucketReplicationRule `pulumi:"rules"`
}

// BucketReplicationConfigurationInput is an input type that accepts BucketReplicationConfigurationArgs and BucketReplicationConfigurationOutput values.
// You can construct a concrete instance of `BucketReplicationConfigurationInput` via:
//
//	BucketReplicationConfigurationArgs{...}
type BucketReplicationConfigurationInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput
	ToBucketReplicationConfigurationOutputWithContext(context.Context) BucketReplicationConfigurationOutput
}

// A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB. The latest version of the replication configuration XML is V2. For more information about XML V2 replication configurations, see [Replication configuration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-add-config.html) in the *Amazon S3 User Guide*.
type BucketReplicationConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
	Role pulumi.StringInput `pulumi:"role"`
	// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
	Rules BucketReplicationRuleArrayInput `pulumi:"rules"`
}

func (BucketReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfiguration)(nil)).Elem()
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput {
	return i.ToBucketReplicationConfigurationOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationOutputWithContext(ctx context.Context) BucketReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationOutput)
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return i.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationOutput).ToBucketReplicationConfigurationPtrOutputWithContext(ctx)
}

// BucketReplicationConfigurationPtrInput is an input type that accepts BucketReplicationConfigurationArgs, BucketReplicationConfigurationPtr and BucketReplicationConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketReplicationConfigurationPtrInput` via:
//
//	        BucketReplicationConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput
	ToBucketReplicationConfigurationPtrOutputWithContext(context.Context) BucketReplicationConfigurationPtrOutput
}

type bucketReplicationConfigurationPtrType BucketReplicationConfigurationArgs

func BucketReplicationConfigurationPtr(v *BucketReplicationConfigurationArgs) BucketReplicationConfigurationPtrInput {
	return (*bucketReplicationConfigurationPtrType)(v)
}

func (*bucketReplicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfiguration)(nil)).Elem()
}

func (i *bucketReplicationConfigurationPtrType) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return i.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationPtrType) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationPtrOutput)
}

// A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB. The latest version of the replication configuration XML is V2. For more information about XML V2 replication configurations, see [Replication configuration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-add-config.html) in the *Amazon S3 User Guide*.
type BucketReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfiguration)(nil)).Elem()
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput {
	return o
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationOutputWithContext(ctx context.Context) BucketReplicationConfigurationOutput {
	return o
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return o.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationConfiguration) *BucketReplicationConfiguration {
		return &v
	}).(BucketReplicationConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o BucketReplicationConfigurationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BucketReplicationConfiguration) string { return v.Role }).(pulumi.StringOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o BucketReplicationConfigurationOutput) Rules() BucketReplicationRuleArrayOutput {
	return o.ApplyT(func(v BucketReplicationConfiguration) []BucketReplicationRule { return v.Rules }).(BucketReplicationRuleArrayOutput)
}

type BucketReplicationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfiguration)(nil)).Elem()
}

func (o BucketReplicationConfigurationPtrOutput) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationPtrOutput) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationPtrOutput) Elem() BucketReplicationConfigurationOutput {
	return o.ApplyT(func(v *BucketReplicationConfiguration) BucketReplicationConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketReplicationConfiguration
		return ret
	}).(BucketReplicationConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the IAMlong (IAM) role that Amazon S3 assumes when replicating objects. For more information, see [How to Set Up Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the *Amazon S3 User Guide*.
func (o BucketReplicationConfigurationPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketReplicationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules.
func (o BucketReplicationConfigurationPtrOutput) Rules() BucketReplicationRuleArrayOutput {
	return o.ApplyT(func(v *BucketReplicationConfiguration) []BucketReplicationRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(BucketReplicationRuleArrayOutput)
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
type BucketReplicationDestination struct {
	// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
	AccessControlTranslation *BucketAccessControlTranslation `pulumi:"accessControlTranslation"`
	// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*.
	//  If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
	Account *string `pulumi:"account"`
	// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
	Bucket string `pulumi:"bucket"`
	// Specifies encryption-related information.
	EncryptionConfiguration *BucketEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A container specifying replication metrics-related settings enabling replication metrics and events.
	Metrics *BucketMetrics `pulumi:"metrics"`
	// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
	ReplicationTime *BucketReplicationTime `pulumi:"replicationTime"`
	// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.
	//  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
	StorageClass *BucketReplicationDestinationStorageClass `pulumi:"storageClass"`
}

// BucketReplicationDestinationInput is an input type that accepts BucketReplicationDestinationArgs and BucketReplicationDestinationOutput values.
// You can construct a concrete instance of `BucketReplicationDestinationInput` via:
//
//	BucketReplicationDestinationArgs{...}
type BucketReplicationDestinationInput interface {
	pulumi.Input

	ToBucketReplicationDestinationOutput() BucketReplicationDestinationOutput
	ToBucketReplicationDestinationOutputWithContext(context.Context) BucketReplicationDestinationOutput
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
type BucketReplicationDestinationArgs struct {
	// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
	AccessControlTranslation BucketAccessControlTranslationPtrInput `pulumi:"accessControlTranslation"`
	// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the ``AccessControlTranslation`` property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*.
	//  If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies encryption-related information.
	EncryptionConfiguration BucketEncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// A container specifying replication metrics-related settings enabling replication metrics and events.
	Metrics BucketMetricsPtrInput `pulumi:"metrics"`
	// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
	ReplicationTime BucketReplicationTimePtrInput `pulumi:"replicationTime"`
	// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.
	//  For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
	StorageClass BucketReplicationDestinationStorageClassPtrInput `pulumi:"storageClass"`
}

func (BucketReplicationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationDestination)(nil)).Elem()
}

func (i BucketReplicationDestinationArgs) ToBucketReplicationDestinationOutput() BucketReplicationDestinationOutput {
	return i.ToBucketReplicationDestinationOutputWithContext(context.Background())
}

func (i BucketReplicationDestinationArgs) ToBucketReplicationDestinationOutputWithContext(ctx context.Context) BucketReplicationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationDestinationOutput)
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
type BucketReplicationDestinationOutput struct{ *pulumi.OutputState }

func (BucketReplicationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationDestination)(nil)).Elem()
}

func (o BucketReplicationDestinationOutput) ToBucketReplicationDestinationOutput() BucketReplicationDestinationOutput {
	return o
}

func (o BucketReplicationDestinationOutput) ToBucketReplicationDestinationOutputWithContext(ctx context.Context) BucketReplicationDestinationOutput {
	return o
}

// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
func (o BucketReplicationDestinationOutput) AccessControlTranslation() BucketAccessControlTranslationPtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *BucketAccessControlTranslation {
		return v.AccessControlTranslation
	}).(BucketAccessControlTranslationPtrOutput)
}

// Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS-account that owns the destination bucket by specifying the “AccessControlTranslation“ property, this is the account ID of the destination bucket owner. For more information, see [Cross-Region Replication Additional Configuration: Change Replica Owner](https://docs.aws.amazon.com/AmazonS3/latest/dev/crr-change-owner.html) in the *Amazon S3 User Guide*.
//
//	If you specify the ``AccessControlTranslation`` property, the ``Account`` property is required.
func (o BucketReplicationDestinationOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
func (o BucketReplicationDestinationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketReplicationDestination) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies encryption-related information.
func (o BucketReplicationDestinationOutput) EncryptionConfiguration() BucketEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *BucketEncryptionConfiguration { return v.EncryptionConfiguration }).(BucketEncryptionConfigurationPtrOutput)
}

// A container specifying replication metrics-related settings enabling replication metrics and events.
func (o BucketReplicationDestinationOutput) Metrics() BucketMetricsPtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *BucketMetrics { return v.Metrics }).(BucketMetricsPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
func (o BucketReplicationDestinationOutput) ReplicationTime() BucketReplicationTimePtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *BucketReplicationTime { return v.ReplicationTime }).(BucketReplicationTimePtrOutput)
}

// The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica.
//
//	For valid values, see the ``StorageClass`` element of the [PUT Bucket replication](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the *Amazon S3 API Reference*.
func (o BucketReplicationDestinationOutput) StorageClass() BucketReplicationDestinationStorageClassPtrOutput {
	return o.ApplyT(func(v BucketReplicationDestination) *BucketReplicationDestinationStorageClass { return v.StorageClass }).(BucketReplicationDestinationStorageClassPtrOutput)
}

// Specifies which Amazon S3 objects to replicate and where to store the replicas.
type BucketReplicationRule struct {
	// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
	//  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
	//   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
	DeleteMarkerReplication *BucketDeleteMarkerReplication `pulumi:"deleteMarkerReplication"`
	// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
	Destination BucketReplicationDestination `pulumi:"destination"`
	// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.
	//   V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.
	Filter *BucketReplicationRuleFilter `pulumi:"filter"`
	// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as "ID".
	Id *string `pulumi:"id"`
	// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.
	//  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
	Priority *int `pulumi:"priority"`
	// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
	SourceSelectionCriteria *BucketSourceSelectionCriteria `pulumi:"sourceSelectionCriteria"`
	// Specifies whether the rule is enabled.
	Status BucketReplicationRuleStatus `pulumi:"status"`
}

// BucketReplicationRuleInput is an input type that accepts BucketReplicationRuleArgs and BucketReplicationRuleOutput values.
// You can construct a concrete instance of `BucketReplicationRuleInput` via:
//
//	BucketReplicationRuleArgs{...}
type BucketReplicationRuleInput interface {
	pulumi.Input

	ToBucketReplicationRuleOutput() BucketReplicationRuleOutput
	ToBucketReplicationRuleOutputWithContext(context.Context) BucketReplicationRuleOutput
}

// Specifies which Amazon S3 objects to replicate and where to store the replicas.
type BucketReplicationRuleArgs struct {
	// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
	//  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
	//   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
	DeleteMarkerReplication BucketDeleteMarkerReplicationPtrInput `pulumi:"deleteMarkerReplication"`
	// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
	Destination BucketReplicationDestinationInput `pulumi:"destination"`
	// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.
	//   V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.
	Filter BucketReplicationRuleFilterPtrInput `pulumi:"filter"`
	// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as "ID".
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.
	//  For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
	SourceSelectionCriteria BucketSourceSelectionCriteriaPtrInput `pulumi:"sourceSelectionCriteria"`
	// Specifies whether the rule is enabled.
	Status BucketReplicationRuleStatusInput `pulumi:"status"`
}

func (BucketReplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRule)(nil)).Elem()
}

func (i BucketReplicationRuleArgs) ToBucketReplicationRuleOutput() BucketReplicationRuleOutput {
	return i.ToBucketReplicationRuleOutputWithContext(context.Background())
}

func (i BucketReplicationRuleArgs) ToBucketReplicationRuleOutputWithContext(ctx context.Context) BucketReplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleOutput)
}

// BucketReplicationRuleArrayInput is an input type that accepts BucketReplicationRuleArray and BucketReplicationRuleArrayOutput values.
// You can construct a concrete instance of `BucketReplicationRuleArrayInput` via:
//
//	BucketReplicationRuleArray{ BucketReplicationRuleArgs{...} }
type BucketReplicationRuleArrayInput interface {
	pulumi.Input

	ToBucketReplicationRuleArrayOutput() BucketReplicationRuleArrayOutput
	ToBucketReplicationRuleArrayOutputWithContext(context.Context) BucketReplicationRuleArrayOutput
}

type BucketReplicationRuleArray []BucketReplicationRuleInput

func (BucketReplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationRule)(nil)).Elem()
}

func (i BucketReplicationRuleArray) ToBucketReplicationRuleArrayOutput() BucketReplicationRuleArrayOutput {
	return i.ToBucketReplicationRuleArrayOutputWithContext(context.Background())
}

func (i BucketReplicationRuleArray) ToBucketReplicationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleArrayOutput)
}

// Specifies which Amazon S3 objects to replicate and where to store the replicas.
type BucketReplicationRuleOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRule)(nil)).Elem()
}

func (o BucketReplicationRuleOutput) ToBucketReplicationRuleOutput() BucketReplicationRuleOutput {
	return o
}

func (o BucketReplicationRuleOutput) ToBucketReplicationRuleOutputWithContext(ctx context.Context) BucketReplicationRuleOutput {
	return o
}

// Specifies whether Amazon S3 replicates delete markers. If you specify a “Filter“ in your replication configuration, you must also include a “DeleteMarkerReplication“ element. If your “Filter“ includes a “Tag“ element, the “DeleteMarkerReplication“ “Status“ must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).
//
//	For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).
//	 If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
func (o BucketReplicationRuleOutput) DeleteMarkerReplication() BucketDeleteMarkerReplicationPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *BucketDeleteMarkerReplication { return v.DeleteMarkerReplication }).(BucketDeleteMarkerReplicationPtrOutput)
}

// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
func (o BucketReplicationRuleOutput) Destination() BucketReplicationDestinationOutput {
	return o.ApplyT(func(v BucketReplicationRule) BucketReplicationDestination { return v.Destination }).(BucketReplicationDestinationOutput)
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element. The use of the filter field indicates that this is a V2 replication configuration. This field isn't supported in a V1 replication configuration.
//
//	V1 replication configuration only supports filtering by key prefix. To filter using a V1 replication configuration, add the ``Prefix`` directly as a child element of the ``Rule`` element.
func (o BucketReplicationRuleOutput) Filter() BucketReplicationRuleFilterPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *BucketReplicationRuleFilter { return v.Filter }).(BucketReplicationRuleFilterPtrOutput)
}

// A unique identifier for the rule. The maximum value is 255 characters. If you don't specify a value, AWS CloudFormation generates a random ID. When using a V2 replication configuration this property is capitalized as "ID".
func (o BucketReplicationRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An object key name prefix that identifies the object or objects to which the rule applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket, specify an empty string. To filter using a V1 replication configuration, add the “Prefix“ directly as a child element of the “Rule“ element.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketReplicationRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The priority indicates which rule has precedence whenever two or more replication rules conflict. Amazon S3 will attempt to replicate objects according to all replication rules. However, if there are two or more rules with the same destination bucket, then objects will be replicated according to the rule with the highest priority. The higher the number, the higher the priority.
//
//	For more information, see [Replication](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the *Amazon S3 User Guide*.
func (o BucketReplicationRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
func (o BucketReplicationRuleOutput) SourceSelectionCriteria() BucketSourceSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v BucketReplicationRule) *BucketSourceSelectionCriteria { return v.SourceSelectionCriteria }).(BucketSourceSelectionCriteriaPtrOutput)
}

// Specifies whether the rule is enabled.
func (o BucketReplicationRuleOutput) Status() BucketReplicationRuleStatusOutput {
	return o.ApplyT(func(v BucketReplicationRule) BucketReplicationRuleStatus { return v.Status }).(BucketReplicationRuleStatusOutput)
}

type BucketReplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationRule)(nil)).Elem()
}

func (o BucketReplicationRuleArrayOutput) ToBucketReplicationRuleArrayOutput() BucketReplicationRuleArrayOutput {
	return o
}

func (o BucketReplicationRuleArrayOutput) ToBucketReplicationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationRuleArrayOutput {
	return o
}

func (o BucketReplicationRuleArrayOutput) Index(i pulumi.IntInput) BucketReplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketReplicationRule {
		return vs[0].([]BucketReplicationRule)[vs[1].(int)]
	}).(BucketReplicationRuleOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.
//
//	For example:
//	 +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.
//	 +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
type BucketReplicationRuleAndOperator struct {
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// An array of tags containing key and value pairs.
	TagFilters []BucketTagFilter `pulumi:"tagFilters"`
}

// BucketReplicationRuleAndOperatorInput is an input type that accepts BucketReplicationRuleAndOperatorArgs and BucketReplicationRuleAndOperatorOutput values.
// You can construct a concrete instance of `BucketReplicationRuleAndOperatorInput` via:
//
//	BucketReplicationRuleAndOperatorArgs{...}
type BucketReplicationRuleAndOperatorInput interface {
	pulumi.Input

	ToBucketReplicationRuleAndOperatorOutput() BucketReplicationRuleAndOperatorOutput
	ToBucketReplicationRuleAndOperatorOutputWithContext(context.Context) BucketReplicationRuleAndOperatorOutput
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.
//
//	For example:
//	 +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.
//	 +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
type BucketReplicationRuleAndOperatorArgs struct {
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// An array of tags containing key and value pairs.
	TagFilters BucketTagFilterArrayInput `pulumi:"tagFilters"`
}

func (BucketReplicationRuleAndOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRuleAndOperator)(nil)).Elem()
}

func (i BucketReplicationRuleAndOperatorArgs) ToBucketReplicationRuleAndOperatorOutput() BucketReplicationRuleAndOperatorOutput {
	return i.ToBucketReplicationRuleAndOperatorOutputWithContext(context.Background())
}

func (i BucketReplicationRuleAndOperatorArgs) ToBucketReplicationRuleAndOperatorOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleAndOperatorOutput)
}

func (i BucketReplicationRuleAndOperatorArgs) ToBucketReplicationRuleAndOperatorPtrOutput() BucketReplicationRuleAndOperatorPtrOutput {
	return i.ToBucketReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (i BucketReplicationRuleAndOperatorArgs) ToBucketReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleAndOperatorOutput).ToBucketReplicationRuleAndOperatorPtrOutputWithContext(ctx)
}

// BucketReplicationRuleAndOperatorPtrInput is an input type that accepts BucketReplicationRuleAndOperatorArgs, BucketReplicationRuleAndOperatorPtr and BucketReplicationRuleAndOperatorPtrOutput values.
// You can construct a concrete instance of `BucketReplicationRuleAndOperatorPtrInput` via:
//
//	        BucketReplicationRuleAndOperatorArgs{...}
//
//	or:
//
//	        nil
type BucketReplicationRuleAndOperatorPtrInput interface {
	pulumi.Input

	ToBucketReplicationRuleAndOperatorPtrOutput() BucketReplicationRuleAndOperatorPtrOutput
	ToBucketReplicationRuleAndOperatorPtrOutputWithContext(context.Context) BucketReplicationRuleAndOperatorPtrOutput
}

type bucketReplicationRuleAndOperatorPtrType BucketReplicationRuleAndOperatorArgs

func BucketReplicationRuleAndOperatorPtr(v *BucketReplicationRuleAndOperatorArgs) BucketReplicationRuleAndOperatorPtrInput {
	return (*bucketReplicationRuleAndOperatorPtrType)(v)
}

func (*bucketReplicationRuleAndOperatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationRuleAndOperator)(nil)).Elem()
}

func (i *bucketReplicationRuleAndOperatorPtrType) ToBucketReplicationRuleAndOperatorPtrOutput() BucketReplicationRuleAndOperatorPtrOutput {
	return i.ToBucketReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationRuleAndOperatorPtrType) ToBucketReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleAndOperatorPtrOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter.
//
//	For example:
//	 +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.
//	 +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
type BucketReplicationRuleAndOperatorOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleAndOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRuleAndOperator)(nil)).Elem()
}

func (o BucketReplicationRuleAndOperatorOutput) ToBucketReplicationRuleAndOperatorOutput() BucketReplicationRuleAndOperatorOutput {
	return o
}

func (o BucketReplicationRuleAndOperatorOutput) ToBucketReplicationRuleAndOperatorOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorOutput {
	return o
}

func (o BucketReplicationRuleAndOperatorOutput) ToBucketReplicationRuleAndOperatorPtrOutput() BucketReplicationRuleAndOperatorPtrOutput {
	return o.ToBucketReplicationRuleAndOperatorPtrOutputWithContext(context.Background())
}

func (o BucketReplicationRuleAndOperatorOutput) ToBucketReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationRuleAndOperator) *BucketReplicationRuleAndOperator {
		return &v
	}).(BucketReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o BucketReplicationRuleAndOperatorOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketReplicationRuleAndOperator) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o BucketReplicationRuleAndOperatorOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v BucketReplicationRuleAndOperator) []BucketTagFilter { return v.TagFilters }).(BucketTagFilterArrayOutput)
}

type BucketReplicationRuleAndOperatorPtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleAndOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationRuleAndOperator)(nil)).Elem()
}

func (o BucketReplicationRuleAndOperatorPtrOutput) ToBucketReplicationRuleAndOperatorPtrOutput() BucketReplicationRuleAndOperatorPtrOutput {
	return o
}

func (o BucketReplicationRuleAndOperatorPtrOutput) ToBucketReplicationRuleAndOperatorPtrOutputWithContext(ctx context.Context) BucketReplicationRuleAndOperatorPtrOutput {
	return o
}

func (o BucketReplicationRuleAndOperatorPtrOutput) Elem() BucketReplicationRuleAndOperatorOutput {
	return o.ApplyT(func(v *BucketReplicationRuleAndOperator) BucketReplicationRuleAndOperator {
		if v != nil {
			return *v
		}
		var ret BucketReplicationRuleAndOperator
		return ret
	}).(BucketReplicationRuleAndOperatorOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
func (o BucketReplicationRuleAndOperatorPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketReplicationRuleAndOperator) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// An array of tags containing key and value pairs.
func (o BucketReplicationRuleAndOperatorPtrOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v *BucketReplicationRuleAndOperator) []BucketTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(BucketTagFilterArrayOutput)
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element.
type BucketReplicationRuleFilter struct {
	// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:
	//   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.
	//   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag.
	And *BucketReplicationRuleAndOperator `pulumi:"and"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// A container for specifying a tag key and value.
	//  The rule applies only to objects that have the tag in their tag set.
	TagFilter *BucketTagFilter `pulumi:"tagFilter"`
}

// BucketReplicationRuleFilterInput is an input type that accepts BucketReplicationRuleFilterArgs and BucketReplicationRuleFilterOutput values.
// You can construct a concrete instance of `BucketReplicationRuleFilterInput` via:
//
//	BucketReplicationRuleFilterArgs{...}
type BucketReplicationRuleFilterInput interface {
	pulumi.Input

	ToBucketReplicationRuleFilterOutput() BucketReplicationRuleFilterOutput
	ToBucketReplicationRuleFilterOutputWithContext(context.Context) BucketReplicationRuleFilterOutput
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element.
type BucketReplicationRuleFilterArgs struct {
	// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:
	//   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag.
	//   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag.
	And BucketReplicationRuleAndOperatorPtrInput `pulumi:"and"`
	// An object key name prefix that identifies the subset of objects to which the rule applies.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// A container for specifying a tag key and value.
	//  The rule applies only to objects that have the tag in their tag set.
	TagFilter BucketTagFilterPtrInput `pulumi:"tagFilter"`
}

func (BucketReplicationRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRuleFilter)(nil)).Elem()
}

func (i BucketReplicationRuleFilterArgs) ToBucketReplicationRuleFilterOutput() BucketReplicationRuleFilterOutput {
	return i.ToBucketReplicationRuleFilterOutputWithContext(context.Background())
}

func (i BucketReplicationRuleFilterArgs) ToBucketReplicationRuleFilterOutputWithContext(ctx context.Context) BucketReplicationRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleFilterOutput)
}

func (i BucketReplicationRuleFilterArgs) ToBucketReplicationRuleFilterPtrOutput() BucketReplicationRuleFilterPtrOutput {
	return i.ToBucketReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (i BucketReplicationRuleFilterArgs) ToBucketReplicationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleFilterOutput).ToBucketReplicationRuleFilterPtrOutputWithContext(ctx)
}

// BucketReplicationRuleFilterPtrInput is an input type that accepts BucketReplicationRuleFilterArgs, BucketReplicationRuleFilterPtr and BucketReplicationRuleFilterPtrOutput values.
// You can construct a concrete instance of `BucketReplicationRuleFilterPtrInput` via:
//
//	        BucketReplicationRuleFilterArgs{...}
//
//	or:
//
//	        nil
type BucketReplicationRuleFilterPtrInput interface {
	pulumi.Input

	ToBucketReplicationRuleFilterPtrOutput() BucketReplicationRuleFilterPtrOutput
	ToBucketReplicationRuleFilterPtrOutputWithContext(context.Context) BucketReplicationRuleFilterPtrOutput
}

type bucketReplicationRuleFilterPtrType BucketReplicationRuleFilterArgs

func BucketReplicationRuleFilterPtr(v *BucketReplicationRuleFilterArgs) BucketReplicationRuleFilterPtrInput {
	return (*bucketReplicationRuleFilterPtrType)(v)
}

func (*bucketReplicationRuleFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationRuleFilter)(nil)).Elem()
}

func (i *bucketReplicationRuleFilterPtrType) ToBucketReplicationRuleFilterPtrOutput() BucketReplicationRuleFilterPtrOutput {
	return i.ToBucketReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationRuleFilterPtrType) ToBucketReplicationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationRuleFilterPtrOutput)
}

// A filter that identifies the subset of objects to which the replication rule applies. A “Filter“ must specify exactly one “Prefix“, “TagFilter“, or an “And“ child element.
type BucketReplicationRuleFilterOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationRuleFilter)(nil)).Elem()
}

func (o BucketReplicationRuleFilterOutput) ToBucketReplicationRuleFilterOutput() BucketReplicationRuleFilterOutput {
	return o
}

func (o BucketReplicationRuleFilterOutput) ToBucketReplicationRuleFilterOutputWithContext(ctx context.Context) BucketReplicationRuleFilterOutput {
	return o
}

func (o BucketReplicationRuleFilterOutput) ToBucketReplicationRuleFilterPtrOutput() BucketReplicationRuleFilterPtrOutput {
	return o.ToBucketReplicationRuleFilterPtrOutputWithContext(context.Background())
}

func (o BucketReplicationRuleFilterOutput) ToBucketReplicationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationRuleFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationRuleFilter) *BucketReplicationRuleFilter {
		return &v
	}).(BucketReplicationRuleFilterPtrOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:
//   - If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.
//   - If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag.
func (o BucketReplicationRuleFilterOutput) And() BucketReplicationRuleAndOperatorPtrOutput {
	return o.ApplyT(func(v BucketReplicationRuleFilter) *BucketReplicationRuleAndOperator { return v.And }).(BucketReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketReplicationRuleFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketReplicationRuleFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.
//
//	The rule applies only to objects that have the tag in their tag set.
func (o BucketReplicationRuleFilterOutput) TagFilter() BucketTagFilterPtrOutput {
	return o.ApplyT(func(v BucketReplicationRuleFilter) *BucketTagFilter { return v.TagFilter }).(BucketTagFilterPtrOutput)
}

type BucketReplicationRuleFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationRuleFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationRuleFilter)(nil)).Elem()
}

func (o BucketReplicationRuleFilterPtrOutput) ToBucketReplicationRuleFilterPtrOutput() BucketReplicationRuleFilterPtrOutput {
	return o
}

func (o BucketReplicationRuleFilterPtrOutput) ToBucketReplicationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationRuleFilterPtrOutput {
	return o
}

func (o BucketReplicationRuleFilterPtrOutput) Elem() BucketReplicationRuleFilterOutput {
	return o.ApplyT(func(v *BucketReplicationRuleFilter) BucketReplicationRuleFilter {
		if v != nil {
			return *v
		}
		var ret BucketReplicationRuleFilter
		return ret
	}).(BucketReplicationRuleFilterOutput)
}

// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example:
//   - If you specify both a “Prefix“ and a “TagFilter“, wrap these filters in an “And“ tag.
//   - If you specify a filter based on multiple tags, wrap the “TagFilter“ elements in an “And“ tag.
func (o BucketReplicationRuleFilterPtrOutput) And() BucketReplicationRuleAndOperatorPtrOutput {
	return o.ApplyT(func(v *BucketReplicationRuleFilter) *BucketReplicationRuleAndOperator {
		if v == nil {
			return nil
		}
		return v.And
	}).(BucketReplicationRuleAndOperatorPtrOutput)
}

// An object key name prefix that identifies the subset of objects to which the rule applies.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketReplicationRuleFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketReplicationRuleFilter) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// A container for specifying a tag key and value.
//
//	The rule applies only to objects that have the tag in their tag set.
func (o BucketReplicationRuleFilterPtrOutput) TagFilter() BucketTagFilterPtrOutput {
	return o.ApplyT(func(v *BucketReplicationRuleFilter) *BucketTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilter
	}).(BucketTagFilterPtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
type BucketReplicationTime struct {
	// Specifies whether the replication time is enabled.
	Status BucketReplicationTimeStatus `pulumi:"status"`
	// A container specifying the time by which replication should be complete for all objects and operations on objects.
	Time BucketReplicationTimeValue `pulumi:"time"`
}

// BucketReplicationTimeInput is an input type that accepts BucketReplicationTimeArgs and BucketReplicationTimeOutput values.
// You can construct a concrete instance of `BucketReplicationTimeInput` via:
//
//	BucketReplicationTimeArgs{...}
type BucketReplicationTimeInput interface {
	pulumi.Input

	ToBucketReplicationTimeOutput() BucketReplicationTimeOutput
	ToBucketReplicationTimeOutputWithContext(context.Context) BucketReplicationTimeOutput
}

// A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
type BucketReplicationTimeArgs struct {
	// Specifies whether the replication time is enabled.
	Status BucketReplicationTimeStatusInput `pulumi:"status"`
	// A container specifying the time by which replication should be complete for all objects and operations on objects.
	Time BucketReplicationTimeValueInput `pulumi:"time"`
}

func (BucketReplicationTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationTime)(nil)).Elem()
}

func (i BucketReplicationTimeArgs) ToBucketReplicationTimeOutput() BucketReplicationTimeOutput {
	return i.ToBucketReplicationTimeOutputWithContext(context.Background())
}

func (i BucketReplicationTimeArgs) ToBucketReplicationTimeOutputWithContext(ctx context.Context) BucketReplicationTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimeOutput)
}

func (i BucketReplicationTimeArgs) ToBucketReplicationTimePtrOutput() BucketReplicationTimePtrOutput {
	return i.ToBucketReplicationTimePtrOutputWithContext(context.Background())
}

func (i BucketReplicationTimeArgs) ToBucketReplicationTimePtrOutputWithContext(ctx context.Context) BucketReplicationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimeOutput).ToBucketReplicationTimePtrOutputWithContext(ctx)
}

// BucketReplicationTimePtrInput is an input type that accepts BucketReplicationTimeArgs, BucketReplicationTimePtr and BucketReplicationTimePtrOutput values.
// You can construct a concrete instance of `BucketReplicationTimePtrInput` via:
//
//	        BucketReplicationTimeArgs{...}
//
//	or:
//
//	        nil
type BucketReplicationTimePtrInput interface {
	pulumi.Input

	ToBucketReplicationTimePtrOutput() BucketReplicationTimePtrOutput
	ToBucketReplicationTimePtrOutputWithContext(context.Context) BucketReplicationTimePtrOutput
}

type bucketReplicationTimePtrType BucketReplicationTimeArgs

func BucketReplicationTimePtr(v *BucketReplicationTimeArgs) BucketReplicationTimePtrInput {
	return (*bucketReplicationTimePtrType)(v)
}

func (*bucketReplicationTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationTime)(nil)).Elem()
}

func (i *bucketReplicationTimePtrType) ToBucketReplicationTimePtrOutput() BucketReplicationTimePtrOutput {
	return i.ToBucketReplicationTimePtrOutputWithContext(context.Background())
}

func (i *bucketReplicationTimePtrType) ToBucketReplicationTimePtrOutputWithContext(ctx context.Context) BucketReplicationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimePtrOutput)
}

// A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a “Metrics“ block.
type BucketReplicationTimeOutput struct{ *pulumi.OutputState }

func (BucketReplicationTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationTime)(nil)).Elem()
}

func (o BucketReplicationTimeOutput) ToBucketReplicationTimeOutput() BucketReplicationTimeOutput {
	return o
}

func (o BucketReplicationTimeOutput) ToBucketReplicationTimeOutputWithContext(ctx context.Context) BucketReplicationTimeOutput {
	return o
}

func (o BucketReplicationTimeOutput) ToBucketReplicationTimePtrOutput() BucketReplicationTimePtrOutput {
	return o.ToBucketReplicationTimePtrOutputWithContext(context.Background())
}

func (o BucketReplicationTimeOutput) ToBucketReplicationTimePtrOutputWithContext(ctx context.Context) BucketReplicationTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationTime) *BucketReplicationTime {
		return &v
	}).(BucketReplicationTimePtrOutput)
}

// Specifies whether the replication time is enabled.
func (o BucketReplicationTimeOutput) Status() BucketReplicationTimeStatusOutput {
	return o.ApplyT(func(v BucketReplicationTime) BucketReplicationTimeStatus { return v.Status }).(BucketReplicationTimeStatusOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects.
func (o BucketReplicationTimeOutput) Time() BucketReplicationTimeValueOutput {
	return o.ApplyT(func(v BucketReplicationTime) BucketReplicationTimeValue { return v.Time }).(BucketReplicationTimeValueOutput)
}

type BucketReplicationTimePtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationTime)(nil)).Elem()
}

func (o BucketReplicationTimePtrOutput) ToBucketReplicationTimePtrOutput() BucketReplicationTimePtrOutput {
	return o
}

func (o BucketReplicationTimePtrOutput) ToBucketReplicationTimePtrOutputWithContext(ctx context.Context) BucketReplicationTimePtrOutput {
	return o
}

func (o BucketReplicationTimePtrOutput) Elem() BucketReplicationTimeOutput {
	return o.ApplyT(func(v *BucketReplicationTime) BucketReplicationTime {
		if v != nil {
			return *v
		}
		var ret BucketReplicationTime
		return ret
	}).(BucketReplicationTimeOutput)
}

// Specifies whether the replication time is enabled.
func (o BucketReplicationTimePtrOutput) Status() BucketReplicationTimeStatusPtrOutput {
	return o.ApplyT(func(v *BucketReplicationTime) *BucketReplicationTimeStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(BucketReplicationTimeStatusPtrOutput)
}

// A container specifying the time by which replication should be complete for all objects and operations on objects.
func (o BucketReplicationTimePtrOutput) Time() BucketReplicationTimeValuePtrOutput {
	return o.ApplyT(func(v *BucketReplicationTime) *BucketReplicationTimeValue {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(BucketReplicationTimeValuePtrOutput)
}

// A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
type BucketReplicationTimeValue struct {
	// Contains an integer specifying time in minutes.
	//   Valid value: 15
	Minutes int `pulumi:"minutes"`
}

// BucketReplicationTimeValueInput is an input type that accepts BucketReplicationTimeValueArgs and BucketReplicationTimeValueOutput values.
// You can construct a concrete instance of `BucketReplicationTimeValueInput` via:
//
//	BucketReplicationTimeValueArgs{...}
type BucketReplicationTimeValueInput interface {
	pulumi.Input

	ToBucketReplicationTimeValueOutput() BucketReplicationTimeValueOutput
	ToBucketReplicationTimeValueOutputWithContext(context.Context) BucketReplicationTimeValueOutput
}

// A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
type BucketReplicationTimeValueArgs struct {
	// Contains an integer specifying time in minutes.
	//   Valid value: 15
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (BucketReplicationTimeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationTimeValue)(nil)).Elem()
}

func (i BucketReplicationTimeValueArgs) ToBucketReplicationTimeValueOutput() BucketReplicationTimeValueOutput {
	return i.ToBucketReplicationTimeValueOutputWithContext(context.Background())
}

func (i BucketReplicationTimeValueArgs) ToBucketReplicationTimeValueOutputWithContext(ctx context.Context) BucketReplicationTimeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimeValueOutput)
}

func (i BucketReplicationTimeValueArgs) ToBucketReplicationTimeValuePtrOutput() BucketReplicationTimeValuePtrOutput {
	return i.ToBucketReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (i BucketReplicationTimeValueArgs) ToBucketReplicationTimeValuePtrOutputWithContext(ctx context.Context) BucketReplicationTimeValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimeValueOutput).ToBucketReplicationTimeValuePtrOutputWithContext(ctx)
}

// BucketReplicationTimeValuePtrInput is an input type that accepts BucketReplicationTimeValueArgs, BucketReplicationTimeValuePtr and BucketReplicationTimeValuePtrOutput values.
// You can construct a concrete instance of `BucketReplicationTimeValuePtrInput` via:
//
//	        BucketReplicationTimeValueArgs{...}
//
//	or:
//
//	        nil
type BucketReplicationTimeValuePtrInput interface {
	pulumi.Input

	ToBucketReplicationTimeValuePtrOutput() BucketReplicationTimeValuePtrOutput
	ToBucketReplicationTimeValuePtrOutputWithContext(context.Context) BucketReplicationTimeValuePtrOutput
}

type bucketReplicationTimeValuePtrType BucketReplicationTimeValueArgs

func BucketReplicationTimeValuePtr(v *BucketReplicationTimeValueArgs) BucketReplicationTimeValuePtrInput {
	return (*bucketReplicationTimeValuePtrType)(v)
}

func (*bucketReplicationTimeValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationTimeValue)(nil)).Elem()
}

func (i *bucketReplicationTimeValuePtrType) ToBucketReplicationTimeValuePtrOutput() BucketReplicationTimeValuePtrOutput {
	return i.ToBucketReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (i *bucketReplicationTimeValuePtrType) ToBucketReplicationTimeValuePtrOutputWithContext(ctx context.Context) BucketReplicationTimeValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationTimeValuePtrOutput)
}

// A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics “EventThreshold“.
type BucketReplicationTimeValueOutput struct{ *pulumi.OutputState }

func (BucketReplicationTimeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationTimeValue)(nil)).Elem()
}

func (o BucketReplicationTimeValueOutput) ToBucketReplicationTimeValueOutput() BucketReplicationTimeValueOutput {
	return o
}

func (o BucketReplicationTimeValueOutput) ToBucketReplicationTimeValueOutputWithContext(ctx context.Context) BucketReplicationTimeValueOutput {
	return o
}

func (o BucketReplicationTimeValueOutput) ToBucketReplicationTimeValuePtrOutput() BucketReplicationTimeValuePtrOutput {
	return o.ToBucketReplicationTimeValuePtrOutputWithContext(context.Background())
}

func (o BucketReplicationTimeValueOutput) ToBucketReplicationTimeValuePtrOutputWithContext(ctx context.Context) BucketReplicationTimeValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationTimeValue) *BucketReplicationTimeValue {
		return &v
	}).(BucketReplicationTimeValuePtrOutput)
}

// Contains an integer specifying time in minutes.
//
//	Valid value: 15
func (o BucketReplicationTimeValueOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v BucketReplicationTimeValue) int { return v.Minutes }).(pulumi.IntOutput)
}

type BucketReplicationTimeValuePtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationTimeValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationTimeValue)(nil)).Elem()
}

func (o BucketReplicationTimeValuePtrOutput) ToBucketReplicationTimeValuePtrOutput() BucketReplicationTimeValuePtrOutput {
	return o
}

func (o BucketReplicationTimeValuePtrOutput) ToBucketReplicationTimeValuePtrOutputWithContext(ctx context.Context) BucketReplicationTimeValuePtrOutput {
	return o
}

func (o BucketReplicationTimeValuePtrOutput) Elem() BucketReplicationTimeValueOutput {
	return o.ApplyT(func(v *BucketReplicationTimeValue) BucketReplicationTimeValue {
		if v != nil {
			return *v
		}
		var ret BucketReplicationTimeValue
		return ret
	}).(BucketReplicationTimeValueOutput)
}

// Contains an integer specifying time in minutes.
//
//	Valid value: 15
func (o BucketReplicationTimeValuePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketReplicationTimeValue) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see [Configuring advanced conditional redirects](https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the *Amazon S3 User Guide*.
type BucketRoutingRule struct {
	// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
	RedirectRule BucketRedirectRule `pulumi:"redirectRule"`
	// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
	RoutingRuleCondition *BucketRoutingRuleCondition `pulumi:"routingRuleCondition"`
}

// BucketRoutingRuleInput is an input type that accepts BucketRoutingRuleArgs and BucketRoutingRuleOutput values.
// You can construct a concrete instance of `BucketRoutingRuleInput` via:
//
//	BucketRoutingRuleArgs{...}
type BucketRoutingRuleInput interface {
	pulumi.Input

	ToBucketRoutingRuleOutput() BucketRoutingRuleOutput
	ToBucketRoutingRuleOutputWithContext(context.Context) BucketRoutingRuleOutput
}

// Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see [Configuring advanced conditional redirects](https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the *Amazon S3 User Guide*.
type BucketRoutingRuleArgs struct {
	// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
	RedirectRule BucketRedirectRuleInput `pulumi:"redirectRule"`
	// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
	RoutingRuleCondition BucketRoutingRuleConditionPtrInput `pulumi:"routingRuleCondition"`
}

func (BucketRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRoutingRule)(nil)).Elem()
}

func (i BucketRoutingRuleArgs) ToBucketRoutingRuleOutput() BucketRoutingRuleOutput {
	return i.ToBucketRoutingRuleOutputWithContext(context.Background())
}

func (i BucketRoutingRuleArgs) ToBucketRoutingRuleOutputWithContext(ctx context.Context) BucketRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRoutingRuleOutput)
}

// BucketRoutingRuleArrayInput is an input type that accepts BucketRoutingRuleArray and BucketRoutingRuleArrayOutput values.
// You can construct a concrete instance of `BucketRoutingRuleArrayInput` via:
//
//	BucketRoutingRuleArray{ BucketRoutingRuleArgs{...} }
type BucketRoutingRuleArrayInput interface {
	pulumi.Input

	ToBucketRoutingRuleArrayOutput() BucketRoutingRuleArrayOutput
	ToBucketRoutingRuleArrayOutputWithContext(context.Context) BucketRoutingRuleArrayOutput
}

type BucketRoutingRuleArray []BucketRoutingRuleInput

func (BucketRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRoutingRule)(nil)).Elem()
}

func (i BucketRoutingRuleArray) ToBucketRoutingRuleArrayOutput() BucketRoutingRuleArrayOutput {
	return i.ToBucketRoutingRuleArrayOutputWithContext(context.Background())
}

func (i BucketRoutingRuleArray) ToBucketRoutingRuleArrayOutputWithContext(ctx context.Context) BucketRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRoutingRuleArrayOutput)
}

// Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see [Configuring advanced conditional redirects](https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the *Amazon S3 User Guide*.
type BucketRoutingRuleOutput struct{ *pulumi.OutputState }

func (BucketRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRoutingRule)(nil)).Elem()
}

func (o BucketRoutingRuleOutput) ToBucketRoutingRuleOutput() BucketRoutingRuleOutput {
	return o
}

func (o BucketRoutingRuleOutput) ToBucketRoutingRuleOutputWithContext(ctx context.Context) BucketRoutingRuleOutput {
	return o
}

// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
func (o BucketRoutingRuleOutput) RedirectRule() BucketRedirectRuleOutput {
	return o.ApplyT(func(v BucketRoutingRule) BucketRedirectRule { return v.RedirectRule }).(BucketRedirectRuleOutput)
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
func (o BucketRoutingRuleOutput) RoutingRuleCondition() BucketRoutingRuleConditionPtrOutput {
	return o.ApplyT(func(v BucketRoutingRule) *BucketRoutingRuleCondition { return v.RoutingRuleCondition }).(BucketRoutingRuleConditionPtrOutput)
}

type BucketRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRoutingRule)(nil)).Elem()
}

func (o BucketRoutingRuleArrayOutput) ToBucketRoutingRuleArrayOutput() BucketRoutingRuleArrayOutput {
	return o
}

func (o BucketRoutingRuleArrayOutput) ToBucketRoutingRuleArrayOutputWithContext(ctx context.Context) BucketRoutingRuleArrayOutput {
	return o
}

func (o BucketRoutingRuleArrayOutput) Index(i pulumi.IntInput) BucketRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketRoutingRule {
		return vs[0].([]BucketRoutingRule)[vs[1].(int)]
	}).(BucketRoutingRuleOutput)
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
type BucketRoutingRuleCondition struct {
	// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.
	//  Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
	HttpErrorCodeReturnedEquals *string `pulumi:"httpErrorCodeReturnedEquals"`
	// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder.
	//  Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
	KeyPrefixEquals *string `pulumi:"keyPrefixEquals"`
}

// BucketRoutingRuleConditionInput is an input type that accepts BucketRoutingRuleConditionArgs and BucketRoutingRuleConditionOutput values.
// You can construct a concrete instance of `BucketRoutingRuleConditionInput` via:
//
//	BucketRoutingRuleConditionArgs{...}
type BucketRoutingRuleConditionInput interface {
	pulumi.Input

	ToBucketRoutingRuleConditionOutput() BucketRoutingRuleConditionOutput
	ToBucketRoutingRuleConditionOutputWithContext(context.Context) BucketRoutingRuleConditionOutput
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
type BucketRoutingRuleConditionArgs struct {
	// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.
	//  Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
	HttpErrorCodeReturnedEquals pulumi.StringPtrInput `pulumi:"httpErrorCodeReturnedEquals"`
	// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder.
	//  Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
	KeyPrefixEquals pulumi.StringPtrInput `pulumi:"keyPrefixEquals"`
}

func (BucketRoutingRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRoutingRuleCondition)(nil)).Elem()
}

func (i BucketRoutingRuleConditionArgs) ToBucketRoutingRuleConditionOutput() BucketRoutingRuleConditionOutput {
	return i.ToBucketRoutingRuleConditionOutputWithContext(context.Background())
}

func (i BucketRoutingRuleConditionArgs) ToBucketRoutingRuleConditionOutputWithContext(ctx context.Context) BucketRoutingRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRoutingRuleConditionOutput)
}

func (i BucketRoutingRuleConditionArgs) ToBucketRoutingRuleConditionPtrOutput() BucketRoutingRuleConditionPtrOutput {
	return i.ToBucketRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i BucketRoutingRuleConditionArgs) ToBucketRoutingRuleConditionPtrOutputWithContext(ctx context.Context) BucketRoutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRoutingRuleConditionOutput).ToBucketRoutingRuleConditionPtrOutputWithContext(ctx)
}

// BucketRoutingRuleConditionPtrInput is an input type that accepts BucketRoutingRuleConditionArgs, BucketRoutingRuleConditionPtr and BucketRoutingRuleConditionPtrOutput values.
// You can construct a concrete instance of `BucketRoutingRuleConditionPtrInput` via:
//
//	        BucketRoutingRuleConditionArgs{...}
//
//	or:
//
//	        nil
type BucketRoutingRuleConditionPtrInput interface {
	pulumi.Input

	ToBucketRoutingRuleConditionPtrOutput() BucketRoutingRuleConditionPtrOutput
	ToBucketRoutingRuleConditionPtrOutputWithContext(context.Context) BucketRoutingRuleConditionPtrOutput
}

type bucketRoutingRuleConditionPtrType BucketRoutingRuleConditionArgs

func BucketRoutingRuleConditionPtr(v *BucketRoutingRuleConditionArgs) BucketRoutingRuleConditionPtrInput {
	return (*bucketRoutingRuleConditionPtrType)(v)
}

func (*bucketRoutingRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRoutingRuleCondition)(nil)).Elem()
}

func (i *bucketRoutingRuleConditionPtrType) ToBucketRoutingRuleConditionPtrOutput() BucketRoutingRuleConditionPtrOutput {
	return i.ToBucketRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i *bucketRoutingRuleConditionPtrType) ToBucketRoutingRuleConditionPtrOutputWithContext(ctx context.Context) BucketRoutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRoutingRuleConditionPtrOutput)
}

// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the “/docs“ folder, redirect to the “/documents“ folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
type BucketRoutingRuleConditionOutput struct{ *pulumi.OutputState }

func (BucketRoutingRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRoutingRuleCondition)(nil)).Elem()
}

func (o BucketRoutingRuleConditionOutput) ToBucketRoutingRuleConditionOutput() BucketRoutingRuleConditionOutput {
	return o
}

func (o BucketRoutingRuleConditionOutput) ToBucketRoutingRuleConditionOutputWithContext(ctx context.Context) BucketRoutingRuleConditionOutput {
	return o
}

func (o BucketRoutingRuleConditionOutput) ToBucketRoutingRuleConditionPtrOutput() BucketRoutingRuleConditionPtrOutput {
	return o.ToBucketRoutingRuleConditionPtrOutputWithContext(context.Background())
}

func (o BucketRoutingRuleConditionOutput) ToBucketRoutingRuleConditionPtrOutputWithContext(ctx context.Context) BucketRoutingRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketRoutingRuleCondition) *BucketRoutingRuleCondition {
		return &v
	}).(BucketRoutingRuleConditionPtrOutput)
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.
//
//	Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o BucketRoutingRuleConditionOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRoutingRuleCondition) *string { return v.HttpErrorCodeReturnedEquals }).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder.
//
//	Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o BucketRoutingRuleConditionOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRoutingRuleCondition) *string { return v.KeyPrefixEquals }).(pulumi.StringPtrOutput)
}

type BucketRoutingRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketRoutingRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRoutingRuleCondition)(nil)).Elem()
}

func (o BucketRoutingRuleConditionPtrOutput) ToBucketRoutingRuleConditionPtrOutput() BucketRoutingRuleConditionPtrOutput {
	return o
}

func (o BucketRoutingRuleConditionPtrOutput) ToBucketRoutingRuleConditionPtrOutputWithContext(ctx context.Context) BucketRoutingRuleConditionPtrOutput {
	return o
}

func (o BucketRoutingRuleConditionPtrOutput) Elem() BucketRoutingRuleConditionOutput {
	return o.ApplyT(func(v *BucketRoutingRuleCondition) BucketRoutingRuleCondition {
		if v != nil {
			return *v
		}
		var ret BucketRoutingRuleCondition
		return ret
	}).(BucketRoutingRuleConditionOutput)
}

// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.
//
//	Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.
func (o BucketRoutingRuleConditionPtrOutput) HttpErrorCodeReturnedEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRoutingRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.HttpErrorCodeReturnedEquals
	}).(pulumi.StringPtrOutput)
}

// The object key name prefix when the redirect is applied. For example, to redirect requests for “ExamplePage.html“, the key prefix will be “ExamplePage.html“. To redirect request for all pages with the prefix “docs/“, the key prefix will be “/docs“, which identifies all objects in the docs/ folder.
//
//	Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.
func (o BucketRoutingRuleConditionPtrOutput) KeyPrefixEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRoutingRuleCondition) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixEquals
	}).(pulumi.StringPtrOutput)
}

// Specifies lifecycle rules for an Amazon S3 bucket. For more information, see [Put Bucket Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html) in the *Amazon S3 API Reference*.
//
//	You must specify at least one of the following properties: ``AbortIncompleteMultipartUpload``, ``ExpirationDate``, ``ExpirationInDays``, ``NoncurrentVersionExpirationInDays``, ``NoncurrentVersionTransition``, ``NoncurrentVersionTransitions``, ``Transition``, or ``Transitions``.
type BucketRule struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket.
	AbortIncompleteMultipartUpload *BucketAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays *int `pulumi:"expirationInDays"`
	// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id *string `pulumi:"id"`
	// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime.
	NoncurrentVersionExpiration *BucketNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
	NoncurrentVersionExpirationInDays *int `pulumi:"noncurrentVersionExpirationInDays"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
	NoncurrentVersionTransition *BucketNoncurrentVersionTransition `pulumi:"noncurrentVersionTransition"`
	// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
	NoncurrentVersionTransitions []BucketNoncurrentVersionTransition `pulumi:"noncurrentVersionTransitions"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeGreaterThan *string `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeLessThan *string `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix *string `pulumi:"prefix"`
	// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
	Status BucketRuleStatus `pulumi:"status"`
	// Tags to use to identify a subset of objects to which the lifecycle rule applies.
	TagFilters []BucketTagFilter `pulumi:"tagFilters"`
	// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property.
	Transition *BucketTransition `pulumi:"transition"`
	// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
	Transitions []BucketTransition `pulumi:"transitions"`
}

// BucketRuleInput is an input type that accepts BucketRuleArgs and BucketRuleOutput values.
// You can construct a concrete instance of `BucketRuleInput` via:
//
//	BucketRuleArgs{...}
type BucketRuleInput interface {
	pulumi.Input

	ToBucketRuleOutput() BucketRuleOutput
	ToBucketRuleOutputWithContext(context.Context) BucketRuleOutput
}

// Specifies lifecycle rules for an Amazon S3 bucket. For more information, see [Put Bucket Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html) in the *Amazon S3 API Reference*.
//
//	You must specify at least one of the following properties: ``AbortIncompleteMultipartUpload``, ``ExpirationDate``, ``ExpirationInDays``, ``NoncurrentVersionExpirationInDays``, ``NoncurrentVersionTransition``, ``NoncurrentVersionTransitions``, ``Transition``, or ``Transitions``.
type BucketRuleArgs struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket.
	AbortIncompleteMultipartUpload BucketAbortIncompleteMultipartUploadPtrInput `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays pulumi.IntPtrInput `pulumi:"expirationInDays"`
	// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with ``ExpirationInDays``, ``ExpirationDate``, or ``TagFilters``.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime.
	NoncurrentVersionExpiration BucketNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
	NoncurrentVersionExpirationInDays pulumi.IntPtrInput `pulumi:"noncurrentVersionExpirationInDays"`
	// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
	NoncurrentVersionTransition BucketNoncurrentVersionTransitionPtrInput `pulumi:"noncurrentVersionTransition"`
	// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the ``NoncurrentVersionTransition`` property.
	NoncurrentVersionTransitions BucketNoncurrentVersionTransitionArrayInput `pulumi:"noncurrentVersionTransitions"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeGreaterThan pulumi.StringPtrInput `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
	ObjectSizeLessThan pulumi.StringPtrInput `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	//   Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// If ``Enabled``, the rule is currently being applied. If ``Disabled``, the rule is not currently being applied.
	Status BucketRuleStatusInput `pulumi:"status"`
	// Tags to use to identify a subset of objects to which the lifecycle rule applies.
	TagFilters BucketTagFilterArrayInput `pulumi:"tagFilters"`
	// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transitions`` property.
	Transition BucketTransitionPtrInput `pulumi:"transition"`
	// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the ``Transition`` property.
	Transitions BucketTransitionArrayInput `pulumi:"transitions"`
}

func (BucketRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRule)(nil)).Elem()
}

func (i BucketRuleArgs) ToBucketRuleOutput() BucketRuleOutput {
	return i.ToBucketRuleOutputWithContext(context.Background())
}

func (i BucketRuleArgs) ToBucketRuleOutputWithContext(ctx context.Context) BucketRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleOutput)
}

// BucketRuleArrayInput is an input type that accepts BucketRuleArray and BucketRuleArrayOutput values.
// You can construct a concrete instance of `BucketRuleArrayInput` via:
//
//	BucketRuleArray{ BucketRuleArgs{...} }
type BucketRuleArrayInput interface {
	pulumi.Input

	ToBucketRuleArrayOutput() BucketRuleArrayOutput
	ToBucketRuleArrayOutputWithContext(context.Context) BucketRuleArrayOutput
}

type BucketRuleArray []BucketRuleInput

func (BucketRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRule)(nil)).Elem()
}

func (i BucketRuleArray) ToBucketRuleArrayOutput() BucketRuleArrayOutput {
	return i.ToBucketRuleArrayOutputWithContext(context.Background())
}

func (i BucketRuleArray) ToBucketRuleArrayOutputWithContext(ctx context.Context) BucketRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleArrayOutput)
}

// Specifies lifecycle rules for an Amazon S3 bucket. For more information, see [Put Bucket Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html) in the *Amazon S3 API Reference*.
//
//	You must specify at least one of the following properties: ``AbortIncompleteMultipartUpload``, ``ExpirationDate``, ``ExpirationInDays``, ``NoncurrentVersionExpirationInDays``, ``NoncurrentVersionTransition``, ``NoncurrentVersionTransitions``, ``Transition``, or ``Transitions``.
type BucketRuleOutput struct{ *pulumi.OutputState }

func (BucketRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRule)(nil)).Elem()
}

func (o BucketRuleOutput) ToBucketRuleOutput() BucketRuleOutput {
	return o
}

func (o BucketRuleOutput) ToBucketRuleOutputWithContext(ctx context.Context) BucketRuleOutput {
	return o
}

// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3 bucket.
func (o BucketRuleOutput) AbortIncompleteMultipartUpload() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketAbortIncompleteMultipartUpload { return v.AbortIncompleteMultipartUpload }).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Indicates when objects are deleted from Amazon S3 and Amazon S3 Glacier. The date value must be in ISO 8601 format. The time is always midnight UTC. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
func (o BucketRuleOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
func (o BucketRuleOutput) ExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketRule) *int { return v.ExpirationInDays }).(pulumi.IntPtrOutput)
}

// Indicates whether Amazon S3 will remove a delete marker without any noncurrent versions. If set to true, the delete marker will be removed if there are no noncurrent versions. This cannot be specified with “ExpirationInDays“, “ExpirationDate“, or “TagFilters“.
func (o BucketRuleOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRule) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

// Unique identifier for the rule. The value can't be longer than 255 characters.
func (o BucketRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime.
func (o BucketRuleOutput) NoncurrentVersionExpiration() BucketNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketNoncurrentVersionExpiration { return v.NoncurrentVersionExpiration }).(BucketNoncurrentVersionExpirationPtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies the time, in days, between when a new version of the object is uploaded to the bucket and when old versions of the object expire. When object versions expire, Amazon S3 permanently deletes them. If you specify a transition and expiration time, the expiration time must be later than the transition time.
func (o BucketRuleOutput) NoncurrentVersionExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketRule) *int { return v.NoncurrentVersionExpirationInDays }).(pulumi.IntPtrOutput)
}

// (Deprecated.) For buckets with versioning enabled (or suspended), specifies when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransitions“ property.
func (o BucketRuleOutput) NoncurrentVersionTransition() BucketNoncurrentVersionTransitionPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketNoncurrentVersionTransition { return v.NoncurrentVersionTransition }).(BucketNoncurrentVersionTransitionPtrOutput)
}

// For buckets with versioning enabled (or suspended), one or more transition rules that specify when non-current objects transition to a specified storage class. If you specify a transition and expiration time, the expiration time must be later than the transition time. If you specify this property, don't specify the “NoncurrentVersionTransition“ property.
func (o BucketRuleOutput) NoncurrentVersionTransitions() BucketNoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v BucketRule) []BucketNoncurrentVersionTransition { return v.NoncurrentVersionTransitions }).(BucketNoncurrentVersionTransitionArrayOutput)
}

// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o BucketRuleOutput) ObjectSizeGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.ObjectSizeGreaterThan }).(pulumi.StringPtrOutput)
}

// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide*.
func (o BucketRuleOutput) ObjectSizeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.ObjectSizeLessThan }).(pulumi.StringPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.
//
//	Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
func (o BucketRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// If “Enabled“, the rule is currently being applied. If “Disabled“, the rule is not currently being applied.
func (o BucketRuleOutput) Status() BucketRuleStatusOutput {
	return o.ApplyT(func(v BucketRule) BucketRuleStatus { return v.Status }).(BucketRuleStatusOutput)
}

// Tags to use to identify a subset of objects to which the lifecycle rule applies.
func (o BucketRuleOutput) TagFilters() BucketTagFilterArrayOutput {
	return o.ApplyT(func(v BucketRule) []BucketTagFilter { return v.TagFilters }).(BucketTagFilterArrayOutput)
}

// (Deprecated.) Specifies when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transitions“ property.
func (o BucketRuleOutput) Transition() BucketTransitionPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketTransition { return v.Transition }).(BucketTransitionPtrOutput)
}

// One or more transition rules that specify when an object transitions to a specified storage class. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time. If you specify this property, don't specify the “Transition“ property.
func (o BucketRuleOutput) Transitions() BucketTransitionArrayOutput {
	return o.ApplyT(func(v BucketRule) []BucketTransition { return v.Transitions }).(BucketTransitionArrayOutput)
}

type BucketRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRule)(nil)).Elem()
}

func (o BucketRuleArrayOutput) ToBucketRuleArrayOutput() BucketRuleArrayOutput {
	return o
}

func (o BucketRuleArrayOutput) ToBucketRuleArrayOutputWithContext(ctx context.Context) BucketRuleArrayOutput {
	return o
}

func (o BucketRuleArrayOutput) Index(i pulumi.IntInput) BucketRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketRule {
		return vs[0].([]BucketRule)[vs[1].(int)]
	}).(BucketRuleOutput)
}

// A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
//
//	The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
type BucketS3KeyFilter struct {
	// A list of containers for the key-value pair that defines the criteria for the filter rule.
	Rules []BucketFilterRule `pulumi:"rules"`
}

// BucketS3KeyFilterInput is an input type that accepts BucketS3KeyFilterArgs and BucketS3KeyFilterOutput values.
// You can construct a concrete instance of `BucketS3KeyFilterInput` via:
//
//	BucketS3KeyFilterArgs{...}
type BucketS3KeyFilterInput interface {
	pulumi.Input

	ToBucketS3KeyFilterOutput() BucketS3KeyFilterOutput
	ToBucketS3KeyFilterOutputWithContext(context.Context) BucketS3KeyFilterOutput
}

// A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
//
//	The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
type BucketS3KeyFilterArgs struct {
	// A list of containers for the key-value pair that defines the criteria for the filter rule.
	Rules BucketFilterRuleArrayInput `pulumi:"rules"`
}

func (BucketS3KeyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketS3KeyFilter)(nil)).Elem()
}

func (i BucketS3KeyFilterArgs) ToBucketS3KeyFilterOutput() BucketS3KeyFilterOutput {
	return i.ToBucketS3KeyFilterOutputWithContext(context.Background())
}

func (i BucketS3KeyFilterArgs) ToBucketS3KeyFilterOutputWithContext(ctx context.Context) BucketS3KeyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketS3KeyFilterOutput)
}

func (i BucketS3KeyFilterArgs) ToBucketS3KeyFilterPtrOutput() BucketS3KeyFilterPtrOutput {
	return i.ToBucketS3KeyFilterPtrOutputWithContext(context.Background())
}

func (i BucketS3KeyFilterArgs) ToBucketS3KeyFilterPtrOutputWithContext(ctx context.Context) BucketS3KeyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketS3KeyFilterOutput).ToBucketS3KeyFilterPtrOutputWithContext(ctx)
}

// BucketS3KeyFilterPtrInput is an input type that accepts BucketS3KeyFilterArgs, BucketS3KeyFilterPtr and BucketS3KeyFilterPtrOutput values.
// You can construct a concrete instance of `BucketS3KeyFilterPtrInput` via:
//
//	        BucketS3KeyFilterArgs{...}
//
//	or:
//
//	        nil
type BucketS3KeyFilterPtrInput interface {
	pulumi.Input

	ToBucketS3KeyFilterPtrOutput() BucketS3KeyFilterPtrOutput
	ToBucketS3KeyFilterPtrOutputWithContext(context.Context) BucketS3KeyFilterPtrOutput
}

type bucketS3KeyFilterPtrType BucketS3KeyFilterArgs

func BucketS3KeyFilterPtr(v *BucketS3KeyFilterArgs) BucketS3KeyFilterPtrInput {
	return (*bucketS3KeyFilterPtrType)(v)
}

func (*bucketS3KeyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketS3KeyFilter)(nil)).Elem()
}

func (i *bucketS3KeyFilterPtrType) ToBucketS3KeyFilterPtrOutput() BucketS3KeyFilterPtrOutput {
	return i.ToBucketS3KeyFilterPtrOutputWithContext(context.Background())
}

func (i *bucketS3KeyFilterPtrType) ToBucketS3KeyFilterPtrOutputWithContext(ctx context.Context) BucketS3KeyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketS3KeyFilterPtrOutput)
}

// A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
//
//	The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
type BucketS3KeyFilterOutput struct{ *pulumi.OutputState }

func (BucketS3KeyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketS3KeyFilter)(nil)).Elem()
}

func (o BucketS3KeyFilterOutput) ToBucketS3KeyFilterOutput() BucketS3KeyFilterOutput {
	return o
}

func (o BucketS3KeyFilterOutput) ToBucketS3KeyFilterOutputWithContext(ctx context.Context) BucketS3KeyFilterOutput {
	return o
}

func (o BucketS3KeyFilterOutput) ToBucketS3KeyFilterPtrOutput() BucketS3KeyFilterPtrOutput {
	return o.ToBucketS3KeyFilterPtrOutputWithContext(context.Background())
}

func (o BucketS3KeyFilterOutput) ToBucketS3KeyFilterPtrOutputWithContext(ctx context.Context) BucketS3KeyFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketS3KeyFilter) *BucketS3KeyFilter {
		return &v
	}).(BucketS3KeyFilterPtrOutput)
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o BucketS3KeyFilterOutput) Rules() BucketFilterRuleArrayOutput {
	return o.ApplyT(func(v BucketS3KeyFilter) []BucketFilterRule { return v.Rules }).(BucketFilterRuleArrayOutput)
}

type BucketS3KeyFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketS3KeyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketS3KeyFilter)(nil)).Elem()
}

func (o BucketS3KeyFilterPtrOutput) ToBucketS3KeyFilterPtrOutput() BucketS3KeyFilterPtrOutput {
	return o
}

func (o BucketS3KeyFilterPtrOutput) ToBucketS3KeyFilterPtrOutputWithContext(ctx context.Context) BucketS3KeyFilterPtrOutput {
	return o
}

func (o BucketS3KeyFilterPtrOutput) Elem() BucketS3KeyFilterOutput {
	return o.ApplyT(func(v *BucketS3KeyFilter) BucketS3KeyFilter {
		if v != nil {
			return *v
		}
		var ret BucketS3KeyFilter
		return ret
	}).(BucketS3KeyFilterOutput)
}

// A list of containers for the key-value pair that defines the criteria for the filter rule.
func (o BucketS3KeyFilterPtrOutput) Rules() BucketFilterRuleArrayOutput {
	return o.ApplyT(func(v *BucketS3KeyFilter) []BucketFilterRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(BucketFilterRuleArrayOutput)
}

// Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
type BucketServerSideEncryptionByDefault struct {
	// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``.
	//  You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.
	//   +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``
	//   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
	//   +  Key Alias: ``alias/alias-name``
	//
	//  If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.
	//  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
	//   Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// Server-side encryption algorithm to use for the default encryption.
	SseAlgorithm BucketServerSideEncryptionByDefaultSseAlgorithm `pulumi:"sseAlgorithm"`
}

// BucketServerSideEncryptionByDefaultInput is an input type that accepts BucketServerSideEncryptionByDefaultArgs and BucketServerSideEncryptionByDefaultOutput values.
// You can construct a concrete instance of `BucketServerSideEncryptionByDefaultInput` via:
//
//	BucketServerSideEncryptionByDefaultArgs{...}
type BucketServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionByDefaultOutput
	ToBucketServerSideEncryptionByDefaultOutputWithContext(context.Context) BucketServerSideEncryptionByDefaultOutput
}

// Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
type BucketServerSideEncryptionByDefaultArgs struct {
	// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``.
	//  You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.
	//   +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``
	//   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
	//   +  Key Alias: ``alias/alias-name``
	//
	//  If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.
	//  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
	//   Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
	KmsMasterKeyId pulumi.StringPtrInput `pulumi:"kmsMasterKeyId"`
	// Server-side encryption algorithm to use for the default encryption.
	SseAlgorithm BucketServerSideEncryptionByDefaultSseAlgorithmInput `pulumi:"sseAlgorithm"`
}

func (BucketServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i BucketServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionByDefaultOutput {
	return i.ToBucketServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionByDefaultOutput)
}

func (i BucketServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionByDefaultPtrOutput() BucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionByDefaultOutput).ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx)
}

// BucketServerSideEncryptionByDefaultPtrInput is an input type that accepts BucketServerSideEncryptionByDefaultArgs, BucketServerSideEncryptionByDefaultPtr and BucketServerSideEncryptionByDefaultPtrOutput values.
// You can construct a concrete instance of `BucketServerSideEncryptionByDefaultPtrInput` via:
//
//	        BucketServerSideEncryptionByDefaultArgs{...}
//
//	or:
//
//	        nil
type BucketServerSideEncryptionByDefaultPtrInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionByDefaultPtrOutput() BucketServerSideEncryptionByDefaultPtrOutput
	ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Context) BucketServerSideEncryptionByDefaultPtrOutput
}

type bucketServerSideEncryptionByDefaultPtrType BucketServerSideEncryptionByDefaultArgs

func BucketServerSideEncryptionByDefaultPtr(v *BucketServerSideEncryptionByDefaultArgs) BucketServerSideEncryptionByDefaultPtrInput {
	return (*bucketServerSideEncryptionByDefaultPtrType)(v)
}

func (*bucketServerSideEncryptionByDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i *bucketServerSideEncryptionByDefaultPtrType) ToBucketServerSideEncryptionByDefaultPtrOutput() BucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i *bucketServerSideEncryptionByDefaultPtrType) ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionByDefaultPtrOutput)
}

// Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
type BucketServerSideEncryptionByDefaultOutput struct{ *pulumi.OutputState }

func (BucketServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o BucketServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o BucketServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o BucketServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionByDefaultPtrOutput() BucketServerSideEncryptionByDefaultPtrOutput {
	return o.ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (o BucketServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketServerSideEncryptionByDefault) *BucketServerSideEncryptionByDefault {
		return &v
	}).(BucketServerSideEncryptionByDefaultPtrOutput)
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“.
//
//	You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.
//	 +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``
//	 +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
//	 +  Key Alias: ``alias/alias-name``
//
//	If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.
//	If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
//	 Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o BucketServerSideEncryptionByDefaultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketServerSideEncryptionByDefault) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o BucketServerSideEncryptionByDefaultOutput) SseAlgorithm() BucketServerSideEncryptionByDefaultSseAlgorithmOutput {
	return o.ApplyT(func(v BucketServerSideEncryptionByDefault) BucketServerSideEncryptionByDefaultSseAlgorithm {
		return v.SseAlgorithm
	}).(BucketServerSideEncryptionByDefaultSseAlgorithmOutput)
}

type BucketServerSideEncryptionByDefaultPtrOutput struct{ *pulumi.OutputState }

func (BucketServerSideEncryptionByDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o BucketServerSideEncryptionByDefaultPtrOutput) ToBucketServerSideEncryptionByDefaultPtrOutput() BucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o BucketServerSideEncryptionByDefaultPtrOutput) ToBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o BucketServerSideEncryptionByDefaultPtrOutput) Elem() BucketServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v *BucketServerSideEncryptionByDefault) BucketServerSideEncryptionByDefault {
		if v != nil {
			return *v
		}
		var ret BucketServerSideEncryptionByDefault
		return ret
	}).(BucketServerSideEncryptionByDefaultOutput)
}

// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if “SSEAlgorithm“ is set to “aws:kms“ or “aws:kms:dsse“.
//
//	You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.
//	 +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``
//	 +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
//	 +  Key Alias: ``alias/alias-name``
//
//	If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.
//	If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
//	 Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.
func (o BucketServerSideEncryptionByDefaultPtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
func (o BucketServerSideEncryptionByDefaultPtrOutput) SseAlgorithm() BucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput {
	return o.ApplyT(func(v *BucketServerSideEncryptionByDefault) *BucketServerSideEncryptionByDefaultSseAlgorithm {
		if v == nil {
			return nil
		}
		return &v.SseAlgorithm
	}).(BucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput)
}

// Specifies the default server-side encryption configuration.
type BucketServerSideEncryptionRule struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
	//  For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
	BucketKeyEnabled *bool `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
	ServerSideEncryptionByDefault *BucketServerSideEncryptionByDefault `pulumi:"serverSideEncryptionByDefault"`
}

// BucketServerSideEncryptionRuleInput is an input type that accepts BucketServerSideEncryptionRuleArgs and BucketServerSideEncryptionRuleOutput values.
// You can construct a concrete instance of `BucketServerSideEncryptionRuleInput` via:
//
//	BucketServerSideEncryptionRuleArgs{...}
type BucketServerSideEncryptionRuleInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionRuleOutput() BucketServerSideEncryptionRuleOutput
	ToBucketServerSideEncryptionRuleOutputWithContext(context.Context) BucketServerSideEncryptionRuleOutput
}

// Specifies the default server-side encryption configuration.
type BucketServerSideEncryptionRuleArgs struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
	//  For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
	BucketKeyEnabled pulumi.BoolPtrInput `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
	ServerSideEncryptionByDefault BucketServerSideEncryptionByDefaultPtrInput `pulumi:"serverSideEncryptionByDefault"`
}

func (BucketServerSideEncryptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionRule)(nil)).Elem()
}

func (i BucketServerSideEncryptionRuleArgs) ToBucketServerSideEncryptionRuleOutput() BucketServerSideEncryptionRuleOutput {
	return i.ToBucketServerSideEncryptionRuleOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionRuleArgs) ToBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) BucketServerSideEncryptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionRuleOutput)
}

// BucketServerSideEncryptionRuleArrayInput is an input type that accepts BucketServerSideEncryptionRuleArray and BucketServerSideEncryptionRuleArrayOutput values.
// You can construct a concrete instance of `BucketServerSideEncryptionRuleArrayInput` via:
//
//	BucketServerSideEncryptionRuleArray{ BucketServerSideEncryptionRuleArgs{...} }
type BucketServerSideEncryptionRuleArrayInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionRuleArrayOutput() BucketServerSideEncryptionRuleArrayOutput
	ToBucketServerSideEncryptionRuleArrayOutputWithContext(context.Context) BucketServerSideEncryptionRuleArrayOutput
}

type BucketServerSideEncryptionRuleArray []BucketServerSideEncryptionRuleInput

func (BucketServerSideEncryptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketServerSideEncryptionRule)(nil)).Elem()
}

func (i BucketServerSideEncryptionRuleArray) ToBucketServerSideEncryptionRuleArrayOutput() BucketServerSideEncryptionRuleArrayOutput {
	return i.ToBucketServerSideEncryptionRuleArrayOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionRuleArray) ToBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) BucketServerSideEncryptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionRuleArrayOutput)
}

// Specifies the default server-side encryption configuration.
type BucketServerSideEncryptionRuleOutput struct{ *pulumi.OutputState }

func (BucketServerSideEncryptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionRule)(nil)).Elem()
}

func (o BucketServerSideEncryptionRuleOutput) ToBucketServerSideEncryptionRuleOutput() BucketServerSideEncryptionRuleOutput {
	return o
}

func (o BucketServerSideEncryptionRuleOutput) ToBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) BucketServerSideEncryptionRuleOutput {
	return o
}

// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the “BucketKeyEnabled“ element to “true“ causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
//
//	For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.
func (o BucketServerSideEncryptionRuleOutput) BucketKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketServerSideEncryptionRule) *bool { return v.BucketKeyEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
func (o BucketServerSideEncryptionRuleOutput) ServerSideEncryptionByDefault() BucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v BucketServerSideEncryptionRule) *BucketServerSideEncryptionByDefault {
		return v.ServerSideEncryptionByDefault
	}).(BucketServerSideEncryptionByDefaultPtrOutput)
}

type BucketServerSideEncryptionRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketServerSideEncryptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketServerSideEncryptionRule)(nil)).Elem()
}

func (o BucketServerSideEncryptionRuleArrayOutput) ToBucketServerSideEncryptionRuleArrayOutput() BucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o BucketServerSideEncryptionRuleArrayOutput) ToBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) BucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o BucketServerSideEncryptionRuleArrayOutput) Index(i pulumi.IntInput) BucketServerSideEncryptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketServerSideEncryptionRule {
		return vs[0].([]BucketServerSideEncryptionRule)[vs[1].(int)]
	}).(BucketServerSideEncryptionRuleOutput)
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
type BucketSourceSelectionCriteria struct {
	// A filter that you can specify for selection for modifications on replicas.
	ReplicaModifications *BucketReplicaModifications `pulumi:"replicaModifications"`
	// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.
	SseKmsEncryptedObjects *BucketSseKmsEncryptedObjects `pulumi:"sseKmsEncryptedObjects"`
}

// BucketSourceSelectionCriteriaInput is an input type that accepts BucketSourceSelectionCriteriaArgs and BucketSourceSelectionCriteriaOutput values.
// You can construct a concrete instance of `BucketSourceSelectionCriteriaInput` via:
//
//	BucketSourceSelectionCriteriaArgs{...}
type BucketSourceSelectionCriteriaInput interface {
	pulumi.Input

	ToBucketSourceSelectionCriteriaOutput() BucketSourceSelectionCriteriaOutput
	ToBucketSourceSelectionCriteriaOutputWithContext(context.Context) BucketSourceSelectionCriteriaOutput
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
type BucketSourceSelectionCriteriaArgs struct {
	// A filter that you can specify for selection for modifications on replicas.
	ReplicaModifications BucketReplicaModificationsPtrInput `pulumi:"replicaModifications"`
	// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.
	SseKmsEncryptedObjects BucketSseKmsEncryptedObjectsPtrInput `pulumi:"sseKmsEncryptedObjects"`
}

func (BucketSourceSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketSourceSelectionCriteria)(nil)).Elem()
}

func (i BucketSourceSelectionCriteriaArgs) ToBucketSourceSelectionCriteriaOutput() BucketSourceSelectionCriteriaOutput {
	return i.ToBucketSourceSelectionCriteriaOutputWithContext(context.Background())
}

func (i BucketSourceSelectionCriteriaArgs) ToBucketSourceSelectionCriteriaOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSourceSelectionCriteriaOutput)
}

func (i BucketSourceSelectionCriteriaArgs) ToBucketSourceSelectionCriteriaPtrOutput() BucketSourceSelectionCriteriaPtrOutput {
	return i.ToBucketSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i BucketSourceSelectionCriteriaArgs) ToBucketSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSourceSelectionCriteriaOutput).ToBucketSourceSelectionCriteriaPtrOutputWithContext(ctx)
}

// BucketSourceSelectionCriteriaPtrInput is an input type that accepts BucketSourceSelectionCriteriaArgs, BucketSourceSelectionCriteriaPtr and BucketSourceSelectionCriteriaPtrOutput values.
// You can construct a concrete instance of `BucketSourceSelectionCriteriaPtrInput` via:
//
//	        BucketSourceSelectionCriteriaArgs{...}
//
//	or:
//
//	        nil
type BucketSourceSelectionCriteriaPtrInput interface {
	pulumi.Input

	ToBucketSourceSelectionCriteriaPtrOutput() BucketSourceSelectionCriteriaPtrOutput
	ToBucketSourceSelectionCriteriaPtrOutputWithContext(context.Context) BucketSourceSelectionCriteriaPtrOutput
}

type bucketSourceSelectionCriteriaPtrType BucketSourceSelectionCriteriaArgs

func BucketSourceSelectionCriteriaPtr(v *BucketSourceSelectionCriteriaArgs) BucketSourceSelectionCriteriaPtrInput {
	return (*bucketSourceSelectionCriteriaPtrType)(v)
}

func (*bucketSourceSelectionCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketSourceSelectionCriteria)(nil)).Elem()
}

func (i *bucketSourceSelectionCriteriaPtrType) ToBucketSourceSelectionCriteriaPtrOutput() BucketSourceSelectionCriteriaPtrOutput {
	return i.ToBucketSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i *bucketSourceSelectionCriteriaPtrType) ToBucketSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSourceSelectionCriteriaPtrOutput)
}

// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
type BucketSourceSelectionCriteriaOutput struct{ *pulumi.OutputState }

func (BucketSourceSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketSourceSelectionCriteria)(nil)).Elem()
}

func (o BucketSourceSelectionCriteriaOutput) ToBucketSourceSelectionCriteriaOutput() BucketSourceSelectionCriteriaOutput {
	return o
}

func (o BucketSourceSelectionCriteriaOutput) ToBucketSourceSelectionCriteriaOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaOutput {
	return o
}

func (o BucketSourceSelectionCriteriaOutput) ToBucketSourceSelectionCriteriaPtrOutput() BucketSourceSelectionCriteriaPtrOutput {
	return o.ToBucketSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (o BucketSourceSelectionCriteriaOutput) ToBucketSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketSourceSelectionCriteria) *BucketSourceSelectionCriteria {
		return &v
	}).(BucketSourceSelectionCriteriaPtrOutput)
}

// A filter that you can specify for selection for modifications on replicas.
func (o BucketSourceSelectionCriteriaOutput) ReplicaModifications() BucketReplicaModificationsPtrOutput {
	return o.ApplyT(func(v BucketSourceSelectionCriteria) *BucketReplicaModifications { return v.ReplicaModifications }).(BucketReplicaModificationsPtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.
func (o BucketSourceSelectionCriteriaOutput) SseKmsEncryptedObjects() BucketSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func(v BucketSourceSelectionCriteria) *BucketSseKmsEncryptedObjects { return v.SseKmsEncryptedObjects }).(BucketSseKmsEncryptedObjectsPtrOutput)
}

type BucketSourceSelectionCriteriaPtrOutput struct{ *pulumi.OutputState }

func (BucketSourceSelectionCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketSourceSelectionCriteria)(nil)).Elem()
}

func (o BucketSourceSelectionCriteriaPtrOutput) ToBucketSourceSelectionCriteriaPtrOutput() BucketSourceSelectionCriteriaPtrOutput {
	return o
}

func (o BucketSourceSelectionCriteriaPtrOutput) ToBucketSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketSourceSelectionCriteriaPtrOutput {
	return o
}

func (o BucketSourceSelectionCriteriaPtrOutput) Elem() BucketSourceSelectionCriteriaOutput {
	return o.ApplyT(func(v *BucketSourceSelectionCriteria) BucketSourceSelectionCriteria {
		if v != nil {
			return *v
		}
		var ret BucketSourceSelectionCriteria
		return ret
	}).(BucketSourceSelectionCriteriaOutput)
}

// A filter that you can specify for selection for modifications on replicas.
func (o BucketSourceSelectionCriteriaPtrOutput) ReplicaModifications() BucketReplicaModificationsPtrOutput {
	return o.ApplyT(func(v *BucketSourceSelectionCriteria) *BucketReplicaModifications {
		if v == nil {
			return nil
		}
		return v.ReplicaModifications
	}).(BucketReplicaModificationsPtrOutput)
}

// A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.
func (o BucketSourceSelectionCriteriaPtrOutput) SseKmsEncryptedObjects() BucketSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func(v *BucketSourceSelectionCriteria) *BucketSseKmsEncryptedObjects {
		if v == nil {
			return nil
		}
		return v.SseKmsEncryptedObjects
	}).(BucketSseKmsEncryptedObjectsPtrOutput)
}

// A container for filter information for the selection of S3 objects encrypted with AWS KMS.
type BucketSseKmsEncryptedObjects struct {
	// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
	Status BucketSseKmsEncryptedObjectsStatus `pulumi:"status"`
}

// BucketSseKmsEncryptedObjectsInput is an input type that accepts BucketSseKmsEncryptedObjectsArgs and BucketSseKmsEncryptedObjectsOutput values.
// You can construct a concrete instance of `BucketSseKmsEncryptedObjectsInput` via:
//
//	BucketSseKmsEncryptedObjectsArgs{...}
type BucketSseKmsEncryptedObjectsInput interface {
	pulumi.Input

	ToBucketSseKmsEncryptedObjectsOutput() BucketSseKmsEncryptedObjectsOutput
	ToBucketSseKmsEncryptedObjectsOutputWithContext(context.Context) BucketSseKmsEncryptedObjectsOutput
}

// A container for filter information for the selection of S3 objects encrypted with AWS KMS.
type BucketSseKmsEncryptedObjectsArgs struct {
	// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
	Status BucketSseKmsEncryptedObjectsStatusInput `pulumi:"status"`
}

func (BucketSseKmsEncryptedObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketSseKmsEncryptedObjects)(nil)).Elem()
}

func (i BucketSseKmsEncryptedObjectsArgs) ToBucketSseKmsEncryptedObjectsOutput() BucketSseKmsEncryptedObjectsOutput {
	return i.ToBucketSseKmsEncryptedObjectsOutputWithContext(context.Background())
}

func (i BucketSseKmsEncryptedObjectsArgs) ToBucketSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSseKmsEncryptedObjectsOutput)
}

func (i BucketSseKmsEncryptedObjectsArgs) ToBucketSseKmsEncryptedObjectsPtrOutput() BucketSseKmsEncryptedObjectsPtrOutput {
	return i.ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i BucketSseKmsEncryptedObjectsArgs) ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSseKmsEncryptedObjectsOutput).ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(ctx)
}

// BucketSseKmsEncryptedObjectsPtrInput is an input type that accepts BucketSseKmsEncryptedObjectsArgs, BucketSseKmsEncryptedObjectsPtr and BucketSseKmsEncryptedObjectsPtrOutput values.
// You can construct a concrete instance of `BucketSseKmsEncryptedObjectsPtrInput` via:
//
//	        BucketSseKmsEncryptedObjectsArgs{...}
//
//	or:
//
//	        nil
type BucketSseKmsEncryptedObjectsPtrInput interface {
	pulumi.Input

	ToBucketSseKmsEncryptedObjectsPtrOutput() BucketSseKmsEncryptedObjectsPtrOutput
	ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(context.Context) BucketSseKmsEncryptedObjectsPtrOutput
}

type bucketSseKmsEncryptedObjectsPtrType BucketSseKmsEncryptedObjectsArgs

func BucketSseKmsEncryptedObjectsPtr(v *BucketSseKmsEncryptedObjectsArgs) BucketSseKmsEncryptedObjectsPtrInput {
	return (*bucketSseKmsEncryptedObjectsPtrType)(v)
}

func (*bucketSseKmsEncryptedObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketSseKmsEncryptedObjects)(nil)).Elem()
}

func (i *bucketSseKmsEncryptedObjectsPtrType) ToBucketSseKmsEncryptedObjectsPtrOutput() BucketSseKmsEncryptedObjectsPtrOutput {
	return i.ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i *bucketSseKmsEncryptedObjectsPtrType) ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketSseKmsEncryptedObjectsPtrOutput)
}

// A container for filter information for the selection of S3 objects encrypted with AWS KMS.
type BucketSseKmsEncryptedObjectsOutput struct{ *pulumi.OutputState }

func (BucketSseKmsEncryptedObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketSseKmsEncryptedObjects)(nil)).Elem()
}

func (o BucketSseKmsEncryptedObjectsOutput) ToBucketSseKmsEncryptedObjectsOutput() BucketSseKmsEncryptedObjectsOutput {
	return o
}

func (o BucketSseKmsEncryptedObjectsOutput) ToBucketSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsOutput {
	return o
}

func (o BucketSseKmsEncryptedObjectsOutput) ToBucketSseKmsEncryptedObjectsPtrOutput() BucketSseKmsEncryptedObjectsPtrOutput {
	return o.ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (o BucketSseKmsEncryptedObjectsOutput) ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketSseKmsEncryptedObjects) *BucketSseKmsEncryptedObjects {
		return &v
	}).(BucketSseKmsEncryptedObjectsPtrOutput)
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o BucketSseKmsEncryptedObjectsOutput) Status() BucketSseKmsEncryptedObjectsStatusOutput {
	return o.ApplyT(func(v BucketSseKmsEncryptedObjects) BucketSseKmsEncryptedObjectsStatus { return v.Status }).(BucketSseKmsEncryptedObjectsStatusOutput)
}

type BucketSseKmsEncryptedObjectsPtrOutput struct{ *pulumi.OutputState }

func (BucketSseKmsEncryptedObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketSseKmsEncryptedObjects)(nil)).Elem()
}

func (o BucketSseKmsEncryptedObjectsPtrOutput) ToBucketSseKmsEncryptedObjectsPtrOutput() BucketSseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o BucketSseKmsEncryptedObjectsPtrOutput) ToBucketSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketSseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o BucketSseKmsEncryptedObjectsPtrOutput) Elem() BucketSseKmsEncryptedObjectsOutput {
	return o.ApplyT(func(v *BucketSseKmsEncryptedObjects) BucketSseKmsEncryptedObjects {
		if v != nil {
			return *v
		}
		var ret BucketSseKmsEncryptedObjects
		return ret
	}).(BucketSseKmsEncryptedObjectsOutput)
}

// Specifies whether Amazon S3 replicates objects created with server-side encryption using an AWS KMS key stored in AWS Key Management Service.
func (o BucketSseKmsEncryptedObjectsPtrOutput) Status() BucketSseKmsEncryptedObjectsStatusPtrOutput {
	return o.ApplyT(func(v *BucketSseKmsEncryptedObjects) *BucketSseKmsEncryptedObjectsStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(BucketSseKmsEncryptedObjectsStatusPtrOutput)
}

// Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
type BucketStorageClassAnalysis struct {
	// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
	DataExport *BucketDataExport `pulumi:"dataExport"`
}

// BucketStorageClassAnalysisInput is an input type that accepts BucketStorageClassAnalysisArgs and BucketStorageClassAnalysisOutput values.
// You can construct a concrete instance of `BucketStorageClassAnalysisInput` via:
//
//	BucketStorageClassAnalysisArgs{...}
type BucketStorageClassAnalysisInput interface {
	pulumi.Input

	ToBucketStorageClassAnalysisOutput() BucketStorageClassAnalysisOutput
	ToBucketStorageClassAnalysisOutputWithContext(context.Context) BucketStorageClassAnalysisOutput
}

// Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
type BucketStorageClassAnalysisArgs struct {
	// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
	DataExport BucketDataExportPtrInput `pulumi:"dataExport"`
}

func (BucketStorageClassAnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketStorageClassAnalysis)(nil)).Elem()
}

func (i BucketStorageClassAnalysisArgs) ToBucketStorageClassAnalysisOutput() BucketStorageClassAnalysisOutput {
	return i.ToBucketStorageClassAnalysisOutputWithContext(context.Background())
}

func (i BucketStorageClassAnalysisArgs) ToBucketStorageClassAnalysisOutputWithContext(ctx context.Context) BucketStorageClassAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketStorageClassAnalysisOutput)
}

// Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
type BucketStorageClassAnalysisOutput struct{ *pulumi.OutputState }

func (BucketStorageClassAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketStorageClassAnalysis)(nil)).Elem()
}

func (o BucketStorageClassAnalysisOutput) ToBucketStorageClassAnalysisOutput() BucketStorageClassAnalysisOutput {
	return o
}

func (o BucketStorageClassAnalysisOutput) ToBucketStorageClassAnalysisOutputWithContext(ctx context.Context) BucketStorageClassAnalysisOutput {
	return o
}

// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
func (o BucketStorageClassAnalysisOutput) DataExport() BucketDataExportPtrOutput {
	return o.ApplyT(func(v BucketStorageClassAnalysis) *BucketDataExport { return v.DataExport }).(BucketDataExportPtrOutput)
}

// A container of a key value name pair.
type BucketTag struct {
	// Name of the object key.
	Key string `pulumi:"key"`
	// Value of the tag.
	Value string `pulumi:"value"`
}

// Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
type BucketTagFilter struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

// BucketTagFilterInput is an input type that accepts BucketTagFilterArgs and BucketTagFilterOutput values.
// You can construct a concrete instance of `BucketTagFilterInput` via:
//
//	BucketTagFilterArgs{...}
type BucketTagFilterInput interface {
	pulumi.Input

	ToBucketTagFilterOutput() BucketTagFilterOutput
	ToBucketTagFilterOutputWithContext(context.Context) BucketTagFilterOutput
}

// Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
type BucketTagFilterArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTagFilter)(nil)).Elem()
}

func (i BucketTagFilterArgs) ToBucketTagFilterOutput() BucketTagFilterOutput {
	return i.ToBucketTagFilterOutputWithContext(context.Background())
}

func (i BucketTagFilterArgs) ToBucketTagFilterOutputWithContext(ctx context.Context) BucketTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagFilterOutput)
}

func (i BucketTagFilterArgs) ToBucketTagFilterPtrOutput() BucketTagFilterPtrOutput {
	return i.ToBucketTagFilterPtrOutputWithContext(context.Background())
}

func (i BucketTagFilterArgs) ToBucketTagFilterPtrOutputWithContext(ctx context.Context) BucketTagFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagFilterOutput).ToBucketTagFilterPtrOutputWithContext(ctx)
}

// BucketTagFilterPtrInput is an input type that accepts BucketTagFilterArgs, BucketTagFilterPtr and BucketTagFilterPtrOutput values.
// You can construct a concrete instance of `BucketTagFilterPtrInput` via:
//
//	        BucketTagFilterArgs{...}
//
//	or:
//
//	        nil
type BucketTagFilterPtrInput interface {
	pulumi.Input

	ToBucketTagFilterPtrOutput() BucketTagFilterPtrOutput
	ToBucketTagFilterPtrOutputWithContext(context.Context) BucketTagFilterPtrOutput
}

type bucketTagFilterPtrType BucketTagFilterArgs

func BucketTagFilterPtr(v *BucketTagFilterArgs) BucketTagFilterPtrInput {
	return (*bucketTagFilterPtrType)(v)
}

func (*bucketTagFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTagFilter)(nil)).Elem()
}

func (i *bucketTagFilterPtrType) ToBucketTagFilterPtrOutput() BucketTagFilterPtrOutput {
	return i.ToBucketTagFilterPtrOutputWithContext(context.Background())
}

func (i *bucketTagFilterPtrType) ToBucketTagFilterPtrOutputWithContext(ctx context.Context) BucketTagFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagFilterPtrOutput)
}

// BucketTagFilterArrayInput is an input type that accepts BucketTagFilterArray and BucketTagFilterArrayOutput values.
// You can construct a concrete instance of `BucketTagFilterArrayInput` via:
//
//	BucketTagFilterArray{ BucketTagFilterArgs{...} }
type BucketTagFilterArrayInput interface {
	pulumi.Input

	ToBucketTagFilterArrayOutput() BucketTagFilterArrayOutput
	ToBucketTagFilterArrayOutputWithContext(context.Context) BucketTagFilterArrayOutput
}

type BucketTagFilterArray []BucketTagFilterInput

func (BucketTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTagFilter)(nil)).Elem()
}

func (i BucketTagFilterArray) ToBucketTagFilterArrayOutput() BucketTagFilterArrayOutput {
	return i.ToBucketTagFilterArrayOutputWithContext(context.Background())
}

func (i BucketTagFilterArray) ToBucketTagFilterArrayOutputWithContext(ctx context.Context) BucketTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagFilterArrayOutput)
}

// Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
type BucketTagFilterOutput struct{ *pulumi.OutputState }

func (BucketTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTagFilter)(nil)).Elem()
}

func (o BucketTagFilterOutput) ToBucketTagFilterOutput() BucketTagFilterOutput {
	return o
}

func (o BucketTagFilterOutput) ToBucketTagFilterOutputWithContext(ctx context.Context) BucketTagFilterOutput {
	return o
}

func (o BucketTagFilterOutput) ToBucketTagFilterPtrOutput() BucketTagFilterPtrOutput {
	return o.ToBucketTagFilterPtrOutputWithContext(context.Background())
}

func (o BucketTagFilterOutput) ToBucketTagFilterPtrOutputWithContext(ctx context.Context) BucketTagFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketTagFilter) *BucketTagFilter {
		return &v
	}).(BucketTagFilterPtrOutput)
}

// The tag key.
func (o BucketTagFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTagFilter) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value.
func (o BucketTagFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTagFilter) string { return v.Value }).(pulumi.StringOutput)
}

type BucketTagFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketTagFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTagFilter)(nil)).Elem()
}

func (o BucketTagFilterPtrOutput) ToBucketTagFilterPtrOutput() BucketTagFilterPtrOutput {
	return o
}

func (o BucketTagFilterPtrOutput) ToBucketTagFilterPtrOutputWithContext(ctx context.Context) BucketTagFilterPtrOutput {
	return o
}

func (o BucketTagFilterPtrOutput) Elem() BucketTagFilterOutput {
	return o.ApplyT(func(v *BucketTagFilter) BucketTagFilter {
		if v != nil {
			return *v
		}
		var ret BucketTagFilter
		return ret
	}).(BucketTagFilterOutput)
}

// The tag key.
func (o BucketTagFilterPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketTagFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The tag value.
func (o BucketTagFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketTagFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type BucketTagFilterArrayOutput struct{ *pulumi.OutputState }

func (BucketTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTagFilter)(nil)).Elem()
}

func (o BucketTagFilterArrayOutput) ToBucketTagFilterArrayOutput() BucketTagFilterArrayOutput {
	return o
}

func (o BucketTagFilterArrayOutput) ToBucketTagFilterArrayOutputWithContext(ctx context.Context) BucketTagFilterArrayOutput {
	return o
}

func (o BucketTagFilterArrayOutput) Index(i pulumi.IntInput) BucketTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTagFilter {
		return vs[0].([]BucketTagFilter)[vs[1].(int)]
	}).(BucketTagFilterOutput)
}

// Describes the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
type BucketTargetObjectKeyFormat struct {
}

// BucketTargetObjectKeyFormatInput is an input type that accepts BucketTargetObjectKeyFormatArgs and BucketTargetObjectKeyFormatOutput values.
// You can construct a concrete instance of `BucketTargetObjectKeyFormatInput` via:
//
//	BucketTargetObjectKeyFormatArgs{...}
type BucketTargetObjectKeyFormatInput interface {
	pulumi.Input

	ToBucketTargetObjectKeyFormatOutput() BucketTargetObjectKeyFormatOutput
	ToBucketTargetObjectKeyFormatOutputWithContext(context.Context) BucketTargetObjectKeyFormatOutput
}

// Describes the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
type BucketTargetObjectKeyFormatArgs struct {
}

func (BucketTargetObjectKeyFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTargetObjectKeyFormat)(nil)).Elem()
}

func (i BucketTargetObjectKeyFormatArgs) ToBucketTargetObjectKeyFormatOutput() BucketTargetObjectKeyFormatOutput {
	return i.ToBucketTargetObjectKeyFormatOutputWithContext(context.Background())
}

func (i BucketTargetObjectKeyFormatArgs) ToBucketTargetObjectKeyFormatOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTargetObjectKeyFormatOutput)
}

func (i BucketTargetObjectKeyFormatArgs) ToBucketTargetObjectKeyFormatPtrOutput() BucketTargetObjectKeyFormatPtrOutput {
	return i.ToBucketTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (i BucketTargetObjectKeyFormatArgs) ToBucketTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTargetObjectKeyFormatOutput).ToBucketTargetObjectKeyFormatPtrOutputWithContext(ctx)
}

// BucketTargetObjectKeyFormatPtrInput is an input type that accepts BucketTargetObjectKeyFormatArgs, BucketTargetObjectKeyFormatPtr and BucketTargetObjectKeyFormatPtrOutput values.
// You can construct a concrete instance of `BucketTargetObjectKeyFormatPtrInput` via:
//
//	        BucketTargetObjectKeyFormatArgs{...}
//
//	or:
//
//	        nil
type BucketTargetObjectKeyFormatPtrInput interface {
	pulumi.Input

	ToBucketTargetObjectKeyFormatPtrOutput() BucketTargetObjectKeyFormatPtrOutput
	ToBucketTargetObjectKeyFormatPtrOutputWithContext(context.Context) BucketTargetObjectKeyFormatPtrOutput
}

type bucketTargetObjectKeyFormatPtrType BucketTargetObjectKeyFormatArgs

func BucketTargetObjectKeyFormatPtr(v *BucketTargetObjectKeyFormatArgs) BucketTargetObjectKeyFormatPtrInput {
	return (*bucketTargetObjectKeyFormatPtrType)(v)
}

func (*bucketTargetObjectKeyFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTargetObjectKeyFormat)(nil)).Elem()
}

func (i *bucketTargetObjectKeyFormatPtrType) ToBucketTargetObjectKeyFormatPtrOutput() BucketTargetObjectKeyFormatPtrOutput {
	return i.ToBucketTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (i *bucketTargetObjectKeyFormatPtrType) ToBucketTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTargetObjectKeyFormatPtrOutput)
}

// Describes the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
type BucketTargetObjectKeyFormatOutput struct{ *pulumi.OutputState }

func (BucketTargetObjectKeyFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTargetObjectKeyFormat)(nil)).Elem()
}

func (o BucketTargetObjectKeyFormatOutput) ToBucketTargetObjectKeyFormatOutput() BucketTargetObjectKeyFormatOutput {
	return o
}

func (o BucketTargetObjectKeyFormatOutput) ToBucketTargetObjectKeyFormatOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatOutput {
	return o
}

func (o BucketTargetObjectKeyFormatOutput) ToBucketTargetObjectKeyFormatPtrOutput() BucketTargetObjectKeyFormatPtrOutput {
	return o.ToBucketTargetObjectKeyFormatPtrOutputWithContext(context.Background())
}

func (o BucketTargetObjectKeyFormatOutput) ToBucketTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketTargetObjectKeyFormat) *BucketTargetObjectKeyFormat {
		return &v
	}).(BucketTargetObjectKeyFormatPtrOutput)
}

type BucketTargetObjectKeyFormatPtrOutput struct{ *pulumi.OutputState }

func (BucketTargetObjectKeyFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTargetObjectKeyFormat)(nil)).Elem()
}

func (o BucketTargetObjectKeyFormatPtrOutput) ToBucketTargetObjectKeyFormatPtrOutput() BucketTargetObjectKeyFormatPtrOutput {
	return o
}

func (o BucketTargetObjectKeyFormatPtrOutput) ToBucketTargetObjectKeyFormatPtrOutputWithContext(ctx context.Context) BucketTargetObjectKeyFormatPtrOutput {
	return o
}

func (o BucketTargetObjectKeyFormatPtrOutput) Elem() BucketTargetObjectKeyFormatOutput {
	return o.ApplyT(func(v *BucketTargetObjectKeyFormat) BucketTargetObjectKeyFormat {
		if v != nil {
			return *v
		}
		var ret BucketTargetObjectKeyFormat
		return ret
	}).(BucketTargetObjectKeyFormatOutput)
}

// The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.
type BucketTiering struct {
	// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
	AccessTier BucketTieringAccessTier `pulumi:"accessTier"`
	// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
	Days int `pulumi:"days"`
}

// BucketTieringInput is an input type that accepts BucketTieringArgs and BucketTieringOutput values.
// You can construct a concrete instance of `BucketTieringInput` via:
//
//	BucketTieringArgs{...}
type BucketTieringInput interface {
	pulumi.Input

	ToBucketTieringOutput() BucketTieringOutput
	ToBucketTieringOutputWithContext(context.Context) BucketTieringOutput
}

// The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.
type BucketTieringArgs struct {
	// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
	AccessTier BucketTieringAccessTierInput `pulumi:"accessTier"`
	// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
	Days pulumi.IntInput `pulumi:"days"`
}

func (BucketTieringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTiering)(nil)).Elem()
}

func (i BucketTieringArgs) ToBucketTieringOutput() BucketTieringOutput {
	return i.ToBucketTieringOutputWithContext(context.Background())
}

func (i BucketTieringArgs) ToBucketTieringOutputWithContext(ctx context.Context) BucketTieringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTieringOutput)
}

// BucketTieringArrayInput is an input type that accepts BucketTieringArray and BucketTieringArrayOutput values.
// You can construct a concrete instance of `BucketTieringArrayInput` via:
//
//	BucketTieringArray{ BucketTieringArgs{...} }
type BucketTieringArrayInput interface {
	pulumi.Input

	ToBucketTieringArrayOutput() BucketTieringArrayOutput
	ToBucketTieringArrayOutputWithContext(context.Context) BucketTieringArrayOutput
}

type BucketTieringArray []BucketTieringInput

func (BucketTieringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTiering)(nil)).Elem()
}

func (i BucketTieringArray) ToBucketTieringArrayOutput() BucketTieringArrayOutput {
	return i.ToBucketTieringArrayOutputWithContext(context.Background())
}

func (i BucketTieringArray) ToBucketTieringArrayOutputWithContext(ctx context.Context) BucketTieringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTieringArrayOutput)
}

// The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.
type BucketTieringOutput struct{ *pulumi.OutputState }

func (BucketTieringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTiering)(nil)).Elem()
}

func (o BucketTieringOutput) ToBucketTieringOutput() BucketTieringOutput {
	return o
}

func (o BucketTieringOutput) ToBucketTieringOutputWithContext(ctx context.Context) BucketTieringOutput {
	return o
}

// S3 Intelligent-Tiering access tier. See [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access) for a list of access tiers in the S3 Intelligent-Tiering storage class.
func (o BucketTieringOutput) AccessTier() BucketTieringAccessTierOutput {
	return o.ApplyT(func(v BucketTiering) BucketTieringAccessTier { return v.AccessTier }).(BucketTieringAccessTierOutput)
}

// The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
func (o BucketTieringOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketTiering) int { return v.Days }).(pulumi.IntOutput)
}

type BucketTieringArrayOutput struct{ *pulumi.OutputState }

func (BucketTieringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTiering)(nil)).Elem()
}

func (o BucketTieringArrayOutput) ToBucketTieringArrayOutput() BucketTieringArrayOutput {
	return o
}

func (o BucketTieringArrayOutput) ToBucketTieringArrayOutputWithContext(ctx context.Context) BucketTieringArrayOutput {
	return o
}

func (o BucketTieringArrayOutput) Index(i pulumi.IntInput) BucketTieringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTiering {
		return vs[0].([]BucketTiering)[vs[1].(int)]
	}).(BucketTieringOutput)
}

// A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
type BucketTopicConfiguration struct {
	// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event string `pulumi:"event"`
	// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket.
	Filter *BucketNotificationFilter `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
	Topic string `pulumi:"topic"`
}

// BucketTopicConfigurationInput is an input type that accepts BucketTopicConfigurationArgs and BucketTopicConfigurationOutput values.
// You can construct a concrete instance of `BucketTopicConfigurationInput` via:
//
//	BucketTopicConfigurationArgs{...}
type BucketTopicConfigurationInput interface {
	pulumi.Input

	ToBucketTopicConfigurationOutput() BucketTopicConfigurationOutput
	ToBucketTopicConfigurationOutputWithContext(context.Context) BucketTopicConfigurationOutput
}

// A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
type BucketTopicConfigurationArgs struct {
	// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
	Event pulumi.StringInput `pulumi:"event"`
	// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a ``.jpg`` extension are added to the bucket.
	Filter BucketNotificationFilterPtrInput `pulumi:"filter"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (BucketTopicConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTopicConfiguration)(nil)).Elem()
}

func (i BucketTopicConfigurationArgs) ToBucketTopicConfigurationOutput() BucketTopicConfigurationOutput {
	return i.ToBucketTopicConfigurationOutputWithContext(context.Background())
}

func (i BucketTopicConfigurationArgs) ToBucketTopicConfigurationOutputWithContext(ctx context.Context) BucketTopicConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTopicConfigurationOutput)
}

// BucketTopicConfigurationArrayInput is an input type that accepts BucketTopicConfigurationArray and BucketTopicConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketTopicConfigurationArrayInput` via:
//
//	BucketTopicConfigurationArray{ BucketTopicConfigurationArgs{...} }
type BucketTopicConfigurationArrayInput interface {
	pulumi.Input

	ToBucketTopicConfigurationArrayOutput() BucketTopicConfigurationArrayOutput
	ToBucketTopicConfigurationArrayOutputWithContext(context.Context) BucketTopicConfigurationArrayOutput
}

type BucketTopicConfigurationArray []BucketTopicConfigurationInput

func (BucketTopicConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTopicConfiguration)(nil)).Elem()
}

func (i BucketTopicConfigurationArray) ToBucketTopicConfigurationArrayOutput() BucketTopicConfigurationArrayOutput {
	return i.ToBucketTopicConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketTopicConfigurationArray) ToBucketTopicConfigurationArrayOutputWithContext(ctx context.Context) BucketTopicConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTopicConfigurationArrayOutput)
}

// A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
type BucketTopicConfigurationOutput struct{ *pulumi.OutputState }

func (BucketTopicConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTopicConfiguration)(nil)).Elem()
}

func (o BucketTopicConfigurationOutput) ToBucketTopicConfigurationOutput() BucketTopicConfigurationOutput {
	return o
}

func (o BucketTopicConfigurationOutput) ToBucketTopicConfigurationOutputWithContext(ctx context.Context) BucketTopicConfigurationOutput {
	return o
}

// The Amazon S3 bucket event about which to send notifications. For more information, see [Supported Event Types](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the *Amazon S3 User Guide*.
func (o BucketTopicConfigurationOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTopicConfiguration) string { return v.Event }).(pulumi.StringOutput)
}

// The filtering rules that determine for which objects to send notifications. For example, you can create a filter so that Amazon S3 sends notifications only when image files with a “.jpg“ extension are added to the bucket.
func (o BucketTopicConfigurationOutput) Filter() BucketNotificationFilterPtrOutput {
	return o.ApplyT(func(v BucketTopicConfiguration) *BucketNotificationFilter { return v.Filter }).(BucketNotificationFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.
func (o BucketTopicConfigurationOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTopicConfiguration) string { return v.Topic }).(pulumi.StringOutput)
}

type BucketTopicConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketTopicConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTopicConfiguration)(nil)).Elem()
}

func (o BucketTopicConfigurationArrayOutput) ToBucketTopicConfigurationArrayOutput() BucketTopicConfigurationArrayOutput {
	return o
}

func (o BucketTopicConfigurationArrayOutput) ToBucketTopicConfigurationArrayOutputWithContext(ctx context.Context) BucketTopicConfigurationArrayOutput {
	return o
}

func (o BucketTopicConfigurationArrayOutput) Index(i pulumi.IntInput) BucketTopicConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTopicConfiguration {
		return vs[0].([]BucketTopicConfiguration)[vs[1].(int)]
	}).(BucketTopicConfigurationOutput)
}

// Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
type BucketTransition struct {
	// The storage class to which you want the object to transition.
	StorageClass BucketTransitionStorageClass `pulumi:"storageClass"`
	// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
	TransitionDate *string `pulumi:"transitionDate"`
	// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
	TransitionInDays *int `pulumi:"transitionInDays"`
}

// BucketTransitionInput is an input type that accepts BucketTransitionArgs and BucketTransitionOutput values.
// You can construct a concrete instance of `BucketTransitionInput` via:
//
//	BucketTransitionArgs{...}
type BucketTransitionInput interface {
	pulumi.Input

	ToBucketTransitionOutput() BucketTransitionOutput
	ToBucketTransitionOutputWithContext(context.Context) BucketTransitionOutput
}

// Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
type BucketTransitionArgs struct {
	// The storage class to which you want the object to transition.
	StorageClass BucketTransitionStorageClassInput `pulumi:"storageClass"`
	// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
	TransitionDate pulumi.StringPtrInput `pulumi:"transitionDate"`
	// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
	TransitionInDays pulumi.IntPtrInput `pulumi:"transitionInDays"`
}

func (BucketTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTransition)(nil)).Elem()
}

func (i BucketTransitionArgs) ToBucketTransitionOutput() BucketTransitionOutput {
	return i.ToBucketTransitionOutputWithContext(context.Background())
}

func (i BucketTransitionArgs) ToBucketTransitionOutputWithContext(ctx context.Context) BucketTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTransitionOutput)
}

func (i BucketTransitionArgs) ToBucketTransitionPtrOutput() BucketTransitionPtrOutput {
	return i.ToBucketTransitionPtrOutputWithContext(context.Background())
}

func (i BucketTransitionArgs) ToBucketTransitionPtrOutputWithContext(ctx context.Context) BucketTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTransitionOutput).ToBucketTransitionPtrOutputWithContext(ctx)
}

// BucketTransitionPtrInput is an input type that accepts BucketTransitionArgs, BucketTransitionPtr and BucketTransitionPtrOutput values.
// You can construct a concrete instance of `BucketTransitionPtrInput` via:
//
//	        BucketTransitionArgs{...}
//
//	or:
//
//	        nil
type BucketTransitionPtrInput interface {
	pulumi.Input

	ToBucketTransitionPtrOutput() BucketTransitionPtrOutput
	ToBucketTransitionPtrOutputWithContext(context.Context) BucketTransitionPtrOutput
}

type bucketTransitionPtrType BucketTransitionArgs

func BucketTransitionPtr(v *BucketTransitionArgs) BucketTransitionPtrInput {
	return (*bucketTransitionPtrType)(v)
}

func (*bucketTransitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTransition)(nil)).Elem()
}

func (i *bucketTransitionPtrType) ToBucketTransitionPtrOutput() BucketTransitionPtrOutput {
	return i.ToBucketTransitionPtrOutputWithContext(context.Background())
}

func (i *bucketTransitionPtrType) ToBucketTransitionPtrOutputWithContext(ctx context.Context) BucketTransitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTransitionPtrOutput)
}

// BucketTransitionArrayInput is an input type that accepts BucketTransitionArray and BucketTransitionArrayOutput values.
// You can construct a concrete instance of `BucketTransitionArrayInput` via:
//
//	BucketTransitionArray{ BucketTransitionArgs{...} }
type BucketTransitionArrayInput interface {
	pulumi.Input

	ToBucketTransitionArrayOutput() BucketTransitionArrayOutput
	ToBucketTransitionArrayOutputWithContext(context.Context) BucketTransitionArrayOutput
}

type BucketTransitionArray []BucketTransitionInput

func (BucketTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTransition)(nil)).Elem()
}

func (i BucketTransitionArray) ToBucketTransitionArrayOutput() BucketTransitionArrayOutput {
	return i.ToBucketTransitionArrayOutputWithContext(context.Background())
}

func (i BucketTransitionArray) ToBucketTransitionArrayOutputWithContext(ctx context.Context) BucketTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTransitionArrayOutput)
}

// Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
type BucketTransitionOutput struct{ *pulumi.OutputState }

func (BucketTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTransition)(nil)).Elem()
}

func (o BucketTransitionOutput) ToBucketTransitionOutput() BucketTransitionOutput {
	return o
}

func (o BucketTransitionOutput) ToBucketTransitionOutputWithContext(ctx context.Context) BucketTransitionOutput {
	return o
}

func (o BucketTransitionOutput) ToBucketTransitionPtrOutput() BucketTransitionPtrOutput {
	return o.ToBucketTransitionPtrOutputWithContext(context.Background())
}

func (o BucketTransitionOutput) ToBucketTransitionPtrOutputWithContext(ctx context.Context) BucketTransitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketTransition) *BucketTransition {
		return &v
	}).(BucketTransitionPtrOutput)
}

// The storage class to which you want the object to transition.
func (o BucketTransitionOutput) StorageClass() BucketTransitionStorageClassOutput {
	return o.ApplyT(func(v BucketTransition) BucketTransitionStorageClass { return v.StorageClass }).(BucketTransitionStorageClassOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
func (o BucketTransitionOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketTransition) *string { return v.TransitionDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o BucketTransitionOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketTransition) *int { return v.TransitionInDays }).(pulumi.IntPtrOutput)
}

type BucketTransitionPtrOutput struct{ *pulumi.OutputState }

func (BucketTransitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketTransition)(nil)).Elem()
}

func (o BucketTransitionPtrOutput) ToBucketTransitionPtrOutput() BucketTransitionPtrOutput {
	return o
}

func (o BucketTransitionPtrOutput) ToBucketTransitionPtrOutputWithContext(ctx context.Context) BucketTransitionPtrOutput {
	return o
}

func (o BucketTransitionPtrOutput) Elem() BucketTransitionOutput {
	return o.ApplyT(func(v *BucketTransition) BucketTransition {
		if v != nil {
			return *v
		}
		var ret BucketTransition
		return ret
	}).(BucketTransitionOutput)
}

// The storage class to which you want the object to transition.
func (o BucketTransitionPtrOutput) StorageClass() BucketTransitionStorageClassPtrOutput {
	return o.ApplyT(func(v *BucketTransition) *BucketTransitionStorageClass {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(BucketTransitionStorageClassPtrOutput)
}

// Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
func (o BucketTransitionPtrOutput) TransitionDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketTransition) *string {
		if v == nil {
			return nil
		}
		return v.TransitionDate
	}).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
func (o BucketTransitionPtrOutput) TransitionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketTransition) *int {
		if v == nil {
			return nil
		}
		return v.TransitionInDays
	}).(pulumi.IntPtrOutput)
}

type BucketTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTransition)(nil)).Elem()
}

func (o BucketTransitionArrayOutput) ToBucketTransitionArrayOutput() BucketTransitionArrayOutput {
	return o
}

func (o BucketTransitionArrayOutput) ToBucketTransitionArrayOutputWithContext(ctx context.Context) BucketTransitionArrayOutput {
	return o
}

func (o BucketTransitionArrayOutput) Index(i pulumi.IntInput) BucketTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTransition {
		return vs[0].([]BucketTransition)[vs[1].(int)]
	}).(BucketTransitionOutput)
}

// Describes the versioning state of an Amazon S3 bucket. For more information, see [PUT Bucket versioning](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html) in the *Amazon S3 API Reference*.
type BucketVersioningConfiguration struct {
	// The versioning state of the bucket.
	Status BucketVersioningConfigurationStatus `pulumi:"status"`
}

// BucketVersioningConfigurationInput is an input type that accepts BucketVersioningConfigurationArgs and BucketVersioningConfigurationOutput values.
// You can construct a concrete instance of `BucketVersioningConfigurationInput` via:
//
//	BucketVersioningConfigurationArgs{...}
type BucketVersioningConfigurationInput interface {
	pulumi.Input

	ToBucketVersioningConfigurationOutput() BucketVersioningConfigurationOutput
	ToBucketVersioningConfigurationOutputWithContext(context.Context) BucketVersioningConfigurationOutput
}

// Describes the versioning state of an Amazon S3 bucket. For more information, see [PUT Bucket versioning](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html) in the *Amazon S3 API Reference*.
type BucketVersioningConfigurationArgs struct {
	// The versioning state of the bucket.
	Status BucketVersioningConfigurationStatusInput `pulumi:"status"`
}

func (BucketVersioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningConfiguration)(nil)).Elem()
}

func (i BucketVersioningConfigurationArgs) ToBucketVersioningConfigurationOutput() BucketVersioningConfigurationOutput {
	return i.ToBucketVersioningConfigurationOutputWithContext(context.Background())
}

func (i BucketVersioningConfigurationArgs) ToBucketVersioningConfigurationOutputWithContext(ctx context.Context) BucketVersioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningConfigurationOutput)
}

func (i BucketVersioningConfigurationArgs) ToBucketVersioningConfigurationPtrOutput() BucketVersioningConfigurationPtrOutput {
	return i.ToBucketVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketVersioningConfigurationArgs) ToBucketVersioningConfigurationPtrOutputWithContext(ctx context.Context) BucketVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningConfigurationOutput).ToBucketVersioningConfigurationPtrOutputWithContext(ctx)
}

// BucketVersioningConfigurationPtrInput is an input type that accepts BucketVersioningConfigurationArgs, BucketVersioningConfigurationPtr and BucketVersioningConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketVersioningConfigurationPtrInput` via:
//
//	        BucketVersioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketVersioningConfigurationPtrInput interface {
	pulumi.Input

	ToBucketVersioningConfigurationPtrOutput() BucketVersioningConfigurationPtrOutput
	ToBucketVersioningConfigurationPtrOutputWithContext(context.Context) BucketVersioningConfigurationPtrOutput
}

type bucketVersioningConfigurationPtrType BucketVersioningConfigurationArgs

func BucketVersioningConfigurationPtr(v *BucketVersioningConfigurationArgs) BucketVersioningConfigurationPtrInput {
	return (*bucketVersioningConfigurationPtrType)(v)
}

func (*bucketVersioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningConfiguration)(nil)).Elem()
}

func (i *bucketVersioningConfigurationPtrType) ToBucketVersioningConfigurationPtrOutput() BucketVersioningConfigurationPtrOutput {
	return i.ToBucketVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningConfigurationPtrType) ToBucketVersioningConfigurationPtrOutputWithContext(ctx context.Context) BucketVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningConfigurationPtrOutput)
}

// Describes the versioning state of an Amazon S3 bucket. For more information, see [PUT Bucket versioning](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html) in the *Amazon S3 API Reference*.
type BucketVersioningConfigurationOutput struct{ *pulumi.OutputState }

func (BucketVersioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningConfiguration)(nil)).Elem()
}

func (o BucketVersioningConfigurationOutput) ToBucketVersioningConfigurationOutput() BucketVersioningConfigurationOutput {
	return o
}

func (o BucketVersioningConfigurationOutput) ToBucketVersioningConfigurationOutputWithContext(ctx context.Context) BucketVersioningConfigurationOutput {
	return o
}

func (o BucketVersioningConfigurationOutput) ToBucketVersioningConfigurationPtrOutput() BucketVersioningConfigurationPtrOutput {
	return o.ToBucketVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketVersioningConfigurationOutput) ToBucketVersioningConfigurationPtrOutputWithContext(ctx context.Context) BucketVersioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketVersioningConfiguration) *BucketVersioningConfiguration {
		return &v
	}).(BucketVersioningConfigurationPtrOutput)
}

// The versioning state of the bucket.
func (o BucketVersioningConfigurationOutput) Status() BucketVersioningConfigurationStatusOutput {
	return o.ApplyT(func(v BucketVersioningConfiguration) BucketVersioningConfigurationStatus { return v.Status }).(BucketVersioningConfigurationStatusOutput)
}

type BucketVersioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningConfiguration)(nil)).Elem()
}

func (o BucketVersioningConfigurationPtrOutput) ToBucketVersioningConfigurationPtrOutput() BucketVersioningConfigurationPtrOutput {
	return o
}

func (o BucketVersioningConfigurationPtrOutput) ToBucketVersioningConfigurationPtrOutputWithContext(ctx context.Context) BucketVersioningConfigurationPtrOutput {
	return o
}

func (o BucketVersioningConfigurationPtrOutput) Elem() BucketVersioningConfigurationOutput {
	return o.ApplyT(func(v *BucketVersioningConfiguration) BucketVersioningConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketVersioningConfiguration
		return ret
	}).(BucketVersioningConfigurationOutput)
}

// The versioning state of the bucket.
func (o BucketVersioningConfigurationPtrOutput) Status() BucketVersioningConfigurationStatusPtrOutput {
	return o.ApplyT(func(v *BucketVersioningConfiguration) *BucketVersioningConfigurationStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(BucketVersioningConfigurationStatusPtrOutput)
}

// Specifies website configuration parameters for an Amazon S3 bucket.
type BucketWebsiteConfiguration struct {
	// The name of the error document for the website.
	ErrorDocument *string `pulumi:"errorDocument"`
	// The name of the index document for the website.
	IndexDocument *string `pulumi:"indexDocument"`
	// The redirect behavior for every request to this bucket's website endpoint.
	//   If you specify this property, you can't specify any other property.
	RedirectAllRequestsTo *BucketRedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// Rules that define when a redirect is applied and the redirect behavior.
	RoutingRules []BucketRoutingRule `pulumi:"routingRules"`
}

// BucketWebsiteConfigurationInput is an input type that accepts BucketWebsiteConfigurationArgs and BucketWebsiteConfigurationOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationInput` via:
//
//	BucketWebsiteConfigurationArgs{...}
type BucketWebsiteConfigurationInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput
	ToBucketWebsiteConfigurationOutputWithContext(context.Context) BucketWebsiteConfigurationOutput
}

// Specifies website configuration parameters for an Amazon S3 bucket.
type BucketWebsiteConfigurationArgs struct {
	// The name of the error document for the website.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// The name of the index document for the website.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// The redirect behavior for every request to this bucket's website endpoint.
	//   If you specify this property, you can't specify any other property.
	RedirectAllRequestsTo BucketRedirectAllRequestsToPtrInput `pulumi:"redirectAllRequestsTo"`
	// Rules that define when a redirect is applied and the redirect behavior.
	RoutingRules BucketRoutingRuleArrayInput `pulumi:"routingRules"`
}

func (BucketWebsiteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteConfiguration)(nil)).Elem()
}

func (i BucketWebsiteConfigurationArgs) ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput {
	return i.ToBucketWebsiteConfigurationOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationArgs) ToBucketWebsiteConfigurationOutputWithContext(ctx context.Context) BucketWebsiteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationOutput)
}

func (i BucketWebsiteConfigurationArgs) ToBucketWebsiteConfigurationPtrOutput() BucketWebsiteConfigurationPtrOutput {
	return i.ToBucketWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationArgs) ToBucketWebsiteConfigurationPtrOutputWithContext(ctx context.Context) BucketWebsiteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationOutput).ToBucketWebsiteConfigurationPtrOutputWithContext(ctx)
}

// BucketWebsiteConfigurationPtrInput is an input type that accepts BucketWebsiteConfigurationArgs, BucketWebsiteConfigurationPtr and BucketWebsiteConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationPtrInput` via:
//
//	        BucketWebsiteConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketWebsiteConfigurationPtrInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationPtrOutput() BucketWebsiteConfigurationPtrOutput
	ToBucketWebsiteConfigurationPtrOutputWithContext(context.Context) BucketWebsiteConfigurationPtrOutput
}

type bucketWebsiteConfigurationPtrType BucketWebsiteConfigurationArgs

func BucketWebsiteConfigurationPtr(v *BucketWebsiteConfigurationArgs) BucketWebsiteConfigurationPtrInput {
	return (*bucketWebsiteConfigurationPtrType)(v)
}

func (*bucketWebsiteConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfiguration)(nil)).Elem()
}

func (i *bucketWebsiteConfigurationPtrType) ToBucketWebsiteConfigurationPtrOutput() BucketWebsiteConfigurationPtrOutput {
	return i.ToBucketWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketWebsiteConfigurationPtrType) ToBucketWebsiteConfigurationPtrOutputWithContext(ctx context.Context) BucketWebsiteConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationPtrOutput)
}

// Specifies website configuration parameters for an Amazon S3 bucket.
type BucketWebsiteConfigurationOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteConfiguration)(nil)).Elem()
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput {
	return o
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationOutputWithContext(ctx context.Context) BucketWebsiteConfigurationOutput {
	return o
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationPtrOutput() BucketWebsiteConfigurationPtrOutput {
	return o.ToBucketWebsiteConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationPtrOutputWithContext(ctx context.Context) BucketWebsiteConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketWebsiteConfiguration) *BucketWebsiteConfiguration {
		return &v
	}).(BucketWebsiteConfigurationPtrOutput)
}

// The name of the error document for the website.
func (o BucketWebsiteConfigurationOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteConfiguration) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o BucketWebsiteConfigurationOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteConfiguration) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.
//
//	If you specify this property, you can't specify any other property.
func (o BucketWebsiteConfigurationOutput) RedirectAllRequestsTo() BucketRedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v BucketWebsiteConfiguration) *BucketRedirectAllRequestsTo { return v.RedirectAllRequestsTo }).(BucketRedirectAllRequestsToPtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o BucketWebsiteConfigurationOutput) RoutingRules() BucketRoutingRuleArrayOutput {
	return o.ApplyT(func(v BucketWebsiteConfiguration) []BucketRoutingRule { return v.RoutingRules }).(BucketRoutingRuleArrayOutput)
}

type BucketWebsiteConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfiguration)(nil)).Elem()
}

func (o BucketWebsiteConfigurationPtrOutput) ToBucketWebsiteConfigurationPtrOutput() BucketWebsiteConfigurationPtrOutput {
	return o
}

func (o BucketWebsiteConfigurationPtrOutput) ToBucketWebsiteConfigurationPtrOutputWithContext(ctx context.Context) BucketWebsiteConfigurationPtrOutput {
	return o
}

func (o BucketWebsiteConfigurationPtrOutput) Elem() BucketWebsiteConfigurationOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) BucketWebsiteConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketWebsiteConfiguration
		return ret
	}).(BucketWebsiteConfigurationOutput)
}

// The name of the error document for the website.
func (o BucketWebsiteConfigurationPtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

// The name of the index document for the website.
func (o BucketWebsiteConfigurationPtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

// The redirect behavior for every request to this bucket's website endpoint.
//
//	If you specify this property, you can't specify any other property.
func (o BucketWebsiteConfigurationPtrOutput) RedirectAllRequestsTo() BucketRedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) *BucketRedirectAllRequestsTo {
		if v == nil {
			return nil
		}
		return v.RedirectAllRequestsTo
	}).(BucketRedirectAllRequestsToPtrOutput)
}

// Rules that define when a redirect is applied and the redirect behavior.
func (o BucketWebsiteConfigurationPtrOutput) RoutingRules() BucketRoutingRuleArrayOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) []BucketRoutingRule {
		if v == nil {
			return nil
		}
		return v.RoutingRules
	}).(BucketRoutingRuleArrayOutput)
}

type MultiRegionAccessPointPublicAccessBlockConfiguration struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
	// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	//  - PUT Object calls fail if the request includes a public ACL.
	//    . - PUT Bucket calls fail if the request includes a public ACL.
	//    Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls *bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy *bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls *bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
	// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

// MultiRegionAccessPointPublicAccessBlockConfigurationInput is an input type that accepts MultiRegionAccessPointPublicAccessBlockConfigurationArgs and MultiRegionAccessPointPublicAccessBlockConfigurationOutput values.
// You can construct a concrete instance of `MultiRegionAccessPointPublicAccessBlockConfigurationInput` via:
//
//	MultiRegionAccessPointPublicAccessBlockConfigurationArgs{...}
type MultiRegionAccessPointPublicAccessBlockConfigurationInput interface {
	pulumi.Input

	ToMultiRegionAccessPointPublicAccessBlockConfigurationOutput() MultiRegionAccessPointPublicAccessBlockConfigurationOutput
	ToMultiRegionAccessPointPublicAccessBlockConfigurationOutputWithContext(context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationOutput
}

type MultiRegionAccessPointPublicAccessBlockConfigurationArgs struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
	// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	//  - PUT Object calls fail if the request includes a public ACL.
	//    . - PUT Bucket calls fail if the request includes a public ACL.
	//    Enabling this setting doesn't affect existing policies or ACLs.
	BlockPublicAcls pulumi.BoolPtrInput `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
	BlockPublicPolicy pulumi.BoolPtrInput `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
	IgnorePublicAcls pulumi.BoolPtrInput `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
	// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
	RestrictPublicBuckets pulumi.BoolPtrInput `pulumi:"restrictPublicBuckets"`
}

func (MultiRegionAccessPointPublicAccessBlockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i MultiRegionAccessPointPublicAccessBlockConfigurationArgs) ToMultiRegionAccessPointPublicAccessBlockConfigurationOutput() MultiRegionAccessPointPublicAccessBlockConfigurationOutput {
	return i.ToMultiRegionAccessPointPublicAccessBlockConfigurationOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointPublicAccessBlockConfigurationArgs) ToMultiRegionAccessPointPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointPublicAccessBlockConfigurationOutput)
}

func (i MultiRegionAccessPointPublicAccessBlockConfigurationArgs) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput() MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return i.ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointPublicAccessBlockConfigurationArgs) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointPublicAccessBlockConfigurationOutput).ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx)
}

// MultiRegionAccessPointPublicAccessBlockConfigurationPtrInput is an input type that accepts MultiRegionAccessPointPublicAccessBlockConfigurationArgs, MultiRegionAccessPointPublicAccessBlockConfigurationPtr and MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput values.
// You can construct a concrete instance of `MultiRegionAccessPointPublicAccessBlockConfigurationPtrInput` via:
//
//	        MultiRegionAccessPointPublicAccessBlockConfigurationArgs{...}
//
//	or:
//
//	        nil
type MultiRegionAccessPointPublicAccessBlockConfigurationPtrInput interface {
	pulumi.Input

	ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput() MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput
	ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput
}

type multiRegionAccessPointPublicAccessBlockConfigurationPtrType MultiRegionAccessPointPublicAccessBlockConfigurationArgs

func MultiRegionAccessPointPublicAccessBlockConfigurationPtr(v *MultiRegionAccessPointPublicAccessBlockConfigurationArgs) MultiRegionAccessPointPublicAccessBlockConfigurationPtrInput {
	return (*multiRegionAccessPointPublicAccessBlockConfigurationPtrType)(v)
}

func (*multiRegionAccessPointPublicAccessBlockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiRegionAccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (i *multiRegionAccessPointPublicAccessBlockConfigurationPtrType) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput() MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return i.ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (i *multiRegionAccessPointPublicAccessBlockConfigurationPtrType) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput)
}

type MultiRegionAccessPointPublicAccessBlockConfigurationOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointPublicAccessBlockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationOutput() MultiRegionAccessPointPublicAccessBlockConfigurationOutput {
	return o
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationOutput {
	return o
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput() MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return o.ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(context.Background())
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiRegionAccessPointPublicAccessBlockConfiguration) *MultiRegionAccessPointPublicAccessBlockConfiguration {
		return &v
	}).(MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
//   - PUT Object calls fail if the request includes a public ACL.
//     . - PUT Bucket calls fail if the request includes a public ACL.
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MultiRegionAccessPointPublicAccessBlockConfiguration) *bool { return v.BlockPublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MultiRegionAccessPointPublicAccessBlockConfiguration) *bool { return v.BlockPublicPolicy }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MultiRegionAccessPointPublicAccessBlockConfiguration) *bool { return v.IgnorePublicAcls }).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MultiRegionAccessPointPublicAccessBlockConfiguration) *bool { return v.RestrictPublicBuckets }).(pulumi.BoolPtrOutput)
}

type MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiRegionAccessPointPublicAccessBlockConfiguration)(nil)).Elem()
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput() MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) ToMultiRegionAccessPointPublicAccessBlockConfigurationPtrOutputWithContext(ctx context.Context) MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput {
	return o
}

func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) Elem() MultiRegionAccessPointPublicAccessBlockConfigurationOutput {
	return o.ApplyT(func(v *MultiRegionAccessPointPublicAccessBlockConfiguration) MultiRegionAccessPointPublicAccessBlockConfiguration {
		if v != nil {
			return *v
		}
		var ret MultiRegionAccessPointPublicAccessBlockConfiguration
		return ret
	}).(MultiRegionAccessPointPublicAccessBlockConfigurationOutput)
}

// Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in this account. Setting this element to TRUE causes the following behavior:
// - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
//   - PUT Object calls fail if the request includes a public ACL.
//     . - PUT Bucket calls fail if the request includes a public ACL.
//     Enabling this setting doesn't affect existing policies or ACLs.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) BlockPublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultiRegionAccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) BlockPublicPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultiRegionAccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.BlockPublicPolicy
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) IgnorePublicAcls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultiRegionAccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePublicAcls
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
// Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
func (o MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput) RestrictPublicBuckets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultiRegionAccessPointPublicAccessBlockConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictPublicBuckets
	}).(pulumi.BoolPtrOutput)
}

type MultiRegionAccessPointRegion struct {
	Bucket          string  `pulumi:"bucket"`
	BucketAccountId *string `pulumi:"bucketAccountId"`
}

// MultiRegionAccessPointRegionInput is an input type that accepts MultiRegionAccessPointRegionArgs and MultiRegionAccessPointRegionOutput values.
// You can construct a concrete instance of `MultiRegionAccessPointRegionInput` via:
//
//	MultiRegionAccessPointRegionArgs{...}
type MultiRegionAccessPointRegionInput interface {
	pulumi.Input

	ToMultiRegionAccessPointRegionOutput() MultiRegionAccessPointRegionOutput
	ToMultiRegionAccessPointRegionOutputWithContext(context.Context) MultiRegionAccessPointRegionOutput
}

type MultiRegionAccessPointRegionArgs struct {
	Bucket          pulumi.StringInput    `pulumi:"bucket"`
	BucketAccountId pulumi.StringPtrInput `pulumi:"bucketAccountId"`
}

func (MultiRegionAccessPointRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointRegion)(nil)).Elem()
}

func (i MultiRegionAccessPointRegionArgs) ToMultiRegionAccessPointRegionOutput() MultiRegionAccessPointRegionOutput {
	return i.ToMultiRegionAccessPointRegionOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointRegionArgs) ToMultiRegionAccessPointRegionOutputWithContext(ctx context.Context) MultiRegionAccessPointRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointRegionOutput)
}

// MultiRegionAccessPointRegionArrayInput is an input type that accepts MultiRegionAccessPointRegionArray and MultiRegionAccessPointRegionArrayOutput values.
// You can construct a concrete instance of `MultiRegionAccessPointRegionArrayInput` via:
//
//	MultiRegionAccessPointRegionArray{ MultiRegionAccessPointRegionArgs{...} }
type MultiRegionAccessPointRegionArrayInput interface {
	pulumi.Input

	ToMultiRegionAccessPointRegionArrayOutput() MultiRegionAccessPointRegionArrayOutput
	ToMultiRegionAccessPointRegionArrayOutputWithContext(context.Context) MultiRegionAccessPointRegionArrayOutput
}

type MultiRegionAccessPointRegionArray []MultiRegionAccessPointRegionInput

func (MultiRegionAccessPointRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiRegionAccessPointRegion)(nil)).Elem()
}

func (i MultiRegionAccessPointRegionArray) ToMultiRegionAccessPointRegionArrayOutput() MultiRegionAccessPointRegionArrayOutput {
	return i.ToMultiRegionAccessPointRegionArrayOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointRegionArray) ToMultiRegionAccessPointRegionArrayOutputWithContext(ctx context.Context) MultiRegionAccessPointRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointRegionArrayOutput)
}

type MultiRegionAccessPointRegionOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointRegion)(nil)).Elem()
}

func (o MultiRegionAccessPointRegionOutput) ToMultiRegionAccessPointRegionOutput() MultiRegionAccessPointRegionOutput {
	return o
}

func (o MultiRegionAccessPointRegionOutput) ToMultiRegionAccessPointRegionOutputWithContext(ctx context.Context) MultiRegionAccessPointRegionOutput {
	return o
}

func (o MultiRegionAccessPointRegionOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v MultiRegionAccessPointRegion) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o MultiRegionAccessPointRegionOutput) BucketAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiRegionAccessPointRegion) *string { return v.BucketAccountId }).(pulumi.StringPtrOutput)
}

type MultiRegionAccessPointRegionArrayOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MultiRegionAccessPointRegion)(nil)).Elem()
}

func (o MultiRegionAccessPointRegionArrayOutput) ToMultiRegionAccessPointRegionArrayOutput() MultiRegionAccessPointRegionArrayOutput {
	return o
}

func (o MultiRegionAccessPointRegionArrayOutput) ToMultiRegionAccessPointRegionArrayOutputWithContext(ctx context.Context) MultiRegionAccessPointRegionArrayOutput {
	return o
}

func (o MultiRegionAccessPointRegionArrayOutput) Index(i pulumi.IntInput) MultiRegionAccessPointRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MultiRegionAccessPointRegion {
		return vs[0].([]MultiRegionAccessPointRegion)[vs[1].(int)]
	}).(MultiRegionAccessPointRegionOutput)
}

// The Policy Status associated with this Multi Region Access Point
type PolicyStatusProperties struct {
	// Specifies whether the policy is public or not.
	IsPublic MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic `pulumi:"isPublic"`
}

// The Policy Status associated with this Multi Region Access Point
type PolicyStatusPropertiesOutput struct{ *pulumi.OutputState }

func (PolicyStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStatusProperties)(nil)).Elem()
}

func (o PolicyStatusPropertiesOutput) ToPolicyStatusPropertiesOutput() PolicyStatusPropertiesOutput {
	return o
}

func (o PolicyStatusPropertiesOutput) ToPolicyStatusPropertiesOutputWithContext(ctx context.Context) PolicyStatusPropertiesOutput {
	return o
}

// Specifies whether the policy is public or not.
func (o PolicyStatusPropertiesOutput) IsPublic() MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublicOutput {
	return o.ApplyT(func(v PolicyStatusProperties) MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic {
		return v.IsPublic
	}).(MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublicOutput)
}

type PolicyStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStatusProperties)(nil)).Elem()
}

func (o PolicyStatusPropertiesPtrOutput) ToPolicyStatusPropertiesPtrOutput() PolicyStatusPropertiesPtrOutput {
	return o
}

func (o PolicyStatusPropertiesPtrOutput) ToPolicyStatusPropertiesPtrOutputWithContext(ctx context.Context) PolicyStatusPropertiesPtrOutput {
	return o
}

func (o PolicyStatusPropertiesPtrOutput) Elem() PolicyStatusPropertiesOutput {
	return o.ApplyT(func(v *PolicyStatusProperties) PolicyStatusProperties {
		if v != nil {
			return *v
		}
		var ret PolicyStatusProperties
		return ret
	}).(PolicyStatusPropertiesOutput)
}

// Specifies whether the policy is public or not.
func (o PolicyStatusPropertiesPtrOutput) IsPublic() MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublicPtrOutput {
	return o.ApplyT(func(v *PolicyStatusProperties) *MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublic {
		if v == nil {
			return nil
		}
		return &v.IsPublic
	}).(MultiRegionAccessPointPolicyPolicyStatusPropertiesIsPublicPtrOutput)
}

// Account-level metrics configurations.
type StorageLensAccountLevel struct {
	ActivityMetrics                 *StorageLensActivityMetrics                 `pulumi:"activityMetrics"`
	AdvancedCostOptimizationMetrics *StorageLensAdvancedCostOptimizationMetrics `pulumi:"advancedCostOptimizationMetrics"`
	AdvancedDataProtectionMetrics   *StorageLensAdvancedDataProtectionMetrics   `pulumi:"advancedDataProtectionMetrics"`
	BucketLevel                     StorageLensBucketLevel                      `pulumi:"bucketLevel"`
	DetailedStatusCodesMetrics      *StorageLensDetailedStatusCodesMetrics      `pulumi:"detailedStatusCodesMetrics"`
	StorageLensGroupLevel           *StorageLensGroupLevel                      `pulumi:"storageLensGroupLevel"`
}

// StorageLensAccountLevelInput is an input type that accepts StorageLensAccountLevelArgs and StorageLensAccountLevelOutput values.
// You can construct a concrete instance of `StorageLensAccountLevelInput` via:
//
//	StorageLensAccountLevelArgs{...}
type StorageLensAccountLevelInput interface {
	pulumi.Input

	ToStorageLensAccountLevelOutput() StorageLensAccountLevelOutput
	ToStorageLensAccountLevelOutputWithContext(context.Context) StorageLensAccountLevelOutput
}

// Account-level metrics configurations.
type StorageLensAccountLevelArgs struct {
	ActivityMetrics                 StorageLensActivityMetricsPtrInput                 `pulumi:"activityMetrics"`
	AdvancedCostOptimizationMetrics StorageLensAdvancedCostOptimizationMetricsPtrInput `pulumi:"advancedCostOptimizationMetrics"`
	AdvancedDataProtectionMetrics   StorageLensAdvancedDataProtectionMetricsPtrInput   `pulumi:"advancedDataProtectionMetrics"`
	BucketLevel                     StorageLensBucketLevelInput                        `pulumi:"bucketLevel"`
	DetailedStatusCodesMetrics      StorageLensDetailedStatusCodesMetricsPtrInput      `pulumi:"detailedStatusCodesMetrics"`
	StorageLensGroupLevel           StorageLensGroupLevelPtrInput                      `pulumi:"storageLensGroupLevel"`
}

func (StorageLensAccountLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAccountLevel)(nil)).Elem()
}

func (i StorageLensAccountLevelArgs) ToStorageLensAccountLevelOutput() StorageLensAccountLevelOutput {
	return i.ToStorageLensAccountLevelOutputWithContext(context.Background())
}

func (i StorageLensAccountLevelArgs) ToStorageLensAccountLevelOutputWithContext(ctx context.Context) StorageLensAccountLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAccountLevelOutput)
}

// Account-level metrics configurations.
type StorageLensAccountLevelOutput struct{ *pulumi.OutputState }

func (StorageLensAccountLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAccountLevel)(nil)).Elem()
}

func (o StorageLensAccountLevelOutput) ToStorageLensAccountLevelOutput() StorageLensAccountLevelOutput {
	return o
}

func (o StorageLensAccountLevelOutput) ToStorageLensAccountLevelOutputWithContext(ctx context.Context) StorageLensAccountLevelOutput {
	return o
}

func (o StorageLensAccountLevelOutput) ActivityMetrics() StorageLensActivityMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) *StorageLensActivityMetrics { return v.ActivityMetrics }).(StorageLensActivityMetricsPtrOutput)
}

func (o StorageLensAccountLevelOutput) AdvancedCostOptimizationMetrics() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) *StorageLensAdvancedCostOptimizationMetrics {
		return v.AdvancedCostOptimizationMetrics
	}).(StorageLensAdvancedCostOptimizationMetricsPtrOutput)
}

func (o StorageLensAccountLevelOutput) AdvancedDataProtectionMetrics() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) *StorageLensAdvancedDataProtectionMetrics {
		return v.AdvancedDataProtectionMetrics
	}).(StorageLensAdvancedDataProtectionMetricsPtrOutput)
}

func (o StorageLensAccountLevelOutput) BucketLevel() StorageLensBucketLevelOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) StorageLensBucketLevel { return v.BucketLevel }).(StorageLensBucketLevelOutput)
}

func (o StorageLensAccountLevelOutput) DetailedStatusCodesMetrics() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) *StorageLensDetailedStatusCodesMetrics {
		return v.DetailedStatusCodesMetrics
	}).(StorageLensDetailedStatusCodesMetricsPtrOutput)
}

func (o StorageLensAccountLevelOutput) StorageLensGroupLevel() StorageLensGroupLevelPtrOutput {
	return o.ApplyT(func(v StorageLensAccountLevel) *StorageLensGroupLevel { return v.StorageLensGroupLevel }).(StorageLensGroupLevelPtrOutput)
}

// Enables activity metrics.
type StorageLensActivityMetrics struct {
	// Specifies whether activity metrics are enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// StorageLensActivityMetricsInput is an input type that accepts StorageLensActivityMetricsArgs and StorageLensActivityMetricsOutput values.
// You can construct a concrete instance of `StorageLensActivityMetricsInput` via:
//
//	StorageLensActivityMetricsArgs{...}
type StorageLensActivityMetricsInput interface {
	pulumi.Input

	ToStorageLensActivityMetricsOutput() StorageLensActivityMetricsOutput
	ToStorageLensActivityMetricsOutputWithContext(context.Context) StorageLensActivityMetricsOutput
}

// Enables activity metrics.
type StorageLensActivityMetricsArgs struct {
	// Specifies whether activity metrics are enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (StorageLensActivityMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensActivityMetrics)(nil)).Elem()
}

func (i StorageLensActivityMetricsArgs) ToStorageLensActivityMetricsOutput() StorageLensActivityMetricsOutput {
	return i.ToStorageLensActivityMetricsOutputWithContext(context.Background())
}

func (i StorageLensActivityMetricsArgs) ToStorageLensActivityMetricsOutputWithContext(ctx context.Context) StorageLensActivityMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensActivityMetricsOutput)
}

func (i StorageLensActivityMetricsArgs) ToStorageLensActivityMetricsPtrOutput() StorageLensActivityMetricsPtrOutput {
	return i.ToStorageLensActivityMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensActivityMetricsArgs) ToStorageLensActivityMetricsPtrOutputWithContext(ctx context.Context) StorageLensActivityMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensActivityMetricsOutput).ToStorageLensActivityMetricsPtrOutputWithContext(ctx)
}

// StorageLensActivityMetricsPtrInput is an input type that accepts StorageLensActivityMetricsArgs, StorageLensActivityMetricsPtr and StorageLensActivityMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensActivityMetricsPtrInput` via:
//
//	        StorageLensActivityMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensActivityMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensActivityMetricsPtrOutput() StorageLensActivityMetricsPtrOutput
	ToStorageLensActivityMetricsPtrOutputWithContext(context.Context) StorageLensActivityMetricsPtrOutput
}

type storageLensActivityMetricsPtrType StorageLensActivityMetricsArgs

func StorageLensActivityMetricsPtr(v *StorageLensActivityMetricsArgs) StorageLensActivityMetricsPtrInput {
	return (*storageLensActivityMetricsPtrType)(v)
}

func (*storageLensActivityMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensActivityMetrics)(nil)).Elem()
}

func (i *storageLensActivityMetricsPtrType) ToStorageLensActivityMetricsPtrOutput() StorageLensActivityMetricsPtrOutput {
	return i.ToStorageLensActivityMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensActivityMetricsPtrType) ToStorageLensActivityMetricsPtrOutputWithContext(ctx context.Context) StorageLensActivityMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensActivityMetricsPtrOutput)
}

// Enables activity metrics.
type StorageLensActivityMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensActivityMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensActivityMetrics)(nil)).Elem()
}

func (o StorageLensActivityMetricsOutput) ToStorageLensActivityMetricsOutput() StorageLensActivityMetricsOutput {
	return o
}

func (o StorageLensActivityMetricsOutput) ToStorageLensActivityMetricsOutputWithContext(ctx context.Context) StorageLensActivityMetricsOutput {
	return o
}

func (o StorageLensActivityMetricsOutput) ToStorageLensActivityMetricsPtrOutput() StorageLensActivityMetricsPtrOutput {
	return o.ToStorageLensActivityMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensActivityMetricsOutput) ToStorageLensActivityMetricsPtrOutputWithContext(ctx context.Context) StorageLensActivityMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensActivityMetrics) *StorageLensActivityMetrics {
		return &v
	}).(StorageLensActivityMetricsPtrOutput)
}

// Specifies whether activity metrics are enabled or disabled.
func (o StorageLensActivityMetricsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageLensActivityMetrics) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type StorageLensActivityMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensActivityMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensActivityMetrics)(nil)).Elem()
}

func (o StorageLensActivityMetricsPtrOutput) ToStorageLensActivityMetricsPtrOutput() StorageLensActivityMetricsPtrOutput {
	return o
}

func (o StorageLensActivityMetricsPtrOutput) ToStorageLensActivityMetricsPtrOutputWithContext(ctx context.Context) StorageLensActivityMetricsPtrOutput {
	return o
}

func (o StorageLensActivityMetricsPtrOutput) Elem() StorageLensActivityMetricsOutput {
	return o.ApplyT(func(v *StorageLensActivityMetrics) StorageLensActivityMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensActivityMetrics
		return ret
	}).(StorageLensActivityMetricsOutput)
}

// Specifies whether activity metrics are enabled or disabled.
func (o StorageLensActivityMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensActivityMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Enables advanced cost optimization metrics.
type StorageLensAdvancedCostOptimizationMetrics struct {
	// Specifies whether advanced cost optimization metrics are enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// StorageLensAdvancedCostOptimizationMetricsInput is an input type that accepts StorageLensAdvancedCostOptimizationMetricsArgs and StorageLensAdvancedCostOptimizationMetricsOutput values.
// You can construct a concrete instance of `StorageLensAdvancedCostOptimizationMetricsInput` via:
//
//	StorageLensAdvancedCostOptimizationMetricsArgs{...}
type StorageLensAdvancedCostOptimizationMetricsInput interface {
	pulumi.Input

	ToStorageLensAdvancedCostOptimizationMetricsOutput() StorageLensAdvancedCostOptimizationMetricsOutput
	ToStorageLensAdvancedCostOptimizationMetricsOutputWithContext(context.Context) StorageLensAdvancedCostOptimizationMetricsOutput
}

// Enables advanced cost optimization metrics.
type StorageLensAdvancedCostOptimizationMetricsArgs struct {
	// Specifies whether advanced cost optimization metrics are enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (StorageLensAdvancedCostOptimizationMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (i StorageLensAdvancedCostOptimizationMetricsArgs) ToStorageLensAdvancedCostOptimizationMetricsOutput() StorageLensAdvancedCostOptimizationMetricsOutput {
	return i.ToStorageLensAdvancedCostOptimizationMetricsOutputWithContext(context.Background())
}

func (i StorageLensAdvancedCostOptimizationMetricsArgs) ToStorageLensAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedCostOptimizationMetricsOutput)
}

func (i StorageLensAdvancedCostOptimizationMetricsArgs) ToStorageLensAdvancedCostOptimizationMetricsPtrOutput() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return i.ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensAdvancedCostOptimizationMetricsArgs) ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedCostOptimizationMetricsOutput).ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(ctx)
}

// StorageLensAdvancedCostOptimizationMetricsPtrInput is an input type that accepts StorageLensAdvancedCostOptimizationMetricsArgs, StorageLensAdvancedCostOptimizationMetricsPtr and StorageLensAdvancedCostOptimizationMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensAdvancedCostOptimizationMetricsPtrInput` via:
//
//	        StorageLensAdvancedCostOptimizationMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensAdvancedCostOptimizationMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensAdvancedCostOptimizationMetricsPtrOutput() StorageLensAdvancedCostOptimizationMetricsPtrOutput
	ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(context.Context) StorageLensAdvancedCostOptimizationMetricsPtrOutput
}

type storageLensAdvancedCostOptimizationMetricsPtrType StorageLensAdvancedCostOptimizationMetricsArgs

func StorageLensAdvancedCostOptimizationMetricsPtr(v *StorageLensAdvancedCostOptimizationMetricsArgs) StorageLensAdvancedCostOptimizationMetricsPtrInput {
	return (*storageLensAdvancedCostOptimizationMetricsPtrType)(v)
}

func (*storageLensAdvancedCostOptimizationMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (i *storageLensAdvancedCostOptimizationMetricsPtrType) ToStorageLensAdvancedCostOptimizationMetricsPtrOutput() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return i.ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensAdvancedCostOptimizationMetricsPtrType) ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedCostOptimizationMetricsPtrOutput)
}

// Enables advanced cost optimization metrics.
type StorageLensAdvancedCostOptimizationMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensAdvancedCostOptimizationMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (o StorageLensAdvancedCostOptimizationMetricsOutput) ToStorageLensAdvancedCostOptimizationMetricsOutput() StorageLensAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensAdvancedCostOptimizationMetricsOutput) ToStorageLensAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensAdvancedCostOptimizationMetricsOutput) ToStorageLensAdvancedCostOptimizationMetricsPtrOutput() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o.ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensAdvancedCostOptimizationMetricsOutput) ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensAdvancedCostOptimizationMetrics) *StorageLensAdvancedCostOptimizationMetrics {
		return &v
	}).(StorageLensAdvancedCostOptimizationMetricsPtrOutput)
}

// Specifies whether advanced cost optimization metrics are enabled or disabled.
func (o StorageLensAdvancedCostOptimizationMetricsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageLensAdvancedCostOptimizationMetrics) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type StorageLensAdvancedCostOptimizationMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensAdvancedCostOptimizationMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (o StorageLensAdvancedCostOptimizationMetricsPtrOutput) ToStorageLensAdvancedCostOptimizationMetricsPtrOutput() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o
}

func (o StorageLensAdvancedCostOptimizationMetricsPtrOutput) ToStorageLensAdvancedCostOptimizationMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o
}

func (o StorageLensAdvancedCostOptimizationMetricsPtrOutput) Elem() StorageLensAdvancedCostOptimizationMetricsOutput {
	return o.ApplyT(func(v *StorageLensAdvancedCostOptimizationMetrics) StorageLensAdvancedCostOptimizationMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensAdvancedCostOptimizationMetrics
		return ret
	}).(StorageLensAdvancedCostOptimizationMetricsOutput)
}

// Specifies whether advanced cost optimization metrics are enabled or disabled.
func (o StorageLensAdvancedCostOptimizationMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensAdvancedCostOptimizationMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Enables advanced data protection metrics.
type StorageLensAdvancedDataProtectionMetrics struct {
	// Specifies whether advanced data protection metrics are enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// StorageLensAdvancedDataProtectionMetricsInput is an input type that accepts StorageLensAdvancedDataProtectionMetricsArgs and StorageLensAdvancedDataProtectionMetricsOutput values.
// You can construct a concrete instance of `StorageLensAdvancedDataProtectionMetricsInput` via:
//
//	StorageLensAdvancedDataProtectionMetricsArgs{...}
type StorageLensAdvancedDataProtectionMetricsInput interface {
	pulumi.Input

	ToStorageLensAdvancedDataProtectionMetricsOutput() StorageLensAdvancedDataProtectionMetricsOutput
	ToStorageLensAdvancedDataProtectionMetricsOutputWithContext(context.Context) StorageLensAdvancedDataProtectionMetricsOutput
}

// Enables advanced data protection metrics.
type StorageLensAdvancedDataProtectionMetricsArgs struct {
	// Specifies whether advanced data protection metrics are enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (StorageLensAdvancedDataProtectionMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (i StorageLensAdvancedDataProtectionMetricsArgs) ToStorageLensAdvancedDataProtectionMetricsOutput() StorageLensAdvancedDataProtectionMetricsOutput {
	return i.ToStorageLensAdvancedDataProtectionMetricsOutputWithContext(context.Background())
}

func (i StorageLensAdvancedDataProtectionMetricsArgs) ToStorageLensAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedDataProtectionMetricsOutput)
}

func (i StorageLensAdvancedDataProtectionMetricsArgs) ToStorageLensAdvancedDataProtectionMetricsPtrOutput() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return i.ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensAdvancedDataProtectionMetricsArgs) ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedDataProtectionMetricsOutput).ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(ctx)
}

// StorageLensAdvancedDataProtectionMetricsPtrInput is an input type that accepts StorageLensAdvancedDataProtectionMetricsArgs, StorageLensAdvancedDataProtectionMetricsPtr and StorageLensAdvancedDataProtectionMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensAdvancedDataProtectionMetricsPtrInput` via:
//
//	        StorageLensAdvancedDataProtectionMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensAdvancedDataProtectionMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensAdvancedDataProtectionMetricsPtrOutput() StorageLensAdvancedDataProtectionMetricsPtrOutput
	ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(context.Context) StorageLensAdvancedDataProtectionMetricsPtrOutput
}

type storageLensAdvancedDataProtectionMetricsPtrType StorageLensAdvancedDataProtectionMetricsArgs

func StorageLensAdvancedDataProtectionMetricsPtr(v *StorageLensAdvancedDataProtectionMetricsArgs) StorageLensAdvancedDataProtectionMetricsPtrInput {
	return (*storageLensAdvancedDataProtectionMetricsPtrType)(v)
}

func (*storageLensAdvancedDataProtectionMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (i *storageLensAdvancedDataProtectionMetricsPtrType) ToStorageLensAdvancedDataProtectionMetricsPtrOutput() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return i.ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensAdvancedDataProtectionMetricsPtrType) ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAdvancedDataProtectionMetricsPtrOutput)
}

// Enables advanced data protection metrics.
type StorageLensAdvancedDataProtectionMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensAdvancedDataProtectionMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (o StorageLensAdvancedDataProtectionMetricsOutput) ToStorageLensAdvancedDataProtectionMetricsOutput() StorageLensAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensAdvancedDataProtectionMetricsOutput) ToStorageLensAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensAdvancedDataProtectionMetricsOutput) ToStorageLensAdvancedDataProtectionMetricsPtrOutput() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o.ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensAdvancedDataProtectionMetricsOutput) ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensAdvancedDataProtectionMetrics) *StorageLensAdvancedDataProtectionMetrics {
		return &v
	}).(StorageLensAdvancedDataProtectionMetricsPtrOutput)
}

// Specifies whether advanced data protection metrics are enabled or disabled.
func (o StorageLensAdvancedDataProtectionMetricsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageLensAdvancedDataProtectionMetrics) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type StorageLensAdvancedDataProtectionMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensAdvancedDataProtectionMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (o StorageLensAdvancedDataProtectionMetricsPtrOutput) ToStorageLensAdvancedDataProtectionMetricsPtrOutput() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o
}

func (o StorageLensAdvancedDataProtectionMetricsPtrOutput) ToStorageLensAdvancedDataProtectionMetricsPtrOutputWithContext(ctx context.Context) StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o
}

func (o StorageLensAdvancedDataProtectionMetricsPtrOutput) Elem() StorageLensAdvancedDataProtectionMetricsOutput {
	return o.ApplyT(func(v *StorageLensAdvancedDataProtectionMetrics) StorageLensAdvancedDataProtectionMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensAdvancedDataProtectionMetrics
		return ret
	}).(StorageLensAdvancedDataProtectionMetricsOutput)
}

// Specifies whether advanced data protection metrics are enabled or disabled.
func (o StorageLensAdvancedDataProtectionMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensAdvancedDataProtectionMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.
type StorageLensAwsOrg struct {
	Arn string `pulumi:"arn"`
}

// StorageLensAwsOrgInput is an input type that accepts StorageLensAwsOrgArgs and StorageLensAwsOrgOutput values.
// You can construct a concrete instance of `StorageLensAwsOrgInput` via:
//
//	StorageLensAwsOrgArgs{...}
type StorageLensAwsOrgInput interface {
	pulumi.Input

	ToStorageLensAwsOrgOutput() StorageLensAwsOrgOutput
	ToStorageLensAwsOrgOutputWithContext(context.Context) StorageLensAwsOrgOutput
}

// The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.
type StorageLensAwsOrgArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (StorageLensAwsOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAwsOrg)(nil)).Elem()
}

func (i StorageLensAwsOrgArgs) ToStorageLensAwsOrgOutput() StorageLensAwsOrgOutput {
	return i.ToStorageLensAwsOrgOutputWithContext(context.Background())
}

func (i StorageLensAwsOrgArgs) ToStorageLensAwsOrgOutputWithContext(ctx context.Context) StorageLensAwsOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAwsOrgOutput)
}

func (i StorageLensAwsOrgArgs) ToStorageLensAwsOrgPtrOutput() StorageLensAwsOrgPtrOutput {
	return i.ToStorageLensAwsOrgPtrOutputWithContext(context.Background())
}

func (i StorageLensAwsOrgArgs) ToStorageLensAwsOrgPtrOutputWithContext(ctx context.Context) StorageLensAwsOrgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAwsOrgOutput).ToStorageLensAwsOrgPtrOutputWithContext(ctx)
}

// StorageLensAwsOrgPtrInput is an input type that accepts StorageLensAwsOrgArgs, StorageLensAwsOrgPtr and StorageLensAwsOrgPtrOutput values.
// You can construct a concrete instance of `StorageLensAwsOrgPtrInput` via:
//
//	        StorageLensAwsOrgArgs{...}
//
//	or:
//
//	        nil
type StorageLensAwsOrgPtrInput interface {
	pulumi.Input

	ToStorageLensAwsOrgPtrOutput() StorageLensAwsOrgPtrOutput
	ToStorageLensAwsOrgPtrOutputWithContext(context.Context) StorageLensAwsOrgPtrOutput
}

type storageLensAwsOrgPtrType StorageLensAwsOrgArgs

func StorageLensAwsOrgPtr(v *StorageLensAwsOrgArgs) StorageLensAwsOrgPtrInput {
	return (*storageLensAwsOrgPtrType)(v)
}

func (*storageLensAwsOrgPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAwsOrg)(nil)).Elem()
}

func (i *storageLensAwsOrgPtrType) ToStorageLensAwsOrgPtrOutput() StorageLensAwsOrgPtrOutput {
	return i.ToStorageLensAwsOrgPtrOutputWithContext(context.Background())
}

func (i *storageLensAwsOrgPtrType) ToStorageLensAwsOrgPtrOutputWithContext(ctx context.Context) StorageLensAwsOrgPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensAwsOrgPtrOutput)
}

// The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.
type StorageLensAwsOrgOutput struct{ *pulumi.OutputState }

func (StorageLensAwsOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensAwsOrg)(nil)).Elem()
}

func (o StorageLensAwsOrgOutput) ToStorageLensAwsOrgOutput() StorageLensAwsOrgOutput {
	return o
}

func (o StorageLensAwsOrgOutput) ToStorageLensAwsOrgOutputWithContext(ctx context.Context) StorageLensAwsOrgOutput {
	return o
}

func (o StorageLensAwsOrgOutput) ToStorageLensAwsOrgPtrOutput() StorageLensAwsOrgPtrOutput {
	return o.ToStorageLensAwsOrgPtrOutputWithContext(context.Background())
}

func (o StorageLensAwsOrgOutput) ToStorageLensAwsOrgPtrOutputWithContext(ctx context.Context) StorageLensAwsOrgPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensAwsOrg) *StorageLensAwsOrg {
		return &v
	}).(StorageLensAwsOrgPtrOutput)
}

func (o StorageLensAwsOrgOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensAwsOrg) string { return v.Arn }).(pulumi.StringOutput)
}

type StorageLensAwsOrgPtrOutput struct{ *pulumi.OutputState }

func (StorageLensAwsOrgPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensAwsOrg)(nil)).Elem()
}

func (o StorageLensAwsOrgPtrOutput) ToStorageLensAwsOrgPtrOutput() StorageLensAwsOrgPtrOutput {
	return o
}

func (o StorageLensAwsOrgPtrOutput) ToStorageLensAwsOrgPtrOutputWithContext(ctx context.Context) StorageLensAwsOrgPtrOutput {
	return o
}

func (o StorageLensAwsOrgPtrOutput) Elem() StorageLensAwsOrgOutput {
	return o.ApplyT(func(v *StorageLensAwsOrg) StorageLensAwsOrg {
		if v != nil {
			return *v
		}
		var ret StorageLensAwsOrg
		return ret
	}).(StorageLensAwsOrgOutput)
}

func (o StorageLensAwsOrgPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageLensAwsOrg) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// Bucket-level metrics configurations.
type StorageLensBucketLevel struct {
	ActivityMetrics                 *StorageLensActivityMetrics                 `pulumi:"activityMetrics"`
	AdvancedCostOptimizationMetrics *StorageLensAdvancedCostOptimizationMetrics `pulumi:"advancedCostOptimizationMetrics"`
	AdvancedDataProtectionMetrics   *StorageLensAdvancedDataProtectionMetrics   `pulumi:"advancedDataProtectionMetrics"`
	DetailedStatusCodesMetrics      *StorageLensDetailedStatusCodesMetrics      `pulumi:"detailedStatusCodesMetrics"`
	PrefixLevel                     *StorageLensPrefixLevel                     `pulumi:"prefixLevel"`
}

// StorageLensBucketLevelInput is an input type that accepts StorageLensBucketLevelArgs and StorageLensBucketLevelOutput values.
// You can construct a concrete instance of `StorageLensBucketLevelInput` via:
//
//	StorageLensBucketLevelArgs{...}
type StorageLensBucketLevelInput interface {
	pulumi.Input

	ToStorageLensBucketLevelOutput() StorageLensBucketLevelOutput
	ToStorageLensBucketLevelOutputWithContext(context.Context) StorageLensBucketLevelOutput
}

// Bucket-level metrics configurations.
type StorageLensBucketLevelArgs struct {
	ActivityMetrics                 StorageLensActivityMetricsPtrInput                 `pulumi:"activityMetrics"`
	AdvancedCostOptimizationMetrics StorageLensAdvancedCostOptimizationMetricsPtrInput `pulumi:"advancedCostOptimizationMetrics"`
	AdvancedDataProtectionMetrics   StorageLensAdvancedDataProtectionMetricsPtrInput   `pulumi:"advancedDataProtectionMetrics"`
	DetailedStatusCodesMetrics      StorageLensDetailedStatusCodesMetricsPtrInput      `pulumi:"detailedStatusCodesMetrics"`
	PrefixLevel                     StorageLensPrefixLevelPtrInput                     `pulumi:"prefixLevel"`
}

func (StorageLensBucketLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensBucketLevel)(nil)).Elem()
}

func (i StorageLensBucketLevelArgs) ToStorageLensBucketLevelOutput() StorageLensBucketLevelOutput {
	return i.ToStorageLensBucketLevelOutputWithContext(context.Background())
}

func (i StorageLensBucketLevelArgs) ToStorageLensBucketLevelOutputWithContext(ctx context.Context) StorageLensBucketLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensBucketLevelOutput)
}

// Bucket-level metrics configurations.
type StorageLensBucketLevelOutput struct{ *pulumi.OutputState }

func (StorageLensBucketLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensBucketLevel)(nil)).Elem()
}

func (o StorageLensBucketLevelOutput) ToStorageLensBucketLevelOutput() StorageLensBucketLevelOutput {
	return o
}

func (o StorageLensBucketLevelOutput) ToStorageLensBucketLevelOutputWithContext(ctx context.Context) StorageLensBucketLevelOutput {
	return o
}

func (o StorageLensBucketLevelOutput) ActivityMetrics() StorageLensActivityMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensBucketLevel) *StorageLensActivityMetrics { return v.ActivityMetrics }).(StorageLensActivityMetricsPtrOutput)
}

func (o StorageLensBucketLevelOutput) AdvancedCostOptimizationMetrics() StorageLensAdvancedCostOptimizationMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensBucketLevel) *StorageLensAdvancedCostOptimizationMetrics {
		return v.AdvancedCostOptimizationMetrics
	}).(StorageLensAdvancedCostOptimizationMetricsPtrOutput)
}

func (o StorageLensBucketLevelOutput) AdvancedDataProtectionMetrics() StorageLensAdvancedDataProtectionMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensBucketLevel) *StorageLensAdvancedDataProtectionMetrics {
		return v.AdvancedDataProtectionMetrics
	}).(StorageLensAdvancedDataProtectionMetricsPtrOutput)
}

func (o StorageLensBucketLevelOutput) DetailedStatusCodesMetrics() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensBucketLevel) *StorageLensDetailedStatusCodesMetrics {
		return v.DetailedStatusCodesMetrics
	}).(StorageLensDetailedStatusCodesMetricsPtrOutput)
}

func (o StorageLensBucketLevelOutput) PrefixLevel() StorageLensPrefixLevelPtrOutput {
	return o.ApplyT(func(v StorageLensBucketLevel) *StorageLensPrefixLevel { return v.PrefixLevel }).(StorageLensPrefixLevelPtrOutput)
}

// S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.
type StorageLensBucketsAndRegions struct {
	Buckets []string `pulumi:"buckets"`
	Regions []string `pulumi:"regions"`
}

// StorageLensBucketsAndRegionsInput is an input type that accepts StorageLensBucketsAndRegionsArgs and StorageLensBucketsAndRegionsOutput values.
// You can construct a concrete instance of `StorageLensBucketsAndRegionsInput` via:
//
//	StorageLensBucketsAndRegionsArgs{...}
type StorageLensBucketsAndRegionsInput interface {
	pulumi.Input

	ToStorageLensBucketsAndRegionsOutput() StorageLensBucketsAndRegionsOutput
	ToStorageLensBucketsAndRegionsOutputWithContext(context.Context) StorageLensBucketsAndRegionsOutput
}

// S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.
type StorageLensBucketsAndRegionsArgs struct {
	Buckets pulumi.StringArrayInput `pulumi:"buckets"`
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (StorageLensBucketsAndRegionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensBucketsAndRegions)(nil)).Elem()
}

func (i StorageLensBucketsAndRegionsArgs) ToStorageLensBucketsAndRegionsOutput() StorageLensBucketsAndRegionsOutput {
	return i.ToStorageLensBucketsAndRegionsOutputWithContext(context.Background())
}

func (i StorageLensBucketsAndRegionsArgs) ToStorageLensBucketsAndRegionsOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensBucketsAndRegionsOutput)
}

func (i StorageLensBucketsAndRegionsArgs) ToStorageLensBucketsAndRegionsPtrOutput() StorageLensBucketsAndRegionsPtrOutput {
	return i.ToStorageLensBucketsAndRegionsPtrOutputWithContext(context.Background())
}

func (i StorageLensBucketsAndRegionsArgs) ToStorageLensBucketsAndRegionsPtrOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensBucketsAndRegionsOutput).ToStorageLensBucketsAndRegionsPtrOutputWithContext(ctx)
}

// StorageLensBucketsAndRegionsPtrInput is an input type that accepts StorageLensBucketsAndRegionsArgs, StorageLensBucketsAndRegionsPtr and StorageLensBucketsAndRegionsPtrOutput values.
// You can construct a concrete instance of `StorageLensBucketsAndRegionsPtrInput` via:
//
//	        StorageLensBucketsAndRegionsArgs{...}
//
//	or:
//
//	        nil
type StorageLensBucketsAndRegionsPtrInput interface {
	pulumi.Input

	ToStorageLensBucketsAndRegionsPtrOutput() StorageLensBucketsAndRegionsPtrOutput
	ToStorageLensBucketsAndRegionsPtrOutputWithContext(context.Context) StorageLensBucketsAndRegionsPtrOutput
}

type storageLensBucketsAndRegionsPtrType StorageLensBucketsAndRegionsArgs

func StorageLensBucketsAndRegionsPtr(v *StorageLensBucketsAndRegionsArgs) StorageLensBucketsAndRegionsPtrInput {
	return (*storageLensBucketsAndRegionsPtrType)(v)
}

func (*storageLensBucketsAndRegionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensBucketsAndRegions)(nil)).Elem()
}

func (i *storageLensBucketsAndRegionsPtrType) ToStorageLensBucketsAndRegionsPtrOutput() StorageLensBucketsAndRegionsPtrOutput {
	return i.ToStorageLensBucketsAndRegionsPtrOutputWithContext(context.Background())
}

func (i *storageLensBucketsAndRegionsPtrType) ToStorageLensBucketsAndRegionsPtrOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensBucketsAndRegionsPtrOutput)
}

// S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.
type StorageLensBucketsAndRegionsOutput struct{ *pulumi.OutputState }

func (StorageLensBucketsAndRegionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensBucketsAndRegions)(nil)).Elem()
}

func (o StorageLensBucketsAndRegionsOutput) ToStorageLensBucketsAndRegionsOutput() StorageLensBucketsAndRegionsOutput {
	return o
}

func (o StorageLensBucketsAndRegionsOutput) ToStorageLensBucketsAndRegionsOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsOutput {
	return o
}

func (o StorageLensBucketsAndRegionsOutput) ToStorageLensBucketsAndRegionsPtrOutput() StorageLensBucketsAndRegionsPtrOutput {
	return o.ToStorageLensBucketsAndRegionsPtrOutputWithContext(context.Background())
}

func (o StorageLensBucketsAndRegionsOutput) ToStorageLensBucketsAndRegionsPtrOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensBucketsAndRegions) *StorageLensBucketsAndRegions {
		return &v
	}).(StorageLensBucketsAndRegionsPtrOutput)
}

func (o StorageLensBucketsAndRegionsOutput) Buckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensBucketsAndRegions) []string { return v.Buckets }).(pulumi.StringArrayOutput)
}

func (o StorageLensBucketsAndRegionsOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensBucketsAndRegions) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type StorageLensBucketsAndRegionsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensBucketsAndRegionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensBucketsAndRegions)(nil)).Elem()
}

func (o StorageLensBucketsAndRegionsPtrOutput) ToStorageLensBucketsAndRegionsPtrOutput() StorageLensBucketsAndRegionsPtrOutput {
	return o
}

func (o StorageLensBucketsAndRegionsPtrOutput) ToStorageLensBucketsAndRegionsPtrOutputWithContext(ctx context.Context) StorageLensBucketsAndRegionsPtrOutput {
	return o
}

func (o StorageLensBucketsAndRegionsPtrOutput) Elem() StorageLensBucketsAndRegionsOutput {
	return o.ApplyT(func(v *StorageLensBucketsAndRegions) StorageLensBucketsAndRegions {
		if v != nil {
			return *v
		}
		var ret StorageLensBucketsAndRegions
		return ret
	}).(StorageLensBucketsAndRegionsOutput)
}

func (o StorageLensBucketsAndRegionsPtrOutput) Buckets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensBucketsAndRegions) []string {
		if v == nil {
			return nil
		}
		return v.Buckets
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensBucketsAndRegionsPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensBucketsAndRegions) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// CloudWatch metrics settings for the Amazon S3 Storage Lens metrics export.
type StorageLensCloudWatchMetrics struct {
	// Specifies whether CloudWatch metrics are enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
}

// StorageLensCloudWatchMetricsInput is an input type that accepts StorageLensCloudWatchMetricsArgs and StorageLensCloudWatchMetricsOutput values.
// You can construct a concrete instance of `StorageLensCloudWatchMetricsInput` via:
//
//	StorageLensCloudWatchMetricsArgs{...}
type StorageLensCloudWatchMetricsInput interface {
	pulumi.Input

	ToStorageLensCloudWatchMetricsOutput() StorageLensCloudWatchMetricsOutput
	ToStorageLensCloudWatchMetricsOutputWithContext(context.Context) StorageLensCloudWatchMetricsOutput
}

// CloudWatch metrics settings for the Amazon S3 Storage Lens metrics export.
type StorageLensCloudWatchMetricsArgs struct {
	// Specifies whether CloudWatch metrics are enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (StorageLensCloudWatchMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensCloudWatchMetrics)(nil)).Elem()
}

func (i StorageLensCloudWatchMetricsArgs) ToStorageLensCloudWatchMetricsOutput() StorageLensCloudWatchMetricsOutput {
	return i.ToStorageLensCloudWatchMetricsOutputWithContext(context.Background())
}

func (i StorageLensCloudWatchMetricsArgs) ToStorageLensCloudWatchMetricsOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensCloudWatchMetricsOutput)
}

func (i StorageLensCloudWatchMetricsArgs) ToStorageLensCloudWatchMetricsPtrOutput() StorageLensCloudWatchMetricsPtrOutput {
	return i.ToStorageLensCloudWatchMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensCloudWatchMetricsArgs) ToStorageLensCloudWatchMetricsPtrOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensCloudWatchMetricsOutput).ToStorageLensCloudWatchMetricsPtrOutputWithContext(ctx)
}

// StorageLensCloudWatchMetricsPtrInput is an input type that accepts StorageLensCloudWatchMetricsArgs, StorageLensCloudWatchMetricsPtr and StorageLensCloudWatchMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensCloudWatchMetricsPtrInput` via:
//
//	        StorageLensCloudWatchMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensCloudWatchMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensCloudWatchMetricsPtrOutput() StorageLensCloudWatchMetricsPtrOutput
	ToStorageLensCloudWatchMetricsPtrOutputWithContext(context.Context) StorageLensCloudWatchMetricsPtrOutput
}

type storageLensCloudWatchMetricsPtrType StorageLensCloudWatchMetricsArgs

func StorageLensCloudWatchMetricsPtr(v *StorageLensCloudWatchMetricsArgs) StorageLensCloudWatchMetricsPtrInput {
	return (*storageLensCloudWatchMetricsPtrType)(v)
}

func (*storageLensCloudWatchMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensCloudWatchMetrics)(nil)).Elem()
}

func (i *storageLensCloudWatchMetricsPtrType) ToStorageLensCloudWatchMetricsPtrOutput() StorageLensCloudWatchMetricsPtrOutput {
	return i.ToStorageLensCloudWatchMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensCloudWatchMetricsPtrType) ToStorageLensCloudWatchMetricsPtrOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensCloudWatchMetricsPtrOutput)
}

// CloudWatch metrics settings for the Amazon S3 Storage Lens metrics export.
type StorageLensCloudWatchMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensCloudWatchMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensCloudWatchMetrics)(nil)).Elem()
}

func (o StorageLensCloudWatchMetricsOutput) ToStorageLensCloudWatchMetricsOutput() StorageLensCloudWatchMetricsOutput {
	return o
}

func (o StorageLensCloudWatchMetricsOutput) ToStorageLensCloudWatchMetricsOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsOutput {
	return o
}

func (o StorageLensCloudWatchMetricsOutput) ToStorageLensCloudWatchMetricsPtrOutput() StorageLensCloudWatchMetricsPtrOutput {
	return o.ToStorageLensCloudWatchMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensCloudWatchMetricsOutput) ToStorageLensCloudWatchMetricsPtrOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensCloudWatchMetrics) *StorageLensCloudWatchMetrics {
		return &v
	}).(StorageLensCloudWatchMetricsPtrOutput)
}

// Specifies whether CloudWatch metrics are enabled or disabled.
func (o StorageLensCloudWatchMetricsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageLensCloudWatchMetrics) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type StorageLensCloudWatchMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensCloudWatchMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensCloudWatchMetrics)(nil)).Elem()
}

func (o StorageLensCloudWatchMetricsPtrOutput) ToStorageLensCloudWatchMetricsPtrOutput() StorageLensCloudWatchMetricsPtrOutput {
	return o
}

func (o StorageLensCloudWatchMetricsPtrOutput) ToStorageLensCloudWatchMetricsPtrOutputWithContext(ctx context.Context) StorageLensCloudWatchMetricsPtrOutput {
	return o
}

func (o StorageLensCloudWatchMetricsPtrOutput) Elem() StorageLensCloudWatchMetricsOutput {
	return o.ApplyT(func(v *StorageLensCloudWatchMetrics) StorageLensCloudWatchMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensCloudWatchMetrics
		return ret
	}).(StorageLensCloudWatchMetricsOutput)
}

// Specifies whether CloudWatch metrics are enabled or disabled.
func (o StorageLensCloudWatchMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensCloudWatchMetrics) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the details of Amazon S3 Storage Lens configuration.
type StorageLensConfiguration struct {
	AccountLevel StorageLensAccountLevel       `pulumi:"accountLevel"`
	AwsOrg       *StorageLensAwsOrg            `pulumi:"awsOrg"`
	DataExport   *StorageLensDataExport        `pulumi:"dataExport"`
	Exclude      *StorageLensBucketsAndRegions `pulumi:"exclude"`
	Id           string                        `pulumi:"id"`
	Include      *StorageLensBucketsAndRegions `pulumi:"include"`
	// Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The ARN for the Amazon S3 Storage Lens configuration.
	StorageLensArn *string `pulumi:"storageLensArn"`
}

// StorageLensConfigurationInput is an input type that accepts StorageLensConfigurationArgs and StorageLensConfigurationOutput values.
// You can construct a concrete instance of `StorageLensConfigurationInput` via:
//
//	StorageLensConfigurationArgs{...}
type StorageLensConfigurationInput interface {
	pulumi.Input

	ToStorageLensConfigurationOutput() StorageLensConfigurationOutput
	ToStorageLensConfigurationOutputWithContext(context.Context) StorageLensConfigurationOutput
}

// Specifies the details of Amazon S3 Storage Lens configuration.
type StorageLensConfigurationArgs struct {
	AccountLevel StorageLensAccountLevelInput         `pulumi:"accountLevel"`
	AwsOrg       StorageLensAwsOrgPtrInput            `pulumi:"awsOrg"`
	DataExport   StorageLensDataExportPtrInput        `pulumi:"dataExport"`
	Exclude      StorageLensBucketsAndRegionsPtrInput `pulumi:"exclude"`
	Id           pulumi.StringInput                   `pulumi:"id"`
	Include      StorageLensBucketsAndRegionsPtrInput `pulumi:"include"`
	// Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The ARN for the Amazon S3 Storage Lens configuration.
	StorageLensArn pulumi.StringPtrInput `pulumi:"storageLensArn"`
}

func (StorageLensConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfiguration)(nil)).Elem()
}

func (i StorageLensConfigurationArgs) ToStorageLensConfigurationOutput() StorageLensConfigurationOutput {
	return i.ToStorageLensConfigurationOutputWithContext(context.Background())
}

func (i StorageLensConfigurationArgs) ToStorageLensConfigurationOutputWithContext(ctx context.Context) StorageLensConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationOutput)
}

// Specifies the details of Amazon S3 Storage Lens configuration.
type StorageLensConfigurationOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfiguration)(nil)).Elem()
}

func (o StorageLensConfigurationOutput) ToStorageLensConfigurationOutput() StorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationOutput) ToStorageLensConfigurationOutputWithContext(ctx context.Context) StorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationOutput) AccountLevel() StorageLensAccountLevelOutput {
	return o.ApplyT(func(v StorageLensConfiguration) StorageLensAccountLevel { return v.AccountLevel }).(StorageLensAccountLevelOutput)
}

func (o StorageLensConfigurationOutput) AwsOrg() StorageLensAwsOrgPtrOutput {
	return o.ApplyT(func(v StorageLensConfiguration) *StorageLensAwsOrg { return v.AwsOrg }).(StorageLensAwsOrgPtrOutput)
}

func (o StorageLensConfigurationOutput) DataExport() StorageLensDataExportPtrOutput {
	return o.ApplyT(func(v StorageLensConfiguration) *StorageLensDataExport { return v.DataExport }).(StorageLensDataExportPtrOutput)
}

func (o StorageLensConfigurationOutput) Exclude() StorageLensBucketsAndRegionsPtrOutput {
	return o.ApplyT(func(v StorageLensConfiguration) *StorageLensBucketsAndRegions { return v.Exclude }).(StorageLensBucketsAndRegionsPtrOutput)
}

func (o StorageLensConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

func (o StorageLensConfigurationOutput) Include() StorageLensBucketsAndRegionsPtrOutput {
	return o.ApplyT(func(v StorageLensConfiguration) *StorageLensBucketsAndRegions { return v.Include }).(StorageLensBucketsAndRegionsPtrOutput)
}

// Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.
func (o StorageLensConfigurationOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageLensConfiguration) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The ARN for the Amazon S3 Storage Lens configuration.
func (o StorageLensConfigurationOutput) StorageLensArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageLensConfiguration) *string { return v.StorageLensArn }).(pulumi.StringPtrOutput)
}

// Specifies how Amazon S3 Storage Lens metrics should be exported.
type StorageLensDataExport struct {
	CloudWatchMetrics   *StorageLensCloudWatchMetrics   `pulumi:"cloudWatchMetrics"`
	S3BucketDestination *StorageLensS3BucketDestination `pulumi:"s3BucketDestination"`
}

// StorageLensDataExportInput is an input type that accepts StorageLensDataExportArgs and StorageLensDataExportOutput values.
// You can construct a concrete instance of `StorageLensDataExportInput` via:
//
//	StorageLensDataExportArgs{...}
type StorageLensDataExportInput interface {
	pulumi.Input

	ToStorageLensDataExportOutput() StorageLensDataExportOutput
	ToStorageLensDataExportOutputWithContext(context.Context) StorageLensDataExportOutput
}

// Specifies how Amazon S3 Storage Lens metrics should be exported.
type StorageLensDataExportArgs struct {
	CloudWatchMetrics   StorageLensCloudWatchMetricsPtrInput   `pulumi:"cloudWatchMetrics"`
	S3BucketDestination StorageLensS3BucketDestinationPtrInput `pulumi:"s3BucketDestination"`
}

func (StorageLensDataExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensDataExport)(nil)).Elem()
}

func (i StorageLensDataExportArgs) ToStorageLensDataExportOutput() StorageLensDataExportOutput {
	return i.ToStorageLensDataExportOutputWithContext(context.Background())
}

func (i StorageLensDataExportArgs) ToStorageLensDataExportOutputWithContext(ctx context.Context) StorageLensDataExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDataExportOutput)
}

func (i StorageLensDataExportArgs) ToStorageLensDataExportPtrOutput() StorageLensDataExportPtrOutput {
	return i.ToStorageLensDataExportPtrOutputWithContext(context.Background())
}

func (i StorageLensDataExportArgs) ToStorageLensDataExportPtrOutputWithContext(ctx context.Context) StorageLensDataExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDataExportOutput).ToStorageLensDataExportPtrOutputWithContext(ctx)
}

// StorageLensDataExportPtrInput is an input type that accepts StorageLensDataExportArgs, StorageLensDataExportPtr and StorageLensDataExportPtrOutput values.
// You can construct a concrete instance of `StorageLensDataExportPtrInput` via:
//
//	        StorageLensDataExportArgs{...}
//
//	or:
//
//	        nil
type StorageLensDataExportPtrInput interface {
	pulumi.Input

	ToStorageLensDataExportPtrOutput() StorageLensDataExportPtrOutput
	ToStorageLensDataExportPtrOutputWithContext(context.Context) StorageLensDataExportPtrOutput
}

type storageLensDataExportPtrType StorageLensDataExportArgs

func StorageLensDataExportPtr(v *StorageLensDataExportArgs) StorageLensDataExportPtrInput {
	return (*storageLensDataExportPtrType)(v)
}

func (*storageLensDataExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensDataExport)(nil)).Elem()
}

func (i *storageLensDataExportPtrType) ToStorageLensDataExportPtrOutput() StorageLensDataExportPtrOutput {
	return i.ToStorageLensDataExportPtrOutputWithContext(context.Background())
}

func (i *storageLensDataExportPtrType) ToStorageLensDataExportPtrOutputWithContext(ctx context.Context) StorageLensDataExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDataExportPtrOutput)
}

// Specifies how Amazon S3 Storage Lens metrics should be exported.
type StorageLensDataExportOutput struct{ *pulumi.OutputState }

func (StorageLensDataExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensDataExport)(nil)).Elem()
}

func (o StorageLensDataExportOutput) ToStorageLensDataExportOutput() StorageLensDataExportOutput {
	return o
}

func (o StorageLensDataExportOutput) ToStorageLensDataExportOutputWithContext(ctx context.Context) StorageLensDataExportOutput {
	return o
}

func (o StorageLensDataExportOutput) ToStorageLensDataExportPtrOutput() StorageLensDataExportPtrOutput {
	return o.ToStorageLensDataExportPtrOutputWithContext(context.Background())
}

func (o StorageLensDataExportOutput) ToStorageLensDataExportPtrOutputWithContext(ctx context.Context) StorageLensDataExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensDataExport) *StorageLensDataExport {
		return &v
	}).(StorageLensDataExportPtrOutput)
}

func (o StorageLensDataExportOutput) CloudWatchMetrics() StorageLensCloudWatchMetricsPtrOutput {
	return o.ApplyT(func(v StorageLensDataExport) *StorageLensCloudWatchMetrics { return v.CloudWatchMetrics }).(StorageLensCloudWatchMetricsPtrOutput)
}

func (o StorageLensDataExportOutput) S3BucketDestination() StorageLensS3BucketDestinationPtrOutput {
	return o.ApplyT(func(v StorageLensDataExport) *StorageLensS3BucketDestination { return v.S3BucketDestination }).(StorageLensS3BucketDestinationPtrOutput)
}

type StorageLensDataExportPtrOutput struct{ *pulumi.OutputState }

func (StorageLensDataExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensDataExport)(nil)).Elem()
}

func (o StorageLensDataExportPtrOutput) ToStorageLensDataExportPtrOutput() StorageLensDataExportPtrOutput {
	return o
}

func (o StorageLensDataExportPtrOutput) ToStorageLensDataExportPtrOutputWithContext(ctx context.Context) StorageLensDataExportPtrOutput {
	return o
}

func (o StorageLensDataExportPtrOutput) Elem() StorageLensDataExportOutput {
	return o.ApplyT(func(v *StorageLensDataExport) StorageLensDataExport {
		if v != nil {
			return *v
		}
		var ret StorageLensDataExport
		return ret
	}).(StorageLensDataExportOutput)
}

func (o StorageLensDataExportPtrOutput) CloudWatchMetrics() StorageLensCloudWatchMetricsPtrOutput {
	return o.ApplyT(func(v *StorageLensDataExport) *StorageLensCloudWatchMetrics {
		if v == nil {
			return nil
		}
		return v.CloudWatchMetrics
	}).(StorageLensCloudWatchMetricsPtrOutput)
}

func (o StorageLensDataExportPtrOutput) S3BucketDestination() StorageLensS3BucketDestinationPtrOutput {
	return o.ApplyT(func(v *StorageLensDataExport) *StorageLensS3BucketDestination {
		if v == nil {
			return nil
		}
		return v.S3BucketDestination
	}).(StorageLensS3BucketDestinationPtrOutput)
}

// Enables detailed status codes metrics.
type StorageLensDetailedStatusCodesMetrics struct {
	// Specifies whether detailed status codes metrics are enabled or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
}

// StorageLensDetailedStatusCodesMetricsInput is an input type that accepts StorageLensDetailedStatusCodesMetricsArgs and StorageLensDetailedStatusCodesMetricsOutput values.
// You can construct a concrete instance of `StorageLensDetailedStatusCodesMetricsInput` via:
//
//	StorageLensDetailedStatusCodesMetricsArgs{...}
type StorageLensDetailedStatusCodesMetricsInput interface {
	pulumi.Input

	ToStorageLensDetailedStatusCodesMetricsOutput() StorageLensDetailedStatusCodesMetricsOutput
	ToStorageLensDetailedStatusCodesMetricsOutputWithContext(context.Context) StorageLensDetailedStatusCodesMetricsOutput
}

// Enables detailed status codes metrics.
type StorageLensDetailedStatusCodesMetricsArgs struct {
	// Specifies whether detailed status codes metrics are enabled or disabled.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
}

func (StorageLensDetailedStatusCodesMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensDetailedStatusCodesMetrics)(nil)).Elem()
}

func (i StorageLensDetailedStatusCodesMetricsArgs) ToStorageLensDetailedStatusCodesMetricsOutput() StorageLensDetailedStatusCodesMetricsOutput {
	return i.ToStorageLensDetailedStatusCodesMetricsOutputWithContext(context.Background())
}

func (i StorageLensDetailedStatusCodesMetricsArgs) ToStorageLensDetailedStatusCodesMetricsOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDetailedStatusCodesMetricsOutput)
}

func (i StorageLensDetailedStatusCodesMetricsArgs) ToStorageLensDetailedStatusCodesMetricsPtrOutput() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return i.ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensDetailedStatusCodesMetricsArgs) ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDetailedStatusCodesMetricsOutput).ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(ctx)
}

// StorageLensDetailedStatusCodesMetricsPtrInput is an input type that accepts StorageLensDetailedStatusCodesMetricsArgs, StorageLensDetailedStatusCodesMetricsPtr and StorageLensDetailedStatusCodesMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensDetailedStatusCodesMetricsPtrInput` via:
//
//	        StorageLensDetailedStatusCodesMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensDetailedStatusCodesMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensDetailedStatusCodesMetricsPtrOutput() StorageLensDetailedStatusCodesMetricsPtrOutput
	ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(context.Context) StorageLensDetailedStatusCodesMetricsPtrOutput
}

type storageLensDetailedStatusCodesMetricsPtrType StorageLensDetailedStatusCodesMetricsArgs

func StorageLensDetailedStatusCodesMetricsPtr(v *StorageLensDetailedStatusCodesMetricsArgs) StorageLensDetailedStatusCodesMetricsPtrInput {
	return (*storageLensDetailedStatusCodesMetricsPtrType)(v)
}

func (*storageLensDetailedStatusCodesMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensDetailedStatusCodesMetrics)(nil)).Elem()
}

func (i *storageLensDetailedStatusCodesMetricsPtrType) ToStorageLensDetailedStatusCodesMetricsPtrOutput() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return i.ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensDetailedStatusCodesMetricsPtrType) ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensDetailedStatusCodesMetricsPtrOutput)
}

// Enables detailed status codes metrics.
type StorageLensDetailedStatusCodesMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensDetailedStatusCodesMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensDetailedStatusCodesMetrics)(nil)).Elem()
}

func (o StorageLensDetailedStatusCodesMetricsOutput) ToStorageLensDetailedStatusCodesMetricsOutput() StorageLensDetailedStatusCodesMetricsOutput {
	return o
}

func (o StorageLensDetailedStatusCodesMetricsOutput) ToStorageLensDetailedStatusCodesMetricsOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsOutput {
	return o
}

func (o StorageLensDetailedStatusCodesMetricsOutput) ToStorageLensDetailedStatusCodesMetricsPtrOutput() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o.ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensDetailedStatusCodesMetricsOutput) ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensDetailedStatusCodesMetrics) *StorageLensDetailedStatusCodesMetrics {
		return &v
	}).(StorageLensDetailedStatusCodesMetricsPtrOutput)
}

// Specifies whether detailed status codes metrics are enabled or disabled.
func (o StorageLensDetailedStatusCodesMetricsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageLensDetailedStatusCodesMetrics) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

type StorageLensDetailedStatusCodesMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensDetailedStatusCodesMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensDetailedStatusCodesMetrics)(nil)).Elem()
}

func (o StorageLensDetailedStatusCodesMetricsPtrOutput) ToStorageLensDetailedStatusCodesMetricsPtrOutput() StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o
}

func (o StorageLensDetailedStatusCodesMetricsPtrOutput) ToStorageLensDetailedStatusCodesMetricsPtrOutputWithContext(ctx context.Context) StorageLensDetailedStatusCodesMetricsPtrOutput {
	return o
}

func (o StorageLensDetailedStatusCodesMetricsPtrOutput) Elem() StorageLensDetailedStatusCodesMetricsOutput {
	return o.ApplyT(func(v *StorageLensDetailedStatusCodesMetrics) StorageLensDetailedStatusCodesMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensDetailedStatusCodesMetrics
		return ret
	}).(StorageLensDetailedStatusCodesMetricsOutput)
}

// Specifies whether detailed status codes metrics are enabled or disabled.
func (o StorageLensDetailedStatusCodesMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensDetailedStatusCodesMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).
type StorageLensEncryption struct {
}

// StorageLensEncryptionInput is an input type that accepts StorageLensEncryptionArgs and StorageLensEncryptionOutput values.
// You can construct a concrete instance of `StorageLensEncryptionInput` via:
//
//	StorageLensEncryptionArgs{...}
type StorageLensEncryptionInput interface {
	pulumi.Input

	ToStorageLensEncryptionOutput() StorageLensEncryptionOutput
	ToStorageLensEncryptionOutputWithContext(context.Context) StorageLensEncryptionOutput
}

// Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).
type StorageLensEncryptionArgs struct {
}

func (StorageLensEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensEncryption)(nil)).Elem()
}

func (i StorageLensEncryptionArgs) ToStorageLensEncryptionOutput() StorageLensEncryptionOutput {
	return i.ToStorageLensEncryptionOutputWithContext(context.Background())
}

func (i StorageLensEncryptionArgs) ToStorageLensEncryptionOutputWithContext(ctx context.Context) StorageLensEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensEncryptionOutput)
}

func (i StorageLensEncryptionArgs) ToStorageLensEncryptionPtrOutput() StorageLensEncryptionPtrOutput {
	return i.ToStorageLensEncryptionPtrOutputWithContext(context.Background())
}

func (i StorageLensEncryptionArgs) ToStorageLensEncryptionPtrOutputWithContext(ctx context.Context) StorageLensEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensEncryptionOutput).ToStorageLensEncryptionPtrOutputWithContext(ctx)
}

// StorageLensEncryptionPtrInput is an input type that accepts StorageLensEncryptionArgs, StorageLensEncryptionPtr and StorageLensEncryptionPtrOutput values.
// You can construct a concrete instance of `StorageLensEncryptionPtrInput` via:
//
//	        StorageLensEncryptionArgs{...}
//
//	or:
//
//	        nil
type StorageLensEncryptionPtrInput interface {
	pulumi.Input

	ToStorageLensEncryptionPtrOutput() StorageLensEncryptionPtrOutput
	ToStorageLensEncryptionPtrOutputWithContext(context.Context) StorageLensEncryptionPtrOutput
}

type storageLensEncryptionPtrType StorageLensEncryptionArgs

func StorageLensEncryptionPtr(v *StorageLensEncryptionArgs) StorageLensEncryptionPtrInput {
	return (*storageLensEncryptionPtrType)(v)
}

func (*storageLensEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensEncryption)(nil)).Elem()
}

func (i *storageLensEncryptionPtrType) ToStorageLensEncryptionPtrOutput() StorageLensEncryptionPtrOutput {
	return i.ToStorageLensEncryptionPtrOutputWithContext(context.Background())
}

func (i *storageLensEncryptionPtrType) ToStorageLensEncryptionPtrOutputWithContext(ctx context.Context) StorageLensEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensEncryptionPtrOutput)
}

// Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).
type StorageLensEncryptionOutput struct{ *pulumi.OutputState }

func (StorageLensEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensEncryption)(nil)).Elem()
}

func (o StorageLensEncryptionOutput) ToStorageLensEncryptionOutput() StorageLensEncryptionOutput {
	return o
}

func (o StorageLensEncryptionOutput) ToStorageLensEncryptionOutputWithContext(ctx context.Context) StorageLensEncryptionOutput {
	return o
}

func (o StorageLensEncryptionOutput) ToStorageLensEncryptionPtrOutput() StorageLensEncryptionPtrOutput {
	return o.ToStorageLensEncryptionPtrOutputWithContext(context.Background())
}

func (o StorageLensEncryptionOutput) ToStorageLensEncryptionPtrOutputWithContext(ctx context.Context) StorageLensEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensEncryption) *StorageLensEncryption {
		return &v
	}).(StorageLensEncryptionPtrOutput)
}

type StorageLensEncryptionPtrOutput struct{ *pulumi.OutputState }

func (StorageLensEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensEncryption)(nil)).Elem()
}

func (o StorageLensEncryptionPtrOutput) ToStorageLensEncryptionPtrOutput() StorageLensEncryptionPtrOutput {
	return o
}

func (o StorageLensEncryptionPtrOutput) ToStorageLensEncryptionPtrOutputWithContext(ctx context.Context) StorageLensEncryptionPtrOutput {
	return o
}

func (o StorageLensEncryptionPtrOutput) Elem() StorageLensEncryptionOutput {
	return o.ApplyT(func(v *StorageLensEncryption) StorageLensEncryption {
		if v != nil {
			return *v
		}
		var ret StorageLensEncryption
		return ret
	}).(StorageLensEncryptionOutput)
}

// The Storage Lens group will include objects that match all of the specified filter values.
type StorageLensGroupAnd struct {
	MatchAnyPrefix  []string                         `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  []string                         `pulumi:"matchAnySuffix"`
	MatchAnyTag     []StorageLensGroupTag            `pulumi:"matchAnyTag"`
	MatchObjectAge  *StorageLensGroupMatchObjectAge  `pulumi:"matchObjectAge"`
	MatchObjectSize *StorageLensGroupMatchObjectSize `pulumi:"matchObjectSize"`
}

// StorageLensGroupAndInput is an input type that accepts StorageLensGroupAndArgs and StorageLensGroupAndOutput values.
// You can construct a concrete instance of `StorageLensGroupAndInput` via:
//
//	StorageLensGroupAndArgs{...}
type StorageLensGroupAndInput interface {
	pulumi.Input

	ToStorageLensGroupAndOutput() StorageLensGroupAndOutput
	ToStorageLensGroupAndOutputWithContext(context.Context) StorageLensGroupAndOutput
}

// The Storage Lens group will include objects that match all of the specified filter values.
type StorageLensGroupAndArgs struct {
	MatchAnyPrefix  pulumi.StringArrayInput                 `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  pulumi.StringArrayInput                 `pulumi:"matchAnySuffix"`
	MatchAnyTag     StorageLensGroupTagArrayInput           `pulumi:"matchAnyTag"`
	MatchObjectAge  StorageLensGroupMatchObjectAgePtrInput  `pulumi:"matchObjectAge"`
	MatchObjectSize StorageLensGroupMatchObjectSizePtrInput `pulumi:"matchObjectSize"`
}

func (StorageLensGroupAndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupAnd)(nil)).Elem()
}

func (i StorageLensGroupAndArgs) ToStorageLensGroupAndOutput() StorageLensGroupAndOutput {
	return i.ToStorageLensGroupAndOutputWithContext(context.Background())
}

func (i StorageLensGroupAndArgs) ToStorageLensGroupAndOutputWithContext(ctx context.Context) StorageLensGroupAndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupAndOutput)
}

func (i StorageLensGroupAndArgs) ToStorageLensGroupAndPtrOutput() StorageLensGroupAndPtrOutput {
	return i.ToStorageLensGroupAndPtrOutputWithContext(context.Background())
}

func (i StorageLensGroupAndArgs) ToStorageLensGroupAndPtrOutputWithContext(ctx context.Context) StorageLensGroupAndPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupAndOutput).ToStorageLensGroupAndPtrOutputWithContext(ctx)
}

// StorageLensGroupAndPtrInput is an input type that accepts StorageLensGroupAndArgs, StorageLensGroupAndPtr and StorageLensGroupAndPtrOutput values.
// You can construct a concrete instance of `StorageLensGroupAndPtrInput` via:
//
//	        StorageLensGroupAndArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupAndPtrInput interface {
	pulumi.Input

	ToStorageLensGroupAndPtrOutput() StorageLensGroupAndPtrOutput
	ToStorageLensGroupAndPtrOutputWithContext(context.Context) StorageLensGroupAndPtrOutput
}

type storageLensGroupAndPtrType StorageLensGroupAndArgs

func StorageLensGroupAndPtr(v *StorageLensGroupAndArgs) StorageLensGroupAndPtrInput {
	return (*storageLensGroupAndPtrType)(v)
}

func (*storageLensGroupAndPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupAnd)(nil)).Elem()
}

func (i *storageLensGroupAndPtrType) ToStorageLensGroupAndPtrOutput() StorageLensGroupAndPtrOutput {
	return i.ToStorageLensGroupAndPtrOutputWithContext(context.Background())
}

func (i *storageLensGroupAndPtrType) ToStorageLensGroupAndPtrOutputWithContext(ctx context.Context) StorageLensGroupAndPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupAndPtrOutput)
}

// The Storage Lens group will include objects that match all of the specified filter values.
type StorageLensGroupAndOutput struct{ *pulumi.OutputState }

func (StorageLensGroupAndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupAnd)(nil)).Elem()
}

func (o StorageLensGroupAndOutput) ToStorageLensGroupAndOutput() StorageLensGroupAndOutput {
	return o
}

func (o StorageLensGroupAndOutput) ToStorageLensGroupAndOutputWithContext(ctx context.Context) StorageLensGroupAndOutput {
	return o
}

func (o StorageLensGroupAndOutput) ToStorageLensGroupAndPtrOutput() StorageLensGroupAndPtrOutput {
	return o.ToStorageLensGroupAndPtrOutputWithContext(context.Background())
}

func (o StorageLensGroupAndOutput) ToStorageLensGroupAndPtrOutputWithContext(ctx context.Context) StorageLensGroupAndPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupAnd) *StorageLensGroupAnd {
		return &v
	}).(StorageLensGroupAndPtrOutput)
}

func (o StorageLensGroupAndOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupAnd) []string { return v.MatchAnyPrefix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupAndOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupAnd) []string { return v.MatchAnySuffix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupAndOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v StorageLensGroupAnd) []StorageLensGroupTag { return v.MatchAnyTag }).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupAndOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v StorageLensGroupAnd) *StorageLensGroupMatchObjectAge { return v.MatchObjectAge }).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupAndOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v StorageLensGroupAnd) *StorageLensGroupMatchObjectSize { return v.MatchObjectSize }).(StorageLensGroupMatchObjectSizePtrOutput)
}

type StorageLensGroupAndPtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupAndPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupAnd)(nil)).Elem()
}

func (o StorageLensGroupAndPtrOutput) ToStorageLensGroupAndPtrOutput() StorageLensGroupAndPtrOutput {
	return o
}

func (o StorageLensGroupAndPtrOutput) ToStorageLensGroupAndPtrOutputWithContext(ctx context.Context) StorageLensGroupAndPtrOutput {
	return o
}

func (o StorageLensGroupAndPtrOutput) Elem() StorageLensGroupAndOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) StorageLensGroupAnd {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupAnd
		return ret
	}).(StorageLensGroupAndOutput)
}

func (o StorageLensGroupAndPtrOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnyPrefix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupAndPtrOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnySuffix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupAndPtrOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) []StorageLensGroupTag {
		if v == nil {
			return nil
		}
		return v.MatchAnyTag
	}).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupAndPtrOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) *StorageLensGroupMatchObjectAge {
		if v == nil {
			return nil
		}
		return v.MatchObjectAge
	}).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupAndPtrOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupAnd) *StorageLensGroupMatchObjectSize {
		if v == nil {
			return nil
		}
		return v.MatchObjectSize
	}).(StorageLensGroupMatchObjectSizePtrOutput)
}

// Sets the Storage Lens Group filter.
type StorageLensGroupFilter struct {
	And             *StorageLensGroupAnd             `pulumi:"and"`
	MatchAnyPrefix  []string                         `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  []string                         `pulumi:"matchAnySuffix"`
	MatchAnyTag     []StorageLensGroupTag            `pulumi:"matchAnyTag"`
	MatchObjectAge  *StorageLensGroupMatchObjectAge  `pulumi:"matchObjectAge"`
	MatchObjectSize *StorageLensGroupMatchObjectSize `pulumi:"matchObjectSize"`
	Or              *StorageLensGroupOr              `pulumi:"or"`
}

// StorageLensGroupFilterInput is an input type that accepts StorageLensGroupFilterArgs and StorageLensGroupFilterOutput values.
// You can construct a concrete instance of `StorageLensGroupFilterInput` via:
//
//	StorageLensGroupFilterArgs{...}
type StorageLensGroupFilterInput interface {
	pulumi.Input

	ToStorageLensGroupFilterOutput() StorageLensGroupFilterOutput
	ToStorageLensGroupFilterOutputWithContext(context.Context) StorageLensGroupFilterOutput
}

// Sets the Storage Lens Group filter.
type StorageLensGroupFilterArgs struct {
	And             StorageLensGroupAndPtrInput             `pulumi:"and"`
	MatchAnyPrefix  pulumi.StringArrayInput                 `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  pulumi.StringArrayInput                 `pulumi:"matchAnySuffix"`
	MatchAnyTag     StorageLensGroupTagArrayInput           `pulumi:"matchAnyTag"`
	MatchObjectAge  StorageLensGroupMatchObjectAgePtrInput  `pulumi:"matchObjectAge"`
	MatchObjectSize StorageLensGroupMatchObjectSizePtrInput `pulumi:"matchObjectSize"`
	Or              StorageLensGroupOrPtrInput              `pulumi:"or"`
}

func (StorageLensGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupFilter)(nil)).Elem()
}

func (i StorageLensGroupFilterArgs) ToStorageLensGroupFilterOutput() StorageLensGroupFilterOutput {
	return i.ToStorageLensGroupFilterOutputWithContext(context.Background())
}

func (i StorageLensGroupFilterArgs) ToStorageLensGroupFilterOutputWithContext(ctx context.Context) StorageLensGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupFilterOutput)
}

// Sets the Storage Lens Group filter.
type StorageLensGroupFilterOutput struct{ *pulumi.OutputState }

func (StorageLensGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupFilter)(nil)).Elem()
}

func (o StorageLensGroupFilterOutput) ToStorageLensGroupFilterOutput() StorageLensGroupFilterOutput {
	return o
}

func (o StorageLensGroupFilterOutput) ToStorageLensGroupFilterOutputWithContext(ctx context.Context) StorageLensGroupFilterOutput {
	return o
}

func (o StorageLensGroupFilterOutput) And() StorageLensGroupAndPtrOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) *StorageLensGroupAnd { return v.And }).(StorageLensGroupAndPtrOutput)
}

func (o StorageLensGroupFilterOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) []string { return v.MatchAnyPrefix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupFilterOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) []string { return v.MatchAnySuffix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupFilterOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) []StorageLensGroupTag { return v.MatchAnyTag }).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupFilterOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) *StorageLensGroupMatchObjectAge { return v.MatchObjectAge }).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupFilterOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) *StorageLensGroupMatchObjectSize { return v.MatchObjectSize }).(StorageLensGroupMatchObjectSizePtrOutput)
}

func (o StorageLensGroupFilterOutput) Or() StorageLensGroupOrPtrOutput {
	return o.ApplyT(func(v StorageLensGroupFilter) *StorageLensGroupOr { return v.Or }).(StorageLensGroupOrPtrOutput)
}

type StorageLensGroupFilterPtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupFilter)(nil)).Elem()
}

func (o StorageLensGroupFilterPtrOutput) ToStorageLensGroupFilterPtrOutput() StorageLensGroupFilterPtrOutput {
	return o
}

func (o StorageLensGroupFilterPtrOutput) ToStorageLensGroupFilterPtrOutputWithContext(ctx context.Context) StorageLensGroupFilterPtrOutput {
	return o
}

func (o StorageLensGroupFilterPtrOutput) Elem() StorageLensGroupFilterOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) StorageLensGroupFilter {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupFilter
		return ret
	}).(StorageLensGroupFilterOutput)
}

func (o StorageLensGroupFilterPtrOutput) And() StorageLensGroupAndPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) *StorageLensGroupAnd {
		if v == nil {
			return nil
		}
		return v.And
	}).(StorageLensGroupAndPtrOutput)
}

func (o StorageLensGroupFilterPtrOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnyPrefix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupFilterPtrOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnySuffix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupFilterPtrOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) []StorageLensGroupTag {
		if v == nil {
			return nil
		}
		return v.MatchAnyTag
	}).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupFilterPtrOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) *StorageLensGroupMatchObjectAge {
		if v == nil {
			return nil
		}
		return v.MatchObjectAge
	}).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupFilterPtrOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) *StorageLensGroupMatchObjectSize {
		if v == nil {
			return nil
		}
		return v.MatchObjectSize
	}).(StorageLensGroupMatchObjectSizePtrOutput)
}

func (o StorageLensGroupFilterPtrOutput) Or() StorageLensGroupOrPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupFilter) *StorageLensGroupOr {
		if v == nil {
			return nil
		}
		return v.Or
	}).(StorageLensGroupOrPtrOutput)
}

// Specifies the details of Amazon S3 Storage Lens Group configuration.
type StorageLensGroupLevel struct {
	StorageLensGroupSelectionCriteria *StorageLensGroupSelectionCriteria `pulumi:"storageLensGroupSelectionCriteria"`
}

// StorageLensGroupLevelInput is an input type that accepts StorageLensGroupLevelArgs and StorageLensGroupLevelOutput values.
// You can construct a concrete instance of `StorageLensGroupLevelInput` via:
//
//	StorageLensGroupLevelArgs{...}
type StorageLensGroupLevelInput interface {
	pulumi.Input

	ToStorageLensGroupLevelOutput() StorageLensGroupLevelOutput
	ToStorageLensGroupLevelOutputWithContext(context.Context) StorageLensGroupLevelOutput
}

// Specifies the details of Amazon S3 Storage Lens Group configuration.
type StorageLensGroupLevelArgs struct {
	StorageLensGroupSelectionCriteria StorageLensGroupSelectionCriteriaPtrInput `pulumi:"storageLensGroupSelectionCriteria"`
}

func (StorageLensGroupLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupLevel)(nil)).Elem()
}

func (i StorageLensGroupLevelArgs) ToStorageLensGroupLevelOutput() StorageLensGroupLevelOutput {
	return i.ToStorageLensGroupLevelOutputWithContext(context.Background())
}

func (i StorageLensGroupLevelArgs) ToStorageLensGroupLevelOutputWithContext(ctx context.Context) StorageLensGroupLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupLevelOutput)
}

func (i StorageLensGroupLevelArgs) ToStorageLensGroupLevelPtrOutput() StorageLensGroupLevelPtrOutput {
	return i.ToStorageLensGroupLevelPtrOutputWithContext(context.Background())
}

func (i StorageLensGroupLevelArgs) ToStorageLensGroupLevelPtrOutputWithContext(ctx context.Context) StorageLensGroupLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupLevelOutput).ToStorageLensGroupLevelPtrOutputWithContext(ctx)
}

// StorageLensGroupLevelPtrInput is an input type that accepts StorageLensGroupLevelArgs, StorageLensGroupLevelPtr and StorageLensGroupLevelPtrOutput values.
// You can construct a concrete instance of `StorageLensGroupLevelPtrInput` via:
//
//	        StorageLensGroupLevelArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupLevelPtrInput interface {
	pulumi.Input

	ToStorageLensGroupLevelPtrOutput() StorageLensGroupLevelPtrOutput
	ToStorageLensGroupLevelPtrOutputWithContext(context.Context) StorageLensGroupLevelPtrOutput
}

type storageLensGroupLevelPtrType StorageLensGroupLevelArgs

func StorageLensGroupLevelPtr(v *StorageLensGroupLevelArgs) StorageLensGroupLevelPtrInput {
	return (*storageLensGroupLevelPtrType)(v)
}

func (*storageLensGroupLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupLevel)(nil)).Elem()
}

func (i *storageLensGroupLevelPtrType) ToStorageLensGroupLevelPtrOutput() StorageLensGroupLevelPtrOutput {
	return i.ToStorageLensGroupLevelPtrOutputWithContext(context.Background())
}

func (i *storageLensGroupLevelPtrType) ToStorageLensGroupLevelPtrOutputWithContext(ctx context.Context) StorageLensGroupLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupLevelPtrOutput)
}

// Specifies the details of Amazon S3 Storage Lens Group configuration.
type StorageLensGroupLevelOutput struct{ *pulumi.OutputState }

func (StorageLensGroupLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupLevel)(nil)).Elem()
}

func (o StorageLensGroupLevelOutput) ToStorageLensGroupLevelOutput() StorageLensGroupLevelOutput {
	return o
}

func (o StorageLensGroupLevelOutput) ToStorageLensGroupLevelOutputWithContext(ctx context.Context) StorageLensGroupLevelOutput {
	return o
}

func (o StorageLensGroupLevelOutput) ToStorageLensGroupLevelPtrOutput() StorageLensGroupLevelPtrOutput {
	return o.ToStorageLensGroupLevelPtrOutputWithContext(context.Background())
}

func (o StorageLensGroupLevelOutput) ToStorageLensGroupLevelPtrOutputWithContext(ctx context.Context) StorageLensGroupLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupLevel) *StorageLensGroupLevel {
		return &v
	}).(StorageLensGroupLevelPtrOutput)
}

func (o StorageLensGroupLevelOutput) StorageLensGroupSelectionCriteria() StorageLensGroupSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v StorageLensGroupLevel) *StorageLensGroupSelectionCriteria {
		return v.StorageLensGroupSelectionCriteria
	}).(StorageLensGroupSelectionCriteriaPtrOutput)
}

type StorageLensGroupLevelPtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupLevel)(nil)).Elem()
}

func (o StorageLensGroupLevelPtrOutput) ToStorageLensGroupLevelPtrOutput() StorageLensGroupLevelPtrOutput {
	return o
}

func (o StorageLensGroupLevelPtrOutput) ToStorageLensGroupLevelPtrOutputWithContext(ctx context.Context) StorageLensGroupLevelPtrOutput {
	return o
}

func (o StorageLensGroupLevelPtrOutput) Elem() StorageLensGroupLevelOutput {
	return o.ApplyT(func(v *StorageLensGroupLevel) StorageLensGroupLevel {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupLevel
		return ret
	}).(StorageLensGroupLevelOutput)
}

func (o StorageLensGroupLevelPtrOutput) StorageLensGroupSelectionCriteria() StorageLensGroupSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupLevel) *StorageLensGroupSelectionCriteria {
		if v == nil {
			return nil
		}
		return v.StorageLensGroupSelectionCriteria
	}).(StorageLensGroupSelectionCriteriaPtrOutput)
}

// Filter to match all of the specified values for the minimum and maximum object age.
type StorageLensGroupMatchObjectAge struct {
	// Minimum object age to which the rule applies.
	DaysGreaterThan *int `pulumi:"daysGreaterThan"`
	// Maximum object age to which the rule applies.
	DaysLessThan *int `pulumi:"daysLessThan"`
}

// StorageLensGroupMatchObjectAgeInput is an input type that accepts StorageLensGroupMatchObjectAgeArgs and StorageLensGroupMatchObjectAgeOutput values.
// You can construct a concrete instance of `StorageLensGroupMatchObjectAgeInput` via:
//
//	StorageLensGroupMatchObjectAgeArgs{...}
type StorageLensGroupMatchObjectAgeInput interface {
	pulumi.Input

	ToStorageLensGroupMatchObjectAgeOutput() StorageLensGroupMatchObjectAgeOutput
	ToStorageLensGroupMatchObjectAgeOutputWithContext(context.Context) StorageLensGroupMatchObjectAgeOutput
}

// Filter to match all of the specified values for the minimum and maximum object age.
type StorageLensGroupMatchObjectAgeArgs struct {
	// Minimum object age to which the rule applies.
	DaysGreaterThan pulumi.IntPtrInput `pulumi:"daysGreaterThan"`
	// Maximum object age to which the rule applies.
	DaysLessThan pulumi.IntPtrInput `pulumi:"daysLessThan"`
}

func (StorageLensGroupMatchObjectAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupMatchObjectAge)(nil)).Elem()
}

func (i StorageLensGroupMatchObjectAgeArgs) ToStorageLensGroupMatchObjectAgeOutput() StorageLensGroupMatchObjectAgeOutput {
	return i.ToStorageLensGroupMatchObjectAgeOutputWithContext(context.Background())
}

func (i StorageLensGroupMatchObjectAgeArgs) ToStorageLensGroupMatchObjectAgeOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectAgeOutput)
}

func (i StorageLensGroupMatchObjectAgeArgs) ToStorageLensGroupMatchObjectAgePtrOutput() StorageLensGroupMatchObjectAgePtrOutput {
	return i.ToStorageLensGroupMatchObjectAgePtrOutputWithContext(context.Background())
}

func (i StorageLensGroupMatchObjectAgeArgs) ToStorageLensGroupMatchObjectAgePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectAgeOutput).ToStorageLensGroupMatchObjectAgePtrOutputWithContext(ctx)
}

// StorageLensGroupMatchObjectAgePtrInput is an input type that accepts StorageLensGroupMatchObjectAgeArgs, StorageLensGroupMatchObjectAgePtr and StorageLensGroupMatchObjectAgePtrOutput values.
// You can construct a concrete instance of `StorageLensGroupMatchObjectAgePtrInput` via:
//
//	        StorageLensGroupMatchObjectAgeArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupMatchObjectAgePtrInput interface {
	pulumi.Input

	ToStorageLensGroupMatchObjectAgePtrOutput() StorageLensGroupMatchObjectAgePtrOutput
	ToStorageLensGroupMatchObjectAgePtrOutputWithContext(context.Context) StorageLensGroupMatchObjectAgePtrOutput
}

type storageLensGroupMatchObjectAgePtrType StorageLensGroupMatchObjectAgeArgs

func StorageLensGroupMatchObjectAgePtr(v *StorageLensGroupMatchObjectAgeArgs) StorageLensGroupMatchObjectAgePtrInput {
	return (*storageLensGroupMatchObjectAgePtrType)(v)
}

func (*storageLensGroupMatchObjectAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupMatchObjectAge)(nil)).Elem()
}

func (i *storageLensGroupMatchObjectAgePtrType) ToStorageLensGroupMatchObjectAgePtrOutput() StorageLensGroupMatchObjectAgePtrOutput {
	return i.ToStorageLensGroupMatchObjectAgePtrOutputWithContext(context.Background())
}

func (i *storageLensGroupMatchObjectAgePtrType) ToStorageLensGroupMatchObjectAgePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectAgePtrOutput)
}

// Filter to match all of the specified values for the minimum and maximum object age.
type StorageLensGroupMatchObjectAgeOutput struct{ *pulumi.OutputState }

func (StorageLensGroupMatchObjectAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupMatchObjectAge)(nil)).Elem()
}

func (o StorageLensGroupMatchObjectAgeOutput) ToStorageLensGroupMatchObjectAgeOutput() StorageLensGroupMatchObjectAgeOutput {
	return o
}

func (o StorageLensGroupMatchObjectAgeOutput) ToStorageLensGroupMatchObjectAgeOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgeOutput {
	return o
}

func (o StorageLensGroupMatchObjectAgeOutput) ToStorageLensGroupMatchObjectAgePtrOutput() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ToStorageLensGroupMatchObjectAgePtrOutputWithContext(context.Background())
}

func (o StorageLensGroupMatchObjectAgeOutput) ToStorageLensGroupMatchObjectAgePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupMatchObjectAge) *StorageLensGroupMatchObjectAge {
		return &v
	}).(StorageLensGroupMatchObjectAgePtrOutput)
}

// Minimum object age to which the rule applies.
func (o StorageLensGroupMatchObjectAgeOutput) DaysGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageLensGroupMatchObjectAge) *int { return v.DaysGreaterThan }).(pulumi.IntPtrOutput)
}

// Maximum object age to which the rule applies.
func (o StorageLensGroupMatchObjectAgeOutput) DaysLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageLensGroupMatchObjectAge) *int { return v.DaysLessThan }).(pulumi.IntPtrOutput)
}

type StorageLensGroupMatchObjectAgePtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupMatchObjectAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupMatchObjectAge)(nil)).Elem()
}

func (o StorageLensGroupMatchObjectAgePtrOutput) ToStorageLensGroupMatchObjectAgePtrOutput() StorageLensGroupMatchObjectAgePtrOutput {
	return o
}

func (o StorageLensGroupMatchObjectAgePtrOutput) ToStorageLensGroupMatchObjectAgePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectAgePtrOutput {
	return o
}

func (o StorageLensGroupMatchObjectAgePtrOutput) Elem() StorageLensGroupMatchObjectAgeOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectAge) StorageLensGroupMatchObjectAge {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupMatchObjectAge
		return ret
	}).(StorageLensGroupMatchObjectAgeOutput)
}

// Minimum object age to which the rule applies.
func (o StorageLensGroupMatchObjectAgePtrOutput) DaysGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectAge) *int {
		if v == nil {
			return nil
		}
		return v.DaysGreaterThan
	}).(pulumi.IntPtrOutput)
}

// Maximum object age to which the rule applies.
func (o StorageLensGroupMatchObjectAgePtrOutput) DaysLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectAge) *int {
		if v == nil {
			return nil
		}
		return v.DaysLessThan
	}).(pulumi.IntPtrOutput)
}

// Filter to match all of the specified values for the minimum and maximum object size.
type StorageLensGroupMatchObjectSize struct {
	// Minimum object size to which the rule applies.
	BytesGreaterThan *int `pulumi:"bytesGreaterThan"`
	// Maximum object size to which the rule applies.
	BytesLessThan *int `pulumi:"bytesLessThan"`
}

// StorageLensGroupMatchObjectSizeInput is an input type that accepts StorageLensGroupMatchObjectSizeArgs and StorageLensGroupMatchObjectSizeOutput values.
// You can construct a concrete instance of `StorageLensGroupMatchObjectSizeInput` via:
//
//	StorageLensGroupMatchObjectSizeArgs{...}
type StorageLensGroupMatchObjectSizeInput interface {
	pulumi.Input

	ToStorageLensGroupMatchObjectSizeOutput() StorageLensGroupMatchObjectSizeOutput
	ToStorageLensGroupMatchObjectSizeOutputWithContext(context.Context) StorageLensGroupMatchObjectSizeOutput
}

// Filter to match all of the specified values for the minimum and maximum object size.
type StorageLensGroupMatchObjectSizeArgs struct {
	// Minimum object size to which the rule applies.
	BytesGreaterThan pulumi.IntPtrInput `pulumi:"bytesGreaterThan"`
	// Maximum object size to which the rule applies.
	BytesLessThan pulumi.IntPtrInput `pulumi:"bytesLessThan"`
}

func (StorageLensGroupMatchObjectSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupMatchObjectSize)(nil)).Elem()
}

func (i StorageLensGroupMatchObjectSizeArgs) ToStorageLensGroupMatchObjectSizeOutput() StorageLensGroupMatchObjectSizeOutput {
	return i.ToStorageLensGroupMatchObjectSizeOutputWithContext(context.Background())
}

func (i StorageLensGroupMatchObjectSizeArgs) ToStorageLensGroupMatchObjectSizeOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectSizeOutput)
}

func (i StorageLensGroupMatchObjectSizeArgs) ToStorageLensGroupMatchObjectSizePtrOutput() StorageLensGroupMatchObjectSizePtrOutput {
	return i.ToStorageLensGroupMatchObjectSizePtrOutputWithContext(context.Background())
}

func (i StorageLensGroupMatchObjectSizeArgs) ToStorageLensGroupMatchObjectSizePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectSizeOutput).ToStorageLensGroupMatchObjectSizePtrOutputWithContext(ctx)
}

// StorageLensGroupMatchObjectSizePtrInput is an input type that accepts StorageLensGroupMatchObjectSizeArgs, StorageLensGroupMatchObjectSizePtr and StorageLensGroupMatchObjectSizePtrOutput values.
// You can construct a concrete instance of `StorageLensGroupMatchObjectSizePtrInput` via:
//
//	        StorageLensGroupMatchObjectSizeArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupMatchObjectSizePtrInput interface {
	pulumi.Input

	ToStorageLensGroupMatchObjectSizePtrOutput() StorageLensGroupMatchObjectSizePtrOutput
	ToStorageLensGroupMatchObjectSizePtrOutputWithContext(context.Context) StorageLensGroupMatchObjectSizePtrOutput
}

type storageLensGroupMatchObjectSizePtrType StorageLensGroupMatchObjectSizeArgs

func StorageLensGroupMatchObjectSizePtr(v *StorageLensGroupMatchObjectSizeArgs) StorageLensGroupMatchObjectSizePtrInput {
	return (*storageLensGroupMatchObjectSizePtrType)(v)
}

func (*storageLensGroupMatchObjectSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupMatchObjectSize)(nil)).Elem()
}

func (i *storageLensGroupMatchObjectSizePtrType) ToStorageLensGroupMatchObjectSizePtrOutput() StorageLensGroupMatchObjectSizePtrOutput {
	return i.ToStorageLensGroupMatchObjectSizePtrOutputWithContext(context.Background())
}

func (i *storageLensGroupMatchObjectSizePtrType) ToStorageLensGroupMatchObjectSizePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupMatchObjectSizePtrOutput)
}

// Filter to match all of the specified values for the minimum and maximum object size.
type StorageLensGroupMatchObjectSizeOutput struct{ *pulumi.OutputState }

func (StorageLensGroupMatchObjectSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupMatchObjectSize)(nil)).Elem()
}

func (o StorageLensGroupMatchObjectSizeOutput) ToStorageLensGroupMatchObjectSizeOutput() StorageLensGroupMatchObjectSizeOutput {
	return o
}

func (o StorageLensGroupMatchObjectSizeOutput) ToStorageLensGroupMatchObjectSizeOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizeOutput {
	return o
}

func (o StorageLensGroupMatchObjectSizeOutput) ToStorageLensGroupMatchObjectSizePtrOutput() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ToStorageLensGroupMatchObjectSizePtrOutputWithContext(context.Background())
}

func (o StorageLensGroupMatchObjectSizeOutput) ToStorageLensGroupMatchObjectSizePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupMatchObjectSize) *StorageLensGroupMatchObjectSize {
		return &v
	}).(StorageLensGroupMatchObjectSizePtrOutput)
}

// Minimum object size to which the rule applies.
func (o StorageLensGroupMatchObjectSizeOutput) BytesGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageLensGroupMatchObjectSize) *int { return v.BytesGreaterThan }).(pulumi.IntPtrOutput)
}

// Maximum object size to which the rule applies.
func (o StorageLensGroupMatchObjectSizeOutput) BytesLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageLensGroupMatchObjectSize) *int { return v.BytesLessThan }).(pulumi.IntPtrOutput)
}

type StorageLensGroupMatchObjectSizePtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupMatchObjectSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupMatchObjectSize)(nil)).Elem()
}

func (o StorageLensGroupMatchObjectSizePtrOutput) ToStorageLensGroupMatchObjectSizePtrOutput() StorageLensGroupMatchObjectSizePtrOutput {
	return o
}

func (o StorageLensGroupMatchObjectSizePtrOutput) ToStorageLensGroupMatchObjectSizePtrOutputWithContext(ctx context.Context) StorageLensGroupMatchObjectSizePtrOutput {
	return o
}

func (o StorageLensGroupMatchObjectSizePtrOutput) Elem() StorageLensGroupMatchObjectSizeOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectSize) StorageLensGroupMatchObjectSize {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupMatchObjectSize
		return ret
	}).(StorageLensGroupMatchObjectSizeOutput)
}

// Minimum object size to which the rule applies.
func (o StorageLensGroupMatchObjectSizePtrOutput) BytesGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectSize) *int {
		if v == nil {
			return nil
		}
		return v.BytesGreaterThan
	}).(pulumi.IntPtrOutput)
}

// Maximum object size to which the rule applies.
func (o StorageLensGroupMatchObjectSizePtrOutput) BytesLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageLensGroupMatchObjectSize) *int {
		if v == nil {
			return nil
		}
		return v.BytesLessThan
	}).(pulumi.IntPtrOutput)
}

// The Storage Lens group will include objects that match any of the specified filter values.
type StorageLensGroupOr struct {
	MatchAnyPrefix  []string                         `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  []string                         `pulumi:"matchAnySuffix"`
	MatchAnyTag     []StorageLensGroupTag            `pulumi:"matchAnyTag"`
	MatchObjectAge  *StorageLensGroupMatchObjectAge  `pulumi:"matchObjectAge"`
	MatchObjectSize *StorageLensGroupMatchObjectSize `pulumi:"matchObjectSize"`
}

// StorageLensGroupOrInput is an input type that accepts StorageLensGroupOrArgs and StorageLensGroupOrOutput values.
// You can construct a concrete instance of `StorageLensGroupOrInput` via:
//
//	StorageLensGroupOrArgs{...}
type StorageLensGroupOrInput interface {
	pulumi.Input

	ToStorageLensGroupOrOutput() StorageLensGroupOrOutput
	ToStorageLensGroupOrOutputWithContext(context.Context) StorageLensGroupOrOutput
}

// The Storage Lens group will include objects that match any of the specified filter values.
type StorageLensGroupOrArgs struct {
	MatchAnyPrefix  pulumi.StringArrayInput                 `pulumi:"matchAnyPrefix"`
	MatchAnySuffix  pulumi.StringArrayInput                 `pulumi:"matchAnySuffix"`
	MatchAnyTag     StorageLensGroupTagArrayInput           `pulumi:"matchAnyTag"`
	MatchObjectAge  StorageLensGroupMatchObjectAgePtrInput  `pulumi:"matchObjectAge"`
	MatchObjectSize StorageLensGroupMatchObjectSizePtrInput `pulumi:"matchObjectSize"`
}

func (StorageLensGroupOrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupOr)(nil)).Elem()
}

func (i StorageLensGroupOrArgs) ToStorageLensGroupOrOutput() StorageLensGroupOrOutput {
	return i.ToStorageLensGroupOrOutputWithContext(context.Background())
}

func (i StorageLensGroupOrArgs) ToStorageLensGroupOrOutputWithContext(ctx context.Context) StorageLensGroupOrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupOrOutput)
}

func (i StorageLensGroupOrArgs) ToStorageLensGroupOrPtrOutput() StorageLensGroupOrPtrOutput {
	return i.ToStorageLensGroupOrPtrOutputWithContext(context.Background())
}

func (i StorageLensGroupOrArgs) ToStorageLensGroupOrPtrOutputWithContext(ctx context.Context) StorageLensGroupOrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupOrOutput).ToStorageLensGroupOrPtrOutputWithContext(ctx)
}

// StorageLensGroupOrPtrInput is an input type that accepts StorageLensGroupOrArgs, StorageLensGroupOrPtr and StorageLensGroupOrPtrOutput values.
// You can construct a concrete instance of `StorageLensGroupOrPtrInput` via:
//
//	        StorageLensGroupOrArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupOrPtrInput interface {
	pulumi.Input

	ToStorageLensGroupOrPtrOutput() StorageLensGroupOrPtrOutput
	ToStorageLensGroupOrPtrOutputWithContext(context.Context) StorageLensGroupOrPtrOutput
}

type storageLensGroupOrPtrType StorageLensGroupOrArgs

func StorageLensGroupOrPtr(v *StorageLensGroupOrArgs) StorageLensGroupOrPtrInput {
	return (*storageLensGroupOrPtrType)(v)
}

func (*storageLensGroupOrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupOr)(nil)).Elem()
}

func (i *storageLensGroupOrPtrType) ToStorageLensGroupOrPtrOutput() StorageLensGroupOrPtrOutput {
	return i.ToStorageLensGroupOrPtrOutputWithContext(context.Background())
}

func (i *storageLensGroupOrPtrType) ToStorageLensGroupOrPtrOutputWithContext(ctx context.Context) StorageLensGroupOrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupOrPtrOutput)
}

// The Storage Lens group will include objects that match any of the specified filter values.
type StorageLensGroupOrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupOrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupOr)(nil)).Elem()
}

func (o StorageLensGroupOrOutput) ToStorageLensGroupOrOutput() StorageLensGroupOrOutput {
	return o
}

func (o StorageLensGroupOrOutput) ToStorageLensGroupOrOutputWithContext(ctx context.Context) StorageLensGroupOrOutput {
	return o
}

func (o StorageLensGroupOrOutput) ToStorageLensGroupOrPtrOutput() StorageLensGroupOrPtrOutput {
	return o.ToStorageLensGroupOrPtrOutputWithContext(context.Background())
}

func (o StorageLensGroupOrOutput) ToStorageLensGroupOrPtrOutputWithContext(ctx context.Context) StorageLensGroupOrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupOr) *StorageLensGroupOr {
		return &v
	}).(StorageLensGroupOrPtrOutput)
}

func (o StorageLensGroupOrOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupOr) []string { return v.MatchAnyPrefix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupOrOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupOr) []string { return v.MatchAnySuffix }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupOrOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v StorageLensGroupOr) []StorageLensGroupTag { return v.MatchAnyTag }).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupOrOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v StorageLensGroupOr) *StorageLensGroupMatchObjectAge { return v.MatchObjectAge }).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupOrOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v StorageLensGroupOr) *StorageLensGroupMatchObjectSize { return v.MatchObjectSize }).(StorageLensGroupMatchObjectSizePtrOutput)
}

type StorageLensGroupOrPtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupOrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupOr)(nil)).Elem()
}

func (o StorageLensGroupOrPtrOutput) ToStorageLensGroupOrPtrOutput() StorageLensGroupOrPtrOutput {
	return o
}

func (o StorageLensGroupOrPtrOutput) ToStorageLensGroupOrPtrOutputWithContext(ctx context.Context) StorageLensGroupOrPtrOutput {
	return o
}

func (o StorageLensGroupOrPtrOutput) Elem() StorageLensGroupOrOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) StorageLensGroupOr {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupOr
		return ret
	}).(StorageLensGroupOrOutput)
}

func (o StorageLensGroupOrPtrOutput) MatchAnyPrefix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnyPrefix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupOrPtrOutput) MatchAnySuffix() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) []string {
		if v == nil {
			return nil
		}
		return v.MatchAnySuffix
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupOrPtrOutput) MatchAnyTag() StorageLensGroupTagArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) []StorageLensGroupTag {
		if v == nil {
			return nil
		}
		return v.MatchAnyTag
	}).(StorageLensGroupTagArrayOutput)
}

func (o StorageLensGroupOrPtrOutput) MatchObjectAge() StorageLensGroupMatchObjectAgePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) *StorageLensGroupMatchObjectAge {
		if v == nil {
			return nil
		}
		return v.MatchObjectAge
	}).(StorageLensGroupMatchObjectAgePtrOutput)
}

func (o StorageLensGroupOrPtrOutput) MatchObjectSize() StorageLensGroupMatchObjectSizePtrOutput {
	return o.ApplyT(func(v *StorageLensGroupOr) *StorageLensGroupMatchObjectSize {
		if v == nil {
			return nil
		}
		return v.MatchObjectSize
	}).(StorageLensGroupMatchObjectSizePtrOutput)
}

// Selection criteria for Storage Lens Group level metrics
type StorageLensGroupSelectionCriteria struct {
	Exclude []string `pulumi:"exclude"`
	Include []string `pulumi:"include"`
}

// StorageLensGroupSelectionCriteriaInput is an input type that accepts StorageLensGroupSelectionCriteriaArgs and StorageLensGroupSelectionCriteriaOutput values.
// You can construct a concrete instance of `StorageLensGroupSelectionCriteriaInput` via:
//
//	StorageLensGroupSelectionCriteriaArgs{...}
type StorageLensGroupSelectionCriteriaInput interface {
	pulumi.Input

	ToStorageLensGroupSelectionCriteriaOutput() StorageLensGroupSelectionCriteriaOutput
	ToStorageLensGroupSelectionCriteriaOutputWithContext(context.Context) StorageLensGroupSelectionCriteriaOutput
}

// Selection criteria for Storage Lens Group level metrics
type StorageLensGroupSelectionCriteriaArgs struct {
	Exclude pulumi.StringArrayInput `pulumi:"exclude"`
	Include pulumi.StringArrayInput `pulumi:"include"`
}

func (StorageLensGroupSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupSelectionCriteria)(nil)).Elem()
}

func (i StorageLensGroupSelectionCriteriaArgs) ToStorageLensGroupSelectionCriteriaOutput() StorageLensGroupSelectionCriteriaOutput {
	return i.ToStorageLensGroupSelectionCriteriaOutputWithContext(context.Background())
}

func (i StorageLensGroupSelectionCriteriaArgs) ToStorageLensGroupSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupSelectionCriteriaOutput)
}

func (i StorageLensGroupSelectionCriteriaArgs) ToStorageLensGroupSelectionCriteriaPtrOutput() StorageLensGroupSelectionCriteriaPtrOutput {
	return i.ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i StorageLensGroupSelectionCriteriaArgs) ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupSelectionCriteriaOutput).ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(ctx)
}

// StorageLensGroupSelectionCriteriaPtrInput is an input type that accepts StorageLensGroupSelectionCriteriaArgs, StorageLensGroupSelectionCriteriaPtr and StorageLensGroupSelectionCriteriaPtrOutput values.
// You can construct a concrete instance of `StorageLensGroupSelectionCriteriaPtrInput` via:
//
//	        StorageLensGroupSelectionCriteriaArgs{...}
//
//	or:
//
//	        nil
type StorageLensGroupSelectionCriteriaPtrInput interface {
	pulumi.Input

	ToStorageLensGroupSelectionCriteriaPtrOutput() StorageLensGroupSelectionCriteriaPtrOutput
	ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(context.Context) StorageLensGroupSelectionCriteriaPtrOutput
}

type storageLensGroupSelectionCriteriaPtrType StorageLensGroupSelectionCriteriaArgs

func StorageLensGroupSelectionCriteriaPtr(v *StorageLensGroupSelectionCriteriaArgs) StorageLensGroupSelectionCriteriaPtrInput {
	return (*storageLensGroupSelectionCriteriaPtrType)(v)
}

func (*storageLensGroupSelectionCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupSelectionCriteria)(nil)).Elem()
}

func (i *storageLensGroupSelectionCriteriaPtrType) ToStorageLensGroupSelectionCriteriaPtrOutput() StorageLensGroupSelectionCriteriaPtrOutput {
	return i.ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i *storageLensGroupSelectionCriteriaPtrType) ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupSelectionCriteriaPtrOutput)
}

// Selection criteria for Storage Lens Group level metrics
type StorageLensGroupSelectionCriteriaOutput struct{ *pulumi.OutputState }

func (StorageLensGroupSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupSelectionCriteria)(nil)).Elem()
}

func (o StorageLensGroupSelectionCriteriaOutput) ToStorageLensGroupSelectionCriteriaOutput() StorageLensGroupSelectionCriteriaOutput {
	return o
}

func (o StorageLensGroupSelectionCriteriaOutput) ToStorageLensGroupSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaOutput {
	return o
}

func (o StorageLensGroupSelectionCriteriaOutput) ToStorageLensGroupSelectionCriteriaPtrOutput() StorageLensGroupSelectionCriteriaPtrOutput {
	return o.ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (o StorageLensGroupSelectionCriteriaOutput) ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensGroupSelectionCriteria) *StorageLensGroupSelectionCriteria {
		return &v
	}).(StorageLensGroupSelectionCriteriaPtrOutput)
}

func (o StorageLensGroupSelectionCriteriaOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupSelectionCriteria) []string { return v.Exclude }).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupSelectionCriteriaOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageLensGroupSelectionCriteria) []string { return v.Include }).(pulumi.StringArrayOutput)
}

type StorageLensGroupSelectionCriteriaPtrOutput struct{ *pulumi.OutputState }

func (StorageLensGroupSelectionCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensGroupSelectionCriteria)(nil)).Elem()
}

func (o StorageLensGroupSelectionCriteriaPtrOutput) ToStorageLensGroupSelectionCriteriaPtrOutput() StorageLensGroupSelectionCriteriaPtrOutput {
	return o
}

func (o StorageLensGroupSelectionCriteriaPtrOutput) ToStorageLensGroupSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensGroupSelectionCriteriaPtrOutput {
	return o
}

func (o StorageLensGroupSelectionCriteriaPtrOutput) Elem() StorageLensGroupSelectionCriteriaOutput {
	return o.ApplyT(func(v *StorageLensGroupSelectionCriteria) StorageLensGroupSelectionCriteria {
		if v != nil {
			return *v
		}
		var ret StorageLensGroupSelectionCriteria
		return ret
	}).(StorageLensGroupSelectionCriteriaOutput)
}

func (o StorageLensGroupSelectionCriteriaPtrOutput) Exclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupSelectionCriteria) []string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringArrayOutput)
}

func (o StorageLensGroupSelectionCriteriaPtrOutput) Include() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageLensGroupSelectionCriteria) []string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringArrayOutput)
}

type StorageLensGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// StorageLensGroupTagInput is an input type that accepts StorageLensGroupTagArgs and StorageLensGroupTagOutput values.
// You can construct a concrete instance of `StorageLensGroupTagInput` via:
//
//	StorageLensGroupTagArgs{...}
type StorageLensGroupTagInput interface {
	pulumi.Input

	ToStorageLensGroupTagOutput() StorageLensGroupTagOutput
	ToStorageLensGroupTagOutputWithContext(context.Context) StorageLensGroupTagOutput
}

type StorageLensGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (StorageLensGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupTag)(nil)).Elem()
}

func (i StorageLensGroupTagArgs) ToStorageLensGroupTagOutput() StorageLensGroupTagOutput {
	return i.ToStorageLensGroupTagOutputWithContext(context.Background())
}

func (i StorageLensGroupTagArgs) ToStorageLensGroupTagOutputWithContext(ctx context.Context) StorageLensGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupTagOutput)
}

// StorageLensGroupTagArrayInput is an input type that accepts StorageLensGroupTagArray and StorageLensGroupTagArrayOutput values.
// You can construct a concrete instance of `StorageLensGroupTagArrayInput` via:
//
//	StorageLensGroupTagArray{ StorageLensGroupTagArgs{...} }
type StorageLensGroupTagArrayInput interface {
	pulumi.Input

	ToStorageLensGroupTagArrayOutput() StorageLensGroupTagArrayOutput
	ToStorageLensGroupTagArrayOutputWithContext(context.Context) StorageLensGroupTagArrayOutput
}

type StorageLensGroupTagArray []StorageLensGroupTagInput

func (StorageLensGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageLensGroupTag)(nil)).Elem()
}

func (i StorageLensGroupTagArray) ToStorageLensGroupTagArrayOutput() StorageLensGroupTagArrayOutput {
	return i.ToStorageLensGroupTagArrayOutputWithContext(context.Background())
}

func (i StorageLensGroupTagArray) ToStorageLensGroupTagArrayOutputWithContext(ctx context.Context) StorageLensGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensGroupTagArrayOutput)
}

type StorageLensGroupTagOutput struct{ *pulumi.OutputState }

func (StorageLensGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensGroupTag)(nil)).Elem()
}

func (o StorageLensGroupTagOutput) ToStorageLensGroupTagOutput() StorageLensGroupTagOutput {
	return o
}

func (o StorageLensGroupTagOutput) ToStorageLensGroupTagOutputWithContext(ctx context.Context) StorageLensGroupTagOutput {
	return o
}

func (o StorageLensGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o StorageLensGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type StorageLensGroupTagArrayOutput struct{ *pulumi.OutputState }

func (StorageLensGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageLensGroupTag)(nil)).Elem()
}

func (o StorageLensGroupTagArrayOutput) ToStorageLensGroupTagArrayOutput() StorageLensGroupTagArrayOutput {
	return o
}

func (o StorageLensGroupTagArrayOutput) ToStorageLensGroupTagArrayOutputWithContext(ctx context.Context) StorageLensGroupTagArrayOutput {
	return o
}

func (o StorageLensGroupTagArrayOutput) Index(i pulumi.IntInput) StorageLensGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageLensGroupTag {
		return vs[0].([]StorageLensGroupTag)[vs[1].(int)]
	}).(StorageLensGroupTagOutput)
}

// Prefix-level metrics configurations.
type StorageLensPrefixLevel struct {
	StorageMetrics StorageLensPrefixLevelStorageMetrics `pulumi:"storageMetrics"`
}

// StorageLensPrefixLevelInput is an input type that accepts StorageLensPrefixLevelArgs and StorageLensPrefixLevelOutput values.
// You can construct a concrete instance of `StorageLensPrefixLevelInput` via:
//
//	StorageLensPrefixLevelArgs{...}
type StorageLensPrefixLevelInput interface {
	pulumi.Input

	ToStorageLensPrefixLevelOutput() StorageLensPrefixLevelOutput
	ToStorageLensPrefixLevelOutputWithContext(context.Context) StorageLensPrefixLevelOutput
}

// Prefix-level metrics configurations.
type StorageLensPrefixLevelArgs struct {
	StorageMetrics StorageLensPrefixLevelStorageMetricsInput `pulumi:"storageMetrics"`
}

func (StorageLensPrefixLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensPrefixLevel)(nil)).Elem()
}

func (i StorageLensPrefixLevelArgs) ToStorageLensPrefixLevelOutput() StorageLensPrefixLevelOutput {
	return i.ToStorageLensPrefixLevelOutputWithContext(context.Background())
}

func (i StorageLensPrefixLevelArgs) ToStorageLensPrefixLevelOutputWithContext(ctx context.Context) StorageLensPrefixLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelOutput)
}

func (i StorageLensPrefixLevelArgs) ToStorageLensPrefixLevelPtrOutput() StorageLensPrefixLevelPtrOutput {
	return i.ToStorageLensPrefixLevelPtrOutputWithContext(context.Background())
}

func (i StorageLensPrefixLevelArgs) ToStorageLensPrefixLevelPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelOutput).ToStorageLensPrefixLevelPtrOutputWithContext(ctx)
}

// StorageLensPrefixLevelPtrInput is an input type that accepts StorageLensPrefixLevelArgs, StorageLensPrefixLevelPtr and StorageLensPrefixLevelPtrOutput values.
// You can construct a concrete instance of `StorageLensPrefixLevelPtrInput` via:
//
//	        StorageLensPrefixLevelArgs{...}
//
//	or:
//
//	        nil
type StorageLensPrefixLevelPtrInput interface {
	pulumi.Input

	ToStorageLensPrefixLevelPtrOutput() StorageLensPrefixLevelPtrOutput
	ToStorageLensPrefixLevelPtrOutputWithContext(context.Context) StorageLensPrefixLevelPtrOutput
}

type storageLensPrefixLevelPtrType StorageLensPrefixLevelArgs

func StorageLensPrefixLevelPtr(v *StorageLensPrefixLevelArgs) StorageLensPrefixLevelPtrInput {
	return (*storageLensPrefixLevelPtrType)(v)
}

func (*storageLensPrefixLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensPrefixLevel)(nil)).Elem()
}

func (i *storageLensPrefixLevelPtrType) ToStorageLensPrefixLevelPtrOutput() StorageLensPrefixLevelPtrOutput {
	return i.ToStorageLensPrefixLevelPtrOutputWithContext(context.Background())
}

func (i *storageLensPrefixLevelPtrType) ToStorageLensPrefixLevelPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelPtrOutput)
}

// Prefix-level metrics configurations.
type StorageLensPrefixLevelOutput struct{ *pulumi.OutputState }

func (StorageLensPrefixLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensPrefixLevel)(nil)).Elem()
}

func (o StorageLensPrefixLevelOutput) ToStorageLensPrefixLevelOutput() StorageLensPrefixLevelOutput {
	return o
}

func (o StorageLensPrefixLevelOutput) ToStorageLensPrefixLevelOutputWithContext(ctx context.Context) StorageLensPrefixLevelOutput {
	return o
}

func (o StorageLensPrefixLevelOutput) ToStorageLensPrefixLevelPtrOutput() StorageLensPrefixLevelPtrOutput {
	return o.ToStorageLensPrefixLevelPtrOutputWithContext(context.Background())
}

func (o StorageLensPrefixLevelOutput) ToStorageLensPrefixLevelPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensPrefixLevel) *StorageLensPrefixLevel {
		return &v
	}).(StorageLensPrefixLevelPtrOutput)
}

func (o StorageLensPrefixLevelOutput) StorageMetrics() StorageLensPrefixLevelStorageMetricsOutput {
	return o.ApplyT(func(v StorageLensPrefixLevel) StorageLensPrefixLevelStorageMetrics { return v.StorageMetrics }).(StorageLensPrefixLevelStorageMetricsOutput)
}

type StorageLensPrefixLevelPtrOutput struct{ *pulumi.OutputState }

func (StorageLensPrefixLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensPrefixLevel)(nil)).Elem()
}

func (o StorageLensPrefixLevelPtrOutput) ToStorageLensPrefixLevelPtrOutput() StorageLensPrefixLevelPtrOutput {
	return o
}

func (o StorageLensPrefixLevelPtrOutput) ToStorageLensPrefixLevelPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelPtrOutput {
	return o
}

func (o StorageLensPrefixLevelPtrOutput) Elem() StorageLensPrefixLevelOutput {
	return o.ApplyT(func(v *StorageLensPrefixLevel) StorageLensPrefixLevel {
		if v != nil {
			return *v
		}
		var ret StorageLensPrefixLevel
		return ret
	}).(StorageLensPrefixLevelOutput)
}

func (o StorageLensPrefixLevelPtrOutput) StorageMetrics() StorageLensPrefixLevelStorageMetricsPtrOutput {
	return o.ApplyT(func(v *StorageLensPrefixLevel) *StorageLensPrefixLevelStorageMetrics {
		if v == nil {
			return nil
		}
		return &v.StorageMetrics
	}).(StorageLensPrefixLevelStorageMetricsPtrOutput)
}

type StorageLensPrefixLevelStorageMetrics struct {
	// Specifies whether prefix-level storage metrics are enabled or disabled.
	IsEnabled         *bool                         `pulumi:"isEnabled"`
	SelectionCriteria *StorageLensSelectionCriteria `pulumi:"selectionCriteria"`
}

// StorageLensPrefixLevelStorageMetricsInput is an input type that accepts StorageLensPrefixLevelStorageMetricsArgs and StorageLensPrefixLevelStorageMetricsOutput values.
// You can construct a concrete instance of `StorageLensPrefixLevelStorageMetricsInput` via:
//
//	StorageLensPrefixLevelStorageMetricsArgs{...}
type StorageLensPrefixLevelStorageMetricsInput interface {
	pulumi.Input

	ToStorageLensPrefixLevelStorageMetricsOutput() StorageLensPrefixLevelStorageMetricsOutput
	ToStorageLensPrefixLevelStorageMetricsOutputWithContext(context.Context) StorageLensPrefixLevelStorageMetricsOutput
}

type StorageLensPrefixLevelStorageMetricsArgs struct {
	// Specifies whether prefix-level storage metrics are enabled or disabled.
	IsEnabled         pulumi.BoolPtrInput                  `pulumi:"isEnabled"`
	SelectionCriteria StorageLensSelectionCriteriaPtrInput `pulumi:"selectionCriteria"`
}

func (StorageLensPrefixLevelStorageMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensPrefixLevelStorageMetrics)(nil)).Elem()
}

func (i StorageLensPrefixLevelStorageMetricsArgs) ToStorageLensPrefixLevelStorageMetricsOutput() StorageLensPrefixLevelStorageMetricsOutput {
	return i.ToStorageLensPrefixLevelStorageMetricsOutputWithContext(context.Background())
}

func (i StorageLensPrefixLevelStorageMetricsArgs) ToStorageLensPrefixLevelStorageMetricsOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelStorageMetricsOutput)
}

func (i StorageLensPrefixLevelStorageMetricsArgs) ToStorageLensPrefixLevelStorageMetricsPtrOutput() StorageLensPrefixLevelStorageMetricsPtrOutput {
	return i.ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(context.Background())
}

func (i StorageLensPrefixLevelStorageMetricsArgs) ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelStorageMetricsOutput).ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(ctx)
}

// StorageLensPrefixLevelStorageMetricsPtrInput is an input type that accepts StorageLensPrefixLevelStorageMetricsArgs, StorageLensPrefixLevelStorageMetricsPtr and StorageLensPrefixLevelStorageMetricsPtrOutput values.
// You can construct a concrete instance of `StorageLensPrefixLevelStorageMetricsPtrInput` via:
//
//	        StorageLensPrefixLevelStorageMetricsArgs{...}
//
//	or:
//
//	        nil
type StorageLensPrefixLevelStorageMetricsPtrInput interface {
	pulumi.Input

	ToStorageLensPrefixLevelStorageMetricsPtrOutput() StorageLensPrefixLevelStorageMetricsPtrOutput
	ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(context.Context) StorageLensPrefixLevelStorageMetricsPtrOutput
}

type storageLensPrefixLevelStorageMetricsPtrType StorageLensPrefixLevelStorageMetricsArgs

func StorageLensPrefixLevelStorageMetricsPtr(v *StorageLensPrefixLevelStorageMetricsArgs) StorageLensPrefixLevelStorageMetricsPtrInput {
	return (*storageLensPrefixLevelStorageMetricsPtrType)(v)
}

func (*storageLensPrefixLevelStorageMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensPrefixLevelStorageMetrics)(nil)).Elem()
}

func (i *storageLensPrefixLevelStorageMetricsPtrType) ToStorageLensPrefixLevelStorageMetricsPtrOutput() StorageLensPrefixLevelStorageMetricsPtrOutput {
	return i.ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(context.Background())
}

func (i *storageLensPrefixLevelStorageMetricsPtrType) ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensPrefixLevelStorageMetricsPtrOutput)
}

type StorageLensPrefixLevelStorageMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensPrefixLevelStorageMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensPrefixLevelStorageMetrics)(nil)).Elem()
}

func (o StorageLensPrefixLevelStorageMetricsOutput) ToStorageLensPrefixLevelStorageMetricsOutput() StorageLensPrefixLevelStorageMetricsOutput {
	return o
}

func (o StorageLensPrefixLevelStorageMetricsOutput) ToStorageLensPrefixLevelStorageMetricsOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsOutput {
	return o
}

func (o StorageLensPrefixLevelStorageMetricsOutput) ToStorageLensPrefixLevelStorageMetricsPtrOutput() StorageLensPrefixLevelStorageMetricsPtrOutput {
	return o.ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(context.Background())
}

func (o StorageLensPrefixLevelStorageMetricsOutput) ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensPrefixLevelStorageMetrics) *StorageLensPrefixLevelStorageMetrics {
		return &v
	}).(StorageLensPrefixLevelStorageMetricsPtrOutput)
}

// Specifies whether prefix-level storage metrics are enabled or disabled.
func (o StorageLensPrefixLevelStorageMetricsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageLensPrefixLevelStorageMetrics) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

func (o StorageLensPrefixLevelStorageMetricsOutput) SelectionCriteria() StorageLensSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v StorageLensPrefixLevelStorageMetrics) *StorageLensSelectionCriteria { return v.SelectionCriteria }).(StorageLensSelectionCriteriaPtrOutput)
}

type StorageLensPrefixLevelStorageMetricsPtrOutput struct{ *pulumi.OutputState }

func (StorageLensPrefixLevelStorageMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensPrefixLevelStorageMetrics)(nil)).Elem()
}

func (o StorageLensPrefixLevelStorageMetricsPtrOutput) ToStorageLensPrefixLevelStorageMetricsPtrOutput() StorageLensPrefixLevelStorageMetricsPtrOutput {
	return o
}

func (o StorageLensPrefixLevelStorageMetricsPtrOutput) ToStorageLensPrefixLevelStorageMetricsPtrOutputWithContext(ctx context.Context) StorageLensPrefixLevelStorageMetricsPtrOutput {
	return o
}

func (o StorageLensPrefixLevelStorageMetricsPtrOutput) Elem() StorageLensPrefixLevelStorageMetricsOutput {
	return o.ApplyT(func(v *StorageLensPrefixLevelStorageMetrics) StorageLensPrefixLevelStorageMetrics {
		if v != nil {
			return *v
		}
		var ret StorageLensPrefixLevelStorageMetrics
		return ret
	}).(StorageLensPrefixLevelStorageMetricsOutput)
}

// Specifies whether prefix-level storage metrics are enabled or disabled.
func (o StorageLensPrefixLevelStorageMetricsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageLensPrefixLevelStorageMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o StorageLensPrefixLevelStorageMetricsPtrOutput) SelectionCriteria() StorageLensSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v *StorageLensPrefixLevelStorageMetrics) *StorageLensSelectionCriteria {
		if v == nil {
			return nil
		}
		return v.SelectionCriteria
	}).(StorageLensSelectionCriteriaPtrOutput)
}

// S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.
type StorageLensS3BucketDestination struct {
	// The AWS account ID that owns the destination S3 bucket.
	AccountId string `pulumi:"accountId"`
	// The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
	Arn        string                 `pulumi:"arn"`
	Encryption *StorageLensEncryption `pulumi:"encryption"`
	// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
	Format StorageLensS3BucketDestinationFormat `pulumi:"format"`
	// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
	OutputSchemaVersion StorageLensS3BucketDestinationOutputSchemaVersion `pulumi:"outputSchemaVersion"`
	// The prefix to use for Amazon S3 Storage Lens export.
	Prefix *string `pulumi:"prefix"`
}

// StorageLensS3BucketDestinationInput is an input type that accepts StorageLensS3BucketDestinationArgs and StorageLensS3BucketDestinationOutput values.
// You can construct a concrete instance of `StorageLensS3BucketDestinationInput` via:
//
//	StorageLensS3BucketDestinationArgs{...}
type StorageLensS3BucketDestinationInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationOutput() StorageLensS3BucketDestinationOutput
	ToStorageLensS3BucketDestinationOutputWithContext(context.Context) StorageLensS3BucketDestinationOutput
}

// S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.
type StorageLensS3BucketDestinationArgs struct {
	// The AWS account ID that owns the destination S3 bucket.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
	Arn        pulumi.StringInput            `pulumi:"arn"`
	Encryption StorageLensEncryptionPtrInput `pulumi:"encryption"`
	// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
	Format StorageLensS3BucketDestinationFormatInput `pulumi:"format"`
	// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
	OutputSchemaVersion StorageLensS3BucketDestinationOutputSchemaVersionInput `pulumi:"outputSchemaVersion"`
	// The prefix to use for Amazon S3 Storage Lens export.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (StorageLensS3BucketDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestination)(nil)).Elem()
}

func (i StorageLensS3BucketDestinationArgs) ToStorageLensS3BucketDestinationOutput() StorageLensS3BucketDestinationOutput {
	return i.ToStorageLensS3BucketDestinationOutputWithContext(context.Background())
}

func (i StorageLensS3BucketDestinationArgs) ToStorageLensS3BucketDestinationOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensS3BucketDestinationOutput)
}

func (i StorageLensS3BucketDestinationArgs) ToStorageLensS3BucketDestinationPtrOutput() StorageLensS3BucketDestinationPtrOutput {
	return i.ToStorageLensS3BucketDestinationPtrOutputWithContext(context.Background())
}

func (i StorageLensS3BucketDestinationArgs) ToStorageLensS3BucketDestinationPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensS3BucketDestinationOutput).ToStorageLensS3BucketDestinationPtrOutputWithContext(ctx)
}

// StorageLensS3BucketDestinationPtrInput is an input type that accepts StorageLensS3BucketDestinationArgs, StorageLensS3BucketDestinationPtr and StorageLensS3BucketDestinationPtrOutput values.
// You can construct a concrete instance of `StorageLensS3BucketDestinationPtrInput` via:
//
//	        StorageLensS3BucketDestinationArgs{...}
//
//	or:
//
//	        nil
type StorageLensS3BucketDestinationPtrInput interface {
	pulumi.Input

	ToStorageLensS3BucketDestinationPtrOutput() StorageLensS3BucketDestinationPtrOutput
	ToStorageLensS3BucketDestinationPtrOutputWithContext(context.Context) StorageLensS3BucketDestinationPtrOutput
}

type storageLensS3BucketDestinationPtrType StorageLensS3BucketDestinationArgs

func StorageLensS3BucketDestinationPtr(v *StorageLensS3BucketDestinationArgs) StorageLensS3BucketDestinationPtrInput {
	return (*storageLensS3BucketDestinationPtrType)(v)
}

func (*storageLensS3BucketDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensS3BucketDestination)(nil)).Elem()
}

func (i *storageLensS3BucketDestinationPtrType) ToStorageLensS3BucketDestinationPtrOutput() StorageLensS3BucketDestinationPtrOutput {
	return i.ToStorageLensS3BucketDestinationPtrOutputWithContext(context.Background())
}

func (i *storageLensS3BucketDestinationPtrType) ToStorageLensS3BucketDestinationPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensS3BucketDestinationPtrOutput)
}

// S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.
type StorageLensS3BucketDestinationOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensS3BucketDestination)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationOutput) ToStorageLensS3BucketDestinationOutput() StorageLensS3BucketDestinationOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutput) ToStorageLensS3BucketDestinationOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationOutput {
	return o
}

func (o StorageLensS3BucketDestinationOutput) ToStorageLensS3BucketDestinationPtrOutput() StorageLensS3BucketDestinationPtrOutput {
	return o.ToStorageLensS3BucketDestinationPtrOutputWithContext(context.Background())
}

func (o StorageLensS3BucketDestinationOutput) ToStorageLensS3BucketDestinationPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensS3BucketDestination) *StorageLensS3BucketDestination {
		return &v
	}).(StorageLensS3BucketDestinationPtrOutput)
}

// The AWS account ID that owns the destination S3 bucket.
func (o StorageLensS3BucketDestinationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) string { return v.AccountId }).(pulumi.StringOutput)
}

// The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
func (o StorageLensS3BucketDestinationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) string { return v.Arn }).(pulumi.StringOutput)
}

func (o StorageLensS3BucketDestinationOutput) Encryption() StorageLensEncryptionPtrOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) *StorageLensEncryption { return v.Encryption }).(StorageLensEncryptionPtrOutput)
}

// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
func (o StorageLensS3BucketDestinationOutput) Format() StorageLensS3BucketDestinationFormatOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) StorageLensS3BucketDestinationFormat { return v.Format }).(StorageLensS3BucketDestinationFormatOutput)
}

// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
func (o StorageLensS3BucketDestinationOutput) OutputSchemaVersion() StorageLensS3BucketDestinationOutputSchemaVersionOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) StorageLensS3BucketDestinationOutputSchemaVersion {
		return v.OutputSchemaVersion
	}).(StorageLensS3BucketDestinationOutputSchemaVersionOutput)
}

// The prefix to use for Amazon S3 Storage Lens export.
func (o StorageLensS3BucketDestinationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageLensS3BucketDestination) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type StorageLensS3BucketDestinationPtrOutput struct{ *pulumi.OutputState }

func (StorageLensS3BucketDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensS3BucketDestination)(nil)).Elem()
}

func (o StorageLensS3BucketDestinationPtrOutput) ToStorageLensS3BucketDestinationPtrOutput() StorageLensS3BucketDestinationPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationPtrOutput) ToStorageLensS3BucketDestinationPtrOutputWithContext(ctx context.Context) StorageLensS3BucketDestinationPtrOutput {
	return o
}

func (o StorageLensS3BucketDestinationPtrOutput) Elem() StorageLensS3BucketDestinationOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) StorageLensS3BucketDestination {
		if v != nil {
			return *v
		}
		var ret StorageLensS3BucketDestination
		return ret
	}).(StorageLensS3BucketDestinationOutput)
}

// The AWS account ID that owns the destination S3 bucket.
func (o StorageLensS3BucketDestinationPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
func (o StorageLensS3BucketDestinationPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o StorageLensS3BucketDestinationPtrOutput) Encryption() StorageLensEncryptionPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *StorageLensEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(StorageLensEncryptionPtrOutput)
}

// Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
func (o StorageLensS3BucketDestinationPtrOutput) Format() StorageLensS3BucketDestinationFormatPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *StorageLensS3BucketDestinationFormat {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(StorageLensS3BucketDestinationFormatPtrOutput)
}

// The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
func (o StorageLensS3BucketDestinationPtrOutput) OutputSchemaVersion() StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *StorageLensS3BucketDestinationOutputSchemaVersion {
		if v == nil {
			return nil
		}
		return &v.OutputSchemaVersion
	}).(StorageLensS3BucketDestinationOutputSchemaVersionPtrOutput)
}

// The prefix to use for Amazon S3 Storage Lens export.
func (o StorageLensS3BucketDestinationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageLensS3BucketDestination) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Selection criteria for prefix-level metrics.
type StorageLensSelectionCriteria struct {
	// Delimiter to divide S3 key into hierarchy of prefixes.
	Delimiter *string `pulumi:"delimiter"`
	// Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
	MaxDepth *int `pulumi:"maxDepth"`
	// The minimum storage bytes threshold for the prefixes to be included in the analysis.
	MinStorageBytesPercentage *float64 `pulumi:"minStorageBytesPercentage"`
}

// StorageLensSelectionCriteriaInput is an input type that accepts StorageLensSelectionCriteriaArgs and StorageLensSelectionCriteriaOutput values.
// You can construct a concrete instance of `StorageLensSelectionCriteriaInput` via:
//
//	StorageLensSelectionCriteriaArgs{...}
type StorageLensSelectionCriteriaInput interface {
	pulumi.Input

	ToStorageLensSelectionCriteriaOutput() StorageLensSelectionCriteriaOutput
	ToStorageLensSelectionCriteriaOutputWithContext(context.Context) StorageLensSelectionCriteriaOutput
}

// Selection criteria for prefix-level metrics.
type StorageLensSelectionCriteriaArgs struct {
	// Delimiter to divide S3 key into hierarchy of prefixes.
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
	MaxDepth pulumi.IntPtrInput `pulumi:"maxDepth"`
	// The minimum storage bytes threshold for the prefixes to be included in the analysis.
	MinStorageBytesPercentage pulumi.Float64PtrInput `pulumi:"minStorageBytesPercentage"`
}

func (StorageLensSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensSelectionCriteria)(nil)).Elem()
}

func (i StorageLensSelectionCriteriaArgs) ToStorageLensSelectionCriteriaOutput() StorageLensSelectionCriteriaOutput {
	return i.ToStorageLensSelectionCriteriaOutputWithContext(context.Background())
}

func (i StorageLensSelectionCriteriaArgs) ToStorageLensSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensSelectionCriteriaOutput)
}

func (i StorageLensSelectionCriteriaArgs) ToStorageLensSelectionCriteriaPtrOutput() StorageLensSelectionCriteriaPtrOutput {
	return i.ToStorageLensSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i StorageLensSelectionCriteriaArgs) ToStorageLensSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensSelectionCriteriaOutput).ToStorageLensSelectionCriteriaPtrOutputWithContext(ctx)
}

// StorageLensSelectionCriteriaPtrInput is an input type that accepts StorageLensSelectionCriteriaArgs, StorageLensSelectionCriteriaPtr and StorageLensSelectionCriteriaPtrOutput values.
// You can construct a concrete instance of `StorageLensSelectionCriteriaPtrInput` via:
//
//	        StorageLensSelectionCriteriaArgs{...}
//
//	or:
//
//	        nil
type StorageLensSelectionCriteriaPtrInput interface {
	pulumi.Input

	ToStorageLensSelectionCriteriaPtrOutput() StorageLensSelectionCriteriaPtrOutput
	ToStorageLensSelectionCriteriaPtrOutputWithContext(context.Context) StorageLensSelectionCriteriaPtrOutput
}

type storageLensSelectionCriteriaPtrType StorageLensSelectionCriteriaArgs

func StorageLensSelectionCriteriaPtr(v *StorageLensSelectionCriteriaArgs) StorageLensSelectionCriteriaPtrInput {
	return (*storageLensSelectionCriteriaPtrType)(v)
}

func (*storageLensSelectionCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensSelectionCriteria)(nil)).Elem()
}

func (i *storageLensSelectionCriteriaPtrType) ToStorageLensSelectionCriteriaPtrOutput() StorageLensSelectionCriteriaPtrOutput {
	return i.ToStorageLensSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i *storageLensSelectionCriteriaPtrType) ToStorageLensSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensSelectionCriteriaPtrOutput)
}

// Selection criteria for prefix-level metrics.
type StorageLensSelectionCriteriaOutput struct{ *pulumi.OutputState }

func (StorageLensSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensSelectionCriteria)(nil)).Elem()
}

func (o StorageLensSelectionCriteriaOutput) ToStorageLensSelectionCriteriaOutput() StorageLensSelectionCriteriaOutput {
	return o
}

func (o StorageLensSelectionCriteriaOutput) ToStorageLensSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaOutput {
	return o
}

func (o StorageLensSelectionCriteriaOutput) ToStorageLensSelectionCriteriaPtrOutput() StorageLensSelectionCriteriaPtrOutput {
	return o.ToStorageLensSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (o StorageLensSelectionCriteriaOutput) ToStorageLensSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageLensSelectionCriteria) *StorageLensSelectionCriteria {
		return &v
	}).(StorageLensSelectionCriteriaPtrOutput)
}

// Delimiter to divide S3 key into hierarchy of prefixes.
func (o StorageLensSelectionCriteriaOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageLensSelectionCriteria) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

// Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
func (o StorageLensSelectionCriteriaOutput) MaxDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageLensSelectionCriteria) *int { return v.MaxDepth }).(pulumi.IntPtrOutput)
}

// The minimum storage bytes threshold for the prefixes to be included in the analysis.
func (o StorageLensSelectionCriteriaOutput) MinStorageBytesPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageLensSelectionCriteria) *float64 { return v.MinStorageBytesPercentage }).(pulumi.Float64PtrOutput)
}

type StorageLensSelectionCriteriaPtrOutput struct{ *pulumi.OutputState }

func (StorageLensSelectionCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageLensSelectionCriteria)(nil)).Elem()
}

func (o StorageLensSelectionCriteriaPtrOutput) ToStorageLensSelectionCriteriaPtrOutput() StorageLensSelectionCriteriaPtrOutput {
	return o
}

func (o StorageLensSelectionCriteriaPtrOutput) ToStorageLensSelectionCriteriaPtrOutputWithContext(ctx context.Context) StorageLensSelectionCriteriaPtrOutput {
	return o
}

func (o StorageLensSelectionCriteriaPtrOutput) Elem() StorageLensSelectionCriteriaOutput {
	return o.ApplyT(func(v *StorageLensSelectionCriteria) StorageLensSelectionCriteria {
		if v != nil {
			return *v
		}
		var ret StorageLensSelectionCriteria
		return ret
	}).(StorageLensSelectionCriteriaOutput)
}

// Delimiter to divide S3 key into hierarchy of prefixes.
func (o StorageLensSelectionCriteriaPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageLensSelectionCriteria) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.
func (o StorageLensSelectionCriteriaPtrOutput) MaxDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageLensSelectionCriteria) *int {
		if v == nil {
			return nil
		}
		return v.MaxDepth
	}).(pulumi.IntPtrOutput)
}

// The minimum storage bytes threshold for the prefixes to be included in the analysis.
func (o StorageLensSelectionCriteriaPtrOutput) MinStorageBytesPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StorageLensSelectionCriteria) *float64 {
		if v == nil {
			return nil
		}
		return v.MinStorageBytesPercentage
	}).(pulumi.Float64PtrOutput)
}

type StorageLensTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantGranteeInput)(nil)).Elem(), AccessGrantGranteeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationConfigurationInput)(nil)).Elem(), AccessGrantsLocationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationConfigurationPtrInput)(nil)).Elem(), AccessGrantsLocationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPublicAccessBlockConfigurationInput)(nil)).Elem(), AccessPointPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPublicAccessBlockConfigurationPtrInput)(nil)).Elem(), AccessPointPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointVpcConfigurationInput)(nil)).Elem(), AccessPointVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointVpcConfigurationPtrInput)(nil)).Elem(), AccessPointVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAbortIncompleteMultipartUploadInput)(nil)).Elem(), BucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAbortIncompleteMultipartUploadPtrInput)(nil)).Elem(), BucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccelerateConfigurationInput)(nil)).Elem(), BucketAccelerateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccelerateConfigurationPtrInput)(nil)).Elem(), BucketAccelerateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccessControlTranslationInput)(nil)).Elem(), BucketAccessControlTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccessControlTranslationPtrInput)(nil)).Elem(), BucketAccessControlTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAnalyticsConfigurationInput)(nil)).Elem(), BucketAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAnalyticsConfigurationArrayInput)(nil)).Elem(), BucketAnalyticsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsConfigurationInput)(nil)).Elem(), BucketCorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsConfigurationPtrInput)(nil)).Elem(), BucketCorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsRuleInput)(nil)).Elem(), BucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsRuleArrayInput)(nil)).Elem(), BucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDataExportInput)(nil)).Elem(), BucketDataExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDataExportPtrInput)(nil)).Elem(), BucketDataExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDefaultRetentionInput)(nil)).Elem(), BucketDefaultRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDefaultRetentionPtrInput)(nil)).Elem(), BucketDefaultRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDeleteMarkerReplicationInput)(nil)).Elem(), BucketDeleteMarkerReplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDeleteMarkerReplicationPtrInput)(nil)).Elem(), BucketDeleteMarkerReplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDestinationInput)(nil)).Elem(), BucketDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketDestinationPtrInput)(nil)).Elem(), BucketDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEncryptionInput)(nil)).Elem(), BucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEncryptionPtrInput)(nil)).Elem(), BucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEncryptionConfigurationInput)(nil)).Elem(), BucketEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEncryptionConfigurationPtrInput)(nil)).Elem(), BucketEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEventBridgeConfigurationInput)(nil)).Elem(), BucketEventBridgeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketEventBridgeConfigurationPtrInput)(nil)).Elem(), BucketEventBridgeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketFilterRuleInput)(nil)).Elem(), BucketFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketFilterRuleArrayInput)(nil)).Elem(), BucketFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketIntelligentTieringConfigurationInput)(nil)).Elem(), BucketIntelligentTieringConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketIntelligentTieringConfigurationArrayInput)(nil)).Elem(), BucketIntelligentTieringConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInventoryConfigurationInput)(nil)).Elem(), BucketInventoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInventoryConfigurationArrayInput)(nil)).Elem(), BucketInventoryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLambdaConfigurationInput)(nil)).Elem(), BucketLambdaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLambdaConfigurationArrayInput)(nil)).Elem(), BucketLambdaConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationInput)(nil)).Elem(), BucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationPtrInput)(nil)).Elem(), BucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLoggingConfigurationInput)(nil)).Elem(), BucketLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLoggingConfigurationPtrInput)(nil)).Elem(), BucketLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetricsInput)(nil)).Elem(), BucketMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetricsPtrInput)(nil)).Elem(), BucketMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetricsConfigurationInput)(nil)).Elem(), BucketMetricsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetricsConfigurationArrayInput)(nil)).Elem(), BucketMetricsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNoncurrentVersionExpirationInput)(nil)).Elem(), BucketNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNoncurrentVersionExpirationPtrInput)(nil)).Elem(), BucketNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNoncurrentVersionTransitionInput)(nil)).Elem(), BucketNoncurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNoncurrentVersionTransitionPtrInput)(nil)).Elem(), BucketNoncurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNoncurrentVersionTransitionArrayInput)(nil)).Elem(), BucketNoncurrentVersionTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNotificationConfigurationInput)(nil)).Elem(), BucketNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNotificationConfigurationPtrInput)(nil)).Elem(), BucketNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNotificationFilterInput)(nil)).Elem(), BucketNotificationFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketNotificationFilterPtrInput)(nil)).Elem(), BucketNotificationFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectLockConfigurationInput)(nil)).Elem(), BucketObjectLockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectLockConfigurationPtrInput)(nil)).Elem(), BucketObjectLockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectLockRuleInput)(nil)).Elem(), BucketObjectLockRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectLockRulePtrInput)(nil)).Elem(), BucketObjectLockRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketOwnershipControlsInput)(nil)).Elem(), BucketOwnershipControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketOwnershipControlsPtrInput)(nil)).Elem(), BucketOwnershipControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketOwnershipControlsRuleInput)(nil)).Elem(), BucketOwnershipControlsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketOwnershipControlsRuleArrayInput)(nil)).Elem(), BucketOwnershipControlsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketPublicAccessBlockConfigurationInput)(nil)).Elem(), BucketPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketPublicAccessBlockConfigurationPtrInput)(nil)).Elem(), BucketPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketQueueConfigurationInput)(nil)).Elem(), BucketQueueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketQueueConfigurationArrayInput)(nil)).Elem(), BucketQueueConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRedirectAllRequestsToInput)(nil)).Elem(), BucketRedirectAllRequestsToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRedirectAllRequestsToPtrInput)(nil)).Elem(), BucketRedirectAllRequestsToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRedirectRuleInput)(nil)).Elem(), BucketRedirectRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicaModificationsInput)(nil)).Elem(), BucketReplicaModificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicaModificationsPtrInput)(nil)).Elem(), BucketReplicaModificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigurationInput)(nil)).Elem(), BucketReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigurationPtrInput)(nil)).Elem(), BucketReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationDestinationInput)(nil)).Elem(), BucketReplicationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleInput)(nil)).Elem(), BucketReplicationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleArrayInput)(nil)).Elem(), BucketReplicationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleAndOperatorInput)(nil)).Elem(), BucketReplicationRuleAndOperatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleAndOperatorPtrInput)(nil)).Elem(), BucketReplicationRuleAndOperatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleFilterInput)(nil)).Elem(), BucketReplicationRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationRuleFilterPtrInput)(nil)).Elem(), BucketReplicationRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationTimeInput)(nil)).Elem(), BucketReplicationTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationTimePtrInput)(nil)).Elem(), BucketReplicationTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationTimeValueInput)(nil)).Elem(), BucketReplicationTimeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationTimeValuePtrInput)(nil)).Elem(), BucketReplicationTimeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRoutingRuleInput)(nil)).Elem(), BucketRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRoutingRuleArrayInput)(nil)).Elem(), BucketRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRoutingRuleConditionInput)(nil)).Elem(), BucketRoutingRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRoutingRuleConditionPtrInput)(nil)).Elem(), BucketRoutingRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleInput)(nil)).Elem(), BucketRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleArrayInput)(nil)).Elem(), BucketRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketS3KeyFilterInput)(nil)).Elem(), BucketS3KeyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketS3KeyFilterPtrInput)(nil)).Elem(), BucketS3KeyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketServerSideEncryptionByDefaultInput)(nil)).Elem(), BucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketServerSideEncryptionByDefaultPtrInput)(nil)).Elem(), BucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketServerSideEncryptionRuleInput)(nil)).Elem(), BucketServerSideEncryptionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketServerSideEncryptionRuleArrayInput)(nil)).Elem(), BucketServerSideEncryptionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketSourceSelectionCriteriaInput)(nil)).Elem(), BucketSourceSelectionCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketSourceSelectionCriteriaPtrInput)(nil)).Elem(), BucketSourceSelectionCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketSseKmsEncryptedObjectsInput)(nil)).Elem(), BucketSseKmsEncryptedObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketSseKmsEncryptedObjectsPtrInput)(nil)).Elem(), BucketSseKmsEncryptedObjectsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketStorageClassAnalysisInput)(nil)).Elem(), BucketStorageClassAnalysisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagFilterInput)(nil)).Elem(), BucketTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagFilterPtrInput)(nil)).Elem(), BucketTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagFilterArrayInput)(nil)).Elem(), BucketTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTargetObjectKeyFormatInput)(nil)).Elem(), BucketTargetObjectKeyFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTargetObjectKeyFormatPtrInput)(nil)).Elem(), BucketTargetObjectKeyFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTieringInput)(nil)).Elem(), BucketTieringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTieringArrayInput)(nil)).Elem(), BucketTieringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTopicConfigurationInput)(nil)).Elem(), BucketTopicConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTopicConfigurationArrayInput)(nil)).Elem(), BucketTopicConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTransitionInput)(nil)).Elem(), BucketTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTransitionPtrInput)(nil)).Elem(), BucketTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTransitionArrayInput)(nil)).Elem(), BucketTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketVersioningConfigurationInput)(nil)).Elem(), BucketVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketVersioningConfigurationPtrInput)(nil)).Elem(), BucketVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationInput)(nil)).Elem(), BucketWebsiteConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationPtrInput)(nil)).Elem(), BucketWebsiteConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiRegionAccessPointPublicAccessBlockConfigurationInput)(nil)).Elem(), MultiRegionAccessPointPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiRegionAccessPointPublicAccessBlockConfigurationPtrInput)(nil)).Elem(), MultiRegionAccessPointPublicAccessBlockConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiRegionAccessPointRegionInput)(nil)).Elem(), MultiRegionAccessPointRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiRegionAccessPointRegionArrayInput)(nil)).Elem(), MultiRegionAccessPointRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAccountLevelInput)(nil)).Elem(), StorageLensAccountLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensActivityMetricsInput)(nil)).Elem(), StorageLensActivityMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensActivityMetricsPtrInput)(nil)).Elem(), StorageLensActivityMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAdvancedCostOptimizationMetricsInput)(nil)).Elem(), StorageLensAdvancedCostOptimizationMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAdvancedCostOptimizationMetricsPtrInput)(nil)).Elem(), StorageLensAdvancedCostOptimizationMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAdvancedDataProtectionMetricsInput)(nil)).Elem(), StorageLensAdvancedDataProtectionMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAdvancedDataProtectionMetricsPtrInput)(nil)).Elem(), StorageLensAdvancedDataProtectionMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAwsOrgInput)(nil)).Elem(), StorageLensAwsOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensAwsOrgPtrInput)(nil)).Elem(), StorageLensAwsOrgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensBucketLevelInput)(nil)).Elem(), StorageLensBucketLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensBucketsAndRegionsInput)(nil)).Elem(), StorageLensBucketsAndRegionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensBucketsAndRegionsPtrInput)(nil)).Elem(), StorageLensBucketsAndRegionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensCloudWatchMetricsInput)(nil)).Elem(), StorageLensCloudWatchMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensCloudWatchMetricsPtrInput)(nil)).Elem(), StorageLensCloudWatchMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensConfigurationInput)(nil)).Elem(), StorageLensConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensDataExportInput)(nil)).Elem(), StorageLensDataExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensDataExportPtrInput)(nil)).Elem(), StorageLensDataExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensDetailedStatusCodesMetricsInput)(nil)).Elem(), StorageLensDetailedStatusCodesMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensDetailedStatusCodesMetricsPtrInput)(nil)).Elem(), StorageLensDetailedStatusCodesMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensEncryptionInput)(nil)).Elem(), StorageLensEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensEncryptionPtrInput)(nil)).Elem(), StorageLensEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupAndInput)(nil)).Elem(), StorageLensGroupAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupAndPtrInput)(nil)).Elem(), StorageLensGroupAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupFilterInput)(nil)).Elem(), StorageLensGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupLevelInput)(nil)).Elem(), StorageLensGroupLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupLevelPtrInput)(nil)).Elem(), StorageLensGroupLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupMatchObjectAgeInput)(nil)).Elem(), StorageLensGroupMatchObjectAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupMatchObjectAgePtrInput)(nil)).Elem(), StorageLensGroupMatchObjectAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupMatchObjectSizeInput)(nil)).Elem(), StorageLensGroupMatchObjectSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupMatchObjectSizePtrInput)(nil)).Elem(), StorageLensGroupMatchObjectSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupOrInput)(nil)).Elem(), StorageLensGroupOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupOrPtrInput)(nil)).Elem(), StorageLensGroupOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupSelectionCriteriaInput)(nil)).Elem(), StorageLensGroupSelectionCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupSelectionCriteriaPtrInput)(nil)).Elem(), StorageLensGroupSelectionCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupTagInput)(nil)).Elem(), StorageLensGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensGroupTagArrayInput)(nil)).Elem(), StorageLensGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensPrefixLevelInput)(nil)).Elem(), StorageLensPrefixLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensPrefixLevelPtrInput)(nil)).Elem(), StorageLensPrefixLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensPrefixLevelStorageMetricsInput)(nil)).Elem(), StorageLensPrefixLevelStorageMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensPrefixLevelStorageMetricsPtrInput)(nil)).Elem(), StorageLensPrefixLevelStorageMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensS3BucketDestinationInput)(nil)).Elem(), StorageLensS3BucketDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensS3BucketDestinationPtrInput)(nil)).Elem(), StorageLensS3BucketDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensSelectionCriteriaInput)(nil)).Elem(), StorageLensSelectionCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageLensSelectionCriteriaPtrInput)(nil)).Elem(), StorageLensSelectionCriteriaArgs{})
	pulumi.RegisterOutputType(AccessGrantGranteeOutput{})
	pulumi.RegisterOutputType(AccessGrantGranteePtrOutput{})
	pulumi.RegisterOutputType(AccessGrantsLocationConfigurationOutput{})
	pulumi.RegisterOutputType(AccessGrantsLocationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AccessPointPublicAccessBlockConfigurationOutput{})
	pulumi.RegisterOutputType(AccessPointPublicAccessBlockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AccessPointVpcConfigurationOutput{})
	pulumi.RegisterOutputType(AccessPointVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketAbortIncompleteMultipartUploadPtrOutput{})
	pulumi.RegisterOutputType(BucketAccelerateConfigurationOutput{})
	pulumi.RegisterOutputType(BucketAccelerateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketAccessControlTranslationOutput{})
	pulumi.RegisterOutputType(BucketAccessControlTranslationPtrOutput{})
	pulumi.RegisterOutputType(BucketAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(BucketAnalyticsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketCorsConfigurationOutput{})
	pulumi.RegisterOutputType(BucketCorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketCorsRuleOutput{})
	pulumi.RegisterOutputType(BucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketDataExportOutput{})
	pulumi.RegisterOutputType(BucketDataExportPtrOutput{})
	pulumi.RegisterOutputType(BucketDefaultRetentionOutput{})
	pulumi.RegisterOutputType(BucketDefaultRetentionPtrOutput{})
	pulumi.RegisterOutputType(BucketDeleteMarkerReplicationOutput{})
	pulumi.RegisterOutputType(BucketDeleteMarkerReplicationPtrOutput{})
	pulumi.RegisterOutputType(BucketDestinationOutput{})
	pulumi.RegisterOutputType(BucketDestinationPtrOutput{})
	pulumi.RegisterOutputType(BucketEncryptionOutput{})
	pulumi.RegisterOutputType(BucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(BucketEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(BucketEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketEventBridgeConfigurationOutput{})
	pulumi.RegisterOutputType(BucketEventBridgeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketFilterRuleOutput{})
	pulumi.RegisterOutputType(BucketFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketIntelligentTieringConfigurationOutput{})
	pulumi.RegisterOutputType(BucketIntelligentTieringConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketInventoryConfigurationOutput{})
	pulumi.RegisterOutputType(BucketInventoryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketLambdaConfigurationOutput{})
	pulumi.RegisterOutputType(BucketLambdaConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(BucketLoggingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketMetricsOutput{})
	pulumi.RegisterOutputType(BucketMetricsPtrOutput{})
	pulumi.RegisterOutputType(BucketMetricsConfigurationOutput{})
	pulumi.RegisterOutputType(BucketMetricsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(BucketNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketNoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(BucketNoncurrentVersionTransitionPtrOutput{})
	pulumi.RegisterOutputType(BucketNoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(BucketNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketNotificationFilterOutput{})
	pulumi.RegisterOutputType(BucketNotificationFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectLockRuleOutput{})
	pulumi.RegisterOutputType(BucketObjectLockRulePtrOutput{})
	pulumi.RegisterOutputType(BucketOwnershipControlsOutput{})
	pulumi.RegisterOutputType(BucketOwnershipControlsPtrOutput{})
	pulumi.RegisterOutputType(BucketOwnershipControlsRuleOutput{})
	pulumi.RegisterOutputType(BucketOwnershipControlsRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketPublicAccessBlockConfigurationOutput{})
	pulumi.RegisterOutputType(BucketPublicAccessBlockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketQueueConfigurationOutput{})
	pulumi.RegisterOutputType(BucketQueueConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketRedirectAllRequestsToOutput{})
	pulumi.RegisterOutputType(BucketRedirectAllRequestsToPtrOutput{})
	pulumi.RegisterOutputType(BucketRedirectRuleOutput{})
	pulumi.RegisterOutputType(BucketReplicaModificationsOutput{})
	pulumi.RegisterOutputType(BucketReplicaModificationsPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationDestinationOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleAndOperatorOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleAndOperatorPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleFilterOutput{})
	pulumi.RegisterOutputType(BucketReplicationRuleFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationTimeOutput{})
	pulumi.RegisterOutputType(BucketReplicationTimePtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationTimeValueOutput{})
	pulumi.RegisterOutputType(BucketReplicationTimeValuePtrOutput{})
	pulumi.RegisterOutputType(BucketRoutingRuleOutput{})
	pulumi.RegisterOutputType(BucketRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketRoutingRuleConditionOutput{})
	pulumi.RegisterOutputType(BucketRoutingRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketRuleOutput{})
	pulumi.RegisterOutputType(BucketRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketS3KeyFilterOutput{})
	pulumi.RegisterOutputType(BucketS3KeyFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionByDefaultPtrOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionRuleOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketSourceSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(BucketSourceSelectionCriteriaPtrOutput{})
	pulumi.RegisterOutputType(BucketSseKmsEncryptedObjectsOutput{})
	pulumi.RegisterOutputType(BucketSseKmsEncryptedObjectsPtrOutput{})
	pulumi.RegisterOutputType(BucketStorageClassAnalysisOutput{})
	pulumi.RegisterOutputType(BucketTagFilterOutput{})
	pulumi.RegisterOutputType(BucketTagFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketTagFilterArrayOutput{})
	pulumi.RegisterOutputType(BucketTargetObjectKeyFormatOutput{})
	pulumi.RegisterOutputType(BucketTargetObjectKeyFormatPtrOutput{})
	pulumi.RegisterOutputType(BucketTieringOutput{})
	pulumi.RegisterOutputType(BucketTieringArrayOutput{})
	pulumi.RegisterOutputType(BucketTopicConfigurationOutput{})
	pulumi.RegisterOutputType(BucketTopicConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketTransitionOutput{})
	pulumi.RegisterOutputType(BucketTransitionPtrOutput{})
	pulumi.RegisterOutputType(BucketTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketVersioningConfigurationOutput{})
	pulumi.RegisterOutputType(BucketVersioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationOutput{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointPublicAccessBlockConfigurationOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointPublicAccessBlockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointRegionOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointRegionArrayOutput{})
	pulumi.RegisterOutputType(PolicyStatusPropertiesOutput{})
	pulumi.RegisterOutputType(PolicyStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageLensAccountLevelOutput{})
	pulumi.RegisterOutputType(StorageLensActivityMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensActivityMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensAdvancedCostOptimizationMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensAdvancedCostOptimizationMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensAdvancedDataProtectionMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensAdvancedDataProtectionMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensAwsOrgOutput{})
	pulumi.RegisterOutputType(StorageLensAwsOrgPtrOutput{})
	pulumi.RegisterOutputType(StorageLensBucketLevelOutput{})
	pulumi.RegisterOutputType(StorageLensBucketsAndRegionsOutput{})
	pulumi.RegisterOutputType(StorageLensBucketsAndRegionsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensCloudWatchMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensCloudWatchMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationOutput{})
	pulumi.RegisterOutputType(StorageLensDataExportOutput{})
	pulumi.RegisterOutputType(StorageLensDataExportPtrOutput{})
	pulumi.RegisterOutputType(StorageLensDetailedStatusCodesMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensDetailedStatusCodesMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensEncryptionOutput{})
	pulumi.RegisterOutputType(StorageLensEncryptionPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupAndOutput{})
	pulumi.RegisterOutputType(StorageLensGroupAndPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupFilterOutput{})
	pulumi.RegisterOutputType(StorageLensGroupFilterPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupLevelOutput{})
	pulumi.RegisterOutputType(StorageLensGroupLevelPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupMatchObjectAgeOutput{})
	pulumi.RegisterOutputType(StorageLensGroupMatchObjectAgePtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupMatchObjectSizeOutput{})
	pulumi.RegisterOutputType(StorageLensGroupMatchObjectSizePtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupOrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupOrPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(StorageLensGroupSelectionCriteriaPtrOutput{})
	pulumi.RegisterOutputType(StorageLensGroupTagOutput{})
	pulumi.RegisterOutputType(StorageLensGroupTagArrayOutput{})
	pulumi.RegisterOutputType(StorageLensPrefixLevelOutput{})
	pulumi.RegisterOutputType(StorageLensPrefixLevelPtrOutput{})
	pulumi.RegisterOutputType(StorageLensPrefixLevelStorageMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensPrefixLevelStorageMetricsPtrOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationOutput{})
	pulumi.RegisterOutputType(StorageLensS3BucketDestinationPtrOutput{})
	pulumi.RegisterOutputType(StorageLensSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(StorageLensSelectionCriteriaPtrOutput{})
}
