// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CapacityReservationCapacityAssignment struct {
	WorkgroupNames []string `pulumi:"workgroupNames"`
}

// CapacityReservationCapacityAssignmentInput is an input type that accepts CapacityReservationCapacityAssignmentArgs and CapacityReservationCapacityAssignmentOutput values.
// You can construct a concrete instance of `CapacityReservationCapacityAssignmentInput` via:
//
//	CapacityReservationCapacityAssignmentArgs{...}
type CapacityReservationCapacityAssignmentInput interface {
	pulumi.Input

	ToCapacityReservationCapacityAssignmentOutput() CapacityReservationCapacityAssignmentOutput
	ToCapacityReservationCapacityAssignmentOutputWithContext(context.Context) CapacityReservationCapacityAssignmentOutput
}

type CapacityReservationCapacityAssignmentArgs struct {
	WorkgroupNames pulumi.StringArrayInput `pulumi:"workgroupNames"`
}

func (CapacityReservationCapacityAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationCapacityAssignment)(nil)).Elem()
}

func (i CapacityReservationCapacityAssignmentArgs) ToCapacityReservationCapacityAssignmentOutput() CapacityReservationCapacityAssignmentOutput {
	return i.ToCapacityReservationCapacityAssignmentOutputWithContext(context.Background())
}

func (i CapacityReservationCapacityAssignmentArgs) ToCapacityReservationCapacityAssignmentOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationCapacityAssignmentOutput)
}

// CapacityReservationCapacityAssignmentArrayInput is an input type that accepts CapacityReservationCapacityAssignmentArray and CapacityReservationCapacityAssignmentArrayOutput values.
// You can construct a concrete instance of `CapacityReservationCapacityAssignmentArrayInput` via:
//
//	CapacityReservationCapacityAssignmentArray{ CapacityReservationCapacityAssignmentArgs{...} }
type CapacityReservationCapacityAssignmentArrayInput interface {
	pulumi.Input

	ToCapacityReservationCapacityAssignmentArrayOutput() CapacityReservationCapacityAssignmentArrayOutput
	ToCapacityReservationCapacityAssignmentArrayOutputWithContext(context.Context) CapacityReservationCapacityAssignmentArrayOutput
}

type CapacityReservationCapacityAssignmentArray []CapacityReservationCapacityAssignmentInput

func (CapacityReservationCapacityAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapacityReservationCapacityAssignment)(nil)).Elem()
}

func (i CapacityReservationCapacityAssignmentArray) ToCapacityReservationCapacityAssignmentArrayOutput() CapacityReservationCapacityAssignmentArrayOutput {
	return i.ToCapacityReservationCapacityAssignmentArrayOutputWithContext(context.Background())
}

func (i CapacityReservationCapacityAssignmentArray) ToCapacityReservationCapacityAssignmentArrayOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationCapacityAssignmentArrayOutput)
}

type CapacityReservationCapacityAssignmentOutput struct{ *pulumi.OutputState }

func (CapacityReservationCapacityAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationCapacityAssignment)(nil)).Elem()
}

func (o CapacityReservationCapacityAssignmentOutput) ToCapacityReservationCapacityAssignmentOutput() CapacityReservationCapacityAssignmentOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentOutput) ToCapacityReservationCapacityAssignmentOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentOutput) WorkgroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapacityReservationCapacityAssignment) []string { return v.WorkgroupNames }).(pulumi.StringArrayOutput)
}

type CapacityReservationCapacityAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CapacityReservationCapacityAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapacityReservationCapacityAssignment)(nil)).Elem()
}

func (o CapacityReservationCapacityAssignmentArrayOutput) ToCapacityReservationCapacityAssignmentArrayOutput() CapacityReservationCapacityAssignmentArrayOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentArrayOutput) ToCapacityReservationCapacityAssignmentArrayOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentArrayOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentArrayOutput) Index(i pulumi.IntInput) CapacityReservationCapacityAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapacityReservationCapacityAssignment {
		return vs[0].([]CapacityReservationCapacityAssignment)[vs[1].(int)]
	}).(CapacityReservationCapacityAssignmentOutput)
}

// Assignment configuration to assign workgroups to a reservation
type CapacityReservationCapacityAssignmentConfiguration struct {
	// The list of assignments that make up the capacity assignment configuration.
	CapacityAssignments []CapacityReservationCapacityAssignment `pulumi:"capacityAssignments"`
}

// CapacityReservationCapacityAssignmentConfigurationInput is an input type that accepts CapacityReservationCapacityAssignmentConfigurationArgs and CapacityReservationCapacityAssignmentConfigurationOutput values.
// You can construct a concrete instance of `CapacityReservationCapacityAssignmentConfigurationInput` via:
//
//	CapacityReservationCapacityAssignmentConfigurationArgs{...}
type CapacityReservationCapacityAssignmentConfigurationInput interface {
	pulumi.Input

	ToCapacityReservationCapacityAssignmentConfigurationOutput() CapacityReservationCapacityAssignmentConfigurationOutput
	ToCapacityReservationCapacityAssignmentConfigurationOutputWithContext(context.Context) CapacityReservationCapacityAssignmentConfigurationOutput
}

// Assignment configuration to assign workgroups to a reservation
type CapacityReservationCapacityAssignmentConfigurationArgs struct {
	// The list of assignments that make up the capacity assignment configuration.
	CapacityAssignments CapacityReservationCapacityAssignmentArrayInput `pulumi:"capacityAssignments"`
}

func (CapacityReservationCapacityAssignmentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationCapacityAssignmentConfiguration)(nil)).Elem()
}

func (i CapacityReservationCapacityAssignmentConfigurationArgs) ToCapacityReservationCapacityAssignmentConfigurationOutput() CapacityReservationCapacityAssignmentConfigurationOutput {
	return i.ToCapacityReservationCapacityAssignmentConfigurationOutputWithContext(context.Background())
}

func (i CapacityReservationCapacityAssignmentConfigurationArgs) ToCapacityReservationCapacityAssignmentConfigurationOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationCapacityAssignmentConfigurationOutput)
}

func (i CapacityReservationCapacityAssignmentConfigurationArgs) ToCapacityReservationCapacityAssignmentConfigurationPtrOutput() CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return i.ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (i CapacityReservationCapacityAssignmentConfigurationArgs) ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationCapacityAssignmentConfigurationOutput).ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(ctx)
}

// CapacityReservationCapacityAssignmentConfigurationPtrInput is an input type that accepts CapacityReservationCapacityAssignmentConfigurationArgs, CapacityReservationCapacityAssignmentConfigurationPtr and CapacityReservationCapacityAssignmentConfigurationPtrOutput values.
// You can construct a concrete instance of `CapacityReservationCapacityAssignmentConfigurationPtrInput` via:
//
//	        CapacityReservationCapacityAssignmentConfigurationArgs{...}
//
//	or:
//
//	        nil
type CapacityReservationCapacityAssignmentConfigurationPtrInput interface {
	pulumi.Input

	ToCapacityReservationCapacityAssignmentConfigurationPtrOutput() CapacityReservationCapacityAssignmentConfigurationPtrOutput
	ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(context.Context) CapacityReservationCapacityAssignmentConfigurationPtrOutput
}

type capacityReservationCapacityAssignmentConfigurationPtrType CapacityReservationCapacityAssignmentConfigurationArgs

func CapacityReservationCapacityAssignmentConfigurationPtr(v *CapacityReservationCapacityAssignmentConfigurationArgs) CapacityReservationCapacityAssignmentConfigurationPtrInput {
	return (*capacityReservationCapacityAssignmentConfigurationPtrType)(v)
}

func (*capacityReservationCapacityAssignmentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservationCapacityAssignmentConfiguration)(nil)).Elem()
}

func (i *capacityReservationCapacityAssignmentConfigurationPtrType) ToCapacityReservationCapacityAssignmentConfigurationPtrOutput() CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return i.ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (i *capacityReservationCapacityAssignmentConfigurationPtrType) ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationCapacityAssignmentConfigurationPtrOutput)
}

// Assignment configuration to assign workgroups to a reservation
type CapacityReservationCapacityAssignmentConfigurationOutput struct{ *pulumi.OutputState }

func (CapacityReservationCapacityAssignmentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationCapacityAssignmentConfiguration)(nil)).Elem()
}

func (o CapacityReservationCapacityAssignmentConfigurationOutput) ToCapacityReservationCapacityAssignmentConfigurationOutput() CapacityReservationCapacityAssignmentConfigurationOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentConfigurationOutput) ToCapacityReservationCapacityAssignmentConfigurationOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentConfigurationOutput) ToCapacityReservationCapacityAssignmentConfigurationPtrOutput() CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return o.ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (o CapacityReservationCapacityAssignmentConfigurationOutput) ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityReservationCapacityAssignmentConfiguration) *CapacityReservationCapacityAssignmentConfiguration {
		return &v
	}).(CapacityReservationCapacityAssignmentConfigurationPtrOutput)
}

// The list of assignments that make up the capacity assignment configuration.
func (o CapacityReservationCapacityAssignmentConfigurationOutput) CapacityAssignments() CapacityReservationCapacityAssignmentArrayOutput {
	return o.ApplyT(func(v CapacityReservationCapacityAssignmentConfiguration) []CapacityReservationCapacityAssignment {
		return v.CapacityAssignments
	}).(CapacityReservationCapacityAssignmentArrayOutput)
}

type CapacityReservationCapacityAssignmentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CapacityReservationCapacityAssignmentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservationCapacityAssignmentConfiguration)(nil)).Elem()
}

func (o CapacityReservationCapacityAssignmentConfigurationPtrOutput) ToCapacityReservationCapacityAssignmentConfigurationPtrOutput() CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentConfigurationPtrOutput) ToCapacityReservationCapacityAssignmentConfigurationPtrOutputWithContext(ctx context.Context) CapacityReservationCapacityAssignmentConfigurationPtrOutput {
	return o
}

func (o CapacityReservationCapacityAssignmentConfigurationPtrOutput) Elem() CapacityReservationCapacityAssignmentConfigurationOutput {
	return o.ApplyT(func(v *CapacityReservationCapacityAssignmentConfiguration) CapacityReservationCapacityAssignmentConfiguration {
		if v != nil {
			return *v
		}
		var ret CapacityReservationCapacityAssignmentConfiguration
		return ret
	}).(CapacityReservationCapacityAssignmentConfigurationOutput)
}

// The list of assignments that make up the capacity assignment configuration.
func (o CapacityReservationCapacityAssignmentConfigurationPtrOutput) CapacityAssignments() CapacityReservationCapacityAssignmentArrayOutput {
	return o.ApplyT(func(v *CapacityReservationCapacityAssignmentConfiguration) []CapacityReservationCapacityAssignment {
		if v == nil {
			return nil
		}
		return v.CapacityAssignments
	}).(CapacityReservationCapacityAssignmentArrayOutput)
}

type CapacityReservationTag struct {
	// A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource.
	Key string `pulumi:"key"`
	// A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive.
	Value string `pulumi:"value"`
}

type DataCatalogTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results
type WorkGroupAclConfiguration struct {
	// The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is `BUCKET_OWNER_FULL_CONTROL` . If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
	S3AclOption WorkGroupS3AclOption `pulumi:"s3AclOption"`
}

// WorkGroupAclConfigurationInput is an input type that accepts WorkGroupAclConfigurationArgs and WorkGroupAclConfigurationOutput values.
// You can construct a concrete instance of `WorkGroupAclConfigurationInput` via:
//
//	WorkGroupAclConfigurationArgs{...}
type WorkGroupAclConfigurationInput interface {
	pulumi.Input

	ToWorkGroupAclConfigurationOutput() WorkGroupAclConfigurationOutput
	ToWorkGroupAclConfigurationOutputWithContext(context.Context) WorkGroupAclConfigurationOutput
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results
type WorkGroupAclConfigurationArgs struct {
	// The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is `BUCKET_OWNER_FULL_CONTROL` . If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
	S3AclOption WorkGroupS3AclOptionInput `pulumi:"s3AclOption"`
}

func (WorkGroupAclConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupAclConfiguration)(nil)).Elem()
}

func (i WorkGroupAclConfigurationArgs) ToWorkGroupAclConfigurationOutput() WorkGroupAclConfigurationOutput {
	return i.ToWorkGroupAclConfigurationOutputWithContext(context.Background())
}

func (i WorkGroupAclConfigurationArgs) ToWorkGroupAclConfigurationOutputWithContext(ctx context.Context) WorkGroupAclConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupAclConfigurationOutput)
}

func (i WorkGroupAclConfigurationArgs) ToWorkGroupAclConfigurationPtrOutput() WorkGroupAclConfigurationPtrOutput {
	return i.ToWorkGroupAclConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkGroupAclConfigurationArgs) ToWorkGroupAclConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupAclConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupAclConfigurationOutput).ToWorkGroupAclConfigurationPtrOutputWithContext(ctx)
}

// WorkGroupAclConfigurationPtrInput is an input type that accepts WorkGroupAclConfigurationArgs, WorkGroupAclConfigurationPtr and WorkGroupAclConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkGroupAclConfigurationPtrInput` via:
//
//	        WorkGroupAclConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkGroupAclConfigurationPtrInput interface {
	pulumi.Input

	ToWorkGroupAclConfigurationPtrOutput() WorkGroupAclConfigurationPtrOutput
	ToWorkGroupAclConfigurationPtrOutputWithContext(context.Context) WorkGroupAclConfigurationPtrOutput
}

type workGroupAclConfigurationPtrType WorkGroupAclConfigurationArgs

func WorkGroupAclConfigurationPtr(v *WorkGroupAclConfigurationArgs) WorkGroupAclConfigurationPtrInput {
	return (*workGroupAclConfigurationPtrType)(v)
}

func (*workGroupAclConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupAclConfiguration)(nil)).Elem()
}

func (i *workGroupAclConfigurationPtrType) ToWorkGroupAclConfigurationPtrOutput() WorkGroupAclConfigurationPtrOutput {
	return i.ToWorkGroupAclConfigurationPtrOutputWithContext(context.Background())
}

func (i *workGroupAclConfigurationPtrType) ToWorkGroupAclConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupAclConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupAclConfigurationPtrOutput)
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results
type WorkGroupAclConfigurationOutput struct{ *pulumi.OutputState }

func (WorkGroupAclConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupAclConfiguration)(nil)).Elem()
}

func (o WorkGroupAclConfigurationOutput) ToWorkGroupAclConfigurationOutput() WorkGroupAclConfigurationOutput {
	return o
}

func (o WorkGroupAclConfigurationOutput) ToWorkGroupAclConfigurationOutputWithContext(ctx context.Context) WorkGroupAclConfigurationOutput {
	return o
}

func (o WorkGroupAclConfigurationOutput) ToWorkGroupAclConfigurationPtrOutput() WorkGroupAclConfigurationPtrOutput {
	return o.ToWorkGroupAclConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkGroupAclConfigurationOutput) ToWorkGroupAclConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupAclConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupAclConfiguration) *WorkGroupAclConfiguration {
		return &v
	}).(WorkGroupAclConfigurationPtrOutput)
}

// The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is `BUCKET_OWNER_FULL_CONTROL` . If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
func (o WorkGroupAclConfigurationOutput) S3AclOption() WorkGroupS3AclOptionOutput {
	return o.ApplyT(func(v WorkGroupAclConfiguration) WorkGroupS3AclOption { return v.S3AclOption }).(WorkGroupS3AclOptionOutput)
}

type WorkGroupAclConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupAclConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupAclConfiguration)(nil)).Elem()
}

func (o WorkGroupAclConfigurationPtrOutput) ToWorkGroupAclConfigurationPtrOutput() WorkGroupAclConfigurationPtrOutput {
	return o
}

func (o WorkGroupAclConfigurationPtrOutput) ToWorkGroupAclConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupAclConfigurationPtrOutput {
	return o
}

func (o WorkGroupAclConfigurationPtrOutput) Elem() WorkGroupAclConfigurationOutput {
	return o.ApplyT(func(v *WorkGroupAclConfiguration) WorkGroupAclConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkGroupAclConfiguration
		return ret
	}).(WorkGroupAclConfigurationOutput)
}

// The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is `BUCKET_OWNER_FULL_CONTROL` . If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) in the *Amazon S3 User Guide* .
func (o WorkGroupAclConfigurationPtrOutput) S3AclOption() WorkGroupS3AclOptionPtrOutput {
	return o.ApplyT(func(v *WorkGroupAclConfiguration) *WorkGroupS3AclOption {
		if v == nil {
			return nil
		}
		return &v.S3AclOption
	}).(WorkGroupS3AclOptionPtrOutput)
}

type WorkGroupConfiguration struct {
	// Specifies a user defined JSON string that is passed to the session engine.
	AdditionalConfiguration *string `pulumi:"additionalConfiguration"`
	// The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. No default is defined.
	//
	// > This property currently supports integer types. Support for long values is planned.
	BytesScannedCutoffPerQuery *int `pulumi:"bytesScannedCutoffPerQuery"`
	// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
	CustomerContentEncryptionConfiguration *WorkGroupCustomerContentEncryptionConfiguration `pulumi:"customerContentEncryptionConfiguration"`
	// If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	EnforceWorkGroupConfiguration *bool `pulumi:"enforceWorkGroupConfiguration"`
	// The Athena engine version for running queries, or the PySpark engine version for running sessions.
	EngineVersion *WorkGroupEngineVersion `pulumi:"engineVersion"`
	// Role used to access user resources in an Athena for Apache Spark session. This property applies only to Spark-enabled workgroups in Athena.
	ExecutionRole *string `pulumi:"executionRole"`
	// Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
	PublishCloudWatchMetricsEnabled *bool `pulumi:"publishCloudWatchMetricsEnabled"`
	// If set to `true` , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to `false` , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is `false` . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the *Amazon Simple Storage Service Developer Guide* .
	RequesterPaysEnabled *bool `pulumi:"requesterPaysEnabled"`
	// The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
	ResultConfiguration *WorkGroupResultConfiguration `pulumi:"resultConfiguration"`
}

// WorkGroupConfigurationInput is an input type that accepts WorkGroupConfigurationArgs and WorkGroupConfigurationOutput values.
// You can construct a concrete instance of `WorkGroupConfigurationInput` via:
//
//	WorkGroupConfigurationArgs{...}
type WorkGroupConfigurationInput interface {
	pulumi.Input

	ToWorkGroupConfigurationOutput() WorkGroupConfigurationOutput
	ToWorkGroupConfigurationOutputWithContext(context.Context) WorkGroupConfigurationOutput
}

type WorkGroupConfigurationArgs struct {
	// Specifies a user defined JSON string that is passed to the session engine.
	AdditionalConfiguration pulumi.StringPtrInput `pulumi:"additionalConfiguration"`
	// The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. No default is defined.
	//
	// > This property currently supports integer types. Support for long values is planned.
	BytesScannedCutoffPerQuery pulumi.IntPtrInput `pulumi:"bytesScannedCutoffPerQuery"`
	// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
	CustomerContentEncryptionConfiguration WorkGroupCustomerContentEncryptionConfigurationPtrInput `pulumi:"customerContentEncryptionConfiguration"`
	// If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	EnforceWorkGroupConfiguration pulumi.BoolPtrInput `pulumi:"enforceWorkGroupConfiguration"`
	// The Athena engine version for running queries, or the PySpark engine version for running sessions.
	EngineVersion WorkGroupEngineVersionPtrInput `pulumi:"engineVersion"`
	// Role used to access user resources in an Athena for Apache Spark session. This property applies only to Spark-enabled workgroups in Athena.
	ExecutionRole pulumi.StringPtrInput `pulumi:"executionRole"`
	// Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
	PublishCloudWatchMetricsEnabled pulumi.BoolPtrInput `pulumi:"publishCloudWatchMetricsEnabled"`
	// If set to `true` , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to `false` , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is `false` . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the *Amazon Simple Storage Service Developer Guide* .
	RequesterPaysEnabled pulumi.BoolPtrInput `pulumi:"requesterPaysEnabled"`
	// The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
	ResultConfiguration WorkGroupResultConfigurationPtrInput `pulumi:"resultConfiguration"`
}

func (WorkGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupConfiguration)(nil)).Elem()
}

func (i WorkGroupConfigurationArgs) ToWorkGroupConfigurationOutput() WorkGroupConfigurationOutput {
	return i.ToWorkGroupConfigurationOutputWithContext(context.Background())
}

func (i WorkGroupConfigurationArgs) ToWorkGroupConfigurationOutputWithContext(ctx context.Context) WorkGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationOutput)
}

func (i WorkGroupConfigurationArgs) ToWorkGroupConfigurationPtrOutput() WorkGroupConfigurationPtrOutput {
	return i.ToWorkGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkGroupConfigurationArgs) ToWorkGroupConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationOutput).ToWorkGroupConfigurationPtrOutputWithContext(ctx)
}

// WorkGroupConfigurationPtrInput is an input type that accepts WorkGroupConfigurationArgs, WorkGroupConfigurationPtr and WorkGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkGroupConfigurationPtrInput` via:
//
//	        WorkGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkGroupConfigurationPtrInput interface {
	pulumi.Input

	ToWorkGroupConfigurationPtrOutput() WorkGroupConfigurationPtrOutput
	ToWorkGroupConfigurationPtrOutputWithContext(context.Context) WorkGroupConfigurationPtrOutput
}

type workGroupConfigurationPtrType WorkGroupConfigurationArgs

func WorkGroupConfigurationPtr(v *WorkGroupConfigurationArgs) WorkGroupConfigurationPtrInput {
	return (*workGroupConfigurationPtrType)(v)
}

func (*workGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupConfiguration)(nil)).Elem()
}

func (i *workGroupConfigurationPtrType) ToWorkGroupConfigurationPtrOutput() WorkGroupConfigurationPtrOutput {
	return i.ToWorkGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *workGroupConfigurationPtrType) ToWorkGroupConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationPtrOutput)
}

type WorkGroupConfigurationOutput struct{ *pulumi.OutputState }

func (WorkGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupConfiguration)(nil)).Elem()
}

func (o WorkGroupConfigurationOutput) ToWorkGroupConfigurationOutput() WorkGroupConfigurationOutput {
	return o
}

func (o WorkGroupConfigurationOutput) ToWorkGroupConfigurationOutputWithContext(ctx context.Context) WorkGroupConfigurationOutput {
	return o
}

func (o WorkGroupConfigurationOutput) ToWorkGroupConfigurationPtrOutput() WorkGroupConfigurationPtrOutput {
	return o.ToWorkGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkGroupConfigurationOutput) ToWorkGroupConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupConfiguration) *WorkGroupConfiguration {
		return &v
	}).(WorkGroupConfigurationPtrOutput)
}

// Specifies a user defined JSON string that is passed to the session engine.
func (o WorkGroupConfigurationOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *string { return v.AdditionalConfiguration }).(pulumi.StringPtrOutput)
}

// The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. No default is defined.
//
// > This property currently supports integer types. Support for long values is planned.
func (o WorkGroupConfigurationOutput) BytesScannedCutoffPerQuery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *int { return v.BytesScannedCutoffPerQuery }).(pulumi.IntPtrOutput)
}

// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
func (o WorkGroupConfigurationOutput) CustomerContentEncryptionConfiguration() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *WorkGroupCustomerContentEncryptionConfiguration {
		return v.CustomerContentEncryptionConfiguration
	}).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

// If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupConfigurationOutput) EnforceWorkGroupConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *bool { return v.EnforceWorkGroupConfiguration }).(pulumi.BoolPtrOutput)
}

// The Athena engine version for running queries, or the PySpark engine version for running sessions.
func (o WorkGroupConfigurationOutput) EngineVersion() WorkGroupEngineVersionPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *WorkGroupEngineVersion { return v.EngineVersion }).(WorkGroupEngineVersionPtrOutput)
}

// Role used to access user resources in an Athena for Apache Spark session. This property applies only to Spark-enabled workgroups in Athena.
func (o WorkGroupConfigurationOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *string { return v.ExecutionRole }).(pulumi.StringPtrOutput)
}

// Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
func (o WorkGroupConfigurationOutput) PublishCloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *bool { return v.PublishCloudWatchMetricsEnabled }).(pulumi.BoolPtrOutput)
}

// If set to `true` , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to `false` , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is `false` . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the *Amazon Simple Storage Service Developer Guide* .
func (o WorkGroupConfigurationOutput) RequesterPaysEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *bool { return v.RequesterPaysEnabled }).(pulumi.BoolPtrOutput)
}

// The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
func (o WorkGroupConfigurationOutput) ResultConfiguration() WorkGroupResultConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupConfiguration) *WorkGroupResultConfiguration { return v.ResultConfiguration }).(WorkGroupResultConfigurationPtrOutput)
}

type WorkGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupConfiguration)(nil)).Elem()
}

func (o WorkGroupConfigurationPtrOutput) ToWorkGroupConfigurationPtrOutput() WorkGroupConfigurationPtrOutput {
	return o
}

func (o WorkGroupConfigurationPtrOutput) ToWorkGroupConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationPtrOutput {
	return o
}

func (o WorkGroupConfigurationPtrOutput) Elem() WorkGroupConfigurationOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) WorkGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkGroupConfiguration
		return ret
	}).(WorkGroupConfigurationOutput)
}

// Specifies a user defined JSON string that is passed to the session engine.
func (o WorkGroupConfigurationPtrOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfiguration
	}).(pulumi.StringPtrOutput)
}

// The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. No default is defined.
//
// > This property currently supports integer types. Support for long values is planned.
func (o WorkGroupConfigurationPtrOutput) BytesScannedCutoffPerQuery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BytesScannedCutoffPerQuery
	}).(pulumi.IntPtrOutput)
}

// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
func (o WorkGroupConfigurationPtrOutput) CustomerContentEncryptionConfiguration() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *WorkGroupCustomerContentEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomerContentEncryptionConfiguration
	}).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

// If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupConfigurationPtrOutput) EnforceWorkGroupConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceWorkGroupConfiguration
	}).(pulumi.BoolPtrOutput)
}

// The Athena engine version for running queries, or the PySpark engine version for running sessions.
func (o WorkGroupConfigurationPtrOutput) EngineVersion() WorkGroupEngineVersionPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *WorkGroupEngineVersion {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(WorkGroupEngineVersionPtrOutput)
}

// Role used to access user resources in an Athena for Apache Spark session. This property applies only to Spark-enabled workgroups in Athena.
func (o WorkGroupConfigurationPtrOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionRole
	}).(pulumi.StringPtrOutput)
}

// Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
func (o WorkGroupConfigurationPtrOutput) PublishCloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PublishCloudWatchMetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

// If set to `true` , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to `false` , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is `false` . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the *Amazon Simple Storage Service Developer Guide* .
func (o WorkGroupConfigurationPtrOutput) RequesterPaysEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequesterPaysEnabled
	}).(pulumi.BoolPtrOutput)
}

// The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
func (o WorkGroupConfigurationPtrOutput) ResultConfiguration() WorkGroupResultConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfiguration) *WorkGroupResultConfiguration {
		if v == nil {
			return nil
		}
		return v.ResultConfiguration
	}).(WorkGroupResultConfigurationPtrOutput)
}

// The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.
type WorkGroupConfigurationUpdates struct {
	AdditionalConfiguration    *string `pulumi:"additionalConfiguration"`
	BytesScannedCutoffPerQuery *int    `pulumi:"bytesScannedCutoffPerQuery"`
	// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
	CustomerContentEncryptionConfiguration *WorkGroupCustomerContentEncryptionConfiguration `pulumi:"customerContentEncryptionConfiguration"`
	EnforceWorkGroupConfiguration          *bool                                            `pulumi:"enforceWorkGroupConfiguration"`
	// The Athena engine version for running queries, or the PySpark engine version for running sessions.
	EngineVersion                                *WorkGroupEngineVersion `pulumi:"engineVersion"`
	ExecutionRole                                *string                 `pulumi:"executionRole"`
	PublishCloudWatchMetricsEnabled              *bool                   `pulumi:"publishCloudWatchMetricsEnabled"`
	RemoveBytesScannedCutoffPerQuery             *bool                   `pulumi:"removeBytesScannedCutoffPerQuery"`
	RemoveCustomerContentEncryptionConfiguration *bool                   `pulumi:"removeCustomerContentEncryptionConfiguration"`
	RequesterPaysEnabled                         *bool                   `pulumi:"requesterPaysEnabled"`
	// The information about the updates in the query results, such as output location and encryption configuration for the query results.
	ResultConfigurationUpdates *WorkGroupResultConfigurationUpdates `pulumi:"resultConfigurationUpdates"`
}

// WorkGroupConfigurationUpdatesInput is an input type that accepts WorkGroupConfigurationUpdatesArgs and WorkGroupConfigurationUpdatesOutput values.
// You can construct a concrete instance of `WorkGroupConfigurationUpdatesInput` via:
//
//	WorkGroupConfigurationUpdatesArgs{...}
type WorkGroupConfigurationUpdatesInput interface {
	pulumi.Input

	ToWorkGroupConfigurationUpdatesOutput() WorkGroupConfigurationUpdatesOutput
	ToWorkGroupConfigurationUpdatesOutputWithContext(context.Context) WorkGroupConfigurationUpdatesOutput
}

// The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.
type WorkGroupConfigurationUpdatesArgs struct {
	AdditionalConfiguration    pulumi.StringPtrInput `pulumi:"additionalConfiguration"`
	BytesScannedCutoffPerQuery pulumi.IntPtrInput    `pulumi:"bytesScannedCutoffPerQuery"`
	// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
	CustomerContentEncryptionConfiguration WorkGroupCustomerContentEncryptionConfigurationPtrInput `pulumi:"customerContentEncryptionConfiguration"`
	EnforceWorkGroupConfiguration          pulumi.BoolPtrInput                                     `pulumi:"enforceWorkGroupConfiguration"`
	// The Athena engine version for running queries, or the PySpark engine version for running sessions.
	EngineVersion                                WorkGroupEngineVersionPtrInput `pulumi:"engineVersion"`
	ExecutionRole                                pulumi.StringPtrInput          `pulumi:"executionRole"`
	PublishCloudWatchMetricsEnabled              pulumi.BoolPtrInput            `pulumi:"publishCloudWatchMetricsEnabled"`
	RemoveBytesScannedCutoffPerQuery             pulumi.BoolPtrInput            `pulumi:"removeBytesScannedCutoffPerQuery"`
	RemoveCustomerContentEncryptionConfiguration pulumi.BoolPtrInput            `pulumi:"removeCustomerContentEncryptionConfiguration"`
	RequesterPaysEnabled                         pulumi.BoolPtrInput            `pulumi:"requesterPaysEnabled"`
	// The information about the updates in the query results, such as output location and encryption configuration for the query results.
	ResultConfigurationUpdates WorkGroupResultConfigurationUpdatesPtrInput `pulumi:"resultConfigurationUpdates"`
}

func (WorkGroupConfigurationUpdatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupConfigurationUpdates)(nil)).Elem()
}

func (i WorkGroupConfigurationUpdatesArgs) ToWorkGroupConfigurationUpdatesOutput() WorkGroupConfigurationUpdatesOutput {
	return i.ToWorkGroupConfigurationUpdatesOutputWithContext(context.Background())
}

func (i WorkGroupConfigurationUpdatesArgs) ToWorkGroupConfigurationUpdatesOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationUpdatesOutput)
}

func (i WorkGroupConfigurationUpdatesArgs) ToWorkGroupConfigurationUpdatesPtrOutput() WorkGroupConfigurationUpdatesPtrOutput {
	return i.ToWorkGroupConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (i WorkGroupConfigurationUpdatesArgs) ToWorkGroupConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationUpdatesOutput).ToWorkGroupConfigurationUpdatesPtrOutputWithContext(ctx)
}

// WorkGroupConfigurationUpdatesPtrInput is an input type that accepts WorkGroupConfigurationUpdatesArgs, WorkGroupConfigurationUpdatesPtr and WorkGroupConfigurationUpdatesPtrOutput values.
// You can construct a concrete instance of `WorkGroupConfigurationUpdatesPtrInput` via:
//
//	        WorkGroupConfigurationUpdatesArgs{...}
//
//	or:
//
//	        nil
type WorkGroupConfigurationUpdatesPtrInput interface {
	pulumi.Input

	ToWorkGroupConfigurationUpdatesPtrOutput() WorkGroupConfigurationUpdatesPtrOutput
	ToWorkGroupConfigurationUpdatesPtrOutputWithContext(context.Context) WorkGroupConfigurationUpdatesPtrOutput
}

type workGroupConfigurationUpdatesPtrType WorkGroupConfigurationUpdatesArgs

func WorkGroupConfigurationUpdatesPtr(v *WorkGroupConfigurationUpdatesArgs) WorkGroupConfigurationUpdatesPtrInput {
	return (*workGroupConfigurationUpdatesPtrType)(v)
}

func (*workGroupConfigurationUpdatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupConfigurationUpdates)(nil)).Elem()
}

func (i *workGroupConfigurationUpdatesPtrType) ToWorkGroupConfigurationUpdatesPtrOutput() WorkGroupConfigurationUpdatesPtrOutput {
	return i.ToWorkGroupConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (i *workGroupConfigurationUpdatesPtrType) ToWorkGroupConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupConfigurationUpdatesPtrOutput)
}

// The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.
type WorkGroupConfigurationUpdatesOutput struct{ *pulumi.OutputState }

func (WorkGroupConfigurationUpdatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupConfigurationUpdates)(nil)).Elem()
}

func (o WorkGroupConfigurationUpdatesOutput) ToWorkGroupConfigurationUpdatesOutput() WorkGroupConfigurationUpdatesOutput {
	return o
}

func (o WorkGroupConfigurationUpdatesOutput) ToWorkGroupConfigurationUpdatesOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesOutput {
	return o
}

func (o WorkGroupConfigurationUpdatesOutput) ToWorkGroupConfigurationUpdatesPtrOutput() WorkGroupConfigurationUpdatesPtrOutput {
	return o.ToWorkGroupConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (o WorkGroupConfigurationUpdatesOutput) ToWorkGroupConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupConfigurationUpdates) *WorkGroupConfigurationUpdates {
		return &v
	}).(WorkGroupConfigurationUpdatesPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *string { return v.AdditionalConfiguration }).(pulumi.StringPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) BytesScannedCutoffPerQuery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *int { return v.BytesScannedCutoffPerQuery }).(pulumi.IntPtrOutput)
}

// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
func (o WorkGroupConfigurationUpdatesOutput) CustomerContentEncryptionConfiguration() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *WorkGroupCustomerContentEncryptionConfiguration {
		return v.CustomerContentEncryptionConfiguration
	}).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) EnforceWorkGroupConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *bool { return v.EnforceWorkGroupConfiguration }).(pulumi.BoolPtrOutput)
}

// The Athena engine version for running queries, or the PySpark engine version for running sessions.
func (o WorkGroupConfigurationUpdatesOutput) EngineVersion() WorkGroupEngineVersionPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *WorkGroupEngineVersion { return v.EngineVersion }).(WorkGroupEngineVersionPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *string { return v.ExecutionRole }).(pulumi.StringPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) PublishCloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *bool { return v.PublishCloudWatchMetricsEnabled }).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) RemoveBytesScannedCutoffPerQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *bool { return v.RemoveBytesScannedCutoffPerQuery }).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) RemoveCustomerContentEncryptionConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *bool { return v.RemoveCustomerContentEncryptionConfiguration }).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesOutput) RequesterPaysEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *bool { return v.RequesterPaysEnabled }).(pulumi.BoolPtrOutput)
}

// The information about the updates in the query results, such as output location and encryption configuration for the query results.
func (o WorkGroupConfigurationUpdatesOutput) ResultConfigurationUpdates() WorkGroupResultConfigurationUpdatesPtrOutput {
	return o.ApplyT(func(v WorkGroupConfigurationUpdates) *WorkGroupResultConfigurationUpdates {
		return v.ResultConfigurationUpdates
	}).(WorkGroupResultConfigurationUpdatesPtrOutput)
}

type WorkGroupConfigurationUpdatesPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupConfigurationUpdatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupConfigurationUpdates)(nil)).Elem()
}

func (o WorkGroupConfigurationUpdatesPtrOutput) ToWorkGroupConfigurationUpdatesPtrOutput() WorkGroupConfigurationUpdatesPtrOutput {
	return o
}

func (o WorkGroupConfigurationUpdatesPtrOutput) ToWorkGroupConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupConfigurationUpdatesPtrOutput {
	return o
}

func (o WorkGroupConfigurationUpdatesPtrOutput) Elem() WorkGroupConfigurationUpdatesOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) WorkGroupConfigurationUpdates {
		if v != nil {
			return *v
		}
		var ret WorkGroupConfigurationUpdates
		return ret
	}).(WorkGroupConfigurationUpdatesOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) AdditionalConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalConfiguration
	}).(pulumi.StringPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) BytesScannedCutoffPerQuery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *int {
		if v == nil {
			return nil
		}
		return v.BytesScannedCutoffPerQuery
	}).(pulumi.IntPtrOutput)
}

// Specifies the customer managed KMS key that is used to encrypt the user's data stores in Athena. When an AWS managed key is used, this value is null. This setting does not apply to Athena SQL workgroups.
func (o WorkGroupConfigurationUpdatesPtrOutput) CustomerContentEncryptionConfiguration() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *WorkGroupCustomerContentEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomerContentEncryptionConfiguration
	}).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) EnforceWorkGroupConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceWorkGroupConfiguration
	}).(pulumi.BoolPtrOutput)
}

// The Athena engine version for running queries, or the PySpark engine version for running sessions.
func (o WorkGroupConfigurationUpdatesPtrOutput) EngineVersion() WorkGroupEngineVersionPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *WorkGroupEngineVersion {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(WorkGroupEngineVersionPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionRole
	}).(pulumi.StringPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) PublishCloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.PublishCloudWatchMetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) RemoveBytesScannedCutoffPerQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveBytesScannedCutoffPerQuery
	}).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) RemoveCustomerContentEncryptionConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveCustomerContentEncryptionConfiguration
	}).(pulumi.BoolPtrOutput)
}

func (o WorkGroupConfigurationUpdatesPtrOutput) RequesterPaysEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RequesterPaysEnabled
	}).(pulumi.BoolPtrOutput)
}

// The information about the updates in the query results, such as output location and encryption configuration for the query results.
func (o WorkGroupConfigurationUpdatesPtrOutput) ResultConfigurationUpdates() WorkGroupResultConfigurationUpdatesPtrOutput {
	return o.ApplyT(func(v *WorkGroupConfigurationUpdates) *WorkGroupResultConfigurationUpdates {
		if v == nil {
			return nil
		}
		return v.ResultConfigurationUpdates
	}).(WorkGroupResultConfigurationUpdatesPtrOutput)
}

// Indicates the KMS key for encrypting notebook content.
type WorkGroupCustomerContentEncryptionConfiguration struct {
	// The customer managed KMS key that is used to encrypt the user's data stores in Athena.
	KmsKey string `pulumi:"kmsKey"`
}

// WorkGroupCustomerContentEncryptionConfigurationInput is an input type that accepts WorkGroupCustomerContentEncryptionConfigurationArgs and WorkGroupCustomerContentEncryptionConfigurationOutput values.
// You can construct a concrete instance of `WorkGroupCustomerContentEncryptionConfigurationInput` via:
//
//	WorkGroupCustomerContentEncryptionConfigurationArgs{...}
type WorkGroupCustomerContentEncryptionConfigurationInput interface {
	pulumi.Input

	ToWorkGroupCustomerContentEncryptionConfigurationOutput() WorkGroupCustomerContentEncryptionConfigurationOutput
	ToWorkGroupCustomerContentEncryptionConfigurationOutputWithContext(context.Context) WorkGroupCustomerContentEncryptionConfigurationOutput
}

// Indicates the KMS key for encrypting notebook content.
type WorkGroupCustomerContentEncryptionConfigurationArgs struct {
	// The customer managed KMS key that is used to encrypt the user's data stores in Athena.
	KmsKey pulumi.StringInput `pulumi:"kmsKey"`
}

func (WorkGroupCustomerContentEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupCustomerContentEncryptionConfiguration)(nil)).Elem()
}

func (i WorkGroupCustomerContentEncryptionConfigurationArgs) ToWorkGroupCustomerContentEncryptionConfigurationOutput() WorkGroupCustomerContentEncryptionConfigurationOutput {
	return i.ToWorkGroupCustomerContentEncryptionConfigurationOutputWithContext(context.Background())
}

func (i WorkGroupCustomerContentEncryptionConfigurationArgs) ToWorkGroupCustomerContentEncryptionConfigurationOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupCustomerContentEncryptionConfigurationOutput)
}

func (i WorkGroupCustomerContentEncryptionConfigurationArgs) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutput() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return i.ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkGroupCustomerContentEncryptionConfigurationArgs) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupCustomerContentEncryptionConfigurationOutput).ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(ctx)
}

// WorkGroupCustomerContentEncryptionConfigurationPtrInput is an input type that accepts WorkGroupCustomerContentEncryptionConfigurationArgs, WorkGroupCustomerContentEncryptionConfigurationPtr and WorkGroupCustomerContentEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkGroupCustomerContentEncryptionConfigurationPtrInput` via:
//
//	        WorkGroupCustomerContentEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkGroupCustomerContentEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToWorkGroupCustomerContentEncryptionConfigurationPtrOutput() WorkGroupCustomerContentEncryptionConfigurationPtrOutput
	ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(context.Context) WorkGroupCustomerContentEncryptionConfigurationPtrOutput
}

type workGroupCustomerContentEncryptionConfigurationPtrType WorkGroupCustomerContentEncryptionConfigurationArgs

func WorkGroupCustomerContentEncryptionConfigurationPtr(v *WorkGroupCustomerContentEncryptionConfigurationArgs) WorkGroupCustomerContentEncryptionConfigurationPtrInput {
	return (*workGroupCustomerContentEncryptionConfigurationPtrType)(v)
}

func (*workGroupCustomerContentEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupCustomerContentEncryptionConfiguration)(nil)).Elem()
}

func (i *workGroupCustomerContentEncryptionConfigurationPtrType) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutput() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return i.ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *workGroupCustomerContentEncryptionConfigurationPtrType) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

// Indicates the KMS key for encrypting notebook content.
type WorkGroupCustomerContentEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (WorkGroupCustomerContentEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupCustomerContentEncryptionConfiguration)(nil)).Elem()
}

func (o WorkGroupCustomerContentEncryptionConfigurationOutput) ToWorkGroupCustomerContentEncryptionConfigurationOutput() WorkGroupCustomerContentEncryptionConfigurationOutput {
	return o
}

func (o WorkGroupCustomerContentEncryptionConfigurationOutput) ToWorkGroupCustomerContentEncryptionConfigurationOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationOutput {
	return o
}

func (o WorkGroupCustomerContentEncryptionConfigurationOutput) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutput() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkGroupCustomerContentEncryptionConfigurationOutput) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupCustomerContentEncryptionConfiguration) *WorkGroupCustomerContentEncryptionConfiguration {
		return &v
	}).(WorkGroupCustomerContentEncryptionConfigurationPtrOutput)
}

// The customer managed KMS key that is used to encrypt the user's data stores in Athena.
func (o WorkGroupCustomerContentEncryptionConfigurationOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkGroupCustomerContentEncryptionConfiguration) string { return v.KmsKey }).(pulumi.StringOutput)
}

type WorkGroupCustomerContentEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupCustomerContentEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupCustomerContentEncryptionConfiguration)(nil)).Elem()
}

func (o WorkGroupCustomerContentEncryptionConfigurationPtrOutput) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutput() WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkGroupCustomerContentEncryptionConfigurationPtrOutput) ToWorkGroupCustomerContentEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupCustomerContentEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkGroupCustomerContentEncryptionConfigurationPtrOutput) Elem() WorkGroupCustomerContentEncryptionConfigurationOutput {
	return o.ApplyT(func(v *WorkGroupCustomerContentEncryptionConfiguration) WorkGroupCustomerContentEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkGroupCustomerContentEncryptionConfiguration
		return ret
	}).(WorkGroupCustomerContentEncryptionConfigurationOutput)
}

// The customer managed KMS key that is used to encrypt the user's data stores in Athena.
func (o WorkGroupCustomerContentEncryptionConfigurationPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupCustomerContentEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS) and key information.
type WorkGroupEncryptionConfiguration struct {
	// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys ( `SSE_S3` ), server-side encryption with KMS-managed keys ( `SSE_KMS` ), or client-side encryption with KMS-managed keys ( `CSE_KMS` ) is used.
	//
	// If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
	EncryptionOption WorkGroupEncryptionOption `pulumi:"encryptionOption"`
	// For `SSE_KMS` and `CSE_KMS` , this is the KMS key ARN or ID.
	KmsKey *string `pulumi:"kmsKey"`
}

// WorkGroupEncryptionConfigurationInput is an input type that accepts WorkGroupEncryptionConfigurationArgs and WorkGroupEncryptionConfigurationOutput values.
// You can construct a concrete instance of `WorkGroupEncryptionConfigurationInput` via:
//
//	WorkGroupEncryptionConfigurationArgs{...}
type WorkGroupEncryptionConfigurationInput interface {
	pulumi.Input

	ToWorkGroupEncryptionConfigurationOutput() WorkGroupEncryptionConfigurationOutput
	ToWorkGroupEncryptionConfigurationOutputWithContext(context.Context) WorkGroupEncryptionConfigurationOutput
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS) and key information.
type WorkGroupEncryptionConfigurationArgs struct {
	// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys ( `SSE_S3` ), server-side encryption with KMS-managed keys ( `SSE_KMS` ), or client-side encryption with KMS-managed keys ( `CSE_KMS` ) is used.
	//
	// If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
	EncryptionOption WorkGroupEncryptionOptionInput `pulumi:"encryptionOption"`
	// For `SSE_KMS` and `CSE_KMS` , this is the KMS key ARN or ID.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
}

func (WorkGroupEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupEncryptionConfiguration)(nil)).Elem()
}

func (i WorkGroupEncryptionConfigurationArgs) ToWorkGroupEncryptionConfigurationOutput() WorkGroupEncryptionConfigurationOutput {
	return i.ToWorkGroupEncryptionConfigurationOutputWithContext(context.Background())
}

func (i WorkGroupEncryptionConfigurationArgs) ToWorkGroupEncryptionConfigurationOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEncryptionConfigurationOutput)
}

func (i WorkGroupEncryptionConfigurationArgs) ToWorkGroupEncryptionConfigurationPtrOutput() WorkGroupEncryptionConfigurationPtrOutput {
	return i.ToWorkGroupEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkGroupEncryptionConfigurationArgs) ToWorkGroupEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEncryptionConfigurationOutput).ToWorkGroupEncryptionConfigurationPtrOutputWithContext(ctx)
}

// WorkGroupEncryptionConfigurationPtrInput is an input type that accepts WorkGroupEncryptionConfigurationArgs, WorkGroupEncryptionConfigurationPtr and WorkGroupEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkGroupEncryptionConfigurationPtrInput` via:
//
//	        WorkGroupEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkGroupEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToWorkGroupEncryptionConfigurationPtrOutput() WorkGroupEncryptionConfigurationPtrOutput
	ToWorkGroupEncryptionConfigurationPtrOutputWithContext(context.Context) WorkGroupEncryptionConfigurationPtrOutput
}

type workGroupEncryptionConfigurationPtrType WorkGroupEncryptionConfigurationArgs

func WorkGroupEncryptionConfigurationPtr(v *WorkGroupEncryptionConfigurationArgs) WorkGroupEncryptionConfigurationPtrInput {
	return (*workGroupEncryptionConfigurationPtrType)(v)
}

func (*workGroupEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupEncryptionConfiguration)(nil)).Elem()
}

func (i *workGroupEncryptionConfigurationPtrType) ToWorkGroupEncryptionConfigurationPtrOutput() WorkGroupEncryptionConfigurationPtrOutput {
	return i.ToWorkGroupEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *workGroupEncryptionConfigurationPtrType) ToWorkGroupEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEncryptionConfigurationPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, SSE-KMS or CSE-KMS) and key information.
type WorkGroupEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (WorkGroupEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupEncryptionConfiguration)(nil)).Elem()
}

func (o WorkGroupEncryptionConfigurationOutput) ToWorkGroupEncryptionConfigurationOutput() WorkGroupEncryptionConfigurationOutput {
	return o
}

func (o WorkGroupEncryptionConfigurationOutput) ToWorkGroupEncryptionConfigurationOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationOutput {
	return o
}

func (o WorkGroupEncryptionConfigurationOutput) ToWorkGroupEncryptionConfigurationPtrOutput() WorkGroupEncryptionConfigurationPtrOutput {
	return o.ToWorkGroupEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkGroupEncryptionConfigurationOutput) ToWorkGroupEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupEncryptionConfiguration) *WorkGroupEncryptionConfiguration {
		return &v
	}).(WorkGroupEncryptionConfigurationPtrOutput)
}

// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys ( `SSE_S3` ), server-side encryption with KMS-managed keys ( `SSE_KMS` ), or client-side encryption with KMS-managed keys ( `CSE_KMS` ) is used.
//
// If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
func (o WorkGroupEncryptionConfigurationOutput) EncryptionOption() WorkGroupEncryptionOptionOutput {
	return o.ApplyT(func(v WorkGroupEncryptionConfiguration) WorkGroupEncryptionOption { return v.EncryptionOption }).(WorkGroupEncryptionOptionOutput)
}

// For `SSE_KMS` and `CSE_KMS` , this is the KMS key ARN or ID.
func (o WorkGroupEncryptionConfigurationOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupEncryptionConfiguration) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

type WorkGroupEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupEncryptionConfiguration)(nil)).Elem()
}

func (o WorkGroupEncryptionConfigurationPtrOutput) ToWorkGroupEncryptionConfigurationPtrOutput() WorkGroupEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkGroupEncryptionConfigurationPtrOutput) ToWorkGroupEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkGroupEncryptionConfigurationPtrOutput) Elem() WorkGroupEncryptionConfigurationOutput {
	return o.ApplyT(func(v *WorkGroupEncryptionConfiguration) WorkGroupEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkGroupEncryptionConfiguration
		return ret
	}).(WorkGroupEncryptionConfigurationOutput)
}

// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys ( `SSE_S3` ), server-side encryption with KMS-managed keys ( `SSE_KMS` ), or client-side encryption with KMS-managed keys ( `CSE_KMS` ) is used.
//
// If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
func (o WorkGroupEncryptionConfigurationPtrOutput) EncryptionOption() WorkGroupEncryptionOptionPtrOutput {
	return o.ApplyT(func(v *WorkGroupEncryptionConfiguration) *WorkGroupEncryptionOption {
		if v == nil {
			return nil
		}
		return &v.EncryptionOption
	}).(WorkGroupEncryptionOptionPtrOutput)
}

// For `SSE_KMS` and `CSE_KMS` , this is the KMS key ARN or ID.
func (o WorkGroupEncryptionConfigurationPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(pulumi.StringPtrOutput)
}

// The Athena engine version for running queries.
type WorkGroupEngineVersion struct {
	// Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a `CreateWorkGroup` or `UpdateWorkGroup` operation, the `EffectiveEngineVersion` field is ignored.
	EffectiveEngineVersion *string `pulumi:"effectiveEngineVersion"`
	// The engine version requested by the user. Possible values are determined by the output of `ListEngineVersions` , including AUTO. The default is AUTO.
	SelectedEngineVersion *string `pulumi:"selectedEngineVersion"`
}

// WorkGroupEngineVersionInput is an input type that accepts WorkGroupEngineVersionArgs and WorkGroupEngineVersionOutput values.
// You can construct a concrete instance of `WorkGroupEngineVersionInput` via:
//
//	WorkGroupEngineVersionArgs{...}
type WorkGroupEngineVersionInput interface {
	pulumi.Input

	ToWorkGroupEngineVersionOutput() WorkGroupEngineVersionOutput
	ToWorkGroupEngineVersionOutputWithContext(context.Context) WorkGroupEngineVersionOutput
}

// The Athena engine version for running queries.
type WorkGroupEngineVersionArgs struct {
	// Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a `CreateWorkGroup` or `UpdateWorkGroup` operation, the `EffectiveEngineVersion` field is ignored.
	EffectiveEngineVersion pulumi.StringPtrInput `pulumi:"effectiveEngineVersion"`
	// The engine version requested by the user. Possible values are determined by the output of `ListEngineVersions` , including AUTO. The default is AUTO.
	SelectedEngineVersion pulumi.StringPtrInput `pulumi:"selectedEngineVersion"`
}

func (WorkGroupEngineVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupEngineVersion)(nil)).Elem()
}

func (i WorkGroupEngineVersionArgs) ToWorkGroupEngineVersionOutput() WorkGroupEngineVersionOutput {
	return i.ToWorkGroupEngineVersionOutputWithContext(context.Background())
}

func (i WorkGroupEngineVersionArgs) ToWorkGroupEngineVersionOutputWithContext(ctx context.Context) WorkGroupEngineVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEngineVersionOutput)
}

func (i WorkGroupEngineVersionArgs) ToWorkGroupEngineVersionPtrOutput() WorkGroupEngineVersionPtrOutput {
	return i.ToWorkGroupEngineVersionPtrOutputWithContext(context.Background())
}

func (i WorkGroupEngineVersionArgs) ToWorkGroupEngineVersionPtrOutputWithContext(ctx context.Context) WorkGroupEngineVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEngineVersionOutput).ToWorkGroupEngineVersionPtrOutputWithContext(ctx)
}

// WorkGroupEngineVersionPtrInput is an input type that accepts WorkGroupEngineVersionArgs, WorkGroupEngineVersionPtr and WorkGroupEngineVersionPtrOutput values.
// You can construct a concrete instance of `WorkGroupEngineVersionPtrInput` via:
//
//	        WorkGroupEngineVersionArgs{...}
//
//	or:
//
//	        nil
type WorkGroupEngineVersionPtrInput interface {
	pulumi.Input

	ToWorkGroupEngineVersionPtrOutput() WorkGroupEngineVersionPtrOutput
	ToWorkGroupEngineVersionPtrOutputWithContext(context.Context) WorkGroupEngineVersionPtrOutput
}

type workGroupEngineVersionPtrType WorkGroupEngineVersionArgs

func WorkGroupEngineVersionPtr(v *WorkGroupEngineVersionArgs) WorkGroupEngineVersionPtrInput {
	return (*workGroupEngineVersionPtrType)(v)
}

func (*workGroupEngineVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupEngineVersion)(nil)).Elem()
}

func (i *workGroupEngineVersionPtrType) ToWorkGroupEngineVersionPtrOutput() WorkGroupEngineVersionPtrOutput {
	return i.ToWorkGroupEngineVersionPtrOutputWithContext(context.Background())
}

func (i *workGroupEngineVersionPtrType) ToWorkGroupEngineVersionPtrOutputWithContext(ctx context.Context) WorkGroupEngineVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupEngineVersionPtrOutput)
}

// The Athena engine version for running queries.
type WorkGroupEngineVersionOutput struct{ *pulumi.OutputState }

func (WorkGroupEngineVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupEngineVersion)(nil)).Elem()
}

func (o WorkGroupEngineVersionOutput) ToWorkGroupEngineVersionOutput() WorkGroupEngineVersionOutput {
	return o
}

func (o WorkGroupEngineVersionOutput) ToWorkGroupEngineVersionOutputWithContext(ctx context.Context) WorkGroupEngineVersionOutput {
	return o
}

func (o WorkGroupEngineVersionOutput) ToWorkGroupEngineVersionPtrOutput() WorkGroupEngineVersionPtrOutput {
	return o.ToWorkGroupEngineVersionPtrOutputWithContext(context.Background())
}

func (o WorkGroupEngineVersionOutput) ToWorkGroupEngineVersionPtrOutputWithContext(ctx context.Context) WorkGroupEngineVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupEngineVersion) *WorkGroupEngineVersion {
		return &v
	}).(WorkGroupEngineVersionPtrOutput)
}

// Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a `CreateWorkGroup` or `UpdateWorkGroup` operation, the `EffectiveEngineVersion` field is ignored.
func (o WorkGroupEngineVersionOutput) EffectiveEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupEngineVersion) *string { return v.EffectiveEngineVersion }).(pulumi.StringPtrOutput)
}

// The engine version requested by the user. Possible values are determined by the output of `ListEngineVersions` , including AUTO. The default is AUTO.
func (o WorkGroupEngineVersionOutput) SelectedEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupEngineVersion) *string { return v.SelectedEngineVersion }).(pulumi.StringPtrOutput)
}

type WorkGroupEngineVersionPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupEngineVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupEngineVersion)(nil)).Elem()
}

func (o WorkGroupEngineVersionPtrOutput) ToWorkGroupEngineVersionPtrOutput() WorkGroupEngineVersionPtrOutput {
	return o
}

func (o WorkGroupEngineVersionPtrOutput) ToWorkGroupEngineVersionPtrOutputWithContext(ctx context.Context) WorkGroupEngineVersionPtrOutput {
	return o
}

func (o WorkGroupEngineVersionPtrOutput) Elem() WorkGroupEngineVersionOutput {
	return o.ApplyT(func(v *WorkGroupEngineVersion) WorkGroupEngineVersion {
		if v != nil {
			return *v
		}
		var ret WorkGroupEngineVersion
		return ret
	}).(WorkGroupEngineVersionOutput)
}

// Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a `CreateWorkGroup` or `UpdateWorkGroup` operation, the `EffectiveEngineVersion` field is ignored.
func (o WorkGroupEngineVersionPtrOutput) EffectiveEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupEngineVersion) *string {
		if v == nil {
			return nil
		}
		return v.EffectiveEngineVersion
	}).(pulumi.StringPtrOutput)
}

// The engine version requested by the user. Possible values are determined by the output of `ListEngineVersions` , including AUTO. The default is AUTO.
func (o WorkGroupEngineVersionPtrOutput) SelectedEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupEngineVersion) *string {
		if v == nil {
			return nil
		}
		return v.SelectedEngineVersion
	}).(pulumi.StringPtrOutput)
}

// The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
type WorkGroupResultConfiguration struct {
	// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
	AclConfiguration *WorkGroupAclConfiguration `pulumi:"aclConfiguration"`
	// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
	EncryptionConfiguration *WorkGroupEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration:OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
	//
	// This is a client-side setting. If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `EnforceWorkGroupConfiguration` .
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . To run a query, you must specify the query results location using either a client-side setting for individual queries or a location specified by the workgroup. If workgroup settings override client-side settings, then the query uses the location specified for the workgroup. If no query location is set, Athena issues an error. For more information, see [Working with Query Results, Output Files, and Query History](https://docs.aws.amazon.com/athena/latest/ug/querying.html) and `EnforceWorkGroupConfiguration` .
	OutputLocation *string `pulumi:"outputLocation"`
}

// WorkGroupResultConfigurationInput is an input type that accepts WorkGroupResultConfigurationArgs and WorkGroupResultConfigurationOutput values.
// You can construct a concrete instance of `WorkGroupResultConfigurationInput` via:
//
//	WorkGroupResultConfigurationArgs{...}
type WorkGroupResultConfigurationInput interface {
	pulumi.Input

	ToWorkGroupResultConfigurationOutput() WorkGroupResultConfigurationOutput
	ToWorkGroupResultConfigurationOutputWithContext(context.Context) WorkGroupResultConfigurationOutput
}

// The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
type WorkGroupResultConfigurationArgs struct {
	// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
	AclConfiguration WorkGroupAclConfigurationPtrInput `pulumi:"aclConfiguration"`
	// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
	EncryptionConfiguration WorkGroupEncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// The account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration:OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
	//
	// This is a client-side setting. If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `EnforceWorkGroupConfiguration` .
	ExpectedBucketOwner pulumi.StringPtrInput `pulumi:"expectedBucketOwner"`
	// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . To run a query, you must specify the query results location using either a client-side setting for individual queries or a location specified by the workgroup. If workgroup settings override client-side settings, then the query uses the location specified for the workgroup. If no query location is set, Athena issues an error. For more information, see [Working with Query Results, Output Files, and Query History](https://docs.aws.amazon.com/athena/latest/ug/querying.html) and `EnforceWorkGroupConfiguration` .
	OutputLocation pulumi.StringPtrInput `pulumi:"outputLocation"`
}

func (WorkGroupResultConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupResultConfiguration)(nil)).Elem()
}

func (i WorkGroupResultConfigurationArgs) ToWorkGroupResultConfigurationOutput() WorkGroupResultConfigurationOutput {
	return i.ToWorkGroupResultConfigurationOutputWithContext(context.Background())
}

func (i WorkGroupResultConfigurationArgs) ToWorkGroupResultConfigurationOutputWithContext(ctx context.Context) WorkGroupResultConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationOutput)
}

func (i WorkGroupResultConfigurationArgs) ToWorkGroupResultConfigurationPtrOutput() WorkGroupResultConfigurationPtrOutput {
	return i.ToWorkGroupResultConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkGroupResultConfigurationArgs) ToWorkGroupResultConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationOutput).ToWorkGroupResultConfigurationPtrOutputWithContext(ctx)
}

// WorkGroupResultConfigurationPtrInput is an input type that accepts WorkGroupResultConfigurationArgs, WorkGroupResultConfigurationPtr and WorkGroupResultConfigurationPtrOutput values.
// You can construct a concrete instance of `WorkGroupResultConfigurationPtrInput` via:
//
//	        WorkGroupResultConfigurationArgs{...}
//
//	or:
//
//	        nil
type WorkGroupResultConfigurationPtrInput interface {
	pulumi.Input

	ToWorkGroupResultConfigurationPtrOutput() WorkGroupResultConfigurationPtrOutput
	ToWorkGroupResultConfigurationPtrOutputWithContext(context.Context) WorkGroupResultConfigurationPtrOutput
}

type workGroupResultConfigurationPtrType WorkGroupResultConfigurationArgs

func WorkGroupResultConfigurationPtr(v *WorkGroupResultConfigurationArgs) WorkGroupResultConfigurationPtrInput {
	return (*workGroupResultConfigurationPtrType)(v)
}

func (*workGroupResultConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupResultConfiguration)(nil)).Elem()
}

func (i *workGroupResultConfigurationPtrType) ToWorkGroupResultConfigurationPtrOutput() WorkGroupResultConfigurationPtrOutput {
	return i.ToWorkGroupResultConfigurationPtrOutputWithContext(context.Background())
}

func (i *workGroupResultConfigurationPtrType) ToWorkGroupResultConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationPtrOutput)
}

// The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.
type WorkGroupResultConfigurationOutput struct{ *pulumi.OutputState }

func (WorkGroupResultConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupResultConfiguration)(nil)).Elem()
}

func (o WorkGroupResultConfigurationOutput) ToWorkGroupResultConfigurationOutput() WorkGroupResultConfigurationOutput {
	return o
}

func (o WorkGroupResultConfigurationOutput) ToWorkGroupResultConfigurationOutputWithContext(ctx context.Context) WorkGroupResultConfigurationOutput {
	return o
}

func (o WorkGroupResultConfigurationOutput) ToWorkGroupResultConfigurationPtrOutput() WorkGroupResultConfigurationPtrOutput {
	return o.ToWorkGroupResultConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkGroupResultConfigurationOutput) ToWorkGroupResultConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupResultConfiguration) *WorkGroupResultConfiguration {
		return &v
	}).(WorkGroupResultConfigurationPtrOutput)
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
func (o WorkGroupResultConfigurationOutput) AclConfiguration() WorkGroupAclConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfiguration) *WorkGroupAclConfiguration { return v.AclConfiguration }).(WorkGroupAclConfigurationPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
func (o WorkGroupResultConfigurationOutput) EncryptionConfiguration() WorkGroupEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfiguration) *WorkGroupEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(WorkGroupEncryptionConfigurationPtrOutput)
}

// The account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration:OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
//
// This is a client-side setting. If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfiguration) *string { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . To run a query, you must specify the query results location using either a client-side setting for individual queries or a location specified by the workgroup. If workgroup settings override client-side settings, then the query uses the location specified for the workgroup. If no query location is set, Athena issues an error. For more information, see [Working with Query Results, Output Files, and Query History](https://docs.aws.amazon.com/athena/latest/ug/querying.html) and `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfiguration) *string { return v.OutputLocation }).(pulumi.StringPtrOutput)
}

type WorkGroupResultConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupResultConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupResultConfiguration)(nil)).Elem()
}

func (o WorkGroupResultConfigurationPtrOutput) ToWorkGroupResultConfigurationPtrOutput() WorkGroupResultConfigurationPtrOutput {
	return o
}

func (o WorkGroupResultConfigurationPtrOutput) ToWorkGroupResultConfigurationPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationPtrOutput {
	return o
}

func (o WorkGroupResultConfigurationPtrOutput) Elem() WorkGroupResultConfigurationOutput {
	return o.ApplyT(func(v *WorkGroupResultConfiguration) WorkGroupResultConfiguration {
		if v != nil {
			return *v
		}
		var ret WorkGroupResultConfiguration
		return ret
	}).(WorkGroupResultConfigurationOutput)
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
func (o WorkGroupResultConfigurationPtrOutput) AclConfiguration() WorkGroupAclConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfiguration) *WorkGroupAclConfiguration {
		if v == nil {
			return nil
		}
		return v.AclConfiguration
	}).(WorkGroupAclConfigurationPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
func (o WorkGroupResultConfigurationPtrOutput) EncryptionConfiguration() WorkGroupEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfiguration) *WorkGroupEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(WorkGroupEncryptionConfigurationPtrOutput)
}

// The account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration:OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
//
// This is a client-side setting. If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationPtrOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExpectedBucketOwner
	}).(pulumi.StringPtrOutput)
}

// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . To run a query, you must specify the query results location using either a client-side setting for individual queries or a location specified by the workgroup. If workgroup settings override client-side settings, then the query uses the location specified for the workgroup. If no query location is set, Athena issues an error. For more information, see [Working with Query Results, Output Files, and Query History](https://docs.aws.amazon.com/athena/latest/ug/querying.html) and `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationPtrOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OutputLocation
	}).(pulumi.StringPtrOutput)
}

// The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.
type WorkGroupResultConfigurationUpdates struct {
	// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
	AclConfiguration *WorkGroupAclConfiguration `pulumi:"aclConfiguration"`
	// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
	EncryptionConfiguration *WorkGroupEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The AWS account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration$OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` AWS account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
	//
	// If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `WorkGroupConfiguration$EnforceWorkGroupConfiguration` and [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . For more information, see [Query Results](https://docs.aws.amazon.com/athena/latest/ug/querying.html) If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See `EnforceWorkGroupConfiguration` .
	OutputLocation *string `pulumi:"outputLocation"`
	// If set to `true` , indicates that the previously-specified ACL configuration for queries in this workgroup should be ignored and set to null. If set to `false` or not set, and a value is present in the `AclConfiguration` of `ResultConfigurationUpdates` , the `AclConfiguration` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveAclConfiguration *bool `pulumi:"removeAclConfiguration"`
	// If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveEncryptionConfiguration *bool `pulumi:"removeEncryptionConfiguration"`
	// If set to "true", removes the AWS account ID previously specified for `ResultConfiguration$ExpectedBucketOwner` . If set to "false" or not set, and a value is present in the `ExpectedBucketOwner` in `ResultConfigurationUpdates` (the client-side setting), the `ExpectedBucketOwner` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveExpectedBucketOwner *bool `pulumi:"removeExpectedBucketOwner"`
	// If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveOutputLocation *bool `pulumi:"removeOutputLocation"`
}

// WorkGroupResultConfigurationUpdatesInput is an input type that accepts WorkGroupResultConfigurationUpdatesArgs and WorkGroupResultConfigurationUpdatesOutput values.
// You can construct a concrete instance of `WorkGroupResultConfigurationUpdatesInput` via:
//
//	WorkGroupResultConfigurationUpdatesArgs{...}
type WorkGroupResultConfigurationUpdatesInput interface {
	pulumi.Input

	ToWorkGroupResultConfigurationUpdatesOutput() WorkGroupResultConfigurationUpdatesOutput
	ToWorkGroupResultConfigurationUpdatesOutputWithContext(context.Context) WorkGroupResultConfigurationUpdatesOutput
}

// The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.
type WorkGroupResultConfigurationUpdatesArgs struct {
	// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
	AclConfiguration WorkGroupAclConfigurationPtrInput `pulumi:"aclConfiguration"`
	// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
	EncryptionConfiguration WorkGroupEncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// The AWS account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration$OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` AWS account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
	//
	// If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `WorkGroupConfiguration$EnforceWorkGroupConfiguration` and [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	ExpectedBucketOwner pulumi.StringPtrInput `pulumi:"expectedBucketOwner"`
	// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . For more information, see [Query Results](https://docs.aws.amazon.com/athena/latest/ug/querying.html) If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See `EnforceWorkGroupConfiguration` .
	OutputLocation pulumi.StringPtrInput `pulumi:"outputLocation"`
	// If set to `true` , indicates that the previously-specified ACL configuration for queries in this workgroup should be ignored and set to null. If set to `false` or not set, and a value is present in the `AclConfiguration` of `ResultConfigurationUpdates` , the `AclConfiguration` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveAclConfiguration pulumi.BoolPtrInput `pulumi:"removeAclConfiguration"`
	// If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveEncryptionConfiguration pulumi.BoolPtrInput `pulumi:"removeEncryptionConfiguration"`
	// If set to "true", removes the AWS account ID previously specified for `ResultConfiguration$ExpectedBucketOwner` . If set to "false" or not set, and a value is present in the `ExpectedBucketOwner` in `ResultConfigurationUpdates` (the client-side setting), the `ExpectedBucketOwner` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveExpectedBucketOwner pulumi.BoolPtrInput `pulumi:"removeExpectedBucketOwner"`
	// If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
	RemoveOutputLocation pulumi.BoolPtrInput `pulumi:"removeOutputLocation"`
}

func (WorkGroupResultConfigurationUpdatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupResultConfigurationUpdates)(nil)).Elem()
}

func (i WorkGroupResultConfigurationUpdatesArgs) ToWorkGroupResultConfigurationUpdatesOutput() WorkGroupResultConfigurationUpdatesOutput {
	return i.ToWorkGroupResultConfigurationUpdatesOutputWithContext(context.Background())
}

func (i WorkGroupResultConfigurationUpdatesArgs) ToWorkGroupResultConfigurationUpdatesOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationUpdatesOutput)
}

func (i WorkGroupResultConfigurationUpdatesArgs) ToWorkGroupResultConfigurationUpdatesPtrOutput() WorkGroupResultConfigurationUpdatesPtrOutput {
	return i.ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (i WorkGroupResultConfigurationUpdatesArgs) ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationUpdatesOutput).ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(ctx)
}

// WorkGroupResultConfigurationUpdatesPtrInput is an input type that accepts WorkGroupResultConfigurationUpdatesArgs, WorkGroupResultConfigurationUpdatesPtr and WorkGroupResultConfigurationUpdatesPtrOutput values.
// You can construct a concrete instance of `WorkGroupResultConfigurationUpdatesPtrInput` via:
//
//	        WorkGroupResultConfigurationUpdatesArgs{...}
//
//	or:
//
//	        nil
type WorkGroupResultConfigurationUpdatesPtrInput interface {
	pulumi.Input

	ToWorkGroupResultConfigurationUpdatesPtrOutput() WorkGroupResultConfigurationUpdatesPtrOutput
	ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(context.Context) WorkGroupResultConfigurationUpdatesPtrOutput
}

type workGroupResultConfigurationUpdatesPtrType WorkGroupResultConfigurationUpdatesArgs

func WorkGroupResultConfigurationUpdatesPtr(v *WorkGroupResultConfigurationUpdatesArgs) WorkGroupResultConfigurationUpdatesPtrInput {
	return (*workGroupResultConfigurationUpdatesPtrType)(v)
}

func (*workGroupResultConfigurationUpdatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupResultConfigurationUpdates)(nil)).Elem()
}

func (i *workGroupResultConfigurationUpdatesPtrType) ToWorkGroupResultConfigurationUpdatesPtrOutput() WorkGroupResultConfigurationUpdatesPtrOutput {
	return i.ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (i *workGroupResultConfigurationUpdatesPtrType) ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkGroupResultConfigurationUpdatesPtrOutput)
}

// The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.
type WorkGroupResultConfigurationUpdatesOutput struct{ *pulumi.OutputState }

func (WorkGroupResultConfigurationUpdatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkGroupResultConfigurationUpdates)(nil)).Elem()
}

func (o WorkGroupResultConfigurationUpdatesOutput) ToWorkGroupResultConfigurationUpdatesOutput() WorkGroupResultConfigurationUpdatesOutput {
	return o
}

func (o WorkGroupResultConfigurationUpdatesOutput) ToWorkGroupResultConfigurationUpdatesOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesOutput {
	return o
}

func (o WorkGroupResultConfigurationUpdatesOutput) ToWorkGroupResultConfigurationUpdatesPtrOutput() WorkGroupResultConfigurationUpdatesPtrOutput {
	return o.ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(context.Background())
}

func (o WorkGroupResultConfigurationUpdatesOutput) ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkGroupResultConfigurationUpdates) *WorkGroupResultConfigurationUpdates {
		return &v
	}).(WorkGroupResultConfigurationUpdatesPtrOutput)
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
func (o WorkGroupResultConfigurationUpdatesOutput) AclConfiguration() WorkGroupAclConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *WorkGroupAclConfiguration { return v.AclConfiguration }).(WorkGroupAclConfigurationPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
func (o WorkGroupResultConfigurationUpdatesOutput) EncryptionConfiguration() WorkGroupEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *WorkGroupEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(WorkGroupEncryptionConfigurationPtrOutput)
}

// The AWS account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration$OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` AWS account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
//
// If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `WorkGroupConfiguration$EnforceWorkGroupConfiguration` and [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *string { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . For more information, see [Query Results](https://docs.aws.amazon.com/athena/latest/ug/querying.html) If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationUpdatesOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *string { return v.OutputLocation }).(pulumi.StringPtrOutput)
}

// If set to `true` , indicates that the previously-specified ACL configuration for queries in this workgroup should be ignored and set to null. If set to `false` or not set, and a value is present in the `AclConfiguration` of `ResultConfigurationUpdates` , the `AclConfiguration` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesOutput) RemoveAclConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *bool { return v.RemoveAclConfiguration }).(pulumi.BoolPtrOutput)
}

// If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesOutput) RemoveEncryptionConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *bool { return v.RemoveEncryptionConfiguration }).(pulumi.BoolPtrOutput)
}

// If set to "true", removes the AWS account ID previously specified for `ResultConfiguration$ExpectedBucketOwner` . If set to "false" or not set, and a value is present in the `ExpectedBucketOwner` in `ResultConfigurationUpdates` (the client-side setting), the `ExpectedBucketOwner` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesOutput) RemoveExpectedBucketOwner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *bool { return v.RemoveExpectedBucketOwner }).(pulumi.BoolPtrOutput)
}

// If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesOutput) RemoveOutputLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkGroupResultConfigurationUpdates) *bool { return v.RemoveOutputLocation }).(pulumi.BoolPtrOutput)
}

type WorkGroupResultConfigurationUpdatesPtrOutput struct{ *pulumi.OutputState }

func (WorkGroupResultConfigurationUpdatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkGroupResultConfigurationUpdates)(nil)).Elem()
}

func (o WorkGroupResultConfigurationUpdatesPtrOutput) ToWorkGroupResultConfigurationUpdatesPtrOutput() WorkGroupResultConfigurationUpdatesPtrOutput {
	return o
}

func (o WorkGroupResultConfigurationUpdatesPtrOutput) ToWorkGroupResultConfigurationUpdatesPtrOutputWithContext(ctx context.Context) WorkGroupResultConfigurationUpdatesPtrOutput {
	return o
}

func (o WorkGroupResultConfigurationUpdatesPtrOutput) Elem() WorkGroupResultConfigurationUpdatesOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) WorkGroupResultConfigurationUpdates {
		if v != nil {
			return *v
		}
		var ret WorkGroupResultConfigurationUpdates
		return ret
	}).(WorkGroupResultConfigurationUpdatesOutput)
}

// Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the `x-amz-acl` request header. For more information about S3 Object Ownership, see [Object Ownership settings](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview) in the *Amazon S3 User Guide* .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) AclConfiguration() WorkGroupAclConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *WorkGroupAclConfiguration {
		if v == nil {
			return nil
		}
		return v.AclConfiguration
	}).(WorkGroupAclConfigurationPtrOutput)
}

// If query results are encrypted in Amazon S3, indicates the encryption option used (for example, `SSE_KMS` or `CSE_KMS` ) and key information.
func (o WorkGroupResultConfigurationUpdatesPtrOutput) EncryptionConfiguration() WorkGroupEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *WorkGroupEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(WorkGroupEncryptionConfigurationPtrOutput)
}

// The AWS account ID that you expect to be the owner of the Amazon S3 bucket specified by `ResultConfiguration$OutputLocation` . If set, Athena uses the value for `ExpectedBucketOwner` when it makes Amazon S3 calls to your specified output location. If the `ExpectedBucketOwner` AWS account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.
//
// If workgroup settings override client-side settings, then the query uses the `ExpectedBucketOwner` setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See `WorkGroupConfiguration$EnforceWorkGroupConfiguration` and [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *string {
		if v == nil {
			return nil
		}
		return v.ExpectedBucketOwner
	}).(pulumi.StringPtrOutput)
}

// The location in Amazon S3 where your query results are stored, such as `s3://path/to/query/bucket/` . For more information, see [Query Results](https://docs.aws.amazon.com/athena/latest/ug/querying.html) If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See `EnforceWorkGroupConfiguration` .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *string {
		if v == nil {
			return nil
		}
		return v.OutputLocation
	}).(pulumi.StringPtrOutput)
}

// If set to `true` , indicates that the previously-specified ACL configuration for queries in this workgroup should be ignored and set to null. If set to `false` or not set, and a value is present in the `AclConfiguration` of `ResultConfigurationUpdates` , the `AclConfiguration` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) RemoveAclConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveAclConfiguration
	}).(pulumi.BoolPtrOutput)
}

// If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) RemoveEncryptionConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveEncryptionConfiguration
	}).(pulumi.BoolPtrOutput)
}

// If set to "true", removes the AWS account ID previously specified for `ResultConfiguration$ExpectedBucketOwner` . If set to "false" or not set, and a value is present in the `ExpectedBucketOwner` in `ResultConfigurationUpdates` (the client-side setting), the `ExpectedBucketOwner` in the workgroup's `ResultConfiguration` is updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) RemoveExpectedBucketOwner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveExpectedBucketOwner
	}).(pulumi.BoolPtrOutput)
}

// If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup's ResultConfiguration will be updated with the new value. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html) .
func (o WorkGroupResultConfigurationUpdatesPtrOutput) RemoveOutputLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkGroupResultConfigurationUpdates) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveOutputLocation
	}).(pulumi.BoolPtrOutput)
}

type WorkGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationCapacityAssignmentInput)(nil)).Elem(), CapacityReservationCapacityAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationCapacityAssignmentArrayInput)(nil)).Elem(), CapacityReservationCapacityAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationCapacityAssignmentConfigurationInput)(nil)).Elem(), CapacityReservationCapacityAssignmentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationCapacityAssignmentConfigurationPtrInput)(nil)).Elem(), CapacityReservationCapacityAssignmentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupAclConfigurationInput)(nil)).Elem(), WorkGroupAclConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupAclConfigurationPtrInput)(nil)).Elem(), WorkGroupAclConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupConfigurationInput)(nil)).Elem(), WorkGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupConfigurationPtrInput)(nil)).Elem(), WorkGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupConfigurationUpdatesInput)(nil)).Elem(), WorkGroupConfigurationUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupConfigurationUpdatesPtrInput)(nil)).Elem(), WorkGroupConfigurationUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupCustomerContentEncryptionConfigurationInput)(nil)).Elem(), WorkGroupCustomerContentEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupCustomerContentEncryptionConfigurationPtrInput)(nil)).Elem(), WorkGroupCustomerContentEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupEncryptionConfigurationInput)(nil)).Elem(), WorkGroupEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupEncryptionConfigurationPtrInput)(nil)).Elem(), WorkGroupEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupEngineVersionInput)(nil)).Elem(), WorkGroupEngineVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupEngineVersionPtrInput)(nil)).Elem(), WorkGroupEngineVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupResultConfigurationInput)(nil)).Elem(), WorkGroupResultConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupResultConfigurationPtrInput)(nil)).Elem(), WorkGroupResultConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupResultConfigurationUpdatesInput)(nil)).Elem(), WorkGroupResultConfigurationUpdatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkGroupResultConfigurationUpdatesPtrInput)(nil)).Elem(), WorkGroupResultConfigurationUpdatesArgs{})
	pulumi.RegisterOutputType(CapacityReservationCapacityAssignmentOutput{})
	pulumi.RegisterOutputType(CapacityReservationCapacityAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CapacityReservationCapacityAssignmentConfigurationOutput{})
	pulumi.RegisterOutputType(CapacityReservationCapacityAssignmentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupAclConfigurationOutput{})
	pulumi.RegisterOutputType(WorkGroupAclConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupConfigurationOutput{})
	pulumi.RegisterOutputType(WorkGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupConfigurationUpdatesOutput{})
	pulumi.RegisterOutputType(WorkGroupConfigurationUpdatesPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupCustomerContentEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(WorkGroupCustomerContentEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(WorkGroupEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupEngineVersionOutput{})
	pulumi.RegisterOutputType(WorkGroupEngineVersionPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupResultConfigurationOutput{})
	pulumi.RegisterOutputType(WorkGroupResultConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkGroupResultConfigurationUpdatesOutput{})
	pulumi.RegisterOutputType(WorkGroupResultConfigurationUpdatesPtrOutput{})
}
