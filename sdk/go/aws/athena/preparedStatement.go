// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html
type PreparedStatement struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-querystatement
	QueryStatement pulumi.StringOutput `pulumi:"queryStatement"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-statementname
	StatementName pulumi.StringOutput `pulumi:"statementName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-workgroup
	WorkGroup pulumi.StringOutput `pulumi:"workGroup"`
}

// NewPreparedStatement registers a new resource with the given unique name, arguments, and options.
func NewPreparedStatement(ctx *pulumi.Context,
	name string, args *PreparedStatementArgs, opts ...pulumi.ResourceOption) (*PreparedStatement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QueryStatement == nil {
		return nil, errors.New("invalid value for required argument 'QueryStatement'")
	}
	if args.StatementName == nil {
		return nil, errors.New("invalid value for required argument 'StatementName'")
	}
	if args.WorkGroup == nil {
		return nil, errors.New("invalid value for required argument 'WorkGroup'")
	}
	var resource PreparedStatement
	err := ctx.RegisterResource("aws-native:Athena:PreparedStatement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreparedStatement gets an existing PreparedStatement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreparedStatement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreparedStatementState, opts ...pulumi.ResourceOption) (*PreparedStatement, error) {
	var resource PreparedStatement
	err := ctx.ReadResource("aws-native:Athena:PreparedStatement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreparedStatement resources.
type preparedStatementState struct {
}

type PreparedStatementState struct {
}

func (PreparedStatementState) ElementType() reflect.Type {
	return reflect.TypeOf((*preparedStatementState)(nil)).Elem()
}

type preparedStatementArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-querystatement
	QueryStatement string `pulumi:"queryStatement"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-statementname
	StatementName string `pulumi:"statementName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-workgroup
	WorkGroup string `pulumi:"workGroup"`
}

// The set of arguments for constructing a PreparedStatement resource.
type PreparedStatementArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-querystatement
	QueryStatement pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-statementname
	StatementName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-workgroup
	WorkGroup pulumi.StringInput
}

func (PreparedStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preparedStatementArgs)(nil)).Elem()
}

type PreparedStatementInput interface {
	pulumi.Input

	ToPreparedStatementOutput() PreparedStatementOutput
	ToPreparedStatementOutputWithContext(ctx context.Context) PreparedStatementOutput
}

func (*PreparedStatement) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedStatement)(nil))
}

func (i *PreparedStatement) ToPreparedStatementOutput() PreparedStatementOutput {
	return i.ToPreparedStatementOutputWithContext(context.Background())
}

func (i *PreparedStatement) ToPreparedStatementOutputWithContext(ctx context.Context) PreparedStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedStatementOutput)
}

type PreparedStatementOutput struct{ *pulumi.OutputState }

func (PreparedStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedStatement)(nil))
}

func (o PreparedStatementOutput) ToPreparedStatementOutput() PreparedStatementOutput {
	return o
}

func (o PreparedStatementOutput) ToPreparedStatementOutputWithContext(ctx context.Context) PreparedStatementOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PreparedStatementOutput{})
}
