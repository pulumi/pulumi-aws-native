// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Athena::NamedQuery
func LookupNamedQuery(ctx *pulumi.Context, args *LookupNamedQueryArgs, opts ...pulumi.InvokeOption) (*LookupNamedQueryResult, error) {
	var rv LookupNamedQueryResult
	err := ctx.Invoke("aws-native:athena:getNamedQuery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNamedQueryArgs struct {
	// The unique ID of the query.
	NamedQueryId string `pulumi:"namedQueryId"`
}

type LookupNamedQueryResult struct {
	// The unique ID of the query.
	NamedQueryId *string `pulumi:"namedQueryId"`
}

func LookupNamedQueryOutput(ctx *pulumi.Context, args LookupNamedQueryOutputArgs, opts ...pulumi.InvokeOption) LookupNamedQueryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNamedQueryResult, error) {
			args := v.(LookupNamedQueryArgs)
			r, err := LookupNamedQuery(ctx, &args, opts...)
			var s LookupNamedQueryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNamedQueryResultOutput)
}

type LookupNamedQueryOutputArgs struct {
	// The unique ID of the query.
	NamedQueryId pulumi.StringInput `pulumi:"namedQueryId"`
}

func (LookupNamedQueryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamedQueryArgs)(nil)).Elem()
}

type LookupNamedQueryResultOutput struct{ *pulumi.OutputState }

func (LookupNamedQueryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamedQueryResult)(nil)).Elem()
}

func (o LookupNamedQueryResultOutput) ToLookupNamedQueryResultOutput() LookupNamedQueryResultOutput {
	return o
}

func (o LookupNamedQueryResultOutput) ToLookupNamedQueryResultOutputWithContext(ctx context.Context) LookupNamedQueryResultOutput {
	return o
}

// The unique ID of the query.
func (o LookupNamedQueryResultOutput) NamedQueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamedQueryResult) *string { return v.NamedQueryId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamedQueryResultOutput{})
}
