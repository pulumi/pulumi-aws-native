// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::OpsWorks::Stack
//
// Deprecated: Stack is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Stack struct {
	pulumi.CustomResourceState

	AgentVersion              pulumi.StringPtrOutput             `pulumi:"agentVersion"`
	Attributes                pulumi.AnyOutput                   `pulumi:"attributes"`
	ChefConfiguration         StackChefConfigurationPtrOutput    `pulumi:"chefConfiguration"`
	CloneAppIds               pulumi.StringArrayOutput           `pulumi:"cloneAppIds"`
	ClonePermissions          pulumi.BoolPtrOutput               `pulumi:"clonePermissions"`
	ConfigurationManager      StackConfigurationManagerPtrOutput `pulumi:"configurationManager"`
	CustomCookbooksSource     StackSourcePtrOutput               `pulumi:"customCookbooksSource"`
	CustomJson                pulumi.AnyOutput                   `pulumi:"customJson"`
	DefaultAvailabilityZone   pulumi.StringPtrOutput             `pulumi:"defaultAvailabilityZone"`
	DefaultInstanceProfileArn pulumi.StringOutput                `pulumi:"defaultInstanceProfileArn"`
	DefaultOs                 pulumi.StringPtrOutput             `pulumi:"defaultOs"`
	DefaultRootDeviceType     pulumi.StringPtrOutput             `pulumi:"defaultRootDeviceType"`
	DefaultSshKeyName         pulumi.StringPtrOutput             `pulumi:"defaultSshKeyName"`
	DefaultSubnetId           pulumi.StringPtrOutput             `pulumi:"defaultSubnetId"`
	EcsClusterArn             pulumi.StringPtrOutput             `pulumi:"ecsClusterArn"`
	ElasticIps                StackElasticIpArrayOutput          `pulumi:"elasticIps"`
	HostnameTheme             pulumi.StringPtrOutput             `pulumi:"hostnameTheme"`
	Name                      pulumi.StringOutput                `pulumi:"name"`
	RdsDbInstances            StackRdsDbInstanceArrayOutput      `pulumi:"rdsDbInstances"`
	ServiceRoleArn            pulumi.StringOutput                `pulumi:"serviceRoleArn"`
	SourceStackId             pulumi.StringPtrOutput             `pulumi:"sourceStackId"`
	Tags                      StackTagArrayOutput                `pulumi:"tags"`
	UseCustomCookbooks        pulumi.BoolPtrOutput               `pulumi:"useCustomCookbooks"`
	UseOpsworksSecurityGroups pulumi.BoolPtrOutput               `pulumi:"useOpsworksSecurityGroups"`
	VpcId                     pulumi.StringPtrOutput             `pulumi:"vpcId"`
}

// NewStack registers a new resource with the given unique name, arguments, and options.
func NewStack(ctx *pulumi.Context,
	name string, args *StackArgs, opts ...pulumi.ResourceOption) (*Stack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultInstanceProfileArn == nil {
		return nil, errors.New("invalid value for required argument 'DefaultInstanceProfileArn'")
	}
	if args.ServiceRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRoleArn'")
	}
	var resource Stack
	err := ctx.RegisterResource("aws-native:opsworks:Stack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStack gets an existing Stack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackState, opts ...pulumi.ResourceOption) (*Stack, error) {
	var resource Stack
	err := ctx.ReadResource("aws-native:opsworks:Stack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stack resources.
type stackState struct {
}

type StackState struct {
}

func (StackState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackState)(nil)).Elem()
}

type stackArgs struct {
	AgentVersion              *string                    `pulumi:"agentVersion"`
	Attributes                interface{}                `pulumi:"attributes"`
	ChefConfiguration         *StackChefConfiguration    `pulumi:"chefConfiguration"`
	CloneAppIds               []string                   `pulumi:"cloneAppIds"`
	ClonePermissions          *bool                      `pulumi:"clonePermissions"`
	ConfigurationManager      *StackConfigurationManager `pulumi:"configurationManager"`
	CustomCookbooksSource     *StackSource               `pulumi:"customCookbooksSource"`
	CustomJson                interface{}                `pulumi:"customJson"`
	DefaultAvailabilityZone   *string                    `pulumi:"defaultAvailabilityZone"`
	DefaultInstanceProfileArn string                     `pulumi:"defaultInstanceProfileArn"`
	DefaultOs                 *string                    `pulumi:"defaultOs"`
	DefaultRootDeviceType     *string                    `pulumi:"defaultRootDeviceType"`
	DefaultSshKeyName         *string                    `pulumi:"defaultSshKeyName"`
	DefaultSubnetId           *string                    `pulumi:"defaultSubnetId"`
	EcsClusterArn             *string                    `pulumi:"ecsClusterArn"`
	ElasticIps                []StackElasticIp           `pulumi:"elasticIps"`
	HostnameTheme             *string                    `pulumi:"hostnameTheme"`
	Name                      *string                    `pulumi:"name"`
	RdsDbInstances            []StackRdsDbInstance       `pulumi:"rdsDbInstances"`
	ServiceRoleArn            string                     `pulumi:"serviceRoleArn"`
	SourceStackId             *string                    `pulumi:"sourceStackId"`
	Tags                      []StackTag                 `pulumi:"tags"`
	UseCustomCookbooks        *bool                      `pulumi:"useCustomCookbooks"`
	UseOpsworksSecurityGroups *bool                      `pulumi:"useOpsworksSecurityGroups"`
	VpcId                     *string                    `pulumi:"vpcId"`
}

// The set of arguments for constructing a Stack resource.
type StackArgs struct {
	AgentVersion              pulumi.StringPtrInput
	Attributes                pulumi.Input
	ChefConfiguration         StackChefConfigurationPtrInput
	CloneAppIds               pulumi.StringArrayInput
	ClonePermissions          pulumi.BoolPtrInput
	ConfigurationManager      StackConfigurationManagerPtrInput
	CustomCookbooksSource     StackSourcePtrInput
	CustomJson                pulumi.Input
	DefaultAvailabilityZone   pulumi.StringPtrInput
	DefaultInstanceProfileArn pulumi.StringInput
	DefaultOs                 pulumi.StringPtrInput
	DefaultRootDeviceType     pulumi.StringPtrInput
	DefaultSshKeyName         pulumi.StringPtrInput
	DefaultSubnetId           pulumi.StringPtrInput
	EcsClusterArn             pulumi.StringPtrInput
	ElasticIps                StackElasticIpArrayInput
	HostnameTheme             pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	RdsDbInstances            StackRdsDbInstanceArrayInput
	ServiceRoleArn            pulumi.StringInput
	SourceStackId             pulumi.StringPtrInput
	Tags                      StackTagArrayInput
	UseCustomCookbooks        pulumi.BoolPtrInput
	UseOpsworksSecurityGroups pulumi.BoolPtrInput
	VpcId                     pulumi.StringPtrInput
}

func (StackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackArgs)(nil)).Elem()
}

type StackInput interface {
	pulumi.Input

	ToStackOutput() StackOutput
	ToStackOutputWithContext(ctx context.Context) StackOutput
}

func (*Stack) ElementType() reflect.Type {
	return reflect.TypeOf((*Stack)(nil))
}

func (i *Stack) ToStackOutput() StackOutput {
	return i.ToStackOutputWithContext(context.Background())
}

func (i *Stack) ToStackOutputWithContext(ctx context.Context) StackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackOutput)
}

type StackOutput struct{ *pulumi.OutputState }

func (StackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Stack)(nil))
}

func (o StackOutput) ToStackOutput() StackOutput {
	return o
}

func (o StackOutput) ToStackOutputWithContext(ctx context.Context) StackOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StackInput)(nil)).Elem(), &Stack{})
	pulumi.RegisterOutputType(StackOutput{})
}
