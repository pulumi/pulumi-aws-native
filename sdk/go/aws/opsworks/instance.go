// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::OpsWorks::Instance
//
// Deprecated: Instance is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Instance struct {
	pulumi.CustomResourceState

	AgentVersion         pulumi.StringPtrOutput                `pulumi:"agentVersion"`
	AmiId                pulumi.StringPtrOutput                `pulumi:"amiId"`
	Architecture         pulumi.StringPtrOutput                `pulumi:"architecture"`
	AutoScalingType      pulumi.StringPtrOutput                `pulumi:"autoScalingType"`
	AvailabilityZone     pulumi.StringPtrOutput                `pulumi:"availabilityZone"`
	BlockDeviceMappings  InstanceBlockDeviceMappingArrayOutput `pulumi:"blockDeviceMappings"`
	EbsOptimized         pulumi.BoolPtrOutput                  `pulumi:"ebsOptimized"`
	ElasticIps           pulumi.StringArrayOutput              `pulumi:"elasticIps"`
	Hostname             pulumi.StringPtrOutput                `pulumi:"hostname"`
	InstallUpdatesOnBoot pulumi.BoolPtrOutput                  `pulumi:"installUpdatesOnBoot"`
	InstanceType         pulumi.StringOutput                   `pulumi:"instanceType"`
	LayerIds             pulumi.StringArrayOutput              `pulumi:"layerIds"`
	Os                   pulumi.StringPtrOutput                `pulumi:"os"`
	PrivateDnsName       pulumi.StringOutput                   `pulumi:"privateDnsName"`
	PrivateIp            pulumi.StringOutput                   `pulumi:"privateIp"`
	PublicDnsName        pulumi.StringOutput                   `pulumi:"publicDnsName"`
	PublicIp             pulumi.StringOutput                   `pulumi:"publicIp"`
	RootDeviceType       pulumi.StringPtrOutput                `pulumi:"rootDeviceType"`
	SshKeyName           pulumi.StringPtrOutput                `pulumi:"sshKeyName"`
	StackId              pulumi.StringOutput                   `pulumi:"stackId"`
	SubnetId             pulumi.StringPtrOutput                `pulumi:"subnetId"`
	Tenancy              pulumi.StringPtrOutput                `pulumi:"tenancy"`
	TimeBasedAutoScaling InstanceTimeBasedAutoScalingPtrOutput `pulumi:"timeBasedAutoScaling"`
	VirtualizationType   pulumi.StringPtrOutput                `pulumi:"virtualizationType"`
	Volumes              pulumi.StringArrayOutput              `pulumi:"volumes"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.LayerIds == nil {
		return nil, errors.New("invalid value for required argument 'LayerIds'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	var resource Instance
	err := ctx.RegisterResource("aws-native:opsworks:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws-native:opsworks:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
}

type InstanceState struct {
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	AgentVersion         *string                       `pulumi:"agentVersion"`
	AmiId                *string                       `pulumi:"amiId"`
	Architecture         *string                       `pulumi:"architecture"`
	AutoScalingType      *string                       `pulumi:"autoScalingType"`
	AvailabilityZone     *string                       `pulumi:"availabilityZone"`
	BlockDeviceMappings  []InstanceBlockDeviceMapping  `pulumi:"blockDeviceMappings"`
	EbsOptimized         *bool                         `pulumi:"ebsOptimized"`
	ElasticIps           []string                      `pulumi:"elasticIps"`
	Hostname             *string                       `pulumi:"hostname"`
	InstallUpdatesOnBoot *bool                         `pulumi:"installUpdatesOnBoot"`
	InstanceType         string                        `pulumi:"instanceType"`
	LayerIds             []string                      `pulumi:"layerIds"`
	Os                   *string                       `pulumi:"os"`
	RootDeviceType       *string                       `pulumi:"rootDeviceType"`
	SshKeyName           *string                       `pulumi:"sshKeyName"`
	StackId              string                        `pulumi:"stackId"`
	SubnetId             *string                       `pulumi:"subnetId"`
	Tenancy              *string                       `pulumi:"tenancy"`
	TimeBasedAutoScaling *InstanceTimeBasedAutoScaling `pulumi:"timeBasedAutoScaling"`
	VirtualizationType   *string                       `pulumi:"virtualizationType"`
	Volumes              []string                      `pulumi:"volumes"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	AgentVersion         pulumi.StringPtrInput
	AmiId                pulumi.StringPtrInput
	Architecture         pulumi.StringPtrInput
	AutoScalingType      pulumi.StringPtrInput
	AvailabilityZone     pulumi.StringPtrInput
	BlockDeviceMappings  InstanceBlockDeviceMappingArrayInput
	EbsOptimized         pulumi.BoolPtrInput
	ElasticIps           pulumi.StringArrayInput
	Hostname             pulumi.StringPtrInput
	InstallUpdatesOnBoot pulumi.BoolPtrInput
	InstanceType         pulumi.StringInput
	LayerIds             pulumi.StringArrayInput
	Os                   pulumi.StringPtrInput
	RootDeviceType       pulumi.StringPtrInput
	SshKeyName           pulumi.StringPtrInput
	StackId              pulumi.StringInput
	SubnetId             pulumi.StringPtrInput
	Tenancy              pulumi.StringPtrInput
	TimeBasedAutoScaling InstanceTimeBasedAutoScalingPtrInput
	VirtualizationType   pulumi.StringPtrInput
	Volumes              pulumi.StringArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil))
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil))
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
