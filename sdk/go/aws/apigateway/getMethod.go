// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::ApiGateway::Method
func LookupMethod(ctx *pulumi.Context, args *LookupMethodArgs, opts ...pulumi.InvokeOption) (*LookupMethodResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMethodResult
	err := ctx.Invoke("aws-native:apigateway:getMethod", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMethodArgs struct {
	Id string `pulumi:"id"`
}

type LookupMethodResult struct {
	ApiKeyRequired      *bool              `pulumi:"apiKeyRequired"`
	AuthorizationScopes []string           `pulumi:"authorizationScopes"`
	AuthorizationType   *string            `pulumi:"authorizationType"`
	AuthorizerId        *string            `pulumi:"authorizerId"`
	HttpMethod          *string            `pulumi:"httpMethod"`
	Id                  *string            `pulumi:"id"`
	Integration         *MethodIntegration `pulumi:"integration"`
	MethodResponses     []MethodResponse   `pulumi:"methodResponses"`
	OperationName       *string            `pulumi:"operationName"`
	RequestModels       interface{}        `pulumi:"requestModels"`
	RequestParameters   interface{}        `pulumi:"requestParameters"`
	RequestValidatorId  *string            `pulumi:"requestValidatorId"`
	ResourceId          *string            `pulumi:"resourceId"`
	RestApiId           *string            `pulumi:"restApiId"`
}

func LookupMethodOutput(ctx *pulumi.Context, args LookupMethodOutputArgs, opts ...pulumi.InvokeOption) LookupMethodResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMethodResult, error) {
			args := v.(LookupMethodArgs)
			r, err := LookupMethod(ctx, &args, opts...)
			var s LookupMethodResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMethodResultOutput)
}

type LookupMethodOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupMethodOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMethodArgs)(nil)).Elem()
}

type LookupMethodResultOutput struct{ *pulumi.OutputState }

func (LookupMethodResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMethodResult)(nil)).Elem()
}

func (o LookupMethodResultOutput) ToLookupMethodResultOutput() LookupMethodResultOutput {
	return o
}

func (o LookupMethodResultOutput) ToLookupMethodResultOutputWithContext(ctx context.Context) LookupMethodResultOutput {
	return o
}

func (o LookupMethodResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupMethodResult] {
	return pulumix.Output[LookupMethodResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupMethodResultOutput) ApiKeyRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *bool { return v.ApiKeyRequired }).(pulumi.BoolPtrOutput)
}

func (o LookupMethodResultOutput) AuthorizationScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMethodResult) []string { return v.AuthorizationScopes }).(pulumi.StringArrayOutput)
}

func (o LookupMethodResultOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) Integration() MethodIntegrationPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *MethodIntegration { return v.Integration }).(MethodIntegrationPtrOutput)
}

func (o LookupMethodResultOutput) MethodResponses() MethodResponseArrayOutput {
	return o.ApplyT(func(v LookupMethodResult) []MethodResponse { return v.MethodResponses }).(MethodResponseArrayOutput)
}

func (o LookupMethodResultOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.OperationName }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) RequestModels() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupMethodResult) interface{} { return v.RequestModels }).(pulumi.AnyOutput)
}

func (o LookupMethodResultOutput) RequestParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupMethodResult) interface{} { return v.RequestParameters }).(pulumi.AnyOutput)
}

func (o LookupMethodResultOutput) RequestValidatorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.RequestValidatorId }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o LookupMethodResultOutput) RestApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMethodResult) *string { return v.RestApiId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMethodResultOutput{})
}
