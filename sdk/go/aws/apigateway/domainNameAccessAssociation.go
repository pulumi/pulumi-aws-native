// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::DomainNameAccessAssociation.
type DomainNameAccessAssociation struct {
	pulumi.CustomResourceState

	// The source of the domain name access association resource.
	AccessAssociationSource pulumi.StringOutput `pulumi:"accessAssociationSource"`
	// The source type of the domain name access association resource.
	AccessAssociationSourceType DomainNameAccessAssociationAccessAssociationSourceTypeOutput `pulumi:"accessAssociationSourceType"`
	// The amazon resource name (ARN) of the domain name access association resource.
	DomainNameAccessAssociationArn pulumi.StringOutput `pulumi:"domainNameAccessAssociationArn"`
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn pulumi.StringOutput `pulumi:"domainNameArn"`
	// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
	Tags aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
}

// NewDomainNameAccessAssociation registers a new resource with the given unique name, arguments, and options.
func NewDomainNameAccessAssociation(ctx *pulumi.Context,
	name string, args *DomainNameAccessAssociationArgs, opts ...pulumi.ResourceOption) (*DomainNameAccessAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessAssociationSource == nil {
		return nil, errors.New("invalid value for required argument 'AccessAssociationSource'")
	}
	if args.AccessAssociationSourceType == nil {
		return nil, errors.New("invalid value for required argument 'AccessAssociationSourceType'")
	}
	if args.DomainNameArn == nil {
		return nil, errors.New("invalid value for required argument 'DomainNameArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"accessAssociationSource",
		"accessAssociationSourceType",
		"domainNameArn",
		"tags[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainNameAccessAssociation
	err := ctx.RegisterResource("aws-native:apigateway:DomainNameAccessAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainNameAccessAssociation gets an existing DomainNameAccessAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainNameAccessAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameAccessAssociationState, opts ...pulumi.ResourceOption) (*DomainNameAccessAssociation, error) {
	var resource DomainNameAccessAssociation
	err := ctx.ReadResource("aws-native:apigateway:DomainNameAccessAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainNameAccessAssociation resources.
type domainNameAccessAssociationState struct {
}

type DomainNameAccessAssociationState struct {
}

func (DomainNameAccessAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameAccessAssociationState)(nil)).Elem()
}

type domainNameAccessAssociationArgs struct {
	// The source of the domain name access association resource.
	AccessAssociationSource string `pulumi:"accessAssociationSource"`
	// The source type of the domain name access association resource.
	AccessAssociationSourceType DomainNameAccessAssociationAccessAssociationSourceType `pulumi:"accessAssociationSourceType"`
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn string `pulumi:"domainNameArn"`
	// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
	Tags []aws.CreateOnlyTag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainNameAccessAssociation resource.
type DomainNameAccessAssociationArgs struct {
	// The source of the domain name access association resource.
	AccessAssociationSource pulumi.StringInput
	// The source type of the domain name access association resource.
	AccessAssociationSourceType DomainNameAccessAssociationAccessAssociationSourceTypeInput
	// The amazon resource name (ARN) of the domain name resource.
	DomainNameArn pulumi.StringInput
	// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
	Tags aws.CreateOnlyTagArrayInput
}

func (DomainNameAccessAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameAccessAssociationArgs)(nil)).Elem()
}

type DomainNameAccessAssociationInput interface {
	pulumi.Input

	ToDomainNameAccessAssociationOutput() DomainNameAccessAssociationOutput
	ToDomainNameAccessAssociationOutputWithContext(ctx context.Context) DomainNameAccessAssociationOutput
}

func (*DomainNameAccessAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameAccessAssociation)(nil)).Elem()
}

func (i *DomainNameAccessAssociation) ToDomainNameAccessAssociationOutput() DomainNameAccessAssociationOutput {
	return i.ToDomainNameAccessAssociationOutputWithContext(context.Background())
}

func (i *DomainNameAccessAssociation) ToDomainNameAccessAssociationOutputWithContext(ctx context.Context) DomainNameAccessAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameAccessAssociationOutput)
}

type DomainNameAccessAssociationOutput struct{ *pulumi.OutputState }

func (DomainNameAccessAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameAccessAssociation)(nil)).Elem()
}

func (o DomainNameAccessAssociationOutput) ToDomainNameAccessAssociationOutput() DomainNameAccessAssociationOutput {
	return o
}

func (o DomainNameAccessAssociationOutput) ToDomainNameAccessAssociationOutputWithContext(ctx context.Context) DomainNameAccessAssociationOutput {
	return o
}

// The source of the domain name access association resource.
func (o DomainNameAccessAssociationOutput) AccessAssociationSource() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNameAccessAssociation) pulumi.StringOutput { return v.AccessAssociationSource }).(pulumi.StringOutput)
}

// The source type of the domain name access association resource.
func (o DomainNameAccessAssociationOutput) AccessAssociationSourceType() DomainNameAccessAssociationAccessAssociationSourceTypeOutput {
	return o.ApplyT(func(v *DomainNameAccessAssociation) DomainNameAccessAssociationAccessAssociationSourceTypeOutput {
		return v.AccessAssociationSourceType
	}).(DomainNameAccessAssociationAccessAssociationSourceTypeOutput)
}

// The amazon resource name (ARN) of the domain name access association resource.
func (o DomainNameAccessAssociationOutput) DomainNameAccessAssociationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNameAccessAssociation) pulumi.StringOutput { return v.DomainNameAccessAssociationArn }).(pulumi.StringOutput)
}

// The amazon resource name (ARN) of the domain name resource.
func (o DomainNameAccessAssociationOutput) DomainNameArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainNameAccessAssociation) pulumi.StringOutput { return v.DomainNameArn }).(pulumi.StringOutput)
}

// An array of arbitrary tags (key-value pairs) to associate with the domainname access association.
func (o DomainNameAccessAssociationOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *DomainNameAccessAssociation) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameAccessAssociationInput)(nil)).Elem(), &DomainNameAccessAssociation{})
	pulumi.RegisterOutputType(DomainNameAccessAssociationOutput{})
}
