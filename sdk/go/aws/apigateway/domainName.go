// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ApiGateway::DomainName“ resource specifies a custom domain name for your API in API Gateway.
//
//	You can use a custom domain name to provide a URL that's more intuitive and easier to recall. For more information about using custom domain names, see [Set up Custom Domain Name for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html) in the *API Gateway Developer Guide*.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cfnDomainName := cfg.Require("cfnDomainName")
//			certificateArn := cfg.Require("certificateArn")
//			_type := cfg.Require("type")
//			myDomainName, err := apigateway.NewDomainName(ctx, "myDomainName", &apigateway.DomainNameArgs{
//				CertificateArn: pulumi.String(certificateArn),
//				DomainName:     pulumi.String(cfnDomainName),
//				EndpointConfiguration: &apigateway.DomainNameEndpointConfigurationArgs{
//					Types: pulumi.StringArray{
//						pulumi.String(_type),
//					},
//				},
//				RegionalCertificateArn: pulumi.String(certificateArn),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("domainName", myDomainName.ID())
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			cfnDomainName := cfg.Require("cfnDomainName")
//			certificateArn := cfg.Require("certificateArn")
//			_type := cfg.Require("type")
//			myDomainName, err := apigateway.NewDomainName(ctx, "myDomainName", &apigateway.DomainNameArgs{
//				CertificateArn: pulumi.String(certificateArn),
//				DomainName:     pulumi.String(cfnDomainName),
//				EndpointConfiguration: &apigateway.DomainNameEndpointConfigurationArgs{
//					Types: pulumi.StringArray{
//						pulumi.String(_type),
//					},
//				},
//				RegionalCertificateArn: pulumi.String(certificateArn),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("domainName", myDomainName.ID())
//			return nil
//		})
//	}
//
// ```
type DomainName struct {
	pulumi.CustomResourceState

	// The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source.
	CertificateArn pulumi.StringPtrOutput `pulumi:"certificateArn"`
	// The Amazon CloudFront distribution domain name that's mapped to the custom domain name. This is only applicable for endpoints whose type is `EDGE` .
	//
	// Example: `d111111abcdef8.cloudfront.net`
	DistributionDomainName pulumi.StringOutput `pulumi:"distributionDomainName"`
	// The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The only valid value is `Z2FDTNDATAQYW2` for all regions.
	DistributionHostedZoneId pulumi.StringOutput `pulumi:"distributionHostedZoneId"`
	// The custom domain name as an API host name, for example, `my-api.example.com` .
	DomainName    pulumi.StringPtrOutput `pulumi:"domainName"`
	DomainNameArn pulumi.StringOutput    `pulumi:"domainNameArn"`
	// The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name.
	EndpointConfiguration DomainNameEndpointConfigurationPtrOutput `pulumi:"endpointConfiguration"`
	// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
	MutualTlsAuthentication DomainNameMutualTlsAuthenticationPtrOutput `pulumi:"mutualTlsAuthentication"`
	// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.
	OwnershipVerificationCertificateArn pulumi.StringPtrOutput `pulumi:"ownershipVerificationCertificateArn"`
	// The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
	RegionalCertificateArn pulumi.StringPtrOutput `pulumi:"regionalCertificateArn"`
	// The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name.
	RegionalDomainName pulumi.StringOutput `pulumi:"regionalDomainName"`
	// The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint.
	RegionalHostedZoneId pulumi.StringOutput `pulumi:"regionalHostedZoneId"`
	// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` .
	SecurityPolicy pulumi.StringPtrOutput `pulumi:"securityPolicy"`
	// The collection of tags. Each tag element is associated with a given resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDomainName registers a new resource with the given unique name, arguments, and options.
func NewDomainName(ctx *pulumi.Context,
	name string, args *DomainNameArgs, opts ...pulumi.ResourceOption) (*DomainName, error) {
	if args == nil {
		args = &DomainNameArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DomainName
	err := ctx.RegisterResource("aws-native:apigateway:DomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainName gets an existing DomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameState, opts ...pulumi.ResourceOption) (*DomainName, error) {
	var resource DomainName
	err := ctx.ReadResource("aws-native:apigateway:DomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainName resources.
type domainNameState struct {
}

type DomainNameState struct {
}

func (DomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameState)(nil)).Elem()
}

type domainNameArgs struct {
	// The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source.
	CertificateArn *string `pulumi:"certificateArn"`
	// The custom domain name as an API host name, for example, `my-api.example.com` .
	DomainName *string `pulumi:"domainName"`
	// The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name.
	EndpointConfiguration *DomainNameEndpointConfiguration `pulumi:"endpointConfiguration"`
	// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
	MutualTlsAuthentication *DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.
	OwnershipVerificationCertificateArn *string `pulumi:"ownershipVerificationCertificateArn"`
	// The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
	RegionalCertificateArn *string `pulumi:"regionalCertificateArn"`
	// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` .
	SecurityPolicy *string `pulumi:"securityPolicy"`
	// The collection of tags. Each tag element is associated with a given resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DomainName resource.
type DomainNameArgs struct {
	// The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source.
	CertificateArn pulumi.StringPtrInput
	// The custom domain name as an API host name, for example, `my-api.example.com` .
	DomainName pulumi.StringPtrInput
	// The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name.
	EndpointConfiguration DomainNameEndpointConfigurationPtrInput
	// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
	MutualTlsAuthentication DomainNameMutualTlsAuthenticationPtrInput
	// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.
	OwnershipVerificationCertificateArn pulumi.StringPtrInput
	// The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
	RegionalCertificateArn pulumi.StringPtrInput
	// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` .
	SecurityPolicy pulumi.StringPtrInput
	// The collection of tags. Each tag element is associated with a given resource.
	Tags aws.TagArrayInput
}

func (DomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameArgs)(nil)).Elem()
}

type DomainNameInput interface {
	pulumi.Input

	ToDomainNameOutput() DomainNameOutput
	ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput
}

func (*DomainName) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainName)(nil)).Elem()
}

func (i *DomainName) ToDomainNameOutput() DomainNameOutput {
	return i.ToDomainNameOutputWithContext(context.Background())
}

func (i *DomainName) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameOutput)
}

type DomainNameOutput struct{ *pulumi.OutputState }

func (DomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainName)(nil)).Elem()
}

func (o DomainNameOutput) ToDomainNameOutput() DomainNameOutput {
	return o
}

func (o DomainNameOutput) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return o
}

// The reference to an AWS -managed certificate that will be used by edge-optimized endpoint or private endpoint for this domain name. AWS Certificate Manager is the only supported source.
func (o DomainNameOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

// The Amazon CloudFront distribution domain name that's mapped to the custom domain name. This is only applicable for endpoints whose type is `EDGE` .
//
// Example: `d111111abcdef8.cloudfront.net`
func (o DomainNameOutput) DistributionDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.DistributionDomainName }).(pulumi.StringOutput)
}

// The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The only valid value is `Z2FDTNDATAQYW2` for all regions.
func (o DomainNameOutput) DistributionHostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.DistributionHostedZoneId }).(pulumi.StringOutput)
}

// The custom domain name as an API host name, for example, `my-api.example.com` .
func (o DomainNameOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) DomainNameArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.DomainNameArn }).(pulumi.StringOutput)
}

// The endpoint configuration of this DomainName showing the endpoint types and IP address types of the domain name.
func (o DomainNameOutput) EndpointConfiguration() DomainNameEndpointConfigurationPtrOutput {
	return o.ApplyT(func(v *DomainName) DomainNameEndpointConfigurationPtrOutput { return v.EndpointConfiguration }).(DomainNameEndpointConfigurationPtrOutput)
}

// The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.
func (o DomainNameOutput) MutualTlsAuthentication() DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v *DomainName) DomainNameMutualTlsAuthenticationPtrOutput { return v.MutualTlsAuthentication }).(DomainNameMutualTlsAuthenticationPtrOutput)
}

// The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the RegionalCertificateArn.
func (o DomainNameOutput) OwnershipVerificationCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.OwnershipVerificationCertificateArn }).(pulumi.StringPtrOutput)
}

// The reference to an AWS -managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.
func (o DomainNameOutput) RegionalCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.RegionalCertificateArn }).(pulumi.StringPtrOutput)
}

// The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name.
func (o DomainNameOutput) RegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.RegionalDomainName }).(pulumi.StringOutput)
}

// The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint.
func (o DomainNameOutput) RegionalHostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.RegionalHostedZoneId }).(pulumi.StringOutput)
}

// The Transport Layer Security (TLS) version + cipher suite for this DomainName. The valid values are `TLS_1_0` and `TLS_1_2` .
func (o DomainNameOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

// The collection of tags. Each tag element is associated with a given resource.
func (o DomainNameOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DomainName) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameInput)(nil)).Elem(), &DomainName{})
	pulumi.RegisterOutputType(DomainNameOutput{})
}
