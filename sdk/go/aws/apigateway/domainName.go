// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::DomainName.
type DomainName struct {
	pulumi.CustomResourceState

	CertificateArn                      pulumi.StringPtrOutput                     `pulumi:"certificateArn"`
	DistributionDomainName              pulumi.StringOutput                        `pulumi:"distributionDomainName"`
	DistributionHostedZoneId            pulumi.StringOutput                        `pulumi:"distributionHostedZoneId"`
	DomainName                          pulumi.StringPtrOutput                     `pulumi:"domainName"`
	EndpointConfiguration               DomainNameEndpointConfigurationPtrOutput   `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             DomainNameMutualTlsAuthenticationPtrOutput `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn pulumi.StringPtrOutput                     `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              pulumi.StringPtrOutput                     `pulumi:"regionalCertificateArn"`
	RegionalDomainName                  pulumi.StringOutput                        `pulumi:"regionalDomainName"`
	RegionalHostedZoneId                pulumi.StringOutput                        `pulumi:"regionalHostedZoneId"`
	SecurityPolicy                      pulumi.StringPtrOutput                     `pulumi:"securityPolicy"`
	Tags                                DomainNameTagArrayOutput                   `pulumi:"tags"`
}

// NewDomainName registers a new resource with the given unique name, arguments, and options.
func NewDomainName(ctx *pulumi.Context,
	name string, args *DomainNameArgs, opts ...pulumi.ResourceOption) (*DomainName, error) {
	if args == nil {
		args = &DomainNameArgs{}
	}

	var resource DomainName
	err := ctx.RegisterResource("aws-native:apigateway:DomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainName gets an existing DomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameState, opts ...pulumi.ResourceOption) (*DomainName, error) {
	var resource DomainName
	err := ctx.ReadResource("aws-native:apigateway:DomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainName resources.
type domainNameState struct {
}

type DomainNameState struct {
}

func (DomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameState)(nil)).Elem()
}

type domainNameArgs struct {
	CertificateArn                      *string                            `pulumi:"certificateArn"`
	DomainName                          *string                            `pulumi:"domainName"`
	EndpointConfiguration               *DomainNameEndpointConfiguration   `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             *DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn *string                            `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              *string                            `pulumi:"regionalCertificateArn"`
	SecurityPolicy                      *string                            `pulumi:"securityPolicy"`
	Tags                                []DomainNameTag                    `pulumi:"tags"`
}

// The set of arguments for constructing a DomainName resource.
type DomainNameArgs struct {
	CertificateArn                      pulumi.StringPtrInput
	DomainName                          pulumi.StringPtrInput
	EndpointConfiguration               DomainNameEndpointConfigurationPtrInput
	MutualTlsAuthentication             DomainNameMutualTlsAuthenticationPtrInput
	OwnershipVerificationCertificateArn pulumi.StringPtrInput
	RegionalCertificateArn              pulumi.StringPtrInput
	SecurityPolicy                      pulumi.StringPtrInput
	Tags                                DomainNameTagArrayInput
}

func (DomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameArgs)(nil)).Elem()
}

type DomainNameInput interface {
	pulumi.Input

	ToDomainNameOutput() DomainNameOutput
	ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput
}

func (*DomainName) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainName)(nil))
}

func (i *DomainName) ToDomainNameOutput() DomainNameOutput {
	return i.ToDomainNameOutputWithContext(context.Background())
}

func (i *DomainName) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameOutput)
}

type DomainNameOutput struct{ *pulumi.OutputState }

func (DomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainName)(nil))
}

func (o DomainNameOutput) ToDomainNameOutput() DomainNameOutput {
	return o
}

func (o DomainNameOutput) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DomainNameOutput{})
}
