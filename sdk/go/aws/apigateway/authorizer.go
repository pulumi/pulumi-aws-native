// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.
type Authorizer struct {
	pulumi.CustomResourceState

	// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
	AuthType pulumi.StringPtrOutput `pulumi:"authType"`
	// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
	AuthorizerCredentials pulumi.StringPtrOutput `pulumi:"authorizerCredentials"`
	AuthorizerId          pulumi.StringOutput    `pulumi:"authorizerId"`
	// The TTL in seconds of cached authorizer results.
	AuthorizerResultTtlInSeconds pulumi.IntPtrOutput `pulumi:"authorizerResultTtlInSeconds"`
	// Specifies the authorizer's Uniform Resource Identifier (URI).
	AuthorizerUri pulumi.StringPtrOutput `pulumi:"authorizerUri"`
	// The identity source for which authorization is requested.
	IdentitySource pulumi.StringPtrOutput `pulumi:"identitySource"`
	// A validation expression for the incoming identity token.
	IdentityValidationExpression pulumi.StringPtrOutput `pulumi:"identityValidationExpression"`
	// The name of the authorizer.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
	ProviderARNs pulumi.StringArrayOutput `pulumi:"providerARNs"`
	// The identifier of the API.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
	// The authorizer type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewAuthorizer(ctx *pulumi.Context,
	name string, args *AuthorizerArgs, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource Authorizer
	err := ctx.RegisterResource("aws-native:apigateway:Authorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizer gets an existing Authorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizerState, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	var resource Authorizer
	err := ctx.ReadResource("aws-native:apigateway:Authorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authorizer resources.
type authorizerState struct {
}

type AuthorizerState struct {
}

func (AuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerState)(nil)).Elem()
}

type authorizerArgs struct {
	// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
	AuthType *string `pulumi:"authType"`
	// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
	AuthorizerCredentials *string `pulumi:"authorizerCredentials"`
	// The TTL in seconds of cached authorizer results.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// Specifies the authorizer's Uniform Resource Identifier (URI).
	AuthorizerUri *string `pulumi:"authorizerUri"`
	// The identity source for which authorization is requested.
	IdentitySource *string `pulumi:"identitySource"`
	// A validation expression for the incoming identity token.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
	// The name of the authorizer.
	Name *string `pulumi:"name"`
	// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
	ProviderARNs []string `pulumi:"providerARNs"`
	// The identifier of the API.
	RestApiId string `pulumi:"restApiId"`
	// The authorizer type.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Authorizer resource.
type AuthorizerArgs struct {
	// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
	AuthType pulumi.StringPtrInput
	// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
	AuthorizerCredentials pulumi.StringPtrInput
	// The TTL in seconds of cached authorizer results.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput
	// Specifies the authorizer's Uniform Resource Identifier (URI).
	AuthorizerUri pulumi.StringPtrInput
	// The identity source for which authorization is requested.
	IdentitySource pulumi.StringPtrInput
	// A validation expression for the incoming identity token.
	IdentityValidationExpression pulumi.StringPtrInput
	// The name of the authorizer.
	Name pulumi.StringPtrInput
	// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
	ProviderARNs pulumi.StringArrayInput
	// The identifier of the API.
	RestApiId pulumi.StringInput
	// The authorizer type.
	Type pulumi.StringInput
}

func (AuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerArgs)(nil)).Elem()
}

type AuthorizerInput interface {
	pulumi.Input

	ToAuthorizerOutput() AuthorizerOutput
	ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput
}

func (*Authorizer) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorizer)(nil)).Elem()
}

func (i *Authorizer) ToAuthorizerOutput() AuthorizerOutput {
	return i.ToAuthorizerOutputWithContext(context.Background())
}

func (i *Authorizer) ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerOutput)
}

type AuthorizerOutput struct{ *pulumi.OutputState }

func (AuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorizer)(nil)).Elem()
}

func (o AuthorizerOutput) ToAuthorizerOutput() AuthorizerOutput {
	return o
}

func (o AuthorizerOutput) ToAuthorizerOutputWithContext(ctx context.Context) AuthorizerOutput {
	return o
}

// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
func (o AuthorizerOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringPtrOutput { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
func (o AuthorizerOutput) AuthorizerCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringPtrOutput { return v.AuthorizerCredentials }).(pulumi.StringPtrOutput)
}

func (o AuthorizerOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringOutput { return v.AuthorizerId }).(pulumi.StringOutput)
}

// The TTL in seconds of cached authorizer results.
func (o AuthorizerOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.IntPtrOutput { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the authorizer's Uniform Resource Identifier (URI).
func (o AuthorizerOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringPtrOutput { return v.AuthorizerUri }).(pulumi.StringPtrOutput)
}

// The identity source for which authorization is requested.
func (o AuthorizerOutput) IdentitySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringPtrOutput { return v.IdentitySource }).(pulumi.StringPtrOutput)
}

// A validation expression for the incoming identity token.
func (o AuthorizerOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringPtrOutput { return v.IdentityValidationExpression }).(pulumi.StringPtrOutput)
}

// The name of the authorizer.
func (o AuthorizerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
func (o AuthorizerOutput) ProviderARNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringArrayOutput { return v.ProviderARNs }).(pulumi.StringArrayOutput)
}

// The identifier of the API.
func (o AuthorizerOutput) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringOutput { return v.RestApiId }).(pulumi.StringOutput)
}

// The authorizer type.
func (o AuthorizerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorizer) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizerInput)(nil)).Elem(), &Authorizer{})
	pulumi.RegisterOutputType(AuthorizerOutput{})
}
