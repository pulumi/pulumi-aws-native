// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::DomainName.
func LookupDomainName(ctx *pulumi.Context, args *LookupDomainNameArgs, opts ...pulumi.InvokeOption) (*LookupDomainNameResult, error) {
	var rv LookupDomainNameResult
	err := ctx.Invoke("aws-native:apigateway:getDomainName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainNameArgs struct {
	DomainName string `pulumi:"domainName"`
}

type LookupDomainNameResult struct {
	CertificateArn                      *string                            `pulumi:"certificateArn"`
	DistributionDomainName              *string                            `pulumi:"distributionDomainName"`
	DistributionHostedZoneId            *string                            `pulumi:"distributionHostedZoneId"`
	EndpointConfiguration               *DomainNameEndpointConfiguration   `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             *DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn *string                            `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              *string                            `pulumi:"regionalCertificateArn"`
	RegionalDomainName                  *string                            `pulumi:"regionalDomainName"`
	RegionalHostedZoneId                *string                            `pulumi:"regionalHostedZoneId"`
	SecurityPolicy                      *string                            `pulumi:"securityPolicy"`
	Tags                                []DomainNameTag                    `pulumi:"tags"`
}

func LookupDomainNameOutput(ctx *pulumi.Context, args LookupDomainNameOutputArgs, opts ...pulumi.InvokeOption) LookupDomainNameResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainNameResult, error) {
			args := v.(LookupDomainNameArgs)
			r, err := LookupDomainName(ctx, &args, opts...)
			var s LookupDomainNameResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainNameResultOutput)
}

type LookupDomainNameOutputArgs struct {
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (LookupDomainNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameArgs)(nil)).Elem()
}

type LookupDomainNameResultOutput struct{ *pulumi.OutputState }

func (LookupDomainNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameResult)(nil)).Elem()
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutput() LookupDomainNameResultOutput {
	return o
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutputWithContext(ctx context.Context) LookupDomainNameResultOutput {
	return o
}

func (o LookupDomainNameResultOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) DistributionDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.DistributionDomainName }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) DistributionHostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.DistributionHostedZoneId }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) EndpointConfiguration() DomainNameEndpointConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *DomainNameEndpointConfiguration { return v.EndpointConfiguration }).(DomainNameEndpointConfigurationPtrOutput)
}

func (o LookupDomainNameResultOutput) MutualTlsAuthentication() DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *DomainNameMutualTlsAuthentication { return v.MutualTlsAuthentication }).(DomainNameMutualTlsAuthenticationPtrOutput)
}

func (o LookupDomainNameResultOutput) OwnershipVerificationCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.OwnershipVerificationCertificateArn }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) RegionalCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalCertificateArn }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) RegionalDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalDomainName }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) RegionalHostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalHostedZoneId }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) Tags() DomainNameTagArrayOutput {
	return o.ApplyT(func(v LookupDomainNameResult) []DomainNameTag { return v.Tags }).(DomainNameTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainNameResultOutput{})
}
