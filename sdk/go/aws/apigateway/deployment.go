// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ApiGateway::Deployment“ resource deploys an API Gateway “RestApi“ resource to a stage so that clients can call the API over the internet. The stage acts as an environment.
type Deployment struct {
	pulumi.CustomResourceState

	// The input configuration for a canary deployment.
	DeploymentCanarySettings DeploymentCanarySettingsPtrOutput `pulumi:"deploymentCanarySettings"`
	DeploymentId             pulumi.StringOutput               `pulumi:"deploymentId"`
	// The description for the Deployment resource to create.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The string identifier of the associated RestApi.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
	// The description of the Stage resource for the Deployment resource to create. To specify a stage description, you must also provide a stage name.
	StageDescription DeploymentStageDescriptionPtrOutput `pulumi:"stageDescription"`
	// The name of the Stage resource for the Deployment resource to create.
	StageName pulumi.StringPtrOutput `pulumi:"stageName"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"deploymentCanarySettings",
		"restApiId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("aws-native:apigateway:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("aws-native:apigateway:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
}

type DeploymentState struct {
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// The input configuration for a canary deployment.
	DeploymentCanarySettings *DeploymentCanarySettings `pulumi:"deploymentCanarySettings"`
	// The description for the Deployment resource to create.
	Description *string `pulumi:"description"`
	// The string identifier of the associated RestApi.
	RestApiId string `pulumi:"restApiId"`
	// The description of the Stage resource for the Deployment resource to create. To specify a stage description, you must also provide a stage name.
	StageDescription *DeploymentStageDescription `pulumi:"stageDescription"`
	// The name of the Stage resource for the Deployment resource to create.
	StageName *string `pulumi:"stageName"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// The input configuration for a canary deployment.
	DeploymentCanarySettings DeploymentCanarySettingsPtrInput
	// The description for the Deployment resource to create.
	Description pulumi.StringPtrInput
	// The string identifier of the associated RestApi.
	RestApiId pulumi.StringInput
	// The description of the Stage resource for the Deployment resource to create. To specify a stage description, you must also provide a stage name.
	StageDescription DeploymentStageDescriptionPtrInput
	// The name of the Stage resource for the Deployment resource to create.
	StageName pulumi.StringPtrInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

// The input configuration for a canary deployment.
func (o DeploymentOutput) DeploymentCanarySettings() DeploymentCanarySettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentCanarySettingsPtrOutput { return v.DeploymentCanarySettings }).(DeploymentCanarySettingsPtrOutput)
}

func (o DeploymentOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.DeploymentId }).(pulumi.StringOutput)
}

// The description for the Deployment resource to create.
func (o DeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The string identifier of the associated RestApi.
func (o DeploymentOutput) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.RestApiId }).(pulumi.StringOutput)
}

// The description of the Stage resource for the Deployment resource to create. To specify a stage description, you must also provide a stage name.
func (o DeploymentOutput) StageDescription() DeploymentStageDescriptionPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentStageDescriptionPtrOutput { return v.StageDescription }).(DeploymentStageDescriptionPtrOutput)
}

// The name of the Stage resource for the Deployment resource to create.
func (o DeploymentOutput) StageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.StageName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), &Deployment{})
	pulumi.RegisterOutputType(DeploymentOutput{})
}
