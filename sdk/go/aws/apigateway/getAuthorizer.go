// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.
func LookupAuthorizer(ctx *pulumi.Context, args *LookupAuthorizerArgs, opts ...pulumi.InvokeOption) (*LookupAuthorizerResult, error) {
	var rv LookupAuthorizerResult
	err := ctx.Invoke("aws-native:apigateway:getAuthorizer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAuthorizerArgs struct {
	AuthorizerId string `pulumi:"authorizerId"`
	// The identifier of the API.
	RestApiId string `pulumi:"restApiId"`
}

type LookupAuthorizerResult struct {
	// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
	AuthType *string `pulumi:"authType"`
	// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
	AuthorizerCredentials *string `pulumi:"authorizerCredentials"`
	AuthorizerId          *string `pulumi:"authorizerId"`
	// The TTL in seconds of cached authorizer results.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// Specifies the authorizer's Uniform Resource Identifier (URI).
	AuthorizerUri *string `pulumi:"authorizerUri"`
	// The identity source for which authorization is requested.
	IdentitySource *string `pulumi:"identitySource"`
	// A validation expression for the incoming identity token.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
	// The name of the authorizer.
	Name *string `pulumi:"name"`
	// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
	ProviderARNs []string `pulumi:"providerARNs"`
	// The authorizer type.
	Type *string `pulumi:"type"`
}

func LookupAuthorizerOutput(ctx *pulumi.Context, args LookupAuthorizerOutputArgs, opts ...pulumi.InvokeOption) LookupAuthorizerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthorizerResult, error) {
			args := v.(LookupAuthorizerArgs)
			r, err := LookupAuthorizer(ctx, &args, opts...)
			var s LookupAuthorizerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthorizerResultOutput)
}

type LookupAuthorizerOutputArgs struct {
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// The identifier of the API.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
}

func (LookupAuthorizerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizerArgs)(nil)).Elem()
}

type LookupAuthorizerResultOutput struct{ *pulumi.OutputState }

func (LookupAuthorizerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizerResult)(nil)).Elem()
}

func (o LookupAuthorizerResultOutput) ToLookupAuthorizerResultOutput() LookupAuthorizerResultOutput {
	return o
}

func (o LookupAuthorizerResultOutput) ToLookupAuthorizerResultOutputWithContext(ctx context.Context) LookupAuthorizerResultOutput {
	return o
}

// Optional customer-defined field, used in OpenAPI imports and exports without functional impact.
func (o LookupAuthorizerResultOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.
func (o LookupAuthorizerResultOutput) AuthorizerCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.AuthorizerCredentials }).(pulumi.StringPtrOutput)
}

func (o LookupAuthorizerResultOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// The TTL in seconds of cached authorizer results.
func (o LookupAuthorizerResultOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the authorizer's Uniform Resource Identifier (URI).
func (o LookupAuthorizerResultOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.AuthorizerUri }).(pulumi.StringPtrOutput)
}

// The identity source for which authorization is requested.
func (o LookupAuthorizerResultOutput) IdentitySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.IdentitySource }).(pulumi.StringPtrOutput)
}

// A validation expression for the incoming identity token.
func (o LookupAuthorizerResultOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.IdentityValidationExpression }).(pulumi.StringPtrOutput)
}

// The name of the authorizer.
func (o LookupAuthorizerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.
func (o LookupAuthorizerResultOutput) ProviderARNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) []string { return v.ProviderARNs }).(pulumi.StringArrayOutput)
}

// The authorizer type.
func (o LookupAuthorizerResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthorizerResultOutput{})
}
