// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::DomainNameAccessAssociation.
func LookupDomainNameAccessAssociation(ctx *pulumi.Context, args *LookupDomainNameAccessAssociationArgs, opts ...pulumi.InvokeOption) (*LookupDomainNameAccessAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainNameAccessAssociationResult
	err := ctx.Invoke("aws-native:apigateway:getDomainNameAccessAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainNameAccessAssociationArgs struct {
	// The amazon resource name (ARN) of the domain name access association resource.
	DomainNameAccessAssociationArn string `pulumi:"domainNameAccessAssociationArn"`
}

type LookupDomainNameAccessAssociationResult struct {
	// The amazon resource name (ARN) of the domain name access association resource.
	DomainNameAccessAssociationArn *string `pulumi:"domainNameAccessAssociationArn"`
}

func LookupDomainNameAccessAssociationOutput(ctx *pulumi.Context, args LookupDomainNameAccessAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupDomainNameAccessAssociationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDomainNameAccessAssociationResultOutput, error) {
			args := v.(LookupDomainNameAccessAssociationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:apigateway:getDomainNameAccessAssociation", args, LookupDomainNameAccessAssociationResultOutput{}, options).(LookupDomainNameAccessAssociationResultOutput), nil
		}).(LookupDomainNameAccessAssociationResultOutput)
}

type LookupDomainNameAccessAssociationOutputArgs struct {
	// The amazon resource name (ARN) of the domain name access association resource.
	DomainNameAccessAssociationArn pulumi.StringInput `pulumi:"domainNameAccessAssociationArn"`
}

func (LookupDomainNameAccessAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameAccessAssociationArgs)(nil)).Elem()
}

type LookupDomainNameAccessAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupDomainNameAccessAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameAccessAssociationResult)(nil)).Elem()
}

func (o LookupDomainNameAccessAssociationResultOutput) ToLookupDomainNameAccessAssociationResultOutput() LookupDomainNameAccessAssociationResultOutput {
	return o
}

func (o LookupDomainNameAccessAssociationResultOutput) ToLookupDomainNameAccessAssociationResultOutputWithContext(ctx context.Context) LookupDomainNameAccessAssociationResultOutput {
	return o
}

// The amazon resource name (ARN) of the domain name access association resource.
func (o LookupDomainNameAccessAssociationResultOutput) DomainNameAccessAssociationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameAccessAssociationResult) *string { return v.DomainNameAccessAssociationArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainNameAccessAssociationResultOutput{})
}
