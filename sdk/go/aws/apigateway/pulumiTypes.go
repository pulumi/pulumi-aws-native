// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiKeyStageKey struct {
	// The ID of a RestApi resource that includes the stage with which you want to associate the API key.
	RestApiId *string `pulumi:"restApiId"`
	// The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property.
	StageName *string `pulumi:"stageName"`
}

// ApiKeyStageKeyInput is an input type that accepts ApiKeyStageKeyArgs and ApiKeyStageKeyOutput values.
// You can construct a concrete instance of `ApiKeyStageKeyInput` via:
//
//          ApiKeyStageKeyArgs{...}
type ApiKeyStageKeyInput interface {
	pulumi.Input

	ToApiKeyStageKeyOutput() ApiKeyStageKeyOutput
	ToApiKeyStageKeyOutputWithContext(context.Context) ApiKeyStageKeyOutput
}

type ApiKeyStageKeyArgs struct {
	// The ID of a RestApi resource that includes the stage with which you want to associate the API key.
	RestApiId pulumi.StringPtrInput `pulumi:"restApiId"`
	// The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property.
	StageName pulumi.StringPtrInput `pulumi:"stageName"`
}

func (ApiKeyStageKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyStageKey)(nil)).Elem()
}

func (i ApiKeyStageKeyArgs) ToApiKeyStageKeyOutput() ApiKeyStageKeyOutput {
	return i.ToApiKeyStageKeyOutputWithContext(context.Background())
}

func (i ApiKeyStageKeyArgs) ToApiKeyStageKeyOutputWithContext(ctx context.Context) ApiKeyStageKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyStageKeyOutput)
}

// ApiKeyStageKeyArrayInput is an input type that accepts ApiKeyStageKeyArray and ApiKeyStageKeyArrayOutput values.
// You can construct a concrete instance of `ApiKeyStageKeyArrayInput` via:
//
//          ApiKeyStageKeyArray{ ApiKeyStageKeyArgs{...} }
type ApiKeyStageKeyArrayInput interface {
	pulumi.Input

	ToApiKeyStageKeyArrayOutput() ApiKeyStageKeyArrayOutput
	ToApiKeyStageKeyArrayOutputWithContext(context.Context) ApiKeyStageKeyArrayOutput
}

type ApiKeyStageKeyArray []ApiKeyStageKeyInput

func (ApiKeyStageKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyStageKey)(nil)).Elem()
}

func (i ApiKeyStageKeyArray) ToApiKeyStageKeyArrayOutput() ApiKeyStageKeyArrayOutput {
	return i.ToApiKeyStageKeyArrayOutputWithContext(context.Background())
}

func (i ApiKeyStageKeyArray) ToApiKeyStageKeyArrayOutputWithContext(ctx context.Context) ApiKeyStageKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyStageKeyArrayOutput)
}

type ApiKeyStageKeyOutput struct{ *pulumi.OutputState }

func (ApiKeyStageKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyStageKey)(nil)).Elem()
}

func (o ApiKeyStageKeyOutput) ToApiKeyStageKeyOutput() ApiKeyStageKeyOutput {
	return o
}

func (o ApiKeyStageKeyOutput) ToApiKeyStageKeyOutputWithContext(ctx context.Context) ApiKeyStageKeyOutput {
	return o
}

// The ID of a RestApi resource that includes the stage with which you want to associate the API key.
func (o ApiKeyStageKeyOutput) RestApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyStageKey) *string { return v.RestApiId }).(pulumi.StringPtrOutput)
}

// The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property.
func (o ApiKeyStageKeyOutput) StageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyStageKey) *string { return v.StageName }).(pulumi.StringPtrOutput)
}

type ApiKeyStageKeyArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyStageKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyStageKey)(nil)).Elem()
}

func (o ApiKeyStageKeyArrayOutput) ToApiKeyStageKeyArrayOutput() ApiKeyStageKeyArrayOutput {
	return o
}

func (o ApiKeyStageKeyArrayOutput) ToApiKeyStageKeyArrayOutputWithContext(ctx context.Context) ApiKeyStageKeyArrayOutput {
	return o
}

func (o ApiKeyStageKeyArrayOutput) Index(i pulumi.IntInput) ApiKeyStageKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyStageKey {
		return vs[0].([]ApiKeyStageKey)[vs[1].(int)]
	}).(ApiKeyStageKeyOutput)
}

type ApiKeyTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ApiKeyTagInput is an input type that accepts ApiKeyTagArgs and ApiKeyTagOutput values.
// You can construct a concrete instance of `ApiKeyTagInput` via:
//
//          ApiKeyTagArgs{...}
type ApiKeyTagInput interface {
	pulumi.Input

	ToApiKeyTagOutput() ApiKeyTagOutput
	ToApiKeyTagOutputWithContext(context.Context) ApiKeyTagOutput
}

type ApiKeyTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiKeyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyTag)(nil)).Elem()
}

func (i ApiKeyTagArgs) ToApiKeyTagOutput() ApiKeyTagOutput {
	return i.ToApiKeyTagOutputWithContext(context.Background())
}

func (i ApiKeyTagArgs) ToApiKeyTagOutputWithContext(ctx context.Context) ApiKeyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyTagOutput)
}

// ApiKeyTagArrayInput is an input type that accepts ApiKeyTagArray and ApiKeyTagArrayOutput values.
// You can construct a concrete instance of `ApiKeyTagArrayInput` via:
//
//          ApiKeyTagArray{ ApiKeyTagArgs{...} }
type ApiKeyTagArrayInput interface {
	pulumi.Input

	ToApiKeyTagArrayOutput() ApiKeyTagArrayOutput
	ToApiKeyTagArrayOutputWithContext(context.Context) ApiKeyTagArrayOutput
}

type ApiKeyTagArray []ApiKeyTagInput

func (ApiKeyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyTag)(nil)).Elem()
}

func (i ApiKeyTagArray) ToApiKeyTagArrayOutput() ApiKeyTagArrayOutput {
	return i.ToApiKeyTagArrayOutputWithContext(context.Background())
}

func (i ApiKeyTagArray) ToApiKeyTagArrayOutputWithContext(ctx context.Context) ApiKeyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyTagArrayOutput)
}

type ApiKeyTagOutput struct{ *pulumi.OutputState }

func (ApiKeyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyTag)(nil)).Elem()
}

func (o ApiKeyTagOutput) ToApiKeyTagOutput() ApiKeyTagOutput {
	return o
}

func (o ApiKeyTagOutput) ToApiKeyTagOutputWithContext(ctx context.Context) ApiKeyTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApiKeyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApiKeyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyTag) string { return v.Value }).(pulumi.StringOutput)
}

type ApiKeyTagArrayOutput struct{ *pulumi.OutputState }

func (ApiKeyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiKeyTag)(nil)).Elem()
}

func (o ApiKeyTagArrayOutput) ToApiKeyTagArrayOutput() ApiKeyTagArrayOutput {
	return o
}

func (o ApiKeyTagArrayOutput) ToApiKeyTagArrayOutputWithContext(ctx context.Context) ApiKeyTagArrayOutput {
	return o
}

func (o ApiKeyTagArrayOutput) Index(i pulumi.IntInput) ApiKeyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiKeyTag {
		return vs[0].([]ApiKeyTag)[vs[1].(int)]
	}).(ApiKeyTagOutput)
}

type ClientCertificateTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ClientCertificateTagInput is an input type that accepts ClientCertificateTagArgs and ClientCertificateTagOutput values.
// You can construct a concrete instance of `ClientCertificateTagInput` via:
//
//          ClientCertificateTagArgs{...}
type ClientCertificateTagInput interface {
	pulumi.Input

	ToClientCertificateTagOutput() ClientCertificateTagOutput
	ToClientCertificateTagOutputWithContext(context.Context) ClientCertificateTagOutput
}

type ClientCertificateTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClientCertificateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCertificateTag)(nil)).Elem()
}

func (i ClientCertificateTagArgs) ToClientCertificateTagOutput() ClientCertificateTagOutput {
	return i.ToClientCertificateTagOutputWithContext(context.Background())
}

func (i ClientCertificateTagArgs) ToClientCertificateTagOutputWithContext(ctx context.Context) ClientCertificateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCertificateTagOutput)
}

// ClientCertificateTagArrayInput is an input type that accepts ClientCertificateTagArray and ClientCertificateTagArrayOutput values.
// You can construct a concrete instance of `ClientCertificateTagArrayInput` via:
//
//          ClientCertificateTagArray{ ClientCertificateTagArgs{...} }
type ClientCertificateTagArrayInput interface {
	pulumi.Input

	ToClientCertificateTagArrayOutput() ClientCertificateTagArrayOutput
	ToClientCertificateTagArrayOutputWithContext(context.Context) ClientCertificateTagArrayOutput
}

type ClientCertificateTagArray []ClientCertificateTagInput

func (ClientCertificateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientCertificateTag)(nil)).Elem()
}

func (i ClientCertificateTagArray) ToClientCertificateTagArrayOutput() ClientCertificateTagArrayOutput {
	return i.ToClientCertificateTagArrayOutputWithContext(context.Background())
}

func (i ClientCertificateTagArray) ToClientCertificateTagArrayOutputWithContext(ctx context.Context) ClientCertificateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCertificateTagArrayOutput)
}

type ClientCertificateTagOutput struct{ *pulumi.OutputState }

func (ClientCertificateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCertificateTag)(nil)).Elem()
}

func (o ClientCertificateTagOutput) ToClientCertificateTagOutput() ClientCertificateTagOutput {
	return o
}

func (o ClientCertificateTagOutput) ToClientCertificateTagOutputWithContext(ctx context.Context) ClientCertificateTagOutput {
	return o
}

func (o ClientCertificateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClientCertificateTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClientCertificateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClientCertificateTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClientCertificateTagArrayOutput struct{ *pulumi.OutputState }

func (ClientCertificateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientCertificateTag)(nil)).Elem()
}

func (o ClientCertificateTagArrayOutput) ToClientCertificateTagArrayOutput() ClientCertificateTagArrayOutput {
	return o
}

func (o ClientCertificateTagArrayOutput) ToClientCertificateTagArrayOutputWithContext(ctx context.Context) ClientCertificateTagArrayOutput {
	return o
}

func (o ClientCertificateTagArrayOutput) Index(i pulumi.IntInput) ClientCertificateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientCertificateTag {
		return vs[0].([]ClientCertificateTag)[vs[1].(int)]
	}).(ClientCertificateTagOutput)
}

type DeploymentAccessLogSetting struct {
	DestinationArn *string `pulumi:"destinationArn"`
	Format         *string `pulumi:"format"`
}

// DeploymentAccessLogSettingInput is an input type that accepts DeploymentAccessLogSettingArgs and DeploymentAccessLogSettingOutput values.
// You can construct a concrete instance of `DeploymentAccessLogSettingInput` via:
//
//          DeploymentAccessLogSettingArgs{...}
type DeploymentAccessLogSettingInput interface {
	pulumi.Input

	ToDeploymentAccessLogSettingOutput() DeploymentAccessLogSettingOutput
	ToDeploymentAccessLogSettingOutputWithContext(context.Context) DeploymentAccessLogSettingOutput
}

type DeploymentAccessLogSettingArgs struct {
	DestinationArn pulumi.StringPtrInput `pulumi:"destinationArn"`
	Format         pulumi.StringPtrInput `pulumi:"format"`
}

func (DeploymentAccessLogSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentAccessLogSetting)(nil)).Elem()
}

func (i DeploymentAccessLogSettingArgs) ToDeploymentAccessLogSettingOutput() DeploymentAccessLogSettingOutput {
	return i.ToDeploymentAccessLogSettingOutputWithContext(context.Background())
}

func (i DeploymentAccessLogSettingArgs) ToDeploymentAccessLogSettingOutputWithContext(ctx context.Context) DeploymentAccessLogSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentAccessLogSettingOutput)
}

func (i DeploymentAccessLogSettingArgs) ToDeploymentAccessLogSettingPtrOutput() DeploymentAccessLogSettingPtrOutput {
	return i.ToDeploymentAccessLogSettingPtrOutputWithContext(context.Background())
}

func (i DeploymentAccessLogSettingArgs) ToDeploymentAccessLogSettingPtrOutputWithContext(ctx context.Context) DeploymentAccessLogSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentAccessLogSettingOutput).ToDeploymentAccessLogSettingPtrOutputWithContext(ctx)
}

// DeploymentAccessLogSettingPtrInput is an input type that accepts DeploymentAccessLogSettingArgs, DeploymentAccessLogSettingPtr and DeploymentAccessLogSettingPtrOutput values.
// You can construct a concrete instance of `DeploymentAccessLogSettingPtrInput` via:
//
//          DeploymentAccessLogSettingArgs{...}
//
//  or:
//
//          nil
type DeploymentAccessLogSettingPtrInput interface {
	pulumi.Input

	ToDeploymentAccessLogSettingPtrOutput() DeploymentAccessLogSettingPtrOutput
	ToDeploymentAccessLogSettingPtrOutputWithContext(context.Context) DeploymentAccessLogSettingPtrOutput
}

type deploymentAccessLogSettingPtrType DeploymentAccessLogSettingArgs

func DeploymentAccessLogSettingPtr(v *DeploymentAccessLogSettingArgs) DeploymentAccessLogSettingPtrInput {
	return (*deploymentAccessLogSettingPtrType)(v)
}

func (*deploymentAccessLogSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentAccessLogSetting)(nil)).Elem()
}

func (i *deploymentAccessLogSettingPtrType) ToDeploymentAccessLogSettingPtrOutput() DeploymentAccessLogSettingPtrOutput {
	return i.ToDeploymentAccessLogSettingPtrOutputWithContext(context.Background())
}

func (i *deploymentAccessLogSettingPtrType) ToDeploymentAccessLogSettingPtrOutputWithContext(ctx context.Context) DeploymentAccessLogSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentAccessLogSettingPtrOutput)
}

type DeploymentAccessLogSettingOutput struct{ *pulumi.OutputState }

func (DeploymentAccessLogSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentAccessLogSetting)(nil)).Elem()
}

func (o DeploymentAccessLogSettingOutput) ToDeploymentAccessLogSettingOutput() DeploymentAccessLogSettingOutput {
	return o
}

func (o DeploymentAccessLogSettingOutput) ToDeploymentAccessLogSettingOutputWithContext(ctx context.Context) DeploymentAccessLogSettingOutput {
	return o
}

func (o DeploymentAccessLogSettingOutput) ToDeploymentAccessLogSettingPtrOutput() DeploymentAccessLogSettingPtrOutput {
	return o.ToDeploymentAccessLogSettingPtrOutputWithContext(context.Background())
}

func (o DeploymentAccessLogSettingOutput) ToDeploymentAccessLogSettingPtrOutputWithContext(ctx context.Context) DeploymentAccessLogSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentAccessLogSetting) *DeploymentAccessLogSetting {
		return &v
	}).(DeploymentAccessLogSettingPtrOutput)
}

func (o DeploymentAccessLogSettingOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentAccessLogSetting) *string { return v.DestinationArn }).(pulumi.StringPtrOutput)
}

func (o DeploymentAccessLogSettingOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentAccessLogSetting) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type DeploymentAccessLogSettingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentAccessLogSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentAccessLogSetting)(nil)).Elem()
}

func (o DeploymentAccessLogSettingPtrOutput) ToDeploymentAccessLogSettingPtrOutput() DeploymentAccessLogSettingPtrOutput {
	return o
}

func (o DeploymentAccessLogSettingPtrOutput) ToDeploymentAccessLogSettingPtrOutputWithContext(ctx context.Context) DeploymentAccessLogSettingPtrOutput {
	return o
}

func (o DeploymentAccessLogSettingPtrOutput) Elem() DeploymentAccessLogSettingOutput {
	return o.ApplyT(func(v *DeploymentAccessLogSetting) DeploymentAccessLogSetting {
		if v != nil {
			return *v
		}
		var ret DeploymentAccessLogSetting
		return ret
	}).(DeploymentAccessLogSettingOutput)
}

func (o DeploymentAccessLogSettingPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentAccessLogSetting) *string {
		if v == nil {
			return nil
		}
		return v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentAccessLogSettingPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentAccessLogSetting) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

type DeploymentCanarySetting struct {
	PercentTraffic         *float64    `pulumi:"percentTraffic"`
	StageVariableOverrides interface{} `pulumi:"stageVariableOverrides"`
	UseStageCache          *bool       `pulumi:"useStageCache"`
}

// DeploymentCanarySettingInput is an input type that accepts DeploymentCanarySettingArgs and DeploymentCanarySettingOutput values.
// You can construct a concrete instance of `DeploymentCanarySettingInput` via:
//
//          DeploymentCanarySettingArgs{...}
type DeploymentCanarySettingInput interface {
	pulumi.Input

	ToDeploymentCanarySettingOutput() DeploymentCanarySettingOutput
	ToDeploymentCanarySettingOutputWithContext(context.Context) DeploymentCanarySettingOutput
}

type DeploymentCanarySettingArgs struct {
	PercentTraffic         pulumi.Float64PtrInput `pulumi:"percentTraffic"`
	StageVariableOverrides pulumi.Input           `pulumi:"stageVariableOverrides"`
	UseStageCache          pulumi.BoolPtrInput    `pulumi:"useStageCache"`
}

func (DeploymentCanarySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCanarySetting)(nil)).Elem()
}

func (i DeploymentCanarySettingArgs) ToDeploymentCanarySettingOutput() DeploymentCanarySettingOutput {
	return i.ToDeploymentCanarySettingOutputWithContext(context.Background())
}

func (i DeploymentCanarySettingArgs) ToDeploymentCanarySettingOutputWithContext(ctx context.Context) DeploymentCanarySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingOutput)
}

func (i DeploymentCanarySettingArgs) ToDeploymentCanarySettingPtrOutput() DeploymentCanarySettingPtrOutput {
	return i.ToDeploymentCanarySettingPtrOutputWithContext(context.Background())
}

func (i DeploymentCanarySettingArgs) ToDeploymentCanarySettingPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingOutput).ToDeploymentCanarySettingPtrOutputWithContext(ctx)
}

// DeploymentCanarySettingPtrInput is an input type that accepts DeploymentCanarySettingArgs, DeploymentCanarySettingPtr and DeploymentCanarySettingPtrOutput values.
// You can construct a concrete instance of `DeploymentCanarySettingPtrInput` via:
//
//          DeploymentCanarySettingArgs{...}
//
//  or:
//
//          nil
type DeploymentCanarySettingPtrInput interface {
	pulumi.Input

	ToDeploymentCanarySettingPtrOutput() DeploymentCanarySettingPtrOutput
	ToDeploymentCanarySettingPtrOutputWithContext(context.Context) DeploymentCanarySettingPtrOutput
}

type deploymentCanarySettingPtrType DeploymentCanarySettingArgs

func DeploymentCanarySettingPtr(v *DeploymentCanarySettingArgs) DeploymentCanarySettingPtrInput {
	return (*deploymentCanarySettingPtrType)(v)
}

func (*deploymentCanarySettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCanarySetting)(nil)).Elem()
}

func (i *deploymentCanarySettingPtrType) ToDeploymentCanarySettingPtrOutput() DeploymentCanarySettingPtrOutput {
	return i.ToDeploymentCanarySettingPtrOutputWithContext(context.Background())
}

func (i *deploymentCanarySettingPtrType) ToDeploymentCanarySettingPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingPtrOutput)
}

type DeploymentCanarySettingOutput struct{ *pulumi.OutputState }

func (DeploymentCanarySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCanarySetting)(nil)).Elem()
}

func (o DeploymentCanarySettingOutput) ToDeploymentCanarySettingOutput() DeploymentCanarySettingOutput {
	return o
}

func (o DeploymentCanarySettingOutput) ToDeploymentCanarySettingOutputWithContext(ctx context.Context) DeploymentCanarySettingOutput {
	return o
}

func (o DeploymentCanarySettingOutput) ToDeploymentCanarySettingPtrOutput() DeploymentCanarySettingPtrOutput {
	return o.ToDeploymentCanarySettingPtrOutputWithContext(context.Background())
}

func (o DeploymentCanarySettingOutput) ToDeploymentCanarySettingPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentCanarySetting) *DeploymentCanarySetting {
		return &v
	}).(DeploymentCanarySettingPtrOutput)
}

func (o DeploymentCanarySettingOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentCanarySetting) *float64 { return v.PercentTraffic }).(pulumi.Float64PtrOutput)
}

func (o DeploymentCanarySettingOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentCanarySetting) interface{} { return v.StageVariableOverrides }).(pulumi.AnyOutput)
}

func (o DeploymentCanarySettingOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentCanarySetting) *bool { return v.UseStageCache }).(pulumi.BoolPtrOutput)
}

type DeploymentCanarySettingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentCanarySettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCanarySetting)(nil)).Elem()
}

func (o DeploymentCanarySettingPtrOutput) ToDeploymentCanarySettingPtrOutput() DeploymentCanarySettingPtrOutput {
	return o
}

func (o DeploymentCanarySettingPtrOutput) ToDeploymentCanarySettingPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingPtrOutput {
	return o
}

func (o DeploymentCanarySettingPtrOutput) Elem() DeploymentCanarySettingOutput {
	return o.ApplyT(func(v *DeploymentCanarySetting) DeploymentCanarySetting {
		if v != nil {
			return *v
		}
		var ret DeploymentCanarySetting
		return ret
	}).(DeploymentCanarySettingOutput)
}

func (o DeploymentCanarySettingPtrOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeploymentCanarySetting) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentTraffic
	}).(pulumi.Float64PtrOutput)
}

func (o DeploymentCanarySettingPtrOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentCanarySetting) interface{} {
		if v == nil {
			return nil
		}
		return v.StageVariableOverrides
	}).(pulumi.AnyOutput)
}

func (o DeploymentCanarySettingPtrOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentCanarySetting) *bool {
		if v == nil {
			return nil
		}
		return v.UseStageCache
	}).(pulumi.BoolPtrOutput)
}

type DeploymentCanarySettings struct {
	PercentTraffic         *float64    `pulumi:"percentTraffic"`
	StageVariableOverrides interface{} `pulumi:"stageVariableOverrides"`
	UseStageCache          *bool       `pulumi:"useStageCache"`
}

// DeploymentCanarySettingsInput is an input type that accepts DeploymentCanarySettingsArgs and DeploymentCanarySettingsOutput values.
// You can construct a concrete instance of `DeploymentCanarySettingsInput` via:
//
//          DeploymentCanarySettingsArgs{...}
type DeploymentCanarySettingsInput interface {
	pulumi.Input

	ToDeploymentCanarySettingsOutput() DeploymentCanarySettingsOutput
	ToDeploymentCanarySettingsOutputWithContext(context.Context) DeploymentCanarySettingsOutput
}

type DeploymentCanarySettingsArgs struct {
	PercentTraffic         pulumi.Float64PtrInput `pulumi:"percentTraffic"`
	StageVariableOverrides pulumi.Input           `pulumi:"stageVariableOverrides"`
	UseStageCache          pulumi.BoolPtrInput    `pulumi:"useStageCache"`
}

func (DeploymentCanarySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCanarySettings)(nil)).Elem()
}

func (i DeploymentCanarySettingsArgs) ToDeploymentCanarySettingsOutput() DeploymentCanarySettingsOutput {
	return i.ToDeploymentCanarySettingsOutputWithContext(context.Background())
}

func (i DeploymentCanarySettingsArgs) ToDeploymentCanarySettingsOutputWithContext(ctx context.Context) DeploymentCanarySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingsOutput)
}

func (i DeploymentCanarySettingsArgs) ToDeploymentCanarySettingsPtrOutput() DeploymentCanarySettingsPtrOutput {
	return i.ToDeploymentCanarySettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentCanarySettingsArgs) ToDeploymentCanarySettingsPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingsOutput).ToDeploymentCanarySettingsPtrOutputWithContext(ctx)
}

// DeploymentCanarySettingsPtrInput is an input type that accepts DeploymentCanarySettingsArgs, DeploymentCanarySettingsPtr and DeploymentCanarySettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentCanarySettingsPtrInput` via:
//
//          DeploymentCanarySettingsArgs{...}
//
//  or:
//
//          nil
type DeploymentCanarySettingsPtrInput interface {
	pulumi.Input

	ToDeploymentCanarySettingsPtrOutput() DeploymentCanarySettingsPtrOutput
	ToDeploymentCanarySettingsPtrOutputWithContext(context.Context) DeploymentCanarySettingsPtrOutput
}

type deploymentCanarySettingsPtrType DeploymentCanarySettingsArgs

func DeploymentCanarySettingsPtr(v *DeploymentCanarySettingsArgs) DeploymentCanarySettingsPtrInput {
	return (*deploymentCanarySettingsPtrType)(v)
}

func (*deploymentCanarySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCanarySettings)(nil)).Elem()
}

func (i *deploymentCanarySettingsPtrType) ToDeploymentCanarySettingsPtrOutput() DeploymentCanarySettingsPtrOutput {
	return i.ToDeploymentCanarySettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentCanarySettingsPtrType) ToDeploymentCanarySettingsPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCanarySettingsPtrOutput)
}

type DeploymentCanarySettingsOutput struct{ *pulumi.OutputState }

func (DeploymentCanarySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCanarySettings)(nil)).Elem()
}

func (o DeploymentCanarySettingsOutput) ToDeploymentCanarySettingsOutput() DeploymentCanarySettingsOutput {
	return o
}

func (o DeploymentCanarySettingsOutput) ToDeploymentCanarySettingsOutputWithContext(ctx context.Context) DeploymentCanarySettingsOutput {
	return o
}

func (o DeploymentCanarySettingsOutput) ToDeploymentCanarySettingsPtrOutput() DeploymentCanarySettingsPtrOutput {
	return o.ToDeploymentCanarySettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentCanarySettingsOutput) ToDeploymentCanarySettingsPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentCanarySettings) *DeploymentCanarySettings {
		return &v
	}).(DeploymentCanarySettingsPtrOutput)
}

func (o DeploymentCanarySettingsOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentCanarySettings) *float64 { return v.PercentTraffic }).(pulumi.Float64PtrOutput)
}

func (o DeploymentCanarySettingsOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentCanarySettings) interface{} { return v.StageVariableOverrides }).(pulumi.AnyOutput)
}

func (o DeploymentCanarySettingsOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentCanarySettings) *bool { return v.UseStageCache }).(pulumi.BoolPtrOutput)
}

type DeploymentCanarySettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentCanarySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCanarySettings)(nil)).Elem()
}

func (o DeploymentCanarySettingsPtrOutput) ToDeploymentCanarySettingsPtrOutput() DeploymentCanarySettingsPtrOutput {
	return o
}

func (o DeploymentCanarySettingsPtrOutput) ToDeploymentCanarySettingsPtrOutputWithContext(ctx context.Context) DeploymentCanarySettingsPtrOutput {
	return o
}

func (o DeploymentCanarySettingsPtrOutput) Elem() DeploymentCanarySettingsOutput {
	return o.ApplyT(func(v *DeploymentCanarySettings) DeploymentCanarySettings {
		if v != nil {
			return *v
		}
		var ret DeploymentCanarySettings
		return ret
	}).(DeploymentCanarySettingsOutput)
}

func (o DeploymentCanarySettingsPtrOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeploymentCanarySettings) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentTraffic
	}).(pulumi.Float64PtrOutput)
}

func (o DeploymentCanarySettingsPtrOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentCanarySettings) interface{} {
		if v == nil {
			return nil
		}
		return v.StageVariableOverrides
	}).(pulumi.AnyOutput)
}

func (o DeploymentCanarySettingsPtrOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentCanarySettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseStageCache
	}).(pulumi.BoolPtrOutput)
}

type DeploymentMethodSetting struct {
	CacheDataEncrypted   *bool    `pulumi:"cacheDataEncrypted"`
	CacheTtlInSeconds    *int     `pulumi:"cacheTtlInSeconds"`
	CachingEnabled       *bool    `pulumi:"cachingEnabled"`
	DataTraceEnabled     *bool    `pulumi:"dataTraceEnabled"`
	HttpMethod           *string  `pulumi:"httpMethod"`
	LoggingLevel         *string  `pulumi:"loggingLevel"`
	MetricsEnabled       *bool    `pulumi:"metricsEnabled"`
	ResourcePath         *string  `pulumi:"resourcePath"`
	ThrottlingBurstLimit *int     `pulumi:"throttlingBurstLimit"`
	ThrottlingRateLimit  *float64 `pulumi:"throttlingRateLimit"`
}

// DeploymentMethodSettingInput is an input type that accepts DeploymentMethodSettingArgs and DeploymentMethodSettingOutput values.
// You can construct a concrete instance of `DeploymentMethodSettingInput` via:
//
//          DeploymentMethodSettingArgs{...}
type DeploymentMethodSettingInput interface {
	pulumi.Input

	ToDeploymentMethodSettingOutput() DeploymentMethodSettingOutput
	ToDeploymentMethodSettingOutputWithContext(context.Context) DeploymentMethodSettingOutput
}

type DeploymentMethodSettingArgs struct {
	CacheDataEncrypted   pulumi.BoolPtrInput    `pulumi:"cacheDataEncrypted"`
	CacheTtlInSeconds    pulumi.IntPtrInput     `pulumi:"cacheTtlInSeconds"`
	CachingEnabled       pulumi.BoolPtrInput    `pulumi:"cachingEnabled"`
	DataTraceEnabled     pulumi.BoolPtrInput    `pulumi:"dataTraceEnabled"`
	HttpMethod           pulumi.StringPtrInput  `pulumi:"httpMethod"`
	LoggingLevel         pulumi.StringPtrInput  `pulumi:"loggingLevel"`
	MetricsEnabled       pulumi.BoolPtrInput    `pulumi:"metricsEnabled"`
	ResourcePath         pulumi.StringPtrInput  `pulumi:"resourcePath"`
	ThrottlingBurstLimit pulumi.IntPtrInput     `pulumi:"throttlingBurstLimit"`
	ThrottlingRateLimit  pulumi.Float64PtrInput `pulumi:"throttlingRateLimit"`
}

func (DeploymentMethodSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMethodSetting)(nil)).Elem()
}

func (i DeploymentMethodSettingArgs) ToDeploymentMethodSettingOutput() DeploymentMethodSettingOutput {
	return i.ToDeploymentMethodSettingOutputWithContext(context.Background())
}

func (i DeploymentMethodSettingArgs) ToDeploymentMethodSettingOutputWithContext(ctx context.Context) DeploymentMethodSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMethodSettingOutput)
}

// DeploymentMethodSettingArrayInput is an input type that accepts DeploymentMethodSettingArray and DeploymentMethodSettingArrayOutput values.
// You can construct a concrete instance of `DeploymentMethodSettingArrayInput` via:
//
//          DeploymentMethodSettingArray{ DeploymentMethodSettingArgs{...} }
type DeploymentMethodSettingArrayInput interface {
	pulumi.Input

	ToDeploymentMethodSettingArrayOutput() DeploymentMethodSettingArrayOutput
	ToDeploymentMethodSettingArrayOutputWithContext(context.Context) DeploymentMethodSettingArrayOutput
}

type DeploymentMethodSettingArray []DeploymentMethodSettingInput

func (DeploymentMethodSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentMethodSetting)(nil)).Elem()
}

func (i DeploymentMethodSettingArray) ToDeploymentMethodSettingArrayOutput() DeploymentMethodSettingArrayOutput {
	return i.ToDeploymentMethodSettingArrayOutputWithContext(context.Background())
}

func (i DeploymentMethodSettingArray) ToDeploymentMethodSettingArrayOutputWithContext(ctx context.Context) DeploymentMethodSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMethodSettingArrayOutput)
}

type DeploymentMethodSettingOutput struct{ *pulumi.OutputState }

func (DeploymentMethodSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMethodSetting)(nil)).Elem()
}

func (o DeploymentMethodSettingOutput) ToDeploymentMethodSettingOutput() DeploymentMethodSettingOutput {
	return o
}

func (o DeploymentMethodSettingOutput) ToDeploymentMethodSettingOutputWithContext(ctx context.Context) DeploymentMethodSettingOutput {
	return o
}

func (o DeploymentMethodSettingOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *bool { return v.CacheDataEncrypted }).(pulumi.BoolPtrOutput)
}

func (o DeploymentMethodSettingOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *int { return v.CacheTtlInSeconds }).(pulumi.IntPtrOutput)
}

func (o DeploymentMethodSettingOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *bool { return v.CachingEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentMethodSettingOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentMethodSettingOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

func (o DeploymentMethodSettingOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

func (o DeploymentMethodSettingOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *bool { return v.MetricsEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentMethodSettingOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

func (o DeploymentMethodSettingOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

func (o DeploymentMethodSettingOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentMethodSetting) *float64 { return v.ThrottlingRateLimit }).(pulumi.Float64PtrOutput)
}

type DeploymentMethodSettingArrayOutput struct{ *pulumi.OutputState }

func (DeploymentMethodSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentMethodSetting)(nil)).Elem()
}

func (o DeploymentMethodSettingArrayOutput) ToDeploymentMethodSettingArrayOutput() DeploymentMethodSettingArrayOutput {
	return o
}

func (o DeploymentMethodSettingArrayOutput) ToDeploymentMethodSettingArrayOutputWithContext(ctx context.Context) DeploymentMethodSettingArrayOutput {
	return o
}

func (o DeploymentMethodSettingArrayOutput) Index(i pulumi.IntInput) DeploymentMethodSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentMethodSetting {
		return vs[0].([]DeploymentMethodSetting)[vs[1].(int)]
	}).(DeploymentMethodSettingOutput)
}

type DeploymentStageDescription struct {
	AccessLogSetting     *DeploymentAccessLogSetting `pulumi:"accessLogSetting"`
	CacheClusterEnabled  *bool                       `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     *string                     `pulumi:"cacheClusterSize"`
	CacheDataEncrypted   *bool                       `pulumi:"cacheDataEncrypted"`
	CacheTtlInSeconds    *int                        `pulumi:"cacheTtlInSeconds"`
	CachingEnabled       *bool                       `pulumi:"cachingEnabled"`
	CanarySetting        *DeploymentCanarySetting    `pulumi:"canarySetting"`
	ClientCertificateId  *string                     `pulumi:"clientCertificateId"`
	DataTraceEnabled     *bool                       `pulumi:"dataTraceEnabled"`
	Description          *string                     `pulumi:"description"`
	DocumentationVersion *string                     `pulumi:"documentationVersion"`
	LoggingLevel         *string                     `pulumi:"loggingLevel"`
	MethodSettings       []DeploymentMethodSetting   `pulumi:"methodSettings"`
	MetricsEnabled       *bool                       `pulumi:"metricsEnabled"`
	Tags                 []DeploymentTag             `pulumi:"tags"`
	ThrottlingBurstLimit *int                        `pulumi:"throttlingBurstLimit"`
	ThrottlingRateLimit  *float64                    `pulumi:"throttlingRateLimit"`
	TracingEnabled       *bool                       `pulumi:"tracingEnabled"`
	Variables            interface{}                 `pulumi:"variables"`
}

// DeploymentStageDescriptionInput is an input type that accepts DeploymentStageDescriptionArgs and DeploymentStageDescriptionOutput values.
// You can construct a concrete instance of `DeploymentStageDescriptionInput` via:
//
//          DeploymentStageDescriptionArgs{...}
type DeploymentStageDescriptionInput interface {
	pulumi.Input

	ToDeploymentStageDescriptionOutput() DeploymentStageDescriptionOutput
	ToDeploymentStageDescriptionOutputWithContext(context.Context) DeploymentStageDescriptionOutput
}

type DeploymentStageDescriptionArgs struct {
	AccessLogSetting     DeploymentAccessLogSettingPtrInput `pulumi:"accessLogSetting"`
	CacheClusterEnabled  pulumi.BoolPtrInput                `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     pulumi.StringPtrInput              `pulumi:"cacheClusterSize"`
	CacheDataEncrypted   pulumi.BoolPtrInput                `pulumi:"cacheDataEncrypted"`
	CacheTtlInSeconds    pulumi.IntPtrInput                 `pulumi:"cacheTtlInSeconds"`
	CachingEnabled       pulumi.BoolPtrInput                `pulumi:"cachingEnabled"`
	CanarySetting        DeploymentCanarySettingPtrInput    `pulumi:"canarySetting"`
	ClientCertificateId  pulumi.StringPtrInput              `pulumi:"clientCertificateId"`
	DataTraceEnabled     pulumi.BoolPtrInput                `pulumi:"dataTraceEnabled"`
	Description          pulumi.StringPtrInput              `pulumi:"description"`
	DocumentationVersion pulumi.StringPtrInput              `pulumi:"documentationVersion"`
	LoggingLevel         pulumi.StringPtrInput              `pulumi:"loggingLevel"`
	MethodSettings       DeploymentMethodSettingArrayInput  `pulumi:"methodSettings"`
	MetricsEnabled       pulumi.BoolPtrInput                `pulumi:"metricsEnabled"`
	Tags                 DeploymentTagArrayInput            `pulumi:"tags"`
	ThrottlingBurstLimit pulumi.IntPtrInput                 `pulumi:"throttlingBurstLimit"`
	ThrottlingRateLimit  pulumi.Float64PtrInput             `pulumi:"throttlingRateLimit"`
	TracingEnabled       pulumi.BoolPtrInput                `pulumi:"tracingEnabled"`
	Variables            pulumi.Input                       `pulumi:"variables"`
}

func (DeploymentStageDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStageDescription)(nil)).Elem()
}

func (i DeploymentStageDescriptionArgs) ToDeploymentStageDescriptionOutput() DeploymentStageDescriptionOutput {
	return i.ToDeploymentStageDescriptionOutputWithContext(context.Background())
}

func (i DeploymentStageDescriptionArgs) ToDeploymentStageDescriptionOutputWithContext(ctx context.Context) DeploymentStageDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageDescriptionOutput)
}

func (i DeploymentStageDescriptionArgs) ToDeploymentStageDescriptionPtrOutput() DeploymentStageDescriptionPtrOutput {
	return i.ToDeploymentStageDescriptionPtrOutputWithContext(context.Background())
}

func (i DeploymentStageDescriptionArgs) ToDeploymentStageDescriptionPtrOutputWithContext(ctx context.Context) DeploymentStageDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageDescriptionOutput).ToDeploymentStageDescriptionPtrOutputWithContext(ctx)
}

// DeploymentStageDescriptionPtrInput is an input type that accepts DeploymentStageDescriptionArgs, DeploymentStageDescriptionPtr and DeploymentStageDescriptionPtrOutput values.
// You can construct a concrete instance of `DeploymentStageDescriptionPtrInput` via:
//
//          DeploymentStageDescriptionArgs{...}
//
//  or:
//
//          nil
type DeploymentStageDescriptionPtrInput interface {
	pulumi.Input

	ToDeploymentStageDescriptionPtrOutput() DeploymentStageDescriptionPtrOutput
	ToDeploymentStageDescriptionPtrOutputWithContext(context.Context) DeploymentStageDescriptionPtrOutput
}

type deploymentStageDescriptionPtrType DeploymentStageDescriptionArgs

func DeploymentStageDescriptionPtr(v *DeploymentStageDescriptionArgs) DeploymentStageDescriptionPtrInput {
	return (*deploymentStageDescriptionPtrType)(v)
}

func (*deploymentStageDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStageDescription)(nil)).Elem()
}

func (i *deploymentStageDescriptionPtrType) ToDeploymentStageDescriptionPtrOutput() DeploymentStageDescriptionPtrOutput {
	return i.ToDeploymentStageDescriptionPtrOutputWithContext(context.Background())
}

func (i *deploymentStageDescriptionPtrType) ToDeploymentStageDescriptionPtrOutputWithContext(ctx context.Context) DeploymentStageDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageDescriptionPtrOutput)
}

type DeploymentStageDescriptionOutput struct{ *pulumi.OutputState }

func (DeploymentStageDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStageDescription)(nil)).Elem()
}

func (o DeploymentStageDescriptionOutput) ToDeploymentStageDescriptionOutput() DeploymentStageDescriptionOutput {
	return o
}

func (o DeploymentStageDescriptionOutput) ToDeploymentStageDescriptionOutputWithContext(ctx context.Context) DeploymentStageDescriptionOutput {
	return o
}

func (o DeploymentStageDescriptionOutput) ToDeploymentStageDescriptionPtrOutput() DeploymentStageDescriptionPtrOutput {
	return o.ToDeploymentStageDescriptionPtrOutputWithContext(context.Background())
}

func (o DeploymentStageDescriptionOutput) ToDeploymentStageDescriptionPtrOutputWithContext(ctx context.Context) DeploymentStageDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentStageDescription) *DeploymentStageDescription {
		return &v
	}).(DeploymentStageDescriptionPtrOutput)
}

func (o DeploymentStageDescriptionOutput) AccessLogSetting() DeploymentAccessLogSettingPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *DeploymentAccessLogSetting { return v.AccessLogSetting }).(DeploymentAccessLogSettingPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CacheClusterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.CacheClusterEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CacheClusterSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *string { return v.CacheClusterSize }).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.CacheDataEncrypted }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *int { return v.CacheTtlInSeconds }).(pulumi.IntPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.CachingEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) CanarySetting() DeploymentCanarySettingPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *DeploymentCanarySetting { return v.CanarySetting }).(DeploymentCanarySettingPtrOutput)
}

func (o DeploymentStageDescriptionOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *string { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionOutput) DocumentationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *string { return v.DocumentationVersion }).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionOutput) MethodSettings() DeploymentMethodSettingArrayOutput {
	return o.ApplyT(func(v DeploymentStageDescription) []DeploymentMethodSetting { return v.MethodSettings }).(DeploymentMethodSettingArrayOutput)
}

func (o DeploymentStageDescriptionOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.MetricsEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) Tags() DeploymentTagArrayOutput {
	return o.ApplyT(func(v DeploymentStageDescription) []DeploymentTag { return v.Tags }).(DeploymentTagArrayOutput)
}

func (o DeploymentStageDescriptionOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

func (o DeploymentStageDescriptionOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *float64 { return v.ThrottlingRateLimit }).(pulumi.Float64PtrOutput)
}

func (o DeploymentStageDescriptionOutput) TracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentStageDescription) *bool { return v.TracingEnabled }).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionOutput) Variables() pulumi.AnyOutput {
	return o.ApplyT(func(v DeploymentStageDescription) interface{} { return v.Variables }).(pulumi.AnyOutput)
}

type DeploymentStageDescriptionPtrOutput struct{ *pulumi.OutputState }

func (DeploymentStageDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStageDescription)(nil)).Elem()
}

func (o DeploymentStageDescriptionPtrOutput) ToDeploymentStageDescriptionPtrOutput() DeploymentStageDescriptionPtrOutput {
	return o
}

func (o DeploymentStageDescriptionPtrOutput) ToDeploymentStageDescriptionPtrOutputWithContext(ctx context.Context) DeploymentStageDescriptionPtrOutput {
	return o
}

func (o DeploymentStageDescriptionPtrOutput) Elem() DeploymentStageDescriptionOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) DeploymentStageDescription {
		if v != nil {
			return *v
		}
		var ret DeploymentStageDescription
		return ret
	}).(DeploymentStageDescriptionOutput)
}

func (o DeploymentStageDescriptionPtrOutput) AccessLogSetting() DeploymentAccessLogSettingPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *DeploymentAccessLogSetting {
		if v == nil {
			return nil
		}
		return v.AccessLogSetting
	}).(DeploymentAccessLogSettingPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CacheClusterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.CacheClusterEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CacheClusterSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *string {
		if v == nil {
			return nil
		}
		return v.CacheClusterSize
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.CacheDataEncrypted
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *int {
		if v == nil {
			return nil
		}
		return v.CacheTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.CachingEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) CanarySetting() DeploymentCanarySettingPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *DeploymentCanarySetting {
		if v == nil {
			return nil
		}
		return v.CanarySetting
	}).(DeploymentCanarySettingPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.DataTraceEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) DocumentationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *string {
		if v == nil {
			return nil
		}
		return v.DocumentationVersion
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *string {
		if v == nil {
			return nil
		}
		return v.LoggingLevel
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) MethodSettings() DeploymentMethodSettingArrayOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) []DeploymentMethodSetting {
		if v == nil {
			return nil
		}
		return v.MethodSettings
	}).(DeploymentMethodSettingArrayOutput)
}

func (o DeploymentStageDescriptionPtrOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.MetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) Tags() DeploymentTagArrayOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) []DeploymentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DeploymentTagArrayOutput)
}

func (o DeploymentStageDescriptionPtrOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *int {
		if v == nil {
			return nil
		}
		return v.ThrottlingBurstLimit
	}).(pulumi.IntPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *float64 {
		if v == nil {
			return nil
		}
		return v.ThrottlingRateLimit
	}).(pulumi.Float64PtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) TracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) *bool {
		if v == nil {
			return nil
		}
		return v.TracingEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentStageDescriptionPtrOutput) Variables() pulumi.AnyOutput {
	return o.ApplyT(func(v *DeploymentStageDescription) interface{} {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(pulumi.AnyOutput)
}

type DeploymentTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DeploymentTagInput is an input type that accepts DeploymentTagArgs and DeploymentTagOutput values.
// You can construct a concrete instance of `DeploymentTagInput` via:
//
//          DeploymentTagArgs{...}
type DeploymentTagInput interface {
	pulumi.Input

	ToDeploymentTagOutput() DeploymentTagOutput
	ToDeploymentTagOutputWithContext(context.Context) DeploymentTagOutput
}

type DeploymentTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DeploymentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTag)(nil)).Elem()
}

func (i DeploymentTagArgs) ToDeploymentTagOutput() DeploymentTagOutput {
	return i.ToDeploymentTagOutputWithContext(context.Background())
}

func (i DeploymentTagArgs) ToDeploymentTagOutputWithContext(ctx context.Context) DeploymentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTagOutput)
}

// DeploymentTagArrayInput is an input type that accepts DeploymentTagArray and DeploymentTagArrayOutput values.
// You can construct a concrete instance of `DeploymentTagArrayInput` via:
//
//          DeploymentTagArray{ DeploymentTagArgs{...} }
type DeploymentTagArrayInput interface {
	pulumi.Input

	ToDeploymentTagArrayOutput() DeploymentTagArrayOutput
	ToDeploymentTagArrayOutputWithContext(context.Context) DeploymentTagArrayOutput
}

type DeploymentTagArray []DeploymentTagInput

func (DeploymentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTag)(nil)).Elem()
}

func (i DeploymentTagArray) ToDeploymentTagArrayOutput() DeploymentTagArrayOutput {
	return i.ToDeploymentTagArrayOutputWithContext(context.Background())
}

func (i DeploymentTagArray) ToDeploymentTagArrayOutputWithContext(ctx context.Context) DeploymentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTagArrayOutput)
}

type DeploymentTagOutput struct{ *pulumi.OutputState }

func (DeploymentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTag)(nil)).Elem()
}

func (o DeploymentTagOutput) ToDeploymentTagOutput() DeploymentTagOutput {
	return o
}

func (o DeploymentTagOutput) ToDeploymentTagOutputWithContext(ctx context.Context) DeploymentTagOutput {
	return o
}

func (o DeploymentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DeploymentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentTag) string { return v.Value }).(pulumi.StringOutput)
}

type DeploymentTagArrayOutput struct{ *pulumi.OutputState }

func (DeploymentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTag)(nil)).Elem()
}

func (o DeploymentTagArrayOutput) ToDeploymentTagArrayOutput() DeploymentTagArrayOutput {
	return o
}

func (o DeploymentTagArrayOutput) ToDeploymentTagArrayOutputWithContext(ctx context.Context) DeploymentTagArrayOutput {
	return o
}

func (o DeploymentTagArrayOutput) Index(i pulumi.IntInput) DeploymentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentTag {
		return vs[0].([]DeploymentTag)[vs[1].(int)]
	}).(DeploymentTagOutput)
}

type DocumentationPartLocation struct {
	Method     *string `pulumi:"method"`
	Name       *string `pulumi:"name"`
	Path       *string `pulumi:"path"`
	StatusCode *string `pulumi:"statusCode"`
	Type       *string `pulumi:"type"`
}

// DocumentationPartLocationInput is an input type that accepts DocumentationPartLocationArgs and DocumentationPartLocationOutput values.
// You can construct a concrete instance of `DocumentationPartLocationInput` via:
//
//          DocumentationPartLocationArgs{...}
type DocumentationPartLocationInput interface {
	pulumi.Input

	ToDocumentationPartLocationOutput() DocumentationPartLocationOutput
	ToDocumentationPartLocationOutputWithContext(context.Context) DocumentationPartLocationOutput
}

type DocumentationPartLocationArgs struct {
	Method     pulumi.StringPtrInput `pulumi:"method"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Path       pulumi.StringPtrInput `pulumi:"path"`
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
}

func (DocumentationPartLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentationPartLocation)(nil)).Elem()
}

func (i DocumentationPartLocationArgs) ToDocumentationPartLocationOutput() DocumentationPartLocationOutput {
	return i.ToDocumentationPartLocationOutputWithContext(context.Background())
}

func (i DocumentationPartLocationArgs) ToDocumentationPartLocationOutputWithContext(ctx context.Context) DocumentationPartLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentationPartLocationOutput)
}

func (i DocumentationPartLocationArgs) ToDocumentationPartLocationPtrOutput() DocumentationPartLocationPtrOutput {
	return i.ToDocumentationPartLocationPtrOutputWithContext(context.Background())
}

func (i DocumentationPartLocationArgs) ToDocumentationPartLocationPtrOutputWithContext(ctx context.Context) DocumentationPartLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentationPartLocationOutput).ToDocumentationPartLocationPtrOutputWithContext(ctx)
}

// DocumentationPartLocationPtrInput is an input type that accepts DocumentationPartLocationArgs, DocumentationPartLocationPtr and DocumentationPartLocationPtrOutput values.
// You can construct a concrete instance of `DocumentationPartLocationPtrInput` via:
//
//          DocumentationPartLocationArgs{...}
//
//  or:
//
//          nil
type DocumentationPartLocationPtrInput interface {
	pulumi.Input

	ToDocumentationPartLocationPtrOutput() DocumentationPartLocationPtrOutput
	ToDocumentationPartLocationPtrOutputWithContext(context.Context) DocumentationPartLocationPtrOutput
}

type documentationPartLocationPtrType DocumentationPartLocationArgs

func DocumentationPartLocationPtr(v *DocumentationPartLocationArgs) DocumentationPartLocationPtrInput {
	return (*documentationPartLocationPtrType)(v)
}

func (*documentationPartLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentationPartLocation)(nil)).Elem()
}

func (i *documentationPartLocationPtrType) ToDocumentationPartLocationPtrOutput() DocumentationPartLocationPtrOutput {
	return i.ToDocumentationPartLocationPtrOutputWithContext(context.Background())
}

func (i *documentationPartLocationPtrType) ToDocumentationPartLocationPtrOutputWithContext(ctx context.Context) DocumentationPartLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentationPartLocationPtrOutput)
}

type DocumentationPartLocationOutput struct{ *pulumi.OutputState }

func (DocumentationPartLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentationPartLocation)(nil)).Elem()
}

func (o DocumentationPartLocationOutput) ToDocumentationPartLocationOutput() DocumentationPartLocationOutput {
	return o
}

func (o DocumentationPartLocationOutput) ToDocumentationPartLocationOutputWithContext(ctx context.Context) DocumentationPartLocationOutput {
	return o
}

func (o DocumentationPartLocationOutput) ToDocumentationPartLocationPtrOutput() DocumentationPartLocationPtrOutput {
	return o.ToDocumentationPartLocationPtrOutputWithContext(context.Background())
}

func (o DocumentationPartLocationOutput) ToDocumentationPartLocationPtrOutputWithContext(ctx context.Context) DocumentationPartLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentationPartLocation) *DocumentationPartLocation {
		return &v
	}).(DocumentationPartLocationPtrOutput)
}

func (o DocumentationPartLocationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentationPartLocation) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentationPartLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentationPartLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentationPartLocation) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentationPartLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DocumentationPartLocationPtrOutput struct{ *pulumi.OutputState }

func (DocumentationPartLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentationPartLocation)(nil)).Elem()
}

func (o DocumentationPartLocationPtrOutput) ToDocumentationPartLocationPtrOutput() DocumentationPartLocationPtrOutput {
	return o
}

func (o DocumentationPartLocationPtrOutput) ToDocumentationPartLocationPtrOutputWithContext(ctx context.Context) DocumentationPartLocationPtrOutput {
	return o
}

func (o DocumentationPartLocationPtrOutput) Elem() DocumentationPartLocationOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) DocumentationPartLocation {
		if v != nil {
			return *v
		}
		var ret DocumentationPartLocation
		return ret
	}).(DocumentationPartLocationOutput)
}

func (o DocumentationPartLocationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

func (o DocumentationPartLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentationPartLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type DomainNameEndpointConfiguration struct {
	Types []string `pulumi:"types"`
}

// DomainNameEndpointConfigurationInput is an input type that accepts DomainNameEndpointConfigurationArgs and DomainNameEndpointConfigurationOutput values.
// You can construct a concrete instance of `DomainNameEndpointConfigurationInput` via:
//
//          DomainNameEndpointConfigurationArgs{...}
type DomainNameEndpointConfigurationInput interface {
	pulumi.Input

	ToDomainNameEndpointConfigurationOutput() DomainNameEndpointConfigurationOutput
	ToDomainNameEndpointConfigurationOutputWithContext(context.Context) DomainNameEndpointConfigurationOutput
}

type DomainNameEndpointConfigurationArgs struct {
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (DomainNameEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameEndpointConfiguration)(nil)).Elem()
}

func (i DomainNameEndpointConfigurationArgs) ToDomainNameEndpointConfigurationOutput() DomainNameEndpointConfigurationOutput {
	return i.ToDomainNameEndpointConfigurationOutputWithContext(context.Background())
}

func (i DomainNameEndpointConfigurationArgs) ToDomainNameEndpointConfigurationOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameEndpointConfigurationOutput)
}

func (i DomainNameEndpointConfigurationArgs) ToDomainNameEndpointConfigurationPtrOutput() DomainNameEndpointConfigurationPtrOutput {
	return i.ToDomainNameEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i DomainNameEndpointConfigurationArgs) ToDomainNameEndpointConfigurationPtrOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameEndpointConfigurationOutput).ToDomainNameEndpointConfigurationPtrOutputWithContext(ctx)
}

// DomainNameEndpointConfigurationPtrInput is an input type that accepts DomainNameEndpointConfigurationArgs, DomainNameEndpointConfigurationPtr and DomainNameEndpointConfigurationPtrOutput values.
// You can construct a concrete instance of `DomainNameEndpointConfigurationPtrInput` via:
//
//          DomainNameEndpointConfigurationArgs{...}
//
//  or:
//
//          nil
type DomainNameEndpointConfigurationPtrInput interface {
	pulumi.Input

	ToDomainNameEndpointConfigurationPtrOutput() DomainNameEndpointConfigurationPtrOutput
	ToDomainNameEndpointConfigurationPtrOutputWithContext(context.Context) DomainNameEndpointConfigurationPtrOutput
}

type domainNameEndpointConfigurationPtrType DomainNameEndpointConfigurationArgs

func DomainNameEndpointConfigurationPtr(v *DomainNameEndpointConfigurationArgs) DomainNameEndpointConfigurationPtrInput {
	return (*domainNameEndpointConfigurationPtrType)(v)
}

func (*domainNameEndpointConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameEndpointConfiguration)(nil)).Elem()
}

func (i *domainNameEndpointConfigurationPtrType) ToDomainNameEndpointConfigurationPtrOutput() DomainNameEndpointConfigurationPtrOutput {
	return i.ToDomainNameEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i *domainNameEndpointConfigurationPtrType) ToDomainNameEndpointConfigurationPtrOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameEndpointConfigurationPtrOutput)
}

type DomainNameEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (DomainNameEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameEndpointConfiguration)(nil)).Elem()
}

func (o DomainNameEndpointConfigurationOutput) ToDomainNameEndpointConfigurationOutput() DomainNameEndpointConfigurationOutput {
	return o
}

func (o DomainNameEndpointConfigurationOutput) ToDomainNameEndpointConfigurationOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationOutput {
	return o
}

func (o DomainNameEndpointConfigurationOutput) ToDomainNameEndpointConfigurationPtrOutput() DomainNameEndpointConfigurationPtrOutput {
	return o.ToDomainNameEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (o DomainNameEndpointConfigurationOutput) ToDomainNameEndpointConfigurationPtrOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNameEndpointConfiguration) *DomainNameEndpointConfiguration {
		return &v
	}).(DomainNameEndpointConfigurationPtrOutput)
}

func (o DomainNameEndpointConfigurationOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainNameEndpointConfiguration) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type DomainNameEndpointConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DomainNameEndpointConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameEndpointConfiguration)(nil)).Elem()
}

func (o DomainNameEndpointConfigurationPtrOutput) ToDomainNameEndpointConfigurationPtrOutput() DomainNameEndpointConfigurationPtrOutput {
	return o
}

func (o DomainNameEndpointConfigurationPtrOutput) ToDomainNameEndpointConfigurationPtrOutputWithContext(ctx context.Context) DomainNameEndpointConfigurationPtrOutput {
	return o
}

func (o DomainNameEndpointConfigurationPtrOutput) Elem() DomainNameEndpointConfigurationOutput {
	return o.ApplyT(func(v *DomainNameEndpointConfiguration) DomainNameEndpointConfiguration {
		if v != nil {
			return *v
		}
		var ret DomainNameEndpointConfiguration
		return ret
	}).(DomainNameEndpointConfigurationOutput)
}

func (o DomainNameEndpointConfigurationPtrOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainNameEndpointConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Types
	}).(pulumi.StringArrayOutput)
}

type DomainNameMutualTlsAuthentication struct {
	TruststoreUri     *string `pulumi:"truststoreUri"`
	TruststoreVersion *string `pulumi:"truststoreVersion"`
}

// DomainNameMutualTlsAuthenticationInput is an input type that accepts DomainNameMutualTlsAuthenticationArgs and DomainNameMutualTlsAuthenticationOutput values.
// You can construct a concrete instance of `DomainNameMutualTlsAuthenticationInput` via:
//
//          DomainNameMutualTlsAuthenticationArgs{...}
type DomainNameMutualTlsAuthenticationInput interface {
	pulumi.Input

	ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput
	ToDomainNameMutualTlsAuthenticationOutputWithContext(context.Context) DomainNameMutualTlsAuthenticationOutput
}

type DomainNameMutualTlsAuthenticationArgs struct {
	TruststoreUri     pulumi.StringPtrInput `pulumi:"truststoreUri"`
	TruststoreVersion pulumi.StringPtrInput `pulumi:"truststoreVersion"`
}

func (DomainNameMutualTlsAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput {
	return i.ToDomainNameMutualTlsAuthenticationOutputWithContext(context.Background())
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationOutput)
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return i.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationOutput).ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx)
}

// DomainNameMutualTlsAuthenticationPtrInput is an input type that accepts DomainNameMutualTlsAuthenticationArgs, DomainNameMutualTlsAuthenticationPtr and DomainNameMutualTlsAuthenticationPtrOutput values.
// You can construct a concrete instance of `DomainNameMutualTlsAuthenticationPtrInput` via:
//
//          DomainNameMutualTlsAuthenticationArgs{...}
//
//  or:
//
//          nil
type DomainNameMutualTlsAuthenticationPtrInput interface {
	pulumi.Input

	ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput
	ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Context) DomainNameMutualTlsAuthenticationPtrOutput
}

type domainNameMutualTlsAuthenticationPtrType DomainNameMutualTlsAuthenticationArgs

func DomainNameMutualTlsAuthenticationPtr(v *DomainNameMutualTlsAuthenticationArgs) DomainNameMutualTlsAuthenticationPtrInput {
	return (*domainNameMutualTlsAuthenticationPtrType)(v)
}

func (*domainNameMutualTlsAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (i *domainNameMutualTlsAuthenticationPtrType) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return i.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (i *domainNameMutualTlsAuthenticationPtrType) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationPtrOutput)
}

type DomainNameMutualTlsAuthenticationOutput struct{ *pulumi.OutputState }

func (DomainNameMutualTlsAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNameMutualTlsAuthentication) *DomainNameMutualTlsAuthentication {
		return &v
	}).(DomainNameMutualTlsAuthenticationPtrOutput)
}

func (o DomainNameMutualTlsAuthenticationOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameMutualTlsAuthentication) *string { return v.TruststoreUri }).(pulumi.StringPtrOutput)
}

func (o DomainNameMutualTlsAuthenticationOutput) TruststoreVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameMutualTlsAuthentication) *string { return v.TruststoreVersion }).(pulumi.StringPtrOutput)
}

type DomainNameMutualTlsAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DomainNameMutualTlsAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) Elem() DomainNameMutualTlsAuthenticationOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) DomainNameMutualTlsAuthentication {
		if v != nil {
			return *v
		}
		var ret DomainNameMutualTlsAuthentication
		return ret
	}).(DomainNameMutualTlsAuthenticationOutput)
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreUri
	}).(pulumi.StringPtrOutput)
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) TruststoreVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreVersion
	}).(pulumi.StringPtrOutput)
}

type DomainNameTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DomainNameTagInput is an input type that accepts DomainNameTagArgs and DomainNameTagOutput values.
// You can construct a concrete instance of `DomainNameTagInput` via:
//
//          DomainNameTagArgs{...}
type DomainNameTagInput interface {
	pulumi.Input

	ToDomainNameTagOutput() DomainNameTagOutput
	ToDomainNameTagOutputWithContext(context.Context) DomainNameTagOutput
}

type DomainNameTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainNameTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameTag)(nil)).Elem()
}

func (i DomainNameTagArgs) ToDomainNameTagOutput() DomainNameTagOutput {
	return i.ToDomainNameTagOutputWithContext(context.Background())
}

func (i DomainNameTagArgs) ToDomainNameTagOutputWithContext(ctx context.Context) DomainNameTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameTagOutput)
}

// DomainNameTagArrayInput is an input type that accepts DomainNameTagArray and DomainNameTagArrayOutput values.
// You can construct a concrete instance of `DomainNameTagArrayInput` via:
//
//          DomainNameTagArray{ DomainNameTagArgs{...} }
type DomainNameTagArrayInput interface {
	pulumi.Input

	ToDomainNameTagArrayOutput() DomainNameTagArrayOutput
	ToDomainNameTagArrayOutputWithContext(context.Context) DomainNameTagArrayOutput
}

type DomainNameTagArray []DomainNameTagInput

func (DomainNameTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainNameTag)(nil)).Elem()
}

func (i DomainNameTagArray) ToDomainNameTagArrayOutput() DomainNameTagArrayOutput {
	return i.ToDomainNameTagArrayOutputWithContext(context.Background())
}

func (i DomainNameTagArray) ToDomainNameTagArrayOutputWithContext(ctx context.Context) DomainNameTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameTagArrayOutput)
}

type DomainNameTagOutput struct{ *pulumi.OutputState }

func (DomainNameTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameTag)(nil)).Elem()
}

func (o DomainNameTagOutput) ToDomainNameTagOutput() DomainNameTagOutput {
	return o
}

func (o DomainNameTagOutput) ToDomainNameTagOutputWithContext(ctx context.Context) DomainNameTagOutput {
	return o
}

func (o DomainNameTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DomainNameTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainNameTagArrayOutput struct{ *pulumi.OutputState }

func (DomainNameTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainNameTag)(nil)).Elem()
}

func (o DomainNameTagArrayOutput) ToDomainNameTagArrayOutput() DomainNameTagArrayOutput {
	return o
}

func (o DomainNameTagArrayOutput) ToDomainNameTagArrayOutputWithContext(ctx context.Context) DomainNameTagArrayOutput {
	return o
}

func (o DomainNameTagArrayOutput) Index(i pulumi.IntInput) DomainNameTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainNameTag {
		return vs[0].([]DomainNameTag)[vs[1].(int)]
	}).(DomainNameTagOutput)
}

type MethodIntegration struct {
	// A list of request parameters whose values API Gateway caches.
	CacheKeyParameters []string `pulumi:"cacheKeyParameters"`
	// An API-specific tag group of related cached parameters.
	CacheNamespace *string `pulumi:"cacheNamespace"`
	// The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
	ConnectionId *string `pulumi:"connectionId"`
	// The type of the network connection to the integration endpoint.
	ConnectionType *MethodIntegrationConnectionType `pulumi:"connectionType"`
	// Specifies how to handle request payload content type conversions.
	ContentHandling *MethodIntegrationContentHandling `pulumi:"contentHandling"`
	// The credentials that are required for the integration.
	Credentials *string `pulumi:"credentials"`
	// The integration's HTTP method type.
	IntegrationHttpMethod *string `pulumi:"integrationHttpMethod"`
	// The response that API Gateway provides after a method's backend completes processing a request.
	IntegrationResponses []MethodIntegrationResponse `pulumi:"integrationResponses"`
	// Indicates when API Gateway passes requests to the targeted backend.
	PassthroughBehavior *MethodIntegrationPassthroughBehavior `pulumi:"passthroughBehavior"`
	// The request parameters that API Gateway sends with the backend request.
	RequestParameters interface{} `pulumi:"requestParameters"`
	// A map of Apache Velocity templates that are applied on the request payload.
	RequestTemplates interface{} `pulumi:"requestTemplates"`
	// Custom timeout between 50 and 29,000 milliseconds.
	TimeoutInMillis *int `pulumi:"timeoutInMillis"`
	// The type of backend that your method is running.
	Type MethodIntegrationType `pulumi:"type"`
	// The Uniform Resource Identifier (URI) for the integration.
	Uri *string `pulumi:"uri"`
}

// MethodIntegrationInput is an input type that accepts MethodIntegrationArgs and MethodIntegrationOutput values.
// You can construct a concrete instance of `MethodIntegrationInput` via:
//
//          MethodIntegrationArgs{...}
type MethodIntegrationInput interface {
	pulumi.Input

	ToMethodIntegrationOutput() MethodIntegrationOutput
	ToMethodIntegrationOutputWithContext(context.Context) MethodIntegrationOutput
}

type MethodIntegrationArgs struct {
	// A list of request parameters whose values API Gateway caches.
	CacheKeyParameters pulumi.StringArrayInput `pulumi:"cacheKeyParameters"`
	// An API-specific tag group of related cached parameters.
	CacheNamespace pulumi.StringPtrInput `pulumi:"cacheNamespace"`
	// The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
	ConnectionId pulumi.StringPtrInput `pulumi:"connectionId"`
	// The type of the network connection to the integration endpoint.
	ConnectionType MethodIntegrationConnectionTypePtrInput `pulumi:"connectionType"`
	// Specifies how to handle request payload content type conversions.
	ContentHandling MethodIntegrationContentHandlingPtrInput `pulumi:"contentHandling"`
	// The credentials that are required for the integration.
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// The integration's HTTP method type.
	IntegrationHttpMethod pulumi.StringPtrInput `pulumi:"integrationHttpMethod"`
	// The response that API Gateway provides after a method's backend completes processing a request.
	IntegrationResponses MethodIntegrationResponseArrayInput `pulumi:"integrationResponses"`
	// Indicates when API Gateway passes requests to the targeted backend.
	PassthroughBehavior MethodIntegrationPassthroughBehaviorPtrInput `pulumi:"passthroughBehavior"`
	// The request parameters that API Gateway sends with the backend request.
	RequestParameters pulumi.Input `pulumi:"requestParameters"`
	// A map of Apache Velocity templates that are applied on the request payload.
	RequestTemplates pulumi.Input `pulumi:"requestTemplates"`
	// Custom timeout between 50 and 29,000 milliseconds.
	TimeoutInMillis pulumi.IntPtrInput `pulumi:"timeoutInMillis"`
	// The type of backend that your method is running.
	Type MethodIntegrationTypeInput `pulumi:"type"`
	// The Uniform Resource Identifier (URI) for the integration.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (MethodIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegration)(nil)).Elem()
}

func (i MethodIntegrationArgs) ToMethodIntegrationOutput() MethodIntegrationOutput {
	return i.ToMethodIntegrationOutputWithContext(context.Background())
}

func (i MethodIntegrationArgs) ToMethodIntegrationOutputWithContext(ctx context.Context) MethodIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodIntegrationOutput)
}

func (i MethodIntegrationArgs) ToMethodIntegrationPtrOutput() MethodIntegrationPtrOutput {
	return i.ToMethodIntegrationPtrOutputWithContext(context.Background())
}

func (i MethodIntegrationArgs) ToMethodIntegrationPtrOutputWithContext(ctx context.Context) MethodIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodIntegrationOutput).ToMethodIntegrationPtrOutputWithContext(ctx)
}

// MethodIntegrationPtrInput is an input type that accepts MethodIntegrationArgs, MethodIntegrationPtr and MethodIntegrationPtrOutput values.
// You can construct a concrete instance of `MethodIntegrationPtrInput` via:
//
//          MethodIntegrationArgs{...}
//
//  or:
//
//          nil
type MethodIntegrationPtrInput interface {
	pulumi.Input

	ToMethodIntegrationPtrOutput() MethodIntegrationPtrOutput
	ToMethodIntegrationPtrOutputWithContext(context.Context) MethodIntegrationPtrOutput
}

type methodIntegrationPtrType MethodIntegrationArgs

func MethodIntegrationPtr(v *MethodIntegrationArgs) MethodIntegrationPtrInput {
	return (*methodIntegrationPtrType)(v)
}

func (*methodIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegration)(nil)).Elem()
}

func (i *methodIntegrationPtrType) ToMethodIntegrationPtrOutput() MethodIntegrationPtrOutput {
	return i.ToMethodIntegrationPtrOutputWithContext(context.Background())
}

func (i *methodIntegrationPtrType) ToMethodIntegrationPtrOutputWithContext(ctx context.Context) MethodIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodIntegrationPtrOutput)
}

type MethodIntegrationOutput struct{ *pulumi.OutputState }

func (MethodIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegration)(nil)).Elem()
}

func (o MethodIntegrationOutput) ToMethodIntegrationOutput() MethodIntegrationOutput {
	return o
}

func (o MethodIntegrationOutput) ToMethodIntegrationOutputWithContext(ctx context.Context) MethodIntegrationOutput {
	return o
}

func (o MethodIntegrationOutput) ToMethodIntegrationPtrOutput() MethodIntegrationPtrOutput {
	return o.ToMethodIntegrationPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationOutput) ToMethodIntegrationPtrOutputWithContext(ctx context.Context) MethodIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegration) *MethodIntegration {
		return &v
	}).(MethodIntegrationPtrOutput)
}

// A list of request parameters whose values API Gateway caches.
func (o MethodIntegrationOutput) CacheKeyParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MethodIntegration) []string { return v.CacheKeyParameters }).(pulumi.StringArrayOutput)
}

// An API-specific tag group of related cached parameters.
func (o MethodIntegrationOutput) CacheNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *string { return v.CacheNamespace }).(pulumi.StringPtrOutput)
}

// The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
func (o MethodIntegrationOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

// The type of the network connection to the integration endpoint.
func (o MethodIntegrationOutput) ConnectionType() MethodIntegrationConnectionTypePtrOutput {
	return o.ApplyT(func(v MethodIntegration) *MethodIntegrationConnectionType { return v.ConnectionType }).(MethodIntegrationConnectionTypePtrOutput)
}

// Specifies how to handle request payload content type conversions.
func (o MethodIntegrationOutput) ContentHandling() MethodIntegrationContentHandlingPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *MethodIntegrationContentHandling { return v.ContentHandling }).(MethodIntegrationContentHandlingPtrOutput)
}

// The credentials that are required for the integration.
func (o MethodIntegrationOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// The integration's HTTP method type.
func (o MethodIntegrationOutput) IntegrationHttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *string { return v.IntegrationHttpMethod }).(pulumi.StringPtrOutput)
}

// The response that API Gateway provides after a method's backend completes processing a request.
func (o MethodIntegrationOutput) IntegrationResponses() MethodIntegrationResponseArrayOutput {
	return o.ApplyT(func(v MethodIntegration) []MethodIntegrationResponse { return v.IntegrationResponses }).(MethodIntegrationResponseArrayOutput)
}

// Indicates when API Gateway passes requests to the targeted backend.
func (o MethodIntegrationOutput) PassthroughBehavior() MethodIntegrationPassthroughBehaviorPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *MethodIntegrationPassthroughBehavior { return v.PassthroughBehavior }).(MethodIntegrationPassthroughBehaviorPtrOutput)
}

// The request parameters that API Gateway sends with the backend request.
func (o MethodIntegrationOutput) RequestParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodIntegration) interface{} { return v.RequestParameters }).(pulumi.AnyOutput)
}

// A map of Apache Velocity templates that are applied on the request payload.
func (o MethodIntegrationOutput) RequestTemplates() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodIntegration) interface{} { return v.RequestTemplates }).(pulumi.AnyOutput)
}

// Custom timeout between 50 and 29,000 milliseconds.
func (o MethodIntegrationOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *int { return v.TimeoutInMillis }).(pulumi.IntPtrOutput)
}

// The type of backend that your method is running.
func (o MethodIntegrationOutput) Type() MethodIntegrationTypeOutput {
	return o.ApplyT(func(v MethodIntegration) MethodIntegrationType { return v.Type }).(MethodIntegrationTypeOutput)
}

// The Uniform Resource Identifier (URI) for the integration.
func (o MethodIntegrationOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegration) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type MethodIntegrationPtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegration)(nil)).Elem()
}

func (o MethodIntegrationPtrOutput) ToMethodIntegrationPtrOutput() MethodIntegrationPtrOutput {
	return o
}

func (o MethodIntegrationPtrOutput) ToMethodIntegrationPtrOutputWithContext(ctx context.Context) MethodIntegrationPtrOutput {
	return o
}

func (o MethodIntegrationPtrOutput) Elem() MethodIntegrationOutput {
	return o.ApplyT(func(v *MethodIntegration) MethodIntegration {
		if v != nil {
			return *v
		}
		var ret MethodIntegration
		return ret
	}).(MethodIntegrationOutput)
}

// A list of request parameters whose values API Gateway caches.
func (o MethodIntegrationPtrOutput) CacheKeyParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MethodIntegration) []string {
		if v == nil {
			return nil
		}
		return v.CacheKeyParameters
	}).(pulumi.StringArrayOutput)
}

// An API-specific tag group of related cached parameters.
func (o MethodIntegrationPtrOutput) CacheNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *string {
		if v == nil {
			return nil
		}
		return v.CacheNamespace
	}).(pulumi.StringPtrOutput)
}

// The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
func (o MethodIntegrationPtrOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionId
	}).(pulumi.StringPtrOutput)
}

// The type of the network connection to the integration endpoint.
func (o MethodIntegrationPtrOutput) ConnectionType() MethodIntegrationConnectionTypePtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *MethodIntegrationConnectionType {
		if v == nil {
			return nil
		}
		return v.ConnectionType
	}).(MethodIntegrationConnectionTypePtrOutput)
}

// Specifies how to handle request payload content type conversions.
func (o MethodIntegrationPtrOutput) ContentHandling() MethodIntegrationContentHandlingPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *MethodIntegrationContentHandling {
		if v == nil {
			return nil
		}
		return v.ContentHandling
	}).(MethodIntegrationContentHandlingPtrOutput)
}

// The credentials that are required for the integration.
func (o MethodIntegrationPtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// The integration's HTTP method type.
func (o MethodIntegrationPtrOutput) IntegrationHttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationHttpMethod
	}).(pulumi.StringPtrOutput)
}

// The response that API Gateway provides after a method's backend completes processing a request.
func (o MethodIntegrationPtrOutput) IntegrationResponses() MethodIntegrationResponseArrayOutput {
	return o.ApplyT(func(v *MethodIntegration) []MethodIntegrationResponse {
		if v == nil {
			return nil
		}
		return v.IntegrationResponses
	}).(MethodIntegrationResponseArrayOutput)
}

// Indicates when API Gateway passes requests to the targeted backend.
func (o MethodIntegrationPtrOutput) PassthroughBehavior() MethodIntegrationPassthroughBehaviorPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *MethodIntegrationPassthroughBehavior {
		if v == nil {
			return nil
		}
		return v.PassthroughBehavior
	}).(MethodIntegrationPassthroughBehaviorPtrOutput)
}

// The request parameters that API Gateway sends with the backend request.
func (o MethodIntegrationPtrOutput) RequestParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *MethodIntegration) interface{} {
		if v == nil {
			return nil
		}
		return v.RequestParameters
	}).(pulumi.AnyOutput)
}

// A map of Apache Velocity templates that are applied on the request payload.
func (o MethodIntegrationPtrOutput) RequestTemplates() pulumi.AnyOutput {
	return o.ApplyT(func(v *MethodIntegration) interface{} {
		if v == nil {
			return nil
		}
		return v.RequestTemplates
	}).(pulumi.AnyOutput)
}

// Custom timeout between 50 and 29,000 milliseconds.
func (o MethodIntegrationPtrOutput) TimeoutInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMillis
	}).(pulumi.IntPtrOutput)
}

// The type of backend that your method is running.
func (o MethodIntegrationPtrOutput) Type() MethodIntegrationTypePtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *MethodIntegrationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(MethodIntegrationTypePtrOutput)
}

// The Uniform Resource Identifier (URI) for the integration.
func (o MethodIntegrationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MethodIntegration) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationResponse struct {
	// Specifies how to handle request payload content type conversions.
	ContentHandling *MethodIntegrationResponseContentHandling `pulumi:"contentHandling"`
	// The response parameters from the backend response that API Gateway sends to the method response.
	ResponseParameters interface{} `pulumi:"responseParameters"`
	// The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
	ResponseTemplates interface{} `pulumi:"responseTemplates"`
	// A regular expression that specifies which error strings or status codes from the backend map to the integration response.
	SelectionPattern *string `pulumi:"selectionPattern"`
	// The status code that API Gateway uses to map the integration response to a MethodResponse status code.
	StatusCode string `pulumi:"statusCode"`
}

// MethodIntegrationResponseInput is an input type that accepts MethodIntegrationResponseArgs and MethodIntegrationResponseOutput values.
// You can construct a concrete instance of `MethodIntegrationResponseInput` via:
//
//          MethodIntegrationResponseArgs{...}
type MethodIntegrationResponseInput interface {
	pulumi.Input

	ToMethodIntegrationResponseOutput() MethodIntegrationResponseOutput
	ToMethodIntegrationResponseOutputWithContext(context.Context) MethodIntegrationResponseOutput
}

type MethodIntegrationResponseArgs struct {
	// Specifies how to handle request payload content type conversions.
	ContentHandling MethodIntegrationResponseContentHandlingPtrInput `pulumi:"contentHandling"`
	// The response parameters from the backend response that API Gateway sends to the method response.
	ResponseParameters pulumi.Input `pulumi:"responseParameters"`
	// The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
	ResponseTemplates pulumi.Input `pulumi:"responseTemplates"`
	// A regular expression that specifies which error strings or status codes from the backend map to the integration response.
	SelectionPattern pulumi.StringPtrInput `pulumi:"selectionPattern"`
	// The status code that API Gateway uses to map the integration response to a MethodResponse status code.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (MethodIntegrationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationResponse)(nil)).Elem()
}

func (i MethodIntegrationResponseArgs) ToMethodIntegrationResponseOutput() MethodIntegrationResponseOutput {
	return i.ToMethodIntegrationResponseOutputWithContext(context.Background())
}

func (i MethodIntegrationResponseArgs) ToMethodIntegrationResponseOutputWithContext(ctx context.Context) MethodIntegrationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodIntegrationResponseOutput)
}

// MethodIntegrationResponseArrayInput is an input type that accepts MethodIntegrationResponseArray and MethodIntegrationResponseArrayOutput values.
// You can construct a concrete instance of `MethodIntegrationResponseArrayInput` via:
//
//          MethodIntegrationResponseArray{ MethodIntegrationResponseArgs{...} }
type MethodIntegrationResponseArrayInput interface {
	pulumi.Input

	ToMethodIntegrationResponseArrayOutput() MethodIntegrationResponseArrayOutput
	ToMethodIntegrationResponseArrayOutputWithContext(context.Context) MethodIntegrationResponseArrayOutput
}

type MethodIntegrationResponseArray []MethodIntegrationResponseInput

func (MethodIntegrationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodIntegrationResponse)(nil)).Elem()
}

func (i MethodIntegrationResponseArray) ToMethodIntegrationResponseArrayOutput() MethodIntegrationResponseArrayOutput {
	return i.ToMethodIntegrationResponseArrayOutputWithContext(context.Background())
}

func (i MethodIntegrationResponseArray) ToMethodIntegrationResponseArrayOutputWithContext(ctx context.Context) MethodIntegrationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodIntegrationResponseArrayOutput)
}

type MethodIntegrationResponseOutput struct{ *pulumi.OutputState }

func (MethodIntegrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationResponse)(nil)).Elem()
}

func (o MethodIntegrationResponseOutput) ToMethodIntegrationResponseOutput() MethodIntegrationResponseOutput {
	return o
}

func (o MethodIntegrationResponseOutput) ToMethodIntegrationResponseOutputWithContext(ctx context.Context) MethodIntegrationResponseOutput {
	return o
}

// Specifies how to handle request payload content type conversions.
func (o MethodIntegrationResponseOutput) ContentHandling() MethodIntegrationResponseContentHandlingPtrOutput {
	return o.ApplyT(func(v MethodIntegrationResponse) *MethodIntegrationResponseContentHandling { return v.ContentHandling }).(MethodIntegrationResponseContentHandlingPtrOutput)
}

// The response parameters from the backend response that API Gateway sends to the method response.
func (o MethodIntegrationResponseOutput) ResponseParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodIntegrationResponse) interface{} { return v.ResponseParameters }).(pulumi.AnyOutput)
}

// The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
func (o MethodIntegrationResponseOutput) ResponseTemplates() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodIntegrationResponse) interface{} { return v.ResponseTemplates }).(pulumi.AnyOutput)
}

// A regular expression that specifies which error strings or status codes from the backend map to the integration response.
func (o MethodIntegrationResponseOutput) SelectionPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MethodIntegrationResponse) *string { return v.SelectionPattern }).(pulumi.StringPtrOutput)
}

// The status code that API Gateway uses to map the integration response to a MethodResponse status code.
func (o MethodIntegrationResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v MethodIntegrationResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type MethodIntegrationResponseArrayOutput struct{ *pulumi.OutputState }

func (MethodIntegrationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodIntegrationResponse)(nil)).Elem()
}

func (o MethodIntegrationResponseArrayOutput) ToMethodIntegrationResponseArrayOutput() MethodIntegrationResponseArrayOutput {
	return o
}

func (o MethodIntegrationResponseArrayOutput) ToMethodIntegrationResponseArrayOutputWithContext(ctx context.Context) MethodIntegrationResponseArrayOutput {
	return o
}

func (o MethodIntegrationResponseArrayOutput) Index(i pulumi.IntInput) MethodIntegrationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MethodIntegrationResponse {
		return vs[0].([]MethodIntegrationResponse)[vs[1].(int)]
	}).(MethodIntegrationResponseOutput)
}

type MethodResponse struct {
	// The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
	ResponseModels interface{} `pulumi:"responseModels"`
	// Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
	ResponseParameters interface{} `pulumi:"responseParameters"`
	// The method response's status code, which you map to an IntegrationResponse.
	StatusCode string `pulumi:"statusCode"`
}

// MethodResponseInput is an input type that accepts MethodResponseArgs and MethodResponseOutput values.
// You can construct a concrete instance of `MethodResponseInput` via:
//
//          MethodResponseArgs{...}
type MethodResponseInput interface {
	pulumi.Input

	ToMethodResponseOutput() MethodResponseOutput
	ToMethodResponseOutputWithContext(context.Context) MethodResponseOutput
}

type MethodResponseArgs struct {
	// The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
	ResponseModels pulumi.Input `pulumi:"responseModels"`
	// Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
	ResponseParameters pulumi.Input `pulumi:"responseParameters"`
	// The method response's status code, which you map to an IntegrationResponse.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (MethodResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodResponse)(nil)).Elem()
}

func (i MethodResponseArgs) ToMethodResponseOutput() MethodResponseOutput {
	return i.ToMethodResponseOutputWithContext(context.Background())
}

func (i MethodResponseArgs) ToMethodResponseOutputWithContext(ctx context.Context) MethodResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodResponseOutput)
}

// MethodResponseArrayInput is an input type that accepts MethodResponseArray and MethodResponseArrayOutput values.
// You can construct a concrete instance of `MethodResponseArrayInput` via:
//
//          MethodResponseArray{ MethodResponseArgs{...} }
type MethodResponseArrayInput interface {
	pulumi.Input

	ToMethodResponseArrayOutput() MethodResponseArrayOutput
	ToMethodResponseArrayOutputWithContext(context.Context) MethodResponseArrayOutput
}

type MethodResponseArray []MethodResponseInput

func (MethodResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodResponse)(nil)).Elem()
}

func (i MethodResponseArray) ToMethodResponseArrayOutput() MethodResponseArrayOutput {
	return i.ToMethodResponseArrayOutputWithContext(context.Background())
}

func (i MethodResponseArray) ToMethodResponseArrayOutputWithContext(ctx context.Context) MethodResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MethodResponseArrayOutput)
}

type MethodResponseOutput struct{ *pulumi.OutputState }

func (MethodResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodResponse)(nil)).Elem()
}

func (o MethodResponseOutput) ToMethodResponseOutput() MethodResponseOutput {
	return o
}

func (o MethodResponseOutput) ToMethodResponseOutputWithContext(ctx context.Context) MethodResponseOutput {
	return o
}

// The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
func (o MethodResponseOutput) ResponseModels() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodResponse) interface{} { return v.ResponseModels }).(pulumi.AnyOutput)
}

// Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
func (o MethodResponseOutput) ResponseParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v MethodResponse) interface{} { return v.ResponseParameters }).(pulumi.AnyOutput)
}

// The method response's status code, which you map to an IntegrationResponse.
func (o MethodResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v MethodResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type MethodResponseArrayOutput struct{ *pulumi.OutputState }

func (MethodResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MethodResponse)(nil)).Elem()
}

func (o MethodResponseArrayOutput) ToMethodResponseArrayOutput() MethodResponseArrayOutput {
	return o
}

func (o MethodResponseArrayOutput) ToMethodResponseArrayOutputWithContext(ctx context.Context) MethodResponseArrayOutput {
	return o
}

func (o MethodResponseArrayOutput) Index(i pulumi.IntInput) MethodResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MethodResponse {
		return vs[0].([]MethodResponse)[vs[1].(int)]
	}).(MethodResponseOutput)
}

type RestApiEndpointConfiguration struct {
	Types          []string `pulumi:"types"`
	VpcEndpointIds []string `pulumi:"vpcEndpointIds"`
}

// RestApiEndpointConfigurationInput is an input type that accepts RestApiEndpointConfigurationArgs and RestApiEndpointConfigurationOutput values.
// You can construct a concrete instance of `RestApiEndpointConfigurationInput` via:
//
//          RestApiEndpointConfigurationArgs{...}
type RestApiEndpointConfigurationInput interface {
	pulumi.Input

	ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput
	ToRestApiEndpointConfigurationOutputWithContext(context.Context) RestApiEndpointConfigurationOutput
}

type RestApiEndpointConfigurationArgs struct {
	Types          pulumi.StringArrayInput `pulumi:"types"`
	VpcEndpointIds pulumi.StringArrayInput `pulumi:"vpcEndpointIds"`
}

func (RestApiEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiEndpointConfiguration)(nil)).Elem()
}

func (i RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput {
	return i.ToRestApiEndpointConfigurationOutputWithContext(context.Background())
}

func (i RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationOutputWithContext(ctx context.Context) RestApiEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiEndpointConfigurationOutput)
}

func (i RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationPtrOutput() RestApiEndpointConfigurationPtrOutput {
	return i.ToRestApiEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i RestApiEndpointConfigurationArgs) ToRestApiEndpointConfigurationPtrOutputWithContext(ctx context.Context) RestApiEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiEndpointConfigurationOutput).ToRestApiEndpointConfigurationPtrOutputWithContext(ctx)
}

// RestApiEndpointConfigurationPtrInput is an input type that accepts RestApiEndpointConfigurationArgs, RestApiEndpointConfigurationPtr and RestApiEndpointConfigurationPtrOutput values.
// You can construct a concrete instance of `RestApiEndpointConfigurationPtrInput` via:
//
//          RestApiEndpointConfigurationArgs{...}
//
//  or:
//
//          nil
type RestApiEndpointConfigurationPtrInput interface {
	pulumi.Input

	ToRestApiEndpointConfigurationPtrOutput() RestApiEndpointConfigurationPtrOutput
	ToRestApiEndpointConfigurationPtrOutputWithContext(context.Context) RestApiEndpointConfigurationPtrOutput
}

type restApiEndpointConfigurationPtrType RestApiEndpointConfigurationArgs

func RestApiEndpointConfigurationPtr(v *RestApiEndpointConfigurationArgs) RestApiEndpointConfigurationPtrInput {
	return (*restApiEndpointConfigurationPtrType)(v)
}

func (*restApiEndpointConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiEndpointConfiguration)(nil)).Elem()
}

func (i *restApiEndpointConfigurationPtrType) ToRestApiEndpointConfigurationPtrOutput() RestApiEndpointConfigurationPtrOutput {
	return i.ToRestApiEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i *restApiEndpointConfigurationPtrType) ToRestApiEndpointConfigurationPtrOutputWithContext(ctx context.Context) RestApiEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiEndpointConfigurationPtrOutput)
}

type RestApiEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (RestApiEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiEndpointConfiguration)(nil)).Elem()
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationOutput() RestApiEndpointConfigurationOutput {
	return o
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationOutputWithContext(ctx context.Context) RestApiEndpointConfigurationOutput {
	return o
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationPtrOutput() RestApiEndpointConfigurationPtrOutput {
	return o.ToRestApiEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (o RestApiEndpointConfigurationOutput) ToRestApiEndpointConfigurationPtrOutputWithContext(ctx context.Context) RestApiEndpointConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestApiEndpointConfiguration) *RestApiEndpointConfiguration {
		return &v
	}).(RestApiEndpointConfigurationPtrOutput)
}

func (o RestApiEndpointConfigurationOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestApiEndpointConfiguration) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func (o RestApiEndpointConfigurationOutput) VpcEndpointIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestApiEndpointConfiguration) []string { return v.VpcEndpointIds }).(pulumi.StringArrayOutput)
}

type RestApiEndpointConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RestApiEndpointConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiEndpointConfiguration)(nil)).Elem()
}

func (o RestApiEndpointConfigurationPtrOutput) ToRestApiEndpointConfigurationPtrOutput() RestApiEndpointConfigurationPtrOutput {
	return o
}

func (o RestApiEndpointConfigurationPtrOutput) ToRestApiEndpointConfigurationPtrOutputWithContext(ctx context.Context) RestApiEndpointConfigurationPtrOutput {
	return o
}

func (o RestApiEndpointConfigurationPtrOutput) Elem() RestApiEndpointConfigurationOutput {
	return o.ApplyT(func(v *RestApiEndpointConfiguration) RestApiEndpointConfiguration {
		if v != nil {
			return *v
		}
		var ret RestApiEndpointConfiguration
		return ret
	}).(RestApiEndpointConfigurationOutput)
}

func (o RestApiEndpointConfigurationPtrOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestApiEndpointConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Types
	}).(pulumi.StringArrayOutput)
}

func (o RestApiEndpointConfigurationPtrOutput) VpcEndpointIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestApiEndpointConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointIds
	}).(pulumi.StringArrayOutput)
}

type RestApiS3Location struct {
	Bucket  *string `pulumi:"bucket"`
	ETag    *string `pulumi:"eTag"`
	Key     *string `pulumi:"key"`
	Version *string `pulumi:"version"`
}

// RestApiS3LocationInput is an input type that accepts RestApiS3LocationArgs and RestApiS3LocationOutput values.
// You can construct a concrete instance of `RestApiS3LocationInput` via:
//
//          RestApiS3LocationArgs{...}
type RestApiS3LocationInput interface {
	pulumi.Input

	ToRestApiS3LocationOutput() RestApiS3LocationOutput
	ToRestApiS3LocationOutputWithContext(context.Context) RestApiS3LocationOutput
}

type RestApiS3LocationArgs struct {
	Bucket  pulumi.StringPtrInput `pulumi:"bucket"`
	ETag    pulumi.StringPtrInput `pulumi:"eTag"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (RestApiS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiS3Location)(nil)).Elem()
}

func (i RestApiS3LocationArgs) ToRestApiS3LocationOutput() RestApiS3LocationOutput {
	return i.ToRestApiS3LocationOutputWithContext(context.Background())
}

func (i RestApiS3LocationArgs) ToRestApiS3LocationOutputWithContext(ctx context.Context) RestApiS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiS3LocationOutput)
}

func (i RestApiS3LocationArgs) ToRestApiS3LocationPtrOutput() RestApiS3LocationPtrOutput {
	return i.ToRestApiS3LocationPtrOutputWithContext(context.Background())
}

func (i RestApiS3LocationArgs) ToRestApiS3LocationPtrOutputWithContext(ctx context.Context) RestApiS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiS3LocationOutput).ToRestApiS3LocationPtrOutputWithContext(ctx)
}

// RestApiS3LocationPtrInput is an input type that accepts RestApiS3LocationArgs, RestApiS3LocationPtr and RestApiS3LocationPtrOutput values.
// You can construct a concrete instance of `RestApiS3LocationPtrInput` via:
//
//          RestApiS3LocationArgs{...}
//
//  or:
//
//          nil
type RestApiS3LocationPtrInput interface {
	pulumi.Input

	ToRestApiS3LocationPtrOutput() RestApiS3LocationPtrOutput
	ToRestApiS3LocationPtrOutputWithContext(context.Context) RestApiS3LocationPtrOutput
}

type restApiS3LocationPtrType RestApiS3LocationArgs

func RestApiS3LocationPtr(v *RestApiS3LocationArgs) RestApiS3LocationPtrInput {
	return (*restApiS3LocationPtrType)(v)
}

func (*restApiS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiS3Location)(nil)).Elem()
}

func (i *restApiS3LocationPtrType) ToRestApiS3LocationPtrOutput() RestApiS3LocationPtrOutput {
	return i.ToRestApiS3LocationPtrOutputWithContext(context.Background())
}

func (i *restApiS3LocationPtrType) ToRestApiS3LocationPtrOutputWithContext(ctx context.Context) RestApiS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiS3LocationPtrOutput)
}

type RestApiS3LocationOutput struct{ *pulumi.OutputState }

func (RestApiS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiS3Location)(nil)).Elem()
}

func (o RestApiS3LocationOutput) ToRestApiS3LocationOutput() RestApiS3LocationOutput {
	return o
}

func (o RestApiS3LocationOutput) ToRestApiS3LocationOutputWithContext(ctx context.Context) RestApiS3LocationOutput {
	return o
}

func (o RestApiS3LocationOutput) ToRestApiS3LocationPtrOutput() RestApiS3LocationPtrOutput {
	return o.ToRestApiS3LocationPtrOutputWithContext(context.Background())
}

func (o RestApiS3LocationOutput) ToRestApiS3LocationPtrOutputWithContext(ctx context.Context) RestApiS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestApiS3Location) *RestApiS3Location {
		return &v
	}).(RestApiS3LocationPtrOutput)
}

func (o RestApiS3LocationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiS3Location) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiS3Location) *string { return v.ETag }).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiS3Location) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestApiS3Location) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type RestApiS3LocationPtrOutput struct{ *pulumi.OutputState }

func (RestApiS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestApiS3Location)(nil)).Elem()
}

func (o RestApiS3LocationPtrOutput) ToRestApiS3LocationPtrOutput() RestApiS3LocationPtrOutput {
	return o
}

func (o RestApiS3LocationPtrOutput) ToRestApiS3LocationPtrOutputWithContext(ctx context.Context) RestApiS3LocationPtrOutput {
	return o
}

func (o RestApiS3LocationPtrOutput) Elem() RestApiS3LocationOutput {
	return o.ApplyT(func(v *RestApiS3Location) RestApiS3Location {
		if v != nil {
			return *v
		}
		var ret RestApiS3Location
		return ret
	}).(RestApiS3LocationOutput)
}

func (o RestApiS3LocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationPtrOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiS3Location) *string {
		if v == nil {
			return nil
		}
		return v.ETag
	}).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RestApiS3LocationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestApiS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type RestApiTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// RestApiTagInput is an input type that accepts RestApiTagArgs and RestApiTagOutput values.
// You can construct a concrete instance of `RestApiTagInput` via:
//
//          RestApiTagArgs{...}
type RestApiTagInput interface {
	pulumi.Input

	ToRestApiTagOutput() RestApiTagOutput
	ToRestApiTagOutputWithContext(context.Context) RestApiTagOutput
}

type RestApiTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RestApiTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiTag)(nil)).Elem()
}

func (i RestApiTagArgs) ToRestApiTagOutput() RestApiTagOutput {
	return i.ToRestApiTagOutputWithContext(context.Background())
}

func (i RestApiTagArgs) ToRestApiTagOutputWithContext(ctx context.Context) RestApiTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiTagOutput)
}

// RestApiTagArrayInput is an input type that accepts RestApiTagArray and RestApiTagArrayOutput values.
// You can construct a concrete instance of `RestApiTagArrayInput` via:
//
//          RestApiTagArray{ RestApiTagArgs{...} }
type RestApiTagArrayInput interface {
	pulumi.Input

	ToRestApiTagArrayOutput() RestApiTagArrayOutput
	ToRestApiTagArrayOutputWithContext(context.Context) RestApiTagArrayOutput
}

type RestApiTagArray []RestApiTagInput

func (RestApiTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestApiTag)(nil)).Elem()
}

func (i RestApiTagArray) ToRestApiTagArrayOutput() RestApiTagArrayOutput {
	return i.ToRestApiTagArrayOutputWithContext(context.Background())
}

func (i RestApiTagArray) ToRestApiTagArrayOutputWithContext(ctx context.Context) RestApiTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiTagArrayOutput)
}

type RestApiTagOutput struct{ *pulumi.OutputState }

func (RestApiTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiTag)(nil)).Elem()
}

func (o RestApiTagOutput) ToRestApiTagOutput() RestApiTagOutput {
	return o
}

func (o RestApiTagOutput) ToRestApiTagOutputWithContext(ctx context.Context) RestApiTagOutput {
	return o
}

func (o RestApiTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o RestApiTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RestApiTag) string { return v.Value }).(pulumi.StringOutput)
}

type RestApiTagArrayOutput struct{ *pulumi.OutputState }

func (RestApiTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestApiTag)(nil)).Elem()
}

func (o RestApiTagArrayOutput) ToRestApiTagArrayOutput() RestApiTagArrayOutput {
	return o
}

func (o RestApiTagArrayOutput) ToRestApiTagArrayOutputWithContext(ctx context.Context) RestApiTagArrayOutput {
	return o
}

func (o RestApiTagArrayOutput) Index(i pulumi.IntInput) RestApiTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestApiTag {
		return vs[0].([]RestApiTag)[vs[1].(int)]
	}).(RestApiTagOutput)
}

// Specifies settings for logging access in this stage.
type StageAccessLogSetting struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. This parameter is required to enable access logging.
	DestinationArn *string `pulumi:"destinationArn"`
	// A single line format of the access logs of data, as specified by selected $context variables (https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference). The format must include at least $context.requestId. This parameter is required to enable access logging.
	Format *string `pulumi:"format"`
}

// StageAccessLogSettingInput is an input type that accepts StageAccessLogSettingArgs and StageAccessLogSettingOutput values.
// You can construct a concrete instance of `StageAccessLogSettingInput` via:
//
//          StageAccessLogSettingArgs{...}
type StageAccessLogSettingInput interface {
	pulumi.Input

	ToStageAccessLogSettingOutput() StageAccessLogSettingOutput
	ToStageAccessLogSettingOutputWithContext(context.Context) StageAccessLogSettingOutput
}

// Specifies settings for logging access in this stage.
type StageAccessLogSettingArgs struct {
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. This parameter is required to enable access logging.
	DestinationArn pulumi.StringPtrInput `pulumi:"destinationArn"`
	// A single line format of the access logs of data, as specified by selected $context variables (https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference). The format must include at least $context.requestId. This parameter is required to enable access logging.
	Format pulumi.StringPtrInput `pulumi:"format"`
}

func (StageAccessLogSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAccessLogSetting)(nil)).Elem()
}

func (i StageAccessLogSettingArgs) ToStageAccessLogSettingOutput() StageAccessLogSettingOutput {
	return i.ToStageAccessLogSettingOutputWithContext(context.Background())
}

func (i StageAccessLogSettingArgs) ToStageAccessLogSettingOutputWithContext(ctx context.Context) StageAccessLogSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingOutput)
}

func (i StageAccessLogSettingArgs) ToStageAccessLogSettingPtrOutput() StageAccessLogSettingPtrOutput {
	return i.ToStageAccessLogSettingPtrOutputWithContext(context.Background())
}

func (i StageAccessLogSettingArgs) ToStageAccessLogSettingPtrOutputWithContext(ctx context.Context) StageAccessLogSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingOutput).ToStageAccessLogSettingPtrOutputWithContext(ctx)
}

// StageAccessLogSettingPtrInput is an input type that accepts StageAccessLogSettingArgs, StageAccessLogSettingPtr and StageAccessLogSettingPtrOutput values.
// You can construct a concrete instance of `StageAccessLogSettingPtrInput` via:
//
//          StageAccessLogSettingArgs{...}
//
//  or:
//
//          nil
type StageAccessLogSettingPtrInput interface {
	pulumi.Input

	ToStageAccessLogSettingPtrOutput() StageAccessLogSettingPtrOutput
	ToStageAccessLogSettingPtrOutputWithContext(context.Context) StageAccessLogSettingPtrOutput
}

type stageAccessLogSettingPtrType StageAccessLogSettingArgs

func StageAccessLogSettingPtr(v *StageAccessLogSettingArgs) StageAccessLogSettingPtrInput {
	return (*stageAccessLogSettingPtrType)(v)
}

func (*stageAccessLogSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageAccessLogSetting)(nil)).Elem()
}

func (i *stageAccessLogSettingPtrType) ToStageAccessLogSettingPtrOutput() StageAccessLogSettingPtrOutput {
	return i.ToStageAccessLogSettingPtrOutputWithContext(context.Background())
}

func (i *stageAccessLogSettingPtrType) ToStageAccessLogSettingPtrOutputWithContext(ctx context.Context) StageAccessLogSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingPtrOutput)
}

// Specifies settings for logging access in this stage.
type StageAccessLogSettingOutput struct{ *pulumi.OutputState }

func (StageAccessLogSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAccessLogSetting)(nil)).Elem()
}

func (o StageAccessLogSettingOutput) ToStageAccessLogSettingOutput() StageAccessLogSettingOutput {
	return o
}

func (o StageAccessLogSettingOutput) ToStageAccessLogSettingOutputWithContext(ctx context.Context) StageAccessLogSettingOutput {
	return o
}

func (o StageAccessLogSettingOutput) ToStageAccessLogSettingPtrOutput() StageAccessLogSettingPtrOutput {
	return o.ToStageAccessLogSettingPtrOutputWithContext(context.Background())
}

func (o StageAccessLogSettingOutput) ToStageAccessLogSettingPtrOutputWithContext(ctx context.Context) StageAccessLogSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageAccessLogSetting) *StageAccessLogSetting {
		return &v
	}).(StageAccessLogSettingPtrOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. This parameter is required to enable access logging.
func (o StageAccessLogSettingOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageAccessLogSetting) *string { return v.DestinationArn }).(pulumi.StringPtrOutput)
}

// A single line format of the access logs of data, as specified by selected $context variables (https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference). The format must include at least $context.requestId. This parameter is required to enable access logging.
func (o StageAccessLogSettingOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageAccessLogSetting) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type StageAccessLogSettingPtrOutput struct{ *pulumi.OutputState }

func (StageAccessLogSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageAccessLogSetting)(nil)).Elem()
}

func (o StageAccessLogSettingPtrOutput) ToStageAccessLogSettingPtrOutput() StageAccessLogSettingPtrOutput {
	return o
}

func (o StageAccessLogSettingPtrOutput) ToStageAccessLogSettingPtrOutputWithContext(ctx context.Context) StageAccessLogSettingPtrOutput {
	return o
}

func (o StageAccessLogSettingPtrOutput) Elem() StageAccessLogSettingOutput {
	return o.ApplyT(func(v *StageAccessLogSetting) StageAccessLogSetting {
		if v != nil {
			return *v
		}
		var ret StageAccessLogSetting
		return ret
	}).(StageAccessLogSettingOutput)
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. This parameter is required to enable access logging.
func (o StageAccessLogSettingPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageAccessLogSetting) *string {
		if v == nil {
			return nil
		}
		return v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

// A single line format of the access logs of data, as specified by selected $context variables (https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference). The format must include at least $context.requestId. This parameter is required to enable access logging.
func (o StageAccessLogSettingPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageAccessLogSetting) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Specifies settings for the canary deployment in this stage.
type StageCanarySetting struct {
	// The identifier of the deployment that the stage points to.
	DeploymentId *string `pulumi:"deploymentId"`
	// The percentage (0-100) of traffic diverted to a canary deployment.
	PercentTraffic *float64 `pulumi:"percentTraffic"`
	// Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.
	StageVariableOverrides interface{} `pulumi:"stageVariableOverrides"`
	// Whether the canary deployment uses the stage cache or not.
	UseStageCache *bool `pulumi:"useStageCache"`
}

// StageCanarySettingInput is an input type that accepts StageCanarySettingArgs and StageCanarySettingOutput values.
// You can construct a concrete instance of `StageCanarySettingInput` via:
//
//          StageCanarySettingArgs{...}
type StageCanarySettingInput interface {
	pulumi.Input

	ToStageCanarySettingOutput() StageCanarySettingOutput
	ToStageCanarySettingOutputWithContext(context.Context) StageCanarySettingOutput
}

// Specifies settings for the canary deployment in this stage.
type StageCanarySettingArgs struct {
	// The identifier of the deployment that the stage points to.
	DeploymentId pulumi.StringPtrInput `pulumi:"deploymentId"`
	// The percentage (0-100) of traffic diverted to a canary deployment.
	PercentTraffic pulumi.Float64PtrInput `pulumi:"percentTraffic"`
	// Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.
	StageVariableOverrides pulumi.Input `pulumi:"stageVariableOverrides"`
	// Whether the canary deployment uses the stage cache or not.
	UseStageCache pulumi.BoolPtrInput `pulumi:"useStageCache"`
}

func (StageCanarySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageCanarySetting)(nil)).Elem()
}

func (i StageCanarySettingArgs) ToStageCanarySettingOutput() StageCanarySettingOutput {
	return i.ToStageCanarySettingOutputWithContext(context.Background())
}

func (i StageCanarySettingArgs) ToStageCanarySettingOutputWithContext(ctx context.Context) StageCanarySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageCanarySettingOutput)
}

func (i StageCanarySettingArgs) ToStageCanarySettingPtrOutput() StageCanarySettingPtrOutput {
	return i.ToStageCanarySettingPtrOutputWithContext(context.Background())
}

func (i StageCanarySettingArgs) ToStageCanarySettingPtrOutputWithContext(ctx context.Context) StageCanarySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageCanarySettingOutput).ToStageCanarySettingPtrOutputWithContext(ctx)
}

// StageCanarySettingPtrInput is an input type that accepts StageCanarySettingArgs, StageCanarySettingPtr and StageCanarySettingPtrOutput values.
// You can construct a concrete instance of `StageCanarySettingPtrInput` via:
//
//          StageCanarySettingArgs{...}
//
//  or:
//
//          nil
type StageCanarySettingPtrInput interface {
	pulumi.Input

	ToStageCanarySettingPtrOutput() StageCanarySettingPtrOutput
	ToStageCanarySettingPtrOutputWithContext(context.Context) StageCanarySettingPtrOutput
}

type stageCanarySettingPtrType StageCanarySettingArgs

func StageCanarySettingPtr(v *StageCanarySettingArgs) StageCanarySettingPtrInput {
	return (*stageCanarySettingPtrType)(v)
}

func (*stageCanarySettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageCanarySetting)(nil)).Elem()
}

func (i *stageCanarySettingPtrType) ToStageCanarySettingPtrOutput() StageCanarySettingPtrOutput {
	return i.ToStageCanarySettingPtrOutputWithContext(context.Background())
}

func (i *stageCanarySettingPtrType) ToStageCanarySettingPtrOutputWithContext(ctx context.Context) StageCanarySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageCanarySettingPtrOutput)
}

// Specifies settings for the canary deployment in this stage.
type StageCanarySettingOutput struct{ *pulumi.OutputState }

func (StageCanarySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageCanarySetting)(nil)).Elem()
}

func (o StageCanarySettingOutput) ToStageCanarySettingOutput() StageCanarySettingOutput {
	return o
}

func (o StageCanarySettingOutput) ToStageCanarySettingOutputWithContext(ctx context.Context) StageCanarySettingOutput {
	return o
}

func (o StageCanarySettingOutput) ToStageCanarySettingPtrOutput() StageCanarySettingPtrOutput {
	return o.ToStageCanarySettingPtrOutputWithContext(context.Background())
}

func (o StageCanarySettingOutput) ToStageCanarySettingPtrOutputWithContext(ctx context.Context) StageCanarySettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StageCanarySetting) *StageCanarySetting {
		return &v
	}).(StageCanarySettingPtrOutput)
}

// The identifier of the deployment that the stage points to.
func (o StageCanarySettingOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageCanarySetting) *string { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// The percentage (0-100) of traffic diverted to a canary deployment.
func (o StageCanarySettingOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StageCanarySetting) *float64 { return v.PercentTraffic }).(pulumi.Float64PtrOutput)
}

// Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.
func (o StageCanarySettingOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v StageCanarySetting) interface{} { return v.StageVariableOverrides }).(pulumi.AnyOutput)
}

// Whether the canary deployment uses the stage cache or not.
func (o StageCanarySettingOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageCanarySetting) *bool { return v.UseStageCache }).(pulumi.BoolPtrOutput)
}

type StageCanarySettingPtrOutput struct{ *pulumi.OutputState }

func (StageCanarySettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageCanarySetting)(nil)).Elem()
}

func (o StageCanarySettingPtrOutput) ToStageCanarySettingPtrOutput() StageCanarySettingPtrOutput {
	return o
}

func (o StageCanarySettingPtrOutput) ToStageCanarySettingPtrOutputWithContext(ctx context.Context) StageCanarySettingPtrOutput {
	return o
}

func (o StageCanarySettingPtrOutput) Elem() StageCanarySettingOutput {
	return o.ApplyT(func(v *StageCanarySetting) StageCanarySetting {
		if v != nil {
			return *v
		}
		var ret StageCanarySetting
		return ret
	}).(StageCanarySettingOutput)
}

// The identifier of the deployment that the stage points to.
func (o StageCanarySettingPtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageCanarySetting) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

// The percentage (0-100) of traffic diverted to a canary deployment.
func (o StageCanarySettingPtrOutput) PercentTraffic() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StageCanarySetting) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentTraffic
	}).(pulumi.Float64PtrOutput)
}

// Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.
func (o StageCanarySettingPtrOutput) StageVariableOverrides() pulumi.AnyOutput {
	return o.ApplyT(func(v *StageCanarySetting) interface{} {
		if v == nil {
			return nil
		}
		return v.StageVariableOverrides
	}).(pulumi.AnyOutput)
}

// Whether the canary deployment uses the stage cache or not.
func (o StageCanarySettingPtrOutput) UseStageCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageCanarySetting) *bool {
		if v == nil {
			return nil
		}
		return v.UseStageCache
	}).(pulumi.BoolPtrOutput)
}

// Configures settings for all methods in a stage.
type StageMethodSetting struct {
	// Indicates whether the cached responses are encrypted.
	CacheDataEncrypted *bool `pulumi:"cacheDataEncrypted"`
	// The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
	CacheTtlInSeconds *int `pulumi:"cacheTtlInSeconds"`
	// Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
	CachingEnabled *bool `pulumi:"cachingEnabled"`
	// Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
	DataTraceEnabled *bool `pulumi:"dataTraceEnabled"`
	// The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
	HttpMethod *string `pulumi:"httpMethod"`
	// The logging level for this method. For valid values, see the loggingLevel property of the Stage (https://docs.aws.amazon.com/apigateway/api-reference/resource/stage/#loggingLevel) resource in the Amazon API Gateway API Reference.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
	MetricsEnabled *bool `pulumi:"metricsEnabled"`
	// The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash. For example, the path value /resource/subresource must be encoded as /~1resource~1subresource. To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
	ResourcePath *string `pulumi:"resourcePath"`
	// The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
	ThrottlingBurstLimit *int `pulumi:"throttlingBurstLimit"`
	// The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
	ThrottlingRateLimit *float64 `pulumi:"throttlingRateLimit"`
}

// StageMethodSettingInput is an input type that accepts StageMethodSettingArgs and StageMethodSettingOutput values.
// You can construct a concrete instance of `StageMethodSettingInput` via:
//
//          StageMethodSettingArgs{...}
type StageMethodSettingInput interface {
	pulumi.Input

	ToStageMethodSettingOutput() StageMethodSettingOutput
	ToStageMethodSettingOutputWithContext(context.Context) StageMethodSettingOutput
}

// Configures settings for all methods in a stage.
type StageMethodSettingArgs struct {
	// Indicates whether the cached responses are encrypted.
	CacheDataEncrypted pulumi.BoolPtrInput `pulumi:"cacheDataEncrypted"`
	// The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
	CacheTtlInSeconds pulumi.IntPtrInput `pulumi:"cacheTtlInSeconds"`
	// Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
	CachingEnabled pulumi.BoolPtrInput `pulumi:"cachingEnabled"`
	// Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
	DataTraceEnabled pulumi.BoolPtrInput `pulumi:"dataTraceEnabled"`
	// The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// The logging level for this method. For valid values, see the loggingLevel property of the Stage (https://docs.aws.amazon.com/apigateway/api-reference/resource/stage/#loggingLevel) resource in the Amazon API Gateway API Reference.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
	MetricsEnabled pulumi.BoolPtrInput `pulumi:"metricsEnabled"`
	// The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash. For example, the path value /resource/subresource must be encoded as /~1resource~1subresource. To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
	ResourcePath pulumi.StringPtrInput `pulumi:"resourcePath"`
	// The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
	ThrottlingBurstLimit pulumi.IntPtrInput `pulumi:"throttlingBurstLimit"`
	// The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
	ThrottlingRateLimit pulumi.Float64PtrInput `pulumi:"throttlingRateLimit"`
}

func (StageMethodSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageMethodSetting)(nil)).Elem()
}

func (i StageMethodSettingArgs) ToStageMethodSettingOutput() StageMethodSettingOutput {
	return i.ToStageMethodSettingOutputWithContext(context.Background())
}

func (i StageMethodSettingArgs) ToStageMethodSettingOutputWithContext(ctx context.Context) StageMethodSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageMethodSettingOutput)
}

// StageMethodSettingArrayInput is an input type that accepts StageMethodSettingArray and StageMethodSettingArrayOutput values.
// You can construct a concrete instance of `StageMethodSettingArrayInput` via:
//
//          StageMethodSettingArray{ StageMethodSettingArgs{...} }
type StageMethodSettingArrayInput interface {
	pulumi.Input

	ToStageMethodSettingArrayOutput() StageMethodSettingArrayOutput
	ToStageMethodSettingArrayOutputWithContext(context.Context) StageMethodSettingArrayOutput
}

type StageMethodSettingArray []StageMethodSettingInput

func (StageMethodSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageMethodSetting)(nil)).Elem()
}

func (i StageMethodSettingArray) ToStageMethodSettingArrayOutput() StageMethodSettingArrayOutput {
	return i.ToStageMethodSettingArrayOutputWithContext(context.Background())
}

func (i StageMethodSettingArray) ToStageMethodSettingArrayOutputWithContext(ctx context.Context) StageMethodSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageMethodSettingArrayOutput)
}

// Configures settings for all methods in a stage.
type StageMethodSettingOutput struct{ *pulumi.OutputState }

func (StageMethodSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageMethodSetting)(nil)).Elem()
}

func (o StageMethodSettingOutput) ToStageMethodSettingOutput() StageMethodSettingOutput {
	return o
}

func (o StageMethodSettingOutput) ToStageMethodSettingOutputWithContext(ctx context.Context) StageMethodSettingOutput {
	return o
}

// Indicates whether the cached responses are encrypted.
func (o StageMethodSettingOutput) CacheDataEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *bool { return v.CacheDataEncrypted }).(pulumi.BoolPtrOutput)
}

// The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
func (o StageMethodSettingOutput) CacheTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *int { return v.CacheTtlInSeconds }).(pulumi.IntPtrOutput)
}

// Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
func (o StageMethodSettingOutput) CachingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *bool { return v.CachingEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
func (o StageMethodSettingOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

// The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
func (o StageMethodSettingOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// The logging level for this method. For valid values, see the loggingLevel property of the Stage (https://docs.aws.amazon.com/apigateway/api-reference/resource/stage/#loggingLevel) resource in the Amazon API Gateway API Reference.
func (o StageMethodSettingOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
func (o StageMethodSettingOutput) MetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *bool { return v.MetricsEnabled }).(pulumi.BoolPtrOutput)
}

// The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash. For example, the path value /resource/subresource must be encoded as /~1resource~1subresource. To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
func (o StageMethodSettingOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

// The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
func (o StageMethodSettingOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

// The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
func (o StageMethodSettingOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StageMethodSetting) *float64 { return v.ThrottlingRateLimit }).(pulumi.Float64PtrOutput)
}

type StageMethodSettingArrayOutput struct{ *pulumi.OutputState }

func (StageMethodSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageMethodSetting)(nil)).Elem()
}

func (o StageMethodSettingArrayOutput) ToStageMethodSettingArrayOutput() StageMethodSettingArrayOutput {
	return o
}

func (o StageMethodSettingArrayOutput) ToStageMethodSettingArrayOutputWithContext(ctx context.Context) StageMethodSettingArrayOutput {
	return o
}

func (o StageMethodSettingArrayOutput) Index(i pulumi.IntInput) StageMethodSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageMethodSetting {
		return vs[0].([]StageMethodSetting)[vs[1].(int)]
	}).(StageMethodSettingOutput)
}

// Identify and categorize resources.
type StageTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:.
	Value string `pulumi:"value"`
}

// StageTagInput is an input type that accepts StageTagArgs and StageTagOutput values.
// You can construct a concrete instance of `StageTagInput` via:
//
//          StageTagArgs{...}
type StageTagInput interface {
	pulumi.Input

	ToStageTagOutput() StageTagOutput
	ToStageTagOutputWithContext(context.Context) StageTagOutput
}

// Identify and categorize resources.
type StageTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageTag)(nil)).Elem()
}

func (i StageTagArgs) ToStageTagOutput() StageTagOutput {
	return i.ToStageTagOutputWithContext(context.Background())
}

func (i StageTagArgs) ToStageTagOutputWithContext(ctx context.Context) StageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageTagOutput)
}

// StageTagArrayInput is an input type that accepts StageTagArray and StageTagArrayOutput values.
// You can construct a concrete instance of `StageTagArrayInput` via:
//
//          StageTagArray{ StageTagArgs{...} }
type StageTagArrayInput interface {
	pulumi.Input

	ToStageTagArrayOutput() StageTagArrayOutput
	ToStageTagArrayOutputWithContext(context.Context) StageTagArrayOutput
}

type StageTagArray []StageTagInput

func (StageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageTag)(nil)).Elem()
}

func (i StageTagArray) ToStageTagArrayOutput() StageTagArrayOutput {
	return i.ToStageTagArrayOutputWithContext(context.Background())
}

func (i StageTagArray) ToStageTagArrayOutputWithContext(ctx context.Context) StageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageTagArrayOutput)
}

// Identify and categorize resources.
type StageTagOutput struct{ *pulumi.OutputState }

func (StageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageTag)(nil)).Elem()
}

func (o StageTagOutput) ToStageTagOutput() StageTagOutput {
	return o
}

func (o StageTagOutput) ToStageTagOutputWithContext(ctx context.Context) StageTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:.
func (o StageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v StageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:.
func (o StageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StageTag) string { return v.Value }).(pulumi.StringOutput)
}

type StageTagArrayOutput struct{ *pulumi.OutputState }

func (StageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageTag)(nil)).Elem()
}

func (o StageTagArrayOutput) ToStageTagArrayOutput() StageTagArrayOutput {
	return o
}

func (o StageTagArrayOutput) ToStageTagArrayOutputWithContext(ctx context.Context) StageTagArrayOutput {
	return o
}

func (o StageTagArrayOutput) Index(i pulumi.IntInput) StageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageTag {
		return vs[0].([]StageTag)[vs[1].(int)]
	}).(StageTagOutput)
}

type UsagePlanApiStage struct {
	// The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
	ApiId *string `pulumi:"apiId"`
	// The name of the stage to associate with the usage plan.
	Stage *string `pulumi:"stage"`
	// Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed.
	Throttle interface{} `pulumi:"throttle"`
}

// UsagePlanApiStageInput is an input type that accepts UsagePlanApiStageArgs and UsagePlanApiStageOutput values.
// You can construct a concrete instance of `UsagePlanApiStageInput` via:
//
//          UsagePlanApiStageArgs{...}
type UsagePlanApiStageInput interface {
	pulumi.Input

	ToUsagePlanApiStageOutput() UsagePlanApiStageOutput
	ToUsagePlanApiStageOutputWithContext(context.Context) UsagePlanApiStageOutput
}

type UsagePlanApiStageArgs struct {
	// The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
	ApiId pulumi.StringPtrInput `pulumi:"apiId"`
	// The name of the stage to associate with the usage plan.
	Stage pulumi.StringPtrInput `pulumi:"stage"`
	// Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed.
	Throttle pulumi.Input `pulumi:"throttle"`
}

func (UsagePlanApiStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanApiStage)(nil)).Elem()
}

func (i UsagePlanApiStageArgs) ToUsagePlanApiStageOutput() UsagePlanApiStageOutput {
	return i.ToUsagePlanApiStageOutputWithContext(context.Background())
}

func (i UsagePlanApiStageArgs) ToUsagePlanApiStageOutputWithContext(ctx context.Context) UsagePlanApiStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanApiStageOutput)
}

// UsagePlanApiStageArrayInput is an input type that accepts UsagePlanApiStageArray and UsagePlanApiStageArrayOutput values.
// You can construct a concrete instance of `UsagePlanApiStageArrayInput` via:
//
//          UsagePlanApiStageArray{ UsagePlanApiStageArgs{...} }
type UsagePlanApiStageArrayInput interface {
	pulumi.Input

	ToUsagePlanApiStageArrayOutput() UsagePlanApiStageArrayOutput
	ToUsagePlanApiStageArrayOutputWithContext(context.Context) UsagePlanApiStageArrayOutput
}

type UsagePlanApiStageArray []UsagePlanApiStageInput

func (UsagePlanApiStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanApiStage)(nil)).Elem()
}

func (i UsagePlanApiStageArray) ToUsagePlanApiStageArrayOutput() UsagePlanApiStageArrayOutput {
	return i.ToUsagePlanApiStageArrayOutputWithContext(context.Background())
}

func (i UsagePlanApiStageArray) ToUsagePlanApiStageArrayOutputWithContext(ctx context.Context) UsagePlanApiStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanApiStageArrayOutput)
}

type UsagePlanApiStageOutput struct{ *pulumi.OutputState }

func (UsagePlanApiStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanApiStage)(nil)).Elem()
}

func (o UsagePlanApiStageOutput) ToUsagePlanApiStageOutput() UsagePlanApiStageOutput {
	return o
}

func (o UsagePlanApiStageOutput) ToUsagePlanApiStageOutputWithContext(ctx context.Context) UsagePlanApiStageOutput {
	return o
}

// The ID of an API that is in the specified Stage property that you want to associate with the usage plan.
func (o UsagePlanApiStageOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanApiStage) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// The name of the stage to associate with the usage plan.
func (o UsagePlanApiStageOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanApiStage) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

// Map containing method-level throttling information for an API stage in a usage plan. The key for the map is the path and method for which to configure custom throttling, for example, '/pets/GET'. Duplicates are not allowed.
func (o UsagePlanApiStageOutput) Throttle() pulumi.AnyOutput {
	return o.ApplyT(func(v UsagePlanApiStage) interface{} { return v.Throttle }).(pulumi.AnyOutput)
}

type UsagePlanApiStageArrayOutput struct{ *pulumi.OutputState }

func (UsagePlanApiStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanApiStage)(nil)).Elem()
}

func (o UsagePlanApiStageArrayOutput) ToUsagePlanApiStageArrayOutput() UsagePlanApiStageArrayOutput {
	return o
}

func (o UsagePlanApiStageArrayOutput) ToUsagePlanApiStageArrayOutputWithContext(ctx context.Context) UsagePlanApiStageArrayOutput {
	return o
}

func (o UsagePlanApiStageArrayOutput) Index(i pulumi.IntInput) UsagePlanApiStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsagePlanApiStage {
		return vs[0].([]UsagePlanApiStage)[vs[1].(int)]
	}).(UsagePlanApiStageOutput)
}

type UsagePlanQuotaSettings struct {
	// The maximum number of requests that users can make within the specified time period.
	Limit *int `pulumi:"limit"`
	// For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period.
	Offset *int `pulumi:"offset"`
	// The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference.
	Period *string `pulumi:"period"`
}

// UsagePlanQuotaSettingsInput is an input type that accepts UsagePlanQuotaSettingsArgs and UsagePlanQuotaSettingsOutput values.
// You can construct a concrete instance of `UsagePlanQuotaSettingsInput` via:
//
//          UsagePlanQuotaSettingsArgs{...}
type UsagePlanQuotaSettingsInput interface {
	pulumi.Input

	ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput
	ToUsagePlanQuotaSettingsOutputWithContext(context.Context) UsagePlanQuotaSettingsOutput
}

type UsagePlanQuotaSettingsArgs struct {
	// The maximum number of requests that users can make within the specified time period.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference.
	Period pulumi.StringPtrInput `pulumi:"period"`
}

func (UsagePlanQuotaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanQuotaSettings)(nil)).Elem()
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput {
	return i.ToUsagePlanQuotaSettingsOutputWithContext(context.Background())
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsOutput)
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return i.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsOutput).ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx)
}

// UsagePlanQuotaSettingsPtrInput is an input type that accepts UsagePlanQuotaSettingsArgs, UsagePlanQuotaSettingsPtr and UsagePlanQuotaSettingsPtrOutput values.
// You can construct a concrete instance of `UsagePlanQuotaSettingsPtrInput` via:
//
//          UsagePlanQuotaSettingsArgs{...}
//
//  or:
//
//          nil
type UsagePlanQuotaSettingsPtrInput interface {
	pulumi.Input

	ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput
	ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Context) UsagePlanQuotaSettingsPtrOutput
}

type usagePlanQuotaSettingsPtrType UsagePlanQuotaSettingsArgs

func UsagePlanQuotaSettingsPtr(v *UsagePlanQuotaSettingsArgs) UsagePlanQuotaSettingsPtrInput {
	return (*usagePlanQuotaSettingsPtrType)(v)
}

func (*usagePlanQuotaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanQuotaSettings)(nil)).Elem()
}

func (i *usagePlanQuotaSettingsPtrType) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return i.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (i *usagePlanQuotaSettingsPtrType) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsPtrOutput)
}

type UsagePlanQuotaSettingsOutput struct{ *pulumi.OutputState }

func (UsagePlanQuotaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanQuotaSettings)(nil)).Elem()
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput {
	return o
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsOutput {
	return o
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return o.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UsagePlanQuotaSettings) *UsagePlanQuotaSettings {
		return &v
	}).(UsagePlanQuotaSettingsPtrOutput)
}

// The maximum number of requests that users can make within the specified time period.
func (o UsagePlanQuotaSettingsOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UsagePlanQuotaSettings) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period.
func (o UsagePlanQuotaSettingsOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UsagePlanQuotaSettings) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference.
func (o UsagePlanQuotaSettingsOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsagePlanQuotaSettings) *string { return v.Period }).(pulumi.StringPtrOutput)
}

type UsagePlanQuotaSettingsPtrOutput struct{ *pulumi.OutputState }

func (UsagePlanQuotaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanQuotaSettings)(nil)).Elem()
}

func (o UsagePlanQuotaSettingsPtrOutput) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return o
}

func (o UsagePlanQuotaSettingsPtrOutput) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return o
}

func (o UsagePlanQuotaSettingsPtrOutput) Elem() UsagePlanQuotaSettingsOutput {
	return o.ApplyT(func(v *UsagePlanQuotaSettings) UsagePlanQuotaSettings {
		if v != nil {
			return *v
		}
		var ret UsagePlanQuotaSettings
		return ret
	}).(UsagePlanQuotaSettingsOutput)
}

// The maximum number of requests that users can make within the specified time period.
func (o UsagePlanQuotaSettingsPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UsagePlanQuotaSettings) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// For the initial time period, the number of requests to subtract from the specified limit. When you first implement a usage plan, the plan might start in the middle of the week or month. With this property, you can decrease the limit for this initial time period.
func (o UsagePlanQuotaSettingsPtrOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UsagePlanQuotaSettings) *int {
		if v == nil {
			return nil
		}
		return v.Offset
	}).(pulumi.IntPtrOutput)
}

// The time period for which the maximum limit of requests applies, such as DAY or WEEK. For valid values, see the period property for the UsagePlan resource in the Amazon API Gateway REST API Reference.
func (o UsagePlanQuotaSettingsPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UsagePlanQuotaSettings) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

type UsagePlanTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// UsagePlanTagInput is an input type that accepts UsagePlanTagArgs and UsagePlanTagOutput values.
// You can construct a concrete instance of `UsagePlanTagInput` via:
//
//          UsagePlanTagArgs{...}
type UsagePlanTagInput interface {
	pulumi.Input

	ToUsagePlanTagOutput() UsagePlanTagOutput
	ToUsagePlanTagOutputWithContext(context.Context) UsagePlanTagOutput
}

type UsagePlanTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (UsagePlanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanTag)(nil)).Elem()
}

func (i UsagePlanTagArgs) ToUsagePlanTagOutput() UsagePlanTagOutput {
	return i.ToUsagePlanTagOutputWithContext(context.Background())
}

func (i UsagePlanTagArgs) ToUsagePlanTagOutputWithContext(ctx context.Context) UsagePlanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanTagOutput)
}

// UsagePlanTagArrayInput is an input type that accepts UsagePlanTagArray and UsagePlanTagArrayOutput values.
// You can construct a concrete instance of `UsagePlanTagArrayInput` via:
//
//          UsagePlanTagArray{ UsagePlanTagArgs{...} }
type UsagePlanTagArrayInput interface {
	pulumi.Input

	ToUsagePlanTagArrayOutput() UsagePlanTagArrayOutput
	ToUsagePlanTagArrayOutputWithContext(context.Context) UsagePlanTagArrayOutput
}

type UsagePlanTagArray []UsagePlanTagInput

func (UsagePlanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanTag)(nil)).Elem()
}

func (i UsagePlanTagArray) ToUsagePlanTagArrayOutput() UsagePlanTagArrayOutput {
	return i.ToUsagePlanTagArrayOutputWithContext(context.Background())
}

func (i UsagePlanTagArray) ToUsagePlanTagArrayOutputWithContext(ctx context.Context) UsagePlanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanTagArrayOutput)
}

type UsagePlanTagOutput struct{ *pulumi.OutputState }

func (UsagePlanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanTag)(nil)).Elem()
}

func (o UsagePlanTagOutput) ToUsagePlanTagOutput() UsagePlanTagOutput {
	return o
}

func (o UsagePlanTagOutput) ToUsagePlanTagOutputWithContext(ctx context.Context) UsagePlanTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UsagePlanTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UsagePlanTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UsagePlanTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UsagePlanTag) string { return v.Value }).(pulumi.StringOutput)
}

type UsagePlanTagArrayOutput struct{ *pulumi.OutputState }

func (UsagePlanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsagePlanTag)(nil)).Elem()
}

func (o UsagePlanTagArrayOutput) ToUsagePlanTagArrayOutput() UsagePlanTagArrayOutput {
	return o
}

func (o UsagePlanTagArrayOutput) ToUsagePlanTagArrayOutputWithContext(ctx context.Context) UsagePlanTagArrayOutput {
	return o
}

func (o UsagePlanTagArrayOutput) Index(i pulumi.IntInput) UsagePlanTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsagePlanTag {
		return vs[0].([]UsagePlanTag)[vs[1].(int)]
	}).(UsagePlanTagOutput)
}

type UsagePlanThrottleSettings struct {
	// The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
	BurstLimit *int `pulumi:"burstLimit"`
	// The API request steady-state rate limit (average requests per second over an extended period of time).
	RateLimit *float64 `pulumi:"rateLimit"`
}

// UsagePlanThrottleSettingsInput is an input type that accepts UsagePlanThrottleSettingsArgs and UsagePlanThrottleSettingsOutput values.
// You can construct a concrete instance of `UsagePlanThrottleSettingsInput` via:
//
//          UsagePlanThrottleSettingsArgs{...}
type UsagePlanThrottleSettingsInput interface {
	pulumi.Input

	ToUsagePlanThrottleSettingsOutput() UsagePlanThrottleSettingsOutput
	ToUsagePlanThrottleSettingsOutputWithContext(context.Context) UsagePlanThrottleSettingsOutput
}

type UsagePlanThrottleSettingsArgs struct {
	// The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
	BurstLimit pulumi.IntPtrInput `pulumi:"burstLimit"`
	// The API request steady-state rate limit (average requests per second over an extended period of time).
	RateLimit pulumi.Float64PtrInput `pulumi:"rateLimit"`
}

func (UsagePlanThrottleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanThrottleSettings)(nil)).Elem()
}

func (i UsagePlanThrottleSettingsArgs) ToUsagePlanThrottleSettingsOutput() UsagePlanThrottleSettingsOutput {
	return i.ToUsagePlanThrottleSettingsOutputWithContext(context.Background())
}

func (i UsagePlanThrottleSettingsArgs) ToUsagePlanThrottleSettingsOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanThrottleSettingsOutput)
}

func (i UsagePlanThrottleSettingsArgs) ToUsagePlanThrottleSettingsPtrOutput() UsagePlanThrottleSettingsPtrOutput {
	return i.ToUsagePlanThrottleSettingsPtrOutputWithContext(context.Background())
}

func (i UsagePlanThrottleSettingsArgs) ToUsagePlanThrottleSettingsPtrOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanThrottleSettingsOutput).ToUsagePlanThrottleSettingsPtrOutputWithContext(ctx)
}

// UsagePlanThrottleSettingsPtrInput is an input type that accepts UsagePlanThrottleSettingsArgs, UsagePlanThrottleSettingsPtr and UsagePlanThrottleSettingsPtrOutput values.
// You can construct a concrete instance of `UsagePlanThrottleSettingsPtrInput` via:
//
//          UsagePlanThrottleSettingsArgs{...}
//
//  or:
//
//          nil
type UsagePlanThrottleSettingsPtrInput interface {
	pulumi.Input

	ToUsagePlanThrottleSettingsPtrOutput() UsagePlanThrottleSettingsPtrOutput
	ToUsagePlanThrottleSettingsPtrOutputWithContext(context.Context) UsagePlanThrottleSettingsPtrOutput
}

type usagePlanThrottleSettingsPtrType UsagePlanThrottleSettingsArgs

func UsagePlanThrottleSettingsPtr(v *UsagePlanThrottleSettingsArgs) UsagePlanThrottleSettingsPtrInput {
	return (*usagePlanThrottleSettingsPtrType)(v)
}

func (*usagePlanThrottleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanThrottleSettings)(nil)).Elem()
}

func (i *usagePlanThrottleSettingsPtrType) ToUsagePlanThrottleSettingsPtrOutput() UsagePlanThrottleSettingsPtrOutput {
	return i.ToUsagePlanThrottleSettingsPtrOutputWithContext(context.Background())
}

func (i *usagePlanThrottleSettingsPtrType) ToUsagePlanThrottleSettingsPtrOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanThrottleSettingsPtrOutput)
}

type UsagePlanThrottleSettingsOutput struct{ *pulumi.OutputState }

func (UsagePlanThrottleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanThrottleSettings)(nil)).Elem()
}

func (o UsagePlanThrottleSettingsOutput) ToUsagePlanThrottleSettingsOutput() UsagePlanThrottleSettingsOutput {
	return o
}

func (o UsagePlanThrottleSettingsOutput) ToUsagePlanThrottleSettingsOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsOutput {
	return o
}

func (o UsagePlanThrottleSettingsOutput) ToUsagePlanThrottleSettingsPtrOutput() UsagePlanThrottleSettingsPtrOutput {
	return o.ToUsagePlanThrottleSettingsPtrOutputWithContext(context.Background())
}

func (o UsagePlanThrottleSettingsOutput) ToUsagePlanThrottleSettingsPtrOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UsagePlanThrottleSettings) *UsagePlanThrottleSettings {
		return &v
	}).(UsagePlanThrottleSettingsPtrOutput)
}

// The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
func (o UsagePlanThrottleSettingsOutput) BurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UsagePlanThrottleSettings) *int { return v.BurstLimit }).(pulumi.IntPtrOutput)
}

// The API request steady-state rate limit (average requests per second over an extended period of time).
func (o UsagePlanThrottleSettingsOutput) RateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v UsagePlanThrottleSettings) *float64 { return v.RateLimit }).(pulumi.Float64PtrOutput)
}

type UsagePlanThrottleSettingsPtrOutput struct{ *pulumi.OutputState }

func (UsagePlanThrottleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanThrottleSettings)(nil)).Elem()
}

func (o UsagePlanThrottleSettingsPtrOutput) ToUsagePlanThrottleSettingsPtrOutput() UsagePlanThrottleSettingsPtrOutput {
	return o
}

func (o UsagePlanThrottleSettingsPtrOutput) ToUsagePlanThrottleSettingsPtrOutputWithContext(ctx context.Context) UsagePlanThrottleSettingsPtrOutput {
	return o
}

func (o UsagePlanThrottleSettingsPtrOutput) Elem() UsagePlanThrottleSettingsOutput {
	return o.ApplyT(func(v *UsagePlanThrottleSettings) UsagePlanThrottleSettings {
		if v != nil {
			return *v
		}
		var ret UsagePlanThrottleSettings
		return ret
	}).(UsagePlanThrottleSettingsOutput)
}

// The maximum API request rate limit over a time ranging from one to a few seconds. The maximum API request rate limit depends on whether the underlying token bucket is at its full capacity.
func (o UsagePlanThrottleSettingsPtrOutput) BurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UsagePlanThrottleSettings) *int {
		if v == nil {
			return nil
		}
		return v.BurstLimit
	}).(pulumi.IntPtrOutput)
}

// The API request steady-state rate limit (average requests per second over an extended period of time).
func (o UsagePlanThrottleSettingsPtrOutput) RateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UsagePlanThrottleSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.RateLimit
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyStageKeyOutput{})
	pulumi.RegisterOutputType(ApiKeyStageKeyArrayOutput{})
	pulumi.RegisterOutputType(ApiKeyTagOutput{})
	pulumi.RegisterOutputType(ApiKeyTagArrayOutput{})
	pulumi.RegisterOutputType(ClientCertificateTagOutput{})
	pulumi.RegisterOutputType(ClientCertificateTagArrayOutput{})
	pulumi.RegisterOutputType(DeploymentAccessLogSettingOutput{})
	pulumi.RegisterOutputType(DeploymentAccessLogSettingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentCanarySettingOutput{})
	pulumi.RegisterOutputType(DeploymentCanarySettingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentCanarySettingsOutput{})
	pulumi.RegisterOutputType(DeploymentCanarySettingsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentMethodSettingOutput{})
	pulumi.RegisterOutputType(DeploymentMethodSettingArrayOutput{})
	pulumi.RegisterOutputType(DeploymentStageDescriptionOutput{})
	pulumi.RegisterOutputType(DeploymentStageDescriptionPtrOutput{})
	pulumi.RegisterOutputType(DeploymentTagOutput{})
	pulumi.RegisterOutputType(DeploymentTagArrayOutput{})
	pulumi.RegisterOutputType(DocumentationPartLocationOutput{})
	pulumi.RegisterOutputType(DocumentationPartLocationPtrOutput{})
	pulumi.RegisterOutputType(DomainNameEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(DomainNameEndpointConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DomainNameMutualTlsAuthenticationOutput{})
	pulumi.RegisterOutputType(DomainNameMutualTlsAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(DomainNameTagOutput{})
	pulumi.RegisterOutputType(DomainNameTagArrayOutput{})
	pulumi.RegisterOutputType(MethodIntegrationOutput{})
	pulumi.RegisterOutputType(MethodIntegrationPtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationResponseOutput{})
	pulumi.RegisterOutputType(MethodIntegrationResponseArrayOutput{})
	pulumi.RegisterOutputType(MethodResponseOutput{})
	pulumi.RegisterOutputType(MethodResponseArrayOutput{})
	pulumi.RegisterOutputType(RestApiEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(RestApiEndpointConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RestApiS3LocationOutput{})
	pulumi.RegisterOutputType(RestApiS3LocationPtrOutput{})
	pulumi.RegisterOutputType(RestApiTagOutput{})
	pulumi.RegisterOutputType(RestApiTagArrayOutput{})
	pulumi.RegisterOutputType(StageAccessLogSettingOutput{})
	pulumi.RegisterOutputType(StageAccessLogSettingPtrOutput{})
	pulumi.RegisterOutputType(StageCanarySettingOutput{})
	pulumi.RegisterOutputType(StageCanarySettingPtrOutput{})
	pulumi.RegisterOutputType(StageMethodSettingOutput{})
	pulumi.RegisterOutputType(StageMethodSettingArrayOutput{})
	pulumi.RegisterOutputType(StageTagOutput{})
	pulumi.RegisterOutputType(StageTagArrayOutput{})
	pulumi.RegisterOutputType(UsagePlanApiStageOutput{})
	pulumi.RegisterOutputType(UsagePlanApiStageArrayOutput{})
	pulumi.RegisterOutputType(UsagePlanQuotaSettingsOutput{})
	pulumi.RegisterOutputType(UsagePlanQuotaSettingsPtrOutput{})
	pulumi.RegisterOutputType(UsagePlanTagOutput{})
	pulumi.RegisterOutputType(UsagePlanTagArrayOutput{})
	pulumi.RegisterOutputType(UsagePlanThrottleSettingsOutput{})
	pulumi.RegisterOutputType(UsagePlanThrottleSettingsPtrOutput{})
}
