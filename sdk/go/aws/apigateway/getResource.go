// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ApiGateway::Resource“ resource creates a resource in an API.
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceResult
	err := ctx.Invoke("aws-native:apigateway:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupResourceArgs struct {
	// The ID for the resource. For example: `abc123` .
	ResourceId string `pulumi:"resourceId"`
	// The string identifier of the associated RestApi.
	RestApiId string `pulumi:"restApiId"`
}

type LookupResourceResult struct {
	// The ID for the resource. For example: `abc123` .
	ResourceId *string `pulumi:"resourceId"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourceResultOutput, error) {
			args := v.(LookupResourceArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupResourceResult
			secret, err := ctx.InvokePackageRaw("aws-native:apigateway:getResource", args, &rv, "", opts...)
			if err != nil {
				return LookupResourceResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupResourceResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupResourceResultOutput), nil
			}
			return output, nil
		}).(LookupResourceResultOutput)
}

type LookupResourceOutputArgs struct {
	// The ID for the resource. For example: `abc123` .
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The string identifier of the associated RestApi.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
}

func (LookupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceArgs)(nil)).Elem()
}

type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutput() LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutputWithContext(ctx context.Context) LookupResourceResultOutput {
	return o
}

// The ID for the resource. For example: `abc123` .
func (o LookupResourceResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceResultOutput{})
}
