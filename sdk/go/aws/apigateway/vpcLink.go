// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for AWS ApiGateway VpcLink
type VpcLink struct {
	pulumi.CustomResourceState

	// A description of the VPC link.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A name for the VPC link.
	Name pulumi.StringOutput `pulumi:"name"`
	// An array of arbitrary tags (key-value pairs) to associate with the stage.
	Tags VpcLinkTagArrayOutput `pulumi:"tags"`
	// The ARN of network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.
	TargetArns pulumi.StringArrayOutput `pulumi:"targetArns"`
	// The ID of the instance that backs VPC link.
	VpcLinkId pulumi.StringOutput `pulumi:"vpcLinkId"`
}

// NewVpcLink registers a new resource with the given unique name, arguments, and options.
func NewVpcLink(ctx *pulumi.Context,
	name string, args *VpcLinkArgs, opts ...pulumi.ResourceOption) (*VpcLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TargetArns == nil {
		return nil, errors.New("invalid value for required argument 'TargetArns'")
	}
	var resource VpcLink
	err := ctx.RegisterResource("aws-native:apigateway:VpcLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcLink gets an existing VpcLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcLinkState, opts ...pulumi.ResourceOption) (*VpcLink, error) {
	var resource VpcLink
	err := ctx.ReadResource("aws-native:apigateway:VpcLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcLink resources.
type vpcLinkState struct {
}

type VpcLinkState struct {
}

func (VpcLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcLinkState)(nil)).Elem()
}

type vpcLinkArgs struct {
	// A description of the VPC link.
	Description *string `pulumi:"description"`
	// A name for the VPC link.
	Name *string `pulumi:"name"`
	// An array of arbitrary tags (key-value pairs) to associate with the stage.
	Tags []VpcLinkTag `pulumi:"tags"`
	// The ARN of network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.
	TargetArns []string `pulumi:"targetArns"`
}

// The set of arguments for constructing a VpcLink resource.
type VpcLinkArgs struct {
	// A description of the VPC link.
	Description pulumi.StringPtrInput
	// A name for the VPC link.
	Name pulumi.StringPtrInput
	// An array of arbitrary tags (key-value pairs) to associate with the stage.
	Tags VpcLinkTagArrayInput
	// The ARN of network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.
	TargetArns pulumi.StringArrayInput
}

func (VpcLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcLinkArgs)(nil)).Elem()
}

type VpcLinkInput interface {
	pulumi.Input

	ToVpcLinkOutput() VpcLinkOutput
	ToVpcLinkOutputWithContext(ctx context.Context) VpcLinkOutput
}

func (*VpcLink) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcLink)(nil)).Elem()
}

func (i *VpcLink) ToVpcLinkOutput() VpcLinkOutput {
	return i.ToVpcLinkOutputWithContext(context.Background())
}

func (i *VpcLink) ToVpcLinkOutputWithContext(ctx context.Context) VpcLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcLinkOutput)
}

type VpcLinkOutput struct{ *pulumi.OutputState }

func (VpcLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcLink)(nil)).Elem()
}

func (o VpcLinkOutput) ToVpcLinkOutput() VpcLinkOutput {
	return o
}

func (o VpcLinkOutput) ToVpcLinkOutputWithContext(ctx context.Context) VpcLinkOutput {
	return o
}

// A description of the VPC link.
func (o VpcLinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcLink) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A name for the VPC link.
func (o VpcLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An array of arbitrary tags (key-value pairs) to associate with the stage.
func (o VpcLinkOutput) Tags() VpcLinkTagArrayOutput {
	return o.ApplyT(func(v *VpcLink) VpcLinkTagArrayOutput { return v.Tags }).(VpcLinkTagArrayOutput)
}

// The ARN of network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.
func (o VpcLinkOutput) TargetArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcLink) pulumi.StringArrayOutput { return v.TargetArns }).(pulumi.StringArrayOutput)
}

// The ID of the instance that backs VPC link.
func (o VpcLinkOutput) VpcLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcLink) pulumi.StringOutput { return v.VpcLinkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcLinkInput)(nil)).Elem(), &VpcLink{})
	pulumi.RegisterOutputType(VpcLinkOutput{})
}
