// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::ApiGateway::BasePathMapping“ resource creates a base path that clients who call your API must use in the invocation URL.
func LookupBasePathMapping(ctx *pulumi.Context, args *LookupBasePathMappingArgs, opts ...pulumi.InvokeOption) (*LookupBasePathMappingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBasePathMappingResult
	err := ctx.Invoke("aws-native:apigateway:getBasePathMapping", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBasePathMappingArgs struct {
	// The base path name that callers of the API must provide as part of the URL after the domain name.
	BasePath string `pulumi:"basePath"`
	// The domain name of the BasePathMapping resource to be described.
	DomainName string `pulumi:"domainName"`
}

type LookupBasePathMappingResult struct {
	// The string identifier of the associated RestApi.
	RestApiId *string `pulumi:"restApiId"`
	// The name of the associated stage.
	Stage *string `pulumi:"stage"`
}

func LookupBasePathMappingOutput(ctx *pulumi.Context, args LookupBasePathMappingOutputArgs, opts ...pulumi.InvokeOption) LookupBasePathMappingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBasePathMappingResult, error) {
			args := v.(LookupBasePathMappingArgs)
			r, err := LookupBasePathMapping(ctx, &args, opts...)
			var s LookupBasePathMappingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBasePathMappingResultOutput)
}

type LookupBasePathMappingOutputArgs struct {
	// The base path name that callers of the API must provide as part of the URL after the domain name.
	BasePath pulumi.StringInput `pulumi:"basePath"`
	// The domain name of the BasePathMapping resource to be described.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (LookupBasePathMappingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBasePathMappingArgs)(nil)).Elem()
}

type LookupBasePathMappingResultOutput struct{ *pulumi.OutputState }

func (LookupBasePathMappingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBasePathMappingResult)(nil)).Elem()
}

func (o LookupBasePathMappingResultOutput) ToLookupBasePathMappingResultOutput() LookupBasePathMappingResultOutput {
	return o
}

func (o LookupBasePathMappingResultOutput) ToLookupBasePathMappingResultOutputWithContext(ctx context.Context) LookupBasePathMappingResultOutput {
	return o
}

// The string identifier of the associated RestApi.
func (o LookupBasePathMappingResultOutput) RestApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBasePathMappingResult) *string { return v.RestApiId }).(pulumi.StringPtrOutput)
}

// The name of the associated stage.
func (o LookupBasePathMappingResultOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBasePathMappingResult) *string { return v.Stage }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBasePathMappingResultOutput{})
}
