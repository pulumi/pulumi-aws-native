// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::ClientCertificate
func LookupClientCertificate(ctx *pulumi.Context, args *LookupClientCertificateArgs, opts ...pulumi.InvokeOption) (*LookupClientCertificateResult, error) {
	var rv LookupClientCertificateResult
	err := ctx.Invoke("aws-native:apigateway:getClientCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientCertificateArgs struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId string `pulumi:"clientCertificateId"`
}

type LookupClientCertificateResult struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// A description of the client certificate.
	Description *string `pulumi:"description"`
	// An array of arbitrary tags (key-value pairs) to associate with the client certificate.
	Tags []ClientCertificateTag `pulumi:"tags"`
}

func LookupClientCertificateOutput(ctx *pulumi.Context, args LookupClientCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupClientCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClientCertificateResult, error) {
			args := v.(LookupClientCertificateArgs)
			r, err := LookupClientCertificate(ctx, &args, opts...)
			var s LookupClientCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClientCertificateResultOutput)
}

type LookupClientCertificateOutputArgs struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId pulumi.StringInput `pulumi:"clientCertificateId"`
}

func (LookupClientCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientCertificateArgs)(nil)).Elem()
}

type LookupClientCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupClientCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientCertificateResult)(nil)).Elem()
}

func (o LookupClientCertificateResultOutput) ToLookupClientCertificateResultOutput() LookupClientCertificateResultOutput {
	return o
}

func (o LookupClientCertificateResultOutput) ToLookupClientCertificateResultOutputWithContext(ctx context.Context) LookupClientCertificateResultOutput {
	return o
}

// The Primary Identifier of the Client Certficate, generated by a Create API Call
func (o LookupClientCertificateResultOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) *string { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

// A description of the client certificate.
func (o LookupClientCertificateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An array of arbitrary tags (key-value pairs) to associate with the client certificate.
func (o LookupClientCertificateResultOutput) Tags() ClientCertificateTagArrayOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) []ClientCertificateTag { return v.Tags }).(ClientCertificateTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClientCertificateResultOutput{})
}
