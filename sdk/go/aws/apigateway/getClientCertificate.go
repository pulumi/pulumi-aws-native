// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The “AWS::ApiGateway::ClientCertificate“ resource creates a client certificate that API Gateway uses to configure client-side SSL authentication for sending requests to the integration endpoint.
func LookupClientCertificate(ctx *pulumi.Context, args *LookupClientCertificateArgs, opts ...pulumi.InvokeOption) (*LookupClientCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClientCertificateResult
	err := ctx.Invoke("aws-native:apigateway:getClientCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientCertificateArgs struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId string `pulumi:"clientCertificateId"`
}

type LookupClientCertificateResult struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// The description of the client certificate.
	Description *string `pulumi:"description"`
	// The collection of tags. Each tag element is associated with a given resource.
	Tags []ClientCertificateTag `pulumi:"tags"`
}

func LookupClientCertificateOutput(ctx *pulumi.Context, args LookupClientCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupClientCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClientCertificateResult, error) {
			args := v.(LookupClientCertificateArgs)
			r, err := LookupClientCertificate(ctx, &args, opts...)
			var s LookupClientCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClientCertificateResultOutput)
}

type LookupClientCertificateOutputArgs struct {
	// The Primary Identifier of the Client Certficate, generated by a Create API Call
	ClientCertificateId pulumi.StringInput `pulumi:"clientCertificateId"`
}

func (LookupClientCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientCertificateArgs)(nil)).Elem()
}

type LookupClientCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupClientCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientCertificateResult)(nil)).Elem()
}

func (o LookupClientCertificateResultOutput) ToLookupClientCertificateResultOutput() LookupClientCertificateResultOutput {
	return o
}

func (o LookupClientCertificateResultOutput) ToLookupClientCertificateResultOutputWithContext(ctx context.Context) LookupClientCertificateResultOutput {
	return o
}

func (o LookupClientCertificateResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupClientCertificateResult] {
	return pulumix.Output[LookupClientCertificateResult]{
		OutputState: o.OutputState,
	}
}

// The Primary Identifier of the Client Certficate, generated by a Create API Call
func (o LookupClientCertificateResultOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) *string { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

// The description of the client certificate.
func (o LookupClientCertificateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The collection of tags. Each tag element is associated with a given resource.
func (o LookupClientCertificateResultOutput) Tags() ClientCertificateTagArrayOutput {
	return o.ApplyT(func(v LookupClientCertificateResult) []ClientCertificateTag { return v.Tags }).(ClientCertificateTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClientCertificateResultOutput{})
}
