// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The method's authorization type.
type MethodAuthorizationType string

const (
	MethodAuthorizationTypeNone             = MethodAuthorizationType("NONE")
	MethodAuthorizationTypeAwsIam           = MethodAuthorizationType("AWS_IAM")
	MethodAuthorizationTypeCustom           = MethodAuthorizationType("CUSTOM")
	MethodAuthorizationTypeCognitoUserPools = MethodAuthorizationType("COGNITO_USER_POOLS")
)

func (MethodAuthorizationType) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodAuthorizationType)(nil)).Elem()
}

func (e MethodAuthorizationType) ToMethodAuthorizationTypeOutput() MethodAuthorizationTypeOutput {
	return pulumi.ToOutput(e).(MethodAuthorizationTypeOutput)
}

func (e MethodAuthorizationType) ToMethodAuthorizationTypeOutputWithContext(ctx context.Context) MethodAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodAuthorizationTypeOutput)
}

func (e MethodAuthorizationType) ToMethodAuthorizationTypePtrOutput() MethodAuthorizationTypePtrOutput {
	return e.ToMethodAuthorizationTypePtrOutputWithContext(context.Background())
}

func (e MethodAuthorizationType) ToMethodAuthorizationTypePtrOutputWithContext(ctx context.Context) MethodAuthorizationTypePtrOutput {
	return MethodAuthorizationType(e).ToMethodAuthorizationTypeOutputWithContext(ctx).ToMethodAuthorizationTypePtrOutputWithContext(ctx)
}

func (e MethodAuthorizationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodAuthorizationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodAuthorizationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodAuthorizationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (MethodAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodAuthorizationType)(nil)).Elem()
}

func (o MethodAuthorizationTypeOutput) ToMethodAuthorizationTypeOutput() MethodAuthorizationTypeOutput {
	return o
}

func (o MethodAuthorizationTypeOutput) ToMethodAuthorizationTypeOutputWithContext(ctx context.Context) MethodAuthorizationTypeOutput {
	return o
}

func (o MethodAuthorizationTypeOutput) ToMethodAuthorizationTypePtrOutput() MethodAuthorizationTypePtrOutput {
	return o.ToMethodAuthorizationTypePtrOutputWithContext(context.Background())
}

func (o MethodAuthorizationTypeOutput) ToMethodAuthorizationTypePtrOutputWithContext(ctx context.Context) MethodAuthorizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodAuthorizationType) *MethodAuthorizationType {
		return &v
	}).(MethodAuthorizationTypePtrOutput)
}

func (o MethodAuthorizationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodAuthorizationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodAuthorizationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodAuthorizationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodAuthorizationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodAuthorizationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodAuthorizationTypePtrOutput struct{ *pulumi.OutputState }

func (MethodAuthorizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodAuthorizationType)(nil)).Elem()
}

func (o MethodAuthorizationTypePtrOutput) ToMethodAuthorizationTypePtrOutput() MethodAuthorizationTypePtrOutput {
	return o
}

func (o MethodAuthorizationTypePtrOutput) ToMethodAuthorizationTypePtrOutputWithContext(ctx context.Context) MethodAuthorizationTypePtrOutput {
	return o
}

func (o MethodAuthorizationTypePtrOutput) Elem() MethodAuthorizationTypeOutput {
	return o.ApplyT(func(v *MethodAuthorizationType) MethodAuthorizationType {
		if v != nil {
			return *v
		}
		var ret MethodAuthorizationType
		return ret
	}).(MethodAuthorizationTypeOutput)
}

func (o MethodAuthorizationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodAuthorizationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodAuthorizationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodAuthorizationTypeInput is an input type that accepts MethodAuthorizationTypeArgs and MethodAuthorizationTypeOutput values.
// You can construct a concrete instance of `MethodAuthorizationTypeInput` via:
//
//          MethodAuthorizationTypeArgs{...}
type MethodAuthorizationTypeInput interface {
	pulumi.Input

	ToMethodAuthorizationTypeOutput() MethodAuthorizationTypeOutput
	ToMethodAuthorizationTypeOutputWithContext(context.Context) MethodAuthorizationTypeOutput
}

var methodAuthorizationTypePtrType = reflect.TypeOf((**MethodAuthorizationType)(nil)).Elem()

type MethodAuthorizationTypePtrInput interface {
	pulumi.Input

	ToMethodAuthorizationTypePtrOutput() MethodAuthorizationTypePtrOutput
	ToMethodAuthorizationTypePtrOutputWithContext(context.Context) MethodAuthorizationTypePtrOutput
}

type methodAuthorizationTypePtr string

func MethodAuthorizationTypePtr(v string) MethodAuthorizationTypePtrInput {
	return (*methodAuthorizationTypePtr)(&v)
}

func (*methodAuthorizationTypePtr) ElementType() reflect.Type {
	return methodAuthorizationTypePtrType
}

func (in *methodAuthorizationTypePtr) ToMethodAuthorizationTypePtrOutput() MethodAuthorizationTypePtrOutput {
	return pulumi.ToOutput(in).(MethodAuthorizationTypePtrOutput)
}

func (in *methodAuthorizationTypePtr) ToMethodAuthorizationTypePtrOutputWithContext(ctx context.Context) MethodAuthorizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodAuthorizationTypePtrOutput)
}

// The type of the network connection to the integration endpoint.
type MethodIntegrationConnectionType string

const (
	MethodIntegrationConnectionTypeInternet = MethodIntegrationConnectionType("INTERNET")
	MethodIntegrationConnectionTypeVpcLink  = MethodIntegrationConnectionType("VPC_LINK")
)

func (MethodIntegrationConnectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationConnectionType)(nil)).Elem()
}

func (e MethodIntegrationConnectionType) ToMethodIntegrationConnectionTypeOutput() MethodIntegrationConnectionTypeOutput {
	return pulumi.ToOutput(e).(MethodIntegrationConnectionTypeOutput)
}

func (e MethodIntegrationConnectionType) ToMethodIntegrationConnectionTypeOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodIntegrationConnectionTypeOutput)
}

func (e MethodIntegrationConnectionType) ToMethodIntegrationConnectionTypePtrOutput() MethodIntegrationConnectionTypePtrOutput {
	return e.ToMethodIntegrationConnectionTypePtrOutputWithContext(context.Background())
}

func (e MethodIntegrationConnectionType) ToMethodIntegrationConnectionTypePtrOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypePtrOutput {
	return MethodIntegrationConnectionType(e).ToMethodIntegrationConnectionTypeOutputWithContext(ctx).ToMethodIntegrationConnectionTypePtrOutputWithContext(ctx)
}

func (e MethodIntegrationConnectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationConnectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationConnectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationConnectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodIntegrationConnectionTypeOutput struct{ *pulumi.OutputState }

func (MethodIntegrationConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationConnectionType)(nil)).Elem()
}

func (o MethodIntegrationConnectionTypeOutput) ToMethodIntegrationConnectionTypeOutput() MethodIntegrationConnectionTypeOutput {
	return o
}

func (o MethodIntegrationConnectionTypeOutput) ToMethodIntegrationConnectionTypeOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypeOutput {
	return o
}

func (o MethodIntegrationConnectionTypeOutput) ToMethodIntegrationConnectionTypePtrOutput() MethodIntegrationConnectionTypePtrOutput {
	return o.ToMethodIntegrationConnectionTypePtrOutputWithContext(context.Background())
}

func (o MethodIntegrationConnectionTypeOutput) ToMethodIntegrationConnectionTypePtrOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegrationConnectionType) *MethodIntegrationConnectionType {
		return &v
	}).(MethodIntegrationConnectionTypePtrOutput)
}

func (o MethodIntegrationConnectionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodIntegrationConnectionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationConnectionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodIntegrationConnectionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationConnectionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationConnectionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegrationConnectionType)(nil)).Elem()
}

func (o MethodIntegrationConnectionTypePtrOutput) ToMethodIntegrationConnectionTypePtrOutput() MethodIntegrationConnectionTypePtrOutput {
	return o
}

func (o MethodIntegrationConnectionTypePtrOutput) ToMethodIntegrationConnectionTypePtrOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypePtrOutput {
	return o
}

func (o MethodIntegrationConnectionTypePtrOutput) Elem() MethodIntegrationConnectionTypeOutput {
	return o.ApplyT(func(v *MethodIntegrationConnectionType) MethodIntegrationConnectionType {
		if v != nil {
			return *v
		}
		var ret MethodIntegrationConnectionType
		return ret
	}).(MethodIntegrationConnectionTypeOutput)
}

func (o MethodIntegrationConnectionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationConnectionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodIntegrationConnectionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodIntegrationConnectionTypeInput is an input type that accepts MethodIntegrationConnectionTypeArgs and MethodIntegrationConnectionTypeOutput values.
// You can construct a concrete instance of `MethodIntegrationConnectionTypeInput` via:
//
//          MethodIntegrationConnectionTypeArgs{...}
type MethodIntegrationConnectionTypeInput interface {
	pulumi.Input

	ToMethodIntegrationConnectionTypeOutput() MethodIntegrationConnectionTypeOutput
	ToMethodIntegrationConnectionTypeOutputWithContext(context.Context) MethodIntegrationConnectionTypeOutput
}

var methodIntegrationConnectionTypePtrType = reflect.TypeOf((**MethodIntegrationConnectionType)(nil)).Elem()

type MethodIntegrationConnectionTypePtrInput interface {
	pulumi.Input

	ToMethodIntegrationConnectionTypePtrOutput() MethodIntegrationConnectionTypePtrOutput
	ToMethodIntegrationConnectionTypePtrOutputWithContext(context.Context) MethodIntegrationConnectionTypePtrOutput
}

type methodIntegrationConnectionTypePtr string

func MethodIntegrationConnectionTypePtr(v string) MethodIntegrationConnectionTypePtrInput {
	return (*methodIntegrationConnectionTypePtr)(&v)
}

func (*methodIntegrationConnectionTypePtr) ElementType() reflect.Type {
	return methodIntegrationConnectionTypePtrType
}

func (in *methodIntegrationConnectionTypePtr) ToMethodIntegrationConnectionTypePtrOutput() MethodIntegrationConnectionTypePtrOutput {
	return pulumi.ToOutput(in).(MethodIntegrationConnectionTypePtrOutput)
}

func (in *methodIntegrationConnectionTypePtr) ToMethodIntegrationConnectionTypePtrOutputWithContext(ctx context.Context) MethodIntegrationConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodIntegrationConnectionTypePtrOutput)
}

// Specifies how to handle request payload content type conversions.
type MethodIntegrationContentHandling string

const (
	MethodIntegrationContentHandlingConvertToBinary = MethodIntegrationContentHandling("CONVERT_TO_BINARY")
	MethodIntegrationContentHandlingConvertToText   = MethodIntegrationContentHandling("CONVERT_TO_TEXT")
)

func (MethodIntegrationContentHandling) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationContentHandling)(nil)).Elem()
}

func (e MethodIntegrationContentHandling) ToMethodIntegrationContentHandlingOutput() MethodIntegrationContentHandlingOutput {
	return pulumi.ToOutput(e).(MethodIntegrationContentHandlingOutput)
}

func (e MethodIntegrationContentHandling) ToMethodIntegrationContentHandlingOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodIntegrationContentHandlingOutput)
}

func (e MethodIntegrationContentHandling) ToMethodIntegrationContentHandlingPtrOutput() MethodIntegrationContentHandlingPtrOutput {
	return e.ToMethodIntegrationContentHandlingPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationContentHandling) ToMethodIntegrationContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingPtrOutput {
	return MethodIntegrationContentHandling(e).ToMethodIntegrationContentHandlingOutputWithContext(ctx).ToMethodIntegrationContentHandlingPtrOutputWithContext(ctx)
}

func (e MethodIntegrationContentHandling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationContentHandling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationContentHandling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationContentHandling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodIntegrationContentHandlingOutput struct{ *pulumi.OutputState }

func (MethodIntegrationContentHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationContentHandling)(nil)).Elem()
}

func (o MethodIntegrationContentHandlingOutput) ToMethodIntegrationContentHandlingOutput() MethodIntegrationContentHandlingOutput {
	return o
}

func (o MethodIntegrationContentHandlingOutput) ToMethodIntegrationContentHandlingOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingOutput {
	return o
}

func (o MethodIntegrationContentHandlingOutput) ToMethodIntegrationContentHandlingPtrOutput() MethodIntegrationContentHandlingPtrOutput {
	return o.ToMethodIntegrationContentHandlingPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationContentHandlingOutput) ToMethodIntegrationContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegrationContentHandling) *MethodIntegrationContentHandling {
		return &v
	}).(MethodIntegrationContentHandlingPtrOutput)
}

func (o MethodIntegrationContentHandlingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodIntegrationContentHandlingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationContentHandling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodIntegrationContentHandlingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationContentHandlingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationContentHandling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationContentHandlingPtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationContentHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegrationContentHandling)(nil)).Elem()
}

func (o MethodIntegrationContentHandlingPtrOutput) ToMethodIntegrationContentHandlingPtrOutput() MethodIntegrationContentHandlingPtrOutput {
	return o
}

func (o MethodIntegrationContentHandlingPtrOutput) ToMethodIntegrationContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingPtrOutput {
	return o
}

func (o MethodIntegrationContentHandlingPtrOutput) Elem() MethodIntegrationContentHandlingOutput {
	return o.ApplyT(func(v *MethodIntegrationContentHandling) MethodIntegrationContentHandling {
		if v != nil {
			return *v
		}
		var ret MethodIntegrationContentHandling
		return ret
	}).(MethodIntegrationContentHandlingOutput)
}

func (o MethodIntegrationContentHandlingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationContentHandlingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodIntegrationContentHandling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodIntegrationContentHandlingInput is an input type that accepts MethodIntegrationContentHandlingArgs and MethodIntegrationContentHandlingOutput values.
// You can construct a concrete instance of `MethodIntegrationContentHandlingInput` via:
//
//          MethodIntegrationContentHandlingArgs{...}
type MethodIntegrationContentHandlingInput interface {
	pulumi.Input

	ToMethodIntegrationContentHandlingOutput() MethodIntegrationContentHandlingOutput
	ToMethodIntegrationContentHandlingOutputWithContext(context.Context) MethodIntegrationContentHandlingOutput
}

var methodIntegrationContentHandlingPtrType = reflect.TypeOf((**MethodIntegrationContentHandling)(nil)).Elem()

type MethodIntegrationContentHandlingPtrInput interface {
	pulumi.Input

	ToMethodIntegrationContentHandlingPtrOutput() MethodIntegrationContentHandlingPtrOutput
	ToMethodIntegrationContentHandlingPtrOutputWithContext(context.Context) MethodIntegrationContentHandlingPtrOutput
}

type methodIntegrationContentHandlingPtr string

func MethodIntegrationContentHandlingPtr(v string) MethodIntegrationContentHandlingPtrInput {
	return (*methodIntegrationContentHandlingPtr)(&v)
}

func (*methodIntegrationContentHandlingPtr) ElementType() reflect.Type {
	return methodIntegrationContentHandlingPtrType
}

func (in *methodIntegrationContentHandlingPtr) ToMethodIntegrationContentHandlingPtrOutput() MethodIntegrationContentHandlingPtrOutput {
	return pulumi.ToOutput(in).(MethodIntegrationContentHandlingPtrOutput)
}

func (in *methodIntegrationContentHandlingPtr) ToMethodIntegrationContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationContentHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodIntegrationContentHandlingPtrOutput)
}

// Indicates when API Gateway passes requests to the targeted backend.
type MethodIntegrationPassthroughBehavior string

const (
	MethodIntegrationPassthroughBehaviorWhenNoMatch     = MethodIntegrationPassthroughBehavior("WHEN_NO_MATCH")
	MethodIntegrationPassthroughBehaviorWhenNoTemplates = MethodIntegrationPassthroughBehavior("WHEN_NO_TEMPLATES")
	MethodIntegrationPassthroughBehaviorNever           = MethodIntegrationPassthroughBehavior("NEVER")
)

func (MethodIntegrationPassthroughBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationPassthroughBehavior)(nil)).Elem()
}

func (e MethodIntegrationPassthroughBehavior) ToMethodIntegrationPassthroughBehaviorOutput() MethodIntegrationPassthroughBehaviorOutput {
	return pulumi.ToOutput(e).(MethodIntegrationPassthroughBehaviorOutput)
}

func (e MethodIntegrationPassthroughBehavior) ToMethodIntegrationPassthroughBehaviorOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodIntegrationPassthroughBehaviorOutput)
}

func (e MethodIntegrationPassthroughBehavior) ToMethodIntegrationPassthroughBehaviorPtrOutput() MethodIntegrationPassthroughBehaviorPtrOutput {
	return e.ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationPassthroughBehavior) ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorPtrOutput {
	return MethodIntegrationPassthroughBehavior(e).ToMethodIntegrationPassthroughBehaviorOutputWithContext(ctx).ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(ctx)
}

func (e MethodIntegrationPassthroughBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationPassthroughBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationPassthroughBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationPassthroughBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodIntegrationPassthroughBehaviorOutput struct{ *pulumi.OutputState }

func (MethodIntegrationPassthroughBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationPassthroughBehavior)(nil)).Elem()
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToMethodIntegrationPassthroughBehaviorOutput() MethodIntegrationPassthroughBehaviorOutput {
	return o
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToMethodIntegrationPassthroughBehaviorOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorOutput {
	return o
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToMethodIntegrationPassthroughBehaviorPtrOutput() MethodIntegrationPassthroughBehaviorPtrOutput {
	return o.ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegrationPassthroughBehavior) *MethodIntegrationPassthroughBehavior {
		return &v
	}).(MethodIntegrationPassthroughBehaviorPtrOutput)
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationPassthroughBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationPassthroughBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationPassthroughBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationPassthroughBehaviorPtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationPassthroughBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegrationPassthroughBehavior)(nil)).Elem()
}

func (o MethodIntegrationPassthroughBehaviorPtrOutput) ToMethodIntegrationPassthroughBehaviorPtrOutput() MethodIntegrationPassthroughBehaviorPtrOutput {
	return o
}

func (o MethodIntegrationPassthroughBehaviorPtrOutput) ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorPtrOutput {
	return o
}

func (o MethodIntegrationPassthroughBehaviorPtrOutput) Elem() MethodIntegrationPassthroughBehaviorOutput {
	return o.ApplyT(func(v *MethodIntegrationPassthroughBehavior) MethodIntegrationPassthroughBehavior {
		if v != nil {
			return *v
		}
		var ret MethodIntegrationPassthroughBehavior
		return ret
	}).(MethodIntegrationPassthroughBehaviorOutput)
}

func (o MethodIntegrationPassthroughBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationPassthroughBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodIntegrationPassthroughBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodIntegrationPassthroughBehaviorInput is an input type that accepts MethodIntegrationPassthroughBehaviorArgs and MethodIntegrationPassthroughBehaviorOutput values.
// You can construct a concrete instance of `MethodIntegrationPassthroughBehaviorInput` via:
//
//          MethodIntegrationPassthroughBehaviorArgs{...}
type MethodIntegrationPassthroughBehaviorInput interface {
	pulumi.Input

	ToMethodIntegrationPassthroughBehaviorOutput() MethodIntegrationPassthroughBehaviorOutput
	ToMethodIntegrationPassthroughBehaviorOutputWithContext(context.Context) MethodIntegrationPassthroughBehaviorOutput
}

var methodIntegrationPassthroughBehaviorPtrType = reflect.TypeOf((**MethodIntegrationPassthroughBehavior)(nil)).Elem()

type MethodIntegrationPassthroughBehaviorPtrInput interface {
	pulumi.Input

	ToMethodIntegrationPassthroughBehaviorPtrOutput() MethodIntegrationPassthroughBehaviorPtrOutput
	ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(context.Context) MethodIntegrationPassthroughBehaviorPtrOutput
}

type methodIntegrationPassthroughBehaviorPtr string

func MethodIntegrationPassthroughBehaviorPtr(v string) MethodIntegrationPassthroughBehaviorPtrInput {
	return (*methodIntegrationPassthroughBehaviorPtr)(&v)
}

func (*methodIntegrationPassthroughBehaviorPtr) ElementType() reflect.Type {
	return methodIntegrationPassthroughBehaviorPtrType
}

func (in *methodIntegrationPassthroughBehaviorPtr) ToMethodIntegrationPassthroughBehaviorPtrOutput() MethodIntegrationPassthroughBehaviorPtrOutput {
	return pulumi.ToOutput(in).(MethodIntegrationPassthroughBehaviorPtrOutput)
}

func (in *methodIntegrationPassthroughBehaviorPtr) ToMethodIntegrationPassthroughBehaviorPtrOutputWithContext(ctx context.Context) MethodIntegrationPassthroughBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodIntegrationPassthroughBehaviorPtrOutput)
}

// Specifies how to handle request payload content type conversions.
type MethodIntegrationResponseContentHandling string

const (
	MethodIntegrationResponseContentHandlingConvertToBinary = MethodIntegrationResponseContentHandling("CONVERT_TO_BINARY")
	MethodIntegrationResponseContentHandlingConvertToText   = MethodIntegrationResponseContentHandling("CONVERT_TO_TEXT")
)

func (MethodIntegrationResponseContentHandling) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationResponseContentHandling)(nil)).Elem()
}

func (e MethodIntegrationResponseContentHandling) ToMethodIntegrationResponseContentHandlingOutput() MethodIntegrationResponseContentHandlingOutput {
	return pulumi.ToOutput(e).(MethodIntegrationResponseContentHandlingOutput)
}

func (e MethodIntegrationResponseContentHandling) ToMethodIntegrationResponseContentHandlingOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodIntegrationResponseContentHandlingOutput)
}

func (e MethodIntegrationResponseContentHandling) ToMethodIntegrationResponseContentHandlingPtrOutput() MethodIntegrationResponseContentHandlingPtrOutput {
	return e.ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationResponseContentHandling) ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingPtrOutput {
	return MethodIntegrationResponseContentHandling(e).ToMethodIntegrationResponseContentHandlingOutputWithContext(ctx).ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(ctx)
}

func (e MethodIntegrationResponseContentHandling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationResponseContentHandling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationResponseContentHandling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationResponseContentHandling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodIntegrationResponseContentHandlingOutput struct{ *pulumi.OutputState }

func (MethodIntegrationResponseContentHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationResponseContentHandling)(nil)).Elem()
}

func (o MethodIntegrationResponseContentHandlingOutput) ToMethodIntegrationResponseContentHandlingOutput() MethodIntegrationResponseContentHandlingOutput {
	return o
}

func (o MethodIntegrationResponseContentHandlingOutput) ToMethodIntegrationResponseContentHandlingOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingOutput {
	return o
}

func (o MethodIntegrationResponseContentHandlingOutput) ToMethodIntegrationResponseContentHandlingPtrOutput() MethodIntegrationResponseContentHandlingPtrOutput {
	return o.ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationResponseContentHandlingOutput) ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegrationResponseContentHandling) *MethodIntegrationResponseContentHandling {
		return &v
	}).(MethodIntegrationResponseContentHandlingPtrOutput)
}

func (o MethodIntegrationResponseContentHandlingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodIntegrationResponseContentHandlingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationResponseContentHandling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodIntegrationResponseContentHandlingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationResponseContentHandlingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationResponseContentHandling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationResponseContentHandlingPtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationResponseContentHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegrationResponseContentHandling)(nil)).Elem()
}

func (o MethodIntegrationResponseContentHandlingPtrOutput) ToMethodIntegrationResponseContentHandlingPtrOutput() MethodIntegrationResponseContentHandlingPtrOutput {
	return o
}

func (o MethodIntegrationResponseContentHandlingPtrOutput) ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingPtrOutput {
	return o
}

func (o MethodIntegrationResponseContentHandlingPtrOutput) Elem() MethodIntegrationResponseContentHandlingOutput {
	return o.ApplyT(func(v *MethodIntegrationResponseContentHandling) MethodIntegrationResponseContentHandling {
		if v != nil {
			return *v
		}
		var ret MethodIntegrationResponseContentHandling
		return ret
	}).(MethodIntegrationResponseContentHandlingOutput)
}

func (o MethodIntegrationResponseContentHandlingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationResponseContentHandlingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodIntegrationResponseContentHandling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodIntegrationResponseContentHandlingInput is an input type that accepts MethodIntegrationResponseContentHandlingArgs and MethodIntegrationResponseContentHandlingOutput values.
// You can construct a concrete instance of `MethodIntegrationResponseContentHandlingInput` via:
//
//          MethodIntegrationResponseContentHandlingArgs{...}
type MethodIntegrationResponseContentHandlingInput interface {
	pulumi.Input

	ToMethodIntegrationResponseContentHandlingOutput() MethodIntegrationResponseContentHandlingOutput
	ToMethodIntegrationResponseContentHandlingOutputWithContext(context.Context) MethodIntegrationResponseContentHandlingOutput
}

var methodIntegrationResponseContentHandlingPtrType = reflect.TypeOf((**MethodIntegrationResponseContentHandling)(nil)).Elem()

type MethodIntegrationResponseContentHandlingPtrInput interface {
	pulumi.Input

	ToMethodIntegrationResponseContentHandlingPtrOutput() MethodIntegrationResponseContentHandlingPtrOutput
	ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(context.Context) MethodIntegrationResponseContentHandlingPtrOutput
}

type methodIntegrationResponseContentHandlingPtr string

func MethodIntegrationResponseContentHandlingPtr(v string) MethodIntegrationResponseContentHandlingPtrInput {
	return (*methodIntegrationResponseContentHandlingPtr)(&v)
}

func (*methodIntegrationResponseContentHandlingPtr) ElementType() reflect.Type {
	return methodIntegrationResponseContentHandlingPtrType
}

func (in *methodIntegrationResponseContentHandlingPtr) ToMethodIntegrationResponseContentHandlingPtrOutput() MethodIntegrationResponseContentHandlingPtrOutput {
	return pulumi.ToOutput(in).(MethodIntegrationResponseContentHandlingPtrOutput)
}

func (in *methodIntegrationResponseContentHandlingPtr) ToMethodIntegrationResponseContentHandlingPtrOutputWithContext(ctx context.Context) MethodIntegrationResponseContentHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodIntegrationResponseContentHandlingPtrOutput)
}

// The type of backend that your method is running.
type MethodIntegrationType string

const (
	MethodIntegrationTypeAws       = MethodIntegrationType("AWS")
	MethodIntegrationTypeAwsProxy  = MethodIntegrationType("AWS_PROXY")
	MethodIntegrationTypeHttp      = MethodIntegrationType("HTTP")
	MethodIntegrationTypeHttpProxy = MethodIntegrationType("HTTP_PROXY")
	MethodIntegrationTypeMock      = MethodIntegrationType("MOCK")
)

func (MethodIntegrationType) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationType)(nil)).Elem()
}

func (e MethodIntegrationType) ToMethodIntegrationTypeOutput() MethodIntegrationTypeOutput {
	return pulumi.ToOutput(e).(MethodIntegrationTypeOutput)
}

func (e MethodIntegrationType) ToMethodIntegrationTypeOutputWithContext(ctx context.Context) MethodIntegrationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MethodIntegrationTypeOutput)
}

func (e MethodIntegrationType) ToMethodIntegrationTypePtrOutput() MethodIntegrationTypePtrOutput {
	return e.ToMethodIntegrationTypePtrOutputWithContext(context.Background())
}

func (e MethodIntegrationType) ToMethodIntegrationTypePtrOutputWithContext(ctx context.Context) MethodIntegrationTypePtrOutput {
	return MethodIntegrationType(e).ToMethodIntegrationTypeOutputWithContext(ctx).ToMethodIntegrationTypePtrOutputWithContext(ctx)
}

func (e MethodIntegrationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MethodIntegrationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MethodIntegrationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MethodIntegrationTypeOutput struct{ *pulumi.OutputState }

func (MethodIntegrationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodIntegrationType)(nil)).Elem()
}

func (o MethodIntegrationTypeOutput) ToMethodIntegrationTypeOutput() MethodIntegrationTypeOutput {
	return o
}

func (o MethodIntegrationTypeOutput) ToMethodIntegrationTypeOutputWithContext(ctx context.Context) MethodIntegrationTypeOutput {
	return o
}

func (o MethodIntegrationTypeOutput) ToMethodIntegrationTypePtrOutput() MethodIntegrationTypePtrOutput {
	return o.ToMethodIntegrationTypePtrOutputWithContext(context.Background())
}

func (o MethodIntegrationTypeOutput) ToMethodIntegrationTypePtrOutputWithContext(ctx context.Context) MethodIntegrationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MethodIntegrationType) *MethodIntegrationType {
		return &v
	}).(MethodIntegrationTypePtrOutput)
}

func (o MethodIntegrationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MethodIntegrationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MethodIntegrationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MethodIntegrationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MethodIntegrationTypePtrOutput struct{ *pulumi.OutputState }

func (MethodIntegrationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MethodIntegrationType)(nil)).Elem()
}

func (o MethodIntegrationTypePtrOutput) ToMethodIntegrationTypePtrOutput() MethodIntegrationTypePtrOutput {
	return o
}

func (o MethodIntegrationTypePtrOutput) ToMethodIntegrationTypePtrOutputWithContext(ctx context.Context) MethodIntegrationTypePtrOutput {
	return o
}

func (o MethodIntegrationTypePtrOutput) Elem() MethodIntegrationTypeOutput {
	return o.ApplyT(func(v *MethodIntegrationType) MethodIntegrationType {
		if v != nil {
			return *v
		}
		var ret MethodIntegrationType
		return ret
	}).(MethodIntegrationTypeOutput)
}

func (o MethodIntegrationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MethodIntegrationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MethodIntegrationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MethodIntegrationTypeInput is an input type that accepts MethodIntegrationTypeArgs and MethodIntegrationTypeOutput values.
// You can construct a concrete instance of `MethodIntegrationTypeInput` via:
//
//          MethodIntegrationTypeArgs{...}
type MethodIntegrationTypeInput interface {
	pulumi.Input

	ToMethodIntegrationTypeOutput() MethodIntegrationTypeOutput
	ToMethodIntegrationTypeOutputWithContext(context.Context) MethodIntegrationTypeOutput
}

var methodIntegrationTypePtrType = reflect.TypeOf((**MethodIntegrationType)(nil)).Elem()

type MethodIntegrationTypePtrInput interface {
	pulumi.Input

	ToMethodIntegrationTypePtrOutput() MethodIntegrationTypePtrOutput
	ToMethodIntegrationTypePtrOutputWithContext(context.Context) MethodIntegrationTypePtrOutput
}

type methodIntegrationTypePtr string

func MethodIntegrationTypePtr(v string) MethodIntegrationTypePtrInput {
	return (*methodIntegrationTypePtr)(&v)
}

func (*methodIntegrationTypePtr) ElementType() reflect.Type {
	return methodIntegrationTypePtrType
}

func (in *methodIntegrationTypePtr) ToMethodIntegrationTypePtrOutput() MethodIntegrationTypePtrOutput {
	return pulumi.ToOutput(in).(MethodIntegrationTypePtrOutput)
}

func (in *methodIntegrationTypePtr) ToMethodIntegrationTypePtrOutputWithContext(ctx context.Context) MethodIntegrationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MethodIntegrationTypePtrOutput)
}

// The type of usage plan key. Currently, the only valid key type is API_KEY.
type UsagePlanKeyKeyType string

const (
	UsagePlanKeyKeyTypeApiKey = UsagePlanKeyKeyType("API_KEY")
)

func (UsagePlanKeyKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanKeyKeyType)(nil)).Elem()
}

func (e UsagePlanKeyKeyType) ToUsagePlanKeyKeyTypeOutput() UsagePlanKeyKeyTypeOutput {
	return pulumi.ToOutput(e).(UsagePlanKeyKeyTypeOutput)
}

func (e UsagePlanKeyKeyType) ToUsagePlanKeyKeyTypeOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UsagePlanKeyKeyTypeOutput)
}

func (e UsagePlanKeyKeyType) ToUsagePlanKeyKeyTypePtrOutput() UsagePlanKeyKeyTypePtrOutput {
	return e.ToUsagePlanKeyKeyTypePtrOutputWithContext(context.Background())
}

func (e UsagePlanKeyKeyType) ToUsagePlanKeyKeyTypePtrOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypePtrOutput {
	return UsagePlanKeyKeyType(e).ToUsagePlanKeyKeyTypeOutputWithContext(ctx).ToUsagePlanKeyKeyTypePtrOutputWithContext(ctx)
}

func (e UsagePlanKeyKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UsagePlanKeyKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UsagePlanKeyKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UsagePlanKeyKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UsagePlanKeyKeyTypeOutput struct{ *pulumi.OutputState }

func (UsagePlanKeyKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanKeyKeyType)(nil)).Elem()
}

func (o UsagePlanKeyKeyTypeOutput) ToUsagePlanKeyKeyTypeOutput() UsagePlanKeyKeyTypeOutput {
	return o
}

func (o UsagePlanKeyKeyTypeOutput) ToUsagePlanKeyKeyTypeOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypeOutput {
	return o
}

func (o UsagePlanKeyKeyTypeOutput) ToUsagePlanKeyKeyTypePtrOutput() UsagePlanKeyKeyTypePtrOutput {
	return o.ToUsagePlanKeyKeyTypePtrOutputWithContext(context.Background())
}

func (o UsagePlanKeyKeyTypeOutput) ToUsagePlanKeyKeyTypePtrOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UsagePlanKeyKeyType) *UsagePlanKeyKeyType {
		return &v
	}).(UsagePlanKeyKeyTypePtrOutput)
}

func (o UsagePlanKeyKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UsagePlanKeyKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UsagePlanKeyKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UsagePlanKeyKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UsagePlanKeyKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UsagePlanKeyKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UsagePlanKeyKeyTypePtrOutput struct{ *pulumi.OutputState }

func (UsagePlanKeyKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanKeyKeyType)(nil)).Elem()
}

func (o UsagePlanKeyKeyTypePtrOutput) ToUsagePlanKeyKeyTypePtrOutput() UsagePlanKeyKeyTypePtrOutput {
	return o
}

func (o UsagePlanKeyKeyTypePtrOutput) ToUsagePlanKeyKeyTypePtrOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypePtrOutput {
	return o
}

func (o UsagePlanKeyKeyTypePtrOutput) Elem() UsagePlanKeyKeyTypeOutput {
	return o.ApplyT(func(v *UsagePlanKeyKeyType) UsagePlanKeyKeyType {
		if v != nil {
			return *v
		}
		var ret UsagePlanKeyKeyType
		return ret
	}).(UsagePlanKeyKeyTypeOutput)
}

func (o UsagePlanKeyKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UsagePlanKeyKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UsagePlanKeyKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UsagePlanKeyKeyTypeInput is an input type that accepts UsagePlanKeyKeyTypeArgs and UsagePlanKeyKeyTypeOutput values.
// You can construct a concrete instance of `UsagePlanKeyKeyTypeInput` via:
//
//          UsagePlanKeyKeyTypeArgs{...}
type UsagePlanKeyKeyTypeInput interface {
	pulumi.Input

	ToUsagePlanKeyKeyTypeOutput() UsagePlanKeyKeyTypeOutput
	ToUsagePlanKeyKeyTypeOutputWithContext(context.Context) UsagePlanKeyKeyTypeOutput
}

var usagePlanKeyKeyTypePtrType = reflect.TypeOf((**UsagePlanKeyKeyType)(nil)).Elem()

type UsagePlanKeyKeyTypePtrInput interface {
	pulumi.Input

	ToUsagePlanKeyKeyTypePtrOutput() UsagePlanKeyKeyTypePtrOutput
	ToUsagePlanKeyKeyTypePtrOutputWithContext(context.Context) UsagePlanKeyKeyTypePtrOutput
}

type usagePlanKeyKeyTypePtr string

func UsagePlanKeyKeyTypePtr(v string) UsagePlanKeyKeyTypePtrInput {
	return (*usagePlanKeyKeyTypePtr)(&v)
}

func (*usagePlanKeyKeyTypePtr) ElementType() reflect.Type {
	return usagePlanKeyKeyTypePtrType
}

func (in *usagePlanKeyKeyTypePtr) ToUsagePlanKeyKeyTypePtrOutput() UsagePlanKeyKeyTypePtrOutput {
	return pulumi.ToOutput(in).(UsagePlanKeyKeyTypePtrOutput)
}

func (in *usagePlanKeyKeyTypePtr) ToUsagePlanKeyKeyTypePtrOutputWithContext(ctx context.Context) UsagePlanKeyKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UsagePlanKeyKeyTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MethodAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(MethodAuthorizationTypePtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationConnectionTypeOutput{})
	pulumi.RegisterOutputType(MethodIntegrationConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationContentHandlingOutput{})
	pulumi.RegisterOutputType(MethodIntegrationContentHandlingPtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationPassthroughBehaviorOutput{})
	pulumi.RegisterOutputType(MethodIntegrationPassthroughBehaviorPtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationResponseContentHandlingOutput{})
	pulumi.RegisterOutputType(MethodIntegrationResponseContentHandlingPtrOutput{})
	pulumi.RegisterOutputType(MethodIntegrationTypeOutput{})
	pulumi.RegisterOutputType(MethodIntegrationTypePtrOutput{})
	pulumi.RegisterOutputType(UsagePlanKeyKeyTypeOutput{})
	pulumi.RegisterOutputType(UsagePlanKeyKeyTypePtrOutput{})
}
