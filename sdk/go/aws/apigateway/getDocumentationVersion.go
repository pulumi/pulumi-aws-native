// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The “AWS::ApiGateway::DocumentationVersion“ resource creates a snapshot of the documentation for an API. For more information, see [Representation of API Documentation in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api-content-representation.html) in the *API Gateway Developer Guide*.
func LookupDocumentationVersion(ctx *pulumi.Context, args *LookupDocumentationVersionArgs, opts ...pulumi.InvokeOption) (*LookupDocumentationVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDocumentationVersionResult
	err := ctx.Invoke("aws-native:apigateway:getDocumentationVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDocumentationVersionArgs struct {
	// The version identifier of the to-be-updated documentation version.
	DocumentationVersion string `pulumi:"documentationVersion"`
	// The string identifier of the associated RestApi.
	RestApiId string `pulumi:"restApiId"`
}

type LookupDocumentationVersionResult struct {
	// A description about the new documentation snapshot.
	Description *string `pulumi:"description"`
}

func LookupDocumentationVersionOutput(ctx *pulumi.Context, args LookupDocumentationVersionOutputArgs, opts ...pulumi.InvokeOption) LookupDocumentationVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDocumentationVersionResult, error) {
			args := v.(LookupDocumentationVersionArgs)
			r, err := LookupDocumentationVersion(ctx, &args, opts...)
			var s LookupDocumentationVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDocumentationVersionResultOutput)
}

type LookupDocumentationVersionOutputArgs struct {
	// The version identifier of the to-be-updated documentation version.
	DocumentationVersion pulumi.StringInput `pulumi:"documentationVersion"`
	// The string identifier of the associated RestApi.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
}

func (LookupDocumentationVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDocumentationVersionArgs)(nil)).Elem()
}

type LookupDocumentationVersionResultOutput struct{ *pulumi.OutputState }

func (LookupDocumentationVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDocumentationVersionResult)(nil)).Elem()
}

func (o LookupDocumentationVersionResultOutput) ToLookupDocumentationVersionResultOutput() LookupDocumentationVersionResultOutput {
	return o
}

func (o LookupDocumentationVersionResultOutput) ToLookupDocumentationVersionResultOutputWithContext(ctx context.Context) LookupDocumentationVersionResultOutput {
	return o
}

func (o LookupDocumentationVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDocumentationVersionResult] {
	return pulumix.Output[LookupDocumentationVersionResult]{
		OutputState: o.OutputState,
	}
}

// A description about the new documentation snapshot.
func (o LookupDocumentationVersionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDocumentationVersionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDocumentationVersionResultOutput{})
}
