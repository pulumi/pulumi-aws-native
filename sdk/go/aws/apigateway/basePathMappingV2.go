// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApiGateway::BasePathMappingV2
type BasePathMappingV2 struct {
	pulumi.CustomResourceState

	// The base path name that callers of the API must provide in the URL after the domain name.
	BasePath pulumi.StringPtrOutput `pulumi:"basePath"`
	// Amazon Resource Name (ARN) of the resource.
	BasePathMappingArn pulumi.StringOutput `pulumi:"basePathMappingArn"`
	// The Arn of an AWS::ApiGateway::DomainNameV2 resource.
	DomainNameArn pulumi.StringOutput `pulumi:"domainNameArn"`
	// The ID of the API.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
	// The name of the API's stage.
	Stage pulumi.StringPtrOutput `pulumi:"stage"`
}

// NewBasePathMappingV2 registers a new resource with the given unique name, arguments, and options.
func NewBasePathMappingV2(ctx *pulumi.Context,
	name string, args *BasePathMappingV2Args, opts ...pulumi.ResourceOption) (*BasePathMappingV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainNameArn == nil {
		return nil, errors.New("invalid value for required argument 'DomainNameArn'")
	}
	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"basePath",
		"domainNameArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BasePathMappingV2
	err := ctx.RegisterResource("aws-native:apigateway:BasePathMappingV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBasePathMappingV2 gets an existing BasePathMappingV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBasePathMappingV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BasePathMappingV2State, opts ...pulumi.ResourceOption) (*BasePathMappingV2, error) {
	var resource BasePathMappingV2
	err := ctx.ReadResource("aws-native:apigateway:BasePathMappingV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BasePathMappingV2 resources.
type basePathMappingV2State struct {
}

type BasePathMappingV2State struct {
}

func (BasePathMappingV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*basePathMappingV2State)(nil)).Elem()
}

type basePathMappingV2Args struct {
	// The base path name that callers of the API must provide in the URL after the domain name.
	BasePath *string `pulumi:"basePath"`
	// The Arn of an AWS::ApiGateway::DomainNameV2 resource.
	DomainNameArn string `pulumi:"domainNameArn"`
	// The ID of the API.
	RestApiId string `pulumi:"restApiId"`
	// The name of the API's stage.
	Stage *string `pulumi:"stage"`
}

// The set of arguments for constructing a BasePathMappingV2 resource.
type BasePathMappingV2Args struct {
	// The base path name that callers of the API must provide in the URL after the domain name.
	BasePath pulumi.StringPtrInput
	// The Arn of an AWS::ApiGateway::DomainNameV2 resource.
	DomainNameArn pulumi.StringInput
	// The ID of the API.
	RestApiId pulumi.StringInput
	// The name of the API's stage.
	Stage pulumi.StringPtrInput
}

func (BasePathMappingV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*basePathMappingV2Args)(nil)).Elem()
}

type BasePathMappingV2Input interface {
	pulumi.Input

	ToBasePathMappingV2Output() BasePathMappingV2Output
	ToBasePathMappingV2OutputWithContext(ctx context.Context) BasePathMappingV2Output
}

func (*BasePathMappingV2) ElementType() reflect.Type {
	return reflect.TypeOf((**BasePathMappingV2)(nil)).Elem()
}

func (i *BasePathMappingV2) ToBasePathMappingV2Output() BasePathMappingV2Output {
	return i.ToBasePathMappingV2OutputWithContext(context.Background())
}

func (i *BasePathMappingV2) ToBasePathMappingV2OutputWithContext(ctx context.Context) BasePathMappingV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(BasePathMappingV2Output)
}

type BasePathMappingV2Output struct{ *pulumi.OutputState }

func (BasePathMappingV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**BasePathMappingV2)(nil)).Elem()
}

func (o BasePathMappingV2Output) ToBasePathMappingV2Output() BasePathMappingV2Output {
	return o
}

func (o BasePathMappingV2Output) ToBasePathMappingV2OutputWithContext(ctx context.Context) BasePathMappingV2Output {
	return o
}

// The base path name that callers of the API must provide in the URL after the domain name.
func (o BasePathMappingV2Output) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasePathMappingV2) pulumi.StringPtrOutput { return v.BasePath }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the resource.
func (o BasePathMappingV2Output) BasePathMappingArn() pulumi.StringOutput {
	return o.ApplyT(func(v *BasePathMappingV2) pulumi.StringOutput { return v.BasePathMappingArn }).(pulumi.StringOutput)
}

// The Arn of an AWS::ApiGateway::DomainNameV2 resource.
func (o BasePathMappingV2Output) DomainNameArn() pulumi.StringOutput {
	return o.ApplyT(func(v *BasePathMappingV2) pulumi.StringOutput { return v.DomainNameArn }).(pulumi.StringOutput)
}

// The ID of the API.
func (o BasePathMappingV2Output) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *BasePathMappingV2) pulumi.StringOutput { return v.RestApiId }).(pulumi.StringOutput)
}

// The name of the API's stage.
func (o BasePathMappingV2Output) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BasePathMappingV2) pulumi.StringPtrOutput { return v.Stage }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BasePathMappingV2Input)(nil)).Elem(), &BasePathMappingV2{})
	pulumi.RegisterOutputType(BasePathMappingV2Output{})
}
