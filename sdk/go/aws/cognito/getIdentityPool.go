// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::IdentityPool
func LookupIdentityPool(ctx *pulumi.Context, args *LookupIdentityPoolArgs, opts ...pulumi.InvokeOption) (*LookupIdentityPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentityPoolResult
	err := ctx.Invoke("aws-native:cognito:getIdentityPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentityPoolArgs struct {
	Id string `pulumi:"id"`
}

type LookupIdentityPoolResult struct {
	// Enables the Basic (Classic) authentication flow.
	AllowClassicFlow *bool `pulumi:"allowClassicFlow"`
	// Specifies whether the identity pool supports unauthenticated logins.
	AllowUnauthenticatedIdentities *bool `pulumi:"allowUnauthenticatedIdentities"`
	// `CognitoIdentityProvider` is a property of the [AWS::Cognito::IdentityPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html) resource that represents an Amazon Cognito user pool and its client ID.
	CognitoIdentityProviders []IdentityPoolCognitoIdentityProvider `pulumi:"cognitoIdentityProviders"`
	// The "domain" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).
	//
	// *Minimum length* : 1
	//
	// *Maximum length* : 100
	DeveloperProviderName *string `pulumi:"developerProviderName"`
	Id                    *string `pulumi:"id"`
	// The name of your Amazon Cognito identity pool.
	//
	// *Minimum length* : 1
	//
	// *Maximum length* : 128
	//
	// *Pattern* : `[\w\s+=,.@-]+`
	IdentityPoolName *string `pulumi:"identityPoolName"`
	// The name of the Amazon Cognito identity pool, returned as a string.
	Name *string `pulumi:"name"`
	// The Amazon Resource Names (ARNs) of the OpenID connect providers.
	OpenIdConnectProviderArns []string `pulumi:"openIdConnectProviderArns"`
	// The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.
	SamlProviderArns []string `pulumi:"samlProviderArns"`
	// Key-value pairs that map provider names to provider app IDs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPool` for more information about the expected schema for this property.
	SupportedLoginProviders interface{} `pulumi:"supportedLoginProviders"`
}

func LookupIdentityPoolOutput(ctx *pulumi.Context, args LookupIdentityPoolOutputArgs, opts ...pulumi.InvokeOption) LookupIdentityPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentityPoolResult, error) {
			args := v.(LookupIdentityPoolArgs)
			r, err := LookupIdentityPool(ctx, &args, opts...)
			var s LookupIdentityPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIdentityPoolResultOutput)
}

type LookupIdentityPoolOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIdentityPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolArgs)(nil)).Elem()
}

type LookupIdentityPoolResultOutput struct{ *pulumi.OutputState }

func (LookupIdentityPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolResult)(nil)).Elem()
}

func (o LookupIdentityPoolResultOutput) ToLookupIdentityPoolResultOutput() LookupIdentityPoolResultOutput {
	return o
}

func (o LookupIdentityPoolResultOutput) ToLookupIdentityPoolResultOutputWithContext(ctx context.Context) LookupIdentityPoolResultOutput {
	return o
}

// Enables the Basic (Classic) authentication flow.
func (o LookupIdentityPoolResultOutput) AllowClassicFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *bool { return v.AllowClassicFlow }).(pulumi.BoolPtrOutput)
}

// Specifies whether the identity pool supports unauthenticated logins.
func (o LookupIdentityPoolResultOutput) AllowUnauthenticatedIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *bool { return v.AllowUnauthenticatedIdentities }).(pulumi.BoolPtrOutput)
}

// `CognitoIdentityProvider` is a property of the [AWS::Cognito::IdentityPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html) resource that represents an Amazon Cognito user pool and its client ID.
func (o LookupIdentityPoolResultOutput) CognitoIdentityProviders() IdentityPoolCognitoIdentityProviderArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []IdentityPoolCognitoIdentityProvider {
		return v.CognitoIdentityProviders
	}).(IdentityPoolCognitoIdentityProviderArrayOutput)
}

// The "domain" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).
//
// *Minimum length* : 1
//
// *Maximum length* : 100
func (o LookupIdentityPoolResultOutput) DeveloperProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.DeveloperProviderName }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityPoolResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of your Amazon Cognito identity pool.
//
// *Minimum length* : 1
//
// *Maximum length* : 128
//
// *Pattern* : `[\w\s+=,.@-]+`
func (o LookupIdentityPoolResultOutput) IdentityPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.IdentityPoolName }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Cognito identity pool, returned as a string.
func (o LookupIdentityPoolResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Names (ARNs) of the OpenID connect providers.
func (o LookupIdentityPoolResultOutput) OpenIdConnectProviderArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []string { return v.OpenIdConnectProviderArns }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.
func (o LookupIdentityPoolResultOutput) SamlProviderArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []string { return v.SamlProviderArns }).(pulumi.StringArrayOutput)
}

// Key-value pairs that map provider names to provider app IDs.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPool` for more information about the expected schema for this property.
func (o LookupIdentityPoolResultOutput) SupportedLoginProviders() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) interface{} { return v.SupportedLoginProviders }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentityPoolResultOutput{})
}
