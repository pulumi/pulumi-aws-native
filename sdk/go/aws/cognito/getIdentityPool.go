// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Cognito::IdentityPool
func LookupIdentityPool(ctx *pulumi.Context, args *LookupIdentityPoolArgs, opts ...pulumi.InvokeOption) (*LookupIdentityPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentityPoolResult
	err := ctx.Invoke("aws-native:cognito:getIdentityPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentityPoolArgs struct {
	Id string `pulumi:"id"`
}

type LookupIdentityPoolResult struct {
	AllowClassicFlow               *bool                                 `pulumi:"allowClassicFlow"`
	AllowUnauthenticatedIdentities *bool                                 `pulumi:"allowUnauthenticatedIdentities"`
	CognitoIdentityProviders       []IdentityPoolCognitoIdentityProvider `pulumi:"cognitoIdentityProviders"`
	DeveloperProviderName          *string                               `pulumi:"developerProviderName"`
	Id                             *string                               `pulumi:"id"`
	IdentityPoolName               *string                               `pulumi:"identityPoolName"`
	// An array of key-value pairs to apply to this resource.
	IdentityPoolTags          []IdentityPoolTag `pulumi:"identityPoolTags"`
	Name                      *string           `pulumi:"name"`
	OpenIdConnectProviderArns []string          `pulumi:"openIdConnectProviderArns"`
	SamlProviderArns          []string          `pulumi:"samlProviderArns"`
	SupportedLoginProviders   interface{}       `pulumi:"supportedLoginProviders"`
}

func LookupIdentityPoolOutput(ctx *pulumi.Context, args LookupIdentityPoolOutputArgs, opts ...pulumi.InvokeOption) LookupIdentityPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentityPoolResult, error) {
			args := v.(LookupIdentityPoolArgs)
			r, err := LookupIdentityPool(ctx, &args, opts...)
			var s LookupIdentityPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIdentityPoolResultOutput)
}

type LookupIdentityPoolOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIdentityPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolArgs)(nil)).Elem()
}

type LookupIdentityPoolResultOutput struct{ *pulumi.OutputState }

func (LookupIdentityPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolResult)(nil)).Elem()
}

func (o LookupIdentityPoolResultOutput) ToLookupIdentityPoolResultOutput() LookupIdentityPoolResultOutput {
	return o
}

func (o LookupIdentityPoolResultOutput) ToLookupIdentityPoolResultOutputWithContext(ctx context.Context) LookupIdentityPoolResultOutput {
	return o
}

func (o LookupIdentityPoolResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIdentityPoolResult] {
	return pulumix.Output[LookupIdentityPoolResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIdentityPoolResultOutput) AllowClassicFlow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *bool { return v.AllowClassicFlow }).(pulumi.BoolPtrOutput)
}

func (o LookupIdentityPoolResultOutput) AllowUnauthenticatedIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *bool { return v.AllowUnauthenticatedIdentities }).(pulumi.BoolPtrOutput)
}

func (o LookupIdentityPoolResultOutput) CognitoIdentityProviders() IdentityPoolCognitoIdentityProviderArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []IdentityPoolCognitoIdentityProvider {
		return v.CognitoIdentityProviders
	}).(IdentityPoolCognitoIdentityProviderArrayOutput)
}

func (o LookupIdentityPoolResultOutput) DeveloperProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.DeveloperProviderName }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityPoolResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityPoolResultOutput) IdentityPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.IdentityPoolName }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupIdentityPoolResultOutput) IdentityPoolTags() IdentityPoolTagArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []IdentityPoolTag { return v.IdentityPoolTags }).(IdentityPoolTagArrayOutput)
}

func (o LookupIdentityPoolResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityPoolResultOutput) OpenIdConnectProviderArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []string { return v.OpenIdConnectProviderArns }).(pulumi.StringArrayOutput)
}

func (o LookupIdentityPoolResultOutput) SamlProviderArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) []string { return v.SamlProviderArns }).(pulumi.StringArrayOutput)
}

func (o LookupIdentityPoolResultOutput) SupportedLoginProviders() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIdentityPoolResult) interface{} { return v.SupportedLoginProviders }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentityPoolResultOutput{})
}
