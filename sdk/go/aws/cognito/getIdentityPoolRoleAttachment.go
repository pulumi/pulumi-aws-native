// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::IdentityPoolRoleAttachment
func LookupIdentityPoolRoleAttachment(ctx *pulumi.Context, args *LookupIdentityPoolRoleAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupIdentityPoolRoleAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentityPoolRoleAttachmentResult
	err := ctx.Invoke("aws-native:cognito:getIdentityPoolRoleAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentityPoolRoleAttachmentArgs struct {
	// The resource ID.
	Id string `pulumi:"id"`
}

type LookupIdentityPoolRoleAttachmentResult struct {
	// The resource ID.
	Id *string `pulumi:"id"`
	// How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .
	//
	// If the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.
	//
	// For more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .
	RoleMappings map[string]IdentityPoolRoleAttachmentRoleMapping `pulumi:"roleMappings"`
	// The map of the roles associated with this pool. For a given role, the key is either "authenticated" or "unauthenticated". The value is the role ARN.
	Roles map[string]string `pulumi:"roles"`
}

func LookupIdentityPoolRoleAttachmentOutput(ctx *pulumi.Context, args LookupIdentityPoolRoleAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupIdentityPoolRoleAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentityPoolRoleAttachmentResultOutput, error) {
			args := v.(LookupIdentityPoolRoleAttachmentArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupIdentityPoolRoleAttachmentResult
			secret, err := ctx.InvokePackageRaw("aws-native:cognito:getIdentityPoolRoleAttachment", args, &rv, "", opts...)
			if err != nil {
				return LookupIdentityPoolRoleAttachmentResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupIdentityPoolRoleAttachmentResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupIdentityPoolRoleAttachmentResultOutput), nil
			}
			return output, nil
		}).(LookupIdentityPoolRoleAttachmentResultOutput)
}

type LookupIdentityPoolRoleAttachmentOutputArgs struct {
	// The resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIdentityPoolRoleAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolRoleAttachmentArgs)(nil)).Elem()
}

type LookupIdentityPoolRoleAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupIdentityPoolRoleAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolRoleAttachmentResult)(nil)).Elem()
}

func (o LookupIdentityPoolRoleAttachmentResultOutput) ToLookupIdentityPoolRoleAttachmentResultOutput() LookupIdentityPoolRoleAttachmentResultOutput {
	return o
}

func (o LookupIdentityPoolRoleAttachmentResultOutput) ToLookupIdentityPoolRoleAttachmentResultOutputWithContext(ctx context.Context) LookupIdentityPoolRoleAttachmentResultOutput {
	return o
}

// The resource ID.
func (o LookupIdentityPoolRoleAttachmentResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolRoleAttachmentResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// How users for a specific identity provider are mapped to roles. This is a string to the `RoleMapping` object map. The string identifies the identity provider. For example: `graph.facebook.com` or `cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id` .
//
// If the `IdentityProvider` field isn't provided in this object, the string is used as the identity provider name.
//
// For more information, see the [RoleMapping property](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html) .
func (o LookupIdentityPoolRoleAttachmentResultOutput) RoleMappings() IdentityPoolRoleAttachmentRoleMappingMapOutput {
	return o.ApplyT(func(v LookupIdentityPoolRoleAttachmentResult) map[string]IdentityPoolRoleAttachmentRoleMapping {
		return v.RoleMappings
	}).(IdentityPoolRoleAttachmentRoleMappingMapOutput)
}

// The map of the roles associated with this pool. For a given role, the key is either "authenticated" or "unauthenticated". The value is the role ARN.
func (o LookupIdentityPoolRoleAttachmentResultOutput) Roles() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIdentityPoolRoleAttachmentResult) map[string]string { return v.Roles }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentityPoolRoleAttachmentResultOutput{})
}
