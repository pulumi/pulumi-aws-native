// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Cognito::IdentityPoolPrincipalTag
func LookupIdentityPoolPrincipalTag(ctx *pulumi.Context, args *LookupIdentityPoolPrincipalTagArgs, opts ...pulumi.InvokeOption) (*LookupIdentityPoolPrincipalTagResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentityPoolPrincipalTagResult
	err := ctx.Invoke("aws-native:cognito:getIdentityPoolPrincipalTag", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentityPoolPrincipalTagArgs struct {
	IdentityPoolId       string `pulumi:"identityPoolId"`
	IdentityProviderName string `pulumi:"identityProviderName"`
}

type LookupIdentityPoolPrincipalTagResult struct {
	PrincipalTags interface{} `pulumi:"principalTags"`
	UseDefaults   *bool       `pulumi:"useDefaults"`
}

func LookupIdentityPoolPrincipalTagOutput(ctx *pulumi.Context, args LookupIdentityPoolPrincipalTagOutputArgs, opts ...pulumi.InvokeOption) LookupIdentityPoolPrincipalTagResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentityPoolPrincipalTagResult, error) {
			args := v.(LookupIdentityPoolPrincipalTagArgs)
			r, err := LookupIdentityPoolPrincipalTag(ctx, &args, opts...)
			var s LookupIdentityPoolPrincipalTagResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIdentityPoolPrincipalTagResultOutput)
}

type LookupIdentityPoolPrincipalTagOutputArgs struct {
	IdentityPoolId       pulumi.StringInput `pulumi:"identityPoolId"`
	IdentityProviderName pulumi.StringInput `pulumi:"identityProviderName"`
}

func (LookupIdentityPoolPrincipalTagOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolPrincipalTagArgs)(nil)).Elem()
}

type LookupIdentityPoolPrincipalTagResultOutput struct{ *pulumi.OutputState }

func (LookupIdentityPoolPrincipalTagResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityPoolPrincipalTagResult)(nil)).Elem()
}

func (o LookupIdentityPoolPrincipalTagResultOutput) ToLookupIdentityPoolPrincipalTagResultOutput() LookupIdentityPoolPrincipalTagResultOutput {
	return o
}

func (o LookupIdentityPoolPrincipalTagResultOutput) ToLookupIdentityPoolPrincipalTagResultOutputWithContext(ctx context.Context) LookupIdentityPoolPrincipalTagResultOutput {
	return o
}

func (o LookupIdentityPoolPrincipalTagResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIdentityPoolPrincipalTagResult] {
	return pulumix.Output[LookupIdentityPoolPrincipalTagResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIdentityPoolPrincipalTagResultOutput) PrincipalTags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIdentityPoolPrincipalTagResult) interface{} { return v.PrincipalTags }).(pulumi.AnyOutput)
}

func (o LookupIdentityPoolPrincipalTagResultOutput) UseDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupIdentityPoolPrincipalTagResult) *bool { return v.UseDefaults }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentityPoolPrincipalTagResultOutput{})
}
