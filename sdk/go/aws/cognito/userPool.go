// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::UserPool
//
// Deprecated: UserPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type UserPool struct {
	pulumi.CustomResourceState

	AccountRecoverySetting      UserPoolAccountRecoverySettingPtrOutput      `pulumi:"accountRecoverySetting"`
	AdminCreateUserConfig       UserPoolAdminCreateUserConfigPtrOutput       `pulumi:"adminCreateUserConfig"`
	AliasAttributes             pulumi.StringArrayOutput                     `pulumi:"aliasAttributes"`
	Arn                         pulumi.StringOutput                          `pulumi:"arn"`
	AutoVerifiedAttributes      pulumi.StringArrayOutput                     `pulumi:"autoVerifiedAttributes"`
	DeviceConfiguration         UserPoolDeviceConfigurationPtrOutput         `pulumi:"deviceConfiguration"`
	EmailConfiguration          UserPoolEmailConfigurationPtrOutput          `pulumi:"emailConfiguration"`
	EmailVerificationMessage    pulumi.StringPtrOutput                       `pulumi:"emailVerificationMessage"`
	EmailVerificationSubject    pulumi.StringPtrOutput                       `pulumi:"emailVerificationSubject"`
	EnabledMfas                 pulumi.StringArrayOutput                     `pulumi:"enabledMfas"`
	LambdaConfig                UserPoolLambdaConfigPtrOutput                `pulumi:"lambdaConfig"`
	MfaConfiguration            pulumi.StringPtrOutput                       `pulumi:"mfaConfiguration"`
	Policies                    UserPoolPoliciesPtrOutput                    `pulumi:"policies"`
	ProviderName                pulumi.StringOutput                          `pulumi:"providerName"`
	ProviderURL                 pulumi.StringOutput                          `pulumi:"providerURL"`
	Schema                      UserPoolSchemaAttributeArrayOutput           `pulumi:"schema"`
	SmsAuthenticationMessage    pulumi.StringPtrOutput                       `pulumi:"smsAuthenticationMessage"`
	SmsConfiguration            UserPoolSmsConfigurationPtrOutput            `pulumi:"smsConfiguration"`
	SmsVerificationMessage      pulumi.StringPtrOutput                       `pulumi:"smsVerificationMessage"`
	UserPoolAddOns              UserPoolAddOnsPtrOutput                      `pulumi:"userPoolAddOns"`
	UserPoolName                pulumi.StringPtrOutput                       `pulumi:"userPoolName"`
	UserPoolTags                pulumi.AnyOutput                             `pulumi:"userPoolTags"`
	UsernameAttributes          pulumi.StringArrayOutput                     `pulumi:"usernameAttributes"`
	UsernameConfiguration       UserPoolUsernameConfigurationPtrOutput       `pulumi:"usernameConfiguration"`
	VerificationMessageTemplate UserPoolVerificationMessageTemplatePtrOutput `pulumi:"verificationMessageTemplate"`
}

// NewUserPool registers a new resource with the given unique name, arguments, and options.
func NewUserPool(ctx *pulumi.Context,
	name string, args *UserPoolArgs, opts ...pulumi.ResourceOption) (*UserPool, error) {
	if args == nil {
		args = &UserPoolArgs{}
	}

	var resource UserPool
	err := ctx.RegisterResource("aws-native:cognito:UserPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPool gets an existing UserPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolState, opts ...pulumi.ResourceOption) (*UserPool, error) {
	var resource UserPool
	err := ctx.ReadResource("aws-native:cognito:UserPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPool resources.
type userPoolState struct {
}

type UserPoolState struct {
}

func (UserPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolState)(nil)).Elem()
}

type userPoolArgs struct {
	AccountRecoverySetting      *UserPoolAccountRecoverySetting      `pulumi:"accountRecoverySetting"`
	AdminCreateUserConfig       *UserPoolAdminCreateUserConfig       `pulumi:"adminCreateUserConfig"`
	AliasAttributes             []string                             `pulumi:"aliasAttributes"`
	AutoVerifiedAttributes      []string                             `pulumi:"autoVerifiedAttributes"`
	DeviceConfiguration         *UserPoolDeviceConfiguration         `pulumi:"deviceConfiguration"`
	EmailConfiguration          *UserPoolEmailConfiguration          `pulumi:"emailConfiguration"`
	EmailVerificationMessage    *string                              `pulumi:"emailVerificationMessage"`
	EmailVerificationSubject    *string                              `pulumi:"emailVerificationSubject"`
	EnabledMfas                 []string                             `pulumi:"enabledMfas"`
	LambdaConfig                *UserPoolLambdaConfig                `pulumi:"lambdaConfig"`
	MfaConfiguration            *string                              `pulumi:"mfaConfiguration"`
	Policies                    *UserPoolPolicies                    `pulumi:"policies"`
	Schema                      []UserPoolSchemaAttribute            `pulumi:"schema"`
	SmsAuthenticationMessage    *string                              `pulumi:"smsAuthenticationMessage"`
	SmsConfiguration            *UserPoolSmsConfiguration            `pulumi:"smsConfiguration"`
	SmsVerificationMessage      *string                              `pulumi:"smsVerificationMessage"`
	UserPoolAddOns              *UserPoolAddOns                      `pulumi:"userPoolAddOns"`
	UserPoolName                *string                              `pulumi:"userPoolName"`
	UserPoolTags                interface{}                          `pulumi:"userPoolTags"`
	UsernameAttributes          []string                             `pulumi:"usernameAttributes"`
	UsernameConfiguration       *UserPoolUsernameConfiguration       `pulumi:"usernameConfiguration"`
	VerificationMessageTemplate *UserPoolVerificationMessageTemplate `pulumi:"verificationMessageTemplate"`
}

// The set of arguments for constructing a UserPool resource.
type UserPoolArgs struct {
	AccountRecoverySetting      UserPoolAccountRecoverySettingPtrInput
	AdminCreateUserConfig       UserPoolAdminCreateUserConfigPtrInput
	AliasAttributes             pulumi.StringArrayInput
	AutoVerifiedAttributes      pulumi.StringArrayInput
	DeviceConfiguration         UserPoolDeviceConfigurationPtrInput
	EmailConfiguration          UserPoolEmailConfigurationPtrInput
	EmailVerificationMessage    pulumi.StringPtrInput
	EmailVerificationSubject    pulumi.StringPtrInput
	EnabledMfas                 pulumi.StringArrayInput
	LambdaConfig                UserPoolLambdaConfigPtrInput
	MfaConfiguration            pulumi.StringPtrInput
	Policies                    UserPoolPoliciesPtrInput
	Schema                      UserPoolSchemaAttributeArrayInput
	SmsAuthenticationMessage    pulumi.StringPtrInput
	SmsConfiguration            UserPoolSmsConfigurationPtrInput
	SmsVerificationMessage      pulumi.StringPtrInput
	UserPoolAddOns              UserPoolAddOnsPtrInput
	UserPoolName                pulumi.StringPtrInput
	UserPoolTags                pulumi.Input
	UsernameAttributes          pulumi.StringArrayInput
	UsernameConfiguration       UserPoolUsernameConfigurationPtrInput
	VerificationMessageTemplate UserPoolVerificationMessageTemplatePtrInput
}

func (UserPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolArgs)(nil)).Elem()
}

type UserPoolInput interface {
	pulumi.Input

	ToUserPoolOutput() UserPoolOutput
	ToUserPoolOutputWithContext(ctx context.Context) UserPoolOutput
}

func (*UserPool) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPool)(nil))
}

func (i *UserPool) ToUserPoolOutput() UserPoolOutput {
	return i.ToUserPoolOutputWithContext(context.Background())
}

func (i *UserPool) ToUserPoolOutputWithContext(ctx context.Context) UserPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolOutput)
}

type UserPoolOutput struct{ *pulumi.OutputState }

func (UserPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPool)(nil))
}

func (o UserPoolOutput) ToUserPoolOutput() UserPoolOutput {
	return o
}

func (o UserPoolOutput) ToUserPoolOutputWithContext(ctx context.Context) UserPoolOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(UserPoolOutput{})
}
