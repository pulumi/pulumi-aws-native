// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IdentityPoolCognitoIdentityProvider struct {
	// The client ID for the Amazon Cognito user pool.
	ClientId string `pulumi:"clientId"`
	// The provider name for an Amazon Cognito user pool. For example: `cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789` .
	ProviderName string `pulumi:"providerName"`
	// TRUE if server-side token validation is enabled for the identity provider’s token.
	//
	// After you set the `ServerSideTokenCheck` to TRUE for an identity pool, that identity pool checks with the integrated user pools to make sure the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.
	//
	// If the user is signed out or deleted, the identity pool returns a 400 Not Authorized error.
	ServerSideTokenCheck *bool `pulumi:"serverSideTokenCheck"`
}

// IdentityPoolCognitoIdentityProviderInput is an input type that accepts IdentityPoolCognitoIdentityProviderArgs and IdentityPoolCognitoIdentityProviderOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderInput` via:
//
//	IdentityPoolCognitoIdentityProviderArgs{...}
type IdentityPoolCognitoIdentityProviderInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput
	ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderOutput
}

type IdentityPoolCognitoIdentityProviderArgs struct {
	// The client ID for the Amazon Cognito user pool.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The provider name for an Amazon Cognito user pool. For example: `cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789` .
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// TRUE if server-side token validation is enabled for the identity provider’s token.
	//
	// After you set the `ServerSideTokenCheck` to TRUE for an identity pool, that identity pool checks with the integrated user pools to make sure the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.
	//
	// If the user is signed out or deleted, the identity pool returns a 400 Not Authorized error.
	ServerSideTokenCheck pulumi.BoolPtrInput `pulumi:"serverSideTokenCheck"`
}

func (IdentityPoolCognitoIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return i.ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderOutput)
}

// IdentityPoolCognitoIdentityProviderArrayInput is an input type that accepts IdentityPoolCognitoIdentityProviderArray and IdentityPoolCognitoIdentityProviderArrayOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderArrayInput` via:
//
//	IdentityPoolCognitoIdentityProviderArray{ IdentityPoolCognitoIdentityProviderArgs{...} }
type IdentityPoolCognitoIdentityProviderArrayInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput
	ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderArrayOutput
}

type IdentityPoolCognitoIdentityProviderArray []IdentityPoolCognitoIdentityProviderInput

func (IdentityPoolCognitoIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return i.ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderArrayOutput)
}

type IdentityPoolCognitoIdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return o
}

// The client ID for the Amazon Cognito user pool.
func (o IdentityPoolCognitoIdentityProviderOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) string { return v.ClientId }).(pulumi.StringOutput)
}

// The provider name for an Amazon Cognito user pool. For example: `cognito-idp.us-east-2.amazonaws.com/us-east-2_123456789` .
func (o IdentityPoolCognitoIdentityProviderOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) string { return v.ProviderName }).(pulumi.StringOutput)
}

// TRUE if server-side token validation is enabled for the identity provider’s token.
//
// After you set the `ServerSideTokenCheck` to TRUE for an identity pool, that identity pool checks with the integrated user pools to make sure the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.
//
// If the user is signed out or deleted, the identity pool returns a 400 Not Authorized error.
func (o IdentityPoolCognitoIdentityProviderOutput) ServerSideTokenCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *bool { return v.ServerSideTokenCheck }).(pulumi.BoolPtrOutput)
}

type IdentityPoolCognitoIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) Index(i pulumi.IntInput) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolCognitoIdentityProvider {
		return vs[0].([]IdentityPoolCognitoIdentityProvider)[vs[1].(int)]
	}).(IdentityPoolCognitoIdentityProviderOutput)
}

type IdentityPoolCognitoStreams struct {
	// The Amazon Resource Name (ARN) of the role Amazon Cognito can assume to publish to the stream. This role must grant access to Amazon Cognito (cognito-sync) to invoke `PutRecord` on your Amazon Cognito stream.
	RoleArn *string `pulumi:"roleArn"`
	// The name of the Amazon Cognito stream to receive updates. This stream must be in the developer's account and in the same Region as the identity pool.
	StreamName *string `pulumi:"streamName"`
	// Status of the Amazon Cognito streams. Valid values are: `ENABLED` or `DISABLED` .
	StreamingStatus *string `pulumi:"streamingStatus"`
}

// IdentityPoolCognitoStreamsInput is an input type that accepts IdentityPoolCognitoStreamsArgs and IdentityPoolCognitoStreamsOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoStreamsInput` via:
//
//	IdentityPoolCognitoStreamsArgs{...}
type IdentityPoolCognitoStreamsInput interface {
	pulumi.Input

	ToIdentityPoolCognitoStreamsOutput() IdentityPoolCognitoStreamsOutput
	ToIdentityPoolCognitoStreamsOutputWithContext(context.Context) IdentityPoolCognitoStreamsOutput
}

type IdentityPoolCognitoStreamsArgs struct {
	// The Amazon Resource Name (ARN) of the role Amazon Cognito can assume to publish to the stream. This role must grant access to Amazon Cognito (cognito-sync) to invoke `PutRecord` on your Amazon Cognito stream.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The name of the Amazon Cognito stream to receive updates. This stream must be in the developer's account and in the same Region as the identity pool.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
	// Status of the Amazon Cognito streams. Valid values are: `ENABLED` or `DISABLED` .
	StreamingStatus pulumi.StringPtrInput `pulumi:"streamingStatus"`
}

func (IdentityPoolCognitoStreamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoStreams)(nil)).Elem()
}

func (i IdentityPoolCognitoStreamsArgs) ToIdentityPoolCognitoStreamsOutput() IdentityPoolCognitoStreamsOutput {
	return i.ToIdentityPoolCognitoStreamsOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoStreamsArgs) ToIdentityPoolCognitoStreamsOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoStreamsOutput)
}

func (i IdentityPoolCognitoStreamsArgs) ToIdentityPoolCognitoStreamsPtrOutput() IdentityPoolCognitoStreamsPtrOutput {
	return i.ToIdentityPoolCognitoStreamsPtrOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoStreamsArgs) ToIdentityPoolCognitoStreamsPtrOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoStreamsOutput).ToIdentityPoolCognitoStreamsPtrOutputWithContext(ctx)
}

// IdentityPoolCognitoStreamsPtrInput is an input type that accepts IdentityPoolCognitoStreamsArgs, IdentityPoolCognitoStreamsPtr and IdentityPoolCognitoStreamsPtrOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoStreamsPtrInput` via:
//
//	        IdentityPoolCognitoStreamsArgs{...}
//
//	or:
//
//	        nil
type IdentityPoolCognitoStreamsPtrInput interface {
	pulumi.Input

	ToIdentityPoolCognitoStreamsPtrOutput() IdentityPoolCognitoStreamsPtrOutput
	ToIdentityPoolCognitoStreamsPtrOutputWithContext(context.Context) IdentityPoolCognitoStreamsPtrOutput
}

type identityPoolCognitoStreamsPtrType IdentityPoolCognitoStreamsArgs

func IdentityPoolCognitoStreamsPtr(v *IdentityPoolCognitoStreamsArgs) IdentityPoolCognitoStreamsPtrInput {
	return (*identityPoolCognitoStreamsPtrType)(v)
}

func (*identityPoolCognitoStreamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolCognitoStreams)(nil)).Elem()
}

func (i *identityPoolCognitoStreamsPtrType) ToIdentityPoolCognitoStreamsPtrOutput() IdentityPoolCognitoStreamsPtrOutput {
	return i.ToIdentityPoolCognitoStreamsPtrOutputWithContext(context.Background())
}

func (i *identityPoolCognitoStreamsPtrType) ToIdentityPoolCognitoStreamsPtrOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoStreamsPtrOutput)
}

type IdentityPoolCognitoStreamsOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoStreamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoStreams)(nil)).Elem()
}

func (o IdentityPoolCognitoStreamsOutput) ToIdentityPoolCognitoStreamsOutput() IdentityPoolCognitoStreamsOutput {
	return o
}

func (o IdentityPoolCognitoStreamsOutput) ToIdentityPoolCognitoStreamsOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsOutput {
	return o
}

func (o IdentityPoolCognitoStreamsOutput) ToIdentityPoolCognitoStreamsPtrOutput() IdentityPoolCognitoStreamsPtrOutput {
	return o.ToIdentityPoolCognitoStreamsPtrOutputWithContext(context.Background())
}

func (o IdentityPoolCognitoStreamsOutput) ToIdentityPoolCognitoStreamsPtrOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityPoolCognitoStreams) *IdentityPoolCognitoStreams {
		return &v
	}).(IdentityPoolCognitoStreamsPtrOutput)
}

// The Amazon Resource Name (ARN) of the role Amazon Cognito can assume to publish to the stream. This role must grant access to Amazon Cognito (cognito-sync) to invoke `PutRecord` on your Amazon Cognito stream.
func (o IdentityPoolCognitoStreamsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoStreams) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Cognito stream to receive updates. This stream must be in the developer's account and in the same Region as the identity pool.
func (o IdentityPoolCognitoStreamsOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoStreams) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

// Status of the Amazon Cognito streams. Valid values are: `ENABLED` or `DISABLED` .
func (o IdentityPoolCognitoStreamsOutput) StreamingStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoStreams) *string { return v.StreamingStatus }).(pulumi.StringPtrOutput)
}

type IdentityPoolCognitoStreamsPtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoStreamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolCognitoStreams)(nil)).Elem()
}

func (o IdentityPoolCognitoStreamsPtrOutput) ToIdentityPoolCognitoStreamsPtrOutput() IdentityPoolCognitoStreamsPtrOutput {
	return o
}

func (o IdentityPoolCognitoStreamsPtrOutput) ToIdentityPoolCognitoStreamsPtrOutputWithContext(ctx context.Context) IdentityPoolCognitoStreamsPtrOutput {
	return o
}

func (o IdentityPoolCognitoStreamsPtrOutput) Elem() IdentityPoolCognitoStreamsOutput {
	return o.ApplyT(func(v *IdentityPoolCognitoStreams) IdentityPoolCognitoStreams {
		if v != nil {
			return *v
		}
		var ret IdentityPoolCognitoStreams
		return ret
	}).(IdentityPoolCognitoStreamsOutput)
}

// The Amazon Resource Name (ARN) of the role Amazon Cognito can assume to publish to the stream. This role must grant access to Amazon Cognito (cognito-sync) to invoke `PutRecord` on your Amazon Cognito stream.
func (o IdentityPoolCognitoStreamsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolCognitoStreams) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon Cognito stream to receive updates. This stream must be in the developer's account and in the same Region as the identity pool.
func (o IdentityPoolCognitoStreamsPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolCognitoStreams) *string {
		if v == nil {
			return nil
		}
		return v.StreamName
	}).(pulumi.StringPtrOutput)
}

// Status of the Amazon Cognito streams. Valid values are: `ENABLED` or `DISABLED` .
func (o IdentityPoolCognitoStreamsPtrOutput) StreamingStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolCognitoStreams) *string {
		if v == nil {
			return nil
		}
		return v.StreamingStatus
	}).(pulumi.StringPtrOutput)
}

type IdentityPoolPushSync struct {
	// The ARNs of the Amazon SNS platform applications that could be used by clients.
	ApplicationArns []string `pulumi:"applicationArns"`
	// An IAM role configured to allow Amazon Cognito to call Amazon SNS on behalf of the developer.
	RoleArn *string `pulumi:"roleArn"`
}

// IdentityPoolPushSyncInput is an input type that accepts IdentityPoolPushSyncArgs and IdentityPoolPushSyncOutput values.
// You can construct a concrete instance of `IdentityPoolPushSyncInput` via:
//
//	IdentityPoolPushSyncArgs{...}
type IdentityPoolPushSyncInput interface {
	pulumi.Input

	ToIdentityPoolPushSyncOutput() IdentityPoolPushSyncOutput
	ToIdentityPoolPushSyncOutputWithContext(context.Context) IdentityPoolPushSyncOutput
}

type IdentityPoolPushSyncArgs struct {
	// The ARNs of the Amazon SNS platform applications that could be used by clients.
	ApplicationArns pulumi.StringArrayInput `pulumi:"applicationArns"`
	// An IAM role configured to allow Amazon Cognito to call Amazon SNS on behalf of the developer.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (IdentityPoolPushSyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolPushSync)(nil)).Elem()
}

func (i IdentityPoolPushSyncArgs) ToIdentityPoolPushSyncOutput() IdentityPoolPushSyncOutput {
	return i.ToIdentityPoolPushSyncOutputWithContext(context.Background())
}

func (i IdentityPoolPushSyncArgs) ToIdentityPoolPushSyncOutputWithContext(ctx context.Context) IdentityPoolPushSyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolPushSyncOutput)
}

func (i IdentityPoolPushSyncArgs) ToIdentityPoolPushSyncPtrOutput() IdentityPoolPushSyncPtrOutput {
	return i.ToIdentityPoolPushSyncPtrOutputWithContext(context.Background())
}

func (i IdentityPoolPushSyncArgs) ToIdentityPoolPushSyncPtrOutputWithContext(ctx context.Context) IdentityPoolPushSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolPushSyncOutput).ToIdentityPoolPushSyncPtrOutputWithContext(ctx)
}

// IdentityPoolPushSyncPtrInput is an input type that accepts IdentityPoolPushSyncArgs, IdentityPoolPushSyncPtr and IdentityPoolPushSyncPtrOutput values.
// You can construct a concrete instance of `IdentityPoolPushSyncPtrInput` via:
//
//	        IdentityPoolPushSyncArgs{...}
//
//	or:
//
//	        nil
type IdentityPoolPushSyncPtrInput interface {
	pulumi.Input

	ToIdentityPoolPushSyncPtrOutput() IdentityPoolPushSyncPtrOutput
	ToIdentityPoolPushSyncPtrOutputWithContext(context.Context) IdentityPoolPushSyncPtrOutput
}

type identityPoolPushSyncPtrType IdentityPoolPushSyncArgs

func IdentityPoolPushSyncPtr(v *IdentityPoolPushSyncArgs) IdentityPoolPushSyncPtrInput {
	return (*identityPoolPushSyncPtrType)(v)
}

func (*identityPoolPushSyncPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolPushSync)(nil)).Elem()
}

func (i *identityPoolPushSyncPtrType) ToIdentityPoolPushSyncPtrOutput() IdentityPoolPushSyncPtrOutput {
	return i.ToIdentityPoolPushSyncPtrOutputWithContext(context.Background())
}

func (i *identityPoolPushSyncPtrType) ToIdentityPoolPushSyncPtrOutputWithContext(ctx context.Context) IdentityPoolPushSyncPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolPushSyncPtrOutput)
}

type IdentityPoolPushSyncOutput struct{ *pulumi.OutputState }

func (IdentityPoolPushSyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolPushSync)(nil)).Elem()
}

func (o IdentityPoolPushSyncOutput) ToIdentityPoolPushSyncOutput() IdentityPoolPushSyncOutput {
	return o
}

func (o IdentityPoolPushSyncOutput) ToIdentityPoolPushSyncOutputWithContext(ctx context.Context) IdentityPoolPushSyncOutput {
	return o
}

func (o IdentityPoolPushSyncOutput) ToIdentityPoolPushSyncPtrOutput() IdentityPoolPushSyncPtrOutput {
	return o.ToIdentityPoolPushSyncPtrOutputWithContext(context.Background())
}

func (o IdentityPoolPushSyncOutput) ToIdentityPoolPushSyncPtrOutputWithContext(ctx context.Context) IdentityPoolPushSyncPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityPoolPushSync) *IdentityPoolPushSync {
		return &v
	}).(IdentityPoolPushSyncPtrOutput)
}

// The ARNs of the Amazon SNS platform applications that could be used by clients.
func (o IdentityPoolPushSyncOutput) ApplicationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityPoolPushSync) []string { return v.ApplicationArns }).(pulumi.StringArrayOutput)
}

// An IAM role configured to allow Amazon Cognito to call Amazon SNS on behalf of the developer.
func (o IdentityPoolPushSyncOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolPushSync) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type IdentityPoolPushSyncPtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolPushSyncPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolPushSync)(nil)).Elem()
}

func (o IdentityPoolPushSyncPtrOutput) ToIdentityPoolPushSyncPtrOutput() IdentityPoolPushSyncPtrOutput {
	return o
}

func (o IdentityPoolPushSyncPtrOutput) ToIdentityPoolPushSyncPtrOutputWithContext(ctx context.Context) IdentityPoolPushSyncPtrOutput {
	return o
}

func (o IdentityPoolPushSyncPtrOutput) Elem() IdentityPoolPushSyncOutput {
	return o.ApplyT(func(v *IdentityPoolPushSync) IdentityPoolPushSync {
		if v != nil {
			return *v
		}
		var ret IdentityPoolPushSync
		return ret
	}).(IdentityPoolPushSyncOutput)
}

// The ARNs of the Amazon SNS platform applications that could be used by clients.
func (o IdentityPoolPushSyncPtrOutput) ApplicationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityPoolPushSync) []string {
		if v == nil {
			return nil
		}
		return v.ApplicationArns
	}).(pulumi.StringArrayOutput)
}

// An IAM role configured to allow Amazon Cognito to call Amazon SNS on behalf of the developer.
func (o IdentityPoolPushSyncPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolPushSync) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type IdentityPoolRoleAttachmentMappingRule struct {
	Claim     string `pulumi:"claim"`
	MatchType string `pulumi:"matchType"`
	RoleArn   string `pulumi:"roleArn"`
	Value     string `pulumi:"value"`
}

// IdentityPoolRoleAttachmentMappingRuleInput is an input type that accepts IdentityPoolRoleAttachmentMappingRuleArgs and IdentityPoolRoleAttachmentMappingRuleOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentMappingRuleInput` via:
//
//	IdentityPoolRoleAttachmentMappingRuleArgs{...}
type IdentityPoolRoleAttachmentMappingRuleInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentMappingRuleOutput() IdentityPoolRoleAttachmentMappingRuleOutput
	ToIdentityPoolRoleAttachmentMappingRuleOutputWithContext(context.Context) IdentityPoolRoleAttachmentMappingRuleOutput
}

type IdentityPoolRoleAttachmentMappingRuleArgs struct {
	Claim     pulumi.StringInput `pulumi:"claim"`
	MatchType pulumi.StringInput `pulumi:"matchType"`
	RoleArn   pulumi.StringInput `pulumi:"roleArn"`
	Value     pulumi.StringInput `pulumi:"value"`
}

func (IdentityPoolRoleAttachmentMappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentMappingRuleArgs) ToIdentityPoolRoleAttachmentMappingRuleOutput() IdentityPoolRoleAttachmentMappingRuleOutput {
	return i.ToIdentityPoolRoleAttachmentMappingRuleOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentMappingRuleArgs) ToIdentityPoolRoleAttachmentMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentMappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentMappingRuleOutput)
}

// IdentityPoolRoleAttachmentMappingRuleArrayInput is an input type that accepts IdentityPoolRoleAttachmentMappingRuleArray and IdentityPoolRoleAttachmentMappingRuleArrayOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentMappingRuleArrayInput` via:
//
//	IdentityPoolRoleAttachmentMappingRuleArray{ IdentityPoolRoleAttachmentMappingRuleArgs{...} }
type IdentityPoolRoleAttachmentMappingRuleArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentMappingRuleArrayOutput() IdentityPoolRoleAttachmentMappingRuleArrayOutput
	ToIdentityPoolRoleAttachmentMappingRuleArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentMappingRuleArrayOutput
}

type IdentityPoolRoleAttachmentMappingRuleArray []IdentityPoolRoleAttachmentMappingRuleInput

func (IdentityPoolRoleAttachmentMappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentMappingRuleArray) ToIdentityPoolRoleAttachmentMappingRuleArrayOutput() IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return i.ToIdentityPoolRoleAttachmentMappingRuleArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentMappingRuleArray) ToIdentityPoolRoleAttachmentMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentMappingRuleArrayOutput)
}

type IdentityPoolRoleAttachmentMappingRuleOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentMappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) ToIdentityPoolRoleAttachmentMappingRuleOutput() IdentityPoolRoleAttachmentMappingRuleOutput {
	return o
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) ToIdentityPoolRoleAttachmentMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentMappingRuleOutput {
	return o
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) Claim() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentMappingRule) string { return v.Claim }).(pulumi.StringOutput)
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentMappingRule) string { return v.MatchType }).(pulumi.StringOutput)
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentMappingRule) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o IdentityPoolRoleAttachmentMappingRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentMappingRule) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentMappingRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentMappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentMappingRuleArrayOutput() IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentMappingRuleArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentMappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentMappingRule {
		return vs[0].([]IdentityPoolRoleAttachmentMappingRule)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentMappingRuleOutput)
}

type IdentityPoolRoleAttachmentRoleMapping struct {
	AmbiguousRoleResolution *string                                           `pulumi:"ambiguousRoleResolution"`
	IdentityProvider        *string                                           `pulumi:"identityProvider"`
	RulesConfiguration      *IdentityPoolRoleAttachmentRulesConfigurationType `pulumi:"rulesConfiguration"`
	Type                    string                                            `pulumi:"type"`
}

// IdentityPoolRoleAttachmentRoleMappingInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingArgs and IdentityPoolRoleAttachmentRoleMappingOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingArgs{...}
type IdentityPoolRoleAttachmentRoleMappingInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput
	ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingOutput
}

type IdentityPoolRoleAttachmentRoleMappingArgs struct {
	AmbiguousRoleResolution pulumi.StringPtrInput                                    `pulumi:"ambiguousRoleResolution"`
	IdentityProvider        pulumi.StringPtrInput                                    `pulumi:"identityProvider"`
	RulesConfiguration      IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput `pulumi:"rulesConfiguration"`
	Type                    pulumi.StringInput                                       `pulumi:"type"`
}

func (IdentityPoolRoleAttachmentRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

// IdentityPoolRoleAttachmentRoleMappingMapInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingMap and IdentityPoolRoleAttachmentRoleMappingMapOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingMapInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingMap{ "key": IdentityPoolRoleAttachmentRoleMappingArgs{...} }
type IdentityPoolRoleAttachmentRoleMappingMapInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingMapOutput() IdentityPoolRoleAttachmentRoleMappingMapOutput
	ToIdentityPoolRoleAttachmentRoleMappingMapOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingMapOutput
}

type IdentityPoolRoleAttachmentRoleMappingMap map[string]IdentityPoolRoleAttachmentRoleMappingInput

func (IdentityPoolRoleAttachmentRoleMappingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingMap) ToIdentityPoolRoleAttachmentRoleMappingMapOutput() IdentityPoolRoleAttachmentRoleMappingMapOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingMapOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingMap) ToIdentityPoolRoleAttachmentRoleMappingMapOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingMapOutput)
}

type IdentityPoolRoleAttachmentRoleMappingOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) AmbiguousRoleResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) *string { return v.AmbiguousRoleResolution }).(pulumi.StringPtrOutput)
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) RulesConfiguration() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) *IdentityPoolRoleAttachmentRulesConfigurationType {
		return v.RulesConfiguration
	}).(IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput)
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMapOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingMapOutput) ToIdentityPoolRoleAttachmentRoleMappingMapOutput() IdentityPoolRoleAttachmentRoleMappingMapOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMapOutput) ToIdentityPoolRoleAttachmentRoleMappingMapOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMapOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMapOutput) MapIndex(k pulumi.StringInput) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentRoleMapping {
		return vs[0].(map[string]IdentityPoolRoleAttachmentRoleMapping)[vs[1].(string)]
	}).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

type IdentityPoolRoleAttachmentRulesConfigurationType struct {
	Rules []IdentityPoolRoleAttachmentMappingRule `pulumi:"rules"`
}

// IdentityPoolRoleAttachmentRulesConfigurationTypeInput is an input type that accepts IdentityPoolRoleAttachmentRulesConfigurationTypeArgs and IdentityPoolRoleAttachmentRulesConfigurationTypeOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRulesConfigurationTypeInput` via:
//
//	IdentityPoolRoleAttachmentRulesConfigurationTypeArgs{...}
type IdentityPoolRoleAttachmentRulesConfigurationTypeInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutput() IdentityPoolRoleAttachmentRulesConfigurationTypeOutput
	ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutputWithContext(context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypeOutput
}

type IdentityPoolRoleAttachmentRulesConfigurationTypeArgs struct {
	Rules IdentityPoolRoleAttachmentMappingRuleArrayInput `pulumi:"rules"`
}

func (IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRulesConfigurationType)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutput() IdentityPoolRoleAttachmentRulesConfigurationTypeOutput {
	return i.ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRulesConfigurationTypeOutput)
}

func (i IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return i.ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRulesConfigurationTypeOutput).ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(ctx)
}

// IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput is an input type that accepts IdentityPoolRoleAttachmentRulesConfigurationTypeArgs, IdentityPoolRoleAttachmentRulesConfigurationTypePtr and IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput` via:
//
//	        IdentityPoolRoleAttachmentRulesConfigurationTypeArgs{...}
//
//	or:
//
//	        nil
type IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput
	ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput
}

type identityPoolRoleAttachmentRulesConfigurationTypePtrType IdentityPoolRoleAttachmentRulesConfigurationTypeArgs

func IdentityPoolRoleAttachmentRulesConfigurationTypePtr(v *IdentityPoolRoleAttachmentRulesConfigurationTypeArgs) IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput {
	return (*identityPoolRoleAttachmentRulesConfigurationTypePtrType)(v)
}

func (*identityPoolRoleAttachmentRulesConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolRoleAttachmentRulesConfigurationType)(nil)).Elem()
}

func (i *identityPoolRoleAttachmentRulesConfigurationTypePtrType) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return i.ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *identityPoolRoleAttachmentRulesConfigurationTypePtrType) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput)
}

type IdentityPoolRoleAttachmentRulesConfigurationTypeOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRulesConfigurationType)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutput() IdentityPoolRoleAttachmentRulesConfigurationTypeOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypeOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypeOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return o.ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(context.Background())
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityPoolRoleAttachmentRulesConfigurationType) *IdentityPoolRoleAttachmentRulesConfigurationType {
		return &v
	}).(IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput)
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypeOutput) Rules() IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRulesConfigurationType) []IdentityPoolRoleAttachmentMappingRule {
		return v.Rules
	}).(IdentityPoolRoleAttachmentMappingRuleArrayOutput)
}

type IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolRoleAttachmentRulesConfigurationType)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput() IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput) ToIdentityPoolRoleAttachmentRulesConfigurationTypePtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput) Elem() IdentityPoolRoleAttachmentRulesConfigurationTypeOutput {
	return o.ApplyT(func(v *IdentityPoolRoleAttachmentRulesConfigurationType) IdentityPoolRoleAttachmentRulesConfigurationType {
		if v != nil {
			return *v
		}
		var ret IdentityPoolRoleAttachmentRulesConfigurationType
		return ret
	}).(IdentityPoolRoleAttachmentRulesConfigurationTypeOutput)
}

func (o IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput) Rules() IdentityPoolRoleAttachmentMappingRuleArrayOutput {
	return o.ApplyT(func(v *IdentityPoolRoleAttachmentRulesConfigurationType) []IdentityPoolRoleAttachmentMappingRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(IdentityPoolRoleAttachmentMappingRuleArrayOutput)
}

type LogDeliveryConfigurationCloudWatchLogsConfiguration struct {
	LogGroupArn *string `pulumi:"logGroupArn"`
}

// LogDeliveryConfigurationCloudWatchLogsConfigurationInput is an input type that accepts LogDeliveryConfigurationCloudWatchLogsConfigurationArgs and LogDeliveryConfigurationCloudWatchLogsConfigurationOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationCloudWatchLogsConfigurationInput` via:
//
//	LogDeliveryConfigurationCloudWatchLogsConfigurationArgs{...}
type LogDeliveryConfigurationCloudWatchLogsConfigurationInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationOutput
	ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutputWithContext(context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationOutput
}

type LogDeliveryConfigurationCloudWatchLogsConfigurationArgs struct {
	LogGroupArn pulumi.StringPtrInput `pulumi:"logGroupArn"`
}

func (LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationCloudWatchLogsConfiguration)(nil)).Elem()
}

func (i LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationOutput {
	return i.ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationCloudWatchLogsConfigurationOutput)
}

func (i LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationCloudWatchLogsConfigurationOutput).ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(ctx)
}

// LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput is an input type that accepts LogDeliveryConfigurationCloudWatchLogsConfigurationArgs, LogDeliveryConfigurationCloudWatchLogsConfigurationPtr and LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput` via:
//
//	        LogDeliveryConfigurationCloudWatchLogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput
	ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput
}

type logDeliveryConfigurationCloudWatchLogsConfigurationPtrType LogDeliveryConfigurationCloudWatchLogsConfigurationArgs

func LogDeliveryConfigurationCloudWatchLogsConfigurationPtr(v *LogDeliveryConfigurationCloudWatchLogsConfigurationArgs) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput {
	return (*logDeliveryConfigurationCloudWatchLogsConfigurationPtrType)(v)
}

func (*logDeliveryConfigurationCloudWatchLogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationCloudWatchLogsConfiguration)(nil)).Elem()
}

func (i *logDeliveryConfigurationCloudWatchLogsConfigurationPtrType) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *logDeliveryConfigurationCloudWatchLogsConfigurationPtrType) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput)
}

type LogDeliveryConfigurationCloudWatchLogsConfigurationOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationCloudWatchLogsConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return o.ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(context.Background())
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogDeliveryConfigurationCloudWatchLogsConfiguration) *LogDeliveryConfigurationCloudWatchLogsConfiguration {
		return &v
	}).(LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput)
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationCloudWatchLogsConfiguration) *string { return v.LogGroupArn }).(pulumi.StringPtrOutput)
}

type LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationCloudWatchLogsConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput) ToLogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput) Elem() LogDeliveryConfigurationCloudWatchLogsConfigurationOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationCloudWatchLogsConfiguration) LogDeliveryConfigurationCloudWatchLogsConfiguration {
		if v != nil {
			return *v
		}
		var ret LogDeliveryConfigurationCloudWatchLogsConfiguration
		return ret
	}).(LogDeliveryConfigurationCloudWatchLogsConfigurationOutput)
}

func (o LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationCloudWatchLogsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupArn
	}).(pulumi.StringPtrOutput)
}

type LogDeliveryConfigurationFirehoseConfiguration struct {
	StreamArn *string `pulumi:"streamArn"`
}

// LogDeliveryConfigurationFirehoseConfigurationInput is an input type that accepts LogDeliveryConfigurationFirehoseConfigurationArgs and LogDeliveryConfigurationFirehoseConfigurationOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationFirehoseConfigurationInput` via:
//
//	LogDeliveryConfigurationFirehoseConfigurationArgs{...}
type LogDeliveryConfigurationFirehoseConfigurationInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationFirehoseConfigurationOutput() LogDeliveryConfigurationFirehoseConfigurationOutput
	ToLogDeliveryConfigurationFirehoseConfigurationOutputWithContext(context.Context) LogDeliveryConfigurationFirehoseConfigurationOutput
}

type LogDeliveryConfigurationFirehoseConfigurationArgs struct {
	StreamArn pulumi.StringPtrInput `pulumi:"streamArn"`
}

func (LogDeliveryConfigurationFirehoseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationFirehoseConfiguration)(nil)).Elem()
}

func (i LogDeliveryConfigurationFirehoseConfigurationArgs) ToLogDeliveryConfigurationFirehoseConfigurationOutput() LogDeliveryConfigurationFirehoseConfigurationOutput {
	return i.ToLogDeliveryConfigurationFirehoseConfigurationOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationFirehoseConfigurationArgs) ToLogDeliveryConfigurationFirehoseConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationFirehoseConfigurationOutput)
}

func (i LogDeliveryConfigurationFirehoseConfigurationArgs) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutput() LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationFirehoseConfigurationArgs) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationFirehoseConfigurationOutput).ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(ctx)
}

// LogDeliveryConfigurationFirehoseConfigurationPtrInput is an input type that accepts LogDeliveryConfigurationFirehoseConfigurationArgs, LogDeliveryConfigurationFirehoseConfigurationPtr and LogDeliveryConfigurationFirehoseConfigurationPtrOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationFirehoseConfigurationPtrInput` via:
//
//	        LogDeliveryConfigurationFirehoseConfigurationArgs{...}
//
//	or:
//
//	        nil
type LogDeliveryConfigurationFirehoseConfigurationPtrInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationFirehoseConfigurationPtrOutput() LogDeliveryConfigurationFirehoseConfigurationPtrOutput
	ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(context.Context) LogDeliveryConfigurationFirehoseConfigurationPtrOutput
}

type logDeliveryConfigurationFirehoseConfigurationPtrType LogDeliveryConfigurationFirehoseConfigurationArgs

func LogDeliveryConfigurationFirehoseConfigurationPtr(v *LogDeliveryConfigurationFirehoseConfigurationArgs) LogDeliveryConfigurationFirehoseConfigurationPtrInput {
	return (*logDeliveryConfigurationFirehoseConfigurationPtrType)(v)
}

func (*logDeliveryConfigurationFirehoseConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationFirehoseConfiguration)(nil)).Elem()
}

func (i *logDeliveryConfigurationFirehoseConfigurationPtrType) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutput() LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(context.Background())
}

func (i *logDeliveryConfigurationFirehoseConfigurationPtrType) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationFirehoseConfigurationPtrOutput)
}

type LogDeliveryConfigurationFirehoseConfigurationOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationFirehoseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationFirehoseConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationFirehoseConfigurationOutput) ToLogDeliveryConfigurationFirehoseConfigurationOutput() LogDeliveryConfigurationFirehoseConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationFirehoseConfigurationOutput) ToLogDeliveryConfigurationFirehoseConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationFirehoseConfigurationOutput) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutput() LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return o.ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(context.Background())
}

func (o LogDeliveryConfigurationFirehoseConfigurationOutput) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogDeliveryConfigurationFirehoseConfiguration) *LogDeliveryConfigurationFirehoseConfiguration {
		return &v
	}).(LogDeliveryConfigurationFirehoseConfigurationPtrOutput)
}

func (o LogDeliveryConfigurationFirehoseConfigurationOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationFirehoseConfiguration) *string { return v.StreamArn }).(pulumi.StringPtrOutput)
}

type LogDeliveryConfigurationFirehoseConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationFirehoseConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationFirehoseConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationFirehoseConfigurationPtrOutput) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutput() LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationFirehoseConfigurationPtrOutput) ToLogDeliveryConfigurationFirehoseConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationFirehoseConfigurationPtrOutput) Elem() LogDeliveryConfigurationFirehoseConfigurationOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationFirehoseConfiguration) LogDeliveryConfigurationFirehoseConfiguration {
		if v != nil {
			return *v
		}
		var ret LogDeliveryConfigurationFirehoseConfiguration
		return ret
	}).(LogDeliveryConfigurationFirehoseConfigurationOutput)
}

func (o LogDeliveryConfigurationFirehoseConfigurationPtrOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationFirehoseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.StreamArn
	}).(pulumi.StringPtrOutput)
}

type LogDeliveryConfigurationLogConfiguration struct {
	CloudWatchLogsConfiguration *LogDeliveryConfigurationCloudWatchLogsConfiguration `pulumi:"cloudWatchLogsConfiguration"`
	EventSource                 *string                                              `pulumi:"eventSource"`
	FirehoseConfiguration       *LogDeliveryConfigurationFirehoseConfiguration       `pulumi:"firehoseConfiguration"`
	LogLevel                    *string                                              `pulumi:"logLevel"`
	S3Configuration             *LogDeliveryConfigurationS3Configuration             `pulumi:"s3Configuration"`
}

// LogDeliveryConfigurationLogConfigurationInput is an input type that accepts LogDeliveryConfigurationLogConfigurationArgs and LogDeliveryConfigurationLogConfigurationOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationLogConfigurationInput` via:
//
//	LogDeliveryConfigurationLogConfigurationArgs{...}
type LogDeliveryConfigurationLogConfigurationInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationLogConfigurationOutput() LogDeliveryConfigurationLogConfigurationOutput
	ToLogDeliveryConfigurationLogConfigurationOutputWithContext(context.Context) LogDeliveryConfigurationLogConfigurationOutput
}

type LogDeliveryConfigurationLogConfigurationArgs struct {
	CloudWatchLogsConfiguration LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput `pulumi:"cloudWatchLogsConfiguration"`
	EventSource                 pulumi.StringPtrInput                                       `pulumi:"eventSource"`
	FirehoseConfiguration       LogDeliveryConfigurationFirehoseConfigurationPtrInput       `pulumi:"firehoseConfiguration"`
	LogLevel                    pulumi.StringPtrInput                                       `pulumi:"logLevel"`
	S3Configuration             LogDeliveryConfigurationS3ConfigurationPtrInput             `pulumi:"s3Configuration"`
}

func (LogDeliveryConfigurationLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationLogConfiguration)(nil)).Elem()
}

func (i LogDeliveryConfigurationLogConfigurationArgs) ToLogDeliveryConfigurationLogConfigurationOutput() LogDeliveryConfigurationLogConfigurationOutput {
	return i.ToLogDeliveryConfigurationLogConfigurationOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationLogConfigurationArgs) ToLogDeliveryConfigurationLogConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationLogConfigurationOutput)
}

// LogDeliveryConfigurationLogConfigurationArrayInput is an input type that accepts LogDeliveryConfigurationLogConfigurationArray and LogDeliveryConfigurationLogConfigurationArrayOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationLogConfigurationArrayInput` via:
//
//	LogDeliveryConfigurationLogConfigurationArray{ LogDeliveryConfigurationLogConfigurationArgs{...} }
type LogDeliveryConfigurationLogConfigurationArrayInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationLogConfigurationArrayOutput() LogDeliveryConfigurationLogConfigurationArrayOutput
	ToLogDeliveryConfigurationLogConfigurationArrayOutputWithContext(context.Context) LogDeliveryConfigurationLogConfigurationArrayOutput
}

type LogDeliveryConfigurationLogConfigurationArray []LogDeliveryConfigurationLogConfigurationInput

func (LogDeliveryConfigurationLogConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogDeliveryConfigurationLogConfiguration)(nil)).Elem()
}

func (i LogDeliveryConfigurationLogConfigurationArray) ToLogDeliveryConfigurationLogConfigurationArrayOutput() LogDeliveryConfigurationLogConfigurationArrayOutput {
	return i.ToLogDeliveryConfigurationLogConfigurationArrayOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationLogConfigurationArray) ToLogDeliveryConfigurationLogConfigurationArrayOutputWithContext(ctx context.Context) LogDeliveryConfigurationLogConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationLogConfigurationArrayOutput)
}

type LogDeliveryConfigurationLogConfigurationOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationLogConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationLogConfigurationOutput) ToLogDeliveryConfigurationLogConfigurationOutput() LogDeliveryConfigurationLogConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationLogConfigurationOutput) ToLogDeliveryConfigurationLogConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationLogConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationLogConfigurationOutput) CloudWatchLogsConfiguration() LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationLogConfiguration) *LogDeliveryConfigurationCloudWatchLogsConfiguration {
		return v.CloudWatchLogsConfiguration
	}).(LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput)
}

func (o LogDeliveryConfigurationLogConfigurationOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationLogConfiguration) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

func (o LogDeliveryConfigurationLogConfigurationOutput) FirehoseConfiguration() LogDeliveryConfigurationFirehoseConfigurationPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationLogConfiguration) *LogDeliveryConfigurationFirehoseConfiguration {
		return v.FirehoseConfiguration
	}).(LogDeliveryConfigurationFirehoseConfigurationPtrOutput)
}

func (o LogDeliveryConfigurationLogConfigurationOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationLogConfiguration) *string { return v.LogLevel }).(pulumi.StringPtrOutput)
}

func (o LogDeliveryConfigurationLogConfigurationOutput) S3Configuration() LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationLogConfiguration) *LogDeliveryConfigurationS3Configuration {
		return v.S3Configuration
	}).(LogDeliveryConfigurationS3ConfigurationPtrOutput)
}

type LogDeliveryConfigurationLogConfigurationArrayOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationLogConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogDeliveryConfigurationLogConfiguration)(nil)).Elem()
}

func (o LogDeliveryConfigurationLogConfigurationArrayOutput) ToLogDeliveryConfigurationLogConfigurationArrayOutput() LogDeliveryConfigurationLogConfigurationArrayOutput {
	return o
}

func (o LogDeliveryConfigurationLogConfigurationArrayOutput) ToLogDeliveryConfigurationLogConfigurationArrayOutputWithContext(ctx context.Context) LogDeliveryConfigurationLogConfigurationArrayOutput {
	return o
}

func (o LogDeliveryConfigurationLogConfigurationArrayOutput) Index(i pulumi.IntInput) LogDeliveryConfigurationLogConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogDeliveryConfigurationLogConfiguration {
		return vs[0].([]LogDeliveryConfigurationLogConfiguration)[vs[1].(int)]
	}).(LogDeliveryConfigurationLogConfigurationOutput)
}

type LogDeliveryConfigurationS3Configuration struct {
	BucketArn *string `pulumi:"bucketArn"`
}

// LogDeliveryConfigurationS3ConfigurationInput is an input type that accepts LogDeliveryConfigurationS3ConfigurationArgs and LogDeliveryConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationS3ConfigurationInput` via:
//
//	LogDeliveryConfigurationS3ConfigurationArgs{...}
type LogDeliveryConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationS3ConfigurationOutput() LogDeliveryConfigurationS3ConfigurationOutput
	ToLogDeliveryConfigurationS3ConfigurationOutputWithContext(context.Context) LogDeliveryConfigurationS3ConfigurationOutput
}

type LogDeliveryConfigurationS3ConfigurationArgs struct {
	BucketArn pulumi.StringPtrInput `pulumi:"bucketArn"`
}

func (LogDeliveryConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationS3Configuration)(nil)).Elem()
}

func (i LogDeliveryConfigurationS3ConfigurationArgs) ToLogDeliveryConfigurationS3ConfigurationOutput() LogDeliveryConfigurationS3ConfigurationOutput {
	return i.ToLogDeliveryConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationS3ConfigurationArgs) ToLogDeliveryConfigurationS3ConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationS3ConfigurationOutput)
}

func (i LogDeliveryConfigurationS3ConfigurationArgs) ToLogDeliveryConfigurationS3ConfigurationPtrOutput() LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i LogDeliveryConfigurationS3ConfigurationArgs) ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationS3ConfigurationOutput).ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// LogDeliveryConfigurationS3ConfigurationPtrInput is an input type that accepts LogDeliveryConfigurationS3ConfigurationArgs, LogDeliveryConfigurationS3ConfigurationPtr and LogDeliveryConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `LogDeliveryConfigurationS3ConfigurationPtrInput` via:
//
//	        LogDeliveryConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type LogDeliveryConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToLogDeliveryConfigurationS3ConfigurationPtrOutput() LogDeliveryConfigurationS3ConfigurationPtrOutput
	ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(context.Context) LogDeliveryConfigurationS3ConfigurationPtrOutput
}

type logDeliveryConfigurationS3ConfigurationPtrType LogDeliveryConfigurationS3ConfigurationArgs

func LogDeliveryConfigurationS3ConfigurationPtr(v *LogDeliveryConfigurationS3ConfigurationArgs) LogDeliveryConfigurationS3ConfigurationPtrInput {
	return (*logDeliveryConfigurationS3ConfigurationPtrType)(v)
}

func (*logDeliveryConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationS3Configuration)(nil)).Elem()
}

func (i *logDeliveryConfigurationS3ConfigurationPtrType) ToLogDeliveryConfigurationS3ConfigurationPtrOutput() LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return i.ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *logDeliveryConfigurationS3ConfigurationPtrType) ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogDeliveryConfigurationS3ConfigurationPtrOutput)
}

type LogDeliveryConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogDeliveryConfigurationS3Configuration)(nil)).Elem()
}

func (o LogDeliveryConfigurationS3ConfigurationOutput) ToLogDeliveryConfigurationS3ConfigurationOutput() LogDeliveryConfigurationS3ConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationS3ConfigurationOutput) ToLogDeliveryConfigurationS3ConfigurationOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationOutput {
	return o
}

func (o LogDeliveryConfigurationS3ConfigurationOutput) ToLogDeliveryConfigurationS3ConfigurationPtrOutput() LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return o.ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o LogDeliveryConfigurationS3ConfigurationOutput) ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogDeliveryConfigurationS3Configuration) *LogDeliveryConfigurationS3Configuration {
		return &v
	}).(LogDeliveryConfigurationS3ConfigurationPtrOutput)
}

func (o LogDeliveryConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogDeliveryConfigurationS3Configuration) *string { return v.BucketArn }).(pulumi.StringPtrOutput)
}

type LogDeliveryConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LogDeliveryConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogDeliveryConfigurationS3Configuration)(nil)).Elem()
}

func (o LogDeliveryConfigurationS3ConfigurationPtrOutput) ToLogDeliveryConfigurationS3ConfigurationPtrOutput() LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationS3ConfigurationPtrOutput) ToLogDeliveryConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) LogDeliveryConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o LogDeliveryConfigurationS3ConfigurationPtrOutput) Elem() LogDeliveryConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationS3Configuration) LogDeliveryConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret LogDeliveryConfigurationS3Configuration
		return ret
	}).(LogDeliveryConfigurationS3ConfigurationOutput)
}

func (o LogDeliveryConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogDeliveryConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.BucketArn
	}).(pulumi.StringPtrOutput)
}

type UserPoolAccountRecoverySetting struct {
	// The list of `RecoveryOptionTypes` .
	RecoveryMechanisms []UserPoolRecoveryOption `pulumi:"recoveryMechanisms"`
}

// UserPoolAccountRecoverySettingInput is an input type that accepts UserPoolAccountRecoverySettingArgs and UserPoolAccountRecoverySettingOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingInput` via:
//
//	UserPoolAccountRecoverySettingArgs{...}
type UserPoolAccountRecoverySettingInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput
	ToUserPoolAccountRecoverySettingOutputWithContext(context.Context) UserPoolAccountRecoverySettingOutput
}

type UserPoolAccountRecoverySettingArgs struct {
	// The list of `RecoveryOptionTypes` .
	RecoveryMechanisms UserPoolRecoveryOptionArrayInput `pulumi:"recoveryMechanisms"`
}

func (UserPoolAccountRecoverySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput {
	return i.ToUserPoolAccountRecoverySettingOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingOutput)
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return i.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingOutput).ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx)
}

// UserPoolAccountRecoverySettingPtrInput is an input type that accepts UserPoolAccountRecoverySettingArgs, UserPoolAccountRecoverySettingPtr and UserPoolAccountRecoverySettingPtrOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingPtrInput` via:
//
//	        UserPoolAccountRecoverySettingArgs{...}
//
//	or:
//
//	        nil
type UserPoolAccountRecoverySettingPtrInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput
	ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Context) UserPoolAccountRecoverySettingPtrOutput
}

type userPoolAccountRecoverySettingPtrType UserPoolAccountRecoverySettingArgs

func UserPoolAccountRecoverySettingPtr(v *UserPoolAccountRecoverySettingArgs) UserPoolAccountRecoverySettingPtrInput {
	return (*userPoolAccountRecoverySettingPtrType)(v)
}

func (*userPoolAccountRecoverySettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (i *userPoolAccountRecoverySettingPtrType) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return i.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (i *userPoolAccountRecoverySettingPtrType) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingPtrOutput)
}

type UserPoolAccountRecoverySettingOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput {
	return o
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingOutput {
	return o
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return o.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAccountRecoverySetting) *UserPoolAccountRecoverySetting {
		return &v
	}).(UserPoolAccountRecoverySettingPtrOutput)
}

// The list of `RecoveryOptionTypes` .
func (o UserPoolAccountRecoverySettingOutput) RecoveryMechanisms() UserPoolRecoveryOptionArrayOutput {
	return o.ApplyT(func(v UserPoolAccountRecoverySetting) []UserPoolRecoveryOption { return v.RecoveryMechanisms }).(UserPoolRecoveryOptionArrayOutput)
}

type UserPoolAccountRecoverySettingPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingPtrOutput) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return o
}

func (o UserPoolAccountRecoverySettingPtrOutput) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return o
}

func (o UserPoolAccountRecoverySettingPtrOutput) Elem() UserPoolAccountRecoverySettingOutput {
	return o.ApplyT(func(v *UserPoolAccountRecoverySetting) UserPoolAccountRecoverySetting {
		if v != nil {
			return *v
		}
		var ret UserPoolAccountRecoverySetting
		return ret
	}).(UserPoolAccountRecoverySettingOutput)
}

// The list of `RecoveryOptionTypes` .
func (o UserPoolAccountRecoverySettingPtrOutput) RecoveryMechanisms() UserPoolRecoveryOptionArrayOutput {
	return o.ApplyT(func(v *UserPoolAccountRecoverySetting) []UserPoolRecoveryOption {
		if v == nil {
			return nil
		}
		return v.RecoveryMechanisms
	}).(UserPoolRecoveryOptionArrayOutput)
}

type UserPoolAddOns struct {
	// The operating mode of advanced security features in your user pool.
	AdvancedSecurityMode *string `pulumi:"advancedSecurityMode"`
}

// UserPoolAddOnsInput is an input type that accepts UserPoolAddOnsArgs and UserPoolAddOnsOutput values.
// You can construct a concrete instance of `UserPoolAddOnsInput` via:
//
//	UserPoolAddOnsArgs{...}
type UserPoolAddOnsInput interface {
	pulumi.Input

	ToUserPoolAddOnsOutput() UserPoolAddOnsOutput
	ToUserPoolAddOnsOutputWithContext(context.Context) UserPoolAddOnsOutput
}

type UserPoolAddOnsArgs struct {
	// The operating mode of advanced security features in your user pool.
	AdvancedSecurityMode pulumi.StringPtrInput `pulumi:"advancedSecurityMode"`
}

func (UserPoolAddOnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAddOns)(nil)).Elem()
}

func (i UserPoolAddOnsArgs) ToUserPoolAddOnsOutput() UserPoolAddOnsOutput {
	return i.ToUserPoolAddOnsOutputWithContext(context.Background())
}

func (i UserPoolAddOnsArgs) ToUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolAddOnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAddOnsOutput)
}

func (i UserPoolAddOnsArgs) ToUserPoolAddOnsPtrOutput() UserPoolAddOnsPtrOutput {
	return i.ToUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i UserPoolAddOnsArgs) ToUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAddOnsOutput).ToUserPoolAddOnsPtrOutputWithContext(ctx)
}

// UserPoolAddOnsPtrInput is an input type that accepts UserPoolAddOnsArgs, UserPoolAddOnsPtr and UserPoolAddOnsPtrOutput values.
// You can construct a concrete instance of `UserPoolAddOnsPtrInput` via:
//
//	        UserPoolAddOnsArgs{...}
//
//	or:
//
//	        nil
type UserPoolAddOnsPtrInput interface {
	pulumi.Input

	ToUserPoolAddOnsPtrOutput() UserPoolAddOnsPtrOutput
	ToUserPoolAddOnsPtrOutputWithContext(context.Context) UserPoolAddOnsPtrOutput
}

type userPoolAddOnsPtrType UserPoolAddOnsArgs

func UserPoolAddOnsPtr(v *UserPoolAddOnsArgs) UserPoolAddOnsPtrInput {
	return (*userPoolAddOnsPtrType)(v)
}

func (*userPoolAddOnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAddOns)(nil)).Elem()
}

func (i *userPoolAddOnsPtrType) ToUserPoolAddOnsPtrOutput() UserPoolAddOnsPtrOutput {
	return i.ToUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i *userPoolAddOnsPtrType) ToUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAddOnsPtrOutput)
}

type UserPoolAddOnsOutput struct{ *pulumi.OutputState }

func (UserPoolAddOnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAddOns)(nil)).Elem()
}

func (o UserPoolAddOnsOutput) ToUserPoolAddOnsOutput() UserPoolAddOnsOutput {
	return o
}

func (o UserPoolAddOnsOutput) ToUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolAddOnsOutput {
	return o
}

func (o UserPoolAddOnsOutput) ToUserPoolAddOnsPtrOutput() UserPoolAddOnsPtrOutput {
	return o.ToUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (o UserPoolAddOnsOutput) ToUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolAddOnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAddOns) *UserPoolAddOns {
		return &v
	}).(UserPoolAddOnsPtrOutput)
}

// The operating mode of advanced security features in your user pool.
func (o UserPoolAddOnsOutput) AdvancedSecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAddOns) *string { return v.AdvancedSecurityMode }).(pulumi.StringPtrOutput)
}

type UserPoolAddOnsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAddOnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAddOns)(nil)).Elem()
}

func (o UserPoolAddOnsPtrOutput) ToUserPoolAddOnsPtrOutput() UserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolAddOnsPtrOutput) ToUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolAddOnsPtrOutput) Elem() UserPoolAddOnsOutput {
	return o.ApplyT(func(v *UserPoolAddOns) UserPoolAddOns {
		if v != nil {
			return *v
		}
		var ret UserPoolAddOns
		return ret
	}).(UserPoolAddOnsOutput)
}

// The operating mode of advanced security features in your user pool.
func (o UserPoolAddOnsPtrOutput) AdvancedSecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolAddOns) *string {
		if v == nil {
			return nil
		}
		return v.AdvancedSecurityMode
	}).(pulumi.StringPtrOutput)
}

type UserPoolAdminCreateUserConfig struct {
	// Set to `True` if only the administrator is allowed to create user profiles. Set to `False` if users can sign themselves up via an app.
	AllowAdminCreateUserOnly *bool `pulumi:"allowAdminCreateUserOnly"`
	// The message template to be used for the welcome message to new users.
	//
	// See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .
	InviteMessageTemplate *UserPoolInviteMessageTemplate `pulumi:"inviteMessageTemplate"`
	// The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable. To reset the account after that time limit, you must call `AdminCreateUser` again, specifying `"RESEND"` for the `MessageAction` parameter. The default value for this parameter is 7.
	//
	// > If you set a value for `TemporaryPasswordValidityDays` in `PasswordPolicy` , that value will be used, and `UnusedAccountValidityDays` will be no longer be an available parameter for that user pool.
	UnusedAccountValidityDays *int `pulumi:"unusedAccountValidityDays"`
}

// UserPoolAdminCreateUserConfigInput is an input type that accepts UserPoolAdminCreateUserConfigArgs and UserPoolAdminCreateUserConfigOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInput` via:
//
//	UserPoolAdminCreateUserConfigArgs{...}
type UserPoolAdminCreateUserConfigInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput
	ToUserPoolAdminCreateUserConfigOutputWithContext(context.Context) UserPoolAdminCreateUserConfigOutput
}

type UserPoolAdminCreateUserConfigArgs struct {
	// Set to `True` if only the administrator is allowed to create user profiles. Set to `False` if users can sign themselves up via an app.
	AllowAdminCreateUserOnly pulumi.BoolPtrInput `pulumi:"allowAdminCreateUserOnly"`
	// The message template to be used for the welcome message to new users.
	//
	// See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .
	InviteMessageTemplate UserPoolInviteMessageTemplatePtrInput `pulumi:"inviteMessageTemplate"`
	// The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable. To reset the account after that time limit, you must call `AdminCreateUser` again, specifying `"RESEND"` for the `MessageAction` parameter. The default value for this parameter is 7.
	//
	// > If you set a value for `TemporaryPasswordValidityDays` in `PasswordPolicy` , that value will be used, and `UnusedAccountValidityDays` will be no longer be an available parameter for that user pool.
	UnusedAccountValidityDays pulumi.IntPtrInput `pulumi:"unusedAccountValidityDays"`
}

func (UserPoolAdminCreateUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return i.ToUserPoolAdminCreateUserConfigOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput)
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput).ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx)
}

// UserPoolAdminCreateUserConfigPtrInput is an input type that accepts UserPoolAdminCreateUserConfigArgs, UserPoolAdminCreateUserConfigPtr and UserPoolAdminCreateUserConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigPtrInput` via:
//
//	        UserPoolAdminCreateUserConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolAdminCreateUserConfigPtrInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput
	ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Context) UserPoolAdminCreateUserConfigPtrOutput
}

type userPoolAdminCreateUserConfigPtrType UserPoolAdminCreateUserConfigArgs

func UserPoolAdminCreateUserConfigPtr(v *UserPoolAdminCreateUserConfigArgs) UserPoolAdminCreateUserConfigPtrInput {
	return (*userPoolAdminCreateUserConfigPtrType)(v)
}

func (*userPoolAdminCreateUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigPtrOutput)
}

type UserPoolAdminCreateUserConfigOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfig {
		return &v
	}).(UserPoolAdminCreateUserConfigPtrOutput)
}

// Set to `True` if only the administrator is allowed to create user profiles. Set to `False` if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *bool { return v.AllowAdminCreateUserOnly }).(pulumi.BoolPtrOutput)
}

// The message template to be used for the welcome message to new users.
//
// See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .
func (o UserPoolAdminCreateUserConfigOutput) InviteMessageTemplate() UserPoolInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *UserPoolInviteMessageTemplate { return v.InviteMessageTemplate }).(UserPoolInviteMessageTemplatePtrOutput)
}

// The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable. To reset the account after that time limit, you must call `AdminCreateUser` again, specifying `"RESEND"` for the `MessageAction` parameter. The default value for this parameter is 7.
//
// > If you set a value for `TemporaryPasswordValidityDays` in `PasswordPolicy` , that value will be used, and `UnusedAccountValidityDays` will be no longer be an available parameter for that user pool.
func (o UserPoolAdminCreateUserConfigOutput) UnusedAccountValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *int { return v.UnusedAccountValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolAdminCreateUserConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) Elem() UserPoolAdminCreateUserConfigOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) UserPoolAdminCreateUserConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolAdminCreateUserConfig
		return ret
	}).(UserPoolAdminCreateUserConfigOutput)
}

// Set to `True` if only the administrator is allowed to create user profiles. Set to `False` if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigPtrOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllowAdminCreateUserOnly
	}).(pulumi.BoolPtrOutput)
}

// The message template to be used for the welcome message to new users.
//
// See also [Customizing User Invitation Messages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization) .
func (o UserPoolAdminCreateUserConfigPtrOutput) InviteMessageTemplate() UserPoolInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) *UserPoolInviteMessageTemplate {
		if v == nil {
			return nil
		}
		return v.InviteMessageTemplate
	}).(UserPoolInviteMessageTemplatePtrOutput)
}

// The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable. To reset the account after that time limit, you must call `AdminCreateUser` again, specifying `"RESEND"` for the `MessageAction` parameter. The default value for this parameter is 7.
//
// > If you set a value for `TemporaryPasswordValidityDays` in `PasswordPolicy` , that value will be used, and `UnusedAccountValidityDays` will be no longer be an available parameter for that user pool.
func (o UserPoolAdminCreateUserConfigPtrOutput) UnusedAccountValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) *int {
		if v == nil {
			return nil
		}
		return v.UnusedAccountValidityDays
	}).(pulumi.IntPtrOutput)
}

type UserPoolClientAnalyticsConfiguration struct {
	// The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can use the Amazon Pinpoint project for integration with the chosen user pool client. Amazon Cognito publishes events to the Amazon Pinpoint project that the app ARN declares.
	ApplicationArn *string `pulumi:"applicationArn"`
	// The application ID for an Amazon Pinpoint application.
	ApplicationId *string `pulumi:"applicationId"`
	// The external ID.
	ExternalId *string `pulumi:"externalId"`
	// The ARN of an AWS Identity and Access Management role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
	RoleArn *string `pulumi:"roleArn"`
	// If `UserDataShared` is `true` , Amazon Cognito includes user data in the events that it publishes to Amazon Pinpoint analytics.
	UserDataShared *bool `pulumi:"userDataShared"`
}

// UserPoolClientAnalyticsConfigurationInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs and UserPoolClientAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationInput` via:
//
//	UserPoolClientAnalyticsConfigurationArgs{...}
type UserPoolClientAnalyticsConfigurationInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput
	ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationOutput
}

type UserPoolClientAnalyticsConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can use the Amazon Pinpoint project for integration with the chosen user pool client. Amazon Cognito publishes events to the Amazon Pinpoint project that the app ARN declares.
	ApplicationArn pulumi.StringPtrInput `pulumi:"applicationArn"`
	// The application ID for an Amazon Pinpoint application.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// The external ID.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// The ARN of an AWS Identity and Access Management role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// If `UserDataShared` is `true` , Amazon Cognito includes user data in the events that it publishes to Amazon Pinpoint analytics.
	UserDataShared pulumi.BoolPtrInput `pulumi:"userDataShared"`
}

func (UserPoolClientAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return i.ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput)
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput).ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolClientAnalyticsConfigurationPtrInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs, UserPoolClientAnalyticsConfigurationPtr and UserPoolClientAnalyticsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationPtrInput` via:
//
//	        UserPoolClientAnalyticsConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolClientAnalyticsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput
	ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationPtrOutput
}

type userPoolClientAnalyticsConfigurationPtrType UserPoolClientAnalyticsConfigurationArgs

func UserPoolClientAnalyticsConfigurationPtr(v *UserPoolClientAnalyticsConfigurationArgs) UserPoolClientAnalyticsConfigurationPtrInput {
	return (*userPoolClientAnalyticsConfigurationPtrType)(v)
}

func (*userPoolClientAnalyticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

type UserPoolClientAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolClientAnalyticsConfiguration) *UserPoolClientAnalyticsConfiguration {
		return &v
	}).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can use the Amazon Pinpoint project for integration with the chosen user pool client. Amazon Cognito publishes events to the Amazon Pinpoint project that the app ARN declares.
func (o UserPoolClientAnalyticsConfigurationOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ApplicationArn }).(pulumi.StringPtrOutput)
}

// The application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The external ID.
func (o UserPoolClientAnalyticsConfigurationOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The ARN of an AWS Identity and Access Management role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// If `UserDataShared` is `true` , Amazon Cognito includes user data in the events that it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *bool { return v.UserDataShared }).(pulumi.BoolPtrOutput)
}

type UserPoolClientAnalyticsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) Elem() UserPoolClientAnalyticsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) UserPoolClientAnalyticsConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolClientAnalyticsConfiguration
		return ret
	}).(UserPoolClientAnalyticsConfigurationOutput)
}

// The Amazon Resource Name (ARN) of an Amazon Pinpoint project. You can use the Amazon Pinpoint project for integration with the chosen user pool client. Amazon Cognito publishes events to the Amazon Pinpoint project that the app ARN declares.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationArn
	}).(pulumi.StringPtrOutput)
}

// The application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The external ID.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The ARN of an AWS Identity and Access Management role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// If `UserDataShared` is `true` , Amazon Cognito includes user data in the events that it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.UserDataShared
	}).(pulumi.BoolPtrOutput)
}

type UserPoolClientTokenValidityUnits struct {
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `AccessTokenValidity` parameter. The default `AccessTokenValidity` time unit is hours. `AccessTokenValidity` duration can range from five minutes to one day.
	AccessToken *string `pulumi:"accessToken"`
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `IdTokenValidity` parameter. The default `IdTokenValidity` time unit is hours. `IdTokenValidity` duration can range from five minutes to one day.
	IdToken *string `pulumi:"idToken"`
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `RefreshTokenValidity` parameter. The default `RefreshTokenValidity` time unit is days. `RefreshTokenValidity` duration can range from 60 minutes to 10 years.
	RefreshToken *string `pulumi:"refreshToken"`
}

// UserPoolClientTokenValidityUnitsInput is an input type that accepts UserPoolClientTokenValidityUnitsArgs and UserPoolClientTokenValidityUnitsOutput values.
// You can construct a concrete instance of `UserPoolClientTokenValidityUnitsInput` via:
//
//	UserPoolClientTokenValidityUnitsArgs{...}
type UserPoolClientTokenValidityUnitsInput interface {
	pulumi.Input

	ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput
	ToUserPoolClientTokenValidityUnitsOutputWithContext(context.Context) UserPoolClientTokenValidityUnitsOutput
}

type UserPoolClientTokenValidityUnitsArgs struct {
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `AccessTokenValidity` parameter. The default `AccessTokenValidity` time unit is hours. `AccessTokenValidity` duration can range from five minutes to one day.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `IdTokenValidity` parameter. The default `IdTokenValidity` time unit is hours. `IdTokenValidity` duration can range from five minutes to one day.
	IdToken pulumi.StringPtrInput `pulumi:"idToken"`
	// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `RefreshTokenValidity` parameter. The default `RefreshTokenValidity` time unit is days. `RefreshTokenValidity` duration can range from 60 minutes to 10 years.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (UserPoolClientTokenValidityUnitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput {
	return i.ToUserPoolClientTokenValidityUnitsOutputWithContext(context.Background())
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsOutput)
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsOutput).ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx)
}

// UserPoolClientTokenValidityUnitsPtrInput is an input type that accepts UserPoolClientTokenValidityUnitsArgs, UserPoolClientTokenValidityUnitsPtr and UserPoolClientTokenValidityUnitsPtrOutput values.
// You can construct a concrete instance of `UserPoolClientTokenValidityUnitsPtrInput` via:
//
//	        UserPoolClientTokenValidityUnitsArgs{...}
//
//	or:
//
//	        nil
type UserPoolClientTokenValidityUnitsPtrInput interface {
	pulumi.Input

	ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput
	ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Context) UserPoolClientTokenValidityUnitsPtrOutput
}

type userPoolClientTokenValidityUnitsPtrType UserPoolClientTokenValidityUnitsArgs

func UserPoolClientTokenValidityUnitsPtr(v *UserPoolClientTokenValidityUnitsArgs) UserPoolClientTokenValidityUnitsPtrInput {
	return (*userPoolClientTokenValidityUnitsPtrType)(v)
}

func (*userPoolClientTokenValidityUnitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i *userPoolClientTokenValidityUnitsPtrType) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i *userPoolClientTokenValidityUnitsPtrType) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsPtrOutput)
}

type UserPoolClientTokenValidityUnitsOutput struct{ *pulumi.OutputState }

func (UserPoolClientTokenValidityUnitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return o.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolClientTokenValidityUnits) *UserPoolClientTokenValidityUnits {
		return &v
	}).(UserPoolClientTokenValidityUnitsPtrOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `AccessTokenValidity` parameter. The default `AccessTokenValidity` time unit is hours. `AccessTokenValidity` duration can range from five minutes to one day.
func (o UserPoolClientTokenValidityUnitsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `IdTokenValidity` parameter. The default `IdTokenValidity` time unit is hours. `IdTokenValidity` duration can range from five minutes to one day.
func (o UserPoolClientTokenValidityUnitsOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.IdToken }).(pulumi.StringPtrOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `RefreshTokenValidity` parameter. The default `RefreshTokenValidity` time unit is days. `RefreshTokenValidity` duration can range from 60 minutes to 10 years.
func (o UserPoolClientTokenValidityUnitsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

type UserPoolClientTokenValidityUnitsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolClientTokenValidityUnitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) Elem() UserPoolClientTokenValidityUnitsOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) UserPoolClientTokenValidityUnits {
		if v != nil {
			return *v
		}
		var ret UserPoolClientTokenValidityUnits
		return ret
	}).(UserPoolClientTokenValidityUnitsOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `AccessTokenValidity` parameter. The default `AccessTokenValidity` time unit is hours. `AccessTokenValidity` duration can range from five minutes to one day.
func (o UserPoolClientTokenValidityUnitsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `IdTokenValidity` parameter. The default `IdTokenValidity` time unit is hours. `IdTokenValidity` duration can range from five minutes to one day.
func (o UserPoolClientTokenValidityUnitsPtrOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.IdToken
	}).(pulumi.StringPtrOutput)
}

// A time unit of `seconds` , `minutes` , `hours` , or `days` for the value that you set in the `RefreshTokenValidity` parameter. The default `RefreshTokenValidity` time unit is days. `RefreshTokenValidity` duration can range from 60 minutes to 10 years.
func (o UserPoolClientTokenValidityUnitsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type UserPoolCustomEmailSender struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send email notifications to users.
	LambdaArn *string `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom email sender AWS Lambda function. The only supported value is `V1_0` .
	LambdaVersion *string `pulumi:"lambdaVersion"`
}

// UserPoolCustomEmailSenderInput is an input type that accepts UserPoolCustomEmailSenderArgs and UserPoolCustomEmailSenderOutput values.
// You can construct a concrete instance of `UserPoolCustomEmailSenderInput` via:
//
//	UserPoolCustomEmailSenderArgs{...}
type UserPoolCustomEmailSenderInput interface {
	pulumi.Input

	ToUserPoolCustomEmailSenderOutput() UserPoolCustomEmailSenderOutput
	ToUserPoolCustomEmailSenderOutputWithContext(context.Context) UserPoolCustomEmailSenderOutput
}

type UserPoolCustomEmailSenderArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send email notifications to users.
	LambdaArn pulumi.StringPtrInput `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom email sender AWS Lambda function. The only supported value is `V1_0` .
	LambdaVersion pulumi.StringPtrInput `pulumi:"lambdaVersion"`
}

func (UserPoolCustomEmailSenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolCustomEmailSender)(nil)).Elem()
}

func (i UserPoolCustomEmailSenderArgs) ToUserPoolCustomEmailSenderOutput() UserPoolCustomEmailSenderOutput {
	return i.ToUserPoolCustomEmailSenderOutputWithContext(context.Background())
}

func (i UserPoolCustomEmailSenderArgs) ToUserPoolCustomEmailSenderOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomEmailSenderOutput)
}

func (i UserPoolCustomEmailSenderArgs) ToUserPoolCustomEmailSenderPtrOutput() UserPoolCustomEmailSenderPtrOutput {
	return i.ToUserPoolCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (i UserPoolCustomEmailSenderArgs) ToUserPoolCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomEmailSenderOutput).ToUserPoolCustomEmailSenderPtrOutputWithContext(ctx)
}

// UserPoolCustomEmailSenderPtrInput is an input type that accepts UserPoolCustomEmailSenderArgs, UserPoolCustomEmailSenderPtr and UserPoolCustomEmailSenderPtrOutput values.
// You can construct a concrete instance of `UserPoolCustomEmailSenderPtrInput` via:
//
//	        UserPoolCustomEmailSenderArgs{...}
//
//	or:
//
//	        nil
type UserPoolCustomEmailSenderPtrInput interface {
	pulumi.Input

	ToUserPoolCustomEmailSenderPtrOutput() UserPoolCustomEmailSenderPtrOutput
	ToUserPoolCustomEmailSenderPtrOutputWithContext(context.Context) UserPoolCustomEmailSenderPtrOutput
}

type userPoolCustomEmailSenderPtrType UserPoolCustomEmailSenderArgs

func UserPoolCustomEmailSenderPtr(v *UserPoolCustomEmailSenderArgs) UserPoolCustomEmailSenderPtrInput {
	return (*userPoolCustomEmailSenderPtrType)(v)
}

func (*userPoolCustomEmailSenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolCustomEmailSender)(nil)).Elem()
}

func (i *userPoolCustomEmailSenderPtrType) ToUserPoolCustomEmailSenderPtrOutput() UserPoolCustomEmailSenderPtrOutput {
	return i.ToUserPoolCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (i *userPoolCustomEmailSenderPtrType) ToUserPoolCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomEmailSenderPtrOutput)
}

type UserPoolCustomEmailSenderOutput struct{ *pulumi.OutputState }

func (UserPoolCustomEmailSenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolCustomEmailSender)(nil)).Elem()
}

func (o UserPoolCustomEmailSenderOutput) ToUserPoolCustomEmailSenderOutput() UserPoolCustomEmailSenderOutput {
	return o
}

func (o UserPoolCustomEmailSenderOutput) ToUserPoolCustomEmailSenderOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderOutput {
	return o
}

func (o UserPoolCustomEmailSenderOutput) ToUserPoolCustomEmailSenderPtrOutput() UserPoolCustomEmailSenderPtrOutput {
	return o.ToUserPoolCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (o UserPoolCustomEmailSenderOutput) ToUserPoolCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolCustomEmailSender) *UserPoolCustomEmailSender {
		return &v
	}).(UserPoolCustomEmailSenderPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send email notifications to users.
func (o UserPoolCustomEmailSenderOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolCustomEmailSender) *string { return v.LambdaArn }).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom email sender AWS Lambda function. The only supported value is `V1_0` .
func (o UserPoolCustomEmailSenderOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolCustomEmailSender) *string { return v.LambdaVersion }).(pulumi.StringPtrOutput)
}

type UserPoolCustomEmailSenderPtrOutput struct{ *pulumi.OutputState }

func (UserPoolCustomEmailSenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolCustomEmailSender)(nil)).Elem()
}

func (o UserPoolCustomEmailSenderPtrOutput) ToUserPoolCustomEmailSenderPtrOutput() UserPoolCustomEmailSenderPtrOutput {
	return o
}

func (o UserPoolCustomEmailSenderPtrOutput) ToUserPoolCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomEmailSenderPtrOutput {
	return o
}

func (o UserPoolCustomEmailSenderPtrOutput) Elem() UserPoolCustomEmailSenderOutput {
	return o.ApplyT(func(v *UserPoolCustomEmailSender) UserPoolCustomEmailSender {
		if v != nil {
			return *v
		}
		var ret UserPoolCustomEmailSender
		return ret
	}).(UserPoolCustomEmailSenderOutput)
}

// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send email notifications to users.
func (o UserPoolCustomEmailSenderPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolCustomEmailSender) *string {
		if v == nil {
			return nil
		}
		return v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom email sender AWS Lambda function. The only supported value is `V1_0` .
func (o UserPoolCustomEmailSenderPtrOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolCustomEmailSender) *string {
		if v == nil {
			return nil
		}
		return v.LambdaVersion
	}).(pulumi.StringPtrOutput)
}

type UserPoolCustomSmsSender struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	LambdaArn *string `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS sender Lambda function. The only supported value is `V1_0` .
	LambdaVersion *string `pulumi:"lambdaVersion"`
}

// UserPoolCustomSmsSenderInput is an input type that accepts UserPoolCustomSmsSenderArgs and UserPoolCustomSmsSenderOutput values.
// You can construct a concrete instance of `UserPoolCustomSmsSenderInput` via:
//
//	UserPoolCustomSmsSenderArgs{...}
type UserPoolCustomSmsSenderInput interface {
	pulumi.Input

	ToUserPoolCustomSmsSenderOutput() UserPoolCustomSmsSenderOutput
	ToUserPoolCustomSmsSenderOutputWithContext(context.Context) UserPoolCustomSmsSenderOutput
}

type UserPoolCustomSmsSenderArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	LambdaArn pulumi.StringPtrInput `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS sender Lambda function. The only supported value is `V1_0` .
	LambdaVersion pulumi.StringPtrInput `pulumi:"lambdaVersion"`
}

func (UserPoolCustomSmsSenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolCustomSmsSender)(nil)).Elem()
}

func (i UserPoolCustomSmsSenderArgs) ToUserPoolCustomSmsSenderOutput() UserPoolCustomSmsSenderOutput {
	return i.ToUserPoolCustomSmsSenderOutputWithContext(context.Background())
}

func (i UserPoolCustomSmsSenderArgs) ToUserPoolCustomSmsSenderOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomSmsSenderOutput)
}

func (i UserPoolCustomSmsSenderArgs) ToUserPoolCustomSmsSenderPtrOutput() UserPoolCustomSmsSenderPtrOutput {
	return i.ToUserPoolCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (i UserPoolCustomSmsSenderArgs) ToUserPoolCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomSmsSenderOutput).ToUserPoolCustomSmsSenderPtrOutputWithContext(ctx)
}

// UserPoolCustomSmsSenderPtrInput is an input type that accepts UserPoolCustomSmsSenderArgs, UserPoolCustomSmsSenderPtr and UserPoolCustomSmsSenderPtrOutput values.
// You can construct a concrete instance of `UserPoolCustomSmsSenderPtrInput` via:
//
//	        UserPoolCustomSmsSenderArgs{...}
//
//	or:
//
//	        nil
type UserPoolCustomSmsSenderPtrInput interface {
	pulumi.Input

	ToUserPoolCustomSmsSenderPtrOutput() UserPoolCustomSmsSenderPtrOutput
	ToUserPoolCustomSmsSenderPtrOutputWithContext(context.Context) UserPoolCustomSmsSenderPtrOutput
}

type userPoolCustomSmsSenderPtrType UserPoolCustomSmsSenderArgs

func UserPoolCustomSmsSenderPtr(v *UserPoolCustomSmsSenderArgs) UserPoolCustomSmsSenderPtrInput {
	return (*userPoolCustomSmsSenderPtrType)(v)
}

func (*userPoolCustomSmsSenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolCustomSmsSender)(nil)).Elem()
}

func (i *userPoolCustomSmsSenderPtrType) ToUserPoolCustomSmsSenderPtrOutput() UserPoolCustomSmsSenderPtrOutput {
	return i.ToUserPoolCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (i *userPoolCustomSmsSenderPtrType) ToUserPoolCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolCustomSmsSenderPtrOutput)
}

type UserPoolCustomSmsSenderOutput struct{ *pulumi.OutputState }

func (UserPoolCustomSmsSenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolCustomSmsSender)(nil)).Elem()
}

func (o UserPoolCustomSmsSenderOutput) ToUserPoolCustomSmsSenderOutput() UserPoolCustomSmsSenderOutput {
	return o
}

func (o UserPoolCustomSmsSenderOutput) ToUserPoolCustomSmsSenderOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderOutput {
	return o
}

func (o UserPoolCustomSmsSenderOutput) ToUserPoolCustomSmsSenderPtrOutput() UserPoolCustomSmsSenderPtrOutput {
	return o.ToUserPoolCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (o UserPoolCustomSmsSenderOutput) ToUserPoolCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolCustomSmsSender) *UserPoolCustomSmsSender {
		return &v
	}).(UserPoolCustomSmsSenderPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send SMS notifications to users.
func (o UserPoolCustomSmsSenderOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolCustomSmsSender) *string { return v.LambdaArn }).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS sender Lambda function. The only supported value is `V1_0` .
func (o UserPoolCustomSmsSenderOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolCustomSmsSender) *string { return v.LambdaVersion }).(pulumi.StringPtrOutput)
}

type UserPoolCustomSmsSenderPtrOutput struct{ *pulumi.OutputState }

func (UserPoolCustomSmsSenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolCustomSmsSender)(nil)).Elem()
}

func (o UserPoolCustomSmsSenderPtrOutput) ToUserPoolCustomSmsSenderPtrOutput() UserPoolCustomSmsSenderPtrOutput {
	return o
}

func (o UserPoolCustomSmsSenderPtrOutput) ToUserPoolCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolCustomSmsSenderPtrOutput {
	return o
}

func (o UserPoolCustomSmsSenderPtrOutput) Elem() UserPoolCustomSmsSenderOutput {
	return o.ApplyT(func(v *UserPoolCustomSmsSender) UserPoolCustomSmsSender {
		if v != nil {
			return *v
		}
		var ret UserPoolCustomSmsSender
		return ret
	}).(UserPoolCustomSmsSenderOutput)
}

// The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Cognito triggers to send SMS notifications to users.
func (o UserPoolCustomSmsSenderPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolCustomSmsSender) *string {
		if v == nil {
			return nil
		}
		return v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS sender Lambda function. The only supported value is `V1_0` .
func (o UserPoolCustomSmsSenderPtrOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolCustomSmsSender) *string {
		if v == nil {
			return nil
		}
		return v.LambdaVersion
	}).(pulumi.StringPtrOutput)
}

type UserPoolDeviceConfiguration struct {
	// When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).
	//
	// > Whether or not `ChallengeRequiredOnNewDevice` is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.
	ChallengeRequiredOnNewDevice *bool `pulumi:"challengeRequiredOnNewDevice"`
	// When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request.
	//
	// When `DeviceOnlyRememberedOnUserPrompt` is `false` , Amazon Cognito immediately remembers devices that you register in a `ConfirmDevice` API request.
	DeviceOnlyRememberedOnUserPrompt *bool `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

// UserPoolDeviceConfigurationInput is an input type that accepts UserPoolDeviceConfigurationArgs and UserPoolDeviceConfigurationOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationInput` via:
//
//	UserPoolDeviceConfigurationArgs{...}
type UserPoolDeviceConfigurationInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput
	ToUserPoolDeviceConfigurationOutputWithContext(context.Context) UserPoolDeviceConfigurationOutput
}

type UserPoolDeviceConfigurationArgs struct {
	// When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).
	//
	// > Whether or not `ChallengeRequiredOnNewDevice` is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.
	ChallengeRequiredOnNewDevice pulumi.BoolPtrInput `pulumi:"challengeRequiredOnNewDevice"`
	// When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request.
	//
	// When `DeviceOnlyRememberedOnUserPrompt` is `false` , Amazon Cognito immediately remembers devices that you register in a `ConfirmDevice` API request.
	DeviceOnlyRememberedOnUserPrompt pulumi.BoolPtrInput `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

func (UserPoolDeviceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return i.ToUserPoolDeviceConfigurationOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput)
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput).ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx)
}

// UserPoolDeviceConfigurationPtrInput is an input type that accepts UserPoolDeviceConfigurationArgs, UserPoolDeviceConfigurationPtr and UserPoolDeviceConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationPtrInput` via:
//
//	        UserPoolDeviceConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolDeviceConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput
	ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Context) UserPoolDeviceConfigurationPtrOutput
}

type userPoolDeviceConfigurationPtrType UserPoolDeviceConfigurationArgs

func UserPoolDeviceConfigurationPtr(v *UserPoolDeviceConfigurationArgs) UserPoolDeviceConfigurationPtrInput {
	return (*userPoolDeviceConfigurationPtrType)(v)
}

func (*userPoolDeviceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationPtrOutput)
}

type UserPoolDeviceConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolDeviceConfiguration) *UserPoolDeviceConfiguration {
		return &v
	}).(UserPoolDeviceConfigurationPtrOutput)
}

// When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).
//
// > Whether or not `ChallengeRequiredOnNewDevice` is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.
func (o UserPoolDeviceConfigurationOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request.
//
// When `DeviceOnlyRememberedOnUserPrompt` is `false` , Amazon Cognito immediately remembers devices that you register in a `ConfirmDevice` API request.
func (o UserPoolDeviceConfigurationOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

type UserPoolDeviceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) Elem() UserPoolDeviceConfigurationOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) UserPoolDeviceConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolDeviceConfiguration
		return ret
	}).(UserPoolDeviceConfigurationOutput)
}

// When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).
//
// > Whether or not `ChallengeRequiredOnNewDevice` is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.
func (o UserPoolDeviceConfigurationPtrOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ChallengeRequiredOnNewDevice
	}).(pulumi.BoolPtrOutput)
}

// When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a [ConfirmDevice](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html) API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an [UpdateDeviceStatus](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html) API request.
//
// When `DeviceOnlyRememberedOnUserPrompt` is `false` , Amazon Cognito immediately remembers devices that you register in a `ConfirmDevice` API request.
func (o UserPoolDeviceConfigurationPtrOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DeviceOnlyRememberedOnUserPrompt
	}).(pulumi.BoolPtrOutput)
}

type UserPoolDomainCustomDomainConfigType struct {
	// The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You use this certificate for the subdomain of your custom domain.
	CertificateArn *string `pulumi:"certificateArn"`
}

// UserPoolDomainCustomDomainConfigTypeInput is an input type that accepts UserPoolDomainCustomDomainConfigTypeArgs and UserPoolDomainCustomDomainConfigTypeOutput values.
// You can construct a concrete instance of `UserPoolDomainCustomDomainConfigTypeInput` via:
//
//	UserPoolDomainCustomDomainConfigTypeArgs{...}
type UserPoolDomainCustomDomainConfigTypeInput interface {
	pulumi.Input

	ToUserPoolDomainCustomDomainConfigTypeOutput() UserPoolDomainCustomDomainConfigTypeOutput
	ToUserPoolDomainCustomDomainConfigTypeOutputWithContext(context.Context) UserPoolDomainCustomDomainConfigTypeOutput
}

type UserPoolDomainCustomDomainConfigTypeArgs struct {
	// The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You use this certificate for the subdomain of your custom domain.
	CertificateArn pulumi.StringPtrInput `pulumi:"certificateArn"`
}

func (UserPoolDomainCustomDomainConfigTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDomainCustomDomainConfigType)(nil)).Elem()
}

func (i UserPoolDomainCustomDomainConfigTypeArgs) ToUserPoolDomainCustomDomainConfigTypeOutput() UserPoolDomainCustomDomainConfigTypeOutput {
	return i.ToUserPoolDomainCustomDomainConfigTypeOutputWithContext(context.Background())
}

func (i UserPoolDomainCustomDomainConfigTypeArgs) ToUserPoolDomainCustomDomainConfigTypeOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDomainCustomDomainConfigTypeOutput)
}

func (i UserPoolDomainCustomDomainConfigTypeArgs) ToUserPoolDomainCustomDomainConfigTypePtrOutput() UserPoolDomainCustomDomainConfigTypePtrOutput {
	return i.ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(context.Background())
}

func (i UserPoolDomainCustomDomainConfigTypeArgs) ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDomainCustomDomainConfigTypeOutput).ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(ctx)
}

// UserPoolDomainCustomDomainConfigTypePtrInput is an input type that accepts UserPoolDomainCustomDomainConfigTypeArgs, UserPoolDomainCustomDomainConfigTypePtr and UserPoolDomainCustomDomainConfigTypePtrOutput values.
// You can construct a concrete instance of `UserPoolDomainCustomDomainConfigTypePtrInput` via:
//
//	        UserPoolDomainCustomDomainConfigTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolDomainCustomDomainConfigTypePtrInput interface {
	pulumi.Input

	ToUserPoolDomainCustomDomainConfigTypePtrOutput() UserPoolDomainCustomDomainConfigTypePtrOutput
	ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(context.Context) UserPoolDomainCustomDomainConfigTypePtrOutput
}

type userPoolDomainCustomDomainConfigTypePtrType UserPoolDomainCustomDomainConfigTypeArgs

func UserPoolDomainCustomDomainConfigTypePtr(v *UserPoolDomainCustomDomainConfigTypeArgs) UserPoolDomainCustomDomainConfigTypePtrInput {
	return (*userPoolDomainCustomDomainConfigTypePtrType)(v)
}

func (*userPoolDomainCustomDomainConfigTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDomainCustomDomainConfigType)(nil)).Elem()
}

func (i *userPoolDomainCustomDomainConfigTypePtrType) ToUserPoolDomainCustomDomainConfigTypePtrOutput() UserPoolDomainCustomDomainConfigTypePtrOutput {
	return i.ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(context.Background())
}

func (i *userPoolDomainCustomDomainConfigTypePtrType) ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDomainCustomDomainConfigTypePtrOutput)
}

type UserPoolDomainCustomDomainConfigTypeOutput struct{ *pulumi.OutputState }

func (UserPoolDomainCustomDomainConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDomainCustomDomainConfigType)(nil)).Elem()
}

func (o UserPoolDomainCustomDomainConfigTypeOutput) ToUserPoolDomainCustomDomainConfigTypeOutput() UserPoolDomainCustomDomainConfigTypeOutput {
	return o
}

func (o UserPoolDomainCustomDomainConfigTypeOutput) ToUserPoolDomainCustomDomainConfigTypeOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypeOutput {
	return o
}

func (o UserPoolDomainCustomDomainConfigTypeOutput) ToUserPoolDomainCustomDomainConfigTypePtrOutput() UserPoolDomainCustomDomainConfigTypePtrOutput {
	return o.ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(context.Background())
}

func (o UserPoolDomainCustomDomainConfigTypeOutput) ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolDomainCustomDomainConfigType) *UserPoolDomainCustomDomainConfigType {
		return &v
	}).(UserPoolDomainCustomDomainConfigTypePtrOutput)
}

// The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You use this certificate for the subdomain of your custom domain.
func (o UserPoolDomainCustomDomainConfigTypeOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolDomainCustomDomainConfigType) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

type UserPoolDomainCustomDomainConfigTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolDomainCustomDomainConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDomainCustomDomainConfigType)(nil)).Elem()
}

func (o UserPoolDomainCustomDomainConfigTypePtrOutput) ToUserPoolDomainCustomDomainConfigTypePtrOutput() UserPoolDomainCustomDomainConfigTypePtrOutput {
	return o
}

func (o UserPoolDomainCustomDomainConfigTypePtrOutput) ToUserPoolDomainCustomDomainConfigTypePtrOutputWithContext(ctx context.Context) UserPoolDomainCustomDomainConfigTypePtrOutput {
	return o
}

func (o UserPoolDomainCustomDomainConfigTypePtrOutput) Elem() UserPoolDomainCustomDomainConfigTypeOutput {
	return o.ApplyT(func(v *UserPoolDomainCustomDomainConfigType) UserPoolDomainCustomDomainConfigType {
		if v != nil {
			return *v
		}
		var ret UserPoolDomainCustomDomainConfigType
		return ret
	}).(UserPoolDomainCustomDomainConfigTypeOutput)
}

// The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate. You use this certificate for the subdomain of your custom domain.
func (o UserPoolDomainCustomDomainConfigTypePtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolDomainCustomDomainConfigType) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

type UserPoolEmailConfiguration struct {
	// The set of configuration rules that can be applied to emails sent using Amazon SES. A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails:
	//
	// - Event publishing – Amazon SES can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other AWS services such as SNS and CloudWatch.
	// - IP pool management – When leasing dedicated IP addresses with Amazon SES, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.
	ConfigurationSet *string `pulumi:"configurationSet"`
	// Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration. Specify one of the following values:
	//
	// - **COGNITO_DEFAULT** - When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.
	//
	// To look up the email delivery limit for the default option, see [Limits](https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html) in the *Amazon Cognito Developer Guide* .
	//
	// The default FROM address is `no-reply@verificationemail.com` . To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the `SourceArn` parameter.
	// - **DEVELOPER** - When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your AWS account .
	//
	// If you use this option, provide the ARN of an Amazon SES verified email address for the `SourceArn` parameter.
	//
	// Before Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a *service-linked role* , which is a type of role in your AWS account . This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see [Using Service-Linked Roles for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html) in the *Amazon Cognito Developer Guide* .
	EmailSendingAccount *string `pulumi:"emailSendingAccount"`
	// Identifies either the sender's email address or the sender's name with their email address. For example, `testuser@example.com` or `Test User <testuser@example.com>` . This address appears before the body of the email.
	From *string `pulumi:"from"`
	// The destination to which the receiver of the email should reply.
	ReplyToEmailAddress *string `pulumi:"replyToEmailAddress"`
	// The ARN of a verified email address or an address from a verified domain in Amazon SES. You can set a `SourceArn` email from a verified domain only with an API request. You can set a verified email address, but not an address in a verified domain, in the Amazon Cognito console. Amazon Cognito uses the email address that you provide in one of the following ways, depending on the value that you specify for the `EmailSendingAccount` parameter:
	//
	// - If you specify `COGNITO_DEFAULT` , Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.
	// - If you specify `DEVELOPER` , Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.
	//
	// The Region value of the `SourceArn` parameter must indicate a supported AWS Region of your user pool. Typically, the Region in the `SourceArn` and the user pool Region are the same. For more information, see [Amazon SES email configuration regions](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping) in the [Amazon Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) .
	SourceArn *string `pulumi:"sourceArn"`
}

// UserPoolEmailConfigurationInput is an input type that accepts UserPoolEmailConfigurationArgs and UserPoolEmailConfigurationOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationInput` via:
//
//	UserPoolEmailConfigurationArgs{...}
type UserPoolEmailConfigurationInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput
	ToUserPoolEmailConfigurationOutputWithContext(context.Context) UserPoolEmailConfigurationOutput
}

type UserPoolEmailConfigurationArgs struct {
	// The set of configuration rules that can be applied to emails sent using Amazon SES. A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails:
	//
	// - Event publishing – Amazon SES can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other AWS services such as SNS and CloudWatch.
	// - IP pool management – When leasing dedicated IP addresses with Amazon SES, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.
	ConfigurationSet pulumi.StringPtrInput `pulumi:"configurationSet"`
	// Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration. Specify one of the following values:
	//
	// - **COGNITO_DEFAULT** - When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.
	//
	// To look up the email delivery limit for the default option, see [Limits](https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html) in the *Amazon Cognito Developer Guide* .
	//
	// The default FROM address is `no-reply@verificationemail.com` . To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the `SourceArn` parameter.
	// - **DEVELOPER** - When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your AWS account .
	//
	// If you use this option, provide the ARN of an Amazon SES verified email address for the `SourceArn` parameter.
	//
	// Before Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a *service-linked role* , which is a type of role in your AWS account . This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see [Using Service-Linked Roles for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html) in the *Amazon Cognito Developer Guide* .
	EmailSendingAccount pulumi.StringPtrInput `pulumi:"emailSendingAccount"`
	// Identifies either the sender's email address or the sender's name with their email address. For example, `testuser@example.com` or `Test User <testuser@example.com>` . This address appears before the body of the email.
	From pulumi.StringPtrInput `pulumi:"from"`
	// The destination to which the receiver of the email should reply.
	ReplyToEmailAddress pulumi.StringPtrInput `pulumi:"replyToEmailAddress"`
	// The ARN of a verified email address or an address from a verified domain in Amazon SES. You can set a `SourceArn` email from a verified domain only with an API request. You can set a verified email address, but not an address in a verified domain, in the Amazon Cognito console. Amazon Cognito uses the email address that you provide in one of the following ways, depending on the value that you specify for the `EmailSendingAccount` parameter:
	//
	// - If you specify `COGNITO_DEFAULT` , Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.
	// - If you specify `DEVELOPER` , Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.
	//
	// The Region value of the `SourceArn` parameter must indicate a supported AWS Region of your user pool. Typically, the Region in the `SourceArn` and the user pool Region are the same. For more information, see [Amazon SES email configuration regions](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping) in the [Amazon Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) .
	SourceArn pulumi.StringPtrInput `pulumi:"sourceArn"`
}

func (UserPoolEmailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return i.ToUserPoolEmailConfigurationOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput)
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput).ToUserPoolEmailConfigurationPtrOutputWithContext(ctx)
}

// UserPoolEmailConfigurationPtrInput is an input type that accepts UserPoolEmailConfigurationArgs, UserPoolEmailConfigurationPtr and UserPoolEmailConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationPtrInput` via:
//
//	        UserPoolEmailConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolEmailConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput
	ToUserPoolEmailConfigurationPtrOutputWithContext(context.Context) UserPoolEmailConfigurationPtrOutput
}

type userPoolEmailConfigurationPtrType UserPoolEmailConfigurationArgs

func UserPoolEmailConfigurationPtr(v *UserPoolEmailConfigurationArgs) UserPoolEmailConfigurationPtrInput {
	return (*userPoolEmailConfigurationPtrType)(v)
}

func (*userPoolEmailConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationPtrOutput)
}

type UserPoolEmailConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolEmailConfiguration) *UserPoolEmailConfiguration {
		return &v
	}).(UserPoolEmailConfigurationPtrOutput)
}

// The set of configuration rules that can be applied to emails sent using Amazon SES. A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails:
//
// - Event publishing – Amazon SES can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other AWS services such as SNS and CloudWatch.
// - IP pool management – When leasing dedicated IP addresses with Amazon SES, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.
func (o UserPoolEmailConfigurationOutput) ConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ConfigurationSet }).(pulumi.StringPtrOutput)
}

// Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration. Specify one of the following values:
//
// - **COGNITO_DEFAULT** - When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.
//
// To look up the email delivery limit for the default option, see [Limits](https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html) in the *Amazon Cognito Developer Guide* .
//
// The default FROM address is `no-reply@verificationemail.com` . To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the `SourceArn` parameter.
// - **DEVELOPER** - When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your AWS account .
//
// If you use this option, provide the ARN of an Amazon SES verified email address for the `SourceArn` parameter.
//
// Before Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a *service-linked role* , which is a type of role in your AWS account . This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see [Using Service-Linked Roles for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html) in the *Amazon Cognito Developer Guide* .
func (o UserPoolEmailConfigurationOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.EmailSendingAccount }).(pulumi.StringPtrOutput)
}

// Identifies either the sender's email address or the sender's name with their email address. For example, `testuser@example.com` or `Test User <testuser@example.com>` . This address appears before the body of the email.
func (o UserPoolEmailConfigurationOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The destination to which the receiver of the email should reply.
func (o UserPoolEmailConfigurationOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ReplyToEmailAddress }).(pulumi.StringPtrOutput)
}

// The ARN of a verified email address or an address from a verified domain in Amazon SES. You can set a `SourceArn` email from a verified domain only with an API request. You can set a verified email address, but not an address in a verified domain, in the Amazon Cognito console. Amazon Cognito uses the email address that you provide in one of the following ways, depending on the value that you specify for the `EmailSendingAccount` parameter:
//
// - If you specify `COGNITO_DEFAULT` , Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.
// - If you specify `DEVELOPER` , Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.
//
// The Region value of the `SourceArn` parameter must indicate a supported AWS Region of your user pool. Typically, the Region in the `SourceArn` and the user pool Region are the same. For more information, see [Amazon SES email configuration regions](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping) in the [Amazon Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) .
func (o UserPoolEmailConfigurationOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.SourceArn }).(pulumi.StringPtrOutput)
}

type UserPoolEmailConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) Elem() UserPoolEmailConfigurationOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) UserPoolEmailConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolEmailConfiguration
		return ret
	}).(UserPoolEmailConfigurationOutput)
}

// The set of configuration rules that can be applied to emails sent using Amazon SES. A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails:
//
// - Event publishing – Amazon SES can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other AWS services such as SNS and CloudWatch.
// - IP pool management – When leasing dedicated IP addresses with Amazon SES, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.
func (o UserPoolEmailConfigurationPtrOutput) ConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationSet
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration. Specify one of the following values:
//
// - **COGNITO_DEFAULT** - When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.
//
// To look up the email delivery limit for the default option, see [Limits](https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html) in the *Amazon Cognito Developer Guide* .
//
// The default FROM address is `no-reply@verificationemail.com` . To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the `SourceArn` parameter.
// - **DEVELOPER** - When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your AWS account .
//
// If you use this option, provide the ARN of an Amazon SES verified email address for the `SourceArn` parameter.
//
// Before Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a *service-linked role* , which is a type of role in your AWS account . This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see [Using Service-Linked Roles for Amazon Cognito](https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html) in the *Amazon Cognito Developer Guide* .
func (o UserPoolEmailConfigurationPtrOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EmailSendingAccount
	}).(pulumi.StringPtrOutput)
}

// Identifies either the sender's email address or the sender's name with their email address. For example, `testuser@example.com` or `Test User <testuser@example.com>` . This address appears before the body of the email.
func (o UserPoolEmailConfigurationPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// The destination to which the receiver of the email should reply.
func (o UserPoolEmailConfigurationPtrOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ReplyToEmailAddress
	}).(pulumi.StringPtrOutput)
}

// The ARN of a verified email address or an address from a verified domain in Amazon SES. You can set a `SourceArn` email from a verified domain only with an API request. You can set a verified email address, but not an address in a verified domain, in the Amazon Cognito console. Amazon Cognito uses the email address that you provide in one of the following ways, depending on the value that you specify for the `EmailSendingAccount` parameter:
//
// - If you specify `COGNITO_DEFAULT` , Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.
// - If you specify `DEVELOPER` , Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.
//
// The Region value of the `SourceArn` parameter must indicate a supported AWS Region of your user pool. Typically, the Region in the `SourceArn` and the user pool Region are the same. For more information, see [Amazon SES email configuration regions](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping) in the [Amazon Cognito Developer Guide](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) .
func (o UserPoolEmailConfigurationPtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SourceArn
	}).(pulumi.StringPtrOutput)
}

type UserPoolInviteMessageTemplate struct {
	// The message template for email messages. EmailMessage is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
	EmailMessage *string `pulumi:"emailMessage"`
	// The subject line for email messages. EmailSubject is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
	EmailSubject *string `pulumi:"emailSubject"`
	// The message template for SMS messages.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolInviteMessageTemplateInput is an input type that accepts UserPoolInviteMessageTemplateArgs and UserPoolInviteMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolInviteMessageTemplateInput` via:
//
//	UserPoolInviteMessageTemplateArgs{...}
type UserPoolInviteMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolInviteMessageTemplateOutput() UserPoolInviteMessageTemplateOutput
	ToUserPoolInviteMessageTemplateOutputWithContext(context.Context) UserPoolInviteMessageTemplateOutput
}

type UserPoolInviteMessageTemplateArgs struct {
	// The message template for email messages. EmailMessage is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// The subject line for email messages. EmailSubject is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// The message template for SMS messages.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolInviteMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolInviteMessageTemplate)(nil)).Elem()
}

func (i UserPoolInviteMessageTemplateArgs) ToUserPoolInviteMessageTemplateOutput() UserPoolInviteMessageTemplateOutput {
	return i.ToUserPoolInviteMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolInviteMessageTemplateArgs) ToUserPoolInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolInviteMessageTemplateOutput)
}

func (i UserPoolInviteMessageTemplateArgs) ToUserPoolInviteMessageTemplatePtrOutput() UserPoolInviteMessageTemplatePtrOutput {
	return i.ToUserPoolInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolInviteMessageTemplateArgs) ToUserPoolInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolInviteMessageTemplateOutput).ToUserPoolInviteMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolInviteMessageTemplatePtrInput is an input type that accepts UserPoolInviteMessageTemplateArgs, UserPoolInviteMessageTemplatePtr and UserPoolInviteMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolInviteMessageTemplatePtrInput` via:
//
//	        UserPoolInviteMessageTemplateArgs{...}
//
//	or:
//
//	        nil
type UserPoolInviteMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolInviteMessageTemplatePtrOutput() UserPoolInviteMessageTemplatePtrOutput
	ToUserPoolInviteMessageTemplatePtrOutputWithContext(context.Context) UserPoolInviteMessageTemplatePtrOutput
}

type userPoolInviteMessageTemplatePtrType UserPoolInviteMessageTemplateArgs

func UserPoolInviteMessageTemplatePtr(v *UserPoolInviteMessageTemplateArgs) UserPoolInviteMessageTemplatePtrInput {
	return (*userPoolInviteMessageTemplatePtrType)(v)
}

func (*userPoolInviteMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolInviteMessageTemplate)(nil)).Elem()
}

func (i *userPoolInviteMessageTemplatePtrType) ToUserPoolInviteMessageTemplatePtrOutput() UserPoolInviteMessageTemplatePtrOutput {
	return i.ToUserPoolInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolInviteMessageTemplatePtrType) ToUserPoolInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolInviteMessageTemplatePtrOutput)
}

type UserPoolInviteMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolInviteMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolInviteMessageTemplateOutput) ToUserPoolInviteMessageTemplateOutput() UserPoolInviteMessageTemplateOutput {
	return o
}

func (o UserPoolInviteMessageTemplateOutput) ToUserPoolInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplateOutput {
	return o
}

func (o UserPoolInviteMessageTemplateOutput) ToUserPoolInviteMessageTemplatePtrOutput() UserPoolInviteMessageTemplatePtrOutput {
	return o.ToUserPoolInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolInviteMessageTemplateOutput) ToUserPoolInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolInviteMessageTemplate) *UserPoolInviteMessageTemplate {
		return &v
	}).(UserPoolInviteMessageTemplatePtrOutput)
}

// The message template for email messages. EmailMessage is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
func (o UserPoolInviteMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolInviteMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The subject line for email messages. EmailSubject is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
func (o UserPoolInviteMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolInviteMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The message template for SMS messages.
func (o UserPoolInviteMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolInviteMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolInviteMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolInviteMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolInviteMessageTemplatePtrOutput) ToUserPoolInviteMessageTemplatePtrOutput() UserPoolInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolInviteMessageTemplatePtrOutput) ToUserPoolInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolInviteMessageTemplatePtrOutput) Elem() UserPoolInviteMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolInviteMessageTemplate) UserPoolInviteMessageTemplate {
		if v != nil {
			return *v
		}
		var ret UserPoolInviteMessageTemplate
		return ret
	}).(UserPoolInviteMessageTemplateOutput)
}

// The message template for email messages. EmailMessage is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
func (o UserPoolInviteMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessage
	}).(pulumi.StringPtrOutput)
}

// The subject line for email messages. EmailSubject is allowed only if [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is DEVELOPER.
func (o UserPoolInviteMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubject
	}).(pulumi.StringPtrOutput)
}

// The message template for SMS messages.
func (o UserPoolInviteMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.SmsMessage
	}).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfig struct {
	// Creates an authentication challenge.
	CreateAuthChallenge *string `pulumi:"createAuthChallenge"`
	// A custom email sender AWS Lambda trigger.
	CustomEmailSender *UserPoolCustomEmailSender `pulumi:"customEmailSender"`
	// A custom Message AWS Lambda trigger.
	CustomMessage *string `pulumi:"customMessage"`
	// A custom SMS sender AWS Lambda trigger.
	CustomSmsSender *UserPoolCustomSmsSender `pulumi:"customSmsSender"`
	// Defines the authentication challenge.
	DefineAuthChallenge *string `pulumi:"defineAuthChallenge"`
	// The Amazon Resource Name of a AWS Key Management Service ( AWS KMS ) key. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to `CustomEmailSender` and `CustomSMSSender` .
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A post-authentication AWS Lambda trigger.
	PostAuthentication *string `pulumi:"postAuthentication"`
	// A post-confirmation AWS Lambda trigger.
	PostConfirmation *string `pulumi:"postConfirmation"`
	// A pre-authentication AWS Lambda trigger.
	PreAuthentication *string `pulumi:"preAuthentication"`
	// A pre-registration AWS Lambda trigger.
	PreSignUp *string `pulumi:"preSignUp"`
	// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
	//
	// Set this parameter for legacy purposes. If you also set an ARN in `PreTokenGenerationConfig` , its value must be identical to `PreTokenGeneration` . For new instances of pre token generation triggers, set the `LambdaArn` of `PreTokenGenerationConfig` .
	//
	// You can set ``
	PreTokenGeneration *string `pulumi:"preTokenGeneration"`
	// The detailed configuration of a pre token generation trigger. If you also set an ARN in `PreTokenGeneration` , its value must be identical to `PreTokenGenerationConfig` .
	PreTokenGenerationConfig *UserPoolPreTokenGenerationConfig `pulumi:"preTokenGenerationConfig"`
	// The user migration Lambda config type.
	UserMigration *string `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse *string `pulumi:"verifyAuthChallengeResponse"`
}

// UserPoolLambdaConfigInput is an input type that accepts UserPoolLambdaConfigArgs and UserPoolLambdaConfigOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigInput` via:
//
//	UserPoolLambdaConfigArgs{...}
type UserPoolLambdaConfigInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput
	ToUserPoolLambdaConfigOutputWithContext(context.Context) UserPoolLambdaConfigOutput
}

type UserPoolLambdaConfigArgs struct {
	// Creates an authentication challenge.
	CreateAuthChallenge pulumi.StringPtrInput `pulumi:"createAuthChallenge"`
	// A custom email sender AWS Lambda trigger.
	CustomEmailSender UserPoolCustomEmailSenderPtrInput `pulumi:"customEmailSender"`
	// A custom Message AWS Lambda trigger.
	CustomMessage pulumi.StringPtrInput `pulumi:"customMessage"`
	// A custom SMS sender AWS Lambda trigger.
	CustomSmsSender UserPoolCustomSmsSenderPtrInput `pulumi:"customSmsSender"`
	// Defines the authentication challenge.
	DefineAuthChallenge pulumi.StringPtrInput `pulumi:"defineAuthChallenge"`
	// The Amazon Resource Name of a AWS Key Management Service ( AWS KMS ) key. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to `CustomEmailSender` and `CustomSMSSender` .
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// A post-authentication AWS Lambda trigger.
	PostAuthentication pulumi.StringPtrInput `pulumi:"postAuthentication"`
	// A post-confirmation AWS Lambda trigger.
	PostConfirmation pulumi.StringPtrInput `pulumi:"postConfirmation"`
	// A pre-authentication AWS Lambda trigger.
	PreAuthentication pulumi.StringPtrInput `pulumi:"preAuthentication"`
	// A pre-registration AWS Lambda trigger.
	PreSignUp pulumi.StringPtrInput `pulumi:"preSignUp"`
	// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
	//
	// Set this parameter for legacy purposes. If you also set an ARN in `PreTokenGenerationConfig` , its value must be identical to `PreTokenGeneration` . For new instances of pre token generation triggers, set the `LambdaArn` of `PreTokenGenerationConfig` .
	//
	// You can set ``
	PreTokenGeneration pulumi.StringPtrInput `pulumi:"preTokenGeneration"`
	// The detailed configuration of a pre token generation trigger. If you also set an ARN in `PreTokenGeneration` , its value must be identical to `PreTokenGenerationConfig` .
	PreTokenGenerationConfig UserPoolPreTokenGenerationConfigPtrInput `pulumi:"preTokenGenerationConfig"`
	// The user migration Lambda config type.
	UserMigration pulumi.StringPtrInput `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse pulumi.StringPtrInput `pulumi:"verifyAuthChallengeResponse"`
}

func (UserPoolLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return i.ToUserPoolLambdaConfigOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput)
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput).ToUserPoolLambdaConfigPtrOutputWithContext(ctx)
}

// UserPoolLambdaConfigPtrInput is an input type that accepts UserPoolLambdaConfigArgs, UserPoolLambdaConfigPtr and UserPoolLambdaConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigPtrInput` via:
//
//	        UserPoolLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolLambdaConfigPtrInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput
	ToUserPoolLambdaConfigPtrOutputWithContext(context.Context) UserPoolLambdaConfigPtrOutput
}

type userPoolLambdaConfigPtrType UserPoolLambdaConfigArgs

func UserPoolLambdaConfigPtr(v *UserPoolLambdaConfigArgs) UserPoolLambdaConfigPtrInput {
	return (*userPoolLambdaConfigPtrType)(v)
}

func (*userPoolLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigPtrOutput)
}

type UserPoolLambdaConfigOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolLambdaConfig) *UserPoolLambdaConfig {
		return &v
	}).(UserPoolLambdaConfigPtrOutput)
}

// Creates an authentication challenge.
func (o UserPoolLambdaConfigOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CreateAuthChallenge }).(pulumi.StringPtrOutput)
}

// A custom email sender AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) CustomEmailSender() UserPoolCustomEmailSenderPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolCustomEmailSender { return v.CustomEmailSender }).(UserPoolCustomEmailSenderPtrOutput)
}

// A custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CustomMessage }).(pulumi.StringPtrOutput)
}

// A custom SMS sender AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) CustomSmsSender() UserPoolCustomSmsSenderPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolCustomSmsSender { return v.CustomSmsSender }).(UserPoolCustomSmsSenderPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.DefineAuthChallenge }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name of a AWS Key Management Service ( AWS KMS ) key. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to `CustomEmailSender` and `CustomSMSSender` .
func (o UserPoolLambdaConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostAuthentication }).(pulumi.StringPtrOutput)
}

// A post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostConfirmation }).(pulumi.StringPtrOutput)
}

// A pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreAuthentication }).(pulumi.StringPtrOutput)
}

// A pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreSignUp }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
//
// Set this parameter for legacy purposes. If you also set an ARN in `PreTokenGenerationConfig` , its value must be identical to `PreTokenGeneration` . For new instances of pre token generation triggers, set the `LambdaArn` of `PreTokenGenerationConfig` .
//
// You can set “
func (o UserPoolLambdaConfigOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreTokenGeneration }).(pulumi.StringPtrOutput)
}

// The detailed configuration of a pre token generation trigger. If you also set an ARN in `PreTokenGeneration` , its value must be identical to `PreTokenGenerationConfig` .
func (o UserPoolLambdaConfigOutput) PreTokenGenerationConfig() UserPoolPreTokenGenerationConfigPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolPreTokenGenerationConfig { return v.PreTokenGenerationConfig }).(UserPoolPreTokenGenerationConfigPtrOutput)
}

// The user migration Lambda config type.
func (o UserPoolLambdaConfigOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.UserMigration }).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.VerifyAuthChallengeResponse }).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) Elem() UserPoolLambdaConfigOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) UserPoolLambdaConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolLambdaConfig
		return ret
	}).(UserPoolLambdaConfigOutput)
}

// Creates an authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CreateAuthChallenge
	}).(pulumi.StringPtrOutput)
}

// A custom email sender AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) CustomEmailSender() UserPoolCustomEmailSenderPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *UserPoolCustomEmailSender {
		if v == nil {
			return nil
		}
		return v.CustomEmailSender
	}).(UserPoolCustomEmailSenderPtrOutput)
}

// A custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomMessage
	}).(pulumi.StringPtrOutput)
}

// A custom SMS sender AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) CustomSmsSender() UserPoolCustomSmsSenderPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *UserPoolCustomSmsSender {
		if v == nil {
			return nil
		}
		return v.CustomSmsSender
	}).(UserPoolCustomSmsSenderPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefineAuthChallenge
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name of a AWS Key Management Service ( AWS KMS ) key. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to `CustomEmailSender` and `CustomSMSSender` .
func (o UserPoolLambdaConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// A post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PostAuthentication
	}).(pulumi.StringPtrOutput)
}

// A post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PostConfirmation
	}).(pulumi.StringPtrOutput)
}

// A pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreAuthentication
	}).(pulumi.StringPtrOutput)
}

// A pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreSignUp
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
//
// Set this parameter for legacy purposes. If you also set an ARN in `PreTokenGenerationConfig` , its value must be identical to `PreTokenGeneration` . For new instances of pre token generation triggers, set the `LambdaArn` of `PreTokenGenerationConfig` .
//
// You can set “
func (o UserPoolLambdaConfigPtrOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreTokenGeneration
	}).(pulumi.StringPtrOutput)
}

// The detailed configuration of a pre token generation trigger. If you also set an ARN in `PreTokenGeneration` , its value must be identical to `PreTokenGenerationConfig` .
func (o UserPoolLambdaConfigPtrOutput) PreTokenGenerationConfig() UserPoolPreTokenGenerationConfigPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *UserPoolPreTokenGenerationConfig {
		if v == nil {
			return nil
		}
		return v.PreTokenGenerationConfig
	}).(UserPoolPreTokenGenerationConfigPtrOutput)
}

// The user migration Lambda config type.
func (o UserPoolLambdaConfigPtrOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserMigration
	}).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigPtrOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.VerifyAuthChallengeResponse
	}).(pulumi.StringPtrOutput)
}

type UserPoolNumberAttributeConstraints struct {
	// The maximum length of a number attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
	MaxValue *string `pulumi:"maxValue"`
	// The minimum value of an attribute that is of the number data type.
	MinValue *string `pulumi:"minValue"`
}

// UserPoolNumberAttributeConstraintsInput is an input type that accepts UserPoolNumberAttributeConstraintsArgs and UserPoolNumberAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolNumberAttributeConstraintsInput` via:
//
//	UserPoolNumberAttributeConstraintsArgs{...}
type UserPoolNumberAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolNumberAttributeConstraintsOutput() UserPoolNumberAttributeConstraintsOutput
	ToUserPoolNumberAttributeConstraintsOutputWithContext(context.Context) UserPoolNumberAttributeConstraintsOutput
}

type UserPoolNumberAttributeConstraintsArgs struct {
	// The maximum length of a number attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
	MaxValue pulumi.StringPtrInput `pulumi:"maxValue"`
	// The minimum value of an attribute that is of the number data type.
	MinValue pulumi.StringPtrInput `pulumi:"minValue"`
}

func (UserPoolNumberAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolNumberAttributeConstraints)(nil)).Elem()
}

func (i UserPoolNumberAttributeConstraintsArgs) ToUserPoolNumberAttributeConstraintsOutput() UserPoolNumberAttributeConstraintsOutput {
	return i.ToUserPoolNumberAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolNumberAttributeConstraintsArgs) ToUserPoolNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolNumberAttributeConstraintsOutput)
}

func (i UserPoolNumberAttributeConstraintsArgs) ToUserPoolNumberAttributeConstraintsPtrOutput() UserPoolNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolNumberAttributeConstraintsArgs) ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolNumberAttributeConstraintsOutput).ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolNumberAttributeConstraintsPtrInput is an input type that accepts UserPoolNumberAttributeConstraintsArgs, UserPoolNumberAttributeConstraintsPtr and UserPoolNumberAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolNumberAttributeConstraintsPtrInput` via:
//
//	        UserPoolNumberAttributeConstraintsArgs{...}
//
//	or:
//
//	        nil
type UserPoolNumberAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolNumberAttributeConstraintsPtrOutput() UserPoolNumberAttributeConstraintsPtrOutput
	ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolNumberAttributeConstraintsPtrOutput
}

type userPoolNumberAttributeConstraintsPtrType UserPoolNumberAttributeConstraintsArgs

func UserPoolNumberAttributeConstraintsPtr(v *UserPoolNumberAttributeConstraintsArgs) UserPoolNumberAttributeConstraintsPtrInput {
	return (*userPoolNumberAttributeConstraintsPtrType)(v)
}

func (*userPoolNumberAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolNumberAttributeConstraints)(nil)).Elem()
}

func (i *userPoolNumberAttributeConstraintsPtrType) ToUserPoolNumberAttributeConstraintsPtrOutput() UserPoolNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolNumberAttributeConstraintsPtrType) ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolNumberAttributeConstraintsPtrOutput)
}

type UserPoolNumberAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolNumberAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolNumberAttributeConstraintsOutput) ToUserPoolNumberAttributeConstraintsOutput() UserPoolNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolNumberAttributeConstraintsOutput) ToUserPoolNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolNumberAttributeConstraintsOutput) ToUserPoolNumberAttributeConstraintsPtrOutput() UserPoolNumberAttributeConstraintsPtrOutput {
	return o.ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolNumberAttributeConstraintsOutput) ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolNumberAttributeConstraints) *UserPoolNumberAttributeConstraints {
		return &v
	}).(UserPoolNumberAttributeConstraintsPtrOutput)
}

// The maximum length of a number attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
func (o UserPoolNumberAttributeConstraintsOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolNumberAttributeConstraints) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// The minimum value of an attribute that is of the number data type.
func (o UserPoolNumberAttributeConstraintsOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolNumberAttributeConstraints) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

type UserPoolNumberAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolNumberAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolNumberAttributeConstraintsPtrOutput) ToUserPoolNumberAttributeConstraintsPtrOutput() UserPoolNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolNumberAttributeConstraintsPtrOutput) ToUserPoolNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolNumberAttributeConstraintsPtrOutput) Elem() UserPoolNumberAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolNumberAttributeConstraints) UserPoolNumberAttributeConstraints {
		if v != nil {
			return *v
		}
		var ret UserPoolNumberAttributeConstraints
		return ret
	}).(UserPoolNumberAttributeConstraintsOutput)
}

// The maximum length of a number attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
func (o UserPoolNumberAttributeConstraintsPtrOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolNumberAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxValue
	}).(pulumi.StringPtrOutput)
}

// The minimum value of an attribute that is of the number data type.
func (o UserPoolNumberAttributeConstraintsPtrOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolNumberAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MinValue
	}).(pulumi.StringPtrOutput)
}

type UserPoolPasswordPolicy struct {
	// The minimum length of the password in the policy that you have set. This value can't be less than 6.
	MinimumLength       *int `pulumi:"minimumLength"`
	PasswordHistorySize *int `pulumi:"passwordHistorySize"`
	// In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase *bool `pulumi:"requireLowercase"`
	// In the password policy that you have set, refers to whether you have required users to use at least one number in their password.
	RequireNumbers *bool `pulumi:"requireNumbers"`
	// In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password.
	RequireSymbols *bool `pulumi:"requireSymbols"`
	// In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase *bool `pulumi:"requireUppercase"`
	// The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password. Defaults to `7` . If you submit a value of `0` , Amazon Cognito treats it as a null value and sets `TemporaryPasswordValidityDays` to its default value.
	//
	// > When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.
	TemporaryPasswordValidityDays *int `pulumi:"temporaryPasswordValidityDays"`
}

// UserPoolPasswordPolicyInput is an input type that accepts UserPoolPasswordPolicyArgs and UserPoolPasswordPolicyOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyInput` via:
//
//	UserPoolPasswordPolicyArgs{...}
type UserPoolPasswordPolicyInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput
	ToUserPoolPasswordPolicyOutputWithContext(context.Context) UserPoolPasswordPolicyOutput
}

type UserPoolPasswordPolicyArgs struct {
	// The minimum length of the password in the policy that you have set. This value can't be less than 6.
	MinimumLength       pulumi.IntPtrInput `pulumi:"minimumLength"`
	PasswordHistorySize pulumi.IntPtrInput `pulumi:"passwordHistorySize"`
	// In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase pulumi.BoolPtrInput `pulumi:"requireLowercase"`
	// In the password policy that you have set, refers to whether you have required users to use at least one number in their password.
	RequireNumbers pulumi.BoolPtrInput `pulumi:"requireNumbers"`
	// In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password.
	RequireSymbols pulumi.BoolPtrInput `pulumi:"requireSymbols"`
	// In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase pulumi.BoolPtrInput `pulumi:"requireUppercase"`
	// The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password. Defaults to `7` . If you submit a value of `0` , Amazon Cognito treats it as a null value and sets `TemporaryPasswordValidityDays` to its default value.
	//
	// > When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.
	TemporaryPasswordValidityDays pulumi.IntPtrInput `pulumi:"temporaryPasswordValidityDays"`
}

func (UserPoolPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return i.ToUserPoolPasswordPolicyOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput)
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput).ToUserPoolPasswordPolicyPtrOutputWithContext(ctx)
}

// UserPoolPasswordPolicyPtrInput is an input type that accepts UserPoolPasswordPolicyArgs, UserPoolPasswordPolicyPtr and UserPoolPasswordPolicyPtrOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyPtrInput` via:
//
//	        UserPoolPasswordPolicyArgs{...}
//
//	or:
//
//	        nil
type UserPoolPasswordPolicyPtrInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput
	ToUserPoolPasswordPolicyPtrOutputWithContext(context.Context) UserPoolPasswordPolicyPtrOutput
}

type userPoolPasswordPolicyPtrType UserPoolPasswordPolicyArgs

func UserPoolPasswordPolicyPtr(v *UserPoolPasswordPolicyArgs) UserPoolPasswordPolicyPtrInput {
	return (*userPoolPasswordPolicyPtrType)(v)
}

func (*userPoolPasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyPtrOutput)
}

type UserPoolPasswordPolicyOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolPasswordPolicy) *UserPoolPasswordPolicy {
		return &v
	}).(UserPoolPasswordPolicyPtrOutput)
}

// The minimum length of the password in the policy that you have set. This value can't be less than 6.
func (o UserPoolPasswordPolicyOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.MinimumLength }).(pulumi.IntPtrOutput)
}

func (o UserPoolPasswordPolicyOutput) PasswordHistorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.PasswordHistorySize }).(pulumi.IntPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireLowercase }).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireUppercase }).(pulumi.BoolPtrOutput)
}

// The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password. Defaults to `7` . If you submit a value of `0` , Amazon Cognito treats it as a null value and sets `TemporaryPasswordValidityDays` to its default value.
//
// > When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.
func (o UserPoolPasswordPolicyOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.TemporaryPasswordValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolPasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) Elem() UserPoolPasswordPolicyOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) UserPoolPasswordPolicy {
		if v != nil {
			return *v
		}
		var ret UserPoolPasswordPolicy
		return ret
	}).(UserPoolPasswordPolicyOutput)
}

// The minimum length of the password in the policy that you have set. This value can't be less than 6.
func (o UserPoolPasswordPolicyPtrOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MinimumLength
	}).(pulumi.IntPtrOutput)
}

func (o UserPoolPasswordPolicyPtrOutput) PasswordHistorySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.PasswordHistorySize
	}).(pulumi.IntPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLowercase
	}).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumbers
	}).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSymbols
	}).(pulumi.BoolPtrOutput)
}

// In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUppercase
	}).(pulumi.BoolPtrOutput)
}

// The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password. Defaults to `7` . If you submit a value of `0` , Amazon Cognito treats it as a null value and sets `TemporaryPasswordValidityDays` to its default value.
//
// > When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.
func (o UserPoolPasswordPolicyPtrOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TemporaryPasswordValidityDays
	}).(pulumi.IntPtrOutput)
}

type UserPoolPolicies struct {
	// The password policy.
	PasswordPolicy *UserPoolPasswordPolicy `pulumi:"passwordPolicy"`
}

// UserPoolPoliciesInput is an input type that accepts UserPoolPoliciesArgs and UserPoolPoliciesOutput values.
// You can construct a concrete instance of `UserPoolPoliciesInput` via:
//
//	UserPoolPoliciesArgs{...}
type UserPoolPoliciesInput interface {
	pulumi.Input

	ToUserPoolPoliciesOutput() UserPoolPoliciesOutput
	ToUserPoolPoliciesOutputWithContext(context.Context) UserPoolPoliciesOutput
}

type UserPoolPoliciesArgs struct {
	// The password policy.
	PasswordPolicy UserPoolPasswordPolicyPtrInput `pulumi:"passwordPolicy"`
}

func (UserPoolPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPolicies)(nil)).Elem()
}

func (i UserPoolPoliciesArgs) ToUserPoolPoliciesOutput() UserPoolPoliciesOutput {
	return i.ToUserPoolPoliciesOutputWithContext(context.Background())
}

func (i UserPoolPoliciesArgs) ToUserPoolPoliciesOutputWithContext(ctx context.Context) UserPoolPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPoliciesOutput)
}

func (i UserPoolPoliciesArgs) ToUserPoolPoliciesPtrOutput() UserPoolPoliciesPtrOutput {
	return i.ToUserPoolPoliciesPtrOutputWithContext(context.Background())
}

func (i UserPoolPoliciesArgs) ToUserPoolPoliciesPtrOutputWithContext(ctx context.Context) UserPoolPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPoliciesOutput).ToUserPoolPoliciesPtrOutputWithContext(ctx)
}

// UserPoolPoliciesPtrInput is an input type that accepts UserPoolPoliciesArgs, UserPoolPoliciesPtr and UserPoolPoliciesPtrOutput values.
// You can construct a concrete instance of `UserPoolPoliciesPtrInput` via:
//
//	        UserPoolPoliciesArgs{...}
//
//	or:
//
//	        nil
type UserPoolPoliciesPtrInput interface {
	pulumi.Input

	ToUserPoolPoliciesPtrOutput() UserPoolPoliciesPtrOutput
	ToUserPoolPoliciesPtrOutputWithContext(context.Context) UserPoolPoliciesPtrOutput
}

type userPoolPoliciesPtrType UserPoolPoliciesArgs

func UserPoolPoliciesPtr(v *UserPoolPoliciesArgs) UserPoolPoliciesPtrInput {
	return (*userPoolPoliciesPtrType)(v)
}

func (*userPoolPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPolicies)(nil)).Elem()
}

func (i *userPoolPoliciesPtrType) ToUserPoolPoliciesPtrOutput() UserPoolPoliciesPtrOutput {
	return i.ToUserPoolPoliciesPtrOutputWithContext(context.Background())
}

func (i *userPoolPoliciesPtrType) ToUserPoolPoliciesPtrOutputWithContext(ctx context.Context) UserPoolPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPoliciesPtrOutput)
}

type UserPoolPoliciesOutput struct{ *pulumi.OutputState }

func (UserPoolPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPolicies)(nil)).Elem()
}

func (o UserPoolPoliciesOutput) ToUserPoolPoliciesOutput() UserPoolPoliciesOutput {
	return o
}

func (o UserPoolPoliciesOutput) ToUserPoolPoliciesOutputWithContext(ctx context.Context) UserPoolPoliciesOutput {
	return o
}

func (o UserPoolPoliciesOutput) ToUserPoolPoliciesPtrOutput() UserPoolPoliciesPtrOutput {
	return o.ToUserPoolPoliciesPtrOutputWithContext(context.Background())
}

func (o UserPoolPoliciesOutput) ToUserPoolPoliciesPtrOutputWithContext(ctx context.Context) UserPoolPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolPolicies) *UserPoolPolicies {
		return &v
	}).(UserPoolPoliciesPtrOutput)
}

// The password policy.
func (o UserPoolPoliciesOutput) PasswordPolicy() UserPoolPasswordPolicyPtrOutput {
	return o.ApplyT(func(v UserPoolPolicies) *UserPoolPasswordPolicy { return v.PasswordPolicy }).(UserPoolPasswordPolicyPtrOutput)
}

type UserPoolPoliciesPtrOutput struct{ *pulumi.OutputState }

func (UserPoolPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPolicies)(nil)).Elem()
}

func (o UserPoolPoliciesPtrOutput) ToUserPoolPoliciesPtrOutput() UserPoolPoliciesPtrOutput {
	return o
}

func (o UserPoolPoliciesPtrOutput) ToUserPoolPoliciesPtrOutputWithContext(ctx context.Context) UserPoolPoliciesPtrOutput {
	return o
}

func (o UserPoolPoliciesPtrOutput) Elem() UserPoolPoliciesOutput {
	return o.ApplyT(func(v *UserPoolPolicies) UserPoolPolicies {
		if v != nil {
			return *v
		}
		var ret UserPoolPolicies
		return ret
	}).(UserPoolPoliciesOutput)
}

// The password policy.
func (o UserPoolPoliciesPtrOutput) PasswordPolicy() UserPoolPasswordPolicyPtrOutput {
	return o.ApplyT(func(v *UserPoolPolicies) *UserPoolPasswordPolicy {
		if v == nil {
			return nil
		}
		return v.PasswordPolicy
	}).(UserPoolPasswordPolicyPtrOutput)
}

type UserPoolPreTokenGenerationConfig struct {
	// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
	//
	// This parameter and the `PreTokenGeneration` property of `LambdaConfig` have the same value. For new instances of pre token generation triggers, set `LambdaArn` .
	LambdaArn *string `pulumi:"lambdaArn"`
	// The user pool trigger version of the request that Amazon Cognito sends to your Lambda function. Higher-numbered versions add fields that support new features.
	LambdaVersion *string `pulumi:"lambdaVersion"`
}

// UserPoolPreTokenGenerationConfigInput is an input type that accepts UserPoolPreTokenGenerationConfigArgs and UserPoolPreTokenGenerationConfigOutput values.
// You can construct a concrete instance of `UserPoolPreTokenGenerationConfigInput` via:
//
//	UserPoolPreTokenGenerationConfigArgs{...}
type UserPoolPreTokenGenerationConfigInput interface {
	pulumi.Input

	ToUserPoolPreTokenGenerationConfigOutput() UserPoolPreTokenGenerationConfigOutput
	ToUserPoolPreTokenGenerationConfigOutputWithContext(context.Context) UserPoolPreTokenGenerationConfigOutput
}

type UserPoolPreTokenGenerationConfigArgs struct {
	// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
	//
	// This parameter and the `PreTokenGeneration` property of `LambdaConfig` have the same value. For new instances of pre token generation triggers, set `LambdaArn` .
	LambdaArn pulumi.StringPtrInput `pulumi:"lambdaArn"`
	// The user pool trigger version of the request that Amazon Cognito sends to your Lambda function. Higher-numbered versions add fields that support new features.
	LambdaVersion pulumi.StringPtrInput `pulumi:"lambdaVersion"`
}

func (UserPoolPreTokenGenerationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPreTokenGenerationConfig)(nil)).Elem()
}

func (i UserPoolPreTokenGenerationConfigArgs) ToUserPoolPreTokenGenerationConfigOutput() UserPoolPreTokenGenerationConfigOutput {
	return i.ToUserPoolPreTokenGenerationConfigOutputWithContext(context.Background())
}

func (i UserPoolPreTokenGenerationConfigArgs) ToUserPoolPreTokenGenerationConfigOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPreTokenGenerationConfigOutput)
}

func (i UserPoolPreTokenGenerationConfigArgs) ToUserPoolPreTokenGenerationConfigPtrOutput() UserPoolPreTokenGenerationConfigPtrOutput {
	return i.ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolPreTokenGenerationConfigArgs) ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPreTokenGenerationConfigOutput).ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(ctx)
}

// UserPoolPreTokenGenerationConfigPtrInput is an input type that accepts UserPoolPreTokenGenerationConfigArgs, UserPoolPreTokenGenerationConfigPtr and UserPoolPreTokenGenerationConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolPreTokenGenerationConfigPtrInput` via:
//
//	        UserPoolPreTokenGenerationConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolPreTokenGenerationConfigPtrInput interface {
	pulumi.Input

	ToUserPoolPreTokenGenerationConfigPtrOutput() UserPoolPreTokenGenerationConfigPtrOutput
	ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(context.Context) UserPoolPreTokenGenerationConfigPtrOutput
}

type userPoolPreTokenGenerationConfigPtrType UserPoolPreTokenGenerationConfigArgs

func UserPoolPreTokenGenerationConfigPtr(v *UserPoolPreTokenGenerationConfigArgs) UserPoolPreTokenGenerationConfigPtrInput {
	return (*userPoolPreTokenGenerationConfigPtrType)(v)
}

func (*userPoolPreTokenGenerationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPreTokenGenerationConfig)(nil)).Elem()
}

func (i *userPoolPreTokenGenerationConfigPtrType) ToUserPoolPreTokenGenerationConfigPtrOutput() UserPoolPreTokenGenerationConfigPtrOutput {
	return i.ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolPreTokenGenerationConfigPtrType) ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPreTokenGenerationConfigPtrOutput)
}

type UserPoolPreTokenGenerationConfigOutput struct{ *pulumi.OutputState }

func (UserPoolPreTokenGenerationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPreTokenGenerationConfig)(nil)).Elem()
}

func (o UserPoolPreTokenGenerationConfigOutput) ToUserPoolPreTokenGenerationConfigOutput() UserPoolPreTokenGenerationConfigOutput {
	return o
}

func (o UserPoolPreTokenGenerationConfigOutput) ToUserPoolPreTokenGenerationConfigOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigOutput {
	return o
}

func (o UserPoolPreTokenGenerationConfigOutput) ToUserPoolPreTokenGenerationConfigPtrOutput() UserPoolPreTokenGenerationConfigPtrOutput {
	return o.ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolPreTokenGenerationConfigOutput) ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolPreTokenGenerationConfig) *UserPoolPreTokenGenerationConfig {
		return &v
	}).(UserPoolPreTokenGenerationConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
//
// This parameter and the `PreTokenGeneration` property of `LambdaConfig` have the same value. For new instances of pre token generation triggers, set `LambdaArn` .
func (o UserPoolPreTokenGenerationConfigOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolPreTokenGenerationConfig) *string { return v.LambdaArn }).(pulumi.StringPtrOutput)
}

// The user pool trigger version of the request that Amazon Cognito sends to your Lambda function. Higher-numbered versions add fields that support new features.
func (o UserPoolPreTokenGenerationConfigOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolPreTokenGenerationConfig) *string { return v.LambdaVersion }).(pulumi.StringPtrOutput)
}

type UserPoolPreTokenGenerationConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolPreTokenGenerationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPreTokenGenerationConfig)(nil)).Elem()
}

func (o UserPoolPreTokenGenerationConfigPtrOutput) ToUserPoolPreTokenGenerationConfigPtrOutput() UserPoolPreTokenGenerationConfigPtrOutput {
	return o
}

func (o UserPoolPreTokenGenerationConfigPtrOutput) ToUserPoolPreTokenGenerationConfigPtrOutputWithContext(ctx context.Context) UserPoolPreTokenGenerationConfigPtrOutput {
	return o
}

func (o UserPoolPreTokenGenerationConfigPtrOutput) Elem() UserPoolPreTokenGenerationConfigOutput {
	return o.ApplyT(func(v *UserPoolPreTokenGenerationConfig) UserPoolPreTokenGenerationConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolPreTokenGenerationConfig
		return ret
	}).(UserPoolPreTokenGenerationConfigOutput)
}

// The Amazon Resource Name (ARN) of the function that you want to assign to your Lambda trigger.
//
// This parameter and the `PreTokenGeneration` property of `LambdaConfig` have the same value. For new instances of pre token generation triggers, set `LambdaArn` .
func (o UserPoolPreTokenGenerationConfigPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolPreTokenGenerationConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The user pool trigger version of the request that Amazon Cognito sends to your Lambda function. Higher-numbered versions add fields that support new features.
func (o UserPoolPreTokenGenerationConfigPtrOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolPreTokenGenerationConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaVersion
	}).(pulumi.StringPtrOutput)
}

type UserPoolRecoveryOption struct {
	// Specifies the recovery method for a user.
	Name *string `pulumi:"name"`
	// A positive integer specifying priority of a method with 1 being the highest priority.
	Priority *int `pulumi:"priority"`
}

// UserPoolRecoveryOptionInput is an input type that accepts UserPoolRecoveryOptionArgs and UserPoolRecoveryOptionOutput values.
// You can construct a concrete instance of `UserPoolRecoveryOptionInput` via:
//
//	UserPoolRecoveryOptionArgs{...}
type UserPoolRecoveryOptionInput interface {
	pulumi.Input

	ToUserPoolRecoveryOptionOutput() UserPoolRecoveryOptionOutput
	ToUserPoolRecoveryOptionOutputWithContext(context.Context) UserPoolRecoveryOptionOutput
}

type UserPoolRecoveryOptionArgs struct {
	// Specifies the recovery method for a user.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A positive integer specifying priority of a method with 1 being the highest priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (UserPoolRecoveryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRecoveryOption)(nil)).Elem()
}

func (i UserPoolRecoveryOptionArgs) ToUserPoolRecoveryOptionOutput() UserPoolRecoveryOptionOutput {
	return i.ToUserPoolRecoveryOptionOutputWithContext(context.Background())
}

func (i UserPoolRecoveryOptionArgs) ToUserPoolRecoveryOptionOutputWithContext(ctx context.Context) UserPoolRecoveryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRecoveryOptionOutput)
}

// UserPoolRecoveryOptionArrayInput is an input type that accepts UserPoolRecoveryOptionArray and UserPoolRecoveryOptionArrayOutput values.
// You can construct a concrete instance of `UserPoolRecoveryOptionArrayInput` via:
//
//	UserPoolRecoveryOptionArray{ UserPoolRecoveryOptionArgs{...} }
type UserPoolRecoveryOptionArrayInput interface {
	pulumi.Input

	ToUserPoolRecoveryOptionArrayOutput() UserPoolRecoveryOptionArrayOutput
	ToUserPoolRecoveryOptionArrayOutputWithContext(context.Context) UserPoolRecoveryOptionArrayOutput
}

type UserPoolRecoveryOptionArray []UserPoolRecoveryOptionInput

func (UserPoolRecoveryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolRecoveryOption)(nil)).Elem()
}

func (i UserPoolRecoveryOptionArray) ToUserPoolRecoveryOptionArrayOutput() UserPoolRecoveryOptionArrayOutput {
	return i.ToUserPoolRecoveryOptionArrayOutputWithContext(context.Background())
}

func (i UserPoolRecoveryOptionArray) ToUserPoolRecoveryOptionArrayOutputWithContext(ctx context.Context) UserPoolRecoveryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRecoveryOptionArrayOutput)
}

type UserPoolRecoveryOptionOutput struct{ *pulumi.OutputState }

func (UserPoolRecoveryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRecoveryOption)(nil)).Elem()
}

func (o UserPoolRecoveryOptionOutput) ToUserPoolRecoveryOptionOutput() UserPoolRecoveryOptionOutput {
	return o
}

func (o UserPoolRecoveryOptionOutput) ToUserPoolRecoveryOptionOutputWithContext(ctx context.Context) UserPoolRecoveryOptionOutput {
	return o
}

// Specifies the recovery method for a user.
func (o UserPoolRecoveryOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolRecoveryOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A positive integer specifying priority of a method with 1 being the highest priority.
func (o UserPoolRecoveryOptionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolRecoveryOption) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type UserPoolRecoveryOptionArrayOutput struct{ *pulumi.OutputState }

func (UserPoolRecoveryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolRecoveryOption)(nil)).Elem()
}

func (o UserPoolRecoveryOptionArrayOutput) ToUserPoolRecoveryOptionArrayOutput() UserPoolRecoveryOptionArrayOutput {
	return o
}

func (o UserPoolRecoveryOptionArrayOutput) ToUserPoolRecoveryOptionArrayOutputWithContext(ctx context.Context) UserPoolRecoveryOptionArrayOutput {
	return o
}

func (o UserPoolRecoveryOptionArrayOutput) Index(i pulumi.IntInput) UserPoolRecoveryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolRecoveryOption {
		return vs[0].([]UserPoolRecoveryOption)[vs[1].(int)]
	}).(UserPoolRecoveryOptionOutput)
}

type UserPoolResourceServerResourceServerScopeType struct {
	// A description of the scope.
	ScopeDescription string `pulumi:"scopeDescription"`
	// The name of the scope.
	ScopeName string `pulumi:"scopeName"`
}

// UserPoolResourceServerResourceServerScopeTypeInput is an input type that accepts UserPoolResourceServerResourceServerScopeTypeArgs and UserPoolResourceServerResourceServerScopeTypeOutput values.
// You can construct a concrete instance of `UserPoolResourceServerResourceServerScopeTypeInput` via:
//
//	UserPoolResourceServerResourceServerScopeTypeArgs{...}
type UserPoolResourceServerResourceServerScopeTypeInput interface {
	pulumi.Input

	ToUserPoolResourceServerResourceServerScopeTypeOutput() UserPoolResourceServerResourceServerScopeTypeOutput
	ToUserPoolResourceServerResourceServerScopeTypeOutputWithContext(context.Context) UserPoolResourceServerResourceServerScopeTypeOutput
}

type UserPoolResourceServerResourceServerScopeTypeArgs struct {
	// A description of the scope.
	ScopeDescription pulumi.StringInput `pulumi:"scopeDescription"`
	// The name of the scope.
	ScopeName pulumi.StringInput `pulumi:"scopeName"`
}

func (UserPoolResourceServerResourceServerScopeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolResourceServerResourceServerScopeType)(nil)).Elem()
}

func (i UserPoolResourceServerResourceServerScopeTypeArgs) ToUserPoolResourceServerResourceServerScopeTypeOutput() UserPoolResourceServerResourceServerScopeTypeOutput {
	return i.ToUserPoolResourceServerResourceServerScopeTypeOutputWithContext(context.Background())
}

func (i UserPoolResourceServerResourceServerScopeTypeArgs) ToUserPoolResourceServerResourceServerScopeTypeOutputWithContext(ctx context.Context) UserPoolResourceServerResourceServerScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolResourceServerResourceServerScopeTypeOutput)
}

// UserPoolResourceServerResourceServerScopeTypeArrayInput is an input type that accepts UserPoolResourceServerResourceServerScopeTypeArray and UserPoolResourceServerResourceServerScopeTypeArrayOutput values.
// You can construct a concrete instance of `UserPoolResourceServerResourceServerScopeTypeArrayInput` via:
//
//	UserPoolResourceServerResourceServerScopeTypeArray{ UserPoolResourceServerResourceServerScopeTypeArgs{...} }
type UserPoolResourceServerResourceServerScopeTypeArrayInput interface {
	pulumi.Input

	ToUserPoolResourceServerResourceServerScopeTypeArrayOutput() UserPoolResourceServerResourceServerScopeTypeArrayOutput
	ToUserPoolResourceServerResourceServerScopeTypeArrayOutputWithContext(context.Context) UserPoolResourceServerResourceServerScopeTypeArrayOutput
}

type UserPoolResourceServerResourceServerScopeTypeArray []UserPoolResourceServerResourceServerScopeTypeInput

func (UserPoolResourceServerResourceServerScopeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolResourceServerResourceServerScopeType)(nil)).Elem()
}

func (i UserPoolResourceServerResourceServerScopeTypeArray) ToUserPoolResourceServerResourceServerScopeTypeArrayOutput() UserPoolResourceServerResourceServerScopeTypeArrayOutput {
	return i.ToUserPoolResourceServerResourceServerScopeTypeArrayOutputWithContext(context.Background())
}

func (i UserPoolResourceServerResourceServerScopeTypeArray) ToUserPoolResourceServerResourceServerScopeTypeArrayOutputWithContext(ctx context.Context) UserPoolResourceServerResourceServerScopeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolResourceServerResourceServerScopeTypeArrayOutput)
}

type UserPoolResourceServerResourceServerScopeTypeOutput struct{ *pulumi.OutputState }

func (UserPoolResourceServerResourceServerScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolResourceServerResourceServerScopeType)(nil)).Elem()
}

func (o UserPoolResourceServerResourceServerScopeTypeOutput) ToUserPoolResourceServerResourceServerScopeTypeOutput() UserPoolResourceServerResourceServerScopeTypeOutput {
	return o
}

func (o UserPoolResourceServerResourceServerScopeTypeOutput) ToUserPoolResourceServerResourceServerScopeTypeOutputWithContext(ctx context.Context) UserPoolResourceServerResourceServerScopeTypeOutput {
	return o
}

// A description of the scope.
func (o UserPoolResourceServerResourceServerScopeTypeOutput) ScopeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolResourceServerResourceServerScopeType) string { return v.ScopeDescription }).(pulumi.StringOutput)
}

// The name of the scope.
func (o UserPoolResourceServerResourceServerScopeTypeOutput) ScopeName() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolResourceServerResourceServerScopeType) string { return v.ScopeName }).(pulumi.StringOutput)
}

type UserPoolResourceServerResourceServerScopeTypeArrayOutput struct{ *pulumi.OutputState }

func (UserPoolResourceServerResourceServerScopeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolResourceServerResourceServerScopeType)(nil)).Elem()
}

func (o UserPoolResourceServerResourceServerScopeTypeArrayOutput) ToUserPoolResourceServerResourceServerScopeTypeArrayOutput() UserPoolResourceServerResourceServerScopeTypeArrayOutput {
	return o
}

func (o UserPoolResourceServerResourceServerScopeTypeArrayOutput) ToUserPoolResourceServerResourceServerScopeTypeArrayOutputWithContext(ctx context.Context) UserPoolResourceServerResourceServerScopeTypeArrayOutput {
	return o
}

func (o UserPoolResourceServerResourceServerScopeTypeArrayOutput) Index(i pulumi.IntInput) UserPoolResourceServerResourceServerScopeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolResourceServerResourceServerScopeType {
		return vs[0].([]UserPoolResourceServerResourceServerScopeType)[vs[1].(int)]
	}).(UserPoolResourceServerResourceServerScopeTypeOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionType struct {
	// The action to take in response to the account takeover action. Valid values are as follows:
	//
	// - `BLOCK` Choosing this action will block the request.
	// - `MFA_IF_CONFIGURED` Present an MFA challenge if user has configured it, else allow the request.
	// - `MFA_REQUIRED` Present an MFA challenge if user has configured it, else block the request.
	// - `NO_ACTION` Allow the user to sign in.
	EventAction string `pulumi:"eventAction"`
	// Flag specifying whether to send a notification.
	Notify bool `pulumi:"notify"`
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs and UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs{...}
type UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs struct {
	// The action to take in response to the account takeover action. Valid values are as follows:
	//
	// - `BLOCK` Choosing this action will block the request.
	// - `MFA_IF_CONFIGURED` Present an MFA challenge if user has configured it, else allow the request.
	// - `MFA_REQUIRED` Present an MFA challenge if user has configured it, else block the request.
	// - `NO_ACTION` Allow the user to sign in.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
	// Flag specifying whether to send a notification.
	Notify pulumi.BoolInput `pulumi:"notify"`
}

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput).ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs, UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtr and UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput
}

type userPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrType UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs

func UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtr(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverActionType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

// The action to take in response to the account takeover action. Valid values are as follows:
//
// - `BLOCK` Choosing this action will block the request.
// - `MFA_IF_CONFIGURED` Present an MFA challenge if user has configured it, else allow the request.
// - `MFA_REQUIRED` Present an MFA challenge if user has configured it, else block the request.
// - `NO_ACTION` Allow the user to sign in.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) string { return v.EventAction }).(pulumi.StringOutput)
}

// Flag specifying whether to send a notification.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput) Notify() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) bool { return v.Notify }).(pulumi.BoolOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverActionType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentAccountTakeoverActionType
		return ret
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput)
}

// The action to take in response to the account takeover action. Valid values are as follows:
//
// - `BLOCK` Choosing this action will block the request.
// - `MFA_IF_CONFIGURED` Present an MFA challenge if user has configured it, else allow the request.
// - `MFA_REQUIRED` Present an MFA challenge if user has configured it, else block the request.
// - `NO_ACTION` Allow the user to sign in.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

// Flag specifying whether to send a notification.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput) Notify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType) *bool {
		if v == nil {
			return nil
		}
		return &v.Notify
	}).(pulumi.BoolPtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType struct {
	// Action to take for a high risk.
	HighAction *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType `pulumi:"highAction"`
	// Action to take for a low risk.
	LowAction *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType `pulumi:"lowAction"`
	// Action to take for a medium risk.
	MediumAction *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType `pulumi:"mediumAction"`
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs and UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs{...}
type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs struct {
	// Action to take for a high risk.
	HighAction UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput `pulumi:"highAction"`
	// Action to take for a low risk.
	LowAction UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput `pulumi:"lowAction"`
	// Action to take for a medium risk.
	MediumAction UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput `pulumi:"mediumAction"`
}

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput).ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs, UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtr and UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput
}

type userPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrType UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs

func UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtr(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput)
}

// Action to take for a high risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) HighAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		return v.HighAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

// Action to take for a low risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) LowAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		return v.LowAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

// Action to take for a medium risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput) MediumAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		return v.MediumAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType
		return ret
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput)
}

// Action to take for a high risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) HighAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		if v == nil {
			return nil
		}
		return v.HighAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

// Action to take for a low risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) LowAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		if v == nil {
			return nil
		}
		return v.LowAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

// Action to take for a medium risk.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput) MediumAction() UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionType {
		if v == nil {
			return nil
		}
		return v.MediumAction
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType struct {
	// Account takeover risk configuration actions.
	Actions UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType `pulumi:"actions"`
	// The notify configuration used to construct email notifications.
	NotifyConfiguration *UserPoolRiskConfigurationAttachmentNotifyConfigurationType `pulumi:"notifyConfiguration"`
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs and UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs{...}
type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs struct {
	// Account takeover risk configuration actions.
	Actions UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeInput `pulumi:"actions"`
	// The notify configuration used to construct email notifications.
	NotifyConfiguration UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput `pulumi:"notifyConfiguration"`
}

func (UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput).ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs, UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtr and UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput
}

type userPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrType UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs

func UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtr(v *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput)
}

// Account takeover risk configuration actions.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) Actions() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType {
		return v.Actions
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput)
}

// The notify configuration used to construct email notifications.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput) NotifyConfiguration() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyConfigurationType {
		return v.NotifyConfiguration
	}).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType
		return ret
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput)
}

// Account takeover risk configuration actions.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) Actions() UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) *UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType {
		if v == nil {
			return nil
		}
		return &v.Actions
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput)
}

// The notify configuration used to construct email notifications.
func (o UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput) NotifyConfiguration() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyConfigurationType {
		if v == nil {
			return nil
		}
		return v.NotifyConfiguration
	}).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType struct {
	// The event action.
	EventAction string `pulumi:"eventAction"`
}

// UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs and UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs{...}
type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput
	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs struct {
	// The event action.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
}

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput).ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs, UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtr and UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput
}

type userPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrType UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs

func UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtr(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrType) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrType) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType) *UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput)
}

// The event action.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType) string {
		return v.EventAction
	}).(pulumi.StringOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType
		return ret
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput)
}

// The event action.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType struct {
	// The compromised credentials risk configuration actions.
	Actions UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType `pulumi:"actions"`
	// Perform the action for these events. The default is to perform all events if no event filter is specified.
	EventFilter []string `pulumi:"eventFilter"`
}

// UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs and UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs{...}
type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput
	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs struct {
	// The compromised credentials risk configuration actions.
	Actions UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeInput `pulumi:"actions"`
	// Perform the action for these events. The default is to perform all events if no event filter is specified.
	EventFilter pulumi.StringArrayInput `pulumi:"eventFilter"`
}

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput).ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs, UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtr and UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput
}

type userPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrType UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs

func UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtr(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput)
}

// The compromised credentials risk configuration actions.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) Actions() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType {
		return v.Actions
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput)
}

// Perform the action for these events. The default is to perform all events if no event filter is specified.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput) EventFilter() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) []string {
		return v.EventFilter
	}).(pulumi.StringArrayOutput)
}

type UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType
		return ret
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput)
}

// The compromised credentials risk configuration actions.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) Actions() UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) *UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType {
		if v == nil {
			return nil
		}
		return &v.Actions
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput)
}

// Perform the action for these events. The default is to perform all events if no event filter is specified.
func (o UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput) EventFilter() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType) []string {
		if v == nil {
			return nil
		}
		return v.EventFilter
	}).(pulumi.StringArrayOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyConfigurationType struct {
	// Email template used when a detected risk event is blocked.
	BlockEmail *UserPoolRiskConfigurationAttachmentNotifyEmailType `pulumi:"blockEmail"`
	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	From *string `pulumi:"from"`
	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk.
	MfaEmail *UserPoolRiskConfigurationAttachmentNotifyEmailType `pulumi:"mfaEmail"`
	// The email template used when a detected risk event is allowed.
	NoActionEmail *UserPoolRiskConfigurationAttachmentNotifyEmailType `pulumi:"noActionEmail"`
	// The destination to which the receiver of an email should reply to.
	ReplyTo *string `pulumi:"replyTo"`
	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the `From` parameter.
	SourceArn string `pulumi:"sourceArn"`
}

// UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs and UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs{...}
type UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput
	ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput
}

type UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs struct {
	// Email template used when a detected risk event is blocked.
	BlockEmail UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput `pulumi:"blockEmail"`
	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	From pulumi.StringPtrInput `pulumi:"from"`
	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk.
	MfaEmail UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput `pulumi:"mfaEmail"`
	// The email template used when a detected risk event is allowed.
	NoActionEmail UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput `pulumi:"noActionEmail"`
	// The destination to which the receiver of an email should reply to.
	ReplyTo pulumi.StringPtrInput `pulumi:"replyTo"`
	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the `From` parameter.
	SourceArn pulumi.StringInput `pulumi:"sourceArn"`
}

func (UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyConfigurationType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput).ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs, UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtr and UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput
}

type userPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrType UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs

func UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtr(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentNotifyConfigurationType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyConfigurationType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput)
}

// Email template used when a detected risk event is blocked.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) BlockEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		return v.BlockEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) MfaEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		return v.MfaEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The email template used when a detected risk event is allowed.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) NoActionEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		return v.NoActionEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The destination to which the receiver of an email should reply to.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) ReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *string { return v.ReplyTo }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the `From` parameter.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput) SourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyConfigurationType) string { return v.SourceArn }).(pulumi.StringOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentNotifyConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) UserPoolRiskConfigurationAttachmentNotifyConfigurationType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentNotifyConfigurationType
		return ret
	}).(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput)
}

// Email template used when a detected risk event is blocked.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) BlockEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		if v == nil {
			return nil
		}
		return v.BlockEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) MfaEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		if v == nil {
			return nil
		}
		return v.MfaEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The email template used when a detected risk event is allowed.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) NoActionEmail() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		if v == nil {
			return nil
		}
		return v.NoActionEmail
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The destination to which the receiver of an email should reply to.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) ReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *string {
		if v == nil {
			return nil
		}
		return v.ReplyTo
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the `From` parameter.
func (o UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyConfigurationType) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArn
	}).(pulumi.StringPtrOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyEmailType struct {
	// The email HTML body.
	HtmlBody *string `pulumi:"htmlBody"`
	// The email subject.
	Subject string `pulumi:"subject"`
	// The email text body.
	TextBody *string `pulumi:"textBody"`
}

// UserPoolRiskConfigurationAttachmentNotifyEmailTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs and UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentNotifyEmailTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs{...}
type UserPoolRiskConfigurationAttachmentNotifyEmailTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput
	ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput
}

type UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs struct {
	// The email HTML body.
	HtmlBody pulumi.StringPtrInput `pulumi:"htmlBody"`
	// The email subject.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The email text body.
	TextBody pulumi.StringPtrInput `pulumi:"textBody"`
}

func (UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyEmailType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput).ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs, UserPoolRiskConfigurationAttachmentNotifyEmailTypePtr and UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput
}

type userPoolRiskConfigurationAttachmentNotifyEmailTypePtrType UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs

func UserPoolRiskConfigurationAttachmentNotifyEmailTypePtr(v *UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentNotifyEmailTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentNotifyEmailTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentNotifyEmailType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentNotifyEmailTypePtrType) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentNotifyEmailTypePtrType) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyEmailType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentNotifyEmailType) *UserPoolRiskConfigurationAttachmentNotifyEmailType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput)
}

// The email HTML body.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) HtmlBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyEmailType) *string { return v.HtmlBody }).(pulumi.StringPtrOutput)
}

// The email subject.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyEmailType) string { return v.Subject }).(pulumi.StringOutput)
}

// The email text body.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput) TextBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentNotifyEmailType) *string { return v.TextBody }).(pulumi.StringPtrOutput)
}

type UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentNotifyEmailType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput() UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) ToUserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyEmailType) UserPoolRiskConfigurationAttachmentNotifyEmailType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentNotifyEmailType
		return ret
	}).(UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput)
}

// The email HTML body.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) HtmlBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyEmailType) *string {
		if v == nil {
			return nil
		}
		return v.HtmlBody
	}).(pulumi.StringPtrOutput)
}

// The email subject.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyEmailType) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The email text body.
func (o UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput) TextBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentNotifyEmailType) *string {
		if v == nil {
			return nil
		}
		return v.TextBody
	}).(pulumi.StringPtrOutput)
}

type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType struct {
	// Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	BlockedIpRangeList []string `pulumi:"blockedIpRangeList"`
	// Risk detection isn't performed on the IP addresses in this range list. The IP range is in CIDR notation.
	SkippedIpRangeList []string `pulumi:"skippedIpRangeList"`
}

// UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeInput is an input type that accepts UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs and UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeInput` via:
//
//	UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs{...}
type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput
	ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput
}

type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs struct {
	// Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	BlockedIpRangeList pulumi.StringArrayInput `pulumi:"blockedIpRangeList"`
	// Risk detection isn't performed on the IP addresses in this range list. The IP range is in CIDR notation.
	SkippedIpRangeList pulumi.StringArrayInput `pulumi:"skippedIpRangeList"`
}

func (UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType)(nil)).Elem()
}

func (i UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput {
	return i.ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput)
}

func (i UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(context.Background())
}

func (i UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput).ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(ctx)
}

// UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrInput is an input type that accepts UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs, UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtr and UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput values.
// You can construct a concrete instance of `UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrInput` via:
//
//	        UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs{...}
//
//	or:
//
//	        nil
type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrInput interface {
	pulumi.Input

	ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput
	ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput
}

type userPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrType UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs

func UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtr(v *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrInput {
	return (*userPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrType)(v)
}

func (*userPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType)(nil)).Elem()
}

func (i *userPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return i.ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *userPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrType) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput)
}

type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return o.ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(context.Background())
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType {
		return &v
	}).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput)
}

// Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) BlockedIpRangeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) []string {
		return v.BlockedIpRangeList
	}).(pulumi.StringArrayOutput)
}

// Risk detection isn't performed on the IP addresses in this range list. The IP range is in CIDR notation.
func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput) SkippedIpRangeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) []string {
		return v.SkippedIpRangeList
	}).(pulumi.StringArrayOutput)
}

type UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType)(nil)).Elem()
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) ToUserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutputWithContext(ctx context.Context) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return o
}

func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) Elem() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType {
		if v != nil {
			return *v
		}
		var ret UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType
		return ret
	}).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput)
}

// Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) BlockedIpRangeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) []string {
		if v == nil {
			return nil
		}
		return v.BlockedIpRangeList
	}).(pulumi.StringArrayOutput)
}

// Risk detection isn't performed on the IP addresses in this range list. The IP range is in CIDR notation.
func (o UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput) SkippedIpRangeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType) []string {
		if v == nil {
			return nil
		}
		return v.SkippedIpRangeList
	}).(pulumi.StringArrayOutput)
}

type UserPoolSchemaAttribute struct {
	// The data format of the values for your attribute. When you choose an `AttributeDataType` , Amazon Cognito validates the input against the data type. A custom attribute value in your user's ID token is always a string, for example `"custom:isMember" : "true"` or `"custom:YearsAsMember" : "12"` .
	AttributeDataType *string `pulumi:"attributeDataType"`
	// > We recommend that you use [WriteAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes) in the user pool client to control how attributes can be mutated for new use cases instead of using `DeveloperOnlyAttribute` .
	//
	// Specifies whether the attribute type is developer only. This attribute can only be modified by an administrator. Users will not be able to modify this attribute using their access token.
	DeveloperOnlyAttribute *bool `pulumi:"developerOnlyAttribute"`
	// Specifies whether the value of the attribute can be changed.
	//
	// Any user pool attribute whose value you map from an IdP attribute must be mutable, with a parameter value of `true` . Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute. For more information, see [Specifying Identity Provider Attribute Mappings for Your User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .
	Mutable *bool `pulumi:"mutable"`
	// The name of your user pool attribute. When you create or update a user pool, adding a schema attribute creates a custom or developer-only attribute. When you add an attribute with a `Name` value of `MyAttribute` , Amazon Cognito creates the custom attribute `custom:MyAttribute` . When `DeveloperOnlyAttribute` is `true` , Amazon Cognito creates your attribute as `dev:MyAttribute` . In an operation that describes a user pool, Amazon Cognito returns this value as `value` for standard attributes, `custom:value` for custom attributes, and `dev:value` for developer-only attributes..
	Name *string `pulumi:"name"`
	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints *UserPoolNumberAttributeConstraints `pulumi:"numberAttributeConstraints"`
	// Specifies whether a user pool attribute is required. If the attribute is required and the user doesn't provide a value, registration or sign-in will fail.
	Required *bool `pulumi:"required"`
	// Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints *UserPoolStringAttributeConstraints `pulumi:"stringAttributeConstraints"`
}

// UserPoolSchemaAttributeInput is an input type that accepts UserPoolSchemaAttributeArgs and UserPoolSchemaAttributeOutput values.
// You can construct a concrete instance of `UserPoolSchemaAttributeInput` via:
//
//	UserPoolSchemaAttributeArgs{...}
type UserPoolSchemaAttributeInput interface {
	pulumi.Input

	ToUserPoolSchemaAttributeOutput() UserPoolSchemaAttributeOutput
	ToUserPoolSchemaAttributeOutputWithContext(context.Context) UserPoolSchemaAttributeOutput
}

type UserPoolSchemaAttributeArgs struct {
	// The data format of the values for your attribute. When you choose an `AttributeDataType` , Amazon Cognito validates the input against the data type. A custom attribute value in your user's ID token is always a string, for example `"custom:isMember" : "true"` or `"custom:YearsAsMember" : "12"` .
	AttributeDataType pulumi.StringPtrInput `pulumi:"attributeDataType"`
	// > We recommend that you use [WriteAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes) in the user pool client to control how attributes can be mutated for new use cases instead of using `DeveloperOnlyAttribute` .
	//
	// Specifies whether the attribute type is developer only. This attribute can only be modified by an administrator. Users will not be able to modify this attribute using their access token.
	DeveloperOnlyAttribute pulumi.BoolPtrInput `pulumi:"developerOnlyAttribute"`
	// Specifies whether the value of the attribute can be changed.
	//
	// Any user pool attribute whose value you map from an IdP attribute must be mutable, with a parameter value of `true` . Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute. For more information, see [Specifying Identity Provider Attribute Mappings for Your User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .
	Mutable pulumi.BoolPtrInput `pulumi:"mutable"`
	// The name of your user pool attribute. When you create or update a user pool, adding a schema attribute creates a custom or developer-only attribute. When you add an attribute with a `Name` value of `MyAttribute` , Amazon Cognito creates the custom attribute `custom:MyAttribute` . When `DeveloperOnlyAttribute` is `true` , Amazon Cognito creates your attribute as `dev:MyAttribute` . In an operation that describes a user pool, Amazon Cognito returns this value as `value` for standard attributes, `custom:value` for custom attributes, and `dev:value` for developer-only attributes..
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints UserPoolNumberAttributeConstraintsPtrInput `pulumi:"numberAttributeConstraints"`
	// Specifies whether a user pool attribute is required. If the attribute is required and the user doesn't provide a value, registration or sign-in will fail.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints UserPoolStringAttributeConstraintsPtrInput `pulumi:"stringAttributeConstraints"`
}

func (UserPoolSchemaAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaAttribute)(nil)).Elem()
}

func (i UserPoolSchemaAttributeArgs) ToUserPoolSchemaAttributeOutput() UserPoolSchemaAttributeOutput {
	return i.ToUserPoolSchemaAttributeOutputWithContext(context.Background())
}

func (i UserPoolSchemaAttributeArgs) ToUserPoolSchemaAttributeOutputWithContext(ctx context.Context) UserPoolSchemaAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaAttributeOutput)
}

// UserPoolSchemaAttributeArrayInput is an input type that accepts UserPoolSchemaAttributeArray and UserPoolSchemaAttributeArrayOutput values.
// You can construct a concrete instance of `UserPoolSchemaAttributeArrayInput` via:
//
//	UserPoolSchemaAttributeArray{ UserPoolSchemaAttributeArgs{...} }
type UserPoolSchemaAttributeArrayInput interface {
	pulumi.Input

	ToUserPoolSchemaAttributeArrayOutput() UserPoolSchemaAttributeArrayOutput
	ToUserPoolSchemaAttributeArrayOutputWithContext(context.Context) UserPoolSchemaAttributeArrayOutput
}

type UserPoolSchemaAttributeArray []UserPoolSchemaAttributeInput

func (UserPoolSchemaAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchemaAttribute)(nil)).Elem()
}

func (i UserPoolSchemaAttributeArray) ToUserPoolSchemaAttributeArrayOutput() UserPoolSchemaAttributeArrayOutput {
	return i.ToUserPoolSchemaAttributeArrayOutputWithContext(context.Background())
}

func (i UserPoolSchemaAttributeArray) ToUserPoolSchemaAttributeArrayOutputWithContext(ctx context.Context) UserPoolSchemaAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaAttributeArrayOutput)
}

type UserPoolSchemaAttributeOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaAttribute)(nil)).Elem()
}

func (o UserPoolSchemaAttributeOutput) ToUserPoolSchemaAttributeOutput() UserPoolSchemaAttributeOutput {
	return o
}

func (o UserPoolSchemaAttributeOutput) ToUserPoolSchemaAttributeOutputWithContext(ctx context.Context) UserPoolSchemaAttributeOutput {
	return o
}

// The data format of the values for your attribute. When you choose an `AttributeDataType` , Amazon Cognito validates the input against the data type. A custom attribute value in your user's ID token is always a string, for example `"custom:isMember" : "true"` or `"custom:YearsAsMember" : "12"` .
func (o UserPoolSchemaAttributeOutput) AttributeDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *string { return v.AttributeDataType }).(pulumi.StringPtrOutput)
}

// > We recommend that you use [WriteAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes) in the user pool client to control how attributes can be mutated for new use cases instead of using `DeveloperOnlyAttribute` .
//
// Specifies whether the attribute type is developer only. This attribute can only be modified by an administrator. Users will not be able to modify this attribute using their access token.
func (o UserPoolSchemaAttributeOutput) DeveloperOnlyAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *bool { return v.DeveloperOnlyAttribute }).(pulumi.BoolPtrOutput)
}

// Specifies whether the value of the attribute can be changed.
//
// Any user pool attribute whose value you map from an IdP attribute must be mutable, with a parameter value of `true` . Amazon Cognito updates mapped attributes when users sign in to your application through an IdP. If an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute. For more information, see [Specifying Identity Provider Attribute Mappings for Your User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html) .
func (o UserPoolSchemaAttributeOutput) Mutable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *bool { return v.Mutable }).(pulumi.BoolPtrOutput)
}

// The name of your user pool attribute. When you create or update a user pool, adding a schema attribute creates a custom or developer-only attribute. When you add an attribute with a `Name` value of `MyAttribute` , Amazon Cognito creates the custom attribute `custom:MyAttribute` . When `DeveloperOnlyAttribute` is `true` , Amazon Cognito creates your attribute as `dev:MyAttribute` . In an operation that describes a user pool, Amazon Cognito returns this value as `value` for standard attributes, `custom:value` for custom attributes, and `dev:value` for developer-only attributes..
func (o UserPoolSchemaAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the constraints for an attribute of the number type.
func (o UserPoolSchemaAttributeOutput) NumberAttributeConstraints() UserPoolNumberAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *UserPoolNumberAttributeConstraints {
		return v.NumberAttributeConstraints
	}).(UserPoolNumberAttributeConstraintsPtrOutput)
}

// Specifies whether a user pool attribute is required. If the attribute is required and the user doesn't provide a value, registration or sign-in will fail.
func (o UserPoolSchemaAttributeOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Specifies the constraints for an attribute of the string type.
func (o UserPoolSchemaAttributeOutput) StringAttributeConstraints() UserPoolStringAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaAttribute) *UserPoolStringAttributeConstraints {
		return v.StringAttributeConstraints
	}).(UserPoolStringAttributeConstraintsPtrOutput)
}

type UserPoolSchemaAttributeArrayOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchemaAttribute)(nil)).Elem()
}

func (o UserPoolSchemaAttributeArrayOutput) ToUserPoolSchemaAttributeArrayOutput() UserPoolSchemaAttributeArrayOutput {
	return o
}

func (o UserPoolSchemaAttributeArrayOutput) ToUserPoolSchemaAttributeArrayOutputWithContext(ctx context.Context) UserPoolSchemaAttributeArrayOutput {
	return o
}

func (o UserPoolSchemaAttributeArrayOutput) Index(i pulumi.IntInput) UserPoolSchemaAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolSchemaAttribute {
		return vs[0].([]UserPoolSchemaAttribute)[vs[1].(int)]
	}).(UserPoolSchemaAttributeOutput)
}

type UserPoolSmsConfiguration struct {
	// The external ID is a value. We recommend you use `ExternalId` to add security to your IAM role, which is used to call Amazon SNS to send SMS messages for your user pool. If you provide an `ExternalId` , the Cognito User Pool uses it when attempting to assume your IAM role. You can also set your roles trust policy to require the `ExternalID` . If you use the Cognito Management Console to create a role for SMS MFA, Cognito creates a role with the required permissions and a trust policy that uses `ExternalId` .
	ExternalId *string `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM role in your AWS account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a [spending limit](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html) .
	SnsCallerArn *string `pulumi:"snsCallerArn"`
	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported *Legacy Amazon SNS alternate Region* .
	//
	// Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html) .
	SnsRegion *string `pulumi:"snsRegion"`
}

// UserPoolSmsConfigurationInput is an input type that accepts UserPoolSmsConfigurationArgs and UserPoolSmsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationInput` via:
//
//	UserPoolSmsConfigurationArgs{...}
type UserPoolSmsConfigurationInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput
	ToUserPoolSmsConfigurationOutputWithContext(context.Context) UserPoolSmsConfigurationOutput
}

type UserPoolSmsConfigurationArgs struct {
	// The external ID is a value. We recommend you use `ExternalId` to add security to your IAM role, which is used to call Amazon SNS to send SMS messages for your user pool. If you provide an `ExternalId` , the Cognito User Pool uses it when attempting to assume your IAM role. You can also set your roles trust policy to require the `ExternalID` . If you use the Cognito Management Console to create a role for SMS MFA, Cognito creates a role with the required permissions and a trust policy that uses `ExternalId` .
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM role in your AWS account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a [spending limit](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html) .
	SnsCallerArn pulumi.StringPtrInput `pulumi:"snsCallerArn"`
	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported *Legacy Amazon SNS alternate Region* .
	//
	// Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html) .
	SnsRegion pulumi.StringPtrInput `pulumi:"snsRegion"`
}

func (UserPoolSmsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return i.ToUserPoolSmsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput)
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput).ToUserPoolSmsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolSmsConfigurationPtrInput is an input type that accepts UserPoolSmsConfigurationArgs, UserPoolSmsConfigurationPtr and UserPoolSmsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationPtrInput` via:
//
//	        UserPoolSmsConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolSmsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput
	ToUserPoolSmsConfigurationPtrOutputWithContext(context.Context) UserPoolSmsConfigurationPtrOutput
}

type userPoolSmsConfigurationPtrType UserPoolSmsConfigurationArgs

func UserPoolSmsConfigurationPtr(v *UserPoolSmsConfigurationArgs) UserPoolSmsConfigurationPtrInput {
	return (*userPoolSmsConfigurationPtrType)(v)
}

func (*userPoolSmsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationPtrOutput)
}

type UserPoolSmsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolSmsConfiguration) *UserPoolSmsConfiguration {
		return &v
	}).(UserPoolSmsConfigurationPtrOutput)
}

// The external ID is a value. We recommend you use `ExternalId` to add security to your IAM role, which is used to call Amazon SNS to send SMS messages for your user pool. If you provide an `ExternalId` , the Cognito User Pool uses it when attempting to assume your IAM role. You can also set your roles trust policy to require the `ExternalID` . If you use the Cognito Management Console to create a role for SMS MFA, Cognito creates a role with the required permissions and a trust policy that uses `ExternalId` .
func (o UserPoolSmsConfigurationOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM role in your AWS account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a [spending limit](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html) .
func (o UserPoolSmsConfigurationOutput) SnsCallerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) *string { return v.SnsCallerArn }).(pulumi.StringPtrOutput)
}

// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported *Legacy Amazon SNS alternate Region* .
//
// Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html) .
func (o UserPoolSmsConfigurationOutput) SnsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) *string { return v.SnsRegion }).(pulumi.StringPtrOutput)
}

type UserPoolSmsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) Elem() UserPoolSmsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) UserPoolSmsConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolSmsConfiguration
		return ret
	}).(UserPoolSmsConfigurationOutput)
}

// The external ID is a value. We recommend you use `ExternalId` to add security to your IAM role, which is used to call Amazon SNS to send SMS messages for your user pool. If you provide an `ExternalId` , the Cognito User Pool uses it when attempting to assume your IAM role. You can also set your roles trust policy to require the `ExternalID` . If you use the Cognito Management Console to create a role for SMS MFA, Cognito creates a role with the required permissions and a trust policy that uses `ExternalId` .
func (o UserPoolSmsConfigurationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM role in your AWS account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a [spending limit](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html) .
func (o UserPoolSmsConfigurationPtrOutput) SnsCallerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SnsCallerArn
	}).(pulumi.StringPtrOutput)
}

// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported *Legacy Amazon SNS alternate Region* .
//
// Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html) .
func (o UserPoolSmsConfigurationPtrOutput) SnsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SnsRegion
	}).(pulumi.StringPtrOutput)
}

type UserPoolStringAttributeConstraints struct {
	// The maximum length of a string attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
	MaxLength *string `pulumi:"maxLength"`
	// The minimum length.
	MinLength *string `pulumi:"minLength"`
}

// UserPoolStringAttributeConstraintsInput is an input type that accepts UserPoolStringAttributeConstraintsArgs and UserPoolStringAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolStringAttributeConstraintsInput` via:
//
//	UserPoolStringAttributeConstraintsArgs{...}
type UserPoolStringAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolStringAttributeConstraintsOutput() UserPoolStringAttributeConstraintsOutput
	ToUserPoolStringAttributeConstraintsOutputWithContext(context.Context) UserPoolStringAttributeConstraintsOutput
}

type UserPoolStringAttributeConstraintsArgs struct {
	// The maximum length of a string attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
	MaxLength pulumi.StringPtrInput `pulumi:"maxLength"`
	// The minimum length.
	MinLength pulumi.StringPtrInput `pulumi:"minLength"`
}

func (UserPoolStringAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolStringAttributeConstraints)(nil)).Elem()
}

func (i UserPoolStringAttributeConstraintsArgs) ToUserPoolStringAttributeConstraintsOutput() UserPoolStringAttributeConstraintsOutput {
	return i.ToUserPoolStringAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolStringAttributeConstraintsArgs) ToUserPoolStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolStringAttributeConstraintsOutput)
}

func (i UserPoolStringAttributeConstraintsArgs) ToUserPoolStringAttributeConstraintsPtrOutput() UserPoolStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolStringAttributeConstraintsArgs) ToUserPoolStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolStringAttributeConstraintsOutput).ToUserPoolStringAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolStringAttributeConstraintsPtrInput is an input type that accepts UserPoolStringAttributeConstraintsArgs, UserPoolStringAttributeConstraintsPtr and UserPoolStringAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolStringAttributeConstraintsPtrInput` via:
//
//	        UserPoolStringAttributeConstraintsArgs{...}
//
//	or:
//
//	        nil
type UserPoolStringAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolStringAttributeConstraintsPtrOutput() UserPoolStringAttributeConstraintsPtrOutput
	ToUserPoolStringAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolStringAttributeConstraintsPtrOutput
}

type userPoolStringAttributeConstraintsPtrType UserPoolStringAttributeConstraintsArgs

func UserPoolStringAttributeConstraintsPtr(v *UserPoolStringAttributeConstraintsArgs) UserPoolStringAttributeConstraintsPtrInput {
	return (*userPoolStringAttributeConstraintsPtrType)(v)
}

func (*userPoolStringAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolStringAttributeConstraints)(nil)).Elem()
}

func (i *userPoolStringAttributeConstraintsPtrType) ToUserPoolStringAttributeConstraintsPtrOutput() UserPoolStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolStringAttributeConstraintsPtrType) ToUserPoolStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolStringAttributeConstraintsPtrOutput)
}

type UserPoolStringAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolStringAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolStringAttributeConstraintsOutput) ToUserPoolStringAttributeConstraintsOutput() UserPoolStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolStringAttributeConstraintsOutput) ToUserPoolStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolStringAttributeConstraintsOutput) ToUserPoolStringAttributeConstraintsPtrOutput() UserPoolStringAttributeConstraintsPtrOutput {
	return o.ToUserPoolStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolStringAttributeConstraintsOutput) ToUserPoolStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolStringAttributeConstraints) *UserPoolStringAttributeConstraints {
		return &v
	}).(UserPoolStringAttributeConstraintsPtrOutput)
}

// The maximum length of a string attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
func (o UserPoolStringAttributeConstraintsOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolStringAttributeConstraints) *string { return v.MaxLength }).(pulumi.StringPtrOutput)
}

// The minimum length.
func (o UserPoolStringAttributeConstraintsOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolStringAttributeConstraints) *string { return v.MinLength }).(pulumi.StringPtrOutput)
}

type UserPoolStringAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolStringAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolStringAttributeConstraintsPtrOutput) ToUserPoolStringAttributeConstraintsPtrOutput() UserPoolStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolStringAttributeConstraintsPtrOutput) ToUserPoolStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolStringAttributeConstraintsPtrOutput) Elem() UserPoolStringAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolStringAttributeConstraints) UserPoolStringAttributeConstraints {
		if v != nil {
			return *v
		}
		var ret UserPoolStringAttributeConstraints
		return ret
	}).(UserPoolStringAttributeConstraintsOutput)
}

// The maximum length of a string attribute value. Must be a number less than or equal to `2^1023` , represented as a string with a length of 131072 characters or fewer.
func (o UserPoolStringAttributeConstraintsPtrOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolStringAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxLength
	}).(pulumi.StringPtrOutput)
}

// The minimum length.
func (o UserPoolStringAttributeConstraintsPtrOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolStringAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.StringPtrOutput)
}

type UserPoolUserAttributeType struct {
	// The name of the attribute.
	Name *string `pulumi:"name"`
	// The value of the attribute.
	Value *string `pulumi:"value"`
}

// UserPoolUserAttributeTypeInput is an input type that accepts UserPoolUserAttributeTypeArgs and UserPoolUserAttributeTypeOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeTypeInput` via:
//
//	UserPoolUserAttributeTypeArgs{...}
type UserPoolUserAttributeTypeInput interface {
	pulumi.Input

	ToUserPoolUserAttributeTypeOutput() UserPoolUserAttributeTypeOutput
	ToUserPoolUserAttributeTypeOutputWithContext(context.Context) UserPoolUserAttributeTypeOutput
}

type UserPoolUserAttributeTypeArgs struct {
	// The name of the attribute.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the attribute.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UserPoolUserAttributeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeType)(nil)).Elem()
}

func (i UserPoolUserAttributeTypeArgs) ToUserPoolUserAttributeTypeOutput() UserPoolUserAttributeTypeOutput {
	return i.ToUserPoolUserAttributeTypeOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeTypeArgs) ToUserPoolUserAttributeTypeOutputWithContext(ctx context.Context) UserPoolUserAttributeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeTypeOutput)
}

// UserPoolUserAttributeTypeArrayInput is an input type that accepts UserPoolUserAttributeTypeArray and UserPoolUserAttributeTypeArrayOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeTypeArrayInput` via:
//
//	UserPoolUserAttributeTypeArray{ UserPoolUserAttributeTypeArgs{...} }
type UserPoolUserAttributeTypeArrayInput interface {
	pulumi.Input

	ToUserPoolUserAttributeTypeArrayOutput() UserPoolUserAttributeTypeArrayOutput
	ToUserPoolUserAttributeTypeArrayOutputWithContext(context.Context) UserPoolUserAttributeTypeArrayOutput
}

type UserPoolUserAttributeTypeArray []UserPoolUserAttributeTypeInput

func (UserPoolUserAttributeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolUserAttributeType)(nil)).Elem()
}

func (i UserPoolUserAttributeTypeArray) ToUserPoolUserAttributeTypeArrayOutput() UserPoolUserAttributeTypeArrayOutput {
	return i.ToUserPoolUserAttributeTypeArrayOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeTypeArray) ToUserPoolUserAttributeTypeArrayOutputWithContext(ctx context.Context) UserPoolUserAttributeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeTypeArrayOutput)
}

type UserPoolUserAttributeTypeOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeType)(nil)).Elem()
}

func (o UserPoolUserAttributeTypeOutput) ToUserPoolUserAttributeTypeOutput() UserPoolUserAttributeTypeOutput {
	return o
}

func (o UserPoolUserAttributeTypeOutput) ToUserPoolUserAttributeTypeOutputWithContext(ctx context.Context) UserPoolUserAttributeTypeOutput {
	return o
}

// The name of the attribute.
func (o UserPoolUserAttributeTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolUserAttributeType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the attribute.
func (o UserPoolUserAttributeTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolUserAttributeType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UserPoolUserAttributeTypeArrayOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolUserAttributeType)(nil)).Elem()
}

func (o UserPoolUserAttributeTypeArrayOutput) ToUserPoolUserAttributeTypeArrayOutput() UserPoolUserAttributeTypeArrayOutput {
	return o
}

func (o UserPoolUserAttributeTypeArrayOutput) ToUserPoolUserAttributeTypeArrayOutputWithContext(ctx context.Context) UserPoolUserAttributeTypeArrayOutput {
	return o
}

func (o UserPoolUserAttributeTypeArrayOutput) Index(i pulumi.IntInput) UserPoolUserAttributeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolUserAttributeType {
		return vs[0].([]UserPoolUserAttributeType)[vs[1].(int)]
	}).(UserPoolUserAttributeTypeOutput)
}

type UserPoolUserAttributeUpdateSettings struct {
	// Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute. When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.
	//
	// You can verify an updated email address or phone number with a [VerifyUserAttribute](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html) API request. You can also call the [AdminUpdateUserAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) API and set `email_verified` or `phone_number_verified` to true.
	//
	// When `AttributesRequireVerificationBeforeUpdate` is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where `AttributesRequireVerificationBeforeUpdate` is false, API operations that change attribute values can immediately update a user’s `email` or `phone_number` attribute.
	AttributesRequireVerificationBeforeUpdate []string `pulumi:"attributesRequireVerificationBeforeUpdate"`
}

// UserPoolUserAttributeUpdateSettingsInput is an input type that accepts UserPoolUserAttributeUpdateSettingsArgs and UserPoolUserAttributeUpdateSettingsOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeUpdateSettingsInput` via:
//
//	UserPoolUserAttributeUpdateSettingsArgs{...}
type UserPoolUserAttributeUpdateSettingsInput interface {
	pulumi.Input

	ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput
	ToUserPoolUserAttributeUpdateSettingsOutputWithContext(context.Context) UserPoolUserAttributeUpdateSettingsOutput
}

type UserPoolUserAttributeUpdateSettingsArgs struct {
	// Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute. When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.
	//
	// You can verify an updated email address or phone number with a [VerifyUserAttribute](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html) API request. You can also call the [AdminUpdateUserAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) API and set `email_verified` or `phone_number_verified` to true.
	//
	// When `AttributesRequireVerificationBeforeUpdate` is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where `AttributesRequireVerificationBeforeUpdate` is false, API operations that change attribute values can immediately update a user’s `email` or `phone_number` attribute.
	AttributesRequireVerificationBeforeUpdate pulumi.StringArrayInput `pulumi:"attributesRequireVerificationBeforeUpdate"`
}

func (UserPoolUserAttributeUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsOutput)
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsOutput).ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx)
}

// UserPoolUserAttributeUpdateSettingsPtrInput is an input type that accepts UserPoolUserAttributeUpdateSettingsArgs, UserPoolUserAttributeUpdateSettingsPtr and UserPoolUserAttributeUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeUpdateSettingsPtrInput` via:
//
//	        UserPoolUserAttributeUpdateSettingsArgs{...}
//
//	or:
//
//	        nil
type UserPoolUserAttributeUpdateSettingsPtrInput interface {
	pulumi.Input

	ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput
	ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput
}

type userPoolUserAttributeUpdateSettingsPtrType UserPoolUserAttributeUpdateSettingsArgs

func UserPoolUserAttributeUpdateSettingsPtr(v *UserPoolUserAttributeUpdateSettingsArgs) UserPoolUserAttributeUpdateSettingsPtrInput {
	return (*userPoolUserAttributeUpdateSettingsPtrType)(v)
}

func (*userPoolUserAttributeUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (i *userPoolUserAttributeUpdateSettingsPtrType) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *userPoolUserAttributeUpdateSettingsPtrType) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsPtrOutput)
}

type UserPoolUserAttributeUpdateSettingsOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolUserAttributeUpdateSettings) *UserPoolUserAttributeUpdateSettings {
		return &v
	}).(UserPoolUserAttributeUpdateSettingsPtrOutput)
}

// Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute. When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.
//
// You can verify an updated email address or phone number with a [VerifyUserAttribute](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html) API request. You can also call the [AdminUpdateUserAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) API and set `email_verified` or `phone_number_verified` to true.
//
// When `AttributesRequireVerificationBeforeUpdate` is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where `AttributesRequireVerificationBeforeUpdate` is false, API operations that change attribute values can immediately update a user’s `email` or `phone_number` attribute.
func (o UserPoolUserAttributeUpdateSettingsOutput) AttributesRequireVerificationBeforeUpdate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserPoolUserAttributeUpdateSettings) []string {
		return v.AttributesRequireVerificationBeforeUpdate
	}).(pulumi.StringArrayOutput)
}

type UserPoolUserAttributeUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) Elem() UserPoolUserAttributeUpdateSettingsOutput {
	return o.ApplyT(func(v *UserPoolUserAttributeUpdateSettings) UserPoolUserAttributeUpdateSettings {
		if v != nil {
			return *v
		}
		var ret UserPoolUserAttributeUpdateSettings
		return ret
	}).(UserPoolUserAttributeUpdateSettingsOutput)
}

// Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute. When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.
//
// You can verify an updated email address or phone number with a [VerifyUserAttribute](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html) API request. You can also call the [AdminUpdateUserAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html) API and set `email_verified` or `phone_number_verified` to true.
//
// When `AttributesRequireVerificationBeforeUpdate` is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where `AttributesRequireVerificationBeforeUpdate` is false, API operations that change attribute values can immediately update a user’s `email` or `phone_number` attribute.
func (o UserPoolUserAttributeUpdateSettingsPtrOutput) AttributesRequireVerificationBeforeUpdate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserPoolUserAttributeUpdateSettings) []string {
		if v == nil {
			return nil
		}
		return v.AttributesRequireVerificationBeforeUpdate
	}).(pulumi.StringArrayOutput)
}

type UserPoolUsernameConfiguration struct {
	// Specifies whether user name case sensitivity will be applied for all users in the user pool through Amazon Cognito APIs. For most use cases, set case sensitivity to `False` (case insensitive) as a best practice. When usernames and email addresses are case insensitive, users can sign in as the same user when they enter a different capitalization of their user name.
	//
	// Valid values include:
	//
	// - **True** - Enables case sensitivity for all username input. When this option is set to `True` , users must sign in using the exact capitalization of their given username, such as "UserName". This is the default value.
	// - **False** - Enables case insensitivity for all username input. For example, when this option is set to `False` , users can sign in using `username` , `USERNAME` , or `UserName` . This option also enables both `preferred_username` and `email` alias to be case insensitive, in addition to the `username` attribute.
	CaseSensitive *bool `pulumi:"caseSensitive"`
}

// UserPoolUsernameConfigurationInput is an input type that accepts UserPoolUsernameConfigurationArgs and UserPoolUsernameConfigurationOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationInput` via:
//
//	UserPoolUsernameConfigurationArgs{...}
type UserPoolUsernameConfigurationInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput
	ToUserPoolUsernameConfigurationOutputWithContext(context.Context) UserPoolUsernameConfigurationOutput
}

type UserPoolUsernameConfigurationArgs struct {
	// Specifies whether user name case sensitivity will be applied for all users in the user pool through Amazon Cognito APIs. For most use cases, set case sensitivity to `False` (case insensitive) as a best practice. When usernames and email addresses are case insensitive, users can sign in as the same user when they enter a different capitalization of their user name.
	//
	// Valid values include:
	//
	// - **True** - Enables case sensitivity for all username input. When this option is set to `True` , users must sign in using the exact capitalization of their given username, such as "UserName". This is the default value.
	// - **False** - Enables case insensitivity for all username input. For example, when this option is set to `False` , users can sign in using `username` , `USERNAME` , or `UserName` . This option also enables both `preferred_username` and `email` alias to be case insensitive, in addition to the `username` attribute.
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
}

func (UserPoolUsernameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return i.ToUserPoolUsernameConfigurationOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput)
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput).ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx)
}

// UserPoolUsernameConfigurationPtrInput is an input type that accepts UserPoolUsernameConfigurationArgs, UserPoolUsernameConfigurationPtr and UserPoolUsernameConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationPtrInput` via:
//
//	        UserPoolUsernameConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolUsernameConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput
	ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Context) UserPoolUsernameConfigurationPtrOutput
}

type userPoolUsernameConfigurationPtrType UserPoolUsernameConfigurationArgs

func UserPoolUsernameConfigurationPtr(v *UserPoolUsernameConfigurationArgs) UserPoolUsernameConfigurationPtrInput {
	return (*userPoolUsernameConfigurationPtrType)(v)
}

func (*userPoolUsernameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationPtrOutput)
}

type UserPoolUsernameConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolUsernameConfiguration) *UserPoolUsernameConfiguration {
		return &v
	}).(UserPoolUsernameConfigurationPtrOutput)
}

// Specifies whether user name case sensitivity will be applied for all users in the user pool through Amazon Cognito APIs. For most use cases, set case sensitivity to `False` (case insensitive) as a best practice. When usernames and email addresses are case insensitive, users can sign in as the same user when they enter a different capitalization of their user name.
//
// Valid values include:
//
// - **True** - Enables case sensitivity for all username input. When this option is set to `True` , users must sign in using the exact capitalization of their given username, such as "UserName". This is the default value.
// - **False** - Enables case insensitivity for all username input. For example, when this option is set to `False` , users can sign in using `username` , `USERNAME` , or `UserName` . This option also enables both `preferred_username` and `email` alias to be case insensitive, in addition to the `username` attribute.
func (o UserPoolUsernameConfigurationOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolUsernameConfiguration) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

type UserPoolUsernameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) Elem() UserPoolUsernameConfigurationOutput {
	return o.ApplyT(func(v *UserPoolUsernameConfiguration) UserPoolUsernameConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolUsernameConfiguration
		return ret
	}).(UserPoolUsernameConfigurationOutput)
}

// Specifies whether user name case sensitivity will be applied for all users in the user pool through Amazon Cognito APIs. For most use cases, set case sensitivity to `False` (case insensitive) as a best practice. When usernames and email addresses are case insensitive, users can sign in as the same user when they enter a different capitalization of their user name.
//
// Valid values include:
//
// - **True** - Enables case sensitivity for all username input. When this option is set to `True` , users must sign in using the exact capitalization of their given username, such as "UserName". This is the default value.
// - **False** - Enables case insensitivity for all username input. For example, when this option is set to `False` , users can sign in using `username` , `USERNAME` , or `UserName` . This option also enables both `preferred_username` and `email` alias to be case insensitive, in addition to the `username` attribute.
func (o UserPoolUsernameConfigurationPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolUsernameConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

type UserPoolVerificationMessageTemplate struct {
	// The default email option.
	DefaultEmailOption *string `pulumi:"defaultEmailOption"`
	// The template for email messages that Amazon Cognito sends to your users. You can set an `EmailMessage` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailMessage *string `pulumi:"emailMessage"`
	// The email message template for sending a confirmation link to the user. You can set an `EmailMessageByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailMessageByLink *string `pulumi:"emailMessageByLink"`
	// The subject line for the email message template. You can set an `EmailSubject` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailSubject *string `pulumi:"emailSubject"`
	// The subject line for the email message template for sending a confirmation link to the user. You can set an `EmailSubjectByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailSubjectByLink *string `pulumi:"emailSubjectByLink"`
	// The template for SMS messages that Amazon Cognito sends to your users.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolVerificationMessageTemplateInput is an input type that accepts UserPoolVerificationMessageTemplateArgs and UserPoolVerificationMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplateInput` via:
//
//	UserPoolVerificationMessageTemplateArgs{...}
type UserPoolVerificationMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput
	ToUserPoolVerificationMessageTemplateOutputWithContext(context.Context) UserPoolVerificationMessageTemplateOutput
}

type UserPoolVerificationMessageTemplateArgs struct {
	// The default email option.
	DefaultEmailOption pulumi.StringPtrInput `pulumi:"defaultEmailOption"`
	// The template for email messages that Amazon Cognito sends to your users. You can set an `EmailMessage` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// The email message template for sending a confirmation link to the user. You can set an `EmailMessageByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailMessageByLink pulumi.StringPtrInput `pulumi:"emailMessageByLink"`
	// The subject line for the email message template. You can set an `EmailSubject` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// The subject line for the email message template for sending a confirmation link to the user. You can set an `EmailSubjectByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
	EmailSubjectByLink pulumi.StringPtrInput `pulumi:"emailSubjectByLink"`
	// The template for SMS messages that Amazon Cognito sends to your users.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolVerificationMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return i.ToUserPoolVerificationMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput)
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput).ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolVerificationMessageTemplatePtrInput is an input type that accepts UserPoolVerificationMessageTemplateArgs, UserPoolVerificationMessageTemplatePtr and UserPoolVerificationMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplatePtrInput` via:
//
//	        UserPoolVerificationMessageTemplateArgs{...}
//
//	or:
//
//	        nil
type UserPoolVerificationMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput
	ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Context) UserPoolVerificationMessageTemplatePtrOutput
}

type userPoolVerificationMessageTemplatePtrType UserPoolVerificationMessageTemplateArgs

func UserPoolVerificationMessageTemplatePtr(v *UserPoolVerificationMessageTemplateArgs) UserPoolVerificationMessageTemplatePtrInput {
	return (*userPoolVerificationMessageTemplatePtrType)(v)
}

func (*userPoolVerificationMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplatePtrOutput)
}

type UserPoolVerificationMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolVerificationMessageTemplate) *UserPoolVerificationMessageTemplate {
		return &v
	}).(UserPoolVerificationMessageTemplatePtrOutput)
}

// The default email option.
func (o UserPoolVerificationMessageTemplateOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.DefaultEmailOption }).(pulumi.StringPtrOutput)
}

// The template for email messages that Amazon Cognito sends to your users. You can set an `EmailMessage` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The email message template for sending a confirmation link to the user. You can set an `EmailMessageByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessageByLink }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. You can set an `EmailSubject` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template for sending a confirmation link to the user. You can set an `EmailSubjectByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubjectByLink }).(pulumi.StringPtrOutput)
}

// The template for SMS messages that Amazon Cognito sends to your users.
func (o UserPoolVerificationMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolVerificationMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) Elem() UserPoolVerificationMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) UserPoolVerificationMessageTemplate {
		if v != nil {
			return *v
		}
		var ret UserPoolVerificationMessageTemplate
		return ret
	}).(UserPoolVerificationMessageTemplateOutput)
}

// The default email option.
func (o UserPoolVerificationMessageTemplatePtrOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DefaultEmailOption
	}).(pulumi.StringPtrOutput)
}

// The template for email messages that Amazon Cognito sends to your users. You can set an `EmailMessage` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessage
	}).(pulumi.StringPtrOutput)
}

// The email message template for sending a confirmation link to the user. You can set an `EmailMessageByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessageByLink
	}).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. You can set an `EmailSubject` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubject
	}).(pulumi.StringPtrOutput)
}

// The subject line for the email message template for sending a confirmation link to the user. You can set an `EmailSubjectByLink` template only if the value of [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` . When your [EmailSendingAccount](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount) is `DEVELOPER` , your user pool sends email messages with your own Amazon SES configuration.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubjectByLink
	}).(pulumi.StringPtrOutput)
}

// The template for SMS messages that Amazon Cognito sends to your users.
func (o UserPoolVerificationMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.SmsMessage
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoIdentityProviderInput)(nil)).Elem(), IdentityPoolCognitoIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoIdentityProviderArrayInput)(nil)).Elem(), IdentityPoolCognitoIdentityProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoStreamsInput)(nil)).Elem(), IdentityPoolCognitoStreamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoStreamsPtrInput)(nil)).Elem(), IdentityPoolCognitoStreamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolPushSyncInput)(nil)).Elem(), IdentityPoolPushSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolPushSyncPtrInput)(nil)).Elem(), IdentityPoolPushSyncArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentMappingRuleInput)(nil)).Elem(), IdentityPoolRoleAttachmentMappingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentMappingRuleArrayInput)(nil)).Elem(), IdentityPoolRoleAttachmentMappingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMapInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRulesConfigurationTypeInput)(nil)).Elem(), IdentityPoolRoleAttachmentRulesConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRulesConfigurationTypePtrInput)(nil)).Elem(), IdentityPoolRoleAttachmentRulesConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationCloudWatchLogsConfigurationInput)(nil)).Elem(), LogDeliveryConfigurationCloudWatchLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationCloudWatchLogsConfigurationPtrInput)(nil)).Elem(), LogDeliveryConfigurationCloudWatchLogsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationFirehoseConfigurationInput)(nil)).Elem(), LogDeliveryConfigurationFirehoseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationFirehoseConfigurationPtrInput)(nil)).Elem(), LogDeliveryConfigurationFirehoseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationLogConfigurationInput)(nil)).Elem(), LogDeliveryConfigurationLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationLogConfigurationArrayInput)(nil)).Elem(), LogDeliveryConfigurationLogConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationS3ConfigurationInput)(nil)).Elem(), LogDeliveryConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogDeliveryConfigurationS3ConfigurationPtrInput)(nil)).Elem(), LogDeliveryConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingInput)(nil)).Elem(), UserPoolAccountRecoverySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingPtrInput)(nil)).Elem(), UserPoolAccountRecoverySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAddOnsInput)(nil)).Elem(), UserPoolAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAddOnsPtrInput)(nil)).Elem(), UserPoolAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigInput)(nil)).Elem(), UserPoolAdminCreateUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigPtrInput)(nil)).Elem(), UserPoolAdminCreateUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientAnalyticsConfigurationInput)(nil)).Elem(), UserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientAnalyticsConfigurationPtrInput)(nil)).Elem(), UserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientTokenValidityUnitsInput)(nil)).Elem(), UserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientTokenValidityUnitsPtrInput)(nil)).Elem(), UserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolCustomEmailSenderInput)(nil)).Elem(), UserPoolCustomEmailSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolCustomEmailSenderPtrInput)(nil)).Elem(), UserPoolCustomEmailSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolCustomSmsSenderInput)(nil)).Elem(), UserPoolCustomSmsSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolCustomSmsSenderPtrInput)(nil)).Elem(), UserPoolCustomSmsSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDeviceConfigurationInput)(nil)).Elem(), UserPoolDeviceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDeviceConfigurationPtrInput)(nil)).Elem(), UserPoolDeviceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDomainCustomDomainConfigTypeInput)(nil)).Elem(), UserPoolDomainCustomDomainConfigTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDomainCustomDomainConfigTypePtrInput)(nil)).Elem(), UserPoolDomainCustomDomainConfigTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolEmailConfigurationInput)(nil)).Elem(), UserPoolEmailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolEmailConfigurationPtrInput)(nil)).Elem(), UserPoolEmailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolInviteMessageTemplateInput)(nil)).Elem(), UserPoolInviteMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolInviteMessageTemplatePtrInput)(nil)).Elem(), UserPoolInviteMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigInput)(nil)).Elem(), UserPoolLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigPtrInput)(nil)).Elem(), UserPoolLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolNumberAttributeConstraintsInput)(nil)).Elem(), UserPoolNumberAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolNumberAttributeConstraintsPtrInput)(nil)).Elem(), UserPoolNumberAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPasswordPolicyInput)(nil)).Elem(), UserPoolPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPasswordPolicyPtrInput)(nil)).Elem(), UserPoolPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPoliciesInput)(nil)).Elem(), UserPoolPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPoliciesPtrInput)(nil)).Elem(), UserPoolPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPreTokenGenerationConfigInput)(nil)).Elem(), UserPoolPreTokenGenerationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPreTokenGenerationConfigPtrInput)(nil)).Elem(), UserPoolPreTokenGenerationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRecoveryOptionInput)(nil)).Elem(), UserPoolRecoveryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRecoveryOptionArrayInput)(nil)).Elem(), UserPoolRecoveryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolResourceServerResourceServerScopeTypeInput)(nil)).Elem(), UserPoolResourceServerResourceServerScopeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolResourceServerResourceServerScopeTypeArrayInput)(nil)).Elem(), UserPoolResourceServerResourceServerScopeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyEmailTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentNotifyEmailTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrInput)(nil)).Elem(), UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaAttributeInput)(nil)).Elem(), UserPoolSchemaAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaAttributeArrayInput)(nil)).Elem(), UserPoolSchemaAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSmsConfigurationInput)(nil)).Elem(), UserPoolSmsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSmsConfigurationPtrInput)(nil)).Elem(), UserPoolSmsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolStringAttributeConstraintsInput)(nil)).Elem(), UserPoolStringAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolStringAttributeConstraintsPtrInput)(nil)).Elem(), UserPoolStringAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeTypeInput)(nil)).Elem(), UserPoolUserAttributeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeTypeArrayInput)(nil)).Elem(), UserPoolUserAttributeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeUpdateSettingsInput)(nil)).Elem(), UserPoolUserAttributeUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeUpdateSettingsPtrInput)(nil)).Elem(), UserPoolUserAttributeUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUsernameConfigurationInput)(nil)).Elem(), UserPoolUsernameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUsernameConfigurationPtrInput)(nil)).Elem(), UserPoolUsernameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolVerificationMessageTemplateInput)(nil)).Elem(), UserPoolVerificationMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolVerificationMessageTemplatePtrInput)(nil)).Elem(), UserPoolVerificationMessageTemplateArgs{})
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolCognitoStreamsOutput{})
	pulumi.RegisterOutputType(IdentityPoolCognitoStreamsPtrOutput{})
	pulumi.RegisterOutputType(IdentityPoolPushSyncOutput{})
	pulumi.RegisterOutputType(IdentityPoolPushSyncPtrOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentMappingRuleOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentMappingRuleArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingMapOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRulesConfigurationTypeOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRulesConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationCloudWatchLogsConfigurationOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationCloudWatchLogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationFirehoseConfigurationOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationFirehoseConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationLogConfigurationOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationLogConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(LogDeliveryConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAddOnsOutput{})
	pulumi.RegisterOutputType(UserPoolAddOnsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolClientTokenValidityUnitsOutput{})
	pulumi.RegisterOutputType(UserPoolClientTokenValidityUnitsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolCustomEmailSenderOutput{})
	pulumi.RegisterOutputType(UserPoolCustomEmailSenderPtrOutput{})
	pulumi.RegisterOutputType(UserPoolCustomSmsSenderOutput{})
	pulumi.RegisterOutputType(UserPoolCustomSmsSenderPtrOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolDomainCustomDomainConfigTypeOutput{})
	pulumi.RegisterOutputType(UserPoolDomainCustomDomainConfigTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolInviteMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolInviteMessageTemplatePtrOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolNumberAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolNumberAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(UserPoolPoliciesOutput{})
	pulumi.RegisterOutputType(UserPoolPoliciesPtrOutput{})
	pulumi.RegisterOutputType(UserPoolPreTokenGenerationConfigOutput{})
	pulumi.RegisterOutputType(UserPoolPreTokenGenerationConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolRecoveryOptionOutput{})
	pulumi.RegisterOutputType(UserPoolRecoveryOptionArrayOutput{})
	pulumi.RegisterOutputType(UserPoolResourceServerResourceServerScopeTypeOutput{})
	pulumi.RegisterOutputType(UserPoolResourceServerResourceServerScopeTypeArrayOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverActionTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentNotifyConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentNotifyEmailTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentNotifyEmailTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeOutput{})
	pulumi.RegisterOutputType(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaAttributeOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaAttributeArrayOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolStringAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolStringAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeTypeOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeTypeArrayOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeUpdateSettingsOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplatePtrOutput{})
}
