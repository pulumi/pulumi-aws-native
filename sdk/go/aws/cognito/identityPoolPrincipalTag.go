// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::IdentityPoolPrincipalTag
type IdentityPoolPrincipalTag struct {
	pulumi.CustomResourceState

	// The identity pool that you want to associate with this principal tag map.
	IdentityPoolId pulumi.StringOutput `pulumi:"identityPoolId"`
	// The identity pool identity provider (IdP) that you want to associate with this principal tag map.
	IdentityProviderName pulumi.StringOutput `pulumi:"identityProviderName"`
	// A JSON-formatted list of user claims and the principal tags that you want to associate with them. When Amazon Cognito requests credentials, it sets the value of the principal tag to the value of the user's claim.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPoolPrincipalTag` for more information about the expected schema for this property.
	PrincipalTags pulumi.AnyOutput `pulumi:"principalTags"`
	// Use a default set of mappings between claims and tags for this provider, instead of a custom map.
	UseDefaults pulumi.BoolPtrOutput `pulumi:"useDefaults"`
}

// NewIdentityPoolPrincipalTag registers a new resource with the given unique name, arguments, and options.
func NewIdentityPoolPrincipalTag(ctx *pulumi.Context,
	name string, args *IdentityPoolPrincipalTagArgs, opts ...pulumi.ResourceOption) (*IdentityPoolPrincipalTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityPoolId'")
	}
	if args.IdentityProviderName == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"identityPoolId",
		"identityProviderName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityPoolPrincipalTag
	err := ctx.RegisterResource("aws-native:cognito:IdentityPoolPrincipalTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPoolPrincipalTag gets an existing IdentityPoolPrincipalTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPoolPrincipalTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPoolPrincipalTagState, opts ...pulumi.ResourceOption) (*IdentityPoolPrincipalTag, error) {
	var resource IdentityPoolPrincipalTag
	err := ctx.ReadResource("aws-native:cognito:IdentityPoolPrincipalTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPoolPrincipalTag resources.
type identityPoolPrincipalTagState struct {
}

type IdentityPoolPrincipalTagState struct {
}

func (IdentityPoolPrincipalTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolPrincipalTagState)(nil)).Elem()
}

type identityPoolPrincipalTagArgs struct {
	// The identity pool that you want to associate with this principal tag map.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// The identity pool identity provider (IdP) that you want to associate with this principal tag map.
	IdentityProviderName string `pulumi:"identityProviderName"`
	// A JSON-formatted list of user claims and the principal tags that you want to associate with them. When Amazon Cognito requests credentials, it sets the value of the principal tag to the value of the user's claim.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPoolPrincipalTag` for more information about the expected schema for this property.
	PrincipalTags interface{} `pulumi:"principalTags"`
	// Use a default set of mappings between claims and tags for this provider, instead of a custom map.
	UseDefaults *bool `pulumi:"useDefaults"`
}

// The set of arguments for constructing a IdentityPoolPrincipalTag resource.
type IdentityPoolPrincipalTagArgs struct {
	// The identity pool that you want to associate with this principal tag map.
	IdentityPoolId pulumi.StringInput
	// The identity pool identity provider (IdP) that you want to associate with this principal tag map.
	IdentityProviderName pulumi.StringInput
	// A JSON-formatted list of user claims and the principal tags that you want to associate with them. When Amazon Cognito requests credentials, it sets the value of the principal tag to the value of the user's claim.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPoolPrincipalTag` for more information about the expected schema for this property.
	PrincipalTags pulumi.Input
	// Use a default set of mappings between claims and tags for this provider, instead of a custom map.
	UseDefaults pulumi.BoolPtrInput
}

func (IdentityPoolPrincipalTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolPrincipalTagArgs)(nil)).Elem()
}

type IdentityPoolPrincipalTagInput interface {
	pulumi.Input

	ToIdentityPoolPrincipalTagOutput() IdentityPoolPrincipalTagOutput
	ToIdentityPoolPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolPrincipalTagOutput
}

func (*IdentityPoolPrincipalTag) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolPrincipalTag)(nil)).Elem()
}

func (i *IdentityPoolPrincipalTag) ToIdentityPoolPrincipalTagOutput() IdentityPoolPrincipalTagOutput {
	return i.ToIdentityPoolPrincipalTagOutputWithContext(context.Background())
}

func (i *IdentityPoolPrincipalTag) ToIdentityPoolPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolPrincipalTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolPrincipalTagOutput)
}

type IdentityPoolPrincipalTagOutput struct{ *pulumi.OutputState }

func (IdentityPoolPrincipalTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolPrincipalTag)(nil)).Elem()
}

func (o IdentityPoolPrincipalTagOutput) ToIdentityPoolPrincipalTagOutput() IdentityPoolPrincipalTagOutput {
	return o
}

func (o IdentityPoolPrincipalTagOutput) ToIdentityPoolPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolPrincipalTagOutput {
	return o
}

// The identity pool that you want to associate with this principal tag map.
func (o IdentityPoolPrincipalTagOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPoolPrincipalTag) pulumi.StringOutput { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// The identity pool identity provider (IdP) that you want to associate with this principal tag map.
func (o IdentityPoolPrincipalTagOutput) IdentityProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPoolPrincipalTag) pulumi.StringOutput { return v.IdentityProviderName }).(pulumi.StringOutput)
}

// A JSON-formatted list of user claims and the principal tags that you want to associate with them. When Amazon Cognito requests credentials, it sets the value of the principal tag to the value of the user's claim.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPoolPrincipalTag` for more information about the expected schema for this property.
func (o IdentityPoolPrincipalTagOutput) PrincipalTags() pulumi.AnyOutput {
	return o.ApplyT(func(v *IdentityPoolPrincipalTag) pulumi.AnyOutput { return v.PrincipalTags }).(pulumi.AnyOutput)
}

// Use a default set of mappings between claims and tags for this provider, instead of a custom map.
func (o IdentityPoolPrincipalTagOutput) UseDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPoolPrincipalTag) pulumi.BoolPtrOutput { return v.UseDefaults }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolPrincipalTagInput)(nil)).Elem(), &IdentityPoolPrincipalTag{})
	pulumi.RegisterOutputType(IdentityPoolPrincipalTagOutput{})
}
