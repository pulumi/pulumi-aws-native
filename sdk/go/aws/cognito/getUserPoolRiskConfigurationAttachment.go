// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment
func LookupUserPoolRiskConfigurationAttachment(ctx *pulumi.Context, args *LookupUserPoolRiskConfigurationAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupUserPoolRiskConfigurationAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserPoolRiskConfigurationAttachmentResult
	err := ctx.Invoke("aws-native:cognito:getUserPoolRiskConfigurationAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserPoolRiskConfigurationAttachmentArgs struct {
	// The app client ID. You can specify the risk configuration for a single client (with a specific ClientId) or for all clients (by setting the ClientId to `ALL` ).
	ClientId string `pulumi:"clientId"`
	// The ID of the user pool that has the risk configuration applied.
	UserPoolId string `pulumi:"userPoolId"`
}

type LookupUserPoolRiskConfigurationAttachmentResult struct {
	// The settings for automated responses and notification templates for adaptive authentication with advanced security features.
	AccountTakeoverRiskConfiguration *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType `pulumi:"accountTakeoverRiskConfiguration"`
	// Settings for compromised-credentials actions and authentication types with advanced security features in full-function `ENFORCED` mode.
	CompromisedCredentialsRiskConfiguration *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType `pulumi:"compromisedCredentialsRiskConfiguration"`
	// Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
	RiskExceptionConfiguration *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType `pulumi:"riskExceptionConfiguration"`
}

func LookupUserPoolRiskConfigurationAttachmentOutput(ctx *pulumi.Context, args LookupUserPoolRiskConfigurationAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupUserPoolRiskConfigurationAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserPoolRiskConfigurationAttachmentResult, error) {
			args := v.(LookupUserPoolRiskConfigurationAttachmentArgs)
			r, err := LookupUserPoolRiskConfigurationAttachment(ctx, &args, opts...)
			var s LookupUserPoolRiskConfigurationAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserPoolRiskConfigurationAttachmentResultOutput)
}

type LookupUserPoolRiskConfigurationAttachmentOutputArgs struct {
	// The app client ID. You can specify the risk configuration for a single client (with a specific ClientId) or for all clients (by setting the ClientId to `ALL` ).
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The ID of the user pool that has the risk configuration applied.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (LookupUserPoolRiskConfigurationAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolRiskConfigurationAttachmentArgs)(nil)).Elem()
}

type LookupUserPoolRiskConfigurationAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupUserPoolRiskConfigurationAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolRiskConfigurationAttachmentResult)(nil)).Elem()
}

func (o LookupUserPoolRiskConfigurationAttachmentResultOutput) ToLookupUserPoolRiskConfigurationAttachmentResultOutput() LookupUserPoolRiskConfigurationAttachmentResultOutput {
	return o
}

func (o LookupUserPoolRiskConfigurationAttachmentResultOutput) ToLookupUserPoolRiskConfigurationAttachmentResultOutputWithContext(ctx context.Context) LookupUserPoolRiskConfigurationAttachmentResultOutput {
	return o
}

// The settings for automated responses and notification templates for adaptive authentication with advanced security features.
func (o LookupUserPoolRiskConfigurationAttachmentResultOutput) AccountTakeoverRiskConfiguration() UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput {
	return o.ApplyT(func(v LookupUserPoolRiskConfigurationAttachmentResult) *UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType {
		return v.AccountTakeoverRiskConfiguration
	}).(UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypePtrOutput)
}

// Settings for compromised-credentials actions and authentication types with advanced security features in full-function `ENFORCED` mode.
func (o LookupUserPoolRiskConfigurationAttachmentResultOutput) CompromisedCredentialsRiskConfiguration() UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput {
	return o.ApplyT(func(v LookupUserPoolRiskConfigurationAttachmentResult) *UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType {
		return v.CompromisedCredentialsRiskConfiguration
	}).(UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypePtrOutput)
}

// Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
func (o LookupUserPoolRiskConfigurationAttachmentResultOutput) RiskExceptionConfiguration() UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput {
	return o.ApplyT(func(v LookupUserPoolRiskConfigurationAttachmentResult) *UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType {
		return v.RiskExceptionConfiguration
	}).(UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserPoolRiskConfigurationAttachmentResultOutput{})
}
