// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::UserPoolClient
func LookupUserPoolClient(ctx *pulumi.Context, args *LookupUserPoolClientArgs, opts ...pulumi.InvokeOption) (*LookupUserPoolClientResult, error) {
	var rv LookupUserPoolClientResult
	err := ctx.Invoke("aws-native:cognito:getUserPoolClient", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserPoolClientArgs struct {
	Id string `pulumi:"id"`
}

type LookupUserPoolClientResult struct {
	AccessTokenValidity             *int                                  `pulumi:"accessTokenValidity"`
	AllowedOAuthFlows               []string                              `pulumi:"allowedOAuthFlows"`
	AllowedOAuthFlowsUserPoolClient *bool                                 `pulumi:"allowedOAuthFlowsUserPoolClient"`
	AllowedOAuthScopes              []string                              `pulumi:"allowedOAuthScopes"`
	AnalyticsConfiguration          *UserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfiguration"`
	CallbackURLs                    []string                              `pulumi:"callbackURLs"`
	ClientName                      *string                               `pulumi:"clientName"`
	ClientSecret                    *string                               `pulumi:"clientSecret"`
	DefaultRedirectURI              *string                               `pulumi:"defaultRedirectURI"`
	EnableTokenRevocation           *bool                                 `pulumi:"enableTokenRevocation"`
	ExplicitAuthFlows               []string                              `pulumi:"explicitAuthFlows"`
	Id                              *string                               `pulumi:"id"`
	IdTokenValidity                 *int                                  `pulumi:"idTokenValidity"`
	LogoutURLs                      []string                              `pulumi:"logoutURLs"`
	Name                            *string                               `pulumi:"name"`
	PreventUserExistenceErrors      *string                               `pulumi:"preventUserExistenceErrors"`
	ReadAttributes                  []string                              `pulumi:"readAttributes"`
	RefreshTokenValidity            *int                                  `pulumi:"refreshTokenValidity"`
	SupportedIdentityProviders      []string                              `pulumi:"supportedIdentityProviders"`
	TokenValidityUnits              *UserPoolClientTokenValidityUnits     `pulumi:"tokenValidityUnits"`
	WriteAttributes                 []string                              `pulumi:"writeAttributes"`
}

func LookupUserPoolClientOutput(ctx *pulumi.Context, args LookupUserPoolClientOutputArgs, opts ...pulumi.InvokeOption) LookupUserPoolClientResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserPoolClientResult, error) {
			args := v.(LookupUserPoolClientArgs)
			r, err := LookupUserPoolClient(ctx, &args, opts...)
			var s LookupUserPoolClientResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserPoolClientResultOutput)
}

type LookupUserPoolClientOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupUserPoolClientOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolClientArgs)(nil)).Elem()
}

type LookupUserPoolClientResultOutput struct{ *pulumi.OutputState }

func (LookupUserPoolClientResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolClientResult)(nil)).Elem()
}

func (o LookupUserPoolClientResultOutput) ToLookupUserPoolClientResultOutput() LookupUserPoolClientResultOutput {
	return o
}

func (o LookupUserPoolClientResultOutput) ToLookupUserPoolClientResultOutputWithContext(ctx context.Context) LookupUserPoolClientResultOutput {
	return o
}

func (o LookupUserPoolClientResultOutput) AccessTokenValidity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *int { return v.AccessTokenValidity }).(pulumi.IntPtrOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOAuthFlows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.AllowedOAuthFlows }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOAuthFlowsUserPoolClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *bool { return v.AllowedOAuthFlowsUserPoolClient }).(pulumi.BoolPtrOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOAuthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.AllowedOAuthScopes }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) AnalyticsConfiguration() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *UserPoolClientAnalyticsConfiguration {
		return v.AnalyticsConfiguration
	}).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

func (o LookupUserPoolClientResultOutput) CallbackURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.CallbackURLs }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) ClientName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.ClientName }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) DefaultRedirectURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.DefaultRedirectURI }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) EnableTokenRevocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *bool { return v.EnableTokenRevocation }).(pulumi.BoolPtrOutput)
}

func (o LookupUserPoolClientResultOutput) ExplicitAuthFlows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.ExplicitAuthFlows }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) IdTokenValidity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *int { return v.IdTokenValidity }).(pulumi.IntPtrOutput)
}

func (o LookupUserPoolClientResultOutput) LogoutURLs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.LogoutURLs }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) PreventUserExistenceErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *string { return v.PreventUserExistenceErrors }).(pulumi.StringPtrOutput)
}

func (o LookupUserPoolClientResultOutput) ReadAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.ReadAttributes }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) RefreshTokenValidity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *int { return v.RefreshTokenValidity }).(pulumi.IntPtrOutput)
}

func (o LookupUserPoolClientResultOutput) SupportedIdentityProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.SupportedIdentityProviders }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) TokenValidityUnits() UserPoolClientTokenValidityUnitsPtrOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) *UserPoolClientTokenValidityUnits { return v.TokenValidityUnits }).(UserPoolClientTokenValidityUnitsPtrOutput)
}

func (o LookupUserPoolClientResultOutput) WriteAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.WriteAttributes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserPoolClientResultOutput{})
}
