// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::ManagedLoginBranding
type ManagedLoginBranding struct {
	pulumi.CustomResourceState

	Assets                 ManagedLoginBrandingAssetTypeArrayOutput `pulumi:"assets"`
	ClientId               pulumi.StringPtrOutput                   `pulumi:"clientId"`
	ManagedLoginBrandingId pulumi.StringOutput                      `pulumi:"managedLoginBrandingId"`
	ReturnMergedResources  pulumi.BoolPtrOutput                     `pulumi:"returnMergedResources"`
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property.
	Settings                 pulumi.AnyOutput     `pulumi:"settings"`
	UseCognitoProvidedValues pulumi.BoolPtrOutput `pulumi:"useCognitoProvidedValues"`
	UserPoolId               pulumi.StringOutput  `pulumi:"userPoolId"`
}

// NewManagedLoginBranding registers a new resource with the given unique name, arguments, and options.
func NewManagedLoginBranding(ctx *pulumi.Context,
	name string, args *ManagedLoginBrandingArgs, opts ...pulumi.ResourceOption) (*ManagedLoginBranding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"clientId",
		"userPoolId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedLoginBranding
	err := ctx.RegisterResource("aws-native:cognito:ManagedLoginBranding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedLoginBranding gets an existing ManagedLoginBranding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedLoginBranding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedLoginBrandingState, opts ...pulumi.ResourceOption) (*ManagedLoginBranding, error) {
	var resource ManagedLoginBranding
	err := ctx.ReadResource("aws-native:cognito:ManagedLoginBranding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedLoginBranding resources.
type managedLoginBrandingState struct {
}

type ManagedLoginBrandingState struct {
}

func (ManagedLoginBrandingState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedLoginBrandingState)(nil)).Elem()
}

type managedLoginBrandingArgs struct {
	Assets                []ManagedLoginBrandingAssetType `pulumi:"assets"`
	ClientId              *string                         `pulumi:"clientId"`
	ReturnMergedResources *bool                           `pulumi:"returnMergedResources"`
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property.
	Settings                 interface{} `pulumi:"settings"`
	UseCognitoProvidedValues *bool       `pulumi:"useCognitoProvidedValues"`
	UserPoolId               string      `pulumi:"userPoolId"`
}

// The set of arguments for constructing a ManagedLoginBranding resource.
type ManagedLoginBrandingArgs struct {
	Assets                ManagedLoginBrandingAssetTypeArrayInput
	ClientId              pulumi.StringPtrInput
	ReturnMergedResources pulumi.BoolPtrInput
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property.
	Settings                 pulumi.Input
	UseCognitoProvidedValues pulumi.BoolPtrInput
	UserPoolId               pulumi.StringInput
}

func (ManagedLoginBrandingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedLoginBrandingArgs)(nil)).Elem()
}

type ManagedLoginBrandingInput interface {
	pulumi.Input

	ToManagedLoginBrandingOutput() ManagedLoginBrandingOutput
	ToManagedLoginBrandingOutputWithContext(ctx context.Context) ManagedLoginBrandingOutput
}

func (*ManagedLoginBranding) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedLoginBranding)(nil)).Elem()
}

func (i *ManagedLoginBranding) ToManagedLoginBrandingOutput() ManagedLoginBrandingOutput {
	return i.ToManagedLoginBrandingOutputWithContext(context.Background())
}

func (i *ManagedLoginBranding) ToManagedLoginBrandingOutputWithContext(ctx context.Context) ManagedLoginBrandingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedLoginBrandingOutput)
}

type ManagedLoginBrandingOutput struct{ *pulumi.OutputState }

func (ManagedLoginBrandingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedLoginBranding)(nil)).Elem()
}

func (o ManagedLoginBrandingOutput) ToManagedLoginBrandingOutput() ManagedLoginBrandingOutput {
	return o
}

func (o ManagedLoginBrandingOutput) ToManagedLoginBrandingOutputWithContext(ctx context.Context) ManagedLoginBrandingOutput {
	return o
}

func (o ManagedLoginBrandingOutput) Assets() ManagedLoginBrandingAssetTypeArrayOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) ManagedLoginBrandingAssetTypeArrayOutput { return v.Assets }).(ManagedLoginBrandingAssetTypeArrayOutput)
}

func (o ManagedLoginBrandingOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ManagedLoginBrandingOutput) ManagedLoginBrandingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.StringOutput { return v.ManagedLoginBrandingId }).(pulumi.StringOutput)
}

func (o ManagedLoginBrandingOutput) ReturnMergedResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.BoolPtrOutput { return v.ReturnMergedResources }).(pulumi.BoolPtrOutput)
}

// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::ManagedLoginBranding` for more information about the expected schema for this property.
func (o ManagedLoginBrandingOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.AnyOutput { return v.Settings }).(pulumi.AnyOutput)
}

func (o ManagedLoginBrandingOutput) UseCognitoProvidedValues() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.BoolPtrOutput { return v.UseCognitoProvidedValues }).(pulumi.BoolPtrOutput)
}

func (o ManagedLoginBrandingOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedLoginBranding) pulumi.StringOutput { return v.UserPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedLoginBrandingInput)(nil)).Elem(), &ManagedLoginBranding{})
	pulumi.RegisterOutputType(ManagedLoginBrandingOutput{})
}
