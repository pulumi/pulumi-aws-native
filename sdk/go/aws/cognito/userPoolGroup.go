// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Cognito::UserPoolGroup
type UserPoolGroup struct {
	pulumi.CustomResourceState

	// A string containing the description of the group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the group. Must be unique.
	GroupName pulumi.StringPtrOutput `pulumi:"groupName"`
	// A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
	//
	// Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
	//
	// The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
	Precedence pulumi.IntPtrOutput `pulumi:"precedence"`
	// The role Amazon Resource Name (ARN) for the group.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// The user pool ID for the user pool.
	UserPoolId pulumi.StringOutput `pulumi:"userPoolId"`
}

// NewUserPoolGroup registers a new resource with the given unique name, arguments, and options.
func NewUserPoolGroup(ctx *pulumi.Context,
	name string, args *UserPoolGroupArgs, opts ...pulumi.ResourceOption) (*UserPoolGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"groupName",
		"userPoolId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserPoolGroup
	err := ctx.RegisterResource("aws-native:cognito:UserPoolGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolGroup gets an existing UserPoolGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolGroupState, opts ...pulumi.ResourceOption) (*UserPoolGroup, error) {
	var resource UserPoolGroup
	err := ctx.ReadResource("aws-native:cognito:UserPoolGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolGroup resources.
type userPoolGroupState struct {
}

type UserPoolGroupState struct {
}

func (UserPoolGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolGroupState)(nil)).Elem()
}

type userPoolGroupArgs struct {
	// A string containing the description of the group.
	Description *string `pulumi:"description"`
	// The name of the group. Must be unique.
	GroupName *string `pulumi:"groupName"`
	// A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
	//
	// Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
	//
	// The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
	Precedence *int `pulumi:"precedence"`
	// The role Amazon Resource Name (ARN) for the group.
	RoleArn *string `pulumi:"roleArn"`
	// The user pool ID for the user pool.
	UserPoolId string `pulumi:"userPoolId"`
}

// The set of arguments for constructing a UserPoolGroup resource.
type UserPoolGroupArgs struct {
	// A string containing the description of the group.
	Description pulumi.StringPtrInput
	// The name of the group. Must be unique.
	GroupName pulumi.StringPtrInput
	// A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
	//
	// Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
	//
	// The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
	Precedence pulumi.IntPtrInput
	// The role Amazon Resource Name (ARN) for the group.
	RoleArn pulumi.StringPtrInput
	// The user pool ID for the user pool.
	UserPoolId pulumi.StringInput
}

func (UserPoolGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolGroupArgs)(nil)).Elem()
}

type UserPoolGroupInput interface {
	pulumi.Input

	ToUserPoolGroupOutput() UserPoolGroupOutput
	ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput
}

func (*UserPoolGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolGroup)(nil)).Elem()
}

func (i *UserPoolGroup) ToUserPoolGroupOutput() UserPoolGroupOutput {
	return i.ToUserPoolGroupOutputWithContext(context.Background())
}

func (i *UserPoolGroup) ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolGroupOutput)
}

type UserPoolGroupOutput struct{ *pulumi.OutputState }

func (UserPoolGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolGroup)(nil)).Elem()
}

func (o UserPoolGroupOutput) ToUserPoolGroupOutput() UserPoolGroupOutput {
	return o
}

func (o UserPoolGroupOutput) ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput {
	return o
}

// A string containing the description of the group.
func (o UserPoolGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the group. Must be unique.
func (o UserPoolGroupOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolGroup) pulumi.StringPtrOutput { return v.GroupName }).(pulumi.StringPtrOutput)
}

// A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
//
// Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
//
// The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
func (o UserPoolGroupOutput) Precedence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolGroup) pulumi.IntPtrOutput { return v.Precedence }).(pulumi.IntPtrOutput)
}

// The role Amazon Resource Name (ARN) for the group.
func (o UserPoolGroupOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolGroup) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The user pool ID for the user pool.
func (o UserPoolGroupOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserPoolGroup) pulumi.StringOutput { return v.UserPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolGroupInput)(nil)).Elem(), &UserPoolGroup{})
	pulumi.RegisterOutputType(UserPoolGroupOutput{})
}
