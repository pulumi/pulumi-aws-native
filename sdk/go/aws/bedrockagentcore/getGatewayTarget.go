// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type
func LookupGatewayTarget(ctx *pulumi.Context, args *LookupGatewayTargetArgs, opts ...pulumi.InvokeOption) (*LookupGatewayTargetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayTargetResult
	err := ctx.Invoke("aws-native:bedrockagentcore:getGatewayTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayTargetArgs struct {
	// The gateway ID for the gateway target.
	GatewayIdentifier string `pulumi:"gatewayIdentifier"`
	// The target ID for the gateway target.
	TargetId string `pulumi:"targetId"`
}

type LookupGatewayTargetResult struct {
	// The date and time at which the gateway target was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The OAuth credential provider configuration.
	CredentialProviderConfigurations []GatewayTargetCredentialProviderConfiguration `pulumi:"credentialProviderConfigurations"`
	// The description for the gateway target.
	Description *string `pulumi:"description"`
	GatewayArn  *string `pulumi:"gatewayArn"`
	// The name for the gateway target.
	Name *string `pulumi:"name"`
	// The status for the gateway target.
	Status *GatewayTargetTargetStatus `pulumi:"status"`
	// The status reasons for the gateway target.
	StatusReasons []string `pulumi:"statusReasons"`
	// The target configuration for the Smithy model target.
	TargetConfiguration *GatewayTargetTargetConfigurationProperties `pulumi:"targetConfiguration"`
	// The target ID for the gateway target.
	TargetId *string `pulumi:"targetId"`
	// The time at which the resource was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupGatewayTargetOutput(ctx *pulumi.Context, args LookupGatewayTargetOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayTargetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGatewayTargetResultOutput, error) {
			args := v.(LookupGatewayTargetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:bedrockagentcore:getGatewayTarget", args, LookupGatewayTargetResultOutput{}, options).(LookupGatewayTargetResultOutput), nil
		}).(LookupGatewayTargetResultOutput)
}

type LookupGatewayTargetOutputArgs struct {
	// The gateway ID for the gateway target.
	GatewayIdentifier pulumi.StringInput `pulumi:"gatewayIdentifier"`
	// The target ID for the gateway target.
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (LookupGatewayTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayTargetArgs)(nil)).Elem()
}

type LookupGatewayTargetResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayTargetResult)(nil)).Elem()
}

func (o LookupGatewayTargetResultOutput) ToLookupGatewayTargetResultOutput() LookupGatewayTargetResultOutput {
	return o
}

func (o LookupGatewayTargetResultOutput) ToLookupGatewayTargetResultOutputWithContext(ctx context.Context) LookupGatewayTargetResultOutput {
	return o
}

// The date and time at which the gateway target was created.
func (o LookupGatewayTargetResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The OAuth credential provider configuration.
func (o LookupGatewayTargetResultOutput) CredentialProviderConfigurations() GatewayTargetCredentialProviderConfigurationArrayOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) []GatewayTargetCredentialProviderConfiguration {
		return v.CredentialProviderConfigurations
	}).(GatewayTargetCredentialProviderConfigurationArrayOutput)
}

// The description for the gateway target.
func (o LookupGatewayTargetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayTargetResultOutput) GatewayArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.GatewayArn }).(pulumi.StringPtrOutput)
}

// The name for the gateway target.
func (o LookupGatewayTargetResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status for the gateway target.
func (o LookupGatewayTargetResultOutput) Status() GatewayTargetTargetStatusPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *GatewayTargetTargetStatus { return v.Status }).(GatewayTargetTargetStatusPtrOutput)
}

// The status reasons for the gateway target.
func (o LookupGatewayTargetResultOutput) StatusReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) []string { return v.StatusReasons }).(pulumi.StringArrayOutput)
}

// The target configuration for the Smithy model target.
func (o LookupGatewayTargetResultOutput) TargetConfiguration() GatewayTargetTargetConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *GatewayTargetTargetConfigurationProperties {
		return v.TargetConfiguration
	}).(GatewayTargetTargetConfigurationPropertiesPtrOutput)
}

// The target ID for the gateway target.
func (o LookupGatewayTargetResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The time at which the resource was updated.
func (o LookupGatewayTargetResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayTargetResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayTargetResultOutput{})
}
