// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::BedrockAgentCore::Runtime
type Runtime struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name(ARN) that uniquely identifies the Agent
	AgentRuntimeArn pulumi.StringOutput `pulumi:"agentRuntimeArn"`
	// The artifact of the agent
	AgentRuntimeArtifact RuntimeAgentRuntimeArtifactOutput `pulumi:"agentRuntimeArtifact"`
	// Identifier for a resource
	AgentRuntimeId pulumi.StringOutput `pulumi:"agentRuntimeId"`
	// Name for a resource
	AgentRuntimeName pulumi.StringOutput `pulumi:"agentRuntimeName"`
	// Version of the Agent
	AgentRuntimeVersion pulumi.StringOutput `pulumi:"agentRuntimeVersion"`
	// Authorizer configuration for the agent runtime
	AuthorizerConfiguration RuntimeAuthorizerConfigurationPtrOutput `pulumi:"authorizerConfiguration"`
	// Timestamp when the Agent was created
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the resource
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Environment variables for the agent runtime
	EnvironmentVariables pulumi.StringMapOutput `pulumi:"environmentVariables"`
	// When resource was last updated
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// Network access configuration for the Agent
	NetworkConfiguration RuntimeNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// Protocol configuration for the agent runtime
	ProtocolConfiguration RuntimeProtocolConfigurationPtrOutput `pulumi:"protocolConfiguration"`
	// Amazon Resource Name (ARN) of an IAM role
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// Current status of the agent
	Status RuntimeAgentStatusOutput `pulumi:"status"`
	// The tags for the agent.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Workload identity details for the agent
	WorkloadIdentityDetails RuntimeWorkloadIdentityDetailsOutput `pulumi:"workloadIdentityDetails"`
}

// NewRuntime registers a new resource with the given unique name, arguments, and options.
func NewRuntime(ctx *pulumi.Context,
	name string, args *RuntimeArgs, opts ...pulumi.ResourceOption) (*Runtime, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentRuntimeArtifact == nil {
		return nil, errors.New("invalid value for required argument 'AgentRuntimeArtifact'")
	}
	if args.AgentRuntimeName == nil {
		return nil, errors.New("invalid value for required argument 'AgentRuntimeName'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"agentRuntimeName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Runtime
	err := ctx.RegisterResource("aws-native:bedrockagentcore:Runtime", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuntime gets an existing Runtime resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuntime(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuntimeState, opts ...pulumi.ResourceOption) (*Runtime, error) {
	var resource Runtime
	err := ctx.ReadResource("aws-native:bedrockagentcore:Runtime", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Runtime resources.
type runtimeState struct {
}

type RuntimeState struct {
}

func (RuntimeState) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeState)(nil)).Elem()
}

type runtimeArgs struct {
	// The artifact of the agent
	AgentRuntimeArtifact RuntimeAgentRuntimeArtifact `pulumi:"agentRuntimeArtifact"`
	// Name for a resource
	AgentRuntimeName string `pulumi:"agentRuntimeName"`
	// Authorizer configuration for the agent runtime
	AuthorizerConfiguration *RuntimeAuthorizerConfiguration `pulumi:"authorizerConfiguration"`
	// Description of the resource
	Description *string `pulumi:"description"`
	// Environment variables for the agent runtime
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Network access configuration for the Agent
	NetworkConfiguration RuntimeNetworkConfiguration `pulumi:"networkConfiguration"`
	// Protocol configuration for the agent runtime
	ProtocolConfiguration *RuntimeProtocolConfiguration `pulumi:"protocolConfiguration"`
	// Amazon Resource Name (ARN) of an IAM role
	RoleArn string `pulumi:"roleArn"`
	// The tags for the agent.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Runtime resource.
type RuntimeArgs struct {
	// The artifact of the agent
	AgentRuntimeArtifact RuntimeAgentRuntimeArtifactInput
	// Name for a resource
	AgentRuntimeName pulumi.StringInput
	// Authorizer configuration for the agent runtime
	AuthorizerConfiguration RuntimeAuthorizerConfigurationPtrInput
	// Description of the resource
	Description pulumi.StringPtrInput
	// Environment variables for the agent runtime
	EnvironmentVariables pulumi.StringMapInput
	// Network access configuration for the Agent
	NetworkConfiguration RuntimeNetworkConfigurationInput
	// Protocol configuration for the agent runtime
	ProtocolConfiguration RuntimeProtocolConfigurationPtrInput
	// Amazon Resource Name (ARN) of an IAM role
	RoleArn pulumi.StringInput
	// The tags for the agent.
	Tags pulumi.StringMapInput
}

func (RuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeArgs)(nil)).Elem()
}

type RuntimeInput interface {
	pulumi.Input

	ToRuntimeOutput() RuntimeOutput
	ToRuntimeOutputWithContext(ctx context.Context) RuntimeOutput
}

func (*Runtime) ElementType() reflect.Type {
	return reflect.TypeOf((**Runtime)(nil)).Elem()
}

func (i *Runtime) ToRuntimeOutput() RuntimeOutput {
	return i.ToRuntimeOutputWithContext(context.Background())
}

func (i *Runtime) ToRuntimeOutputWithContext(ctx context.Context) RuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeOutput)
}

type RuntimeOutput struct{ *pulumi.OutputState }

func (RuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Runtime)(nil)).Elem()
}

func (o RuntimeOutput) ToRuntimeOutput() RuntimeOutput {
	return o
}

func (o RuntimeOutput) ToRuntimeOutputWithContext(ctx context.Context) RuntimeOutput {
	return o
}

// The Amazon Resource Name(ARN) that uniquely identifies the Agent
func (o RuntimeOutput) AgentRuntimeArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.AgentRuntimeArn }).(pulumi.StringOutput)
}

// The artifact of the agent
func (o RuntimeOutput) AgentRuntimeArtifact() RuntimeAgentRuntimeArtifactOutput {
	return o.ApplyT(func(v *Runtime) RuntimeAgentRuntimeArtifactOutput { return v.AgentRuntimeArtifact }).(RuntimeAgentRuntimeArtifactOutput)
}

// Identifier for a resource
func (o RuntimeOutput) AgentRuntimeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.AgentRuntimeId }).(pulumi.StringOutput)
}

// Name for a resource
func (o RuntimeOutput) AgentRuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.AgentRuntimeName }).(pulumi.StringOutput)
}

// Version of the Agent
func (o RuntimeOutput) AgentRuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.AgentRuntimeVersion }).(pulumi.StringOutput)
}

// Authorizer configuration for the agent runtime
func (o RuntimeOutput) AuthorizerConfiguration() RuntimeAuthorizerConfigurationPtrOutput {
	return o.ApplyT(func(v *Runtime) RuntimeAuthorizerConfigurationPtrOutput { return v.AuthorizerConfiguration }).(RuntimeAuthorizerConfigurationPtrOutput)
}

// Timestamp when the Agent was created
func (o RuntimeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the resource
func (o RuntimeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Environment variables for the agent runtime
func (o RuntimeOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// When resource was last updated
func (o RuntimeOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// Network access configuration for the Agent
func (o RuntimeOutput) NetworkConfiguration() RuntimeNetworkConfigurationOutput {
	return o.ApplyT(func(v *Runtime) RuntimeNetworkConfigurationOutput { return v.NetworkConfiguration }).(RuntimeNetworkConfigurationOutput)
}

// Protocol configuration for the agent runtime
func (o RuntimeOutput) ProtocolConfiguration() RuntimeProtocolConfigurationPtrOutput {
	return o.ApplyT(func(v *Runtime) RuntimeProtocolConfigurationPtrOutput { return v.ProtocolConfiguration }).(RuntimeProtocolConfigurationPtrOutput)
}

// Amazon Resource Name (ARN) of an IAM role
func (o RuntimeOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// Current status of the agent
func (o RuntimeOutput) Status() RuntimeAgentStatusOutput {
	return o.ApplyT(func(v *Runtime) RuntimeAgentStatusOutput { return v.Status }).(RuntimeAgentStatusOutput)
}

// The tags for the agent.
func (o RuntimeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Runtime) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Workload identity details for the agent
func (o RuntimeOutput) WorkloadIdentityDetails() RuntimeWorkloadIdentityDetailsOutput {
	return o.ApplyT(func(v *Runtime) RuntimeWorkloadIdentityDetailsOutput { return v.WorkloadIdentityDetails }).(RuntimeWorkloadIdentityDetailsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuntimeInput)(nil)).Elem(), &Runtime{})
	pulumi.RegisterOutputType(RuntimeOutput{})
}
