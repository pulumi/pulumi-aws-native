// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::BedrockAgentCore::Memory
func LookupMemory(ctx *pulumi.Context, args *LookupMemoryArgs, opts ...pulumi.InvokeOption) (*LookupMemoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMemoryResult
	err := ctx.Invoke("aws-native:bedrockagentcore:getMemory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMemoryArgs struct {
	MemoryArn string `pulumi:"memoryArn"`
}

type LookupMemoryResult struct {
	CreatedAt *string `pulumi:"createdAt"`
	// The memory description.
	Description *string `pulumi:"description"`
	// Duration in days until memory events expire
	EventExpiryDuration *int    `pulumi:"eventExpiryDuration"`
	FailureReason       *string `pulumi:"failureReason"`
	MemoryArn           *string `pulumi:"memoryArn"`
	// The memory role ARN.
	MemoryExecutionRoleArn *string `pulumi:"memoryExecutionRoleArn"`
	// The memory ID.
	MemoryId *string `pulumi:"memoryId"`
	// The memory strategies.
	MemoryStrategies []MemoryStrategy `pulumi:"memoryStrategies"`
	// The memory status.
	Status *MemoryStatus `pulumi:"status"`
	// The tags for the resources.
	Tags      map[string]string `pulumi:"tags"`
	UpdatedAt *string           `pulumi:"updatedAt"`
}

func LookupMemoryOutput(ctx *pulumi.Context, args LookupMemoryOutputArgs, opts ...pulumi.InvokeOption) LookupMemoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMemoryResultOutput, error) {
			args := v.(LookupMemoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:bedrockagentcore:getMemory", args, LookupMemoryResultOutput{}, options).(LookupMemoryResultOutput), nil
		}).(LookupMemoryResultOutput)
}

type LookupMemoryOutputArgs struct {
	MemoryArn pulumi.StringInput `pulumi:"memoryArn"`
}

func (LookupMemoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemoryArgs)(nil)).Elem()
}

type LookupMemoryResultOutput struct{ *pulumi.OutputState }

func (LookupMemoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemoryResult)(nil)).Elem()
}

func (o LookupMemoryResultOutput) ToLookupMemoryResultOutput() LookupMemoryResultOutput {
	return o
}

func (o LookupMemoryResultOutput) ToLookupMemoryResultOutputWithContext(ctx context.Context) LookupMemoryResultOutput {
	return o
}

func (o LookupMemoryResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The memory description.
func (o LookupMemoryResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Duration in days until memory events expire
func (o LookupMemoryResultOutput) EventExpiryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *int { return v.EventExpiryDuration }).(pulumi.IntPtrOutput)
}

func (o LookupMemoryResultOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

func (o LookupMemoryResultOutput) MemoryArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.MemoryArn }).(pulumi.StringPtrOutput)
}

// The memory role ARN.
func (o LookupMemoryResultOutput) MemoryExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.MemoryExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// The memory ID.
func (o LookupMemoryResultOutput) MemoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.MemoryId }).(pulumi.StringPtrOutput)
}

// The memory strategies.
func (o LookupMemoryResultOutput) MemoryStrategies() MemoryStrategyArrayOutput {
	return o.ApplyT(func(v LookupMemoryResult) []MemoryStrategy { return v.MemoryStrategies }).(MemoryStrategyArrayOutput)
}

// The memory status.
func (o LookupMemoryResultOutput) Status() MemoryStatusPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *MemoryStatus { return v.Status }).(MemoryStatusPtrOutput)
}

// The tags for the resources.
func (o LookupMemoryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMemoryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupMemoryResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemoryResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMemoryResultOutput{})
}
