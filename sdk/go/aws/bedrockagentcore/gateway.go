// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::BedrockAgentCore::Gateway Resource Type
type Gateway struct {
	pulumi.CustomResourceState

	AuthorizerConfiguration GatewayAuthorizerConfigurationPropertiesPtrOutput `pulumi:"authorizerConfiguration"`
	AuthorizerType          GatewayAuthorizerTypeOutput                       `pulumi:"authorizerType"`
	CreatedAt               pulumi.StringOutput                               `pulumi:"createdAt"`
	Description             pulumi.StringPtrOutput                            `pulumi:"description"`
	ExceptionLevel          GatewayExceptionLevelPtrOutput                    `pulumi:"exceptionLevel"`
	GatewayArn              pulumi.StringOutput                               `pulumi:"gatewayArn"`
	GatewayIdentifier       pulumi.StringOutput                               `pulumi:"gatewayIdentifier"`
	GatewayUrl              pulumi.StringOutput                               `pulumi:"gatewayUrl"`
	KmsKeyArn               pulumi.StringPtrOutput                            `pulumi:"kmsKeyArn"`
	Name                    pulumi.StringOutput                               `pulumi:"name"`
	ProtocolConfiguration   GatewayProtocolConfigurationPropertiesPtrOutput   `pulumi:"protocolConfiguration"`
	ProtocolType            GatewayProtocolTypeOutput                         `pulumi:"protocolType"`
	RoleArn                 pulumi.StringOutput                               `pulumi:"roleArn"`
	Status                  GatewayStatusOutput                               `pulumi:"status"`
	StatusReasons           pulumi.StringArrayOutput                          `pulumi:"statusReasons"`
	// The tags for the gateway.
	Tags                    pulumi.StringMapOutput               `pulumi:"tags"`
	UpdatedAt               pulumi.StringOutput                  `pulumi:"updatedAt"`
	WorkloadIdentityDetails GatewayWorkloadIdentityDetailsOutput `pulumi:"workloadIdentityDetails"`
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOption) (*Gateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizerType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizerType'")
	}
	if args.ProtocolType == nil {
		return nil, errors.New("invalid value for required argument 'ProtocolType'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Gateway
	err := ctx.RegisterResource("aws-native:bedrockagentcore:Gateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayState, opts ...pulumi.ResourceOption) (*Gateway, error) {
	var resource Gateway
	err := ctx.ReadResource("aws-native:bedrockagentcore:Gateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Gateway resources.
type gatewayState struct {
}

type GatewayState struct {
}

func (GatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayState)(nil)).Elem()
}

type gatewayArgs struct {
	AuthorizerConfiguration *GatewayAuthorizerConfigurationProperties `pulumi:"authorizerConfiguration"`
	AuthorizerType          GatewayAuthorizerType                     `pulumi:"authorizerType"`
	Description             *string                                   `pulumi:"description"`
	ExceptionLevel          *GatewayExceptionLevel                    `pulumi:"exceptionLevel"`
	KmsKeyArn               *string                                   `pulumi:"kmsKeyArn"`
	Name                    *string                                   `pulumi:"name"`
	ProtocolConfiguration   *GatewayProtocolConfigurationProperties   `pulumi:"protocolConfiguration"`
	ProtocolType            GatewayProtocolType                       `pulumi:"protocolType"`
	RoleArn                 string                                    `pulumi:"roleArn"`
	// The tags for the gateway.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	AuthorizerConfiguration GatewayAuthorizerConfigurationPropertiesPtrInput
	AuthorizerType          GatewayAuthorizerTypeInput
	Description             pulumi.StringPtrInput
	ExceptionLevel          GatewayExceptionLevelPtrInput
	KmsKeyArn               pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	ProtocolConfiguration   GatewayProtocolConfigurationPropertiesPtrInput
	ProtocolType            GatewayProtocolTypeInput
	RoleArn                 pulumi.StringInput
	// The tags for the gateway.
	Tags pulumi.StringMapInput
}

func (GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayArgs)(nil)).Elem()
}

type GatewayInput interface {
	pulumi.Input

	ToGatewayOutput() GatewayOutput
	ToGatewayOutputWithContext(ctx context.Context) GatewayOutput
}

func (*Gateway) ElementType() reflect.Type {
	return reflect.TypeOf((**Gateway)(nil)).Elem()
}

func (i *Gateway) ToGatewayOutput() GatewayOutput {
	return i.ToGatewayOutputWithContext(context.Background())
}

func (i *Gateway) ToGatewayOutputWithContext(ctx context.Context) GatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOutput)
}

type GatewayOutput struct{ *pulumi.OutputState }

func (GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Gateway)(nil)).Elem()
}

func (o GatewayOutput) ToGatewayOutput() GatewayOutput {
	return o
}

func (o GatewayOutput) ToGatewayOutputWithContext(ctx context.Context) GatewayOutput {
	return o
}

func (o GatewayOutput) AuthorizerConfiguration() GatewayAuthorizerConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *Gateway) GatewayAuthorizerConfigurationPropertiesPtrOutput { return v.AuthorizerConfiguration }).(GatewayAuthorizerConfigurationPropertiesPtrOutput)
}

func (o GatewayOutput) AuthorizerType() GatewayAuthorizerTypeOutput {
	return o.ApplyT(func(v *Gateway) GatewayAuthorizerTypeOutput { return v.AuthorizerType }).(GatewayAuthorizerTypeOutput)
}

func (o GatewayOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GatewayOutput) ExceptionLevel() GatewayExceptionLevelPtrOutput {
	return o.ApplyT(func(v *Gateway) GatewayExceptionLevelPtrOutput { return v.ExceptionLevel }).(GatewayExceptionLevelPtrOutput)
}

func (o GatewayOutput) GatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.GatewayArn }).(pulumi.StringOutput)
}

func (o GatewayOutput) GatewayIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.GatewayIdentifier }).(pulumi.StringOutput)
}

func (o GatewayOutput) GatewayUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.GatewayUrl }).(pulumi.StringOutput)
}

func (o GatewayOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o GatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GatewayOutput) ProtocolConfiguration() GatewayProtocolConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *Gateway) GatewayProtocolConfigurationPropertiesPtrOutput { return v.ProtocolConfiguration }).(GatewayProtocolConfigurationPropertiesPtrOutput)
}

func (o GatewayOutput) ProtocolType() GatewayProtocolTypeOutput {
	return o.ApplyT(func(v *Gateway) GatewayProtocolTypeOutput { return v.ProtocolType }).(GatewayProtocolTypeOutput)
}

func (o GatewayOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o GatewayOutput) Status() GatewayStatusOutput {
	return o.ApplyT(func(v *Gateway) GatewayStatusOutput { return v.Status }).(GatewayStatusOutput)
}

func (o GatewayOutput) StatusReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringArrayOutput { return v.StatusReasons }).(pulumi.StringArrayOutput)
}

// The tags for the gateway.
func (o GatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GatewayOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GatewayOutput) WorkloadIdentityDetails() GatewayWorkloadIdentityDetailsOutput {
	return o.ApplyT(func(v *Gateway) GatewayWorkloadIdentityDetailsOutput { return v.WorkloadIdentityDetails }).(GatewayWorkloadIdentityDetailsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayInput)(nil)).Elem(), &Gateway{})
	pulumi.RegisterOutputType(GatewayOutput{})
}
