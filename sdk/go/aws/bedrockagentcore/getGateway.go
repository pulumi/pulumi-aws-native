// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::BedrockAgentCore::Gateway Resource Type
func LookupGateway(ctx *pulumi.Context, args *LookupGatewayArgs, opts ...pulumi.InvokeOption) (*LookupGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayResult
	err := ctx.Invoke("aws-native:bedrockagentcore:getGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayArgs struct {
	GatewayIdentifier string `pulumi:"gatewayIdentifier"`
}

type LookupGatewayResult struct {
	AuthorizerConfiguration *GatewayAuthorizerConfigurationProperties `pulumi:"authorizerConfiguration"`
	// The authorizer type for the gateway.
	AuthorizerType *GatewayAuthorizerType `pulumi:"authorizerType"`
	// The date and time at which the gateway was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description for the gateway.
	Description *string `pulumi:"description"`
	// The exception level for the gateway.
	ExceptionLevel *GatewayExceptionLevel `pulumi:"exceptionLevel"`
	// The ARN for the gateway.
	GatewayArn        *string `pulumi:"gatewayArn"`
	GatewayIdentifier *string `pulumi:"gatewayIdentifier"`
	// The gateway URL for the gateway.
	GatewayUrl *string `pulumi:"gatewayUrl"`
	// The KMS key ARN for the gateway.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The name for the gateway.
	Name *string `pulumi:"name"`
	// The protocol configuration for the gateway target.
	ProtocolConfiguration *GatewayProtocolConfigurationProperties `pulumi:"protocolConfiguration"`
	// The protocol type for the gateway target.
	ProtocolType *GatewayProtocolType `pulumi:"protocolType"`
	RoleArn      *string              `pulumi:"roleArn"`
	// The status for the gateway.
	Status *GatewayStatus `pulumi:"status"`
	// The status reasons for the gateway.
	StatusReasons []string `pulumi:"statusReasons"`
	// The tags for the gateway.
	Tags                    map[string]string               `pulumi:"tags"`
	UpdatedAt               *string                         `pulumi:"updatedAt"`
	WorkloadIdentityDetails *GatewayWorkloadIdentityDetails `pulumi:"workloadIdentityDetails"`
}

func LookupGatewayOutput(ctx *pulumi.Context, args LookupGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGatewayResultOutput, error) {
			args := v.(LookupGatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:bedrockagentcore:getGateway", args, LookupGatewayResultOutput{}, options).(LookupGatewayResultOutput), nil
		}).(LookupGatewayResultOutput)
}

type LookupGatewayOutputArgs struct {
	GatewayIdentifier pulumi.StringInput `pulumi:"gatewayIdentifier"`
}

func (LookupGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayArgs)(nil)).Elem()
}

type LookupGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayResult)(nil)).Elem()
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutput() LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutputWithContext(ctx context.Context) LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) AuthorizerConfiguration() GatewayAuthorizerConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayAuthorizerConfigurationProperties {
		return v.AuthorizerConfiguration
	}).(GatewayAuthorizerConfigurationPropertiesPtrOutput)
}

// The authorizer type for the gateway.
func (o LookupGatewayResultOutput) AuthorizerType() GatewayAuthorizerTypePtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayAuthorizerType { return v.AuthorizerType }).(GatewayAuthorizerTypePtrOutput)
}

// The date and time at which the gateway was created.
func (o LookupGatewayResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The description for the gateway.
func (o LookupGatewayResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The exception level for the gateway.
func (o LookupGatewayResultOutput) ExceptionLevel() GatewayExceptionLevelPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayExceptionLevel { return v.ExceptionLevel }).(GatewayExceptionLevelPtrOutput)
}

// The ARN for the gateway.
func (o LookupGatewayResultOutput) GatewayArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.GatewayArn }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayResultOutput) GatewayIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.GatewayIdentifier }).(pulumi.StringPtrOutput)
}

// The gateway URL for the gateway.
func (o LookupGatewayResultOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.GatewayUrl }).(pulumi.StringPtrOutput)
}

// The KMS key ARN for the gateway.
func (o LookupGatewayResultOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The name for the gateway.
func (o LookupGatewayResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol configuration for the gateway target.
func (o LookupGatewayResultOutput) ProtocolConfiguration() GatewayProtocolConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayProtocolConfigurationProperties { return v.ProtocolConfiguration }).(GatewayProtocolConfigurationPropertiesPtrOutput)
}

// The protocol type for the gateway target.
func (o LookupGatewayResultOutput) ProtocolType() GatewayProtocolTypePtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayProtocolType { return v.ProtocolType }).(GatewayProtocolTypePtrOutput)
}

func (o LookupGatewayResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The status for the gateway.
func (o LookupGatewayResultOutput) Status() GatewayStatusPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayStatus { return v.Status }).(GatewayStatusPtrOutput)
}

// The status reasons for the gateway.
func (o LookupGatewayResultOutput) StatusReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []string { return v.StatusReasons }).(pulumi.StringArrayOutput)
}

// The tags for the gateway.
func (o LookupGatewayResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGatewayResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupGatewayResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupGatewayResultOutput) WorkloadIdentityDetails() GatewayWorkloadIdentityDetailsPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *GatewayWorkloadIdentityDetails { return v.WorkloadIdentityDetails }).(GatewayWorkloadIdentityDetailsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayResultOutput{})
}
