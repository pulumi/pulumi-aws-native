// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockagentcore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::BedrockAgentCore::Memory
type Memory struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The memory description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The memory encryption key Amazon Resource Name (ARN).
	EncryptionKeyArn pulumi.StringPtrOutput `pulumi:"encryptionKeyArn"`
	// Duration in days until memory events expire
	EventExpiryDuration pulumi.IntOutput    `pulumi:"eventExpiryDuration"`
	FailureReason       pulumi.StringOutput `pulumi:"failureReason"`
	MemoryArn           pulumi.StringOutput `pulumi:"memoryArn"`
	// The memory role ARN.
	MemoryExecutionRoleArn pulumi.StringPtrOutput `pulumi:"memoryExecutionRoleArn"`
	// The memory ID.
	MemoryId pulumi.StringOutput `pulumi:"memoryId"`
	// The memory strategies.
	MemoryStrategies MemoryStrategyArrayOutput `pulumi:"memoryStrategies"`
	// The memory name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The memory status.
	Status MemoryStatusOutput `pulumi:"status"`
	// The tags for the resources.
	Tags      pulumi.StringMapOutput `pulumi:"tags"`
	UpdatedAt pulumi.StringOutput    `pulumi:"updatedAt"`
}

// NewMemory registers a new resource with the given unique name, arguments, and options.
func NewMemory(ctx *pulumi.Context,
	name string, args *MemoryArgs, opts ...pulumi.ResourceOption) (*Memory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EventExpiryDuration == nil {
		return nil, errors.New("invalid value for required argument 'EventExpiryDuration'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"encryptionKeyArn",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Memory
	err := ctx.RegisterResource("aws-native:bedrockagentcore:Memory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMemory gets an existing Memory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMemory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemoryState, opts ...pulumi.ResourceOption) (*Memory, error) {
	var resource Memory
	err := ctx.ReadResource("aws-native:bedrockagentcore:Memory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Memory resources.
type memoryState struct {
}

type MemoryState struct {
}

func (MemoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*memoryState)(nil)).Elem()
}

type memoryArgs struct {
	// The memory description.
	Description *string `pulumi:"description"`
	// The memory encryption key Amazon Resource Name (ARN).
	EncryptionKeyArn *string `pulumi:"encryptionKeyArn"`
	// Duration in days until memory events expire
	EventExpiryDuration int `pulumi:"eventExpiryDuration"`
	// The memory role ARN.
	MemoryExecutionRoleArn *string `pulumi:"memoryExecutionRoleArn"`
	// The memory strategies.
	MemoryStrategies []MemoryStrategy `pulumi:"memoryStrategies"`
	// The memory name.
	Name *string `pulumi:"name"`
	// The tags for the resources.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Memory resource.
type MemoryArgs struct {
	// The memory description.
	Description pulumi.StringPtrInput
	// The memory encryption key Amazon Resource Name (ARN).
	EncryptionKeyArn pulumi.StringPtrInput
	// Duration in days until memory events expire
	EventExpiryDuration pulumi.IntInput
	// The memory role ARN.
	MemoryExecutionRoleArn pulumi.StringPtrInput
	// The memory strategies.
	MemoryStrategies MemoryStrategyArrayInput
	// The memory name.
	Name pulumi.StringPtrInput
	// The tags for the resources.
	Tags pulumi.StringMapInput
}

func (MemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memoryArgs)(nil)).Elem()
}

type MemoryInput interface {
	pulumi.Input

	ToMemoryOutput() MemoryOutput
	ToMemoryOutputWithContext(ctx context.Context) MemoryOutput
}

func (*Memory) ElementType() reflect.Type {
	return reflect.TypeOf((**Memory)(nil)).Elem()
}

func (i *Memory) ToMemoryOutput() MemoryOutput {
	return i.ToMemoryOutputWithContext(context.Background())
}

func (i *Memory) ToMemoryOutputWithContext(ctx context.Context) MemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemoryOutput)
}

type MemoryOutput struct{ *pulumi.OutputState }

func (MemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Memory)(nil)).Elem()
}

func (o MemoryOutput) ToMemoryOutput() MemoryOutput {
	return o
}

func (o MemoryOutput) ToMemoryOutputWithContext(ctx context.Context) MemoryOutput {
	return o
}

func (o MemoryOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The memory description.
func (o MemoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The memory encryption key Amazon Resource Name (ARN).
func (o MemoryOutput) EncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringPtrOutput { return v.EncryptionKeyArn }).(pulumi.StringPtrOutput)
}

// Duration in days until memory events expire
func (o MemoryOutput) EventExpiryDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *Memory) pulumi.IntOutput { return v.EventExpiryDuration }).(pulumi.IntOutput)
}

func (o MemoryOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.FailureReason }).(pulumi.StringOutput)
}

func (o MemoryOutput) MemoryArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.MemoryArn }).(pulumi.StringOutput)
}

// The memory role ARN.
func (o MemoryOutput) MemoryExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringPtrOutput { return v.MemoryExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// The memory ID.
func (o MemoryOutput) MemoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.MemoryId }).(pulumi.StringOutput)
}

// The memory strategies.
func (o MemoryOutput) MemoryStrategies() MemoryStrategyArrayOutput {
	return o.ApplyT(func(v *Memory) MemoryStrategyArrayOutput { return v.MemoryStrategies }).(MemoryStrategyArrayOutput)
}

// The memory name.
func (o MemoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The memory status.
func (o MemoryOutput) Status() MemoryStatusOutput {
	return o.ApplyT(func(v *Memory) MemoryStatusOutput { return v.Status }).(MemoryStatusOutput)
}

// The tags for the resources.
func (o MemoryOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o MemoryOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Memory) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MemoryInput)(nil)).Elem(), &Memory{})
	pulumi.RegisterOutputType(MemoryOutput{})
}
