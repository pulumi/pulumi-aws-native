// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func Cidr(ctx *pulumi.Context, args *CidrArgs, opts ...pulumi.InvokeOption) (*CidrResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv CidrResult
	err := ctx.Invoke("aws-native:index:cidr", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type CidrArgs struct {
	CidrBits int    `pulumi:"cidrBits"`
	Count    int    `pulumi:"count"`
	IpBlock  string `pulumi:"ipBlock"`
}

type CidrResult struct {
	Subnets []string `pulumi:"subnets"`
}

func CidrOutput(ctx *pulumi.Context, args CidrOutputArgs, opts ...pulumi.InvokeOption) CidrResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (CidrResultOutput, error) {
			args := v.(CidrArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:index:cidr", args, CidrResultOutput{}, options).(CidrResultOutput), nil
		}).(CidrResultOutput)
}

type CidrOutputArgs struct {
	CidrBits pulumi.IntInput    `pulumi:"cidrBits"`
	Count    pulumi.IntInput    `pulumi:"count"`
	IpBlock  pulumi.StringInput `pulumi:"ipBlock"`
}

func (CidrOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrArgs)(nil)).Elem()
}

type CidrResultOutput struct{ *pulumi.OutputState }

func (CidrResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CidrResult)(nil)).Elem()
}

func (o CidrResultOutput) ToCidrResultOutput() CidrResultOutput {
	return o
}

func (o CidrResultOutput) ToCidrResultOutputWithContext(ctx context.Context) CidrResultOutput {
	return o
}

func (o CidrResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CidrResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(CidrResultOutput{})
}
