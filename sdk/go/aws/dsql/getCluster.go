// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dsql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::DSQL::Cluster
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("aws-native:dsql:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	// The ID of the created cluster.
	Identifier string `pulumi:"identifier"`
}

type LookupClusterResult struct {
	// The time of when the cluster was created in ISO-8601 format.
	CreationTime *string `pulumi:"creationTime"`
	// Whether deletion protection is enabled in this cluster.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// The ID of the created cluster.
	Identifier *string `pulumi:"identifier"`
	// The Multi-region properties associated to this cluster.
	MultiRegionProperties *MultiRegionPropertiesProperties `pulumi:"multiRegionProperties"`
	// The Amazon Resource Name (ARN) for the cluster.
	ResourceArn *string `pulumi:"resourceArn"`
	// The status of the cluster.
	Status *string `pulumi:"status"`
	// A map of key and value pairs this cluster is tagged with.
	Tags []aws.Tag `pulumi:"tags"`
	// The VPC endpoint service name.
	VpcEndpointServiceName *string `pulumi:"vpcEndpointServiceName"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:dsql:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	// The ID of the created cluster.
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// The time of when the cluster was created in ISO-8601 format.
func (o LookupClusterResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// Whether deletion protection is enabled in this cluster.
func (o LookupClusterResultOutput) DeletionProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *bool { return v.DeletionProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the created cluster.
func (o LookupClusterResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// The Multi-region properties associated to this cluster.
func (o LookupClusterResultOutput) MultiRegionProperties() MultiRegionPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *MultiRegionPropertiesProperties { return v.MultiRegionProperties }).(MultiRegionPropertiesPropertiesPtrOutput)
}

// The Amazon Resource Name (ARN) for the cluster.
func (o LookupClusterResultOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

// The status of the cluster.
func (o LookupClusterResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A map of key and value pairs this cluster is tagged with.
func (o LookupClusterResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The VPC endpoint service name.
func (o LookupClusterResultOutput) VpcEndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.VpcEndpointServiceName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
