// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gameliftstreams

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::GameLiftStreams::StreamGroup Resource Type
func LookupStreamGroup(ctx *pulumi.Context, args *LookupStreamGroupArgs, opts ...pulumi.InvokeOption) (*LookupStreamGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamGroupResult
	err := ctx.Invoke("aws-native:gameliftstreams:getStreamGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStreamGroupArgs struct {
	// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the stream group resource. For example: `arn:aws:gameliftstreams:us-west-2:123456789012:streamgroup/sg-1AB2C3De4` .
	Arn string `pulumi:"arn"`
}

type LookupStreamGroupResult struct {
	// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the stream group resource. For example: `arn:aws:gameliftstreams:us-west-2:123456789012:streamgroup/sg-1AB2C3De4` .
	Arn *string `pulumi:"arn"`
	// Object that identifies the Amazon GameLift Streams application to stream with this stream group.
	DefaultApplication *StreamGroupDefaultApplication `pulumi:"defaultApplication"`
	// A descriptive label for the stream group.
	Description *string `pulumi:"description"`
	// An ID that uniquely identifies the stream group resource. For example: `sg-1AB2C3De4` .
	Id *string `pulumi:"id"`
	// A set of one or more locations and the streaming capacity for each location. One of the locations MUST be your primary location, which is the AWS Region where you are specifying this resource.
	LocationConfigurations []StreamGroupLocationConfiguration `pulumi:"locationConfigurations"`
	// A list of labels to assign to the new stream group resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management and cost allocation. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *AWS General Reference* .
	Tags map[string]string `pulumi:"tags"`
}

func LookupStreamGroupOutput(ctx *pulumi.Context, args LookupStreamGroupOutputArgs, opts ...pulumi.InvokeOption) LookupStreamGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamGroupResultOutput, error) {
			args := v.(LookupStreamGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:gameliftstreams:getStreamGroup", args, LookupStreamGroupResultOutput{}, options).(LookupStreamGroupResultOutput), nil
		}).(LookupStreamGroupResultOutput)
}

type LookupStreamGroupOutputArgs struct {
	// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the stream group resource. For example: `arn:aws:gameliftstreams:us-west-2:123456789012:streamgroup/sg-1AB2C3De4` .
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupStreamGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamGroupArgs)(nil)).Elem()
}

type LookupStreamGroupResultOutput struct{ *pulumi.OutputState }

func (LookupStreamGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamGroupResult)(nil)).Elem()
}

func (o LookupStreamGroupResultOutput) ToLookupStreamGroupResultOutput() LookupStreamGroupResultOutput {
	return o
}

func (o LookupStreamGroupResultOutput) ToLookupStreamGroupResultOutputWithContext(ctx context.Context) LookupStreamGroupResultOutput {
	return o
}

// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the stream group resource. For example: `arn:aws:gameliftstreams:us-west-2:123456789012:streamgroup/sg-1AB2C3De4` .
func (o LookupStreamGroupResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Object that identifies the Amazon GameLift Streams application to stream with this stream group.
func (o LookupStreamGroupResultOutput) DefaultApplication() StreamGroupDefaultApplicationPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *StreamGroupDefaultApplication { return v.DefaultApplication }).(StreamGroupDefaultApplicationPtrOutput)
}

// A descriptive label for the stream group.
func (o LookupStreamGroupResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An ID that uniquely identifies the stream group resource. For example: `sg-1AB2C3De4` .
func (o LookupStreamGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A set of one or more locations and the streaming capacity for each location. One of the locations MUST be your primary location, which is the AWS Region where you are specifying this resource.
func (o LookupStreamGroupResultOutput) LocationConfigurations() StreamGroupLocationConfigurationArrayOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) []StreamGroupLocationConfiguration { return v.LocationConfigurations }).(StreamGroupLocationConfigurationArrayOutput)
}

// A list of labels to assign to the new stream group resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management and cost allocation. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *AWS General Reference* .
func (o LookupStreamGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamGroupResultOutput{})
}
