// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gameliftstreams

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::GameLiftStreams::StreamGroup Resource Type
func LookupStreamGroup(ctx *pulumi.Context, args *LookupStreamGroupArgs, opts ...pulumi.InvokeOption) (*LookupStreamGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStreamGroupResult
	err := ctx.Invoke("aws-native:gameliftstreams:getStreamGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStreamGroupArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupStreamGroupResult struct {
	Arn                    *string                            `pulumi:"arn"`
	DefaultApplication     *StreamGroupDefaultApplication     `pulumi:"defaultApplication"`
	Description            *string                            `pulumi:"description"`
	Id                     *string                            `pulumi:"id"`
	LocationConfigurations []StreamGroupLocationConfiguration `pulumi:"locationConfigurations"`
	Tags                   map[string]string                  `pulumi:"tags"`
}

func LookupStreamGroupOutput(ctx *pulumi.Context, args LookupStreamGroupOutputArgs, opts ...pulumi.InvokeOption) LookupStreamGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupStreamGroupResultOutput, error) {
			args := v.(LookupStreamGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:gameliftstreams:getStreamGroup", args, LookupStreamGroupResultOutput{}, options).(LookupStreamGroupResultOutput), nil
		}).(LookupStreamGroupResultOutput)
}

type LookupStreamGroupOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupStreamGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamGroupArgs)(nil)).Elem()
}

type LookupStreamGroupResultOutput struct{ *pulumi.OutputState }

func (LookupStreamGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStreamGroupResult)(nil)).Elem()
}

func (o LookupStreamGroupResultOutput) ToLookupStreamGroupResultOutput() LookupStreamGroupResultOutput {
	return o
}

func (o LookupStreamGroupResultOutput) ToLookupStreamGroupResultOutputWithContext(ctx context.Context) LookupStreamGroupResultOutput {
	return o
}

func (o LookupStreamGroupResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupStreamGroupResultOutput) DefaultApplication() StreamGroupDefaultApplicationPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *StreamGroupDefaultApplication { return v.DefaultApplication }).(StreamGroupDefaultApplicationPtrOutput)
}

func (o LookupStreamGroupResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupStreamGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupStreamGroupResultOutput) LocationConfigurations() StreamGroupLocationConfigurationArrayOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) []StreamGroupLocationConfiguration { return v.LocationConfigurations }).(StreamGroupLocationConfigurationArrayOutput)
}

func (o LookupStreamGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStreamGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStreamGroupResultOutput{})
}
