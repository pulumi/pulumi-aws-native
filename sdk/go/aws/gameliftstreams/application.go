// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gameliftstreams

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::GameLiftStreams::Application Resource Type
type Application struct {
	pulumi.CustomResourceState

	ApplicationLogOutputUri pulumi.StringPtrOutput              `pulumi:"applicationLogOutputUri"`
	ApplicationLogPaths     pulumi.StringArrayOutput            `pulumi:"applicationLogPaths"`
	ApplicationSourceUri    pulumi.StringOutput                 `pulumi:"applicationSourceUri"`
	Arn                     pulumi.StringOutput                 `pulumi:"arn"`
	AwsId                   pulumi.StringOutput                 `pulumi:"awsId"`
	Description             pulumi.StringOutput                 `pulumi:"description"`
	ExecutablePath          pulumi.StringOutput                 `pulumi:"executablePath"`
	RuntimeEnvironment      ApplicationRuntimeEnvironmentOutput `pulumi:"runtimeEnvironment"`
	Tags                    pulumi.StringMapOutput              `pulumi:"tags"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationSourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationSourceUri'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ExecutablePath == nil {
		return nil, errors.New("invalid value for required argument 'ExecutablePath'")
	}
	if args.RuntimeEnvironment == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeEnvironment'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationSourceUri",
		"executablePath",
		"runtimeEnvironment",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws-native:gameliftstreams:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws-native:gameliftstreams:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	ApplicationLogOutputUri *string                       `pulumi:"applicationLogOutputUri"`
	ApplicationLogPaths     []string                      `pulumi:"applicationLogPaths"`
	ApplicationSourceUri    string                        `pulumi:"applicationSourceUri"`
	Description             string                        `pulumi:"description"`
	ExecutablePath          string                        `pulumi:"executablePath"`
	RuntimeEnvironment      ApplicationRuntimeEnvironment `pulumi:"runtimeEnvironment"`
	Tags                    map[string]string             `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	ApplicationLogOutputUri pulumi.StringPtrInput
	ApplicationLogPaths     pulumi.StringArrayInput
	ApplicationSourceUri    pulumi.StringInput
	Description             pulumi.StringInput
	ExecutablePath          pulumi.StringInput
	RuntimeEnvironment      ApplicationRuntimeEnvironmentInput
	Tags                    pulumi.StringMapInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ApplicationLogOutputUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.ApplicationLogOutputUri }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) ApplicationLogPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.ApplicationLogPaths }).(pulumi.StringArrayOutput)
}

func (o ApplicationOutput) ApplicationSourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationSourceUri }).(pulumi.StringOutput)
}

func (o ApplicationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ApplicationOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o ApplicationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o ApplicationOutput) ExecutablePath() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ExecutablePath }).(pulumi.StringOutput)
}

func (o ApplicationOutput) RuntimeEnvironment() ApplicationRuntimeEnvironmentOutput {
	return o.ApplyT(func(v *Application) ApplicationRuntimeEnvironmentOutput { return v.RuntimeEnvironment }).(ApplicationRuntimeEnvironmentOutput)
}

func (o ApplicationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Application) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterOutputType(ApplicationOutput{})
}
