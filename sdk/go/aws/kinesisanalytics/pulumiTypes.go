// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationCSVMappingParameters struct {
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	RecordRowDelimiter    string `pulumi:"recordRowDelimiter"`
}

// ApplicationCSVMappingParametersInput is an input type that accepts ApplicationCSVMappingParametersArgs and ApplicationCSVMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationCSVMappingParametersInput` via:
//
//          ApplicationCSVMappingParametersArgs{...}
type ApplicationCSVMappingParametersInput interface {
	pulumi.Input

	ToApplicationCSVMappingParametersOutput() ApplicationCSVMappingParametersOutput
	ToApplicationCSVMappingParametersOutputWithContext(context.Context) ApplicationCSVMappingParametersOutput
}

type ApplicationCSVMappingParametersArgs struct {
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	RecordRowDelimiter    pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (ApplicationCSVMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCSVMappingParameters)(nil)).Elem()
}

func (i ApplicationCSVMappingParametersArgs) ToApplicationCSVMappingParametersOutput() ApplicationCSVMappingParametersOutput {
	return i.ToApplicationCSVMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationCSVMappingParametersArgs) ToApplicationCSVMappingParametersOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCSVMappingParametersOutput)
}

func (i ApplicationCSVMappingParametersArgs) ToApplicationCSVMappingParametersPtrOutput() ApplicationCSVMappingParametersPtrOutput {
	return i.ToApplicationCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationCSVMappingParametersArgs) ToApplicationCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCSVMappingParametersOutput).ToApplicationCSVMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationCSVMappingParametersPtrInput is an input type that accepts ApplicationCSVMappingParametersArgs, ApplicationCSVMappingParametersPtr and ApplicationCSVMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationCSVMappingParametersPtrInput` via:
//
//          ApplicationCSVMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationCSVMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationCSVMappingParametersPtrOutput() ApplicationCSVMappingParametersPtrOutput
	ToApplicationCSVMappingParametersPtrOutputWithContext(context.Context) ApplicationCSVMappingParametersPtrOutput
}

type applicationCSVMappingParametersPtrType ApplicationCSVMappingParametersArgs

func ApplicationCSVMappingParametersPtr(v *ApplicationCSVMappingParametersArgs) ApplicationCSVMappingParametersPtrInput {
	return (*applicationCSVMappingParametersPtrType)(v)
}

func (*applicationCSVMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationCSVMappingParameters)(nil)).Elem()
}

func (i *applicationCSVMappingParametersPtrType) ToApplicationCSVMappingParametersPtrOutput() ApplicationCSVMappingParametersPtrOutput {
	return i.ToApplicationCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationCSVMappingParametersPtrType) ToApplicationCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCSVMappingParametersPtrOutput)
}

type ApplicationCSVMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationCSVMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCSVMappingParameters)(nil)).Elem()
}

func (o ApplicationCSVMappingParametersOutput) ToApplicationCSVMappingParametersOutput() ApplicationCSVMappingParametersOutput {
	return o
}

func (o ApplicationCSVMappingParametersOutput) ToApplicationCSVMappingParametersOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersOutput {
	return o
}

func (o ApplicationCSVMappingParametersOutput) ToApplicationCSVMappingParametersPtrOutput() ApplicationCSVMappingParametersPtrOutput {
	return o.ToApplicationCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationCSVMappingParametersOutput) ToApplicationCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationCSVMappingParameters) *ApplicationCSVMappingParameters {
		return &v
	}).(ApplicationCSVMappingParametersPtrOutput)
}

func (o ApplicationCSVMappingParametersOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationCSVMappingParameters) string { return v.RecordColumnDelimiter }).(pulumi.StringOutput)
}

func (o ApplicationCSVMappingParametersOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationCSVMappingParameters) string { return v.RecordRowDelimiter }).(pulumi.StringOutput)
}

type ApplicationCSVMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationCSVMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationCSVMappingParameters)(nil)).Elem()
}

func (o ApplicationCSVMappingParametersPtrOutput) ToApplicationCSVMappingParametersPtrOutput() ApplicationCSVMappingParametersPtrOutput {
	return o
}

func (o ApplicationCSVMappingParametersPtrOutput) ToApplicationCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationCSVMappingParametersPtrOutput {
	return o
}

func (o ApplicationCSVMappingParametersPtrOutput) Elem() ApplicationCSVMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationCSVMappingParameters) ApplicationCSVMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationCSVMappingParameters
		return ret
	}).(ApplicationCSVMappingParametersOutput)
}

func (o ApplicationCSVMappingParametersPtrOutput) RecordColumnDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationCSVMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordColumnDelimiter
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationCSVMappingParametersPtrOutput) RecordRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationCSVMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowDelimiter
	}).(pulumi.StringPtrOutput)
}

type ApplicationInputType struct {
	InputParallelism             *ApplicationInputParallelism             `pulumi:"inputParallelism"`
	InputProcessingConfiguration *ApplicationInputProcessingConfiguration `pulumi:"inputProcessingConfiguration"`
	InputSchema                  ApplicationInputSchema                   `pulumi:"inputSchema"`
	KinesisFirehoseInput         *ApplicationKinesisFirehoseInput         `pulumi:"kinesisFirehoseInput"`
	KinesisStreamsInput          *ApplicationKinesisStreamsInput          `pulumi:"kinesisStreamsInput"`
	NamePrefix                   string                                   `pulumi:"namePrefix"`
}

// ApplicationInputTypeInput is an input type that accepts ApplicationInputTypeArgs and ApplicationInputTypeOutput values.
// You can construct a concrete instance of `ApplicationInputTypeInput` via:
//
//          ApplicationInputTypeArgs{...}
type ApplicationInputTypeInput interface {
	pulumi.Input

	ToApplicationInputTypeOutput() ApplicationInputTypeOutput
	ToApplicationInputTypeOutputWithContext(context.Context) ApplicationInputTypeOutput
}

type ApplicationInputTypeArgs struct {
	InputParallelism             ApplicationInputParallelismPtrInput             `pulumi:"inputParallelism"`
	InputProcessingConfiguration ApplicationInputProcessingConfigurationPtrInput `pulumi:"inputProcessingConfiguration"`
	InputSchema                  ApplicationInputSchemaInput                     `pulumi:"inputSchema"`
	KinesisFirehoseInput         ApplicationKinesisFirehoseInputPtrInput         `pulumi:"kinesisFirehoseInput"`
	KinesisStreamsInput          ApplicationKinesisStreamsInputPtrInput          `pulumi:"kinesisStreamsInput"`
	NamePrefix                   pulumi.StringInput                              `pulumi:"namePrefix"`
}

func (ApplicationInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputType)(nil)).Elem()
}

func (i ApplicationInputTypeArgs) ToApplicationInputTypeOutput() ApplicationInputTypeOutput {
	return i.ToApplicationInputTypeOutputWithContext(context.Background())
}

func (i ApplicationInputTypeArgs) ToApplicationInputTypeOutputWithContext(ctx context.Context) ApplicationInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputTypeOutput)
}

// ApplicationInputTypeArrayInput is an input type that accepts ApplicationInputTypeArray and ApplicationInputTypeArrayOutput values.
// You can construct a concrete instance of `ApplicationInputTypeArrayInput` via:
//
//          ApplicationInputTypeArray{ ApplicationInputTypeArgs{...} }
type ApplicationInputTypeArrayInput interface {
	pulumi.Input

	ToApplicationInputTypeArrayOutput() ApplicationInputTypeArrayOutput
	ToApplicationInputTypeArrayOutputWithContext(context.Context) ApplicationInputTypeArrayOutput
}

type ApplicationInputTypeArray []ApplicationInputTypeInput

func (ApplicationInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInputType)(nil)).Elem()
}

func (i ApplicationInputTypeArray) ToApplicationInputTypeArrayOutput() ApplicationInputTypeArrayOutput {
	return i.ToApplicationInputTypeArrayOutputWithContext(context.Background())
}

func (i ApplicationInputTypeArray) ToApplicationInputTypeArrayOutputWithContext(ctx context.Context) ApplicationInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputTypeArrayOutput)
}

type ApplicationInputTypeOutput struct{ *pulumi.OutputState }

func (ApplicationInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputType)(nil)).Elem()
}

func (o ApplicationInputTypeOutput) ToApplicationInputTypeOutput() ApplicationInputTypeOutput {
	return o
}

func (o ApplicationInputTypeOutput) ToApplicationInputTypeOutputWithContext(ctx context.Context) ApplicationInputTypeOutput {
	return o
}

func (o ApplicationInputTypeOutput) InputParallelism() ApplicationInputParallelismPtrOutput {
	return o.ApplyT(func(v ApplicationInputType) *ApplicationInputParallelism { return v.InputParallelism }).(ApplicationInputParallelismPtrOutput)
}

func (o ApplicationInputTypeOutput) InputProcessingConfiguration() ApplicationInputProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationInputType) *ApplicationInputProcessingConfiguration {
		return v.InputProcessingConfiguration
	}).(ApplicationInputProcessingConfigurationPtrOutput)
}

func (o ApplicationInputTypeOutput) InputSchema() ApplicationInputSchemaOutput {
	return o.ApplyT(func(v ApplicationInputType) ApplicationInputSchema { return v.InputSchema }).(ApplicationInputSchemaOutput)
}

func (o ApplicationInputTypeOutput) KinesisFirehoseInput() ApplicationKinesisFirehoseInputPtrOutput {
	return o.ApplyT(func(v ApplicationInputType) *ApplicationKinesisFirehoseInput { return v.KinesisFirehoseInput }).(ApplicationKinesisFirehoseInputPtrOutput)
}

func (o ApplicationInputTypeOutput) KinesisStreamsInput() ApplicationKinesisStreamsInputPtrOutput {
	return o.ApplyT(func(v ApplicationInputType) *ApplicationKinesisStreamsInput { return v.KinesisStreamsInput }).(ApplicationKinesisStreamsInputPtrOutput)
}

func (o ApplicationInputTypeOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInputType) string { return v.NamePrefix }).(pulumi.StringOutput)
}

type ApplicationInputTypeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInputType)(nil)).Elem()
}

func (o ApplicationInputTypeArrayOutput) ToApplicationInputTypeArrayOutput() ApplicationInputTypeArrayOutput {
	return o
}

func (o ApplicationInputTypeArrayOutput) ToApplicationInputTypeArrayOutputWithContext(ctx context.Context) ApplicationInputTypeArrayOutput {
	return o
}

func (o ApplicationInputTypeArrayOutput) Index(i pulumi.IntInput) ApplicationInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationInputType {
		return vs[0].([]ApplicationInputType)[vs[1].(int)]
	}).(ApplicationInputTypeOutput)
}

type ApplicationInputLambdaProcessor struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationInputLambdaProcessorInput is an input type that accepts ApplicationInputLambdaProcessorArgs and ApplicationInputLambdaProcessorOutput values.
// You can construct a concrete instance of `ApplicationInputLambdaProcessorInput` via:
//
//          ApplicationInputLambdaProcessorArgs{...}
type ApplicationInputLambdaProcessorInput interface {
	pulumi.Input

	ToApplicationInputLambdaProcessorOutput() ApplicationInputLambdaProcessorOutput
	ToApplicationInputLambdaProcessorOutputWithContext(context.Context) ApplicationInputLambdaProcessorOutput
}

type ApplicationInputLambdaProcessorArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationInputLambdaProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputLambdaProcessor)(nil)).Elem()
}

func (i ApplicationInputLambdaProcessorArgs) ToApplicationInputLambdaProcessorOutput() ApplicationInputLambdaProcessorOutput {
	return i.ToApplicationInputLambdaProcessorOutputWithContext(context.Background())
}

func (i ApplicationInputLambdaProcessorArgs) ToApplicationInputLambdaProcessorOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputLambdaProcessorOutput)
}

func (i ApplicationInputLambdaProcessorArgs) ToApplicationInputLambdaProcessorPtrOutput() ApplicationInputLambdaProcessorPtrOutput {
	return i.ToApplicationInputLambdaProcessorPtrOutputWithContext(context.Background())
}

func (i ApplicationInputLambdaProcessorArgs) ToApplicationInputLambdaProcessorPtrOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputLambdaProcessorOutput).ToApplicationInputLambdaProcessorPtrOutputWithContext(ctx)
}

// ApplicationInputLambdaProcessorPtrInput is an input type that accepts ApplicationInputLambdaProcessorArgs, ApplicationInputLambdaProcessorPtr and ApplicationInputLambdaProcessorPtrOutput values.
// You can construct a concrete instance of `ApplicationInputLambdaProcessorPtrInput` via:
//
//          ApplicationInputLambdaProcessorArgs{...}
//
//  or:
//
//          nil
type ApplicationInputLambdaProcessorPtrInput interface {
	pulumi.Input

	ToApplicationInputLambdaProcessorPtrOutput() ApplicationInputLambdaProcessorPtrOutput
	ToApplicationInputLambdaProcessorPtrOutputWithContext(context.Context) ApplicationInputLambdaProcessorPtrOutput
}

type applicationInputLambdaProcessorPtrType ApplicationInputLambdaProcessorArgs

func ApplicationInputLambdaProcessorPtr(v *ApplicationInputLambdaProcessorArgs) ApplicationInputLambdaProcessorPtrInput {
	return (*applicationInputLambdaProcessorPtrType)(v)
}

func (*applicationInputLambdaProcessorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputLambdaProcessor)(nil)).Elem()
}

func (i *applicationInputLambdaProcessorPtrType) ToApplicationInputLambdaProcessorPtrOutput() ApplicationInputLambdaProcessorPtrOutput {
	return i.ToApplicationInputLambdaProcessorPtrOutputWithContext(context.Background())
}

func (i *applicationInputLambdaProcessorPtrType) ToApplicationInputLambdaProcessorPtrOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputLambdaProcessorPtrOutput)
}

type ApplicationInputLambdaProcessorOutput struct{ *pulumi.OutputState }

func (ApplicationInputLambdaProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputLambdaProcessor)(nil)).Elem()
}

func (o ApplicationInputLambdaProcessorOutput) ToApplicationInputLambdaProcessorOutput() ApplicationInputLambdaProcessorOutput {
	return o
}

func (o ApplicationInputLambdaProcessorOutput) ToApplicationInputLambdaProcessorOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorOutput {
	return o
}

func (o ApplicationInputLambdaProcessorOutput) ToApplicationInputLambdaProcessorPtrOutput() ApplicationInputLambdaProcessorPtrOutput {
	return o.ToApplicationInputLambdaProcessorPtrOutputWithContext(context.Background())
}

func (o ApplicationInputLambdaProcessorOutput) ToApplicationInputLambdaProcessorPtrOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInputLambdaProcessor) *ApplicationInputLambdaProcessor {
		return &v
	}).(ApplicationInputLambdaProcessorPtrOutput)
}

func (o ApplicationInputLambdaProcessorOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInputLambdaProcessor) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationInputLambdaProcessorOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInputLambdaProcessor) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationInputLambdaProcessorPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInputLambdaProcessorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputLambdaProcessor)(nil)).Elem()
}

func (o ApplicationInputLambdaProcessorPtrOutput) ToApplicationInputLambdaProcessorPtrOutput() ApplicationInputLambdaProcessorPtrOutput {
	return o
}

func (o ApplicationInputLambdaProcessorPtrOutput) ToApplicationInputLambdaProcessorPtrOutputWithContext(ctx context.Context) ApplicationInputLambdaProcessorPtrOutput {
	return o
}

func (o ApplicationInputLambdaProcessorPtrOutput) Elem() ApplicationInputLambdaProcessorOutput {
	return o.ApplyT(func(v *ApplicationInputLambdaProcessor) ApplicationInputLambdaProcessor {
		if v != nil {
			return *v
		}
		var ret ApplicationInputLambdaProcessor
		return ret
	}).(ApplicationInputLambdaProcessorOutput)
}

func (o ApplicationInputLambdaProcessorPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInputLambdaProcessor) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationInputLambdaProcessorPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInputLambdaProcessor) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationInputParallelism struct {
	Count *int `pulumi:"count"`
}

// ApplicationInputParallelismInput is an input type that accepts ApplicationInputParallelismArgs and ApplicationInputParallelismOutput values.
// You can construct a concrete instance of `ApplicationInputParallelismInput` via:
//
//          ApplicationInputParallelismArgs{...}
type ApplicationInputParallelismInput interface {
	pulumi.Input

	ToApplicationInputParallelismOutput() ApplicationInputParallelismOutput
	ToApplicationInputParallelismOutputWithContext(context.Context) ApplicationInputParallelismOutput
}

type ApplicationInputParallelismArgs struct {
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (ApplicationInputParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputParallelism)(nil)).Elem()
}

func (i ApplicationInputParallelismArgs) ToApplicationInputParallelismOutput() ApplicationInputParallelismOutput {
	return i.ToApplicationInputParallelismOutputWithContext(context.Background())
}

func (i ApplicationInputParallelismArgs) ToApplicationInputParallelismOutputWithContext(ctx context.Context) ApplicationInputParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputParallelismOutput)
}

func (i ApplicationInputParallelismArgs) ToApplicationInputParallelismPtrOutput() ApplicationInputParallelismPtrOutput {
	return i.ToApplicationInputParallelismPtrOutputWithContext(context.Background())
}

func (i ApplicationInputParallelismArgs) ToApplicationInputParallelismPtrOutputWithContext(ctx context.Context) ApplicationInputParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputParallelismOutput).ToApplicationInputParallelismPtrOutputWithContext(ctx)
}

// ApplicationInputParallelismPtrInput is an input type that accepts ApplicationInputParallelismArgs, ApplicationInputParallelismPtr and ApplicationInputParallelismPtrOutput values.
// You can construct a concrete instance of `ApplicationInputParallelismPtrInput` via:
//
//          ApplicationInputParallelismArgs{...}
//
//  or:
//
//          nil
type ApplicationInputParallelismPtrInput interface {
	pulumi.Input

	ToApplicationInputParallelismPtrOutput() ApplicationInputParallelismPtrOutput
	ToApplicationInputParallelismPtrOutputWithContext(context.Context) ApplicationInputParallelismPtrOutput
}

type applicationInputParallelismPtrType ApplicationInputParallelismArgs

func ApplicationInputParallelismPtr(v *ApplicationInputParallelismArgs) ApplicationInputParallelismPtrInput {
	return (*applicationInputParallelismPtrType)(v)
}

func (*applicationInputParallelismPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputParallelism)(nil)).Elem()
}

func (i *applicationInputParallelismPtrType) ToApplicationInputParallelismPtrOutput() ApplicationInputParallelismPtrOutput {
	return i.ToApplicationInputParallelismPtrOutputWithContext(context.Background())
}

func (i *applicationInputParallelismPtrType) ToApplicationInputParallelismPtrOutputWithContext(ctx context.Context) ApplicationInputParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputParallelismPtrOutput)
}

type ApplicationInputParallelismOutput struct{ *pulumi.OutputState }

func (ApplicationInputParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputParallelism)(nil)).Elem()
}

func (o ApplicationInputParallelismOutput) ToApplicationInputParallelismOutput() ApplicationInputParallelismOutput {
	return o
}

func (o ApplicationInputParallelismOutput) ToApplicationInputParallelismOutputWithContext(ctx context.Context) ApplicationInputParallelismOutput {
	return o
}

func (o ApplicationInputParallelismOutput) ToApplicationInputParallelismPtrOutput() ApplicationInputParallelismPtrOutput {
	return o.ToApplicationInputParallelismPtrOutputWithContext(context.Background())
}

func (o ApplicationInputParallelismOutput) ToApplicationInputParallelismPtrOutputWithContext(ctx context.Context) ApplicationInputParallelismPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInputParallelism) *ApplicationInputParallelism {
		return &v
	}).(ApplicationInputParallelismPtrOutput)
}

func (o ApplicationInputParallelismOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInputParallelism) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ApplicationInputParallelismPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInputParallelismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputParallelism)(nil)).Elem()
}

func (o ApplicationInputParallelismPtrOutput) ToApplicationInputParallelismPtrOutput() ApplicationInputParallelismPtrOutput {
	return o
}

func (o ApplicationInputParallelismPtrOutput) ToApplicationInputParallelismPtrOutputWithContext(ctx context.Context) ApplicationInputParallelismPtrOutput {
	return o
}

func (o ApplicationInputParallelismPtrOutput) Elem() ApplicationInputParallelismOutput {
	return o.ApplyT(func(v *ApplicationInputParallelism) ApplicationInputParallelism {
		if v != nil {
			return *v
		}
		var ret ApplicationInputParallelism
		return ret
	}).(ApplicationInputParallelismOutput)
}

func (o ApplicationInputParallelismPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInputParallelism) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type ApplicationInputProcessingConfiguration struct {
	InputLambdaProcessor *ApplicationInputLambdaProcessor `pulumi:"inputLambdaProcessor"`
}

// ApplicationInputProcessingConfigurationInput is an input type that accepts ApplicationInputProcessingConfigurationArgs and ApplicationInputProcessingConfigurationOutput values.
// You can construct a concrete instance of `ApplicationInputProcessingConfigurationInput` via:
//
//          ApplicationInputProcessingConfigurationArgs{...}
type ApplicationInputProcessingConfigurationInput interface {
	pulumi.Input

	ToApplicationInputProcessingConfigurationOutput() ApplicationInputProcessingConfigurationOutput
	ToApplicationInputProcessingConfigurationOutputWithContext(context.Context) ApplicationInputProcessingConfigurationOutput
}

type ApplicationInputProcessingConfigurationArgs struct {
	InputLambdaProcessor ApplicationInputLambdaProcessorPtrInput `pulumi:"inputLambdaProcessor"`
}

func (ApplicationInputProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputProcessingConfiguration)(nil)).Elem()
}

func (i ApplicationInputProcessingConfigurationArgs) ToApplicationInputProcessingConfigurationOutput() ApplicationInputProcessingConfigurationOutput {
	return i.ToApplicationInputProcessingConfigurationOutputWithContext(context.Background())
}

func (i ApplicationInputProcessingConfigurationArgs) ToApplicationInputProcessingConfigurationOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputProcessingConfigurationOutput)
}

func (i ApplicationInputProcessingConfigurationArgs) ToApplicationInputProcessingConfigurationPtrOutput() ApplicationInputProcessingConfigurationPtrOutput {
	return i.ToApplicationInputProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationInputProcessingConfigurationArgs) ToApplicationInputProcessingConfigurationPtrOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputProcessingConfigurationOutput).ToApplicationInputProcessingConfigurationPtrOutputWithContext(ctx)
}

// ApplicationInputProcessingConfigurationPtrInput is an input type that accepts ApplicationInputProcessingConfigurationArgs, ApplicationInputProcessingConfigurationPtr and ApplicationInputProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationInputProcessingConfigurationPtrInput` via:
//
//          ApplicationInputProcessingConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationInputProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationInputProcessingConfigurationPtrOutput() ApplicationInputProcessingConfigurationPtrOutput
	ToApplicationInputProcessingConfigurationPtrOutputWithContext(context.Context) ApplicationInputProcessingConfigurationPtrOutput
}

type applicationInputProcessingConfigurationPtrType ApplicationInputProcessingConfigurationArgs

func ApplicationInputProcessingConfigurationPtr(v *ApplicationInputProcessingConfigurationArgs) ApplicationInputProcessingConfigurationPtrInput {
	return (*applicationInputProcessingConfigurationPtrType)(v)
}

func (*applicationInputProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputProcessingConfiguration)(nil)).Elem()
}

func (i *applicationInputProcessingConfigurationPtrType) ToApplicationInputProcessingConfigurationPtrOutput() ApplicationInputProcessingConfigurationPtrOutput {
	return i.ToApplicationInputProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationInputProcessingConfigurationPtrType) ToApplicationInputProcessingConfigurationPtrOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputProcessingConfigurationPtrOutput)
}

type ApplicationInputProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationInputProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputProcessingConfiguration)(nil)).Elem()
}

func (o ApplicationInputProcessingConfigurationOutput) ToApplicationInputProcessingConfigurationOutput() ApplicationInputProcessingConfigurationOutput {
	return o
}

func (o ApplicationInputProcessingConfigurationOutput) ToApplicationInputProcessingConfigurationOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationOutput {
	return o
}

func (o ApplicationInputProcessingConfigurationOutput) ToApplicationInputProcessingConfigurationPtrOutput() ApplicationInputProcessingConfigurationPtrOutput {
	return o.ToApplicationInputProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationInputProcessingConfigurationOutput) ToApplicationInputProcessingConfigurationPtrOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInputProcessingConfiguration) *ApplicationInputProcessingConfiguration {
		return &v
	}).(ApplicationInputProcessingConfigurationPtrOutput)
}

func (o ApplicationInputProcessingConfigurationOutput) InputLambdaProcessor() ApplicationInputLambdaProcessorPtrOutput {
	return o.ApplyT(func(v ApplicationInputProcessingConfiguration) *ApplicationInputLambdaProcessor {
		return v.InputLambdaProcessor
	}).(ApplicationInputLambdaProcessorPtrOutput)
}

type ApplicationInputProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInputProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInputProcessingConfiguration)(nil)).Elem()
}

func (o ApplicationInputProcessingConfigurationPtrOutput) ToApplicationInputProcessingConfigurationPtrOutput() ApplicationInputProcessingConfigurationPtrOutput {
	return o
}

func (o ApplicationInputProcessingConfigurationPtrOutput) ToApplicationInputProcessingConfigurationPtrOutputWithContext(ctx context.Context) ApplicationInputProcessingConfigurationPtrOutput {
	return o
}

func (o ApplicationInputProcessingConfigurationPtrOutput) Elem() ApplicationInputProcessingConfigurationOutput {
	return o.ApplyT(func(v *ApplicationInputProcessingConfiguration) ApplicationInputProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationInputProcessingConfiguration
		return ret
	}).(ApplicationInputProcessingConfigurationOutput)
}

func (o ApplicationInputProcessingConfigurationPtrOutput) InputLambdaProcessor() ApplicationInputLambdaProcessorPtrOutput {
	return o.ApplyT(func(v *ApplicationInputProcessingConfiguration) *ApplicationInputLambdaProcessor {
		if v == nil {
			return nil
		}
		return v.InputLambdaProcessor
	}).(ApplicationInputLambdaProcessorPtrOutput)
}

type ApplicationInputSchema struct {
	RecordColumns  []ApplicationRecordColumn `pulumi:"recordColumns"`
	RecordEncoding *string                   `pulumi:"recordEncoding"`
	RecordFormat   ApplicationRecordFormat   `pulumi:"recordFormat"`
}

// ApplicationInputSchemaInput is an input type that accepts ApplicationInputSchemaArgs and ApplicationInputSchemaOutput values.
// You can construct a concrete instance of `ApplicationInputSchemaInput` via:
//
//          ApplicationInputSchemaArgs{...}
type ApplicationInputSchemaInput interface {
	pulumi.Input

	ToApplicationInputSchemaOutput() ApplicationInputSchemaOutput
	ToApplicationInputSchemaOutputWithContext(context.Context) ApplicationInputSchemaOutput
}

type ApplicationInputSchemaArgs struct {
	RecordColumns  ApplicationRecordColumnArrayInput `pulumi:"recordColumns"`
	RecordEncoding pulumi.StringPtrInput             `pulumi:"recordEncoding"`
	RecordFormat   ApplicationRecordFormatInput      `pulumi:"recordFormat"`
}

func (ApplicationInputSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputSchema)(nil)).Elem()
}

func (i ApplicationInputSchemaArgs) ToApplicationInputSchemaOutput() ApplicationInputSchemaOutput {
	return i.ToApplicationInputSchemaOutputWithContext(context.Background())
}

func (i ApplicationInputSchemaArgs) ToApplicationInputSchemaOutputWithContext(ctx context.Context) ApplicationInputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInputSchemaOutput)
}

type ApplicationInputSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationInputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInputSchema)(nil)).Elem()
}

func (o ApplicationInputSchemaOutput) ToApplicationInputSchemaOutput() ApplicationInputSchemaOutput {
	return o
}

func (o ApplicationInputSchemaOutput) ToApplicationInputSchemaOutputWithContext(ctx context.Context) ApplicationInputSchemaOutput {
	return o
}

func (o ApplicationInputSchemaOutput) RecordColumns() ApplicationRecordColumnArrayOutput {
	return o.ApplyT(func(v ApplicationInputSchema) []ApplicationRecordColumn { return v.RecordColumns }).(ApplicationRecordColumnArrayOutput)
}

func (o ApplicationInputSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInputSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

func (o ApplicationInputSchemaOutput) RecordFormat() ApplicationRecordFormatOutput {
	return o.ApplyT(func(v ApplicationInputSchema) ApplicationRecordFormat { return v.RecordFormat }).(ApplicationRecordFormatOutput)
}

type ApplicationJSONMappingParameters struct {
	RecordRowPath string `pulumi:"recordRowPath"`
}

// ApplicationJSONMappingParametersInput is an input type that accepts ApplicationJSONMappingParametersArgs and ApplicationJSONMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationJSONMappingParametersInput` via:
//
//          ApplicationJSONMappingParametersArgs{...}
type ApplicationJSONMappingParametersInput interface {
	pulumi.Input

	ToApplicationJSONMappingParametersOutput() ApplicationJSONMappingParametersOutput
	ToApplicationJSONMappingParametersOutputWithContext(context.Context) ApplicationJSONMappingParametersOutput
}

type ApplicationJSONMappingParametersArgs struct {
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (ApplicationJSONMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJSONMappingParameters)(nil)).Elem()
}

func (i ApplicationJSONMappingParametersArgs) ToApplicationJSONMappingParametersOutput() ApplicationJSONMappingParametersOutput {
	return i.ToApplicationJSONMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationJSONMappingParametersArgs) ToApplicationJSONMappingParametersOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJSONMappingParametersOutput)
}

func (i ApplicationJSONMappingParametersArgs) ToApplicationJSONMappingParametersPtrOutput() ApplicationJSONMappingParametersPtrOutput {
	return i.ToApplicationJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationJSONMappingParametersArgs) ToApplicationJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJSONMappingParametersOutput).ToApplicationJSONMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationJSONMappingParametersPtrInput is an input type that accepts ApplicationJSONMappingParametersArgs, ApplicationJSONMappingParametersPtr and ApplicationJSONMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationJSONMappingParametersPtrInput` via:
//
//          ApplicationJSONMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationJSONMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationJSONMappingParametersPtrOutput() ApplicationJSONMappingParametersPtrOutput
	ToApplicationJSONMappingParametersPtrOutputWithContext(context.Context) ApplicationJSONMappingParametersPtrOutput
}

type applicationJSONMappingParametersPtrType ApplicationJSONMappingParametersArgs

func ApplicationJSONMappingParametersPtr(v *ApplicationJSONMappingParametersArgs) ApplicationJSONMappingParametersPtrInput {
	return (*applicationJSONMappingParametersPtrType)(v)
}

func (*applicationJSONMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJSONMappingParameters)(nil)).Elem()
}

func (i *applicationJSONMappingParametersPtrType) ToApplicationJSONMappingParametersPtrOutput() ApplicationJSONMappingParametersPtrOutput {
	return i.ToApplicationJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationJSONMappingParametersPtrType) ToApplicationJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationJSONMappingParametersPtrOutput)
}

type ApplicationJSONMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationJSONMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationJSONMappingParameters)(nil)).Elem()
}

func (o ApplicationJSONMappingParametersOutput) ToApplicationJSONMappingParametersOutput() ApplicationJSONMappingParametersOutput {
	return o
}

func (o ApplicationJSONMappingParametersOutput) ToApplicationJSONMappingParametersOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersOutput {
	return o
}

func (o ApplicationJSONMappingParametersOutput) ToApplicationJSONMappingParametersPtrOutput() ApplicationJSONMappingParametersPtrOutput {
	return o.ToApplicationJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationJSONMappingParametersOutput) ToApplicationJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationJSONMappingParameters) *ApplicationJSONMappingParameters {
		return &v
	}).(ApplicationJSONMappingParametersPtrOutput)
}

func (o ApplicationJSONMappingParametersOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationJSONMappingParameters) string { return v.RecordRowPath }).(pulumi.StringOutput)
}

type ApplicationJSONMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationJSONMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationJSONMappingParameters)(nil)).Elem()
}

func (o ApplicationJSONMappingParametersPtrOutput) ToApplicationJSONMappingParametersPtrOutput() ApplicationJSONMappingParametersPtrOutput {
	return o
}

func (o ApplicationJSONMappingParametersPtrOutput) ToApplicationJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationJSONMappingParametersPtrOutput {
	return o
}

func (o ApplicationJSONMappingParametersPtrOutput) Elem() ApplicationJSONMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationJSONMappingParameters) ApplicationJSONMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationJSONMappingParameters
		return ret
	}).(ApplicationJSONMappingParametersOutput)
}

func (o ApplicationJSONMappingParametersPtrOutput) RecordRowPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationJSONMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowPath
	}).(pulumi.StringPtrOutput)
}

type ApplicationKinesisFirehoseInput struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationKinesisFirehoseInputInput is an input type that accepts ApplicationKinesisFirehoseInputArgs and ApplicationKinesisFirehoseInputOutput values.
// You can construct a concrete instance of `ApplicationKinesisFirehoseInputInput` via:
//
//          ApplicationKinesisFirehoseInputArgs{...}
type ApplicationKinesisFirehoseInputInput interface {
	pulumi.Input

	ToApplicationKinesisFirehoseInputOutput() ApplicationKinesisFirehoseInputOutput
	ToApplicationKinesisFirehoseInputOutputWithContext(context.Context) ApplicationKinesisFirehoseInputOutput
}

type ApplicationKinesisFirehoseInputArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationKinesisFirehoseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationKinesisFirehoseInput)(nil)).Elem()
}

func (i ApplicationKinesisFirehoseInputArgs) ToApplicationKinesisFirehoseInputOutput() ApplicationKinesisFirehoseInputOutput {
	return i.ToApplicationKinesisFirehoseInputOutputWithContext(context.Background())
}

func (i ApplicationKinesisFirehoseInputArgs) ToApplicationKinesisFirehoseInputOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisFirehoseInputOutput)
}

func (i ApplicationKinesisFirehoseInputArgs) ToApplicationKinesisFirehoseInputPtrOutput() ApplicationKinesisFirehoseInputPtrOutput {
	return i.ToApplicationKinesisFirehoseInputPtrOutputWithContext(context.Background())
}

func (i ApplicationKinesisFirehoseInputArgs) ToApplicationKinesisFirehoseInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisFirehoseInputOutput).ToApplicationKinesisFirehoseInputPtrOutputWithContext(ctx)
}

// ApplicationKinesisFirehoseInputPtrInput is an input type that accepts ApplicationKinesisFirehoseInputArgs, ApplicationKinesisFirehoseInputPtr and ApplicationKinesisFirehoseInputPtrOutput values.
// You can construct a concrete instance of `ApplicationKinesisFirehoseInputPtrInput` via:
//
//          ApplicationKinesisFirehoseInputArgs{...}
//
//  or:
//
//          nil
type ApplicationKinesisFirehoseInputPtrInput interface {
	pulumi.Input

	ToApplicationKinesisFirehoseInputPtrOutput() ApplicationKinesisFirehoseInputPtrOutput
	ToApplicationKinesisFirehoseInputPtrOutputWithContext(context.Context) ApplicationKinesisFirehoseInputPtrOutput
}

type applicationKinesisFirehoseInputPtrType ApplicationKinesisFirehoseInputArgs

func ApplicationKinesisFirehoseInputPtr(v *ApplicationKinesisFirehoseInputArgs) ApplicationKinesisFirehoseInputPtrInput {
	return (*applicationKinesisFirehoseInputPtrType)(v)
}

func (*applicationKinesisFirehoseInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationKinesisFirehoseInput)(nil)).Elem()
}

func (i *applicationKinesisFirehoseInputPtrType) ToApplicationKinesisFirehoseInputPtrOutput() ApplicationKinesisFirehoseInputPtrOutput {
	return i.ToApplicationKinesisFirehoseInputPtrOutputWithContext(context.Background())
}

func (i *applicationKinesisFirehoseInputPtrType) ToApplicationKinesisFirehoseInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisFirehoseInputPtrOutput)
}

type ApplicationKinesisFirehoseInputOutput struct{ *pulumi.OutputState }

func (ApplicationKinesisFirehoseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationKinesisFirehoseInput)(nil)).Elem()
}

func (o ApplicationKinesisFirehoseInputOutput) ToApplicationKinesisFirehoseInputOutput() ApplicationKinesisFirehoseInputOutput {
	return o
}

func (o ApplicationKinesisFirehoseInputOutput) ToApplicationKinesisFirehoseInputOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputOutput {
	return o
}

func (o ApplicationKinesisFirehoseInputOutput) ToApplicationKinesisFirehoseInputPtrOutput() ApplicationKinesisFirehoseInputPtrOutput {
	return o.ToApplicationKinesisFirehoseInputPtrOutputWithContext(context.Background())
}

func (o ApplicationKinesisFirehoseInputOutput) ToApplicationKinesisFirehoseInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationKinesisFirehoseInput) *ApplicationKinesisFirehoseInput {
		return &v
	}).(ApplicationKinesisFirehoseInputPtrOutput)
}

func (o ApplicationKinesisFirehoseInputOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationKinesisFirehoseInput) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationKinesisFirehoseInputOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationKinesisFirehoseInput) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationKinesisFirehoseInputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationKinesisFirehoseInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationKinesisFirehoseInput)(nil)).Elem()
}

func (o ApplicationKinesisFirehoseInputPtrOutput) ToApplicationKinesisFirehoseInputPtrOutput() ApplicationKinesisFirehoseInputPtrOutput {
	return o
}

func (o ApplicationKinesisFirehoseInputPtrOutput) ToApplicationKinesisFirehoseInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisFirehoseInputPtrOutput {
	return o
}

func (o ApplicationKinesisFirehoseInputPtrOutput) Elem() ApplicationKinesisFirehoseInputOutput {
	return o.ApplyT(func(v *ApplicationKinesisFirehoseInput) ApplicationKinesisFirehoseInput {
		if v != nil {
			return *v
		}
		var ret ApplicationKinesisFirehoseInput
		return ret
	}).(ApplicationKinesisFirehoseInputOutput)
}

func (o ApplicationKinesisFirehoseInputPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationKinesisFirehoseInput) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationKinesisFirehoseInputPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationKinesisFirehoseInput) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationKinesisStreamsInput struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationKinesisStreamsInputInput is an input type that accepts ApplicationKinesisStreamsInputArgs and ApplicationKinesisStreamsInputOutput values.
// You can construct a concrete instance of `ApplicationKinesisStreamsInputInput` via:
//
//          ApplicationKinesisStreamsInputArgs{...}
type ApplicationKinesisStreamsInputInput interface {
	pulumi.Input

	ToApplicationKinesisStreamsInputOutput() ApplicationKinesisStreamsInputOutput
	ToApplicationKinesisStreamsInputOutputWithContext(context.Context) ApplicationKinesisStreamsInputOutput
}

type ApplicationKinesisStreamsInputArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationKinesisStreamsInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationKinesisStreamsInput)(nil)).Elem()
}

func (i ApplicationKinesisStreamsInputArgs) ToApplicationKinesisStreamsInputOutput() ApplicationKinesisStreamsInputOutput {
	return i.ToApplicationKinesisStreamsInputOutputWithContext(context.Background())
}

func (i ApplicationKinesisStreamsInputArgs) ToApplicationKinesisStreamsInputOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisStreamsInputOutput)
}

func (i ApplicationKinesisStreamsInputArgs) ToApplicationKinesisStreamsInputPtrOutput() ApplicationKinesisStreamsInputPtrOutput {
	return i.ToApplicationKinesisStreamsInputPtrOutputWithContext(context.Background())
}

func (i ApplicationKinesisStreamsInputArgs) ToApplicationKinesisStreamsInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisStreamsInputOutput).ToApplicationKinesisStreamsInputPtrOutputWithContext(ctx)
}

// ApplicationKinesisStreamsInputPtrInput is an input type that accepts ApplicationKinesisStreamsInputArgs, ApplicationKinesisStreamsInputPtr and ApplicationKinesisStreamsInputPtrOutput values.
// You can construct a concrete instance of `ApplicationKinesisStreamsInputPtrInput` via:
//
//          ApplicationKinesisStreamsInputArgs{...}
//
//  or:
//
//          nil
type ApplicationKinesisStreamsInputPtrInput interface {
	pulumi.Input

	ToApplicationKinesisStreamsInputPtrOutput() ApplicationKinesisStreamsInputPtrOutput
	ToApplicationKinesisStreamsInputPtrOutputWithContext(context.Context) ApplicationKinesisStreamsInputPtrOutput
}

type applicationKinesisStreamsInputPtrType ApplicationKinesisStreamsInputArgs

func ApplicationKinesisStreamsInputPtr(v *ApplicationKinesisStreamsInputArgs) ApplicationKinesisStreamsInputPtrInput {
	return (*applicationKinesisStreamsInputPtrType)(v)
}

func (*applicationKinesisStreamsInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationKinesisStreamsInput)(nil)).Elem()
}

func (i *applicationKinesisStreamsInputPtrType) ToApplicationKinesisStreamsInputPtrOutput() ApplicationKinesisStreamsInputPtrOutput {
	return i.ToApplicationKinesisStreamsInputPtrOutputWithContext(context.Background())
}

func (i *applicationKinesisStreamsInputPtrType) ToApplicationKinesisStreamsInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationKinesisStreamsInputPtrOutput)
}

type ApplicationKinesisStreamsInputOutput struct{ *pulumi.OutputState }

func (ApplicationKinesisStreamsInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationKinesisStreamsInput)(nil)).Elem()
}

func (o ApplicationKinesisStreamsInputOutput) ToApplicationKinesisStreamsInputOutput() ApplicationKinesisStreamsInputOutput {
	return o
}

func (o ApplicationKinesisStreamsInputOutput) ToApplicationKinesisStreamsInputOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputOutput {
	return o
}

func (o ApplicationKinesisStreamsInputOutput) ToApplicationKinesisStreamsInputPtrOutput() ApplicationKinesisStreamsInputPtrOutput {
	return o.ToApplicationKinesisStreamsInputPtrOutputWithContext(context.Background())
}

func (o ApplicationKinesisStreamsInputOutput) ToApplicationKinesisStreamsInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationKinesisStreamsInput) *ApplicationKinesisStreamsInput {
		return &v
	}).(ApplicationKinesisStreamsInputPtrOutput)
}

func (o ApplicationKinesisStreamsInputOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationKinesisStreamsInput) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationKinesisStreamsInputOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationKinesisStreamsInput) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationKinesisStreamsInputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationKinesisStreamsInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationKinesisStreamsInput)(nil)).Elem()
}

func (o ApplicationKinesisStreamsInputPtrOutput) ToApplicationKinesisStreamsInputPtrOutput() ApplicationKinesisStreamsInputPtrOutput {
	return o
}

func (o ApplicationKinesisStreamsInputPtrOutput) ToApplicationKinesisStreamsInputPtrOutputWithContext(ctx context.Context) ApplicationKinesisStreamsInputPtrOutput {
	return o
}

func (o ApplicationKinesisStreamsInputPtrOutput) Elem() ApplicationKinesisStreamsInputOutput {
	return o.ApplyT(func(v *ApplicationKinesisStreamsInput) ApplicationKinesisStreamsInput {
		if v != nil {
			return *v
		}
		var ret ApplicationKinesisStreamsInput
		return ret
	}).(ApplicationKinesisStreamsInputOutput)
}

func (o ApplicationKinesisStreamsInputPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationKinesisStreamsInput) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationKinesisStreamsInputPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationKinesisStreamsInput) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationMappingParameters struct {
	CSVMappingParameters  *ApplicationCSVMappingParameters  `pulumi:"cSVMappingParameters"`
	JSONMappingParameters *ApplicationJSONMappingParameters `pulumi:"jSONMappingParameters"`
}

// ApplicationMappingParametersInput is an input type that accepts ApplicationMappingParametersArgs and ApplicationMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationMappingParametersInput` via:
//
//          ApplicationMappingParametersArgs{...}
type ApplicationMappingParametersInput interface {
	pulumi.Input

	ToApplicationMappingParametersOutput() ApplicationMappingParametersOutput
	ToApplicationMappingParametersOutputWithContext(context.Context) ApplicationMappingParametersOutput
}

type ApplicationMappingParametersArgs struct {
	CSVMappingParameters  ApplicationCSVMappingParametersPtrInput  `pulumi:"cSVMappingParameters"`
	JSONMappingParameters ApplicationJSONMappingParametersPtrInput `pulumi:"jSONMappingParameters"`
}

func (ApplicationMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMappingParameters)(nil)).Elem()
}

func (i ApplicationMappingParametersArgs) ToApplicationMappingParametersOutput() ApplicationMappingParametersOutput {
	return i.ToApplicationMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationMappingParametersArgs) ToApplicationMappingParametersOutputWithContext(ctx context.Context) ApplicationMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMappingParametersOutput)
}

func (i ApplicationMappingParametersArgs) ToApplicationMappingParametersPtrOutput() ApplicationMappingParametersPtrOutput {
	return i.ToApplicationMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationMappingParametersArgs) ToApplicationMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMappingParametersOutput).ToApplicationMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationMappingParametersPtrInput is an input type that accepts ApplicationMappingParametersArgs, ApplicationMappingParametersPtr and ApplicationMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationMappingParametersPtrInput` via:
//
//          ApplicationMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationMappingParametersPtrOutput() ApplicationMappingParametersPtrOutput
	ToApplicationMappingParametersPtrOutputWithContext(context.Context) ApplicationMappingParametersPtrOutput
}

type applicationMappingParametersPtrType ApplicationMappingParametersArgs

func ApplicationMappingParametersPtr(v *ApplicationMappingParametersArgs) ApplicationMappingParametersPtrInput {
	return (*applicationMappingParametersPtrType)(v)
}

func (*applicationMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMappingParameters)(nil)).Elem()
}

func (i *applicationMappingParametersPtrType) ToApplicationMappingParametersPtrOutput() ApplicationMappingParametersPtrOutput {
	return i.ToApplicationMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationMappingParametersPtrType) ToApplicationMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMappingParametersPtrOutput)
}

type ApplicationMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMappingParameters)(nil)).Elem()
}

func (o ApplicationMappingParametersOutput) ToApplicationMappingParametersOutput() ApplicationMappingParametersOutput {
	return o
}

func (o ApplicationMappingParametersOutput) ToApplicationMappingParametersOutputWithContext(ctx context.Context) ApplicationMappingParametersOutput {
	return o
}

func (o ApplicationMappingParametersOutput) ToApplicationMappingParametersPtrOutput() ApplicationMappingParametersPtrOutput {
	return o.ToApplicationMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationMappingParametersOutput) ToApplicationMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationMappingParameters) *ApplicationMappingParameters {
		return &v
	}).(ApplicationMappingParametersPtrOutput)
}

func (o ApplicationMappingParametersOutput) CSVMappingParameters() ApplicationCSVMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationMappingParameters) *ApplicationCSVMappingParameters { return v.CSVMappingParameters }).(ApplicationCSVMappingParametersPtrOutput)
}

func (o ApplicationMappingParametersOutput) JSONMappingParameters() ApplicationJSONMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationMappingParameters) *ApplicationJSONMappingParameters { return v.JSONMappingParameters }).(ApplicationJSONMappingParametersPtrOutput)
}

type ApplicationMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMappingParameters)(nil)).Elem()
}

func (o ApplicationMappingParametersPtrOutput) ToApplicationMappingParametersPtrOutput() ApplicationMappingParametersPtrOutput {
	return o
}

func (o ApplicationMappingParametersPtrOutput) ToApplicationMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationMappingParametersPtrOutput {
	return o
}

func (o ApplicationMappingParametersPtrOutput) Elem() ApplicationMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationMappingParameters) ApplicationMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationMappingParameters
		return ret
	}).(ApplicationMappingParametersOutput)
}

func (o ApplicationMappingParametersPtrOutput) CSVMappingParameters() ApplicationCSVMappingParametersPtrOutput {
	return o.ApplyT(func(v *ApplicationMappingParameters) *ApplicationCSVMappingParameters {
		if v == nil {
			return nil
		}
		return v.CSVMappingParameters
	}).(ApplicationCSVMappingParametersPtrOutput)
}

func (o ApplicationMappingParametersPtrOutput) JSONMappingParameters() ApplicationJSONMappingParametersPtrOutput {
	return o.ApplyT(func(v *ApplicationMappingParameters) *ApplicationJSONMappingParameters {
		if v == nil {
			return nil
		}
		return v.JSONMappingParameters
	}).(ApplicationJSONMappingParametersPtrOutput)
}

type ApplicationOutputResourceDestinationSchema struct {
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// ApplicationOutputResourceDestinationSchemaInput is an input type that accepts ApplicationOutputResourceDestinationSchemaArgs and ApplicationOutputResourceDestinationSchemaOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceDestinationSchemaInput` via:
//
//          ApplicationOutputResourceDestinationSchemaArgs{...}
type ApplicationOutputResourceDestinationSchemaInput interface {
	pulumi.Input

	ToApplicationOutputResourceDestinationSchemaOutput() ApplicationOutputResourceDestinationSchemaOutput
	ToApplicationOutputResourceDestinationSchemaOutputWithContext(context.Context) ApplicationOutputResourceDestinationSchemaOutput
}

type ApplicationOutputResourceDestinationSchemaArgs struct {
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (ApplicationOutputResourceDestinationSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceDestinationSchema)(nil)).Elem()
}

func (i ApplicationOutputResourceDestinationSchemaArgs) ToApplicationOutputResourceDestinationSchemaOutput() ApplicationOutputResourceDestinationSchemaOutput {
	return i.ToApplicationOutputResourceDestinationSchemaOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceDestinationSchemaArgs) ToApplicationOutputResourceDestinationSchemaOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceDestinationSchemaOutput)
}

func (i ApplicationOutputResourceDestinationSchemaArgs) ToApplicationOutputResourceDestinationSchemaPtrOutput() ApplicationOutputResourceDestinationSchemaPtrOutput {
	return i.ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceDestinationSchemaArgs) ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceDestinationSchemaOutput).ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(ctx)
}

// ApplicationOutputResourceDestinationSchemaPtrInput is an input type that accepts ApplicationOutputResourceDestinationSchemaArgs, ApplicationOutputResourceDestinationSchemaPtr and ApplicationOutputResourceDestinationSchemaPtrOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceDestinationSchemaPtrInput` via:
//
//          ApplicationOutputResourceDestinationSchemaArgs{...}
//
//  or:
//
//          nil
type ApplicationOutputResourceDestinationSchemaPtrInput interface {
	pulumi.Input

	ToApplicationOutputResourceDestinationSchemaPtrOutput() ApplicationOutputResourceDestinationSchemaPtrOutput
	ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(context.Context) ApplicationOutputResourceDestinationSchemaPtrOutput
}

type applicationOutputResourceDestinationSchemaPtrType ApplicationOutputResourceDestinationSchemaArgs

func ApplicationOutputResourceDestinationSchemaPtr(v *ApplicationOutputResourceDestinationSchemaArgs) ApplicationOutputResourceDestinationSchemaPtrInput {
	return (*applicationOutputResourceDestinationSchemaPtrType)(v)
}

func (*applicationOutputResourceDestinationSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceDestinationSchema)(nil)).Elem()
}

func (i *applicationOutputResourceDestinationSchemaPtrType) ToApplicationOutputResourceDestinationSchemaPtrOutput() ApplicationOutputResourceDestinationSchemaPtrOutput {
	return i.ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(context.Background())
}

func (i *applicationOutputResourceDestinationSchemaPtrType) ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceDestinationSchemaPtrOutput)
}

type ApplicationOutputResourceDestinationSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceDestinationSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceDestinationSchema)(nil)).Elem()
}

func (o ApplicationOutputResourceDestinationSchemaOutput) ToApplicationOutputResourceDestinationSchemaOutput() ApplicationOutputResourceDestinationSchemaOutput {
	return o
}

func (o ApplicationOutputResourceDestinationSchemaOutput) ToApplicationOutputResourceDestinationSchemaOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaOutput {
	return o
}

func (o ApplicationOutputResourceDestinationSchemaOutput) ToApplicationOutputResourceDestinationSchemaPtrOutput() ApplicationOutputResourceDestinationSchemaPtrOutput {
	return o.ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(context.Background())
}

func (o ApplicationOutputResourceDestinationSchemaOutput) ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOutputResourceDestinationSchema) *ApplicationOutputResourceDestinationSchema {
		return &v
	}).(ApplicationOutputResourceDestinationSchemaPtrOutput)
}

func (o ApplicationOutputResourceDestinationSchemaOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOutputResourceDestinationSchema) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceDestinationSchemaPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceDestinationSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceDestinationSchema)(nil)).Elem()
}

func (o ApplicationOutputResourceDestinationSchemaPtrOutput) ToApplicationOutputResourceDestinationSchemaPtrOutput() ApplicationOutputResourceDestinationSchemaPtrOutput {
	return o
}

func (o ApplicationOutputResourceDestinationSchemaPtrOutput) ToApplicationOutputResourceDestinationSchemaPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceDestinationSchemaPtrOutput {
	return o
}

func (o ApplicationOutputResourceDestinationSchemaPtrOutput) Elem() ApplicationOutputResourceDestinationSchemaOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceDestinationSchema) ApplicationOutputResourceDestinationSchema {
		if v != nil {
			return *v
		}
		var ret ApplicationOutputResourceDestinationSchema
		return ret
	}).(ApplicationOutputResourceDestinationSchemaOutput)
}

func (o ApplicationOutputResourceDestinationSchemaPtrOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceDestinationSchema) *string {
		if v == nil {
			return nil
		}
		return v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceKinesisFirehoseOutput struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationOutputResourceKinesisFirehoseOutputInput is an input type that accepts ApplicationOutputResourceKinesisFirehoseOutputArgs and ApplicationOutputResourceKinesisFirehoseOutputOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceKinesisFirehoseOutputInput` via:
//
//          ApplicationOutputResourceKinesisFirehoseOutputArgs{...}
type ApplicationOutputResourceKinesisFirehoseOutputInput interface {
	pulumi.Input

	ToApplicationOutputResourceKinesisFirehoseOutputOutput() ApplicationOutputResourceKinesisFirehoseOutputOutput
	ToApplicationOutputResourceKinesisFirehoseOutputOutputWithContext(context.Context) ApplicationOutputResourceKinesisFirehoseOutputOutput
}

type ApplicationOutputResourceKinesisFirehoseOutputArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationOutputResourceKinesisFirehoseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceKinesisFirehoseOutput)(nil)).Elem()
}

func (i ApplicationOutputResourceKinesisFirehoseOutputArgs) ToApplicationOutputResourceKinesisFirehoseOutputOutput() ApplicationOutputResourceKinesisFirehoseOutputOutput {
	return i.ToApplicationOutputResourceKinesisFirehoseOutputOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceKinesisFirehoseOutputArgs) ToApplicationOutputResourceKinesisFirehoseOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisFirehoseOutputOutput)
}

func (i ApplicationOutputResourceKinesisFirehoseOutputArgs) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return i.ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceKinesisFirehoseOutputArgs) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisFirehoseOutputOutput).ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(ctx)
}

// ApplicationOutputResourceKinesisFirehoseOutputPtrInput is an input type that accepts ApplicationOutputResourceKinesisFirehoseOutputArgs, ApplicationOutputResourceKinesisFirehoseOutputPtr and ApplicationOutputResourceKinesisFirehoseOutputPtrOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceKinesisFirehoseOutputPtrInput` via:
//
//          ApplicationOutputResourceKinesisFirehoseOutputArgs{...}
//
//  or:
//
//          nil
type ApplicationOutputResourceKinesisFirehoseOutputPtrInput interface {
	pulumi.Input

	ToApplicationOutputResourceKinesisFirehoseOutputPtrOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput
	ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(context.Context) ApplicationOutputResourceKinesisFirehoseOutputPtrOutput
}

type applicationOutputResourceKinesisFirehoseOutputPtrType ApplicationOutputResourceKinesisFirehoseOutputArgs

func ApplicationOutputResourceKinesisFirehoseOutputPtr(v *ApplicationOutputResourceKinesisFirehoseOutputArgs) ApplicationOutputResourceKinesisFirehoseOutputPtrInput {
	return (*applicationOutputResourceKinesisFirehoseOutputPtrType)(v)
}

func (*applicationOutputResourceKinesisFirehoseOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceKinesisFirehoseOutput)(nil)).Elem()
}

func (i *applicationOutputResourceKinesisFirehoseOutputPtrType) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return i.ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(context.Background())
}

func (i *applicationOutputResourceKinesisFirehoseOutputPtrType) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisFirehoseOutputPtrOutput)
}

type ApplicationOutputResourceKinesisFirehoseOutputOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceKinesisFirehoseOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceKinesisFirehoseOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) ToApplicationOutputResourceKinesisFirehoseOutputOutput() ApplicationOutputResourceKinesisFirehoseOutputOutput {
	return o
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) ToApplicationOutputResourceKinesisFirehoseOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputOutput {
	return o
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o.ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(context.Background())
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOutputResourceKinesisFirehoseOutput) *ApplicationOutputResourceKinesisFirehoseOutput {
		return &v
	}).(ApplicationOutputResourceKinesisFirehoseOutputPtrOutput)
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceKinesisFirehoseOutput) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationOutputResourceKinesisFirehoseOutputOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceKinesisFirehoseOutput) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationOutputResourceKinesisFirehoseOutputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceKinesisFirehoseOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) ToApplicationOutputResourceKinesisFirehoseOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) Elem() ApplicationOutputResourceKinesisFirehoseOutputOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisFirehoseOutput) ApplicationOutputResourceKinesisFirehoseOutput {
		if v != nil {
			return *v
		}
		var ret ApplicationOutputResourceKinesisFirehoseOutput
		return ret
	}).(ApplicationOutputResourceKinesisFirehoseOutputOutput)
}

func (o ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisFirehoseOutput) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationOutputResourceKinesisFirehoseOutputPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisFirehoseOutput) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceKinesisStreamsOutput struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationOutputResourceKinesisStreamsOutputInput is an input type that accepts ApplicationOutputResourceKinesisStreamsOutputArgs and ApplicationOutputResourceKinesisStreamsOutputOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceKinesisStreamsOutputInput` via:
//
//          ApplicationOutputResourceKinesisStreamsOutputArgs{...}
type ApplicationOutputResourceKinesisStreamsOutputInput interface {
	pulumi.Input

	ToApplicationOutputResourceKinesisStreamsOutputOutput() ApplicationOutputResourceKinesisStreamsOutputOutput
	ToApplicationOutputResourceKinesisStreamsOutputOutputWithContext(context.Context) ApplicationOutputResourceKinesisStreamsOutputOutput
}

type ApplicationOutputResourceKinesisStreamsOutputArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationOutputResourceKinesisStreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceKinesisStreamsOutput)(nil)).Elem()
}

func (i ApplicationOutputResourceKinesisStreamsOutputArgs) ToApplicationOutputResourceKinesisStreamsOutputOutput() ApplicationOutputResourceKinesisStreamsOutputOutput {
	return i.ToApplicationOutputResourceKinesisStreamsOutputOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceKinesisStreamsOutputArgs) ToApplicationOutputResourceKinesisStreamsOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisStreamsOutputOutput)
}

func (i ApplicationOutputResourceKinesisStreamsOutputArgs) ToApplicationOutputResourceKinesisStreamsOutputPtrOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return i.ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceKinesisStreamsOutputArgs) ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisStreamsOutputOutput).ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(ctx)
}

// ApplicationOutputResourceKinesisStreamsOutputPtrInput is an input type that accepts ApplicationOutputResourceKinesisStreamsOutputArgs, ApplicationOutputResourceKinesisStreamsOutputPtr and ApplicationOutputResourceKinesisStreamsOutputPtrOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceKinesisStreamsOutputPtrInput` via:
//
//          ApplicationOutputResourceKinesisStreamsOutputArgs{...}
//
//  or:
//
//          nil
type ApplicationOutputResourceKinesisStreamsOutputPtrInput interface {
	pulumi.Input

	ToApplicationOutputResourceKinesisStreamsOutputPtrOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput
	ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(context.Context) ApplicationOutputResourceKinesisStreamsOutputPtrOutput
}

type applicationOutputResourceKinesisStreamsOutputPtrType ApplicationOutputResourceKinesisStreamsOutputArgs

func ApplicationOutputResourceKinesisStreamsOutputPtr(v *ApplicationOutputResourceKinesisStreamsOutputArgs) ApplicationOutputResourceKinesisStreamsOutputPtrInput {
	return (*applicationOutputResourceKinesisStreamsOutputPtrType)(v)
}

func (*applicationOutputResourceKinesisStreamsOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceKinesisStreamsOutput)(nil)).Elem()
}

func (i *applicationOutputResourceKinesisStreamsOutputPtrType) ToApplicationOutputResourceKinesisStreamsOutputPtrOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return i.ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(context.Background())
}

func (i *applicationOutputResourceKinesisStreamsOutputPtrType) ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceKinesisStreamsOutputPtrOutput)
}

type ApplicationOutputResourceKinesisStreamsOutputOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceKinesisStreamsOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceKinesisStreamsOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) ToApplicationOutputResourceKinesisStreamsOutputOutput() ApplicationOutputResourceKinesisStreamsOutputOutput {
	return o
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) ToApplicationOutputResourceKinesisStreamsOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputOutput {
	return o
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) ToApplicationOutputResourceKinesisStreamsOutputPtrOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o.ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(context.Background())
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOutputResourceKinesisStreamsOutput) *ApplicationOutputResourceKinesisStreamsOutput {
		return &v
	}).(ApplicationOutputResourceKinesisStreamsOutputPtrOutput)
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceKinesisStreamsOutput) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationOutputResourceKinesisStreamsOutputOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceKinesisStreamsOutput) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationOutputResourceKinesisStreamsOutputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceKinesisStreamsOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceKinesisStreamsOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceKinesisStreamsOutputPtrOutput) ToApplicationOutputResourceKinesisStreamsOutputPtrOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceKinesisStreamsOutputPtrOutput) ToApplicationOutputResourceKinesisStreamsOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceKinesisStreamsOutputPtrOutput) Elem() ApplicationOutputResourceKinesisStreamsOutputOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisStreamsOutput) ApplicationOutputResourceKinesisStreamsOutput {
		if v != nil {
			return *v
		}
		var ret ApplicationOutputResourceKinesisStreamsOutput
		return ret
	}).(ApplicationOutputResourceKinesisStreamsOutputOutput)
}

func (o ApplicationOutputResourceKinesisStreamsOutputPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisStreamsOutput) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationOutputResourceKinesisStreamsOutputPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceKinesisStreamsOutput) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceLambdaOutput struct {
	ResourceARN string `pulumi:"resourceARN"`
	RoleARN     string `pulumi:"roleARN"`
}

// ApplicationOutputResourceLambdaOutputInput is an input type that accepts ApplicationOutputResourceLambdaOutputArgs and ApplicationOutputResourceLambdaOutputOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceLambdaOutputInput` via:
//
//          ApplicationOutputResourceLambdaOutputArgs{...}
type ApplicationOutputResourceLambdaOutputInput interface {
	pulumi.Input

	ToApplicationOutputResourceLambdaOutputOutput() ApplicationOutputResourceLambdaOutputOutput
	ToApplicationOutputResourceLambdaOutputOutputWithContext(context.Context) ApplicationOutputResourceLambdaOutputOutput
}

type ApplicationOutputResourceLambdaOutputArgs struct {
	ResourceARN pulumi.StringInput `pulumi:"resourceARN"`
	RoleARN     pulumi.StringInput `pulumi:"roleARN"`
}

func (ApplicationOutputResourceLambdaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceLambdaOutput)(nil)).Elem()
}

func (i ApplicationOutputResourceLambdaOutputArgs) ToApplicationOutputResourceLambdaOutputOutput() ApplicationOutputResourceLambdaOutputOutput {
	return i.ToApplicationOutputResourceLambdaOutputOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceLambdaOutputArgs) ToApplicationOutputResourceLambdaOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceLambdaOutputOutput)
}

func (i ApplicationOutputResourceLambdaOutputArgs) ToApplicationOutputResourceLambdaOutputPtrOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return i.ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceLambdaOutputArgs) ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceLambdaOutputOutput).ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(ctx)
}

// ApplicationOutputResourceLambdaOutputPtrInput is an input type that accepts ApplicationOutputResourceLambdaOutputArgs, ApplicationOutputResourceLambdaOutputPtr and ApplicationOutputResourceLambdaOutputPtrOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceLambdaOutputPtrInput` via:
//
//          ApplicationOutputResourceLambdaOutputArgs{...}
//
//  or:
//
//          nil
type ApplicationOutputResourceLambdaOutputPtrInput interface {
	pulumi.Input

	ToApplicationOutputResourceLambdaOutputPtrOutput() ApplicationOutputResourceLambdaOutputPtrOutput
	ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(context.Context) ApplicationOutputResourceLambdaOutputPtrOutput
}

type applicationOutputResourceLambdaOutputPtrType ApplicationOutputResourceLambdaOutputArgs

func ApplicationOutputResourceLambdaOutputPtr(v *ApplicationOutputResourceLambdaOutputArgs) ApplicationOutputResourceLambdaOutputPtrInput {
	return (*applicationOutputResourceLambdaOutputPtrType)(v)
}

func (*applicationOutputResourceLambdaOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceLambdaOutput)(nil)).Elem()
}

func (i *applicationOutputResourceLambdaOutputPtrType) ToApplicationOutputResourceLambdaOutputPtrOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return i.ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(context.Background())
}

func (i *applicationOutputResourceLambdaOutputPtrType) ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceLambdaOutputPtrOutput)
}

type ApplicationOutputResourceLambdaOutputOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceLambdaOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceLambdaOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceLambdaOutputOutput) ToApplicationOutputResourceLambdaOutputOutput() ApplicationOutputResourceLambdaOutputOutput {
	return o
}

func (o ApplicationOutputResourceLambdaOutputOutput) ToApplicationOutputResourceLambdaOutputOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputOutput {
	return o
}

func (o ApplicationOutputResourceLambdaOutputOutput) ToApplicationOutputResourceLambdaOutputPtrOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return o.ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(context.Background())
}

func (o ApplicationOutputResourceLambdaOutputOutput) ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOutputResourceLambdaOutput) *ApplicationOutputResourceLambdaOutput {
		return &v
	}).(ApplicationOutputResourceLambdaOutputPtrOutput)
}

func (o ApplicationOutputResourceLambdaOutputOutput) ResourceARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceLambdaOutput) string { return v.ResourceARN }).(pulumi.StringOutput)
}

func (o ApplicationOutputResourceLambdaOutputOutput) RoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationOutputResourceLambdaOutput) string { return v.RoleARN }).(pulumi.StringOutput)
}

type ApplicationOutputResourceLambdaOutputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceLambdaOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceLambdaOutput)(nil)).Elem()
}

func (o ApplicationOutputResourceLambdaOutputPtrOutput) ToApplicationOutputResourceLambdaOutputPtrOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceLambdaOutputPtrOutput) ToApplicationOutputResourceLambdaOutputPtrOutputWithContext(ctx context.Context) ApplicationOutputResourceLambdaOutputPtrOutput {
	return o
}

func (o ApplicationOutputResourceLambdaOutputPtrOutput) Elem() ApplicationOutputResourceLambdaOutputOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceLambdaOutput) ApplicationOutputResourceLambdaOutput {
		if v != nil {
			return *v
		}
		var ret ApplicationOutputResourceLambdaOutput
		return ret
	}).(ApplicationOutputResourceLambdaOutputOutput)
}

func (o ApplicationOutputResourceLambdaOutputPtrOutput) ResourceARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceLambdaOutput) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationOutputResourceLambdaOutputPtrOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceLambdaOutput) *string {
		if v == nil {
			return nil
		}
		return &v.RoleARN
	}).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceOutputType struct {
	DestinationSchema     ApplicationOutputResourceDestinationSchema      `pulumi:"destinationSchema"`
	KinesisFirehoseOutput *ApplicationOutputResourceKinesisFirehoseOutput `pulumi:"kinesisFirehoseOutput"`
	KinesisStreamsOutput  *ApplicationOutputResourceKinesisStreamsOutput  `pulumi:"kinesisStreamsOutput"`
	LambdaOutput          *ApplicationOutputResourceLambdaOutput          `pulumi:"lambdaOutput"`
	Name                  *string                                         `pulumi:"name"`
}

// ApplicationOutputResourceOutputTypeInput is an input type that accepts ApplicationOutputResourceOutputTypeArgs and ApplicationOutputResourceOutputTypeOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceOutputTypeInput` via:
//
//          ApplicationOutputResourceOutputTypeArgs{...}
type ApplicationOutputResourceOutputTypeInput interface {
	pulumi.Input

	ToApplicationOutputResourceOutputTypeOutput() ApplicationOutputResourceOutputTypeOutput
	ToApplicationOutputResourceOutputTypeOutputWithContext(context.Context) ApplicationOutputResourceOutputTypeOutput
}

type ApplicationOutputResourceOutputTypeArgs struct {
	DestinationSchema     ApplicationOutputResourceDestinationSchemaInput        `pulumi:"destinationSchema"`
	KinesisFirehoseOutput ApplicationOutputResourceKinesisFirehoseOutputPtrInput `pulumi:"kinesisFirehoseOutput"`
	KinesisStreamsOutput  ApplicationOutputResourceKinesisStreamsOutputPtrInput  `pulumi:"kinesisStreamsOutput"`
	LambdaOutput          ApplicationOutputResourceLambdaOutputPtrInput          `pulumi:"lambdaOutput"`
	Name                  pulumi.StringPtrInput                                  `pulumi:"name"`
}

func (ApplicationOutputResourceOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceOutputType)(nil)).Elem()
}

func (i ApplicationOutputResourceOutputTypeArgs) ToApplicationOutputResourceOutputTypeOutput() ApplicationOutputResourceOutputTypeOutput {
	return i.ToApplicationOutputResourceOutputTypeOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceOutputTypeArgs) ToApplicationOutputResourceOutputTypeOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceOutputTypeOutput)
}

func (i ApplicationOutputResourceOutputTypeArgs) ToApplicationOutputResourceOutputTypePtrOutput() ApplicationOutputResourceOutputTypePtrOutput {
	return i.ToApplicationOutputResourceOutputTypePtrOutputWithContext(context.Background())
}

func (i ApplicationOutputResourceOutputTypeArgs) ToApplicationOutputResourceOutputTypePtrOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceOutputTypeOutput).ToApplicationOutputResourceOutputTypePtrOutputWithContext(ctx)
}

// ApplicationOutputResourceOutputTypePtrInput is an input type that accepts ApplicationOutputResourceOutputTypeArgs, ApplicationOutputResourceOutputTypePtr and ApplicationOutputResourceOutputTypePtrOutput values.
// You can construct a concrete instance of `ApplicationOutputResourceOutputTypePtrInput` via:
//
//          ApplicationOutputResourceOutputTypeArgs{...}
//
//  or:
//
//          nil
type ApplicationOutputResourceOutputTypePtrInput interface {
	pulumi.Input

	ToApplicationOutputResourceOutputTypePtrOutput() ApplicationOutputResourceOutputTypePtrOutput
	ToApplicationOutputResourceOutputTypePtrOutputWithContext(context.Context) ApplicationOutputResourceOutputTypePtrOutput
}

type applicationOutputResourceOutputTypePtrType ApplicationOutputResourceOutputTypeArgs

func ApplicationOutputResourceOutputTypePtr(v *ApplicationOutputResourceOutputTypeArgs) ApplicationOutputResourceOutputTypePtrInput {
	return (*applicationOutputResourceOutputTypePtrType)(v)
}

func (*applicationOutputResourceOutputTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceOutputType)(nil)).Elem()
}

func (i *applicationOutputResourceOutputTypePtrType) ToApplicationOutputResourceOutputTypePtrOutput() ApplicationOutputResourceOutputTypePtrOutput {
	return i.ToApplicationOutputResourceOutputTypePtrOutputWithContext(context.Background())
}

func (i *applicationOutputResourceOutputTypePtrType) ToApplicationOutputResourceOutputTypePtrOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutputResourceOutputTypePtrOutput)
}

type ApplicationOutputResourceOutputTypeOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationOutputResourceOutputType)(nil)).Elem()
}

func (o ApplicationOutputResourceOutputTypeOutput) ToApplicationOutputResourceOutputTypeOutput() ApplicationOutputResourceOutputTypeOutput {
	return o
}

func (o ApplicationOutputResourceOutputTypeOutput) ToApplicationOutputResourceOutputTypeOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypeOutput {
	return o
}

func (o ApplicationOutputResourceOutputTypeOutput) ToApplicationOutputResourceOutputTypePtrOutput() ApplicationOutputResourceOutputTypePtrOutput {
	return o.ToApplicationOutputResourceOutputTypePtrOutputWithContext(context.Background())
}

func (o ApplicationOutputResourceOutputTypeOutput) ToApplicationOutputResourceOutputTypePtrOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationOutputResourceOutputType) *ApplicationOutputResourceOutputType {
		return &v
	}).(ApplicationOutputResourceOutputTypePtrOutput)
}

func (o ApplicationOutputResourceOutputTypeOutput) DestinationSchema() ApplicationOutputResourceDestinationSchemaOutput {
	return o.ApplyT(func(v ApplicationOutputResourceOutputType) ApplicationOutputResourceDestinationSchema {
		return v.DestinationSchema
	}).(ApplicationOutputResourceDestinationSchemaOutput)
}

func (o ApplicationOutputResourceOutputTypeOutput) KinesisFirehoseOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o.ApplyT(func(v ApplicationOutputResourceOutputType) *ApplicationOutputResourceKinesisFirehoseOutput {
		return v.KinesisFirehoseOutput
	}).(ApplicationOutputResourceKinesisFirehoseOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypeOutput) KinesisStreamsOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o.ApplyT(func(v ApplicationOutputResourceOutputType) *ApplicationOutputResourceKinesisStreamsOutput {
		return v.KinesisStreamsOutput
	}).(ApplicationOutputResourceKinesisStreamsOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypeOutput) LambdaOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return o.ApplyT(func(v ApplicationOutputResourceOutputType) *ApplicationOutputResourceLambdaOutput {
		return v.LambdaOutput
	}).(ApplicationOutputResourceLambdaOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationOutputResourceOutputType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationOutputResourceOutputTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationOutputResourceOutputTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationOutputResourceOutputType)(nil)).Elem()
}

func (o ApplicationOutputResourceOutputTypePtrOutput) ToApplicationOutputResourceOutputTypePtrOutput() ApplicationOutputResourceOutputTypePtrOutput {
	return o
}

func (o ApplicationOutputResourceOutputTypePtrOutput) ToApplicationOutputResourceOutputTypePtrOutputWithContext(ctx context.Context) ApplicationOutputResourceOutputTypePtrOutput {
	return o
}

func (o ApplicationOutputResourceOutputTypePtrOutput) Elem() ApplicationOutputResourceOutputTypeOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) ApplicationOutputResourceOutputType {
		if v != nil {
			return *v
		}
		var ret ApplicationOutputResourceOutputType
		return ret
	}).(ApplicationOutputResourceOutputTypeOutput)
}

func (o ApplicationOutputResourceOutputTypePtrOutput) DestinationSchema() ApplicationOutputResourceDestinationSchemaPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) *ApplicationOutputResourceDestinationSchema {
		if v == nil {
			return nil
		}
		return &v.DestinationSchema
	}).(ApplicationOutputResourceDestinationSchemaPtrOutput)
}

func (o ApplicationOutputResourceOutputTypePtrOutput) KinesisFirehoseOutput() ApplicationOutputResourceKinesisFirehoseOutputPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) *ApplicationOutputResourceKinesisFirehoseOutput {
		if v == nil {
			return nil
		}
		return v.KinesisFirehoseOutput
	}).(ApplicationOutputResourceKinesisFirehoseOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypePtrOutput) KinesisStreamsOutput() ApplicationOutputResourceKinesisStreamsOutputPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) *ApplicationOutputResourceKinesisStreamsOutput {
		if v == nil {
			return nil
		}
		return v.KinesisStreamsOutput
	}).(ApplicationOutputResourceKinesisStreamsOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypePtrOutput) LambdaOutput() ApplicationOutputResourceLambdaOutputPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) *ApplicationOutputResourceLambdaOutput {
		if v == nil {
			return nil
		}
		return v.LambdaOutput
	}).(ApplicationOutputResourceLambdaOutputPtrOutput)
}

func (o ApplicationOutputResourceOutputTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationOutputResourceOutputType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ApplicationRecordColumn struct {
	Mapping *string `pulumi:"mapping"`
	Name    string  `pulumi:"name"`
	SqlType string  `pulumi:"sqlType"`
}

// ApplicationRecordColumnInput is an input type that accepts ApplicationRecordColumnArgs and ApplicationRecordColumnOutput values.
// You can construct a concrete instance of `ApplicationRecordColumnInput` via:
//
//          ApplicationRecordColumnArgs{...}
type ApplicationRecordColumnInput interface {
	pulumi.Input

	ToApplicationRecordColumnOutput() ApplicationRecordColumnOutput
	ToApplicationRecordColumnOutputWithContext(context.Context) ApplicationRecordColumnOutput
}

type ApplicationRecordColumnArgs struct {
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	Name    pulumi.StringInput    `pulumi:"name"`
	SqlType pulumi.StringInput    `pulumi:"sqlType"`
}

func (ApplicationRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRecordColumn)(nil)).Elem()
}

func (i ApplicationRecordColumnArgs) ToApplicationRecordColumnOutput() ApplicationRecordColumnOutput {
	return i.ToApplicationRecordColumnOutputWithContext(context.Background())
}

func (i ApplicationRecordColumnArgs) ToApplicationRecordColumnOutputWithContext(ctx context.Context) ApplicationRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRecordColumnOutput)
}

// ApplicationRecordColumnArrayInput is an input type that accepts ApplicationRecordColumnArray and ApplicationRecordColumnArrayOutput values.
// You can construct a concrete instance of `ApplicationRecordColumnArrayInput` via:
//
//          ApplicationRecordColumnArray{ ApplicationRecordColumnArgs{...} }
type ApplicationRecordColumnArrayInput interface {
	pulumi.Input

	ToApplicationRecordColumnArrayOutput() ApplicationRecordColumnArrayOutput
	ToApplicationRecordColumnArrayOutputWithContext(context.Context) ApplicationRecordColumnArrayOutput
}

type ApplicationRecordColumnArray []ApplicationRecordColumnInput

func (ApplicationRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRecordColumn)(nil)).Elem()
}

func (i ApplicationRecordColumnArray) ToApplicationRecordColumnArrayOutput() ApplicationRecordColumnArrayOutput {
	return i.ToApplicationRecordColumnArrayOutputWithContext(context.Background())
}

func (i ApplicationRecordColumnArray) ToApplicationRecordColumnArrayOutputWithContext(ctx context.Context) ApplicationRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRecordColumnArrayOutput)
}

type ApplicationRecordColumnOutput struct{ *pulumi.OutputState }

func (ApplicationRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRecordColumn)(nil)).Elem()
}

func (o ApplicationRecordColumnOutput) ToApplicationRecordColumnOutput() ApplicationRecordColumnOutput {
	return o
}

func (o ApplicationRecordColumnOutput) ToApplicationRecordColumnOutputWithContext(ctx context.Context) ApplicationRecordColumnOutput {
	return o
}

func (o ApplicationRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

func (o ApplicationRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type ApplicationRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (ApplicationRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationRecordColumn)(nil)).Elem()
}

func (o ApplicationRecordColumnArrayOutput) ToApplicationRecordColumnArrayOutput() ApplicationRecordColumnArrayOutput {
	return o
}

func (o ApplicationRecordColumnArrayOutput) ToApplicationRecordColumnArrayOutputWithContext(ctx context.Context) ApplicationRecordColumnArrayOutput {
	return o
}

func (o ApplicationRecordColumnArrayOutput) Index(i pulumi.IntInput) ApplicationRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationRecordColumn {
		return vs[0].([]ApplicationRecordColumn)[vs[1].(int)]
	}).(ApplicationRecordColumnOutput)
}

type ApplicationRecordFormat struct {
	MappingParameters *ApplicationMappingParameters `pulumi:"mappingParameters"`
	RecordFormatType  string                        `pulumi:"recordFormatType"`
}

// ApplicationRecordFormatInput is an input type that accepts ApplicationRecordFormatArgs and ApplicationRecordFormatOutput values.
// You can construct a concrete instance of `ApplicationRecordFormatInput` via:
//
//          ApplicationRecordFormatArgs{...}
type ApplicationRecordFormatInput interface {
	pulumi.Input

	ToApplicationRecordFormatOutput() ApplicationRecordFormatOutput
	ToApplicationRecordFormatOutputWithContext(context.Context) ApplicationRecordFormatOutput
}

type ApplicationRecordFormatArgs struct {
	MappingParameters ApplicationMappingParametersPtrInput `pulumi:"mappingParameters"`
	RecordFormatType  pulumi.StringInput                   `pulumi:"recordFormatType"`
}

func (ApplicationRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRecordFormat)(nil)).Elem()
}

func (i ApplicationRecordFormatArgs) ToApplicationRecordFormatOutput() ApplicationRecordFormatOutput {
	return i.ToApplicationRecordFormatOutputWithContext(context.Background())
}

func (i ApplicationRecordFormatArgs) ToApplicationRecordFormatOutputWithContext(ctx context.Context) ApplicationRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRecordFormatOutput)
}

type ApplicationRecordFormatOutput struct{ *pulumi.OutputState }

func (ApplicationRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRecordFormat)(nil)).Elem()
}

func (o ApplicationRecordFormatOutput) ToApplicationRecordFormatOutput() ApplicationRecordFormatOutput {
	return o
}

func (o ApplicationRecordFormatOutput) ToApplicationRecordFormatOutputWithContext(ctx context.Context) ApplicationRecordFormatOutput {
	return o
}

func (o ApplicationRecordFormatOutput) MappingParameters() ApplicationMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationRecordFormat) *ApplicationMappingParameters { return v.MappingParameters }).(ApplicationMappingParametersPtrOutput)
}

func (o ApplicationRecordFormatOutput) RecordFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRecordFormat) string { return v.RecordFormatType }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceCSVMappingParameters struct {
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	RecordRowDelimiter    string `pulumi:"recordRowDelimiter"`
}

// ApplicationReferenceDataSourceCSVMappingParametersInput is an input type that accepts ApplicationReferenceDataSourceCSVMappingParametersArgs and ApplicationReferenceDataSourceCSVMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceCSVMappingParametersInput` via:
//
//          ApplicationReferenceDataSourceCSVMappingParametersArgs{...}
type ApplicationReferenceDataSourceCSVMappingParametersInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceCSVMappingParametersOutput() ApplicationReferenceDataSourceCSVMappingParametersOutput
	ToApplicationReferenceDataSourceCSVMappingParametersOutputWithContext(context.Context) ApplicationReferenceDataSourceCSVMappingParametersOutput
}

type ApplicationReferenceDataSourceCSVMappingParametersArgs struct {
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	RecordRowDelimiter    pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (ApplicationReferenceDataSourceCSVMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceCSVMappingParameters)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceCSVMappingParametersArgs) ToApplicationReferenceDataSourceCSVMappingParametersOutput() ApplicationReferenceDataSourceCSVMappingParametersOutput {
	return i.ToApplicationReferenceDataSourceCSVMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceCSVMappingParametersArgs) ToApplicationReferenceDataSourceCSVMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceCSVMappingParametersOutput)
}

func (i ApplicationReferenceDataSourceCSVMappingParametersArgs) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutput() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceCSVMappingParametersArgs) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceCSVMappingParametersOutput).ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceCSVMappingParametersPtrInput is an input type that accepts ApplicationReferenceDataSourceCSVMappingParametersArgs, ApplicationReferenceDataSourceCSVMappingParametersPtr and ApplicationReferenceDataSourceCSVMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceCSVMappingParametersPtrInput` via:
//
//          ApplicationReferenceDataSourceCSVMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceCSVMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceCSVMappingParametersPtrOutput() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput
	ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(context.Context) ApplicationReferenceDataSourceCSVMappingParametersPtrOutput
}

type applicationReferenceDataSourceCSVMappingParametersPtrType ApplicationReferenceDataSourceCSVMappingParametersArgs

func ApplicationReferenceDataSourceCSVMappingParametersPtr(v *ApplicationReferenceDataSourceCSVMappingParametersArgs) ApplicationReferenceDataSourceCSVMappingParametersPtrInput {
	return (*applicationReferenceDataSourceCSVMappingParametersPtrType)(v)
}

func (*applicationReferenceDataSourceCSVMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceCSVMappingParameters)(nil)).Elem()
}

func (i *applicationReferenceDataSourceCSVMappingParametersPtrType) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutput() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceCSVMappingParametersPtrType) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceCSVMappingParametersPtrOutput)
}

type ApplicationReferenceDataSourceCSVMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceCSVMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceCSVMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) ToApplicationReferenceDataSourceCSVMappingParametersOutput() ApplicationReferenceDataSourceCSVMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) ToApplicationReferenceDataSourceCSVMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutput() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o.ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceCSVMappingParameters) *ApplicationReferenceDataSourceCSVMappingParameters {
		return &v
	}).(ApplicationReferenceDataSourceCSVMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceCSVMappingParameters) string { return v.RecordColumnDelimiter }).(pulumi.StringOutput)
}

func (o ApplicationReferenceDataSourceCSVMappingParametersOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceCSVMappingParameters) string { return v.RecordRowDelimiter }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceCSVMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceCSVMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutput() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) ToApplicationReferenceDataSourceCSVMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) Elem() ApplicationReferenceDataSourceCSVMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceCSVMappingParameters) ApplicationReferenceDataSourceCSVMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceCSVMappingParameters
		return ret
	}).(ApplicationReferenceDataSourceCSVMappingParametersOutput)
}

func (o ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) RecordColumnDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceCSVMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordColumnDelimiter
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceCSVMappingParametersPtrOutput) RecordRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceCSVMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowDelimiter
	}).(pulumi.StringPtrOutput)
}

type ApplicationReferenceDataSourceJSONMappingParameters struct {
	RecordRowPath string `pulumi:"recordRowPath"`
}

// ApplicationReferenceDataSourceJSONMappingParametersInput is an input type that accepts ApplicationReferenceDataSourceJSONMappingParametersArgs and ApplicationReferenceDataSourceJSONMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceJSONMappingParametersInput` via:
//
//          ApplicationReferenceDataSourceJSONMappingParametersArgs{...}
type ApplicationReferenceDataSourceJSONMappingParametersInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceJSONMappingParametersOutput() ApplicationReferenceDataSourceJSONMappingParametersOutput
	ToApplicationReferenceDataSourceJSONMappingParametersOutputWithContext(context.Context) ApplicationReferenceDataSourceJSONMappingParametersOutput
}

type ApplicationReferenceDataSourceJSONMappingParametersArgs struct {
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (ApplicationReferenceDataSourceJSONMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceJSONMappingParameters)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceJSONMappingParametersArgs) ToApplicationReferenceDataSourceJSONMappingParametersOutput() ApplicationReferenceDataSourceJSONMappingParametersOutput {
	return i.ToApplicationReferenceDataSourceJSONMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceJSONMappingParametersArgs) ToApplicationReferenceDataSourceJSONMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceJSONMappingParametersOutput)
}

func (i ApplicationReferenceDataSourceJSONMappingParametersArgs) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutput() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceJSONMappingParametersArgs) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceJSONMappingParametersOutput).ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceJSONMappingParametersPtrInput is an input type that accepts ApplicationReferenceDataSourceJSONMappingParametersArgs, ApplicationReferenceDataSourceJSONMappingParametersPtr and ApplicationReferenceDataSourceJSONMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceJSONMappingParametersPtrInput` via:
//
//          ApplicationReferenceDataSourceJSONMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceJSONMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceJSONMappingParametersPtrOutput() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput
	ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(context.Context) ApplicationReferenceDataSourceJSONMappingParametersPtrOutput
}

type applicationReferenceDataSourceJSONMappingParametersPtrType ApplicationReferenceDataSourceJSONMappingParametersArgs

func ApplicationReferenceDataSourceJSONMappingParametersPtr(v *ApplicationReferenceDataSourceJSONMappingParametersArgs) ApplicationReferenceDataSourceJSONMappingParametersPtrInput {
	return (*applicationReferenceDataSourceJSONMappingParametersPtrType)(v)
}

func (*applicationReferenceDataSourceJSONMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceJSONMappingParameters)(nil)).Elem()
}

func (i *applicationReferenceDataSourceJSONMappingParametersPtrType) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutput() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceJSONMappingParametersPtrType) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceJSONMappingParametersPtrOutput)
}

type ApplicationReferenceDataSourceJSONMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceJSONMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceJSONMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceJSONMappingParametersOutput) ToApplicationReferenceDataSourceJSONMappingParametersOutput() ApplicationReferenceDataSourceJSONMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceJSONMappingParametersOutput) ToApplicationReferenceDataSourceJSONMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceJSONMappingParametersOutput) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutput() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o.ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceJSONMappingParametersOutput) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceJSONMappingParameters) *ApplicationReferenceDataSourceJSONMappingParameters {
		return &v
	}).(ApplicationReferenceDataSourceJSONMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceJSONMappingParametersOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceJSONMappingParameters) string { return v.RecordRowPath }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceJSONMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceJSONMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceJSONMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceJSONMappingParametersPtrOutput) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutput() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceJSONMappingParametersPtrOutput) ToApplicationReferenceDataSourceJSONMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceJSONMappingParametersPtrOutput) Elem() ApplicationReferenceDataSourceJSONMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceJSONMappingParameters) ApplicationReferenceDataSourceJSONMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceJSONMappingParameters
		return ret
	}).(ApplicationReferenceDataSourceJSONMappingParametersOutput)
}

func (o ApplicationReferenceDataSourceJSONMappingParametersPtrOutput) RecordRowPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceJSONMappingParameters) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowPath
	}).(pulumi.StringPtrOutput)
}

type ApplicationReferenceDataSourceMappingParameters struct {
	CSVMappingParameters  *ApplicationReferenceDataSourceCSVMappingParameters  `pulumi:"cSVMappingParameters"`
	JSONMappingParameters *ApplicationReferenceDataSourceJSONMappingParameters `pulumi:"jSONMappingParameters"`
}

// ApplicationReferenceDataSourceMappingParametersInput is an input type that accepts ApplicationReferenceDataSourceMappingParametersArgs and ApplicationReferenceDataSourceMappingParametersOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceMappingParametersInput` via:
//
//          ApplicationReferenceDataSourceMappingParametersArgs{...}
type ApplicationReferenceDataSourceMappingParametersInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceMappingParametersOutput() ApplicationReferenceDataSourceMappingParametersOutput
	ToApplicationReferenceDataSourceMappingParametersOutputWithContext(context.Context) ApplicationReferenceDataSourceMappingParametersOutput
}

type ApplicationReferenceDataSourceMappingParametersArgs struct {
	CSVMappingParameters  ApplicationReferenceDataSourceCSVMappingParametersPtrInput  `pulumi:"cSVMappingParameters"`
	JSONMappingParameters ApplicationReferenceDataSourceJSONMappingParametersPtrInput `pulumi:"jSONMappingParameters"`
}

func (ApplicationReferenceDataSourceMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceMappingParameters)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceMappingParametersArgs) ToApplicationReferenceDataSourceMappingParametersOutput() ApplicationReferenceDataSourceMappingParametersOutput {
	return i.ToApplicationReferenceDataSourceMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceMappingParametersArgs) ToApplicationReferenceDataSourceMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceMappingParametersOutput)
}

func (i ApplicationReferenceDataSourceMappingParametersArgs) ToApplicationReferenceDataSourceMappingParametersPtrOutput() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceMappingParametersArgs) ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceMappingParametersOutput).ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceMappingParametersPtrInput is an input type that accepts ApplicationReferenceDataSourceMappingParametersArgs, ApplicationReferenceDataSourceMappingParametersPtr and ApplicationReferenceDataSourceMappingParametersPtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceMappingParametersPtrInput` via:
//
//          ApplicationReferenceDataSourceMappingParametersArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceMappingParametersPtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceMappingParametersPtrOutput() ApplicationReferenceDataSourceMappingParametersPtrOutput
	ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(context.Context) ApplicationReferenceDataSourceMappingParametersPtrOutput
}

type applicationReferenceDataSourceMappingParametersPtrType ApplicationReferenceDataSourceMappingParametersArgs

func ApplicationReferenceDataSourceMappingParametersPtr(v *ApplicationReferenceDataSourceMappingParametersArgs) ApplicationReferenceDataSourceMappingParametersPtrInput {
	return (*applicationReferenceDataSourceMappingParametersPtrType)(v)
}

func (*applicationReferenceDataSourceMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceMappingParameters)(nil)).Elem()
}

func (i *applicationReferenceDataSourceMappingParametersPtrType) ToApplicationReferenceDataSourceMappingParametersPtrOutput() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return i.ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceMappingParametersPtrType) ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceMappingParametersPtrOutput)
}

type ApplicationReferenceDataSourceMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) ToApplicationReferenceDataSourceMappingParametersOutput() ApplicationReferenceDataSourceMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) ToApplicationReferenceDataSourceMappingParametersOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersOutput {
	return o
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) ToApplicationReferenceDataSourceMappingParametersPtrOutput() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o.ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceMappingParameters) *ApplicationReferenceDataSourceMappingParameters {
		return &v
	}).(ApplicationReferenceDataSourceMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) CSVMappingParameters() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceMappingParameters) *ApplicationReferenceDataSourceCSVMappingParameters {
		return v.CSVMappingParameters
	}).(ApplicationReferenceDataSourceCSVMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceMappingParametersOutput) JSONMappingParameters() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceMappingParameters) *ApplicationReferenceDataSourceJSONMappingParameters {
		return v.JSONMappingParameters
	}).(ApplicationReferenceDataSourceJSONMappingParametersPtrOutput)
}

type ApplicationReferenceDataSourceMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceMappingParameters)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceMappingParametersPtrOutput) ToApplicationReferenceDataSourceMappingParametersPtrOutput() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceMappingParametersPtrOutput) ToApplicationReferenceDataSourceMappingParametersPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceMappingParametersPtrOutput) Elem() ApplicationReferenceDataSourceMappingParametersOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceMappingParameters) ApplicationReferenceDataSourceMappingParameters {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceMappingParameters
		return ret
	}).(ApplicationReferenceDataSourceMappingParametersOutput)
}

func (o ApplicationReferenceDataSourceMappingParametersPtrOutput) CSVMappingParameters() ApplicationReferenceDataSourceCSVMappingParametersPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceMappingParameters) *ApplicationReferenceDataSourceCSVMappingParameters {
		if v == nil {
			return nil
		}
		return v.CSVMappingParameters
	}).(ApplicationReferenceDataSourceCSVMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceMappingParametersPtrOutput) JSONMappingParameters() ApplicationReferenceDataSourceJSONMappingParametersPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceMappingParameters) *ApplicationReferenceDataSourceJSONMappingParameters {
		if v == nil {
			return nil
		}
		return v.JSONMappingParameters
	}).(ApplicationReferenceDataSourceJSONMappingParametersPtrOutput)
}

type ApplicationReferenceDataSourceRecordColumn struct {
	Mapping *string `pulumi:"mapping"`
	Name    string  `pulumi:"name"`
	SqlType string  `pulumi:"sqlType"`
}

// ApplicationReferenceDataSourceRecordColumnInput is an input type that accepts ApplicationReferenceDataSourceRecordColumnArgs and ApplicationReferenceDataSourceRecordColumnOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceRecordColumnInput` via:
//
//          ApplicationReferenceDataSourceRecordColumnArgs{...}
type ApplicationReferenceDataSourceRecordColumnInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceRecordColumnOutput() ApplicationReferenceDataSourceRecordColumnOutput
	ToApplicationReferenceDataSourceRecordColumnOutputWithContext(context.Context) ApplicationReferenceDataSourceRecordColumnOutput
}

type ApplicationReferenceDataSourceRecordColumnArgs struct {
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	Name    pulumi.StringInput    `pulumi:"name"`
	SqlType pulumi.StringInput    `pulumi:"sqlType"`
}

func (ApplicationReferenceDataSourceRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceRecordColumn)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceRecordColumnArgs) ToApplicationReferenceDataSourceRecordColumnOutput() ApplicationReferenceDataSourceRecordColumnOutput {
	return i.ToApplicationReferenceDataSourceRecordColumnOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceRecordColumnArgs) ToApplicationReferenceDataSourceRecordColumnOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceRecordColumnOutput)
}

// ApplicationReferenceDataSourceRecordColumnArrayInput is an input type that accepts ApplicationReferenceDataSourceRecordColumnArray and ApplicationReferenceDataSourceRecordColumnArrayOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceRecordColumnArrayInput` via:
//
//          ApplicationReferenceDataSourceRecordColumnArray{ ApplicationReferenceDataSourceRecordColumnArgs{...} }
type ApplicationReferenceDataSourceRecordColumnArrayInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceRecordColumnArrayOutput() ApplicationReferenceDataSourceRecordColumnArrayOutput
	ToApplicationReferenceDataSourceRecordColumnArrayOutputWithContext(context.Context) ApplicationReferenceDataSourceRecordColumnArrayOutput
}

type ApplicationReferenceDataSourceRecordColumnArray []ApplicationReferenceDataSourceRecordColumnInput

func (ApplicationReferenceDataSourceRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationReferenceDataSourceRecordColumn)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceRecordColumnArray) ToApplicationReferenceDataSourceRecordColumnArrayOutput() ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return i.ToApplicationReferenceDataSourceRecordColumnArrayOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceRecordColumnArray) ToApplicationReferenceDataSourceRecordColumnArrayOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceRecordColumnArrayOutput)
}

type ApplicationReferenceDataSourceRecordColumnOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceRecordColumn)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceRecordColumnOutput) ToApplicationReferenceDataSourceRecordColumnOutput() ApplicationReferenceDataSourceRecordColumnOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordColumnOutput) ToApplicationReferenceDataSourceRecordColumnOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordColumnOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationReferenceDataSourceRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationReferenceDataSourceRecordColumn)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceRecordColumnArrayOutput) ToApplicationReferenceDataSourceRecordColumnArrayOutput() ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordColumnArrayOutput) ToApplicationReferenceDataSourceRecordColumnArrayOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordColumnArrayOutput) Index(i pulumi.IntInput) ApplicationReferenceDataSourceRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationReferenceDataSourceRecordColumn {
		return vs[0].([]ApplicationReferenceDataSourceRecordColumn)[vs[1].(int)]
	}).(ApplicationReferenceDataSourceRecordColumnOutput)
}

type ApplicationReferenceDataSourceRecordFormat struct {
	MappingParameters *ApplicationReferenceDataSourceMappingParameters `pulumi:"mappingParameters"`
	RecordFormatType  string                                           `pulumi:"recordFormatType"`
}

// ApplicationReferenceDataSourceRecordFormatInput is an input type that accepts ApplicationReferenceDataSourceRecordFormatArgs and ApplicationReferenceDataSourceRecordFormatOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceRecordFormatInput` via:
//
//          ApplicationReferenceDataSourceRecordFormatArgs{...}
type ApplicationReferenceDataSourceRecordFormatInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceRecordFormatOutput() ApplicationReferenceDataSourceRecordFormatOutput
	ToApplicationReferenceDataSourceRecordFormatOutputWithContext(context.Context) ApplicationReferenceDataSourceRecordFormatOutput
}

type ApplicationReferenceDataSourceRecordFormatArgs struct {
	MappingParameters ApplicationReferenceDataSourceMappingParametersPtrInput `pulumi:"mappingParameters"`
	RecordFormatType  pulumi.StringInput                                      `pulumi:"recordFormatType"`
}

func (ApplicationReferenceDataSourceRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceRecordFormat)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceRecordFormatArgs) ToApplicationReferenceDataSourceRecordFormatOutput() ApplicationReferenceDataSourceRecordFormatOutput {
	return i.ToApplicationReferenceDataSourceRecordFormatOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceRecordFormatArgs) ToApplicationReferenceDataSourceRecordFormatOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceRecordFormatOutput)
}

func (i ApplicationReferenceDataSourceRecordFormatArgs) ToApplicationReferenceDataSourceRecordFormatPtrOutput() ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return i.ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceRecordFormatArgs) ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceRecordFormatOutput).ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceRecordFormatPtrInput is an input type that accepts ApplicationReferenceDataSourceRecordFormatArgs, ApplicationReferenceDataSourceRecordFormatPtr and ApplicationReferenceDataSourceRecordFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceRecordFormatPtrInput` via:
//
//          ApplicationReferenceDataSourceRecordFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceRecordFormatPtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceRecordFormatPtrOutput() ApplicationReferenceDataSourceRecordFormatPtrOutput
	ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(context.Context) ApplicationReferenceDataSourceRecordFormatPtrOutput
}

type applicationReferenceDataSourceRecordFormatPtrType ApplicationReferenceDataSourceRecordFormatArgs

func ApplicationReferenceDataSourceRecordFormatPtr(v *ApplicationReferenceDataSourceRecordFormatArgs) ApplicationReferenceDataSourceRecordFormatPtrInput {
	return (*applicationReferenceDataSourceRecordFormatPtrType)(v)
}

func (*applicationReferenceDataSourceRecordFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceRecordFormat)(nil)).Elem()
}

func (i *applicationReferenceDataSourceRecordFormatPtrType) ToApplicationReferenceDataSourceRecordFormatPtrOutput() ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return i.ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceRecordFormatPtrType) ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceRecordFormatPtrOutput)
}

type ApplicationReferenceDataSourceRecordFormatOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceRecordFormat)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) ToApplicationReferenceDataSourceRecordFormatOutput() ApplicationReferenceDataSourceRecordFormatOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) ToApplicationReferenceDataSourceRecordFormatOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) ToApplicationReferenceDataSourceRecordFormatPtrOutput() ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return o.ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceRecordFormat) *ApplicationReferenceDataSourceRecordFormat {
		return &v
	}).(ApplicationReferenceDataSourceRecordFormatPtrOutput)
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) MappingParameters() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceRecordFormat) *ApplicationReferenceDataSourceMappingParameters {
		return v.MappingParameters
	}).(ApplicationReferenceDataSourceMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceRecordFormatOutput) RecordFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceRecordFormat) string { return v.RecordFormatType }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceRecordFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceRecordFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceRecordFormat)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceRecordFormatPtrOutput) ToApplicationReferenceDataSourceRecordFormatPtrOutput() ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordFormatPtrOutput) ToApplicationReferenceDataSourceRecordFormatPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceRecordFormatPtrOutput) Elem() ApplicationReferenceDataSourceRecordFormatOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceRecordFormat) ApplicationReferenceDataSourceRecordFormat {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceRecordFormat
		return ret
	}).(ApplicationReferenceDataSourceRecordFormatOutput)
}

func (o ApplicationReferenceDataSourceRecordFormatPtrOutput) MappingParameters() ApplicationReferenceDataSourceMappingParametersPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceRecordFormat) *ApplicationReferenceDataSourceMappingParameters {
		if v == nil {
			return nil
		}
		return v.MappingParameters
	}).(ApplicationReferenceDataSourceMappingParametersPtrOutput)
}

func (o ApplicationReferenceDataSourceRecordFormatPtrOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceRecordFormat) *string {
		if v == nil {
			return nil
		}
		return &v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type ApplicationReferenceDataSourceReferenceDataSource struct {
	ReferenceSchema       ApplicationReferenceDataSourceReferenceSchema        `pulumi:"referenceSchema"`
	S3ReferenceDataSource *ApplicationReferenceDataSourceS3ReferenceDataSource `pulumi:"s3ReferenceDataSource"`
	TableName             *string                                              `pulumi:"tableName"`
}

// ApplicationReferenceDataSourceReferenceDataSourceInput is an input type that accepts ApplicationReferenceDataSourceReferenceDataSourceArgs and ApplicationReferenceDataSourceReferenceDataSourceOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceReferenceDataSourceInput` via:
//
//          ApplicationReferenceDataSourceReferenceDataSourceArgs{...}
type ApplicationReferenceDataSourceReferenceDataSourceInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceReferenceDataSourceOutput() ApplicationReferenceDataSourceReferenceDataSourceOutput
	ToApplicationReferenceDataSourceReferenceDataSourceOutputWithContext(context.Context) ApplicationReferenceDataSourceReferenceDataSourceOutput
}

type ApplicationReferenceDataSourceReferenceDataSourceArgs struct {
	ReferenceSchema       ApplicationReferenceDataSourceReferenceSchemaInput          `pulumi:"referenceSchema"`
	S3ReferenceDataSource ApplicationReferenceDataSourceS3ReferenceDataSourcePtrInput `pulumi:"s3ReferenceDataSource"`
	TableName             pulumi.StringPtrInput                                       `pulumi:"tableName"`
}

func (ApplicationReferenceDataSourceReferenceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceReferenceDataSource)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceReferenceDataSourceArgs) ToApplicationReferenceDataSourceReferenceDataSourceOutput() ApplicationReferenceDataSourceReferenceDataSourceOutput {
	return i.ToApplicationReferenceDataSourceReferenceDataSourceOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceReferenceDataSourceArgs) ToApplicationReferenceDataSourceReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceDataSourceOutput)
}

func (i ApplicationReferenceDataSourceReferenceDataSourceArgs) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return i.ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceReferenceDataSourceArgs) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceDataSourceOutput).ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceReferenceDataSourcePtrInput is an input type that accepts ApplicationReferenceDataSourceReferenceDataSourceArgs, ApplicationReferenceDataSourceReferenceDataSourcePtr and ApplicationReferenceDataSourceReferenceDataSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceReferenceDataSourcePtrInput` via:
//
//          ApplicationReferenceDataSourceReferenceDataSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceReferenceDataSourcePtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceReferenceDataSourcePtrOutput
	ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(context.Context) ApplicationReferenceDataSourceReferenceDataSourcePtrOutput
}

type applicationReferenceDataSourceReferenceDataSourcePtrType ApplicationReferenceDataSourceReferenceDataSourceArgs

func ApplicationReferenceDataSourceReferenceDataSourcePtr(v *ApplicationReferenceDataSourceReferenceDataSourceArgs) ApplicationReferenceDataSourceReferenceDataSourcePtrInput {
	return (*applicationReferenceDataSourceReferenceDataSourcePtrType)(v)
}

func (*applicationReferenceDataSourceReferenceDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceReferenceDataSource)(nil)).Elem()
}

func (i *applicationReferenceDataSourceReferenceDataSourcePtrType) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return i.ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceReferenceDataSourcePtrType) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceDataSourcePtrOutput)
}

type ApplicationReferenceDataSourceReferenceDataSourceOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceReferenceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceReferenceDataSource)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) ToApplicationReferenceDataSourceReferenceDataSourceOutput() ApplicationReferenceDataSourceReferenceDataSourceOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) ToApplicationReferenceDataSourceReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourceOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return o.ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceReferenceDataSource) *ApplicationReferenceDataSourceReferenceDataSource {
		return &v
	}).(ApplicationReferenceDataSourceReferenceDataSourcePtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) ReferenceSchema() ApplicationReferenceDataSourceReferenceSchemaOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceDataSource) ApplicationReferenceDataSourceReferenceSchema {
		return v.ReferenceSchema
	}).(ApplicationReferenceDataSourceReferenceSchemaOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) S3ReferenceDataSource() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceDataSource) *ApplicationReferenceDataSourceS3ReferenceDataSource {
		return v.S3ReferenceDataSource
	}).(ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourceOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceDataSource) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

type ApplicationReferenceDataSourceReferenceDataSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceReferenceDataSource)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) ToApplicationReferenceDataSourceReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceDataSourcePtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) Elem() ApplicationReferenceDataSourceReferenceDataSourceOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceDataSource) ApplicationReferenceDataSourceReferenceDataSource {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceReferenceDataSource
		return ret
	}).(ApplicationReferenceDataSourceReferenceDataSourceOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) ReferenceSchema() ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceDataSource) *ApplicationReferenceDataSourceReferenceSchema {
		if v == nil {
			return nil
		}
		return &v.ReferenceSchema
	}).(ApplicationReferenceDataSourceReferenceSchemaPtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) S3ReferenceDataSource() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceDataSource) *ApplicationReferenceDataSourceS3ReferenceDataSource {
		if v == nil {
			return nil
		}
		return v.S3ReferenceDataSource
	}).(ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceDataSourcePtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceDataSource) *string {
		if v == nil {
			return nil
		}
		return v.TableName
	}).(pulumi.StringPtrOutput)
}

type ApplicationReferenceDataSourceReferenceSchema struct {
	RecordColumns  []ApplicationReferenceDataSourceRecordColumn `pulumi:"recordColumns"`
	RecordEncoding *string                                      `pulumi:"recordEncoding"`
	RecordFormat   ApplicationReferenceDataSourceRecordFormat   `pulumi:"recordFormat"`
}

// ApplicationReferenceDataSourceReferenceSchemaInput is an input type that accepts ApplicationReferenceDataSourceReferenceSchemaArgs and ApplicationReferenceDataSourceReferenceSchemaOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceReferenceSchemaInput` via:
//
//          ApplicationReferenceDataSourceReferenceSchemaArgs{...}
type ApplicationReferenceDataSourceReferenceSchemaInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceReferenceSchemaOutput() ApplicationReferenceDataSourceReferenceSchemaOutput
	ToApplicationReferenceDataSourceReferenceSchemaOutputWithContext(context.Context) ApplicationReferenceDataSourceReferenceSchemaOutput
}

type ApplicationReferenceDataSourceReferenceSchemaArgs struct {
	RecordColumns  ApplicationReferenceDataSourceRecordColumnArrayInput `pulumi:"recordColumns"`
	RecordEncoding pulumi.StringPtrInput                                `pulumi:"recordEncoding"`
	RecordFormat   ApplicationReferenceDataSourceRecordFormatInput      `pulumi:"recordFormat"`
}

func (ApplicationReferenceDataSourceReferenceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceReferenceSchemaArgs) ToApplicationReferenceDataSourceReferenceSchemaOutput() ApplicationReferenceDataSourceReferenceSchemaOutput {
	return i.ToApplicationReferenceDataSourceReferenceSchemaOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceReferenceSchemaArgs) ToApplicationReferenceDataSourceReferenceSchemaOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceSchemaOutput)
}

func (i ApplicationReferenceDataSourceReferenceSchemaArgs) ToApplicationReferenceDataSourceReferenceSchemaPtrOutput() ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return i.ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceReferenceSchemaArgs) ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceSchemaOutput).ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceReferenceSchemaPtrInput is an input type that accepts ApplicationReferenceDataSourceReferenceSchemaArgs, ApplicationReferenceDataSourceReferenceSchemaPtr and ApplicationReferenceDataSourceReferenceSchemaPtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceReferenceSchemaPtrInput` via:
//
//          ApplicationReferenceDataSourceReferenceSchemaArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceReferenceSchemaPtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceReferenceSchemaPtrOutput() ApplicationReferenceDataSourceReferenceSchemaPtrOutput
	ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(context.Context) ApplicationReferenceDataSourceReferenceSchemaPtrOutput
}

type applicationReferenceDataSourceReferenceSchemaPtrType ApplicationReferenceDataSourceReferenceSchemaArgs

func ApplicationReferenceDataSourceReferenceSchemaPtr(v *ApplicationReferenceDataSourceReferenceSchemaArgs) ApplicationReferenceDataSourceReferenceSchemaPtrInput {
	return (*applicationReferenceDataSourceReferenceSchemaPtrType)(v)
}

func (*applicationReferenceDataSourceReferenceSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (i *applicationReferenceDataSourceReferenceSchemaPtrType) ToApplicationReferenceDataSourceReferenceSchemaPtrOutput() ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return i.ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceReferenceSchemaPtrType) ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceReferenceSchemaPtrOutput)
}

type ApplicationReferenceDataSourceReferenceSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceReferenceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) ToApplicationReferenceDataSourceReferenceSchemaOutput() ApplicationReferenceDataSourceReferenceSchemaOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) ToApplicationReferenceDataSourceReferenceSchemaOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) ToApplicationReferenceDataSourceReferenceSchemaPtrOutput() ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return o.ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceReferenceSchema) *ApplicationReferenceDataSourceReferenceSchema {
		return &v
	}).(ApplicationReferenceDataSourceReferenceSchemaPtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) RecordColumns() ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceSchema) []ApplicationReferenceDataSourceRecordColumn {
		return v.RecordColumns
	}).(ApplicationReferenceDataSourceRecordColumnArrayOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaOutput) RecordFormat() ApplicationReferenceDataSourceRecordFormatOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceReferenceSchema) ApplicationReferenceDataSourceRecordFormat {
		return v.RecordFormat
	}).(ApplicationReferenceDataSourceRecordFormatOutput)
}

type ApplicationReferenceDataSourceReferenceSchemaPtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceReferenceSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) ToApplicationReferenceDataSourceReferenceSchemaPtrOutput() ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) ToApplicationReferenceDataSourceReferenceSchemaPtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceReferenceSchemaPtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) Elem() ApplicationReferenceDataSourceReferenceSchemaOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceSchema) ApplicationReferenceDataSourceReferenceSchema {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceReferenceSchema
		return ret
	}).(ApplicationReferenceDataSourceReferenceSchemaOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) RecordColumns() ApplicationReferenceDataSourceRecordColumnArrayOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceSchema) []ApplicationReferenceDataSourceRecordColumn {
		if v == nil {
			return nil
		}
		return v.RecordColumns
	}).(ApplicationReferenceDataSourceRecordColumnArrayOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceSchema) *string {
		if v == nil {
			return nil
		}
		return v.RecordEncoding
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceReferenceSchemaPtrOutput) RecordFormat() ApplicationReferenceDataSourceRecordFormatPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceReferenceSchema) *ApplicationReferenceDataSourceRecordFormat {
		if v == nil {
			return nil
		}
		return &v.RecordFormat
	}).(ApplicationReferenceDataSourceRecordFormatPtrOutput)
}

type ApplicationReferenceDataSourceS3ReferenceDataSource struct {
	BucketARN        string `pulumi:"bucketARN"`
	FileKey          string `pulumi:"fileKey"`
	ReferenceRoleARN string `pulumi:"referenceRoleARN"`
}

// ApplicationReferenceDataSourceS3ReferenceDataSourceInput is an input type that accepts ApplicationReferenceDataSourceS3ReferenceDataSourceArgs and ApplicationReferenceDataSourceS3ReferenceDataSourceOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceS3ReferenceDataSourceInput` via:
//
//          ApplicationReferenceDataSourceS3ReferenceDataSourceArgs{...}
type ApplicationReferenceDataSourceS3ReferenceDataSourceInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceS3ReferenceDataSourceOutput() ApplicationReferenceDataSourceS3ReferenceDataSourceOutput
	ToApplicationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourceOutput
}

type ApplicationReferenceDataSourceS3ReferenceDataSourceArgs struct {
	BucketARN        pulumi.StringInput `pulumi:"bucketARN"`
	FileKey          pulumi.StringInput `pulumi:"fileKey"`
	ReferenceRoleARN pulumi.StringInput `pulumi:"referenceRoleARN"`
}

func (ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (i ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationReferenceDataSourceS3ReferenceDataSourceOutput() ApplicationReferenceDataSourceS3ReferenceDataSourceOutput {
	return i.ToApplicationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceS3ReferenceDataSourceOutput)
}

func (i ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return i.ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (i ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceS3ReferenceDataSourceOutput).ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(ctx)
}

// ApplicationReferenceDataSourceS3ReferenceDataSourcePtrInput is an input type that accepts ApplicationReferenceDataSourceS3ReferenceDataSourceArgs, ApplicationReferenceDataSourceS3ReferenceDataSourcePtr and ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput values.
// You can construct a concrete instance of `ApplicationReferenceDataSourceS3ReferenceDataSourcePtrInput` via:
//
//          ApplicationReferenceDataSourceS3ReferenceDataSourceArgs{...}
//
//  or:
//
//          nil
type ApplicationReferenceDataSourceS3ReferenceDataSourcePtrInput interface {
	pulumi.Input

	ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput
	ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput
}

type applicationReferenceDataSourceS3ReferenceDataSourcePtrType ApplicationReferenceDataSourceS3ReferenceDataSourceArgs

func ApplicationReferenceDataSourceS3ReferenceDataSourcePtr(v *ApplicationReferenceDataSourceS3ReferenceDataSourceArgs) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrInput {
	return (*applicationReferenceDataSourceS3ReferenceDataSourcePtrType)(v)
}

func (*applicationReferenceDataSourceS3ReferenceDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (i *applicationReferenceDataSourceS3ReferenceDataSourcePtrType) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return i.ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (i *applicationReferenceDataSourceS3ReferenceDataSourcePtrType) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput)
}

type ApplicationReferenceDataSourceS3ReferenceDataSourceOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourceOutput() ApplicationReferenceDataSourceS3ReferenceDataSourceOutput {
	return o
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourceOutput {
	return o
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o.ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(context.Background())
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationReferenceDataSourceS3ReferenceDataSource) *ApplicationReferenceDataSourceS3ReferenceDataSource {
		return &v
	}).(ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) BucketARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceS3ReferenceDataSource) string { return v.BucketARN }).(pulumi.StringOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceS3ReferenceDataSource) string { return v.FileKey }).(pulumi.StringOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourceOutput) ReferenceRoleARN() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationReferenceDataSourceS3ReferenceDataSource) string { return v.ReferenceRoleARN }).(pulumi.StringOutput)
}

type ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput struct{ *pulumi.OutputState }

func (ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput() ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) ToApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutputWithContext(ctx context.Context) ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput {
	return o
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) Elem() ApplicationReferenceDataSourceS3ReferenceDataSourceOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceS3ReferenceDataSource) ApplicationReferenceDataSourceS3ReferenceDataSource {
		if v != nil {
			return *v
		}
		var ret ApplicationReferenceDataSourceS3ReferenceDataSource
		return ret
	}).(ApplicationReferenceDataSourceS3ReferenceDataSourceOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) BucketARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceS3ReferenceDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.BucketARN
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) FileKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceS3ReferenceDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.FileKey
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput) ReferenceRoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationReferenceDataSourceS3ReferenceDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceRoleARN
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationCSVMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationCSVMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInputTypeOutput{})
	pulumi.RegisterOutputType(ApplicationInputTypeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationInputLambdaProcessorOutput{})
	pulumi.RegisterOutputType(ApplicationInputLambdaProcessorPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInputParallelismOutput{})
	pulumi.RegisterOutputType(ApplicationInputParallelismPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInputProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationInputProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInputSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationJSONMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationJSONMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationKinesisFirehoseInputOutput{})
	pulumi.RegisterOutputType(ApplicationKinesisFirehoseInputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationKinesisStreamsInputOutput{})
	pulumi.RegisterOutputType(ApplicationKinesisStreamsInputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceDestinationSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceDestinationSchemaPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceKinesisFirehoseOutputOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceKinesisFirehoseOutputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceKinesisStreamsOutputOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceKinesisStreamsOutputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceLambdaOutputOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceLambdaOutputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceOutputTypeOutput{})
	pulumi.RegisterOutputType(ApplicationOutputResourceOutputTypePtrOutput{})
	pulumi.RegisterOutputType(ApplicationRecordColumnOutput{})
	pulumi.RegisterOutputType(ApplicationRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(ApplicationRecordFormatOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceCSVMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceCSVMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceJSONMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceJSONMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceRecordColumnOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceRecordFormatOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceRecordFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceReferenceDataSourceOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceReferenceDataSourcePtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceReferenceSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceReferenceSchemaPtrOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceS3ReferenceDataSourceOutput{})
	pulumi.RegisterOutputType(ApplicationReferenceDataSourceS3ReferenceDataSourcePtrOutput{})
}
