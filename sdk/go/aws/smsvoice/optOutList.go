// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smsvoice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SMSVOICE::OptOutList
type OptOutList struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the OptOutList.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name of the new OptOutList.
	OptOutListName pulumi.StringPtrOutput `pulumi:"optOutListName"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewOptOutList registers a new resource with the given unique name, arguments, and options.
func NewOptOutList(ctx *pulumi.Context,
	name string, args *OptOutListArgs, opts ...pulumi.ResourceOption) (*OptOutList, error) {
	if args == nil {
		args = &OptOutListArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"optOutListName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OptOutList
	err := ctx.RegisterResource("aws-native:smsvoice:OptOutList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOptOutList gets an existing OptOutList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOptOutList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OptOutListState, opts ...pulumi.ResourceOption) (*OptOutList, error) {
	var resource OptOutList
	err := ctx.ReadResource("aws-native:smsvoice:OptOutList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OptOutList resources.
type optOutListState struct {
}

type OptOutListState struct {
}

func (OptOutListState) ElementType() reflect.Type {
	return reflect.TypeOf((*optOutListState)(nil)).Elem()
}

type optOutListArgs struct {
	// The name of the new OptOutList.
	OptOutListName *string `pulumi:"optOutListName"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a OptOutList resource.
type OptOutListArgs struct {
	// The name of the new OptOutList.
	OptOutListName pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (OptOutListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*optOutListArgs)(nil)).Elem()
}

type OptOutListInput interface {
	pulumi.Input

	ToOptOutListOutput() OptOutListOutput
	ToOptOutListOutputWithContext(ctx context.Context) OptOutListOutput
}

func (*OptOutList) ElementType() reflect.Type {
	return reflect.TypeOf((**OptOutList)(nil)).Elem()
}

func (i *OptOutList) ToOptOutListOutput() OptOutListOutput {
	return i.ToOptOutListOutputWithContext(context.Background())
}

func (i *OptOutList) ToOptOutListOutputWithContext(ctx context.Context) OptOutListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptOutListOutput)
}

type OptOutListOutput struct{ *pulumi.OutputState }

func (OptOutListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptOutList)(nil)).Elem()
}

func (o OptOutListOutput) ToOptOutListOutput() OptOutListOutput {
	return o
}

func (o OptOutListOutput) ToOptOutListOutputWithContext(ctx context.Context) OptOutListOutput {
	return o
}

// The Amazon Resource Name (ARN) for the OptOutList.
func (o OptOutListOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OptOutList) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The name of the new OptOutList.
func (o OptOutListOutput) OptOutListName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptOutList) pulumi.StringPtrOutput { return v.OptOutListName }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o OptOutListOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *OptOutList) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OptOutListInput)(nil)).Elem(), &OptOutList{})
	pulumi.RegisterOutputType(OptOutListOutput{})
}
