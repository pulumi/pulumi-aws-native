// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smsvoice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SMSVOICE::Pool
func LookupPool(ctx *pulumi.Context, args *LookupPoolArgs, opts ...pulumi.InvokeOption) (*LookupPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPoolResult
	err := ctx.Invoke("aws-native:smsvoice:getPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPoolArgs struct {
	PoolId string `pulumi:"poolId"`
}

type LookupPoolResult struct {
	Arn *string `pulumi:"arn"`
	// When set to true the pool can't be deleted. By default this is set to false.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
	MandatoryKeywords *MandatoryKeywordsProperties `pulumi:"mandatoryKeywords"`
	// The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
	OptOutListName *string `pulumi:"optOutListName"`
	// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
	OptionalKeywords []PoolOptionalKeyword `pulumi:"optionalKeywords"`
	// The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
	OriginationIdentities []string `pulumi:"originationIdentities"`
	PoolId                *string  `pulumi:"poolId"`
	// By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
	SelfManagedOptOutsEnabled *bool `pulumi:"selfManagedOptOutsEnabled"`
	// Indicates whether shared routes are enabled for the pool.
	SharedRoutesEnabled *bool `pulumi:"sharedRoutesEnabled"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
	TwoWay *TwoWayProperties `pulumi:"twoWay"`
}

func LookupPoolOutput(ctx *pulumi.Context, args LookupPoolOutputArgs, opts ...pulumi.InvokeOption) LookupPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPoolResultOutput, error) {
			args := v.(LookupPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:smsvoice:getPool", args, LookupPoolResultOutput{}, options).(LookupPoolResultOutput), nil
		}).(LookupPoolResultOutput)
}

type LookupPoolOutputArgs struct {
	PoolId pulumi.StringInput `pulumi:"poolId"`
}

func (LookupPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPoolArgs)(nil)).Elem()
}

type LookupPoolResultOutput struct{ *pulumi.OutputState }

func (LookupPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPoolResult)(nil)).Elem()
}

func (o LookupPoolResultOutput) ToLookupPoolResultOutput() LookupPoolResultOutput {
	return o
}

func (o LookupPoolResultOutput) ToLookupPoolResultOutputWithContext(ctx context.Context) LookupPoolResultOutput {
	return o
}

func (o LookupPoolResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// When set to true the pool can't be deleted. By default this is set to false.
func (o LookupPoolResultOutput) DeletionProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *bool { return v.DeletionProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
func (o LookupPoolResultOutput) MandatoryKeywords() MandatoryKeywordsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *MandatoryKeywordsProperties { return v.MandatoryKeywords }).(MandatoryKeywordsPropertiesPtrOutput)
}

// The name of the OptOutList to associate with the pool. You can use the OptOutListName or OptOutListArn.
func (o LookupPoolResultOutput) OptOutListName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *string { return v.OptOutListName }).(pulumi.StringPtrOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
func (o LookupPoolResultOutput) OptionalKeywords() PoolOptionalKeywordArrayOutput {
	return o.ApplyT(func(v LookupPoolResult) []PoolOptionalKeyword { return v.OptionalKeywords }).(PoolOptionalKeywordArrayOutput)
}

// The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn and it's IsoCountryCode.
func (o LookupPoolResultOutput) OriginationIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPoolResult) []string { return v.OriginationIdentities }).(pulumi.StringArrayOutput)
}

func (o LookupPoolResultOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *string { return v.PoolId }).(pulumi.StringPtrOutput)
}

// By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.
func (o LookupPoolResultOutput) SelfManagedOptOutsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *bool { return v.SelfManagedOptOutsEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether shared routes are enabled for the pool.
func (o LookupPoolResultOutput) SharedRoutesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *bool { return v.SharedRoutesEnabled }).(pulumi.BoolPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupPoolResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPoolResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
func (o LookupPoolResultOutput) TwoWay() TwoWayPropertiesPtrOutput {
	return o.ApplyT(func(v LookupPoolResult) *TwoWayProperties { return v.TwoWay }).(TwoWayPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPoolResultOutput{})
}
