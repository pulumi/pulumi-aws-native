// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smsvoice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConfigurationSetCloudWatchLogsDestination struct {
	// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
	IamRoleArn string `pulumi:"iamRoleArn"`
	// The name of the Amazon CloudWatch log group that you want to record events in.
	LogGroupArn string `pulumi:"logGroupArn"`
}

// ConfigurationSetCloudWatchLogsDestinationInput is an input type that accepts ConfigurationSetCloudWatchLogsDestinationArgs and ConfigurationSetCloudWatchLogsDestinationOutput values.
// You can construct a concrete instance of `ConfigurationSetCloudWatchLogsDestinationInput` via:
//
//	ConfigurationSetCloudWatchLogsDestinationArgs{...}
type ConfigurationSetCloudWatchLogsDestinationInput interface {
	pulumi.Input

	ToConfigurationSetCloudWatchLogsDestinationOutput() ConfigurationSetCloudWatchLogsDestinationOutput
	ToConfigurationSetCloudWatchLogsDestinationOutputWithContext(context.Context) ConfigurationSetCloudWatchLogsDestinationOutput
}

type ConfigurationSetCloudWatchLogsDestinationArgs struct {
	// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
	IamRoleArn pulumi.StringInput `pulumi:"iamRoleArn"`
	// The name of the Amazon CloudWatch log group that you want to record events in.
	LogGroupArn pulumi.StringInput `pulumi:"logGroupArn"`
}

func (ConfigurationSetCloudWatchLogsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetCloudWatchLogsDestination)(nil)).Elem()
}

func (i ConfigurationSetCloudWatchLogsDestinationArgs) ToConfigurationSetCloudWatchLogsDestinationOutput() ConfigurationSetCloudWatchLogsDestinationOutput {
	return i.ToConfigurationSetCloudWatchLogsDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetCloudWatchLogsDestinationArgs) ToConfigurationSetCloudWatchLogsDestinationOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetCloudWatchLogsDestinationOutput)
}

func (i ConfigurationSetCloudWatchLogsDestinationArgs) ToConfigurationSetCloudWatchLogsDestinationPtrOutput() ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return i.ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(context.Background())
}

func (i ConfigurationSetCloudWatchLogsDestinationArgs) ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetCloudWatchLogsDestinationOutput).ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(ctx)
}

// ConfigurationSetCloudWatchLogsDestinationPtrInput is an input type that accepts ConfigurationSetCloudWatchLogsDestinationArgs, ConfigurationSetCloudWatchLogsDestinationPtr and ConfigurationSetCloudWatchLogsDestinationPtrOutput values.
// You can construct a concrete instance of `ConfigurationSetCloudWatchLogsDestinationPtrInput` via:
//
//	        ConfigurationSetCloudWatchLogsDestinationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationSetCloudWatchLogsDestinationPtrInput interface {
	pulumi.Input

	ToConfigurationSetCloudWatchLogsDestinationPtrOutput() ConfigurationSetCloudWatchLogsDestinationPtrOutput
	ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(context.Context) ConfigurationSetCloudWatchLogsDestinationPtrOutput
}

type configurationSetCloudWatchLogsDestinationPtrType ConfigurationSetCloudWatchLogsDestinationArgs

func ConfigurationSetCloudWatchLogsDestinationPtr(v *ConfigurationSetCloudWatchLogsDestinationArgs) ConfigurationSetCloudWatchLogsDestinationPtrInput {
	return (*configurationSetCloudWatchLogsDestinationPtrType)(v)
}

func (*configurationSetCloudWatchLogsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetCloudWatchLogsDestination)(nil)).Elem()
}

func (i *configurationSetCloudWatchLogsDestinationPtrType) ToConfigurationSetCloudWatchLogsDestinationPtrOutput() ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return i.ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(context.Background())
}

func (i *configurationSetCloudWatchLogsDestinationPtrType) ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetCloudWatchLogsDestinationPtrOutput)
}

type ConfigurationSetCloudWatchLogsDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetCloudWatchLogsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetCloudWatchLogsDestination)(nil)).Elem()
}

func (o ConfigurationSetCloudWatchLogsDestinationOutput) ToConfigurationSetCloudWatchLogsDestinationOutput() ConfigurationSetCloudWatchLogsDestinationOutput {
	return o
}

func (o ConfigurationSetCloudWatchLogsDestinationOutput) ToConfigurationSetCloudWatchLogsDestinationOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationOutput {
	return o
}

func (o ConfigurationSetCloudWatchLogsDestinationOutput) ToConfigurationSetCloudWatchLogsDestinationPtrOutput() ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return o.ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(context.Background())
}

func (o ConfigurationSetCloudWatchLogsDestinationOutput) ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationSetCloudWatchLogsDestination) *ConfigurationSetCloudWatchLogsDestination {
		return &v
	}).(ConfigurationSetCloudWatchLogsDestinationPtrOutput)
}

// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
func (o ConfigurationSetCloudWatchLogsDestinationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetCloudWatchLogsDestination) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

// The name of the Amazon CloudWatch log group that you want to record events in.
func (o ConfigurationSetCloudWatchLogsDestinationOutput) LogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetCloudWatchLogsDestination) string { return v.LogGroupArn }).(pulumi.StringOutput)
}

type ConfigurationSetCloudWatchLogsDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationSetCloudWatchLogsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetCloudWatchLogsDestination)(nil)).Elem()
}

func (o ConfigurationSetCloudWatchLogsDestinationPtrOutput) ToConfigurationSetCloudWatchLogsDestinationPtrOutput() ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return o
}

func (o ConfigurationSetCloudWatchLogsDestinationPtrOutput) ToConfigurationSetCloudWatchLogsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return o
}

func (o ConfigurationSetCloudWatchLogsDestinationPtrOutput) Elem() ConfigurationSetCloudWatchLogsDestinationOutput {
	return o.ApplyT(func(v *ConfigurationSetCloudWatchLogsDestination) ConfigurationSetCloudWatchLogsDestination {
		if v != nil {
			return *v
		}
		var ret ConfigurationSetCloudWatchLogsDestination
		return ret
	}).(ConfigurationSetCloudWatchLogsDestinationOutput)
}

// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
func (o ConfigurationSetCloudWatchLogsDestinationPtrOutput) IamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSetCloudWatchLogsDestination) *string {
		if v == nil {
			return nil
		}
		return &v.IamRoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon CloudWatch log group that you want to record events in.
func (o ConfigurationSetCloudWatchLogsDestinationPtrOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSetCloudWatchLogsDestination) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupArn
	}).(pulumi.StringPtrOutput)
}

// An event destination is a location where you send message events. The event options are Amazon CloudWatch, Amazon Data Firehose, or Amazon SNS. For example, when a message is delivered successfully, you can send information about that event to an event destination, or send notifications to endpoints that are subscribed to an Amazon SNS topic.
type ConfigurationSetEventDestination struct {
	// An object that contains IamRoleArn and LogGroupArn associated with an Amazon CloudWatch event destination.
	CloudWatchLogsDestination *ConfigurationSetCloudWatchLogsDestination `pulumi:"cloudWatchLogsDestination"`
	// When set to true events will be logged. By default this is set to true
	Enabled bool `pulumi:"enabled"`
	// The name that identifies the event destination.
	EventDestinationName string `pulumi:"eventDestinationName"`
	// An object that contains IamRoleArn and DeliveryStreamArn associated with an Amazon Kinesis Firehose event destination.
	KinesisFirehoseDestination *ConfigurationSetKinesisFirehoseDestination `pulumi:"kinesisFirehoseDestination"`
	// An array of event types that determine which events to log. If 'ALL' is used, then AWS End User Messaging SMS and Voice logs every event type.
	MatchingEventTypes []string `pulumi:"matchingEventTypes"`
	// An object that contains SNS TopicArn event destination.
	SnsDestination *ConfigurationSetSnsDestination `pulumi:"snsDestination"`
}

// ConfigurationSetEventDestinationInput is an input type that accepts ConfigurationSetEventDestinationArgs and ConfigurationSetEventDestinationOutput values.
// You can construct a concrete instance of `ConfigurationSetEventDestinationInput` via:
//
//	ConfigurationSetEventDestinationArgs{...}
type ConfigurationSetEventDestinationInput interface {
	pulumi.Input

	ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput
	ToConfigurationSetEventDestinationOutputWithContext(context.Context) ConfigurationSetEventDestinationOutput
}

// An event destination is a location where you send message events. The event options are Amazon CloudWatch, Amazon Data Firehose, or Amazon SNS. For example, when a message is delivered successfully, you can send information about that event to an event destination, or send notifications to endpoints that are subscribed to an Amazon SNS topic.
type ConfigurationSetEventDestinationArgs struct {
	// An object that contains IamRoleArn and LogGroupArn associated with an Amazon CloudWatch event destination.
	CloudWatchLogsDestination ConfigurationSetCloudWatchLogsDestinationPtrInput `pulumi:"cloudWatchLogsDestination"`
	// When set to true events will be logged. By default this is set to true
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The name that identifies the event destination.
	EventDestinationName pulumi.StringInput `pulumi:"eventDestinationName"`
	// An object that contains IamRoleArn and DeliveryStreamArn associated with an Amazon Kinesis Firehose event destination.
	KinesisFirehoseDestination ConfigurationSetKinesisFirehoseDestinationPtrInput `pulumi:"kinesisFirehoseDestination"`
	// An array of event types that determine which events to log. If 'ALL' is used, then AWS End User Messaging SMS and Voice logs every event type.
	MatchingEventTypes pulumi.StringArrayInput `pulumi:"matchingEventTypes"`
	// An object that contains SNS TopicArn event destination.
	SnsDestination ConfigurationSetSnsDestinationPtrInput `pulumi:"snsDestination"`
}

func (ConfigurationSetEventDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationArgs) ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput {
	return i.ToConfigurationSetEventDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationArgs) ToConfigurationSetEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationOutput)
}

// ConfigurationSetEventDestinationArrayInput is an input type that accepts ConfigurationSetEventDestinationArray and ConfigurationSetEventDestinationArrayOutput values.
// You can construct a concrete instance of `ConfigurationSetEventDestinationArrayInput` via:
//
//	ConfigurationSetEventDestinationArray{ ConfigurationSetEventDestinationArgs{...} }
type ConfigurationSetEventDestinationArrayInput interface {
	pulumi.Input

	ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput
	ToConfigurationSetEventDestinationArrayOutputWithContext(context.Context) ConfigurationSetEventDestinationArrayOutput
}

type ConfigurationSetEventDestinationArray []ConfigurationSetEventDestinationInput

func (ConfigurationSetEventDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationSetEventDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationArray) ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput {
	return i.ToConfigurationSetEventDestinationArrayOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationArray) ToConfigurationSetEventDestinationArrayOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationArrayOutput)
}

// An event destination is a location where you send message events. The event options are Amazon CloudWatch, Amazon Data Firehose, or Amazon SNS. For example, when a message is delivered successfully, you can send information about that event to an event destination, or send notifications to endpoints that are subscribed to an Amazon SNS topic.
type ConfigurationSetEventDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationOutput) ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationOutput) ToConfigurationSetEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationOutput {
	return o
}

// An object that contains IamRoleArn and LogGroupArn associated with an Amazon CloudWatch event destination.
func (o ConfigurationSetEventDestinationOutput) CloudWatchLogsDestination() ConfigurationSetCloudWatchLogsDestinationPtrOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) *ConfigurationSetCloudWatchLogsDestination {
		return v.CloudWatchLogsDestination
	}).(ConfigurationSetCloudWatchLogsDestinationPtrOutput)
}

// When set to true events will be logged. By default this is set to true
func (o ConfigurationSetEventDestinationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The name that identifies the event destination.
func (o ConfigurationSetEventDestinationOutput) EventDestinationName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) string { return v.EventDestinationName }).(pulumi.StringOutput)
}

// An object that contains IamRoleArn and DeliveryStreamArn associated with an Amazon Kinesis Firehose event destination.
func (o ConfigurationSetEventDestinationOutput) KinesisFirehoseDestination() ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) *ConfigurationSetKinesisFirehoseDestination {
		return v.KinesisFirehoseDestination
	}).(ConfigurationSetKinesisFirehoseDestinationPtrOutput)
}

// An array of event types that determine which events to log. If 'ALL' is used, then AWS End User Messaging SMS and Voice logs every event type.
func (o ConfigurationSetEventDestinationOutput) MatchingEventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) []string { return v.MatchingEventTypes }).(pulumi.StringArrayOutput)
}

// An object that contains SNS TopicArn event destination.
func (o ConfigurationSetEventDestinationOutput) SnsDestination() ConfigurationSetSnsDestinationPtrOutput {
	return o.ApplyT(func(v ConfigurationSetEventDestination) *ConfigurationSetSnsDestination { return v.SnsDestination }).(ConfigurationSetSnsDestinationPtrOutput)
}

type ConfigurationSetEventDestinationArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationSetEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationArrayOutput) ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput {
	return o
}

func (o ConfigurationSetEventDestinationArrayOutput) ToConfigurationSetEventDestinationArrayOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationArrayOutput {
	return o
}

func (o ConfigurationSetEventDestinationArrayOutput) Index(i pulumi.IntInput) ConfigurationSetEventDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationSetEventDestination {
		return vs[0].([]ConfigurationSetEventDestination)[vs[1].(int)]
	}).(ConfigurationSetEventDestinationOutput)
}

type ConfigurationSetKinesisFirehoseDestination struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	DeliveryStreamArn string `pulumi:"deliveryStreamArn"`
	// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
	IamRoleArn string `pulumi:"iamRoleArn"`
}

// ConfigurationSetKinesisFirehoseDestinationInput is an input type that accepts ConfigurationSetKinesisFirehoseDestinationArgs and ConfigurationSetKinesisFirehoseDestinationOutput values.
// You can construct a concrete instance of `ConfigurationSetKinesisFirehoseDestinationInput` via:
//
//	ConfigurationSetKinesisFirehoseDestinationArgs{...}
type ConfigurationSetKinesisFirehoseDestinationInput interface {
	pulumi.Input

	ToConfigurationSetKinesisFirehoseDestinationOutput() ConfigurationSetKinesisFirehoseDestinationOutput
	ToConfigurationSetKinesisFirehoseDestinationOutputWithContext(context.Context) ConfigurationSetKinesisFirehoseDestinationOutput
}

type ConfigurationSetKinesisFirehoseDestinationArgs struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	DeliveryStreamArn pulumi.StringInput `pulumi:"deliveryStreamArn"`
	// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
	IamRoleArn pulumi.StringInput `pulumi:"iamRoleArn"`
}

func (ConfigurationSetKinesisFirehoseDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetKinesisFirehoseDestination)(nil)).Elem()
}

func (i ConfigurationSetKinesisFirehoseDestinationArgs) ToConfigurationSetKinesisFirehoseDestinationOutput() ConfigurationSetKinesisFirehoseDestinationOutput {
	return i.ToConfigurationSetKinesisFirehoseDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetKinesisFirehoseDestinationArgs) ToConfigurationSetKinesisFirehoseDestinationOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetKinesisFirehoseDestinationOutput)
}

func (i ConfigurationSetKinesisFirehoseDestinationArgs) ToConfigurationSetKinesisFirehoseDestinationPtrOutput() ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return i.ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(context.Background())
}

func (i ConfigurationSetKinesisFirehoseDestinationArgs) ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetKinesisFirehoseDestinationOutput).ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(ctx)
}

// ConfigurationSetKinesisFirehoseDestinationPtrInput is an input type that accepts ConfigurationSetKinesisFirehoseDestinationArgs, ConfigurationSetKinesisFirehoseDestinationPtr and ConfigurationSetKinesisFirehoseDestinationPtrOutput values.
// You can construct a concrete instance of `ConfigurationSetKinesisFirehoseDestinationPtrInput` via:
//
//	        ConfigurationSetKinesisFirehoseDestinationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationSetKinesisFirehoseDestinationPtrInput interface {
	pulumi.Input

	ToConfigurationSetKinesisFirehoseDestinationPtrOutput() ConfigurationSetKinesisFirehoseDestinationPtrOutput
	ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(context.Context) ConfigurationSetKinesisFirehoseDestinationPtrOutput
}

type configurationSetKinesisFirehoseDestinationPtrType ConfigurationSetKinesisFirehoseDestinationArgs

func ConfigurationSetKinesisFirehoseDestinationPtr(v *ConfigurationSetKinesisFirehoseDestinationArgs) ConfigurationSetKinesisFirehoseDestinationPtrInput {
	return (*configurationSetKinesisFirehoseDestinationPtrType)(v)
}

func (*configurationSetKinesisFirehoseDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetKinesisFirehoseDestination)(nil)).Elem()
}

func (i *configurationSetKinesisFirehoseDestinationPtrType) ToConfigurationSetKinesisFirehoseDestinationPtrOutput() ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return i.ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(context.Background())
}

func (i *configurationSetKinesisFirehoseDestinationPtrType) ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetKinesisFirehoseDestinationPtrOutput)
}

type ConfigurationSetKinesisFirehoseDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetKinesisFirehoseDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetKinesisFirehoseDestination)(nil)).Elem()
}

func (o ConfigurationSetKinesisFirehoseDestinationOutput) ToConfigurationSetKinesisFirehoseDestinationOutput() ConfigurationSetKinesisFirehoseDestinationOutput {
	return o
}

func (o ConfigurationSetKinesisFirehoseDestinationOutput) ToConfigurationSetKinesisFirehoseDestinationOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationOutput {
	return o
}

func (o ConfigurationSetKinesisFirehoseDestinationOutput) ToConfigurationSetKinesisFirehoseDestinationPtrOutput() ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return o.ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(context.Background())
}

func (o ConfigurationSetKinesisFirehoseDestinationOutput) ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationSetKinesisFirehoseDestination) *ConfigurationSetKinesisFirehoseDestination {
		return &v
	}).(ConfigurationSetKinesisFirehoseDestinationPtrOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o ConfigurationSetKinesisFirehoseDestinationOutput) DeliveryStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetKinesisFirehoseDestination) string { return v.DeliveryStreamArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
func (o ConfigurationSetKinesisFirehoseDestinationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetKinesisFirehoseDestination) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

type ConfigurationSetKinesisFirehoseDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationSetKinesisFirehoseDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetKinesisFirehoseDestination)(nil)).Elem()
}

func (o ConfigurationSetKinesisFirehoseDestinationPtrOutput) ToConfigurationSetKinesisFirehoseDestinationPtrOutput() ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return o
}

func (o ConfigurationSetKinesisFirehoseDestinationPtrOutput) ToConfigurationSetKinesisFirehoseDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetKinesisFirehoseDestinationPtrOutput {
	return o
}

func (o ConfigurationSetKinesisFirehoseDestinationPtrOutput) Elem() ConfigurationSetKinesisFirehoseDestinationOutput {
	return o.ApplyT(func(v *ConfigurationSetKinesisFirehoseDestination) ConfigurationSetKinesisFirehoseDestination {
		if v != nil {
			return *v
		}
		var ret ConfigurationSetKinesisFirehoseDestination
		return ret
	}).(ConfigurationSetKinesisFirehoseDestinationOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o ConfigurationSetKinesisFirehoseDestinationPtrOutput) DeliveryStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSetKinesisFirehoseDestination) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of an AWS Identity and Access Management role that is able to write event data to an Amazon CloudWatch destination.
func (o ConfigurationSetKinesisFirehoseDestinationPtrOutput) IamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSetKinesisFirehoseDestination) *string {
		if v == nil {
			return nil
		}
		return &v.IamRoleArn
	}).(pulumi.StringPtrOutput)
}

type ConfigurationSetSnsDestination struct {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to.
	TopicArn string `pulumi:"topicArn"`
}

// ConfigurationSetSnsDestinationInput is an input type that accepts ConfigurationSetSnsDestinationArgs and ConfigurationSetSnsDestinationOutput values.
// You can construct a concrete instance of `ConfigurationSetSnsDestinationInput` via:
//
//	ConfigurationSetSnsDestinationArgs{...}
type ConfigurationSetSnsDestinationInput interface {
	pulumi.Input

	ToConfigurationSetSnsDestinationOutput() ConfigurationSetSnsDestinationOutput
	ToConfigurationSetSnsDestinationOutputWithContext(context.Context) ConfigurationSetSnsDestinationOutput
}

type ConfigurationSetSnsDestinationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (ConfigurationSetSnsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSnsDestination)(nil)).Elem()
}

func (i ConfigurationSetSnsDestinationArgs) ToConfigurationSetSnsDestinationOutput() ConfigurationSetSnsDestinationOutput {
	return i.ToConfigurationSetSnsDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetSnsDestinationArgs) ToConfigurationSetSnsDestinationOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetSnsDestinationOutput)
}

func (i ConfigurationSetSnsDestinationArgs) ToConfigurationSetSnsDestinationPtrOutput() ConfigurationSetSnsDestinationPtrOutput {
	return i.ToConfigurationSetSnsDestinationPtrOutputWithContext(context.Background())
}

func (i ConfigurationSetSnsDestinationArgs) ToConfigurationSetSnsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetSnsDestinationOutput).ToConfigurationSetSnsDestinationPtrOutputWithContext(ctx)
}

// ConfigurationSetSnsDestinationPtrInput is an input type that accepts ConfigurationSetSnsDestinationArgs, ConfigurationSetSnsDestinationPtr and ConfigurationSetSnsDestinationPtrOutput values.
// You can construct a concrete instance of `ConfigurationSetSnsDestinationPtrInput` via:
//
//	        ConfigurationSetSnsDestinationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationSetSnsDestinationPtrInput interface {
	pulumi.Input

	ToConfigurationSetSnsDestinationPtrOutput() ConfigurationSetSnsDestinationPtrOutput
	ToConfigurationSetSnsDestinationPtrOutputWithContext(context.Context) ConfigurationSetSnsDestinationPtrOutput
}

type configurationSetSnsDestinationPtrType ConfigurationSetSnsDestinationArgs

func ConfigurationSetSnsDestinationPtr(v *ConfigurationSetSnsDestinationArgs) ConfigurationSetSnsDestinationPtrInput {
	return (*configurationSetSnsDestinationPtrType)(v)
}

func (*configurationSetSnsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetSnsDestination)(nil)).Elem()
}

func (i *configurationSetSnsDestinationPtrType) ToConfigurationSetSnsDestinationPtrOutput() ConfigurationSetSnsDestinationPtrOutput {
	return i.ToConfigurationSetSnsDestinationPtrOutputWithContext(context.Background())
}

func (i *configurationSetSnsDestinationPtrType) ToConfigurationSetSnsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetSnsDestinationPtrOutput)
}

type ConfigurationSetSnsDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetSnsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSnsDestination)(nil)).Elem()
}

func (o ConfigurationSetSnsDestinationOutput) ToConfigurationSetSnsDestinationOutput() ConfigurationSetSnsDestinationOutput {
	return o
}

func (o ConfigurationSetSnsDestinationOutput) ToConfigurationSetSnsDestinationOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationOutput {
	return o
}

func (o ConfigurationSetSnsDestinationOutput) ToConfigurationSetSnsDestinationPtrOutput() ConfigurationSetSnsDestinationPtrOutput {
	return o.ToConfigurationSetSnsDestinationPtrOutputWithContext(context.Background())
}

func (o ConfigurationSetSnsDestinationOutput) ToConfigurationSetSnsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationSetSnsDestination) *ConfigurationSetSnsDestination {
		return &v
	}).(ConfigurationSetSnsDestinationPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to.
func (o ConfigurationSetSnsDestinationOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationSetSnsDestination) string { return v.TopicArn }).(pulumi.StringOutput)
}

type ConfigurationSetSnsDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationSetSnsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetSnsDestination)(nil)).Elem()
}

func (o ConfigurationSetSnsDestinationPtrOutput) ToConfigurationSetSnsDestinationPtrOutput() ConfigurationSetSnsDestinationPtrOutput {
	return o
}

func (o ConfigurationSetSnsDestinationPtrOutput) ToConfigurationSetSnsDestinationPtrOutputWithContext(ctx context.Context) ConfigurationSetSnsDestinationPtrOutput {
	return o
}

func (o ConfigurationSetSnsDestinationPtrOutput) Elem() ConfigurationSetSnsDestinationOutput {
	return o.ApplyT(func(v *ConfigurationSetSnsDestination) ConfigurationSetSnsDestination {
		if v != nil {
			return *v
		}
		var ret ConfigurationSetSnsDestination
		return ret
	}).(ConfigurationSetSnsDestinationOutput)
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to.
func (o ConfigurationSetSnsDestinationPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSetSnsDestination) *string {
		if v == nil {
			return nil
		}
		return &v.TopicArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ConfigurationSetTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type MandatoryKeywordsProperties struct {
	// Specifies the pool's `HELP` keyword. For more information, see [Opt out list required keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/opt-out-list-keywords.html) in the End User Messaging  User Guide.
	Help PoolMandatoryKeyword `pulumi:"help"`
	// Specifies the pool's opt-out keyword. For more information, see [Required opt-out keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/keywords-required.html) in the End User Messaging  User Guide.
	Stop PoolMandatoryKeyword `pulumi:"stop"`
}

// MandatoryKeywordsPropertiesInput is an input type that accepts MandatoryKeywordsPropertiesArgs and MandatoryKeywordsPropertiesOutput values.
// You can construct a concrete instance of `MandatoryKeywordsPropertiesInput` via:
//
//	MandatoryKeywordsPropertiesArgs{...}
type MandatoryKeywordsPropertiesInput interface {
	pulumi.Input

	ToMandatoryKeywordsPropertiesOutput() MandatoryKeywordsPropertiesOutput
	ToMandatoryKeywordsPropertiesOutputWithContext(context.Context) MandatoryKeywordsPropertiesOutput
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type MandatoryKeywordsPropertiesArgs struct {
	// Specifies the pool's `HELP` keyword. For more information, see [Opt out list required keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/opt-out-list-keywords.html) in the End User Messaging  User Guide.
	Help PoolMandatoryKeywordInput `pulumi:"help"`
	// Specifies the pool's opt-out keyword. For more information, see [Required opt-out keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/keywords-required.html) in the End User Messaging  User Guide.
	Stop PoolMandatoryKeywordInput `pulumi:"stop"`
}

func (MandatoryKeywordsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MandatoryKeywordsProperties)(nil)).Elem()
}

func (i MandatoryKeywordsPropertiesArgs) ToMandatoryKeywordsPropertiesOutput() MandatoryKeywordsPropertiesOutput {
	return i.ToMandatoryKeywordsPropertiesOutputWithContext(context.Background())
}

func (i MandatoryKeywordsPropertiesArgs) ToMandatoryKeywordsPropertiesOutputWithContext(ctx context.Context) MandatoryKeywordsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MandatoryKeywordsPropertiesOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type MandatoryKeywordsPropertiesOutput struct{ *pulumi.OutputState }

func (MandatoryKeywordsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MandatoryKeywordsProperties)(nil)).Elem()
}

func (o MandatoryKeywordsPropertiesOutput) ToMandatoryKeywordsPropertiesOutput() MandatoryKeywordsPropertiesOutput {
	return o
}

func (o MandatoryKeywordsPropertiesOutput) ToMandatoryKeywordsPropertiesOutputWithContext(ctx context.Context) MandatoryKeywordsPropertiesOutput {
	return o
}

// Specifies the pool's `HELP` keyword. For more information, see [Opt out list required keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/opt-out-list-keywords.html) in the End User Messaging  User Guide.
func (o MandatoryKeywordsPropertiesOutput) Help() PoolMandatoryKeywordOutput {
	return o.ApplyT(func(v MandatoryKeywordsProperties) PoolMandatoryKeyword { return v.Help }).(PoolMandatoryKeywordOutput)
}

// Specifies the pool's opt-out keyword. For more information, see [Required opt-out keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/keywords-required.html) in the End User Messaging  User Guide.
func (o MandatoryKeywordsPropertiesOutput) Stop() PoolMandatoryKeywordOutput {
	return o.ApplyT(func(v MandatoryKeywordsProperties) PoolMandatoryKeyword { return v.Stop }).(PoolMandatoryKeywordOutput)
}

type MandatoryKeywordsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (MandatoryKeywordsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MandatoryKeywordsProperties)(nil)).Elem()
}

func (o MandatoryKeywordsPropertiesPtrOutput) ToMandatoryKeywordsPropertiesPtrOutput() MandatoryKeywordsPropertiesPtrOutput {
	return o
}

func (o MandatoryKeywordsPropertiesPtrOutput) ToMandatoryKeywordsPropertiesPtrOutputWithContext(ctx context.Context) MandatoryKeywordsPropertiesPtrOutput {
	return o
}

func (o MandatoryKeywordsPropertiesPtrOutput) Elem() MandatoryKeywordsPropertiesOutput {
	return o.ApplyT(func(v *MandatoryKeywordsProperties) MandatoryKeywordsProperties {
		if v != nil {
			return *v
		}
		var ret MandatoryKeywordsProperties
		return ret
	}).(MandatoryKeywordsPropertiesOutput)
}

// Specifies the pool's `HELP` keyword. For more information, see [Opt out list required keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/opt-out-list-keywords.html) in the End User Messaging  User Guide.
func (o MandatoryKeywordsPropertiesPtrOutput) Help() PoolMandatoryKeywordPtrOutput {
	return o.ApplyT(func(v *MandatoryKeywordsProperties) *PoolMandatoryKeyword {
		if v == nil {
			return nil
		}
		return &v.Help
	}).(PoolMandatoryKeywordPtrOutput)
}

// Specifies the pool's opt-out keyword. For more information, see [Required opt-out keywords](https://docs.aws.amazon.com/sms-voice/latest/userguide/keywords-required.html) in the End User Messaging  User Guide.
func (o MandatoryKeywordsPropertiesPtrOutput) Stop() PoolMandatoryKeywordPtrOutput {
	return o.ApplyT(func(v *MandatoryKeywordsProperties) *PoolMandatoryKeyword {
		if v == nil {
			return nil
		}
		return &v.Stop
	}).(PoolMandatoryKeywordPtrOutput)
}

// A key-value pair to associate with a resource.
type OptOutListTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type PhoneNumberMandatoryKeyword struct {
	// The message associated with the keyword.
	Message string `pulumi:"message"`
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PhoneNumberOptionalKeyword struct {
	// The action to perform when the keyword is used.
	Action PhoneNumberOptionalKeywordAction `pulumi:"action"`
	// The new keyword to add.
	Keyword string `pulumi:"keyword"`
	// The message associated with the keyword.
	Message string `pulumi:"message"`
}

// PhoneNumberOptionalKeywordInput is an input type that accepts PhoneNumberOptionalKeywordArgs and PhoneNumberOptionalKeywordOutput values.
// You can construct a concrete instance of `PhoneNumberOptionalKeywordInput` via:
//
//	PhoneNumberOptionalKeywordArgs{...}
type PhoneNumberOptionalKeywordInput interface {
	pulumi.Input

	ToPhoneNumberOptionalKeywordOutput() PhoneNumberOptionalKeywordOutput
	ToPhoneNumberOptionalKeywordOutputWithContext(context.Context) PhoneNumberOptionalKeywordOutput
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PhoneNumberOptionalKeywordArgs struct {
	// The action to perform when the keyword is used.
	Action PhoneNumberOptionalKeywordActionInput `pulumi:"action"`
	// The new keyword to add.
	Keyword pulumi.StringInput `pulumi:"keyword"`
	// The message associated with the keyword.
	Message pulumi.StringInput `pulumi:"message"`
}

func (PhoneNumberOptionalKeywordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberOptionalKeyword)(nil)).Elem()
}

func (i PhoneNumberOptionalKeywordArgs) ToPhoneNumberOptionalKeywordOutput() PhoneNumberOptionalKeywordOutput {
	return i.ToPhoneNumberOptionalKeywordOutputWithContext(context.Background())
}

func (i PhoneNumberOptionalKeywordArgs) ToPhoneNumberOptionalKeywordOutputWithContext(ctx context.Context) PhoneNumberOptionalKeywordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberOptionalKeywordOutput)
}

// PhoneNumberOptionalKeywordArrayInput is an input type that accepts PhoneNumberOptionalKeywordArray and PhoneNumberOptionalKeywordArrayOutput values.
// You can construct a concrete instance of `PhoneNumberOptionalKeywordArrayInput` via:
//
//	PhoneNumberOptionalKeywordArray{ PhoneNumberOptionalKeywordArgs{...} }
type PhoneNumberOptionalKeywordArrayInput interface {
	pulumi.Input

	ToPhoneNumberOptionalKeywordArrayOutput() PhoneNumberOptionalKeywordArrayOutput
	ToPhoneNumberOptionalKeywordArrayOutputWithContext(context.Context) PhoneNumberOptionalKeywordArrayOutput
}

type PhoneNumberOptionalKeywordArray []PhoneNumberOptionalKeywordInput

func (PhoneNumberOptionalKeywordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberOptionalKeyword)(nil)).Elem()
}

func (i PhoneNumberOptionalKeywordArray) ToPhoneNumberOptionalKeywordArrayOutput() PhoneNumberOptionalKeywordArrayOutput {
	return i.ToPhoneNumberOptionalKeywordArrayOutputWithContext(context.Background())
}

func (i PhoneNumberOptionalKeywordArray) ToPhoneNumberOptionalKeywordArrayOutputWithContext(ctx context.Context) PhoneNumberOptionalKeywordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberOptionalKeywordArrayOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PhoneNumberOptionalKeywordOutput struct{ *pulumi.OutputState }

func (PhoneNumberOptionalKeywordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberOptionalKeyword)(nil)).Elem()
}

func (o PhoneNumberOptionalKeywordOutput) ToPhoneNumberOptionalKeywordOutput() PhoneNumberOptionalKeywordOutput {
	return o
}

func (o PhoneNumberOptionalKeywordOutput) ToPhoneNumberOptionalKeywordOutputWithContext(ctx context.Context) PhoneNumberOptionalKeywordOutput {
	return o
}

// The action to perform when the keyword is used.
func (o PhoneNumberOptionalKeywordOutput) Action() PhoneNumberOptionalKeywordActionOutput {
	return o.ApplyT(func(v PhoneNumberOptionalKeyword) PhoneNumberOptionalKeywordAction { return v.Action }).(PhoneNumberOptionalKeywordActionOutput)
}

// The new keyword to add.
func (o PhoneNumberOptionalKeywordOutput) Keyword() pulumi.StringOutput {
	return o.ApplyT(func(v PhoneNumberOptionalKeyword) string { return v.Keyword }).(pulumi.StringOutput)
}

// The message associated with the keyword.
func (o PhoneNumberOptionalKeywordOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v PhoneNumberOptionalKeyword) string { return v.Message }).(pulumi.StringOutput)
}

type PhoneNumberOptionalKeywordArrayOutput struct{ *pulumi.OutputState }

func (PhoneNumberOptionalKeywordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberOptionalKeyword)(nil)).Elem()
}

func (o PhoneNumberOptionalKeywordArrayOutput) ToPhoneNumberOptionalKeywordArrayOutput() PhoneNumberOptionalKeywordArrayOutput {
	return o
}

func (o PhoneNumberOptionalKeywordArrayOutput) ToPhoneNumberOptionalKeywordArrayOutputWithContext(ctx context.Context) PhoneNumberOptionalKeywordArrayOutput {
	return o
}

func (o PhoneNumberOptionalKeywordArrayOutput) Index(i pulumi.IntInput) PhoneNumberOptionalKeywordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhoneNumberOptionalKeyword {
		return vs[0].([]PhoneNumberOptionalKeyword)[vs[1].(int)]
	}).(PhoneNumberOptionalKeywordOutput)
}

// A key-value pair to associate with a resource.
type PhoneNumberTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type PoolMandatoryKeyword struct {
	// The message associated with the keyword.
	Message string `pulumi:"message"`
}

// PoolMandatoryKeywordInput is an input type that accepts PoolMandatoryKeywordArgs and PoolMandatoryKeywordOutput values.
// You can construct a concrete instance of `PoolMandatoryKeywordInput` via:
//
//	PoolMandatoryKeywordArgs{...}
type PoolMandatoryKeywordInput interface {
	pulumi.Input

	ToPoolMandatoryKeywordOutput() PoolMandatoryKeywordOutput
	ToPoolMandatoryKeywordOutputWithContext(context.Context) PoolMandatoryKeywordOutput
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type PoolMandatoryKeywordArgs struct {
	// The message associated with the keyword.
	Message pulumi.StringInput `pulumi:"message"`
}

func (PoolMandatoryKeywordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMandatoryKeyword)(nil)).Elem()
}

func (i PoolMandatoryKeywordArgs) ToPoolMandatoryKeywordOutput() PoolMandatoryKeywordOutput {
	return i.ToPoolMandatoryKeywordOutputWithContext(context.Background())
}

func (i PoolMandatoryKeywordArgs) ToPoolMandatoryKeywordOutputWithContext(ctx context.Context) PoolMandatoryKeywordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMandatoryKeywordOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message. Keywords "HELP" and "STOP" are mandatory keywords
type PoolMandatoryKeywordOutput struct{ *pulumi.OutputState }

func (PoolMandatoryKeywordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMandatoryKeyword)(nil)).Elem()
}

func (o PoolMandatoryKeywordOutput) ToPoolMandatoryKeywordOutput() PoolMandatoryKeywordOutput {
	return o
}

func (o PoolMandatoryKeywordOutput) ToPoolMandatoryKeywordOutputWithContext(ctx context.Context) PoolMandatoryKeywordOutput {
	return o
}

// The message associated with the keyword.
func (o PoolMandatoryKeywordOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMandatoryKeyword) string { return v.Message }).(pulumi.StringOutput)
}

type PoolMandatoryKeywordPtrOutput struct{ *pulumi.OutputState }

func (PoolMandatoryKeywordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolMandatoryKeyword)(nil)).Elem()
}

func (o PoolMandatoryKeywordPtrOutput) ToPoolMandatoryKeywordPtrOutput() PoolMandatoryKeywordPtrOutput {
	return o
}

func (o PoolMandatoryKeywordPtrOutput) ToPoolMandatoryKeywordPtrOutputWithContext(ctx context.Context) PoolMandatoryKeywordPtrOutput {
	return o
}

func (o PoolMandatoryKeywordPtrOutput) Elem() PoolMandatoryKeywordOutput {
	return o.ApplyT(func(v *PoolMandatoryKeyword) PoolMandatoryKeyword {
		if v != nil {
			return *v
		}
		var ret PoolMandatoryKeyword
		return ret
	}).(PoolMandatoryKeywordOutput)
}

// The message associated with the keyword.
func (o PoolMandatoryKeywordPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMandatoryKeyword) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PoolOptionalKeyword struct {
	// The action to perform when the keyword is used.
	Action PoolOptionalKeywordAction `pulumi:"action"`
	// The new keyword to add.
	Keyword string `pulumi:"keyword"`
	// The message associated with the keyword.
	Message string `pulumi:"message"`
}

// PoolOptionalKeywordInput is an input type that accepts PoolOptionalKeywordArgs and PoolOptionalKeywordOutput values.
// You can construct a concrete instance of `PoolOptionalKeywordInput` via:
//
//	PoolOptionalKeywordArgs{...}
type PoolOptionalKeywordInput interface {
	pulumi.Input

	ToPoolOptionalKeywordOutput() PoolOptionalKeywordOutput
	ToPoolOptionalKeywordOutputWithContext(context.Context) PoolOptionalKeywordOutput
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PoolOptionalKeywordArgs struct {
	// The action to perform when the keyword is used.
	Action PoolOptionalKeywordActionInput `pulumi:"action"`
	// The new keyword to add.
	Keyword pulumi.StringInput `pulumi:"keyword"`
	// The message associated with the keyword.
	Message pulumi.StringInput `pulumi:"message"`
}

func (PoolOptionalKeywordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolOptionalKeyword)(nil)).Elem()
}

func (i PoolOptionalKeywordArgs) ToPoolOptionalKeywordOutput() PoolOptionalKeywordOutput {
	return i.ToPoolOptionalKeywordOutputWithContext(context.Background())
}

func (i PoolOptionalKeywordArgs) ToPoolOptionalKeywordOutputWithContext(ctx context.Context) PoolOptionalKeywordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolOptionalKeywordOutput)
}

// PoolOptionalKeywordArrayInput is an input type that accepts PoolOptionalKeywordArray and PoolOptionalKeywordArrayOutput values.
// You can construct a concrete instance of `PoolOptionalKeywordArrayInput` via:
//
//	PoolOptionalKeywordArray{ PoolOptionalKeywordArgs{...} }
type PoolOptionalKeywordArrayInput interface {
	pulumi.Input

	ToPoolOptionalKeywordArrayOutput() PoolOptionalKeywordArrayOutput
	ToPoolOptionalKeywordArrayOutputWithContext(context.Context) PoolOptionalKeywordArrayOutput
}

type PoolOptionalKeywordArray []PoolOptionalKeywordInput

func (PoolOptionalKeywordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolOptionalKeyword)(nil)).Elem()
}

func (i PoolOptionalKeywordArray) ToPoolOptionalKeywordArrayOutput() PoolOptionalKeywordArrayOutput {
	return i.ToPoolOptionalKeywordArrayOutputWithContext(context.Background())
}

func (i PoolOptionalKeywordArray) ToPoolOptionalKeywordArrayOutputWithContext(ctx context.Context) PoolOptionalKeywordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolOptionalKeywordArrayOutput)
}

// A keyword is a word that you can search for on a particular phone number or pool. It is also a specific word or phrase that an end user can send to your number to elicit a response, such as an informational message or a special offer. When your number receives a message that begins with a keyword, AWS End User Messaging SMS and Voice responds with a customizable message.
type PoolOptionalKeywordOutput struct{ *pulumi.OutputState }

func (PoolOptionalKeywordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolOptionalKeyword)(nil)).Elem()
}

func (o PoolOptionalKeywordOutput) ToPoolOptionalKeywordOutput() PoolOptionalKeywordOutput {
	return o
}

func (o PoolOptionalKeywordOutput) ToPoolOptionalKeywordOutputWithContext(ctx context.Context) PoolOptionalKeywordOutput {
	return o
}

// The action to perform when the keyword is used.
func (o PoolOptionalKeywordOutput) Action() PoolOptionalKeywordActionOutput {
	return o.ApplyT(func(v PoolOptionalKeyword) PoolOptionalKeywordAction { return v.Action }).(PoolOptionalKeywordActionOutput)
}

// The new keyword to add.
func (o PoolOptionalKeywordOutput) Keyword() pulumi.StringOutput {
	return o.ApplyT(func(v PoolOptionalKeyword) string { return v.Keyword }).(pulumi.StringOutput)
}

// The message associated with the keyword.
func (o PoolOptionalKeywordOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v PoolOptionalKeyword) string { return v.Message }).(pulumi.StringOutput)
}

type PoolOptionalKeywordArrayOutput struct{ *pulumi.OutputState }

func (PoolOptionalKeywordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolOptionalKeyword)(nil)).Elem()
}

func (o PoolOptionalKeywordArrayOutput) ToPoolOptionalKeywordArrayOutput() PoolOptionalKeywordArrayOutput {
	return o
}

func (o PoolOptionalKeywordArrayOutput) ToPoolOptionalKeywordArrayOutputWithContext(ctx context.Context) PoolOptionalKeywordArrayOutput {
	return o
}

func (o PoolOptionalKeywordArrayOutput) Index(i pulumi.IntInput) PoolOptionalKeywordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolOptionalKeyword {
		return vs[0].([]PoolOptionalKeyword)[vs[1].(int)]
	}).(PoolOptionalKeywordOutput)
}

// A key-value pair to associate with a resource.
type PoolTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type ProtectConfigurationCountryRule struct {
	// The two-letter ISO country code
	CountryCode string `pulumi:"countryCode"`
	// The types of protection that can be used.
	ProtectStatus ProtectConfigurationCountryRuleProtectStatus `pulumi:"protectStatus"`
}

// ProtectConfigurationCountryRuleInput is an input type that accepts ProtectConfigurationCountryRuleArgs and ProtectConfigurationCountryRuleOutput values.
// You can construct a concrete instance of `ProtectConfigurationCountryRuleInput` via:
//
//	ProtectConfigurationCountryRuleArgs{...}
type ProtectConfigurationCountryRuleInput interface {
	pulumi.Input

	ToProtectConfigurationCountryRuleOutput() ProtectConfigurationCountryRuleOutput
	ToProtectConfigurationCountryRuleOutputWithContext(context.Context) ProtectConfigurationCountryRuleOutput
}

type ProtectConfigurationCountryRuleArgs struct {
	// The two-letter ISO country code
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The types of protection that can be used.
	ProtectStatus ProtectConfigurationCountryRuleProtectStatusInput `pulumi:"protectStatus"`
}

func (ProtectConfigurationCountryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectConfigurationCountryRule)(nil)).Elem()
}

func (i ProtectConfigurationCountryRuleArgs) ToProtectConfigurationCountryRuleOutput() ProtectConfigurationCountryRuleOutput {
	return i.ToProtectConfigurationCountryRuleOutputWithContext(context.Background())
}

func (i ProtectConfigurationCountryRuleArgs) ToProtectConfigurationCountryRuleOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectConfigurationCountryRuleOutput)
}

// ProtectConfigurationCountryRuleArrayInput is an input type that accepts ProtectConfigurationCountryRuleArray and ProtectConfigurationCountryRuleArrayOutput values.
// You can construct a concrete instance of `ProtectConfigurationCountryRuleArrayInput` via:
//
//	ProtectConfigurationCountryRuleArray{ ProtectConfigurationCountryRuleArgs{...} }
type ProtectConfigurationCountryRuleArrayInput interface {
	pulumi.Input

	ToProtectConfigurationCountryRuleArrayOutput() ProtectConfigurationCountryRuleArrayOutput
	ToProtectConfigurationCountryRuleArrayOutputWithContext(context.Context) ProtectConfigurationCountryRuleArrayOutput
}

type ProtectConfigurationCountryRuleArray []ProtectConfigurationCountryRuleInput

func (ProtectConfigurationCountryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectConfigurationCountryRule)(nil)).Elem()
}

func (i ProtectConfigurationCountryRuleArray) ToProtectConfigurationCountryRuleArrayOutput() ProtectConfigurationCountryRuleArrayOutput {
	return i.ToProtectConfigurationCountryRuleArrayOutputWithContext(context.Background())
}

func (i ProtectConfigurationCountryRuleArray) ToProtectConfigurationCountryRuleArrayOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectConfigurationCountryRuleArrayOutput)
}

type ProtectConfigurationCountryRuleOutput struct{ *pulumi.OutputState }

func (ProtectConfigurationCountryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectConfigurationCountryRule)(nil)).Elem()
}

func (o ProtectConfigurationCountryRuleOutput) ToProtectConfigurationCountryRuleOutput() ProtectConfigurationCountryRuleOutput {
	return o
}

func (o ProtectConfigurationCountryRuleOutput) ToProtectConfigurationCountryRuleOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleOutput {
	return o
}

// The two-letter ISO country code
func (o ProtectConfigurationCountryRuleOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectConfigurationCountryRule) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The types of protection that can be used.
func (o ProtectConfigurationCountryRuleOutput) ProtectStatus() ProtectConfigurationCountryRuleProtectStatusOutput {
	return o.ApplyT(func(v ProtectConfigurationCountryRule) ProtectConfigurationCountryRuleProtectStatus {
		return v.ProtectStatus
	}).(ProtectConfigurationCountryRuleProtectStatusOutput)
}

type ProtectConfigurationCountryRuleArrayOutput struct{ *pulumi.OutputState }

func (ProtectConfigurationCountryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectConfigurationCountryRule)(nil)).Elem()
}

func (o ProtectConfigurationCountryRuleArrayOutput) ToProtectConfigurationCountryRuleArrayOutput() ProtectConfigurationCountryRuleArrayOutput {
	return o
}

func (o ProtectConfigurationCountryRuleArrayOutput) ToProtectConfigurationCountryRuleArrayOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleArrayOutput {
	return o
}

func (o ProtectConfigurationCountryRuleArrayOutput) Index(i pulumi.IntInput) ProtectConfigurationCountryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectConfigurationCountryRule {
		return vs[0].([]ProtectConfigurationCountryRule)[vs[1].(int)]
	}).(ProtectConfigurationCountryRuleOutput)
}

type ProtectConfigurationCountryRuleSet struct {
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your MMS messages to.
	Mms []ProtectConfigurationCountryRule `pulumi:"mms"`
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your SMS messages to.
	Sms []ProtectConfigurationCountryRule `pulumi:"sms"`
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your VOICE messages to.
	Voice []ProtectConfigurationCountryRule `pulumi:"voice"`
}

// ProtectConfigurationCountryRuleSetInput is an input type that accepts ProtectConfigurationCountryRuleSetArgs and ProtectConfigurationCountryRuleSetOutput values.
// You can construct a concrete instance of `ProtectConfigurationCountryRuleSetInput` via:
//
//	ProtectConfigurationCountryRuleSetArgs{...}
type ProtectConfigurationCountryRuleSetInput interface {
	pulumi.Input

	ToProtectConfigurationCountryRuleSetOutput() ProtectConfigurationCountryRuleSetOutput
	ToProtectConfigurationCountryRuleSetOutputWithContext(context.Context) ProtectConfigurationCountryRuleSetOutput
}

type ProtectConfigurationCountryRuleSetArgs struct {
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your MMS messages to.
	Mms ProtectConfigurationCountryRuleArrayInput `pulumi:"mms"`
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your SMS messages to.
	Sms ProtectConfigurationCountryRuleArrayInput `pulumi:"sms"`
	// The set of `CountryRule` s to control which destination countries End User Messaging  can send your VOICE messages to.
	Voice ProtectConfigurationCountryRuleArrayInput `pulumi:"voice"`
}

func (ProtectConfigurationCountryRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectConfigurationCountryRuleSet)(nil)).Elem()
}

func (i ProtectConfigurationCountryRuleSetArgs) ToProtectConfigurationCountryRuleSetOutput() ProtectConfigurationCountryRuleSetOutput {
	return i.ToProtectConfigurationCountryRuleSetOutputWithContext(context.Background())
}

func (i ProtectConfigurationCountryRuleSetArgs) ToProtectConfigurationCountryRuleSetOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectConfigurationCountryRuleSetOutput)
}

func (i ProtectConfigurationCountryRuleSetArgs) ToProtectConfigurationCountryRuleSetPtrOutput() ProtectConfigurationCountryRuleSetPtrOutput {
	return i.ToProtectConfigurationCountryRuleSetPtrOutputWithContext(context.Background())
}

func (i ProtectConfigurationCountryRuleSetArgs) ToProtectConfigurationCountryRuleSetPtrOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectConfigurationCountryRuleSetOutput).ToProtectConfigurationCountryRuleSetPtrOutputWithContext(ctx)
}

// ProtectConfigurationCountryRuleSetPtrInput is an input type that accepts ProtectConfigurationCountryRuleSetArgs, ProtectConfigurationCountryRuleSetPtr and ProtectConfigurationCountryRuleSetPtrOutput values.
// You can construct a concrete instance of `ProtectConfigurationCountryRuleSetPtrInput` via:
//
//	        ProtectConfigurationCountryRuleSetArgs{...}
//
//	or:
//
//	        nil
type ProtectConfigurationCountryRuleSetPtrInput interface {
	pulumi.Input

	ToProtectConfigurationCountryRuleSetPtrOutput() ProtectConfigurationCountryRuleSetPtrOutput
	ToProtectConfigurationCountryRuleSetPtrOutputWithContext(context.Context) ProtectConfigurationCountryRuleSetPtrOutput
}

type protectConfigurationCountryRuleSetPtrType ProtectConfigurationCountryRuleSetArgs

func ProtectConfigurationCountryRuleSetPtr(v *ProtectConfigurationCountryRuleSetArgs) ProtectConfigurationCountryRuleSetPtrInput {
	return (*protectConfigurationCountryRuleSetPtrType)(v)
}

func (*protectConfigurationCountryRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectConfigurationCountryRuleSet)(nil)).Elem()
}

func (i *protectConfigurationCountryRuleSetPtrType) ToProtectConfigurationCountryRuleSetPtrOutput() ProtectConfigurationCountryRuleSetPtrOutput {
	return i.ToProtectConfigurationCountryRuleSetPtrOutputWithContext(context.Background())
}

func (i *protectConfigurationCountryRuleSetPtrType) ToProtectConfigurationCountryRuleSetPtrOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectConfigurationCountryRuleSetPtrOutput)
}

type ProtectConfigurationCountryRuleSetOutput struct{ *pulumi.OutputState }

func (ProtectConfigurationCountryRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectConfigurationCountryRuleSet)(nil)).Elem()
}

func (o ProtectConfigurationCountryRuleSetOutput) ToProtectConfigurationCountryRuleSetOutput() ProtectConfigurationCountryRuleSetOutput {
	return o
}

func (o ProtectConfigurationCountryRuleSetOutput) ToProtectConfigurationCountryRuleSetOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetOutput {
	return o
}

func (o ProtectConfigurationCountryRuleSetOutput) ToProtectConfigurationCountryRuleSetPtrOutput() ProtectConfigurationCountryRuleSetPtrOutput {
	return o.ToProtectConfigurationCountryRuleSetPtrOutputWithContext(context.Background())
}

func (o ProtectConfigurationCountryRuleSetOutput) ToProtectConfigurationCountryRuleSetPtrOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectConfigurationCountryRuleSet) *ProtectConfigurationCountryRuleSet {
		return &v
	}).(ProtectConfigurationCountryRuleSetPtrOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your MMS messages to.
func (o ProtectConfigurationCountryRuleSetOutput) Mms() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule { return v.Mms }).(ProtectConfigurationCountryRuleArrayOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your SMS messages to.
func (o ProtectConfigurationCountryRuleSetOutput) Sms() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule { return v.Sms }).(ProtectConfigurationCountryRuleArrayOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your VOICE messages to.
func (o ProtectConfigurationCountryRuleSetOutput) Voice() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule { return v.Voice }).(ProtectConfigurationCountryRuleArrayOutput)
}

type ProtectConfigurationCountryRuleSetPtrOutput struct{ *pulumi.OutputState }

func (ProtectConfigurationCountryRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectConfigurationCountryRuleSet)(nil)).Elem()
}

func (o ProtectConfigurationCountryRuleSetPtrOutput) ToProtectConfigurationCountryRuleSetPtrOutput() ProtectConfigurationCountryRuleSetPtrOutput {
	return o
}

func (o ProtectConfigurationCountryRuleSetPtrOutput) ToProtectConfigurationCountryRuleSetPtrOutputWithContext(ctx context.Context) ProtectConfigurationCountryRuleSetPtrOutput {
	return o
}

func (o ProtectConfigurationCountryRuleSetPtrOutput) Elem() ProtectConfigurationCountryRuleSetOutput {
	return o.ApplyT(func(v *ProtectConfigurationCountryRuleSet) ProtectConfigurationCountryRuleSet {
		if v != nil {
			return *v
		}
		var ret ProtectConfigurationCountryRuleSet
		return ret
	}).(ProtectConfigurationCountryRuleSetOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your MMS messages to.
func (o ProtectConfigurationCountryRuleSetPtrOutput) Mms() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v *ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule {
		if v == nil {
			return nil
		}
		return v.Mms
	}).(ProtectConfigurationCountryRuleArrayOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your SMS messages to.
func (o ProtectConfigurationCountryRuleSetPtrOutput) Sms() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v *ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule {
		if v == nil {
			return nil
		}
		return v.Sms
	}).(ProtectConfigurationCountryRuleArrayOutput)
}

// The set of `CountryRule` s to control which destination countries End User Messaging  can send your VOICE messages to.
func (o ProtectConfigurationCountryRuleSetPtrOutput) Voice() ProtectConfigurationCountryRuleArrayOutput {
	return o.ApplyT(func(v *ProtectConfigurationCountryRuleSet) []ProtectConfigurationCountryRule {
		if v == nil {
			return nil
		}
		return v.Voice
	}).(ProtectConfigurationCountryRuleArrayOutput)
}

// A key-value pair to associate with a resource.
type ProtectConfigurationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SenderIdTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
type TwoWayProperties struct {
	// The Amazon Resource Name (ARN) of the two way channel.
	ChannelArn *string `pulumi:"channelArn"`
	// An optional IAM Role Arn for a service to assume, to be able to post inbound SMS messages.
	ChannelRole *string `pulumi:"channelRole"`
	// By default this is set to false. When set to true you can receive incoming text messages from your end recipients.
	Enabled bool `pulumi:"enabled"`
}

// TwoWayPropertiesInput is an input type that accepts TwoWayPropertiesArgs and TwoWayPropertiesOutput values.
// You can construct a concrete instance of `TwoWayPropertiesInput` via:
//
//	TwoWayPropertiesArgs{...}
type TwoWayPropertiesInput interface {
	pulumi.Input

	ToTwoWayPropertiesOutput() TwoWayPropertiesOutput
	ToTwoWayPropertiesOutputWithContext(context.Context) TwoWayPropertiesOutput
}

// When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
type TwoWayPropertiesArgs struct {
	// The Amazon Resource Name (ARN) of the two way channel.
	ChannelArn pulumi.StringPtrInput `pulumi:"channelArn"`
	// An optional IAM Role Arn for a service to assume, to be able to post inbound SMS messages.
	ChannelRole pulumi.StringPtrInput `pulumi:"channelRole"`
	// By default this is set to false. When set to true you can receive incoming text messages from your end recipients.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (TwoWayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwoWayProperties)(nil)).Elem()
}

func (i TwoWayPropertiesArgs) ToTwoWayPropertiesOutput() TwoWayPropertiesOutput {
	return i.ToTwoWayPropertiesOutputWithContext(context.Background())
}

func (i TwoWayPropertiesArgs) ToTwoWayPropertiesOutputWithContext(ctx context.Context) TwoWayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwoWayPropertiesOutput)
}

func (i TwoWayPropertiesArgs) ToTwoWayPropertiesPtrOutput() TwoWayPropertiesPtrOutput {
	return i.ToTwoWayPropertiesPtrOutputWithContext(context.Background())
}

func (i TwoWayPropertiesArgs) ToTwoWayPropertiesPtrOutputWithContext(ctx context.Context) TwoWayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwoWayPropertiesOutput).ToTwoWayPropertiesPtrOutputWithContext(ctx)
}

// TwoWayPropertiesPtrInput is an input type that accepts TwoWayPropertiesArgs, TwoWayPropertiesPtr and TwoWayPropertiesPtrOutput values.
// You can construct a concrete instance of `TwoWayPropertiesPtrInput` via:
//
//	        TwoWayPropertiesArgs{...}
//
//	or:
//
//	        nil
type TwoWayPropertiesPtrInput interface {
	pulumi.Input

	ToTwoWayPropertiesPtrOutput() TwoWayPropertiesPtrOutput
	ToTwoWayPropertiesPtrOutputWithContext(context.Context) TwoWayPropertiesPtrOutput
}

type twoWayPropertiesPtrType TwoWayPropertiesArgs

func TwoWayPropertiesPtr(v *TwoWayPropertiesArgs) TwoWayPropertiesPtrInput {
	return (*twoWayPropertiesPtrType)(v)
}

func (*twoWayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwoWayProperties)(nil)).Elem()
}

func (i *twoWayPropertiesPtrType) ToTwoWayPropertiesPtrOutput() TwoWayPropertiesPtrOutput {
	return i.ToTwoWayPropertiesPtrOutputWithContext(context.Background())
}

func (i *twoWayPropertiesPtrType) ToTwoWayPropertiesPtrOutputWithContext(ctx context.Context) TwoWayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwoWayPropertiesPtrOutput)
}

// When you set up two-way SMS, you can receive incoming messages from your customers. When one of your customers sends a message to your phone number, the message body is sent to an Amazon SNS topic or Amazon Connect for processing.
type TwoWayPropertiesOutput struct{ *pulumi.OutputState }

func (TwoWayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwoWayProperties)(nil)).Elem()
}

func (o TwoWayPropertiesOutput) ToTwoWayPropertiesOutput() TwoWayPropertiesOutput {
	return o
}

func (o TwoWayPropertiesOutput) ToTwoWayPropertiesOutputWithContext(ctx context.Context) TwoWayPropertiesOutput {
	return o
}

func (o TwoWayPropertiesOutput) ToTwoWayPropertiesPtrOutput() TwoWayPropertiesPtrOutput {
	return o.ToTwoWayPropertiesPtrOutputWithContext(context.Background())
}

func (o TwoWayPropertiesOutput) ToTwoWayPropertiesPtrOutputWithContext(ctx context.Context) TwoWayPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwoWayProperties) *TwoWayProperties {
		return &v
	}).(TwoWayPropertiesPtrOutput)
}

// The Amazon Resource Name (ARN) of the two way channel.
func (o TwoWayPropertiesOutput) ChannelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwoWayProperties) *string { return v.ChannelArn }).(pulumi.StringPtrOutput)
}

// An optional IAM Role Arn for a service to assume, to be able to post inbound SMS messages.
func (o TwoWayPropertiesOutput) ChannelRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwoWayProperties) *string { return v.ChannelRole }).(pulumi.StringPtrOutput)
}

// By default this is set to false. When set to true you can receive incoming text messages from your end recipients.
func (o TwoWayPropertiesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TwoWayProperties) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type TwoWayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TwoWayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwoWayProperties)(nil)).Elem()
}

func (o TwoWayPropertiesPtrOutput) ToTwoWayPropertiesPtrOutput() TwoWayPropertiesPtrOutput {
	return o
}

func (o TwoWayPropertiesPtrOutput) ToTwoWayPropertiesPtrOutputWithContext(ctx context.Context) TwoWayPropertiesPtrOutput {
	return o
}

func (o TwoWayPropertiesPtrOutput) Elem() TwoWayPropertiesOutput {
	return o.ApplyT(func(v *TwoWayProperties) TwoWayProperties {
		if v != nil {
			return *v
		}
		var ret TwoWayProperties
		return ret
	}).(TwoWayPropertiesOutput)
}

// The Amazon Resource Name (ARN) of the two way channel.
func (o TwoWayPropertiesPtrOutput) ChannelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwoWayProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChannelArn
	}).(pulumi.StringPtrOutput)
}

// An optional IAM Role Arn for a service to assume, to be able to post inbound SMS messages.
func (o TwoWayPropertiesPtrOutput) ChannelRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwoWayProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChannelRole
	}).(pulumi.StringPtrOutput)
}

// By default this is set to false. When set to true you can receive incoming text messages from your end recipients.
func (o TwoWayPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TwoWayProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetCloudWatchLogsDestinationInput)(nil)).Elem(), ConfigurationSetCloudWatchLogsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetCloudWatchLogsDestinationPtrInput)(nil)).Elem(), ConfigurationSetCloudWatchLogsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetEventDestinationInput)(nil)).Elem(), ConfigurationSetEventDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetEventDestinationArrayInput)(nil)).Elem(), ConfigurationSetEventDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetKinesisFirehoseDestinationInput)(nil)).Elem(), ConfigurationSetKinesisFirehoseDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetKinesisFirehoseDestinationPtrInput)(nil)).Elem(), ConfigurationSetKinesisFirehoseDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetSnsDestinationInput)(nil)).Elem(), ConfigurationSetSnsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetSnsDestinationPtrInput)(nil)).Elem(), ConfigurationSetSnsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MandatoryKeywordsPropertiesInput)(nil)).Elem(), MandatoryKeywordsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberOptionalKeywordInput)(nil)).Elem(), PhoneNumberOptionalKeywordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberOptionalKeywordArrayInput)(nil)).Elem(), PhoneNumberOptionalKeywordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMandatoryKeywordInput)(nil)).Elem(), PoolMandatoryKeywordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolOptionalKeywordInput)(nil)).Elem(), PoolOptionalKeywordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolOptionalKeywordArrayInput)(nil)).Elem(), PoolOptionalKeywordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectConfigurationCountryRuleInput)(nil)).Elem(), ProtectConfigurationCountryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectConfigurationCountryRuleArrayInput)(nil)).Elem(), ProtectConfigurationCountryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectConfigurationCountryRuleSetInput)(nil)).Elem(), ProtectConfigurationCountryRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectConfigurationCountryRuleSetPtrInput)(nil)).Elem(), ProtectConfigurationCountryRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwoWayPropertiesInput)(nil)).Elem(), TwoWayPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwoWayPropertiesPtrInput)(nil)).Elem(), TwoWayPropertiesArgs{})
	pulumi.RegisterOutputType(ConfigurationSetCloudWatchLogsDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetCloudWatchLogsDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationSetKinesisFirehoseDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetKinesisFirehoseDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationSetSnsDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetSnsDestinationPtrOutput{})
	pulumi.RegisterOutputType(MandatoryKeywordsPropertiesOutput{})
	pulumi.RegisterOutputType(MandatoryKeywordsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PhoneNumberOptionalKeywordOutput{})
	pulumi.RegisterOutputType(PhoneNumberOptionalKeywordArrayOutput{})
	pulumi.RegisterOutputType(PoolMandatoryKeywordOutput{})
	pulumi.RegisterOutputType(PoolMandatoryKeywordPtrOutput{})
	pulumi.RegisterOutputType(PoolOptionalKeywordOutput{})
	pulumi.RegisterOutputType(PoolOptionalKeywordArrayOutput{})
	pulumi.RegisterOutputType(ProtectConfigurationCountryRuleOutput{})
	pulumi.RegisterOutputType(ProtectConfigurationCountryRuleArrayOutput{})
	pulumi.RegisterOutputType(ProtectConfigurationCountryRuleSetOutput{})
	pulumi.RegisterOutputType(ProtectConfigurationCountryRuleSetPtrOutput{})
	pulumi.RegisterOutputType(TwoWayPropertiesOutput{})
	pulumi.RegisterOutputType(TwoWayPropertiesPtrOutput{})
}
