// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smsvoice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SMSVOICE::ConfigurationSet
type ConfigurationSet struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the ConfigurationSet.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name to use for the configuration set.
	ConfigurationSetName pulumi.StringPtrOutput `pulumi:"configurationSetName"`
	// The default sender ID to set for the ConfigurationSet.
	DefaultSenderId pulumi.StringPtrOutput `pulumi:"defaultSenderId"`
	// An event destination is a location where you send message events.
	EventDestinations ConfigurationSetEventDestinationArrayOutput `pulumi:"eventDestinations"`
	// Set to true to enable message feedback.
	MessageFeedbackEnabled pulumi.BoolPtrOutput `pulumi:"messageFeedbackEnabled"`
	// The unique identifier for the protect configuration to be associated to the configuration set.
	ProtectConfigurationId pulumi.StringPtrOutput `pulumi:"protectConfigurationId"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewConfigurationSet registers a new resource with the given unique name, arguments, and options.
func NewConfigurationSet(ctx *pulumi.Context,
	name string, args *ConfigurationSetArgs, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	if args == nil {
		args = &ConfigurationSetArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"configurationSetName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationSet
	err := ctx.RegisterResource("aws-native:smsvoice:ConfigurationSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationSet gets an existing ConfigurationSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationSetState, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	var resource ConfigurationSet
	err := ctx.ReadResource("aws-native:smsvoice:ConfigurationSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationSet resources.
type configurationSetState struct {
}

type ConfigurationSetState struct {
}

func (ConfigurationSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetState)(nil)).Elem()
}

type configurationSetArgs struct {
	// The name to use for the configuration set.
	ConfigurationSetName *string `pulumi:"configurationSetName"`
	// The default sender ID to set for the ConfigurationSet.
	DefaultSenderId *string `pulumi:"defaultSenderId"`
	// An event destination is a location where you send message events.
	EventDestinations []ConfigurationSetEventDestination `pulumi:"eventDestinations"`
	// Set to true to enable message feedback.
	MessageFeedbackEnabled *bool `pulumi:"messageFeedbackEnabled"`
	// The unique identifier for the protect configuration to be associated to the configuration set.
	ProtectConfigurationId *string `pulumi:"protectConfigurationId"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ConfigurationSet resource.
type ConfigurationSetArgs struct {
	// The name to use for the configuration set.
	ConfigurationSetName pulumi.StringPtrInput
	// The default sender ID to set for the ConfigurationSet.
	DefaultSenderId pulumi.StringPtrInput
	// An event destination is a location where you send message events.
	EventDestinations ConfigurationSetEventDestinationArrayInput
	// Set to true to enable message feedback.
	MessageFeedbackEnabled pulumi.BoolPtrInput
	// The unique identifier for the protect configuration to be associated to the configuration set.
	ProtectConfigurationId pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (ConfigurationSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetArgs)(nil)).Elem()
}

type ConfigurationSetInput interface {
	pulumi.Input

	ToConfigurationSetOutput() ConfigurationSetOutput
	ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput
}

func (*ConfigurationSet) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (i *ConfigurationSet) ToConfigurationSetOutput() ConfigurationSetOutput {
	return i.ToConfigurationSetOutputWithContext(context.Background())
}

func (i *ConfigurationSet) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetOutput)
}

type ConfigurationSetOutput struct{ *pulumi.OutputState }

func (ConfigurationSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (o ConfigurationSetOutput) ToConfigurationSetOutput() ConfigurationSetOutput {
	return o
}

func (o ConfigurationSetOutput) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return o
}

// The Amazon Resource Name (ARN) of the ConfigurationSet.
func (o ConfigurationSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The name to use for the configuration set.
func (o ConfigurationSetOutput) ConfigurationSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringPtrOutput { return v.ConfigurationSetName }).(pulumi.StringPtrOutput)
}

// The default sender ID to set for the ConfigurationSet.
func (o ConfigurationSetOutput) DefaultSenderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringPtrOutput { return v.DefaultSenderId }).(pulumi.StringPtrOutput)
}

// An event destination is a location where you send message events.
func (o ConfigurationSetOutput) EventDestinations() ConfigurationSetEventDestinationArrayOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetEventDestinationArrayOutput { return v.EventDestinations }).(ConfigurationSetEventDestinationArrayOutput)
}

// Set to true to enable message feedback.
func (o ConfigurationSetOutput) MessageFeedbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.BoolPtrOutput { return v.MessageFeedbackEnabled }).(pulumi.BoolPtrOutput)
}

// The unique identifier for the protect configuration to be associated to the configuration set.
func (o ConfigurationSetOutput) ProtectConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringPtrOutput { return v.ProtectConfigurationId }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ConfigurationSetOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ConfigurationSet) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetInput)(nil)).Elem(), &ConfigurationSet{})
	pulumi.RegisterOutputType(ConfigurationSetOutput{})
}
