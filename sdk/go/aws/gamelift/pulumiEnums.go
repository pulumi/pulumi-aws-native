// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.
type AliasRoutingStrategyType string

const (
	AliasRoutingStrategyTypeSimple   = AliasRoutingStrategyType("SIMPLE")
	AliasRoutingStrategyTypeTerminal = AliasRoutingStrategyType("TERMINAL")
)

func (AliasRoutingStrategyType) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingStrategyType)(nil)).Elem()
}

func (e AliasRoutingStrategyType) ToAliasRoutingStrategyTypeOutput() AliasRoutingStrategyTypeOutput {
	return pulumi.ToOutput(e).(AliasRoutingStrategyTypeOutput)
}

func (e AliasRoutingStrategyType) ToAliasRoutingStrategyTypeOutputWithContext(ctx context.Context) AliasRoutingStrategyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AliasRoutingStrategyTypeOutput)
}

func (e AliasRoutingStrategyType) ToAliasRoutingStrategyTypePtrOutput() AliasRoutingStrategyTypePtrOutput {
	return e.ToAliasRoutingStrategyTypePtrOutputWithContext(context.Background())
}

func (e AliasRoutingStrategyType) ToAliasRoutingStrategyTypePtrOutputWithContext(ctx context.Context) AliasRoutingStrategyTypePtrOutput {
	return AliasRoutingStrategyType(e).ToAliasRoutingStrategyTypeOutputWithContext(ctx).ToAliasRoutingStrategyTypePtrOutputWithContext(ctx)
}

func (e AliasRoutingStrategyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasRoutingStrategyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AliasRoutingStrategyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AliasRoutingStrategyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AliasRoutingStrategyTypeOutput struct{ *pulumi.OutputState }

func (AliasRoutingStrategyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingStrategyType)(nil)).Elem()
}

func (o AliasRoutingStrategyTypeOutput) ToAliasRoutingStrategyTypeOutput() AliasRoutingStrategyTypeOutput {
	return o
}

func (o AliasRoutingStrategyTypeOutput) ToAliasRoutingStrategyTypeOutputWithContext(ctx context.Context) AliasRoutingStrategyTypeOutput {
	return o
}

func (o AliasRoutingStrategyTypeOutput) ToAliasRoutingStrategyTypePtrOutput() AliasRoutingStrategyTypePtrOutput {
	return o.ToAliasRoutingStrategyTypePtrOutputWithContext(context.Background())
}

func (o AliasRoutingStrategyTypeOutput) ToAliasRoutingStrategyTypePtrOutputWithContext(ctx context.Context) AliasRoutingStrategyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AliasRoutingStrategyType) *AliasRoutingStrategyType {
		return &v
	}).(AliasRoutingStrategyTypePtrOutput)
}

func (o AliasRoutingStrategyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AliasRoutingStrategyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasRoutingStrategyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AliasRoutingStrategyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasRoutingStrategyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AliasRoutingStrategyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AliasRoutingStrategyTypePtrOutput struct{ *pulumi.OutputState }

func (AliasRoutingStrategyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingStrategyType)(nil)).Elem()
}

func (o AliasRoutingStrategyTypePtrOutput) ToAliasRoutingStrategyTypePtrOutput() AliasRoutingStrategyTypePtrOutput {
	return o
}

func (o AliasRoutingStrategyTypePtrOutput) ToAliasRoutingStrategyTypePtrOutputWithContext(ctx context.Context) AliasRoutingStrategyTypePtrOutput {
	return o
}

func (o AliasRoutingStrategyTypePtrOutput) Elem() AliasRoutingStrategyTypeOutput {
	return o.ApplyT(func(v *AliasRoutingStrategyType) AliasRoutingStrategyType {
		if v != nil {
			return *v
		}
		var ret AliasRoutingStrategyType
		return ret
	}).(AliasRoutingStrategyTypeOutput)
}

func (o AliasRoutingStrategyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AliasRoutingStrategyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AliasRoutingStrategyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AliasRoutingStrategyTypeInput is an input type that accepts AliasRoutingStrategyTypeArgs and AliasRoutingStrategyTypeOutput values.
// You can construct a concrete instance of `AliasRoutingStrategyTypeInput` via:
//
//          AliasRoutingStrategyTypeArgs{...}
type AliasRoutingStrategyTypeInput interface {
	pulumi.Input

	ToAliasRoutingStrategyTypeOutput() AliasRoutingStrategyTypeOutput
	ToAliasRoutingStrategyTypeOutputWithContext(context.Context) AliasRoutingStrategyTypeOutput
}

var aliasRoutingStrategyTypePtrType = reflect.TypeOf((**AliasRoutingStrategyType)(nil)).Elem()

type AliasRoutingStrategyTypePtrInput interface {
	pulumi.Input

	ToAliasRoutingStrategyTypePtrOutput() AliasRoutingStrategyTypePtrOutput
	ToAliasRoutingStrategyTypePtrOutputWithContext(context.Context) AliasRoutingStrategyTypePtrOutput
}

type aliasRoutingStrategyTypePtr string

func AliasRoutingStrategyTypePtr(v string) AliasRoutingStrategyTypePtrInput {
	return (*aliasRoutingStrategyTypePtr)(&v)
}

func (*aliasRoutingStrategyTypePtr) ElementType() reflect.Type {
	return aliasRoutingStrategyTypePtrType
}

func (in *aliasRoutingStrategyTypePtr) ToAliasRoutingStrategyTypePtrOutput() AliasRoutingStrategyTypePtrOutput {
	return pulumi.ToOutput(in).(AliasRoutingStrategyTypePtrOutput)
}

func (in *aliasRoutingStrategyTypePtr) ToAliasRoutingStrategyTypePtrOutputWithContext(ctx context.Context) AliasRoutingStrategyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AliasRoutingStrategyTypePtrOutput)
}

type FleetCertificateConfigurationCertificateType string

const (
	FleetCertificateConfigurationCertificateTypeDisabled  = FleetCertificateConfigurationCertificateType("DISABLED")
	FleetCertificateConfigurationCertificateTypeGenerated = FleetCertificateConfigurationCertificateType("GENERATED")
)

func (FleetCertificateConfigurationCertificateType) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCertificateConfigurationCertificateType)(nil)).Elem()
}

func (e FleetCertificateConfigurationCertificateType) ToFleetCertificateConfigurationCertificateTypeOutput() FleetCertificateConfigurationCertificateTypeOutput {
	return pulumi.ToOutput(e).(FleetCertificateConfigurationCertificateTypeOutput)
}

func (e FleetCertificateConfigurationCertificateType) ToFleetCertificateConfigurationCertificateTypeOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetCertificateConfigurationCertificateTypeOutput)
}

func (e FleetCertificateConfigurationCertificateType) ToFleetCertificateConfigurationCertificateTypePtrOutput() FleetCertificateConfigurationCertificateTypePtrOutput {
	return e.ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(context.Background())
}

func (e FleetCertificateConfigurationCertificateType) ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypePtrOutput {
	return FleetCertificateConfigurationCertificateType(e).ToFleetCertificateConfigurationCertificateTypeOutputWithContext(ctx).ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(ctx)
}

func (e FleetCertificateConfigurationCertificateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetCertificateConfigurationCertificateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetCertificateConfigurationCertificateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetCertificateConfigurationCertificateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetCertificateConfigurationCertificateTypeOutput struct{ *pulumi.OutputState }

func (FleetCertificateConfigurationCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCertificateConfigurationCertificateType)(nil)).Elem()
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToFleetCertificateConfigurationCertificateTypeOutput() FleetCertificateConfigurationCertificateTypeOutput {
	return o
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToFleetCertificateConfigurationCertificateTypeOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypeOutput {
	return o
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToFleetCertificateConfigurationCertificateTypePtrOutput() FleetCertificateConfigurationCertificateTypePtrOutput {
	return o.ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(context.Background())
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetCertificateConfigurationCertificateType) *FleetCertificateConfigurationCertificateType {
		return &v
	}).(FleetCertificateConfigurationCertificateTypePtrOutput)
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetCertificateConfigurationCertificateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetCertificateConfigurationCertificateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetCertificateConfigurationCertificateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetCertificateConfigurationCertificateTypePtrOutput struct{ *pulumi.OutputState }

func (FleetCertificateConfigurationCertificateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCertificateConfigurationCertificateType)(nil)).Elem()
}

func (o FleetCertificateConfigurationCertificateTypePtrOutput) ToFleetCertificateConfigurationCertificateTypePtrOutput() FleetCertificateConfigurationCertificateTypePtrOutput {
	return o
}

func (o FleetCertificateConfigurationCertificateTypePtrOutput) ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypePtrOutput {
	return o
}

func (o FleetCertificateConfigurationCertificateTypePtrOutput) Elem() FleetCertificateConfigurationCertificateTypeOutput {
	return o.ApplyT(func(v *FleetCertificateConfigurationCertificateType) FleetCertificateConfigurationCertificateType {
		if v != nil {
			return *v
		}
		var ret FleetCertificateConfigurationCertificateType
		return ret
	}).(FleetCertificateConfigurationCertificateTypeOutput)
}

func (o FleetCertificateConfigurationCertificateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetCertificateConfigurationCertificateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetCertificateConfigurationCertificateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetCertificateConfigurationCertificateTypeInput is an input type that accepts FleetCertificateConfigurationCertificateTypeArgs and FleetCertificateConfigurationCertificateTypeOutput values.
// You can construct a concrete instance of `FleetCertificateConfigurationCertificateTypeInput` via:
//
//          FleetCertificateConfigurationCertificateTypeArgs{...}
type FleetCertificateConfigurationCertificateTypeInput interface {
	pulumi.Input

	ToFleetCertificateConfigurationCertificateTypeOutput() FleetCertificateConfigurationCertificateTypeOutput
	ToFleetCertificateConfigurationCertificateTypeOutputWithContext(context.Context) FleetCertificateConfigurationCertificateTypeOutput
}

var fleetCertificateConfigurationCertificateTypePtrType = reflect.TypeOf((**FleetCertificateConfigurationCertificateType)(nil)).Elem()

type FleetCertificateConfigurationCertificateTypePtrInput interface {
	pulumi.Input

	ToFleetCertificateConfigurationCertificateTypePtrOutput() FleetCertificateConfigurationCertificateTypePtrOutput
	ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(context.Context) FleetCertificateConfigurationCertificateTypePtrOutput
}

type fleetCertificateConfigurationCertificateTypePtr string

func FleetCertificateConfigurationCertificateTypePtr(v string) FleetCertificateConfigurationCertificateTypePtrInput {
	return (*fleetCertificateConfigurationCertificateTypePtr)(&v)
}

func (*fleetCertificateConfigurationCertificateTypePtr) ElementType() reflect.Type {
	return fleetCertificateConfigurationCertificateTypePtrType
}

func (in *fleetCertificateConfigurationCertificateTypePtr) ToFleetCertificateConfigurationCertificateTypePtrOutput() FleetCertificateConfigurationCertificateTypePtrOutput {
	return pulumi.ToOutput(in).(FleetCertificateConfigurationCertificateTypePtrOutput)
}

func (in *fleetCertificateConfigurationCertificateTypePtr) ToFleetCertificateConfigurationCertificateTypePtrOutputWithContext(ctx context.Context) FleetCertificateConfigurationCertificateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetCertificateConfigurationCertificateTypePtrOutput)
}

// The network communication protocol used by the fleet.
type FleetIpPermissionProtocol string

const (
	FleetIpPermissionProtocolTcp = FleetIpPermissionProtocol("TCP")
	FleetIpPermissionProtocolUdp = FleetIpPermissionProtocol("UDP")
)

func (FleetIpPermissionProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetIpPermissionProtocol)(nil)).Elem()
}

func (e FleetIpPermissionProtocol) ToFleetIpPermissionProtocolOutput() FleetIpPermissionProtocolOutput {
	return pulumi.ToOutput(e).(FleetIpPermissionProtocolOutput)
}

func (e FleetIpPermissionProtocol) ToFleetIpPermissionProtocolOutputWithContext(ctx context.Context) FleetIpPermissionProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetIpPermissionProtocolOutput)
}

func (e FleetIpPermissionProtocol) ToFleetIpPermissionProtocolPtrOutput() FleetIpPermissionProtocolPtrOutput {
	return e.ToFleetIpPermissionProtocolPtrOutputWithContext(context.Background())
}

func (e FleetIpPermissionProtocol) ToFleetIpPermissionProtocolPtrOutputWithContext(ctx context.Context) FleetIpPermissionProtocolPtrOutput {
	return FleetIpPermissionProtocol(e).ToFleetIpPermissionProtocolOutputWithContext(ctx).ToFleetIpPermissionProtocolPtrOutputWithContext(ctx)
}

func (e FleetIpPermissionProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetIpPermissionProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetIpPermissionProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetIpPermissionProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetIpPermissionProtocolOutput struct{ *pulumi.OutputState }

func (FleetIpPermissionProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetIpPermissionProtocol)(nil)).Elem()
}

func (o FleetIpPermissionProtocolOutput) ToFleetIpPermissionProtocolOutput() FleetIpPermissionProtocolOutput {
	return o
}

func (o FleetIpPermissionProtocolOutput) ToFleetIpPermissionProtocolOutputWithContext(ctx context.Context) FleetIpPermissionProtocolOutput {
	return o
}

func (o FleetIpPermissionProtocolOutput) ToFleetIpPermissionProtocolPtrOutput() FleetIpPermissionProtocolPtrOutput {
	return o.ToFleetIpPermissionProtocolPtrOutputWithContext(context.Background())
}

func (o FleetIpPermissionProtocolOutput) ToFleetIpPermissionProtocolPtrOutputWithContext(ctx context.Context) FleetIpPermissionProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetIpPermissionProtocol) *FleetIpPermissionProtocol {
		return &v
	}).(FleetIpPermissionProtocolPtrOutput)
}

func (o FleetIpPermissionProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetIpPermissionProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetIpPermissionProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetIpPermissionProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetIpPermissionProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetIpPermissionProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetIpPermissionProtocolPtrOutput struct{ *pulumi.OutputState }

func (FleetIpPermissionProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetIpPermissionProtocol)(nil)).Elem()
}

func (o FleetIpPermissionProtocolPtrOutput) ToFleetIpPermissionProtocolPtrOutput() FleetIpPermissionProtocolPtrOutput {
	return o
}

func (o FleetIpPermissionProtocolPtrOutput) ToFleetIpPermissionProtocolPtrOutputWithContext(ctx context.Context) FleetIpPermissionProtocolPtrOutput {
	return o
}

func (o FleetIpPermissionProtocolPtrOutput) Elem() FleetIpPermissionProtocolOutput {
	return o.ApplyT(func(v *FleetIpPermissionProtocol) FleetIpPermissionProtocol {
		if v != nil {
			return *v
		}
		var ret FleetIpPermissionProtocol
		return ret
	}).(FleetIpPermissionProtocolOutput)
}

func (o FleetIpPermissionProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetIpPermissionProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetIpPermissionProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetIpPermissionProtocolInput is an input type that accepts FleetIpPermissionProtocolArgs and FleetIpPermissionProtocolOutput values.
// You can construct a concrete instance of `FleetIpPermissionProtocolInput` via:
//
//          FleetIpPermissionProtocolArgs{...}
type FleetIpPermissionProtocolInput interface {
	pulumi.Input

	ToFleetIpPermissionProtocolOutput() FleetIpPermissionProtocolOutput
	ToFleetIpPermissionProtocolOutputWithContext(context.Context) FleetIpPermissionProtocolOutput
}

var fleetIpPermissionProtocolPtrType = reflect.TypeOf((**FleetIpPermissionProtocol)(nil)).Elem()

type FleetIpPermissionProtocolPtrInput interface {
	pulumi.Input

	ToFleetIpPermissionProtocolPtrOutput() FleetIpPermissionProtocolPtrOutput
	ToFleetIpPermissionProtocolPtrOutputWithContext(context.Context) FleetIpPermissionProtocolPtrOutput
}

type fleetIpPermissionProtocolPtr string

func FleetIpPermissionProtocolPtr(v string) FleetIpPermissionProtocolPtrInput {
	return (*fleetIpPermissionProtocolPtr)(&v)
}

func (*fleetIpPermissionProtocolPtr) ElementType() reflect.Type {
	return fleetIpPermissionProtocolPtrType
}

func (in *fleetIpPermissionProtocolPtr) ToFleetIpPermissionProtocolPtrOutput() FleetIpPermissionProtocolPtrOutput {
	return pulumi.ToOutput(in).(FleetIpPermissionProtocolPtrOutput)
}

func (in *fleetIpPermissionProtocolPtr) ToFleetIpPermissionProtocolPtrOutputWithContext(ctx context.Context) FleetIpPermissionProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetIpPermissionProtocolPtrOutput)
}

// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
type FleetNewGameSessionProtectionPolicy string

const (
	FleetNewGameSessionProtectionPolicyFullProtection = FleetNewGameSessionProtectionPolicy("FullProtection")
	FleetNewGameSessionProtectionPolicyNoProtection   = FleetNewGameSessionProtectionPolicy("NoProtection")
)

func (FleetNewGameSessionProtectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetNewGameSessionProtectionPolicy)(nil)).Elem()
}

func (e FleetNewGameSessionProtectionPolicy) ToFleetNewGameSessionProtectionPolicyOutput() FleetNewGameSessionProtectionPolicyOutput {
	return pulumi.ToOutput(e).(FleetNewGameSessionProtectionPolicyOutput)
}

func (e FleetNewGameSessionProtectionPolicy) ToFleetNewGameSessionProtectionPolicyOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetNewGameSessionProtectionPolicyOutput)
}

func (e FleetNewGameSessionProtectionPolicy) ToFleetNewGameSessionProtectionPolicyPtrOutput() FleetNewGameSessionProtectionPolicyPtrOutput {
	return e.ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(context.Background())
}

func (e FleetNewGameSessionProtectionPolicy) ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyPtrOutput {
	return FleetNewGameSessionProtectionPolicy(e).ToFleetNewGameSessionProtectionPolicyOutputWithContext(ctx).ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(ctx)
}

func (e FleetNewGameSessionProtectionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetNewGameSessionProtectionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetNewGameSessionProtectionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetNewGameSessionProtectionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetNewGameSessionProtectionPolicyOutput struct{ *pulumi.OutputState }

func (FleetNewGameSessionProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetNewGameSessionProtectionPolicy)(nil)).Elem()
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToFleetNewGameSessionProtectionPolicyOutput() FleetNewGameSessionProtectionPolicyOutput {
	return o
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToFleetNewGameSessionProtectionPolicyOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyOutput {
	return o
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToFleetNewGameSessionProtectionPolicyPtrOutput() FleetNewGameSessionProtectionPolicyPtrOutput {
	return o.ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetNewGameSessionProtectionPolicy) *FleetNewGameSessionProtectionPolicy {
		return &v
	}).(FleetNewGameSessionProtectionPolicyPtrOutput)
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetNewGameSessionProtectionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetNewGameSessionProtectionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetNewGameSessionProtectionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetNewGameSessionProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (FleetNewGameSessionProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetNewGameSessionProtectionPolicy)(nil)).Elem()
}

func (o FleetNewGameSessionProtectionPolicyPtrOutput) ToFleetNewGameSessionProtectionPolicyPtrOutput() FleetNewGameSessionProtectionPolicyPtrOutput {
	return o
}

func (o FleetNewGameSessionProtectionPolicyPtrOutput) ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyPtrOutput {
	return o
}

func (o FleetNewGameSessionProtectionPolicyPtrOutput) Elem() FleetNewGameSessionProtectionPolicyOutput {
	return o.ApplyT(func(v *FleetNewGameSessionProtectionPolicy) FleetNewGameSessionProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret FleetNewGameSessionProtectionPolicy
		return ret
	}).(FleetNewGameSessionProtectionPolicyOutput)
}

func (o FleetNewGameSessionProtectionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetNewGameSessionProtectionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetNewGameSessionProtectionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetNewGameSessionProtectionPolicyInput is an input type that accepts FleetNewGameSessionProtectionPolicyArgs and FleetNewGameSessionProtectionPolicyOutput values.
// You can construct a concrete instance of `FleetNewGameSessionProtectionPolicyInput` via:
//
//          FleetNewGameSessionProtectionPolicyArgs{...}
type FleetNewGameSessionProtectionPolicyInput interface {
	pulumi.Input

	ToFleetNewGameSessionProtectionPolicyOutput() FleetNewGameSessionProtectionPolicyOutput
	ToFleetNewGameSessionProtectionPolicyOutputWithContext(context.Context) FleetNewGameSessionProtectionPolicyOutput
}

var fleetNewGameSessionProtectionPolicyPtrType = reflect.TypeOf((**FleetNewGameSessionProtectionPolicy)(nil)).Elem()

type FleetNewGameSessionProtectionPolicyPtrInput interface {
	pulumi.Input

	ToFleetNewGameSessionProtectionPolicyPtrOutput() FleetNewGameSessionProtectionPolicyPtrOutput
	ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(context.Context) FleetNewGameSessionProtectionPolicyPtrOutput
}

type fleetNewGameSessionProtectionPolicyPtr string

func FleetNewGameSessionProtectionPolicyPtr(v string) FleetNewGameSessionProtectionPolicyPtrInput {
	return (*fleetNewGameSessionProtectionPolicyPtr)(&v)
}

func (*fleetNewGameSessionProtectionPolicyPtr) ElementType() reflect.Type {
	return fleetNewGameSessionProtectionPolicyPtrType
}

func (in *fleetNewGameSessionProtectionPolicyPtr) ToFleetNewGameSessionProtectionPolicyPtrOutput() FleetNewGameSessionProtectionPolicyPtrOutput {
	return pulumi.ToOutput(in).(FleetNewGameSessionProtectionPolicyPtrOutput)
}

func (in *fleetNewGameSessionProtectionPolicyPtr) ToFleetNewGameSessionProtectionPolicyPtrOutputWithContext(ctx context.Context) FleetNewGameSessionProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetNewGameSessionProtectionPolicyPtrOutput)
}

// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
type FleetType string

const (
	FleetTypeOnDemand = FleetType("ON_DEMAND")
	FleetTypeSpot     = FleetType("SPOT")
)

func (FleetType) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetType)(nil)).Elem()
}

func (e FleetType) ToFleetTypeOutput() FleetTypeOutput {
	return pulumi.ToOutput(e).(FleetTypeOutput)
}

func (e FleetType) ToFleetTypeOutputWithContext(ctx context.Context) FleetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetTypeOutput)
}

func (e FleetType) ToFleetTypePtrOutput() FleetTypePtrOutput {
	return e.ToFleetTypePtrOutputWithContext(context.Background())
}

func (e FleetType) ToFleetTypePtrOutputWithContext(ctx context.Context) FleetTypePtrOutput {
	return FleetType(e).ToFleetTypeOutputWithContext(ctx).ToFleetTypePtrOutputWithContext(ctx)
}

func (e FleetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetTypeOutput struct{ *pulumi.OutputState }

func (FleetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetType)(nil)).Elem()
}

func (o FleetTypeOutput) ToFleetTypeOutput() FleetTypeOutput {
	return o
}

func (o FleetTypeOutput) ToFleetTypeOutputWithContext(ctx context.Context) FleetTypeOutput {
	return o
}

func (o FleetTypeOutput) ToFleetTypePtrOutput() FleetTypePtrOutput {
	return o.ToFleetTypePtrOutputWithContext(context.Background())
}

func (o FleetTypeOutput) ToFleetTypePtrOutputWithContext(ctx context.Context) FleetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetType) *FleetType {
		return &v
	}).(FleetTypePtrOutput)
}

func (o FleetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetTypePtrOutput struct{ *pulumi.OutputState }

func (FleetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetType)(nil)).Elem()
}

func (o FleetTypePtrOutput) ToFleetTypePtrOutput() FleetTypePtrOutput {
	return o
}

func (o FleetTypePtrOutput) ToFleetTypePtrOutputWithContext(ctx context.Context) FleetTypePtrOutput {
	return o
}

func (o FleetTypePtrOutput) Elem() FleetTypeOutput {
	return o.ApplyT(func(v *FleetType) FleetType {
		if v != nil {
			return *v
		}
		var ret FleetType
		return ret
	}).(FleetTypeOutput)
}

func (o FleetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetTypeInput is an input type that accepts FleetTypeArgs and FleetTypeOutput values.
// You can construct a concrete instance of `FleetTypeInput` via:
//
//          FleetTypeArgs{...}
type FleetTypeInput interface {
	pulumi.Input

	ToFleetTypeOutput() FleetTypeOutput
	ToFleetTypeOutputWithContext(context.Context) FleetTypeOutput
}

var fleetTypePtrType = reflect.TypeOf((**FleetType)(nil)).Elem()

type FleetTypePtrInput interface {
	pulumi.Input

	ToFleetTypePtrOutput() FleetTypePtrOutput
	ToFleetTypePtrOutputWithContext(context.Context) FleetTypePtrOutput
}

type fleetTypePtr string

func FleetTypePtr(v string) FleetTypePtrInput {
	return (*fleetTypePtr)(&v)
}

func (*fleetTypePtr) ElementType() reflect.Type {
	return fleetTypePtrType
}

func (in *fleetTypePtr) ToFleetTypePtrOutput() FleetTypePtrOutput {
	return pulumi.ToOutput(in).(FleetTypePtrOutput)
}

func (in *fleetTypePtr) ToFleetTypePtrOutputWithContext(ctx context.Context) FleetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetTypePtrOutput)
}

// The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
type GameServerGroupBalancingStrategy string

const (
	GameServerGroupBalancingStrategySpotOnly      = GameServerGroupBalancingStrategy("SPOT_ONLY")
	GameServerGroupBalancingStrategySpotPreferred = GameServerGroupBalancingStrategy("SPOT_PREFERRED")
	GameServerGroupBalancingStrategyOnDemandOnly  = GameServerGroupBalancingStrategy("ON_DEMAND_ONLY")
)

func (GameServerGroupBalancingStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupBalancingStrategy)(nil)).Elem()
}

func (e GameServerGroupBalancingStrategy) ToGameServerGroupBalancingStrategyOutput() GameServerGroupBalancingStrategyOutput {
	return pulumi.ToOutput(e).(GameServerGroupBalancingStrategyOutput)
}

func (e GameServerGroupBalancingStrategy) ToGameServerGroupBalancingStrategyOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GameServerGroupBalancingStrategyOutput)
}

func (e GameServerGroupBalancingStrategy) ToGameServerGroupBalancingStrategyPtrOutput() GameServerGroupBalancingStrategyPtrOutput {
	return e.ToGameServerGroupBalancingStrategyPtrOutputWithContext(context.Background())
}

func (e GameServerGroupBalancingStrategy) ToGameServerGroupBalancingStrategyPtrOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyPtrOutput {
	return GameServerGroupBalancingStrategy(e).ToGameServerGroupBalancingStrategyOutputWithContext(ctx).ToGameServerGroupBalancingStrategyPtrOutputWithContext(ctx)
}

func (e GameServerGroupBalancingStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupBalancingStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupBalancingStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GameServerGroupBalancingStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GameServerGroupBalancingStrategyOutput struct{ *pulumi.OutputState }

func (GameServerGroupBalancingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupBalancingStrategy)(nil)).Elem()
}

func (o GameServerGroupBalancingStrategyOutput) ToGameServerGroupBalancingStrategyOutput() GameServerGroupBalancingStrategyOutput {
	return o
}

func (o GameServerGroupBalancingStrategyOutput) ToGameServerGroupBalancingStrategyOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyOutput {
	return o
}

func (o GameServerGroupBalancingStrategyOutput) ToGameServerGroupBalancingStrategyPtrOutput() GameServerGroupBalancingStrategyPtrOutput {
	return o.ToGameServerGroupBalancingStrategyPtrOutputWithContext(context.Background())
}

func (o GameServerGroupBalancingStrategyOutput) ToGameServerGroupBalancingStrategyPtrOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GameServerGroupBalancingStrategy) *GameServerGroupBalancingStrategy {
		return &v
	}).(GameServerGroupBalancingStrategyPtrOutput)
}

func (o GameServerGroupBalancingStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GameServerGroupBalancingStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupBalancingStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GameServerGroupBalancingStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupBalancingStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupBalancingStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GameServerGroupBalancingStrategyPtrOutput struct{ *pulumi.OutputState }

func (GameServerGroupBalancingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerGroupBalancingStrategy)(nil)).Elem()
}

func (o GameServerGroupBalancingStrategyPtrOutput) ToGameServerGroupBalancingStrategyPtrOutput() GameServerGroupBalancingStrategyPtrOutput {
	return o
}

func (o GameServerGroupBalancingStrategyPtrOutput) ToGameServerGroupBalancingStrategyPtrOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyPtrOutput {
	return o
}

func (o GameServerGroupBalancingStrategyPtrOutput) Elem() GameServerGroupBalancingStrategyOutput {
	return o.ApplyT(func(v *GameServerGroupBalancingStrategy) GameServerGroupBalancingStrategy {
		if v != nil {
			return *v
		}
		var ret GameServerGroupBalancingStrategy
		return ret
	}).(GameServerGroupBalancingStrategyOutput)
}

func (o GameServerGroupBalancingStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupBalancingStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GameServerGroupBalancingStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GameServerGroupBalancingStrategyInput is an input type that accepts GameServerGroupBalancingStrategyArgs and GameServerGroupBalancingStrategyOutput values.
// You can construct a concrete instance of `GameServerGroupBalancingStrategyInput` via:
//
//          GameServerGroupBalancingStrategyArgs{...}
type GameServerGroupBalancingStrategyInput interface {
	pulumi.Input

	ToGameServerGroupBalancingStrategyOutput() GameServerGroupBalancingStrategyOutput
	ToGameServerGroupBalancingStrategyOutputWithContext(context.Context) GameServerGroupBalancingStrategyOutput
}

var gameServerGroupBalancingStrategyPtrType = reflect.TypeOf((**GameServerGroupBalancingStrategy)(nil)).Elem()

type GameServerGroupBalancingStrategyPtrInput interface {
	pulumi.Input

	ToGameServerGroupBalancingStrategyPtrOutput() GameServerGroupBalancingStrategyPtrOutput
	ToGameServerGroupBalancingStrategyPtrOutputWithContext(context.Context) GameServerGroupBalancingStrategyPtrOutput
}

type gameServerGroupBalancingStrategyPtr string

func GameServerGroupBalancingStrategyPtr(v string) GameServerGroupBalancingStrategyPtrInput {
	return (*gameServerGroupBalancingStrategyPtr)(&v)
}

func (*gameServerGroupBalancingStrategyPtr) ElementType() reflect.Type {
	return gameServerGroupBalancingStrategyPtrType
}

func (in *gameServerGroupBalancingStrategyPtr) ToGameServerGroupBalancingStrategyPtrOutput() GameServerGroupBalancingStrategyPtrOutput {
	return pulumi.ToOutput(in).(GameServerGroupBalancingStrategyPtrOutput)
}

func (in *gameServerGroupBalancingStrategyPtr) ToGameServerGroupBalancingStrategyPtrOutputWithContext(ctx context.Context) GameServerGroupBalancingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GameServerGroupBalancingStrategyPtrOutput)
}

// The type of delete to perform.
type GameServerGroupDeleteOption string

const (
	GameServerGroupDeleteOptionSafeDelete  = GameServerGroupDeleteOption("SAFE_DELETE")
	GameServerGroupDeleteOptionForceDelete = GameServerGroupDeleteOption("FORCE_DELETE")
	GameServerGroupDeleteOptionRetain      = GameServerGroupDeleteOption("RETAIN")
)

func (GameServerGroupDeleteOption) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupDeleteOption)(nil)).Elem()
}

func (e GameServerGroupDeleteOption) ToGameServerGroupDeleteOptionOutput() GameServerGroupDeleteOptionOutput {
	return pulumi.ToOutput(e).(GameServerGroupDeleteOptionOutput)
}

func (e GameServerGroupDeleteOption) ToGameServerGroupDeleteOptionOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GameServerGroupDeleteOptionOutput)
}

func (e GameServerGroupDeleteOption) ToGameServerGroupDeleteOptionPtrOutput() GameServerGroupDeleteOptionPtrOutput {
	return e.ToGameServerGroupDeleteOptionPtrOutputWithContext(context.Background())
}

func (e GameServerGroupDeleteOption) ToGameServerGroupDeleteOptionPtrOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionPtrOutput {
	return GameServerGroupDeleteOption(e).ToGameServerGroupDeleteOptionOutputWithContext(ctx).ToGameServerGroupDeleteOptionPtrOutputWithContext(ctx)
}

func (e GameServerGroupDeleteOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupDeleteOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupDeleteOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GameServerGroupDeleteOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GameServerGroupDeleteOptionOutput struct{ *pulumi.OutputState }

func (GameServerGroupDeleteOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupDeleteOption)(nil)).Elem()
}

func (o GameServerGroupDeleteOptionOutput) ToGameServerGroupDeleteOptionOutput() GameServerGroupDeleteOptionOutput {
	return o
}

func (o GameServerGroupDeleteOptionOutput) ToGameServerGroupDeleteOptionOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionOutput {
	return o
}

func (o GameServerGroupDeleteOptionOutput) ToGameServerGroupDeleteOptionPtrOutput() GameServerGroupDeleteOptionPtrOutput {
	return o.ToGameServerGroupDeleteOptionPtrOutputWithContext(context.Background())
}

func (o GameServerGroupDeleteOptionOutput) ToGameServerGroupDeleteOptionPtrOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GameServerGroupDeleteOption) *GameServerGroupDeleteOption {
		return &v
	}).(GameServerGroupDeleteOptionPtrOutput)
}

func (o GameServerGroupDeleteOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GameServerGroupDeleteOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupDeleteOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GameServerGroupDeleteOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupDeleteOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupDeleteOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GameServerGroupDeleteOptionPtrOutput struct{ *pulumi.OutputState }

func (GameServerGroupDeleteOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerGroupDeleteOption)(nil)).Elem()
}

func (o GameServerGroupDeleteOptionPtrOutput) ToGameServerGroupDeleteOptionPtrOutput() GameServerGroupDeleteOptionPtrOutput {
	return o
}

func (o GameServerGroupDeleteOptionPtrOutput) ToGameServerGroupDeleteOptionPtrOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionPtrOutput {
	return o
}

func (o GameServerGroupDeleteOptionPtrOutput) Elem() GameServerGroupDeleteOptionOutput {
	return o.ApplyT(func(v *GameServerGroupDeleteOption) GameServerGroupDeleteOption {
		if v != nil {
			return *v
		}
		var ret GameServerGroupDeleteOption
		return ret
	}).(GameServerGroupDeleteOptionOutput)
}

func (o GameServerGroupDeleteOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupDeleteOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GameServerGroupDeleteOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GameServerGroupDeleteOptionInput is an input type that accepts GameServerGroupDeleteOptionArgs and GameServerGroupDeleteOptionOutput values.
// You can construct a concrete instance of `GameServerGroupDeleteOptionInput` via:
//
//          GameServerGroupDeleteOptionArgs{...}
type GameServerGroupDeleteOptionInput interface {
	pulumi.Input

	ToGameServerGroupDeleteOptionOutput() GameServerGroupDeleteOptionOutput
	ToGameServerGroupDeleteOptionOutputWithContext(context.Context) GameServerGroupDeleteOptionOutput
}

var gameServerGroupDeleteOptionPtrType = reflect.TypeOf((**GameServerGroupDeleteOption)(nil)).Elem()

type GameServerGroupDeleteOptionPtrInput interface {
	pulumi.Input

	ToGameServerGroupDeleteOptionPtrOutput() GameServerGroupDeleteOptionPtrOutput
	ToGameServerGroupDeleteOptionPtrOutputWithContext(context.Context) GameServerGroupDeleteOptionPtrOutput
}

type gameServerGroupDeleteOptionPtr string

func GameServerGroupDeleteOptionPtr(v string) GameServerGroupDeleteOptionPtrInput {
	return (*gameServerGroupDeleteOptionPtr)(&v)
}

func (*gameServerGroupDeleteOptionPtr) ElementType() reflect.Type {
	return gameServerGroupDeleteOptionPtrType
}

func (in *gameServerGroupDeleteOptionPtr) ToGameServerGroupDeleteOptionPtrOutput() GameServerGroupDeleteOptionPtrOutput {
	return pulumi.ToOutput(in).(GameServerGroupDeleteOptionPtrOutput)
}

func (in *gameServerGroupDeleteOptionPtr) ToGameServerGroupDeleteOptionPtrOutputWithContext(ctx context.Context) GameServerGroupDeleteOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GameServerGroupDeleteOptionPtrOutput)
}

// A flag that indicates whether instances in the game server group are protected from early termination.
type GameServerGroupGameServerProtectionPolicy string

const (
	GameServerGroupGameServerProtectionPolicyNoProtection   = GameServerGroupGameServerProtectionPolicy("NO_PROTECTION")
	GameServerGroupGameServerProtectionPolicyFullProtection = GameServerGroupGameServerProtectionPolicy("FULL_PROTECTION")
)

func (GameServerGroupGameServerProtectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupGameServerProtectionPolicy)(nil)).Elem()
}

func (e GameServerGroupGameServerProtectionPolicy) ToGameServerGroupGameServerProtectionPolicyOutput() GameServerGroupGameServerProtectionPolicyOutput {
	return pulumi.ToOutput(e).(GameServerGroupGameServerProtectionPolicyOutput)
}

func (e GameServerGroupGameServerProtectionPolicy) ToGameServerGroupGameServerProtectionPolicyOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GameServerGroupGameServerProtectionPolicyOutput)
}

func (e GameServerGroupGameServerProtectionPolicy) ToGameServerGroupGameServerProtectionPolicyPtrOutput() GameServerGroupGameServerProtectionPolicyPtrOutput {
	return e.ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(context.Background())
}

func (e GameServerGroupGameServerProtectionPolicy) ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyPtrOutput {
	return GameServerGroupGameServerProtectionPolicy(e).ToGameServerGroupGameServerProtectionPolicyOutputWithContext(ctx).ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(ctx)
}

func (e GameServerGroupGameServerProtectionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupGameServerProtectionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GameServerGroupGameServerProtectionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GameServerGroupGameServerProtectionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GameServerGroupGameServerProtectionPolicyOutput struct{ *pulumi.OutputState }

func (GameServerGroupGameServerProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerGroupGameServerProtectionPolicy)(nil)).Elem()
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToGameServerGroupGameServerProtectionPolicyOutput() GameServerGroupGameServerProtectionPolicyOutput {
	return o
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToGameServerGroupGameServerProtectionPolicyOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyOutput {
	return o
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToGameServerGroupGameServerProtectionPolicyPtrOutput() GameServerGroupGameServerProtectionPolicyPtrOutput {
	return o.ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GameServerGroupGameServerProtectionPolicy) *GameServerGroupGameServerProtectionPolicy {
		return &v
	}).(GameServerGroupGameServerProtectionPolicyPtrOutput)
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupGameServerProtectionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupGameServerProtectionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GameServerGroupGameServerProtectionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GameServerGroupGameServerProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (GameServerGroupGameServerProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerGroupGameServerProtectionPolicy)(nil)).Elem()
}

func (o GameServerGroupGameServerProtectionPolicyPtrOutput) ToGameServerGroupGameServerProtectionPolicyPtrOutput() GameServerGroupGameServerProtectionPolicyPtrOutput {
	return o
}

func (o GameServerGroupGameServerProtectionPolicyPtrOutput) ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyPtrOutput {
	return o
}

func (o GameServerGroupGameServerProtectionPolicyPtrOutput) Elem() GameServerGroupGameServerProtectionPolicyOutput {
	return o.ApplyT(func(v *GameServerGroupGameServerProtectionPolicy) GameServerGroupGameServerProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret GameServerGroupGameServerProtectionPolicy
		return ret
	}).(GameServerGroupGameServerProtectionPolicyOutput)
}

func (o GameServerGroupGameServerProtectionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GameServerGroupGameServerProtectionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GameServerGroupGameServerProtectionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GameServerGroupGameServerProtectionPolicyInput is an input type that accepts GameServerGroupGameServerProtectionPolicyArgs and GameServerGroupGameServerProtectionPolicyOutput values.
// You can construct a concrete instance of `GameServerGroupGameServerProtectionPolicyInput` via:
//
//          GameServerGroupGameServerProtectionPolicyArgs{...}
type GameServerGroupGameServerProtectionPolicyInput interface {
	pulumi.Input

	ToGameServerGroupGameServerProtectionPolicyOutput() GameServerGroupGameServerProtectionPolicyOutput
	ToGameServerGroupGameServerProtectionPolicyOutputWithContext(context.Context) GameServerGroupGameServerProtectionPolicyOutput
}

var gameServerGroupGameServerProtectionPolicyPtrType = reflect.TypeOf((**GameServerGroupGameServerProtectionPolicy)(nil)).Elem()

type GameServerGroupGameServerProtectionPolicyPtrInput interface {
	pulumi.Input

	ToGameServerGroupGameServerProtectionPolicyPtrOutput() GameServerGroupGameServerProtectionPolicyPtrOutput
	ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(context.Context) GameServerGroupGameServerProtectionPolicyPtrOutput
}

type gameServerGroupGameServerProtectionPolicyPtr string

func GameServerGroupGameServerProtectionPolicyPtr(v string) GameServerGroupGameServerProtectionPolicyPtrInput {
	return (*gameServerGroupGameServerProtectionPolicyPtr)(&v)
}

func (*gameServerGroupGameServerProtectionPolicyPtr) ElementType() reflect.Type {
	return gameServerGroupGameServerProtectionPolicyPtrType
}

func (in *gameServerGroupGameServerProtectionPolicyPtr) ToGameServerGroupGameServerProtectionPolicyPtrOutput() GameServerGroupGameServerProtectionPolicyPtrOutput {
	return pulumi.ToOutput(in).(GameServerGroupGameServerProtectionPolicyPtrOutput)
}

func (in *gameServerGroupGameServerProtectionPolicyPtr) ToGameServerGroupGameServerProtectionPolicyPtrOutputWithContext(ctx context.Context) GameServerGroupGameServerProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GameServerGroupGameServerProtectionPolicyPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingStrategyTypeInput)(nil)).Elem(), AliasRoutingStrategyType("SIMPLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingStrategyTypePtrInput)(nil)).Elem(), AliasRoutingStrategyType("SIMPLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCertificateConfigurationCertificateTypeInput)(nil)).Elem(), FleetCertificateConfigurationCertificateType("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCertificateConfigurationCertificateTypePtrInput)(nil)).Elem(), FleetCertificateConfigurationCertificateType("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetIpPermissionProtocolInput)(nil)).Elem(), FleetIpPermissionProtocol("TCP"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetIpPermissionProtocolPtrInput)(nil)).Elem(), FleetIpPermissionProtocol("TCP"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetNewGameSessionProtectionPolicyInput)(nil)).Elem(), FleetNewGameSessionProtectionPolicy("FullProtection"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetNewGameSessionProtectionPolicyPtrInput)(nil)).Elem(), FleetNewGameSessionProtectionPolicy("FullProtection"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetTypeInput)(nil)).Elem(), FleetType("ON_DEMAND"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetTypePtrInput)(nil)).Elem(), FleetType("ON_DEMAND"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupBalancingStrategyInput)(nil)).Elem(), GameServerGroupBalancingStrategy("SPOT_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupBalancingStrategyPtrInput)(nil)).Elem(), GameServerGroupBalancingStrategy("SPOT_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupDeleteOptionInput)(nil)).Elem(), GameServerGroupDeleteOption("SAFE_DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupDeleteOptionPtrInput)(nil)).Elem(), GameServerGroupDeleteOption("SAFE_DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupGameServerProtectionPolicyInput)(nil)).Elem(), GameServerGroupGameServerProtectionPolicy("NO_PROTECTION"))
	pulumi.RegisterInputType(reflect.TypeOf((*GameServerGroupGameServerProtectionPolicyPtrInput)(nil)).Elem(), GameServerGroupGameServerProtectionPolicy("NO_PROTECTION"))
	pulumi.RegisterOutputType(AliasRoutingStrategyTypeOutput{})
	pulumi.RegisterOutputType(AliasRoutingStrategyTypePtrOutput{})
	pulumi.RegisterOutputType(FleetCertificateConfigurationCertificateTypeOutput{})
	pulumi.RegisterOutputType(FleetCertificateConfigurationCertificateTypePtrOutput{})
	pulumi.RegisterOutputType(FleetIpPermissionProtocolOutput{})
	pulumi.RegisterOutputType(FleetIpPermissionProtocolPtrOutput{})
	pulumi.RegisterOutputType(FleetNewGameSessionProtectionPolicyOutput{})
	pulumi.RegisterOutputType(FleetNewGameSessionProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(FleetTypeOutput{})
	pulumi.RegisterOutputType(FleetTypePtrOutput{})
	pulumi.RegisterOutputType(GameServerGroupBalancingStrategyOutput{})
	pulumi.RegisterOutputType(GameServerGroupBalancingStrategyPtrOutput{})
	pulumi.RegisterOutputType(GameServerGroupDeleteOptionOutput{})
	pulumi.RegisterOutputType(GameServerGroupDeleteOptionPtrOutput{})
	pulumi.RegisterOutputType(GameServerGroupGameServerProtectionPolicyOutput{})
	pulumi.RegisterOutputType(GameServerGroupGameServerProtectionPolicyPtrOutput{})
}
