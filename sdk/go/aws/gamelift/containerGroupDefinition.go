// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::GameLift::ContainerGroupDefinition resource creates an Amazon GameLift container group definition.
type ContainerGroupDefinition struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container group resource and uniquely identifies it across all AWS Regions.
	ContainerGroupDefinitionArn pulumi.StringOutput `pulumi:"containerGroupDefinitionArn"`
	// The scope of the container group
	ContainerGroupType ContainerGroupDefinitionContainerGroupTypePtrOutput `pulumi:"containerGroupType"`
	// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
	GameServerContainerDefinition ContainerGroupDefinitionGameServerContainerDefinitionPtrOutput `pulumi:"gameServerContainerDefinition"`
	// A descriptive label for the container group definition.
	Name pulumi.StringOutput `pulumi:"name"`
	// The operating system of the container group
	OperatingSystem ContainerGroupDefinitionOperatingSystemOutput `pulumi:"operatingSystem"`
	// A specific ContainerGroupDefinition version to be updated
	SourceVersionNumber pulumi.IntPtrOutput `pulumi:"sourceVersionNumber"`
	// A string indicating ContainerGroupDefinition status.
	Status ContainerGroupDefinitionStatusOutput `pulumi:"status"`
	// A string indicating the reason for ContainerGroupDefinition status.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
	// A collection of support container definitions that define the containers in this group.
	SupportContainerDefinitions ContainerGroupDefinitionSupportContainerDefinitionArrayOutput `pulumi:"supportContainerDefinitions"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The total memory limit of container groups following this definition in MiB
	TotalMemoryLimitMebibytes pulumi.IntOutput `pulumi:"totalMemoryLimitMebibytes"`
	// The total amount of virtual CPUs on the container group definition
	TotalVcpuLimit pulumi.Float64Output `pulumi:"totalVcpuLimit"`
	// The description of this version
	VersionDescription pulumi.StringPtrOutput `pulumi:"versionDescription"`
	// The version of this ContainerGroupDefinition
	VersionNumber pulumi.IntOutput `pulumi:"versionNumber"`
}

// NewContainerGroupDefinition registers a new resource with the given unique name, arguments, and options.
func NewContainerGroupDefinition(ctx *pulumi.Context,
	name string, args *ContainerGroupDefinitionArgs, opts ...pulumi.ResourceOption) (*ContainerGroupDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OperatingSystem == nil {
		return nil, errors.New("invalid value for required argument 'OperatingSystem'")
	}
	if args.TotalMemoryLimitMebibytes == nil {
		return nil, errors.New("invalid value for required argument 'TotalMemoryLimitMebibytes'")
	}
	if args.TotalVcpuLimit == nil {
		return nil, errors.New("invalid value for required argument 'TotalVcpuLimit'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"containerGroupType",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContainerGroupDefinition
	err := ctx.RegisterResource("aws-native:gamelift:ContainerGroupDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerGroupDefinition gets an existing ContainerGroupDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerGroupDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerGroupDefinitionState, opts ...pulumi.ResourceOption) (*ContainerGroupDefinition, error) {
	var resource ContainerGroupDefinition
	err := ctx.ReadResource("aws-native:gamelift:ContainerGroupDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerGroupDefinition resources.
type containerGroupDefinitionState struct {
}

type ContainerGroupDefinitionState struct {
}

func (ContainerGroupDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerGroupDefinitionState)(nil)).Elem()
}

type containerGroupDefinitionArgs struct {
	// The scope of the container group
	ContainerGroupType *ContainerGroupDefinitionContainerGroupType `pulumi:"containerGroupType"`
	// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
	GameServerContainerDefinition *ContainerGroupDefinitionGameServerContainerDefinition `pulumi:"gameServerContainerDefinition"`
	// A descriptive label for the container group definition.
	Name *string `pulumi:"name"`
	// The operating system of the container group
	OperatingSystem ContainerGroupDefinitionOperatingSystem `pulumi:"operatingSystem"`
	// A specific ContainerGroupDefinition version to be updated
	SourceVersionNumber *int `pulumi:"sourceVersionNumber"`
	// A collection of support container definitions that define the containers in this group.
	SupportContainerDefinitions []ContainerGroupDefinitionSupportContainerDefinition `pulumi:"supportContainerDefinitions"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The total memory limit of container groups following this definition in MiB
	TotalMemoryLimitMebibytes int `pulumi:"totalMemoryLimitMebibytes"`
	// The total amount of virtual CPUs on the container group definition
	TotalVcpuLimit float64 `pulumi:"totalVcpuLimit"`
	// The description of this version
	VersionDescription *string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a ContainerGroupDefinition resource.
type ContainerGroupDefinitionArgs struct {
	// The scope of the container group
	ContainerGroupType ContainerGroupDefinitionContainerGroupTypePtrInput
	// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
	GameServerContainerDefinition ContainerGroupDefinitionGameServerContainerDefinitionPtrInput
	// A descriptive label for the container group definition.
	Name pulumi.StringPtrInput
	// The operating system of the container group
	OperatingSystem ContainerGroupDefinitionOperatingSystemInput
	// A specific ContainerGroupDefinition version to be updated
	SourceVersionNumber pulumi.IntPtrInput
	// A collection of support container definitions that define the containers in this group.
	SupportContainerDefinitions ContainerGroupDefinitionSupportContainerDefinitionArrayInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// The total memory limit of container groups following this definition in MiB
	TotalMemoryLimitMebibytes pulumi.IntInput
	// The total amount of virtual CPUs on the container group definition
	TotalVcpuLimit pulumi.Float64Input
	// The description of this version
	VersionDescription pulumi.StringPtrInput
}

func (ContainerGroupDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerGroupDefinitionArgs)(nil)).Elem()
}

type ContainerGroupDefinitionInput interface {
	pulumi.Input

	ToContainerGroupDefinitionOutput() ContainerGroupDefinitionOutput
	ToContainerGroupDefinitionOutputWithContext(ctx context.Context) ContainerGroupDefinitionOutput
}

func (*ContainerGroupDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerGroupDefinition)(nil)).Elem()
}

func (i *ContainerGroupDefinition) ToContainerGroupDefinitionOutput() ContainerGroupDefinitionOutput {
	return i.ToContainerGroupDefinitionOutputWithContext(context.Background())
}

func (i *ContainerGroupDefinition) ToContainerGroupDefinitionOutputWithContext(ctx context.Context) ContainerGroupDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerGroupDefinitionOutput)
}

type ContainerGroupDefinitionOutput struct{ *pulumi.OutputState }

func (ContainerGroupDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerGroupDefinition)(nil)).Elem()
}

func (o ContainerGroupDefinitionOutput) ToContainerGroupDefinitionOutput() ContainerGroupDefinitionOutput {
	return o
}

func (o ContainerGroupDefinitionOutput) ToContainerGroupDefinitionOutputWithContext(ctx context.Context) ContainerGroupDefinitionOutput {
	return o
}

// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container group resource and uniquely identifies it across all AWS Regions.
func (o ContainerGroupDefinitionOutput) ContainerGroupDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.StringOutput { return v.ContainerGroupDefinitionArn }).(pulumi.StringOutput)
}

// The scope of the container group
func (o ContainerGroupDefinitionOutput) ContainerGroupType() ContainerGroupDefinitionContainerGroupTypePtrOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) ContainerGroupDefinitionContainerGroupTypePtrOutput {
		return v.ContainerGroupType
	}).(ContainerGroupDefinitionContainerGroupTypePtrOutput)
}

// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
func (o ContainerGroupDefinitionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The definition for the game server container in this group. This property is used only when the container group type is `GAME_SERVER` . This container definition specifies a container image with the game server build.
func (o ContainerGroupDefinitionOutput) GameServerContainerDefinition() ContainerGroupDefinitionGameServerContainerDefinitionPtrOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) ContainerGroupDefinitionGameServerContainerDefinitionPtrOutput {
		return v.GameServerContainerDefinition
	}).(ContainerGroupDefinitionGameServerContainerDefinitionPtrOutput)
}

// A descriptive label for the container group definition.
func (o ContainerGroupDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The operating system of the container group
func (o ContainerGroupDefinitionOutput) OperatingSystem() ContainerGroupDefinitionOperatingSystemOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) ContainerGroupDefinitionOperatingSystemOutput {
		return v.OperatingSystem
	}).(ContainerGroupDefinitionOperatingSystemOutput)
}

// A specific ContainerGroupDefinition version to be updated
func (o ContainerGroupDefinitionOutput) SourceVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.IntPtrOutput { return v.SourceVersionNumber }).(pulumi.IntPtrOutput)
}

// A string indicating ContainerGroupDefinition status.
func (o ContainerGroupDefinitionOutput) Status() ContainerGroupDefinitionStatusOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) ContainerGroupDefinitionStatusOutput { return v.Status }).(ContainerGroupDefinitionStatusOutput)
}

// A string indicating the reason for ContainerGroupDefinition status.
func (o ContainerGroupDefinitionOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

// A collection of support container definitions that define the containers in this group.
func (o ContainerGroupDefinitionOutput) SupportContainerDefinitions() ContainerGroupDefinitionSupportContainerDefinitionArrayOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) ContainerGroupDefinitionSupportContainerDefinitionArrayOutput {
		return v.SupportContainerDefinitions
	}).(ContainerGroupDefinitionSupportContainerDefinitionArrayOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ContainerGroupDefinitionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The total memory limit of container groups following this definition in MiB
func (o ContainerGroupDefinitionOutput) TotalMemoryLimitMebibytes() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.IntOutput { return v.TotalMemoryLimitMebibytes }).(pulumi.IntOutput)
}

// The total amount of virtual CPUs on the container group definition
func (o ContainerGroupDefinitionOutput) TotalVcpuLimit() pulumi.Float64Output {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.Float64Output { return v.TotalVcpuLimit }).(pulumi.Float64Output)
}

// The description of this version
func (o ContainerGroupDefinitionOutput) VersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.StringPtrOutput { return v.VersionDescription }).(pulumi.StringPtrOutput)
}

// The version of this ContainerGroupDefinition
func (o ContainerGroupDefinitionOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerGroupDefinition) pulumi.IntOutput { return v.VersionNumber }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerGroupDefinitionInput)(nil)).Elem(), &ContainerGroupDefinition{})
	pulumi.RegisterOutputType(ContainerGroupDefinitionOutput{})
}
