// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
func LookupContainerFleet(ctx *pulumi.Context, args *LookupContainerFleetArgs, opts ...pulumi.InvokeOption) (*LookupContainerFleetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerFleetResult
	err := ctx.Invoke("aws-native:gamelift:getContainerFleet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupContainerFleetArgs struct {
	// Unique fleet ID
	FleetId string `pulumi:"fleetId"`
}

type LookupContainerFleetResult struct {
	// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
	CreationTime      *string                          `pulumi:"creationTime"`
	DeploymentDetails *ContainerFleetDeploymentDetails `pulumi:"deploymentDetails"`
	// A human-readable description of a fleet.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
	FleetArn *string `pulumi:"fleetArn"`
	// Unique fleet ID
	FleetId *string `pulumi:"fleetId"`
	// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
	FleetRoleArn *string `pulumi:"fleetRoleArn"`
	// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
	GameServerContainerGroupDefinitionArn *string `pulumi:"gameServerContainerGroupDefinitionArn"`
	// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
	GameSessionCreationLimitPolicy *ContainerFleetGameSessionCreationLimitPolicy `pulumi:"gameSessionCreationLimitPolicy"`
	// The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet.
	InstanceConnectionPortRange *ContainerFleetConnectionPortRange `pulumi:"instanceConnectionPortRange"`
	// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
	InstanceInboundPermissions []ContainerFleetIpPermission `pulumi:"instanceInboundPermissions"`
	// The method that is used to collect container logs for the fleet. Amazon GameLift saves all standard output for each container in logs, including game session logs.
	//
	// - `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
	// - `S3` -- Store logs in an Amazon S3 bucket that you define.
	// - `NONE` -- Don't collect container logs.
	LogConfiguration *ContainerFleetLogConfiguration `pulumi:"logConfiguration"`
	// The maximum number of game server container groups per instance, a number between 1-5000.
	MaximumGameServerContainerGroupsPerInstance *int `pulumi:"maximumGameServerContainerGroupsPerInstance"`
	// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
	MetricGroups []string `pulumi:"metricGroups"`
	// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
	NewGameSessionProtectionPolicy *ContainerFleetNewGameSessionProtectionPolicy `pulumi:"newGameSessionProtectionPolicy"`
	// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
	PerInstanceContainerGroupDefinitionArn *string `pulumi:"perInstanceContainerGroupDefinitionArn"`
	// The current status of the container fleet.
	Status *ContainerFleetStatus `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupContainerFleetOutput(ctx *pulumi.Context, args LookupContainerFleetOutputArgs, opts ...pulumi.InvokeOption) LookupContainerFleetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerFleetResultOutput, error) {
			args := v.(LookupContainerFleetArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupContainerFleetResult
			secret, err := ctx.InvokePackageRaw("aws-native:gamelift:getContainerFleet", args, &rv, "", opts...)
			if err != nil {
				return LookupContainerFleetResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupContainerFleetResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupContainerFleetResultOutput), nil
			}
			return output, nil
		}).(LookupContainerFleetResultOutput)
}

type LookupContainerFleetOutputArgs struct {
	// Unique fleet ID
	FleetId pulumi.StringInput `pulumi:"fleetId"`
}

func (LookupContainerFleetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerFleetArgs)(nil)).Elem()
}

type LookupContainerFleetResultOutput struct{ *pulumi.OutputState }

func (LookupContainerFleetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerFleetResult)(nil)).Elem()
}

func (o LookupContainerFleetResultOutput) ToLookupContainerFleetResultOutput() LookupContainerFleetResultOutput {
	return o
}

func (o LookupContainerFleetResultOutput) ToLookupContainerFleetResultOutputWithContext(ctx context.Context) LookupContainerFleetResultOutput {
	return o
}

// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
func (o LookupContainerFleetResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

func (o LookupContainerFleetResultOutput) DeploymentDetails() ContainerFleetDeploymentDetailsPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetDeploymentDetails { return v.DeploymentDetails }).(ContainerFleetDeploymentDetailsPtrOutput)
}

// A human-readable description of a fleet.
func (o LookupContainerFleetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
func (o LookupContainerFleetResultOutput) FleetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.FleetArn }).(pulumi.StringPtrOutput)
}

// Unique fleet ID
func (o LookupContainerFleetResultOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
func (o LookupContainerFleetResultOutput) FleetRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.FleetRoleArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
func (o LookupContainerFleetResultOutput) GameServerContainerGroupDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.GameServerContainerGroupDefinitionArn }).(pulumi.StringPtrOutput)
}

// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
func (o LookupContainerFleetResultOutput) GameSessionCreationLimitPolicy() ContainerFleetGameSessionCreationLimitPolicyPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetGameSessionCreationLimitPolicy {
		return v.GameSessionCreationLimitPolicy
	}).(ContainerFleetGameSessionCreationLimitPolicyPtrOutput)
}

// The set of port numbers to open on each instance in a container fleet. Connection ports are used by inbound traffic to connect with processes that are running in containers on the fleet.
func (o LookupContainerFleetResultOutput) InstanceConnectionPortRange() ContainerFleetConnectionPortRangePtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetConnectionPortRange {
		return v.InstanceConnectionPortRange
	}).(ContainerFleetConnectionPortRangePtrOutput)
}

// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
func (o LookupContainerFleetResultOutput) InstanceInboundPermissions() ContainerFleetIpPermissionArrayOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) []ContainerFleetIpPermission { return v.InstanceInboundPermissions }).(ContainerFleetIpPermissionArrayOutput)
}

// The method that is used to collect container logs for the fleet. Amazon GameLift saves all standard output for each container in logs, including game session logs.
//
// - `CLOUDWATCH` -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.
// - `S3` -- Store logs in an Amazon S3 bucket that you define.
// - `NONE` -- Don't collect container logs.
func (o LookupContainerFleetResultOutput) LogConfiguration() ContainerFleetLogConfigurationPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetLogConfiguration { return v.LogConfiguration }).(ContainerFleetLogConfigurationPtrOutput)
}

// The maximum number of game server container groups per instance, a number between 1-5000.
func (o LookupContainerFleetResultOutput) MaximumGameServerContainerGroupsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *int { return v.MaximumGameServerContainerGroupsPerInstance }).(pulumi.IntPtrOutput)
}

// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
func (o LookupContainerFleetResultOutput) MetricGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) []string { return v.MetricGroups }).(pulumi.StringArrayOutput)
}

// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
func (o LookupContainerFleetResultOutput) NewGameSessionProtectionPolicy() ContainerFleetNewGameSessionProtectionPolicyPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetNewGameSessionProtectionPolicy {
		return v.NewGameSessionProtectionPolicy
	}).(ContainerFleetNewGameSessionProtectionPolicyPtrOutput)
}

// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
func (o LookupContainerFleetResultOutput) PerInstanceContainerGroupDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *string { return v.PerInstanceContainerGroupDefinitionArn }).(pulumi.StringPtrOutput)
}

// The current status of the container fleet.
func (o LookupContainerFleetResultOutput) Status() ContainerFleetStatusPtrOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) *ContainerFleetStatus { return v.Status }).(ContainerFleetStatusPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupContainerFleetResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupContainerFleetResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerFleetResultOutput{})
}
