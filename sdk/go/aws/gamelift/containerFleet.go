// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::GameLift::ContainerFleet resource creates an Amazon GameLift (GameLift) container fleet to host game servers.
type ContainerFleet struct {
	pulumi.CustomResourceState

	// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
	BillingType ContainerFleetBillingTypePtrOutput `pulumi:"billingType"`
	// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
	CreationTime            pulumi.StringOutput                            `pulumi:"creationTime"`
	DeploymentConfiguration ContainerFleetDeploymentConfigurationPtrOutput `pulumi:"deploymentConfiguration"`
	DeploymentDetails       ContainerFleetDeploymentDetailsOutput          `pulumi:"deploymentDetails"`
	// A human-readable description of a fleet.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
	FleetArn pulumi.StringOutput `pulumi:"fleetArn"`
	// Unique fleet ID
	FleetId pulumi.StringOutput `pulumi:"fleetId"`
	// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
	FleetRoleArn pulumi.StringOutput `pulumi:"fleetRoleArn"`
	// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
	GameServerContainerGroupDefinitionArn pulumi.StringOutput `pulumi:"gameServerContainerGroupDefinitionArn"`
	// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
	GameServerContainerGroupDefinitionName pulumi.StringPtrOutput `pulumi:"gameServerContainerGroupDefinitionName"`
	// The number of desired game server container groups per instance, a number between 1-5000.
	GameServerContainerGroupsPerInstance pulumi.IntPtrOutput `pulumi:"gameServerContainerGroupsPerInstance"`
	// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
	GameSessionCreationLimitPolicy ContainerFleetGameSessionCreationLimitPolicyPtrOutput `pulumi:"gameSessionCreationLimitPolicy"`
	InstanceConnectionPortRange    ContainerFleetConnectionPortRangePtrOutput            `pulumi:"instanceConnectionPortRange"`
	// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
	InstanceInboundPermissions ContainerFleetIpPermissionArrayOutput `pulumi:"instanceInboundPermissions"`
	// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
	InstanceType     pulumi.StringPtrOutput                         `pulumi:"instanceType"`
	Locations        ContainerFleetLocationConfigurationArrayOutput `pulumi:"locations"`
	LogConfiguration ContainerFleetLogConfigurationPtrOutput        `pulumi:"logConfiguration"`
	// The maximum number of game server container groups per instance, a number between 1-5000.
	MaximumGameServerContainerGroupsPerInstance pulumi.IntOutput `pulumi:"maximumGameServerContainerGroupsPerInstance"`
	// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
	MetricGroups pulumi.StringArrayOutput `pulumi:"metricGroups"`
	// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
	NewGameSessionProtectionPolicy ContainerFleetNewGameSessionProtectionPolicyPtrOutput `pulumi:"newGameSessionProtectionPolicy"`
	// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
	PerInstanceContainerGroupDefinitionArn pulumi.StringOutput `pulumi:"perInstanceContainerGroupDefinitionArn"`
	// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
	PerInstanceContainerGroupDefinitionName pulumi.StringPtrOutput `pulumi:"perInstanceContainerGroupDefinitionName"`
	// A list of rules that control how a fleet is scaled.
	ScalingPolicies ContainerFleetScalingPolicyArrayOutput `pulumi:"scalingPolicies"`
	// The current status of the container fleet.
	Status ContainerFleetStatusOutput `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewContainerFleet registers a new resource with the given unique name, arguments, and options.
func NewContainerFleet(ctx *pulumi.Context,
	name string, args *ContainerFleetArgs, opts ...pulumi.ResourceOption) (*ContainerFleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FleetRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'FleetRoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"billingType",
		"instanceType",
		"locations[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContainerFleet
	err := ctx.RegisterResource("aws-native:gamelift:ContainerFleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerFleet gets an existing ContainerFleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerFleetState, opts ...pulumi.ResourceOption) (*ContainerFleet, error) {
	var resource ContainerFleet
	err := ctx.ReadResource("aws-native:gamelift:ContainerFleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerFleet resources.
type containerFleetState struct {
}

type ContainerFleetState struct {
}

func (ContainerFleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerFleetState)(nil)).Elem()
}

type containerFleetArgs struct {
	// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
	BillingType             *ContainerFleetBillingType             `pulumi:"billingType"`
	DeploymentConfiguration *ContainerFleetDeploymentConfiguration `pulumi:"deploymentConfiguration"`
	// A human-readable description of a fleet.
	Description *string `pulumi:"description"`
	// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
	FleetRoleArn string `pulumi:"fleetRoleArn"`
	// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
	GameServerContainerGroupDefinitionName *string `pulumi:"gameServerContainerGroupDefinitionName"`
	// The number of desired game server container groups per instance, a number between 1-5000.
	GameServerContainerGroupsPerInstance *int `pulumi:"gameServerContainerGroupsPerInstance"`
	// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
	GameSessionCreationLimitPolicy *ContainerFleetGameSessionCreationLimitPolicy `pulumi:"gameSessionCreationLimitPolicy"`
	InstanceConnectionPortRange    *ContainerFleetConnectionPortRange            `pulumi:"instanceConnectionPortRange"`
	// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
	InstanceInboundPermissions []ContainerFleetIpPermission `pulumi:"instanceInboundPermissions"`
	// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
	InstanceType     *string                               `pulumi:"instanceType"`
	Locations        []ContainerFleetLocationConfiguration `pulumi:"locations"`
	LogConfiguration *ContainerFleetLogConfiguration       `pulumi:"logConfiguration"`
	// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
	MetricGroups []string `pulumi:"metricGroups"`
	// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
	NewGameSessionProtectionPolicy *ContainerFleetNewGameSessionProtectionPolicy `pulumi:"newGameSessionProtectionPolicy"`
	// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
	PerInstanceContainerGroupDefinitionName *string `pulumi:"perInstanceContainerGroupDefinitionName"`
	// A list of rules that control how a fleet is scaled.
	ScalingPolicies []ContainerFleetScalingPolicy `pulumi:"scalingPolicies"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ContainerFleet resource.
type ContainerFleetArgs struct {
	// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
	BillingType             ContainerFleetBillingTypePtrInput
	DeploymentConfiguration ContainerFleetDeploymentConfigurationPtrInput
	// A human-readable description of a fleet.
	Description pulumi.StringPtrInput
	// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
	FleetRoleArn pulumi.StringInput
	// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
	GameServerContainerGroupDefinitionName pulumi.StringPtrInput
	// The number of desired game server container groups per instance, a number between 1-5000.
	GameServerContainerGroupsPerInstance pulumi.IntPtrInput
	// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
	GameSessionCreationLimitPolicy ContainerFleetGameSessionCreationLimitPolicyPtrInput
	InstanceConnectionPortRange    ContainerFleetConnectionPortRangePtrInput
	// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
	InstanceInboundPermissions ContainerFleetIpPermissionArrayInput
	// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
	InstanceType     pulumi.StringPtrInput
	Locations        ContainerFleetLocationConfigurationArrayInput
	LogConfiguration ContainerFleetLogConfigurationPtrInput
	// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
	MetricGroups pulumi.StringArrayInput
	// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
	NewGameSessionProtectionPolicy ContainerFleetNewGameSessionProtectionPolicyPtrInput
	// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
	PerInstanceContainerGroupDefinitionName pulumi.StringPtrInput
	// A list of rules that control how a fleet is scaled.
	ScalingPolicies ContainerFleetScalingPolicyArrayInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (ContainerFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerFleetArgs)(nil)).Elem()
}

type ContainerFleetInput interface {
	pulumi.Input

	ToContainerFleetOutput() ContainerFleetOutput
	ToContainerFleetOutputWithContext(ctx context.Context) ContainerFleetOutput
}

func (*ContainerFleet) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerFleet)(nil)).Elem()
}

func (i *ContainerFleet) ToContainerFleetOutput() ContainerFleetOutput {
	return i.ToContainerFleetOutputWithContext(context.Background())
}

func (i *ContainerFleet) ToContainerFleetOutputWithContext(ctx context.Context) ContainerFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerFleetOutput)
}

type ContainerFleetOutput struct{ *pulumi.OutputState }

func (ContainerFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerFleet)(nil)).Elem()
}

func (o ContainerFleetOutput) ToContainerFleetOutput() ContainerFleetOutput {
	return o
}

func (o ContainerFleetOutput) ToContainerFleetOutputWithContext(ctx context.Context) ContainerFleetOutput {
	return o
}

// Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
func (o ContainerFleetOutput) BillingType() ContainerFleetBillingTypePtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetBillingTypePtrOutput { return v.BillingType }).(ContainerFleetBillingTypePtrOutput)
}

// A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
func (o ContainerFleetOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

func (o ContainerFleetOutput) DeploymentConfiguration() ContainerFleetDeploymentConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetDeploymentConfigurationPtrOutput {
		return v.DeploymentConfiguration
	}).(ContainerFleetDeploymentConfigurationPtrOutput)
}

func (o ContainerFleetOutput) DeploymentDetails() ContainerFleetDeploymentDetailsOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetDeploymentDetailsOutput { return v.DeploymentDetails }).(ContainerFleetDeploymentDetailsOutput)
}

// A human-readable description of a fleet.
func (o ContainerFleetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift container fleet resource and uniquely identifies it across all AWS Regions.
func (o ContainerFleetOutput) FleetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.FleetArn }).(pulumi.StringOutput)
}

// Unique fleet ID
func (o ContainerFleetOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.FleetId }).(pulumi.StringOutput)
}

// A unique identifier for an AWS IAM role that manages access to your AWS services. Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
func (o ContainerFleetOutput) FleetRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.FleetRoleArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the game server container group definition. This field will be empty if GameServerContainerGroupDefinitionName is not specified.
func (o ContainerFleetOutput) GameServerContainerGroupDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.GameServerContainerGroupDefinitionArn }).(pulumi.StringOutput)
}

// The name of the container group definition that will be created per game server. You must specify GAME_SERVER container group. You have the option to also specify one PER_INSTANCE container group.
func (o ContainerFleetOutput) GameServerContainerGroupDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringPtrOutput { return v.GameServerContainerGroupDefinitionName }).(pulumi.StringPtrOutput)
}

// The number of desired game server container groups per instance, a number between 1-5000.
func (o ContainerFleetOutput) GameServerContainerGroupsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.IntPtrOutput { return v.GameServerContainerGroupsPerInstance }).(pulumi.IntPtrOutput)
}

// A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
func (o ContainerFleetOutput) GameSessionCreationLimitPolicy() ContainerFleetGameSessionCreationLimitPolicyPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetGameSessionCreationLimitPolicyPtrOutput {
		return v.GameSessionCreationLimitPolicy
	}).(ContainerFleetGameSessionCreationLimitPolicyPtrOutput)
}

func (o ContainerFleetOutput) InstanceConnectionPortRange() ContainerFleetConnectionPortRangePtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetConnectionPortRangePtrOutput {
		return v.InstanceConnectionPortRange
	}).(ContainerFleetConnectionPortRangePtrOutput)
}

// A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
func (o ContainerFleetOutput) InstanceInboundPermissions() ContainerFleetIpPermissionArrayOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetIpPermissionArrayOutput { return v.InstanceInboundPermissions }).(ContainerFleetIpPermissionArrayOutput)
}

// The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
func (o ContainerFleetOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o ContainerFleetOutput) Locations() ContainerFleetLocationConfigurationArrayOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetLocationConfigurationArrayOutput { return v.Locations }).(ContainerFleetLocationConfigurationArrayOutput)
}

func (o ContainerFleetOutput) LogConfiguration() ContainerFleetLogConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetLogConfigurationPtrOutput { return v.LogConfiguration }).(ContainerFleetLogConfigurationPtrOutput)
}

// The maximum number of game server container groups per instance, a number between 1-5000.
func (o ContainerFleetOutput) MaximumGameServerContainerGroupsPerInstance() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.IntOutput { return v.MaximumGameServerContainerGroupsPerInstance }).(pulumi.IntOutput)
}

// The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
func (o ContainerFleetOutput) MetricGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringArrayOutput { return v.MetricGroups }).(pulumi.StringArrayOutput)
}

// A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
func (o ContainerFleetOutput) NewGameSessionProtectionPolicy() ContainerFleetNewGameSessionProtectionPolicyPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetNewGameSessionProtectionPolicyPtrOutput {
		return v.NewGameSessionProtectionPolicy
	}).(ContainerFleetNewGameSessionProtectionPolicyPtrOutput)
}

// The Amazon Resource Name (ARN) of the per instance container group definition. This field will be empty if PerInstanceContainerGroupDefinitionName is not specified.
func (o ContainerFleetOutput) PerInstanceContainerGroupDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringOutput { return v.PerInstanceContainerGroupDefinitionArn }).(pulumi.StringOutput)
}

// The name of the container group definition that will be created per instance. This field is optional if you specify GameServerContainerGroupDefinitionName.
func (o ContainerFleetOutput) PerInstanceContainerGroupDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerFleet) pulumi.StringPtrOutput { return v.PerInstanceContainerGroupDefinitionName }).(pulumi.StringPtrOutput)
}

// A list of rules that control how a fleet is scaled.
func (o ContainerFleetOutput) ScalingPolicies() ContainerFleetScalingPolicyArrayOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetScalingPolicyArrayOutput { return v.ScalingPolicies }).(ContainerFleetScalingPolicyArrayOutput)
}

// The current status of the container fleet.
func (o ContainerFleetOutput) Status() ContainerFleetStatusOutput {
	return o.ApplyT(func(v *ContainerFleet) ContainerFleetStatusOutput { return v.Status }).(ContainerFleetStatusOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ContainerFleetOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ContainerFleet) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerFleetInput)(nil)).Elem(), &ContainerFleet{})
	pulumi.RegisterOutputType(ContainerFleetOutput{})
}
