// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GameLift::Build
func LookupBuild(ctx *pulumi.Context, args *LookupBuildArgs, opts ...pulumi.InvokeOption) (*LookupBuildResult, error) {
	var rv LookupBuildResult
	err := ctx.Invoke("aws-native:gamelift:getBuild", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBuildArgs struct {
	Id string `pulumi:"id"`
}

type LookupBuildResult struct {
	Id      *string `pulumi:"id"`
	Name    *string `pulumi:"name"`
	Version *string `pulumi:"version"`
}

func LookupBuildOutput(ctx *pulumi.Context, args LookupBuildOutputArgs, opts ...pulumi.InvokeOption) LookupBuildResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBuildResult, error) {
			args := v.(LookupBuildArgs)
			r, err := LookupBuild(ctx, &args, opts...)
			var s LookupBuildResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBuildResultOutput)
}

type LookupBuildOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupBuildOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildArgs)(nil)).Elem()
}

type LookupBuildResultOutput struct{ *pulumi.OutputState }

func (LookupBuildResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildResult)(nil)).Elem()
}

func (o LookupBuildResultOutput) ToLookupBuildResultOutput() LookupBuildResultOutput {
	return o
}

func (o LookupBuildResultOutput) ToLookupBuildResultOutputWithContext(ctx context.Context) LookupBuildResultOutput {
	return o
}

func (o LookupBuildResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupBuildResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupBuildResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBuildResultOutput{})
}
