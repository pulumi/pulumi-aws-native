// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GameLift::Build
func LookupBuild(ctx *pulumi.Context, args *LookupBuildArgs, opts ...pulumi.InvokeOption) (*LookupBuildResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBuildResult
	err := ctx.Invoke("aws-native:gamelift:getBuild", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBuildArgs struct {
	// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
	BuildId string `pulumi:"buildId"`
}

type LookupBuildResult struct {
	// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift build resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift build ARN, the resource ID matches the BuildId value.
	BuildArn *string `pulumi:"buildArn"`
	// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
	BuildId *string `pulumi:"buildId"`
	// A descriptive label that is associated with a build. Build names do not need to be unique.
	Name *string `pulumi:"name"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// Version information that is associated with this build. Version strings do not need to be unique.
	Version *string `pulumi:"version"`
}

func LookupBuildOutput(ctx *pulumi.Context, args LookupBuildOutputArgs, opts ...pulumi.InvokeOption) LookupBuildResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBuildResultOutput, error) {
			args := v.(LookupBuildArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:gamelift:getBuild", args, LookupBuildResultOutput{}, options).(LookupBuildResultOutput), nil
		}).(LookupBuildResultOutput)
}

type LookupBuildOutputArgs struct {
	// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
	BuildId pulumi.StringInput `pulumi:"buildId"`
}

func (LookupBuildOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildArgs)(nil)).Elem()
}

type LookupBuildResultOutput struct{ *pulumi.OutputState }

func (LookupBuildResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildResult)(nil)).Elem()
}

func (o LookupBuildResultOutput) ToLookupBuildResultOutput() LookupBuildResultOutput {
	return o
}

func (o LookupBuildResultOutput) ToLookupBuildResultOutputWithContext(ctx context.Context) LookupBuildResultOutput {
	return o
}

// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift build resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift build ARN, the resource ID matches the BuildId value.
func (o LookupBuildResultOutput) BuildArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.BuildArn }).(pulumi.StringPtrOutput)
}

// A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
func (o LookupBuildResultOutput) BuildId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.BuildId }).(pulumi.StringPtrOutput)
}

// A descriptive label that is associated with a build. Build names do not need to be unique.
func (o LookupBuildResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupBuildResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupBuildResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Version information that is associated with this build. Version strings do not need to be unique.
func (o LookupBuildResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBuildResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBuildResultOutput{})
}
