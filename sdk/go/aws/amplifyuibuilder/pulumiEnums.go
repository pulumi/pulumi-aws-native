// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amplifyuibuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FormActionType string

const (
	FormActionTypeCreate = FormActionType("create")
	FormActionTypeUpdate = FormActionType("update")
)

func (FormActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*FormActionType)(nil)).Elem()
}

func (e FormActionType) ToFormActionTypeOutput() FormActionTypeOutput {
	return pulumi.ToOutput(e).(FormActionTypeOutput)
}

func (e FormActionType) ToFormActionTypeOutputWithContext(ctx context.Context) FormActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FormActionTypeOutput)
}

func (e FormActionType) ToFormActionTypePtrOutput() FormActionTypePtrOutput {
	return e.ToFormActionTypePtrOutputWithContext(context.Background())
}

func (e FormActionType) ToFormActionTypePtrOutputWithContext(ctx context.Context) FormActionTypePtrOutput {
	return FormActionType(e).ToFormActionTypeOutputWithContext(ctx).ToFormActionTypePtrOutputWithContext(ctx)
}

func (e FormActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FormActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FormActionTypeOutput struct{ *pulumi.OutputState }

func (FormActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormActionType)(nil)).Elem()
}

func (o FormActionTypeOutput) ToFormActionTypeOutput() FormActionTypeOutput {
	return o
}

func (o FormActionTypeOutput) ToFormActionTypeOutputWithContext(ctx context.Context) FormActionTypeOutput {
	return o
}

func (o FormActionTypeOutput) ToFormActionTypePtrOutput() FormActionTypePtrOutput {
	return o.ToFormActionTypePtrOutputWithContext(context.Background())
}

func (o FormActionTypeOutput) ToFormActionTypePtrOutputWithContext(ctx context.Context) FormActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FormActionType) *FormActionType {
		return &v
	}).(FormActionTypePtrOutput)
}

func (o FormActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FormActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FormActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FormActionTypePtrOutput struct{ *pulumi.OutputState }

func (FormActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormActionType)(nil)).Elem()
}

func (o FormActionTypePtrOutput) ToFormActionTypePtrOutput() FormActionTypePtrOutput {
	return o
}

func (o FormActionTypePtrOutput) ToFormActionTypePtrOutputWithContext(ctx context.Context) FormActionTypePtrOutput {
	return o
}

func (o FormActionTypePtrOutput) Elem() FormActionTypeOutput {
	return o.ApplyT(func(v *FormActionType) FormActionType {
		if v != nil {
			return *v
		}
		var ret FormActionType
		return ret
	}).(FormActionTypeOutput)
}

func (o FormActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FormActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FormActionTypeInput is an input type that accepts FormActionTypeArgs and FormActionTypeOutput values.
// You can construct a concrete instance of `FormActionTypeInput` via:
//
//	FormActionTypeArgs{...}
type FormActionTypeInput interface {
	pulumi.Input

	ToFormActionTypeOutput() FormActionTypeOutput
	ToFormActionTypeOutputWithContext(context.Context) FormActionTypeOutput
}

var formActionTypePtrType = reflect.TypeOf((**FormActionType)(nil)).Elem()

type FormActionTypePtrInput interface {
	pulumi.Input

	ToFormActionTypePtrOutput() FormActionTypePtrOutput
	ToFormActionTypePtrOutputWithContext(context.Context) FormActionTypePtrOutput
}

type formActionTypePtr string

func FormActionTypePtr(v string) FormActionTypePtrInput {
	return (*formActionTypePtr)(&v)
}

func (*formActionTypePtr) ElementType() reflect.Type {
	return formActionTypePtrType
}

func (in *formActionTypePtr) ToFormActionTypePtrOutput() FormActionTypePtrOutput {
	return pulumi.ToOutput(in).(FormActionTypePtrOutput)
}

func (in *formActionTypePtr) ToFormActionTypePtrOutputWithContext(ctx context.Context) FormActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FormActionTypePtrOutput)
}

type FormButtonsPosition string

const (
	FormButtonsPositionTop          = FormButtonsPosition("top")
	FormButtonsPositionBottom       = FormButtonsPosition("bottom")
	FormButtonsPositionTopAndBottom = FormButtonsPosition("top_and_bottom")
)

func (FormButtonsPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*FormButtonsPosition)(nil)).Elem()
}

func (e FormButtonsPosition) ToFormButtonsPositionOutput() FormButtonsPositionOutput {
	return pulumi.ToOutput(e).(FormButtonsPositionOutput)
}

func (e FormButtonsPosition) ToFormButtonsPositionOutputWithContext(ctx context.Context) FormButtonsPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FormButtonsPositionOutput)
}

func (e FormButtonsPosition) ToFormButtonsPositionPtrOutput() FormButtonsPositionPtrOutput {
	return e.ToFormButtonsPositionPtrOutputWithContext(context.Background())
}

func (e FormButtonsPosition) ToFormButtonsPositionPtrOutputWithContext(ctx context.Context) FormButtonsPositionPtrOutput {
	return FormButtonsPosition(e).ToFormButtonsPositionOutputWithContext(ctx).ToFormButtonsPositionPtrOutputWithContext(ctx)
}

func (e FormButtonsPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormButtonsPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormButtonsPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FormButtonsPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FormButtonsPositionOutput struct{ *pulumi.OutputState }

func (FormButtonsPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormButtonsPosition)(nil)).Elem()
}

func (o FormButtonsPositionOutput) ToFormButtonsPositionOutput() FormButtonsPositionOutput {
	return o
}

func (o FormButtonsPositionOutput) ToFormButtonsPositionOutputWithContext(ctx context.Context) FormButtonsPositionOutput {
	return o
}

func (o FormButtonsPositionOutput) ToFormButtonsPositionPtrOutput() FormButtonsPositionPtrOutput {
	return o.ToFormButtonsPositionPtrOutputWithContext(context.Background())
}

func (o FormButtonsPositionOutput) ToFormButtonsPositionPtrOutputWithContext(ctx context.Context) FormButtonsPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FormButtonsPosition) *FormButtonsPosition {
		return &v
	}).(FormButtonsPositionPtrOutput)
}

func (o FormButtonsPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FormButtonsPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormButtonsPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FormButtonsPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormButtonsPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormButtonsPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FormButtonsPositionPtrOutput struct{ *pulumi.OutputState }

func (FormButtonsPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormButtonsPosition)(nil)).Elem()
}

func (o FormButtonsPositionPtrOutput) ToFormButtonsPositionPtrOutput() FormButtonsPositionPtrOutput {
	return o
}

func (o FormButtonsPositionPtrOutput) ToFormButtonsPositionPtrOutputWithContext(ctx context.Context) FormButtonsPositionPtrOutput {
	return o
}

func (o FormButtonsPositionPtrOutput) Elem() FormButtonsPositionOutput {
	return o.ApplyT(func(v *FormButtonsPosition) FormButtonsPosition {
		if v != nil {
			return *v
		}
		var ret FormButtonsPosition
		return ret
	}).(FormButtonsPositionOutput)
}

func (o FormButtonsPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormButtonsPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FormButtonsPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FormButtonsPositionInput is an input type that accepts FormButtonsPositionArgs and FormButtonsPositionOutput values.
// You can construct a concrete instance of `FormButtonsPositionInput` via:
//
//	FormButtonsPositionArgs{...}
type FormButtonsPositionInput interface {
	pulumi.Input

	ToFormButtonsPositionOutput() FormButtonsPositionOutput
	ToFormButtonsPositionOutputWithContext(context.Context) FormButtonsPositionOutput
}

var formButtonsPositionPtrType = reflect.TypeOf((**FormButtonsPosition)(nil)).Elem()

type FormButtonsPositionPtrInput interface {
	pulumi.Input

	ToFormButtonsPositionPtrOutput() FormButtonsPositionPtrOutput
	ToFormButtonsPositionPtrOutputWithContext(context.Context) FormButtonsPositionPtrOutput
}

type formButtonsPositionPtr string

func FormButtonsPositionPtr(v string) FormButtonsPositionPtrInput {
	return (*formButtonsPositionPtr)(&v)
}

func (*formButtonsPositionPtr) ElementType() reflect.Type {
	return formButtonsPositionPtrType
}

func (in *formButtonsPositionPtr) ToFormButtonsPositionPtrOutput() FormButtonsPositionPtrOutput {
	return pulumi.ToOutput(in).(FormButtonsPositionPtrOutput)
}

func (in *formButtonsPositionPtr) ToFormButtonsPositionPtrOutputWithContext(ctx context.Context) FormButtonsPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FormButtonsPositionPtrOutput)
}

type FormDataSourceType string

const (
	FormDataSourceTypeDataStore = FormDataSourceType("DataStore")
	FormDataSourceTypeCustom    = FormDataSourceType("Custom")
)

func (FormDataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*FormDataSourceType)(nil)).Elem()
}

func (e FormDataSourceType) ToFormDataSourceTypeOutput() FormDataSourceTypeOutput {
	return pulumi.ToOutput(e).(FormDataSourceTypeOutput)
}

func (e FormDataSourceType) ToFormDataSourceTypeOutputWithContext(ctx context.Context) FormDataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FormDataSourceTypeOutput)
}

func (e FormDataSourceType) ToFormDataSourceTypePtrOutput() FormDataSourceTypePtrOutput {
	return e.ToFormDataSourceTypePtrOutputWithContext(context.Background())
}

func (e FormDataSourceType) ToFormDataSourceTypePtrOutputWithContext(ctx context.Context) FormDataSourceTypePtrOutput {
	return FormDataSourceType(e).ToFormDataSourceTypeOutputWithContext(ctx).ToFormDataSourceTypePtrOutputWithContext(ctx)
}

func (e FormDataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormDataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FormDataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FormDataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FormDataSourceTypeOutput struct{ *pulumi.OutputState }

func (FormDataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FormDataSourceType)(nil)).Elem()
}

func (o FormDataSourceTypeOutput) ToFormDataSourceTypeOutput() FormDataSourceTypeOutput {
	return o
}

func (o FormDataSourceTypeOutput) ToFormDataSourceTypeOutputWithContext(ctx context.Context) FormDataSourceTypeOutput {
	return o
}

func (o FormDataSourceTypeOutput) ToFormDataSourceTypePtrOutput() FormDataSourceTypePtrOutput {
	return o.ToFormDataSourceTypePtrOutputWithContext(context.Background())
}

func (o FormDataSourceTypeOutput) ToFormDataSourceTypePtrOutputWithContext(ctx context.Context) FormDataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FormDataSourceType) *FormDataSourceType {
		return &v
	}).(FormDataSourceTypePtrOutput)
}

func (o FormDataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FormDataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormDataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FormDataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormDataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FormDataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FormDataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (FormDataSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FormDataSourceType)(nil)).Elem()
}

func (o FormDataSourceTypePtrOutput) ToFormDataSourceTypePtrOutput() FormDataSourceTypePtrOutput {
	return o
}

func (o FormDataSourceTypePtrOutput) ToFormDataSourceTypePtrOutputWithContext(ctx context.Context) FormDataSourceTypePtrOutput {
	return o
}

func (o FormDataSourceTypePtrOutput) Elem() FormDataSourceTypeOutput {
	return o.ApplyT(func(v *FormDataSourceType) FormDataSourceType {
		if v != nil {
			return *v
		}
		var ret FormDataSourceType
		return ret
	}).(FormDataSourceTypeOutput)
}

func (o FormDataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FormDataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FormDataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FormDataSourceTypeInput is an input type that accepts FormDataSourceTypeArgs and FormDataSourceTypeOutput values.
// You can construct a concrete instance of `FormDataSourceTypeInput` via:
//
//	FormDataSourceTypeArgs{...}
type FormDataSourceTypeInput interface {
	pulumi.Input

	ToFormDataSourceTypeOutput() FormDataSourceTypeOutput
	ToFormDataSourceTypeOutputWithContext(context.Context) FormDataSourceTypeOutput
}

var formDataSourceTypePtrType = reflect.TypeOf((**FormDataSourceType)(nil)).Elem()

type FormDataSourceTypePtrInput interface {
	pulumi.Input

	ToFormDataSourceTypePtrOutput() FormDataSourceTypePtrOutput
	ToFormDataSourceTypePtrOutputWithContext(context.Context) FormDataSourceTypePtrOutput
}

type formDataSourceTypePtr string

func FormDataSourceTypePtr(v string) FormDataSourceTypePtrInput {
	return (*formDataSourceTypePtr)(&v)
}

func (*formDataSourceTypePtr) ElementType() reflect.Type {
	return formDataSourceTypePtrType
}

func (in *formDataSourceTypePtr) ToFormDataSourceTypePtrOutput() FormDataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(FormDataSourceTypePtrOutput)
}

func (in *formDataSourceTypePtr) ToFormDataSourceTypePtrOutputWithContext(ctx context.Context) FormDataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FormDataSourceTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FormActionTypeInput)(nil)).Elem(), FormActionType("create"))
	pulumi.RegisterInputType(reflect.TypeOf((*FormActionTypePtrInput)(nil)).Elem(), FormActionType("create"))
	pulumi.RegisterInputType(reflect.TypeOf((*FormButtonsPositionInput)(nil)).Elem(), FormButtonsPosition("top"))
	pulumi.RegisterInputType(reflect.TypeOf((*FormButtonsPositionPtrInput)(nil)).Elem(), FormButtonsPosition("top"))
	pulumi.RegisterInputType(reflect.TypeOf((*FormDataSourceTypeInput)(nil)).Elem(), FormDataSourceType("DataStore"))
	pulumi.RegisterInputType(reflect.TypeOf((*FormDataSourceTypePtrInput)(nil)).Elem(), FormDataSourceType("DataStore"))
	pulumi.RegisterOutputType(FormActionTypeOutput{})
	pulumi.RegisterOutputType(FormActionTypePtrOutput{})
	pulumi.RegisterOutputType(FormButtonsPositionOutput{})
	pulumi.RegisterOutputType(FormButtonsPositionPtrOutput{})
	pulumi.RegisterOutputType(FormDataSourceTypeOutput{})
	pulumi.RegisterOutputType(FormDataSourceTypePtrOutput{})
}
