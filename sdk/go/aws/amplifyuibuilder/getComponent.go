// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amplifyuibuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::AmplifyUIBuilder::Component Resource Type
func LookupComponent(ctx *pulumi.Context, args *LookupComponentArgs, opts ...pulumi.InvokeOption) (*LookupComponentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupComponentResult
	err := ctx.Invoke("aws-native:amplifyuibuilder:getComponent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupComponentArgs struct {
	AppId           string `pulumi:"appId"`
	EnvironmentName string `pulumi:"environmentName"`
	Id              string `pulumi:"id"`
}

type LookupComponentResult struct {
	BindingProperties    map[string]ComponentBindingPropertiesValue `pulumi:"bindingProperties"`
	Children             []ComponentChild                           `pulumi:"children"`
	CollectionProperties map[string]ComponentDataConfiguration      `pulumi:"collectionProperties"`
	ComponentType        *string                                    `pulumi:"componentType"`
	CreatedAt            *string                                    `pulumi:"createdAt"`
	Events               map[string]ComponentEvent                  `pulumi:"events"`
	Id                   *string                                    `pulumi:"id"`
	ModifiedAt           *string                                    `pulumi:"modifiedAt"`
	Name                 *string                                    `pulumi:"name"`
	Overrides            map[string]interface{}                     `pulumi:"overrides"`
	Properties           map[string]ComponentProperty               `pulumi:"properties"`
	SchemaVersion        *string                                    `pulumi:"schemaVersion"`
	SourceId             *string                                    `pulumi:"sourceId"`
	Tags                 map[string]string                          `pulumi:"tags"`
	Variants             []ComponentVariant                         `pulumi:"variants"`
}

func LookupComponentOutput(ctx *pulumi.Context, args LookupComponentOutputArgs, opts ...pulumi.InvokeOption) LookupComponentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupComponentResult, error) {
			args := v.(LookupComponentArgs)
			r, err := LookupComponent(ctx, &args, opts...)
			var s LookupComponentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupComponentResultOutput)
}

type LookupComponentOutputArgs struct {
	AppId           pulumi.StringInput `pulumi:"appId"`
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	Id              pulumi.StringInput `pulumi:"id"`
}

func (LookupComponentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComponentArgs)(nil)).Elem()
}

type LookupComponentResultOutput struct{ *pulumi.OutputState }

func (LookupComponentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComponentResult)(nil)).Elem()
}

func (o LookupComponentResultOutput) ToLookupComponentResultOutput() LookupComponentResultOutput {
	return o
}

func (o LookupComponentResultOutput) ToLookupComponentResultOutputWithContext(ctx context.Context) LookupComponentResultOutput {
	return o
}

func (o LookupComponentResultOutput) BindingProperties() ComponentBindingPropertiesValueMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]ComponentBindingPropertiesValue { return v.BindingProperties }).(ComponentBindingPropertiesValueMapOutput)
}

func (o LookupComponentResultOutput) Children() ComponentChildArrayOutput {
	return o.ApplyT(func(v LookupComponentResult) []ComponentChild { return v.Children }).(ComponentChildArrayOutput)
}

func (o LookupComponentResultOutput) CollectionProperties() ComponentDataConfigurationMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]ComponentDataConfiguration { return v.CollectionProperties }).(ComponentDataConfigurationMapOutput)
}

func (o LookupComponentResultOutput) ComponentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.ComponentType }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) Events() ComponentEventMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]ComponentEvent { return v.Events }).(ComponentEventMapOutput)
}

func (o LookupComponentResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) ModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.ModifiedAt }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) Overrides() pulumi.MapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]interface{} { return v.Overrides }).(pulumi.MapOutput)
}

func (o LookupComponentResultOutput) Properties() ComponentPropertyMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]ComponentProperty { return v.Properties }).(ComponentPropertyMapOutput)
}

func (o LookupComponentResultOutput) SchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.SchemaVersion }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComponentResult) *string { return v.SourceId }).(pulumi.StringPtrOutput)
}

func (o LookupComponentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupComponentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupComponentResultOutput) Variants() ComponentVariantArrayOutput {
	return o.ApplyT(func(v LookupComponentResult) []ComponentVariant { return v.Variants }).(ComponentVariantArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComponentResultOutput{})
}
