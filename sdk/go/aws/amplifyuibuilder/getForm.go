// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amplifyuibuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::AmplifyUIBuilder::Form Resource Type
func LookupForm(ctx *pulumi.Context, args *LookupFormArgs, opts ...pulumi.InvokeOption) (*LookupFormResult, error) {
	var rv LookupFormResult
	err := ctx.Invoke("aws-native:amplifyuibuilder:getForm", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFormArgs struct {
	AppId           string `pulumi:"appId"`
	EnvironmentName string `pulumi:"environmentName"`
	Id              string `pulumi:"id"`
}

type LookupFormResult struct {
	AppId             *string                  `pulumi:"appId"`
	Cta               *FormCTA                 `pulumi:"cta"`
	DataType          *FormDataTypeConfig      `pulumi:"dataType"`
	EnvironmentName   *string                  `pulumi:"environmentName"`
	Fields            *FormFieldsMap           `pulumi:"fields"`
	FormActionType    *FormActionType          `pulumi:"formActionType"`
	Id                *string                  `pulumi:"id"`
	Name              *string                  `pulumi:"name"`
	SchemaVersion     *string                  `pulumi:"schemaVersion"`
	SectionalElements *FormSectionalElementMap `pulumi:"sectionalElements"`
	Style             *FormStyle               `pulumi:"style"`
}

func LookupFormOutput(ctx *pulumi.Context, args LookupFormOutputArgs, opts ...pulumi.InvokeOption) LookupFormResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFormResult, error) {
			args := v.(LookupFormArgs)
			r, err := LookupForm(ctx, &args, opts...)
			var s LookupFormResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFormResultOutput)
}

type LookupFormOutputArgs struct {
	AppId           pulumi.StringInput `pulumi:"appId"`
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	Id              pulumi.StringInput `pulumi:"id"`
}

func (LookupFormOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFormArgs)(nil)).Elem()
}

type LookupFormResultOutput struct{ *pulumi.OutputState }

func (LookupFormResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFormResult)(nil)).Elem()
}

func (o LookupFormResultOutput) ToLookupFormResultOutput() LookupFormResultOutput {
	return o
}

func (o LookupFormResultOutput) ToLookupFormResultOutputWithContext(ctx context.Context) LookupFormResultOutput {
	return o
}

func (o LookupFormResultOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

func (o LookupFormResultOutput) Cta() FormCTAPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormCTA { return v.Cta }).(FormCTAPtrOutput)
}

func (o LookupFormResultOutput) DataType() FormDataTypeConfigPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormDataTypeConfig { return v.DataType }).(FormDataTypeConfigPtrOutput)
}

func (o LookupFormResultOutput) EnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *string { return v.EnvironmentName }).(pulumi.StringPtrOutput)
}

func (o LookupFormResultOutput) Fields() FormFieldsMapPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormFieldsMap { return v.Fields }).(FormFieldsMapPtrOutput)
}

func (o LookupFormResultOutput) FormActionType() FormActionTypePtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormActionType { return v.FormActionType }).(FormActionTypePtrOutput)
}

func (o LookupFormResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupFormResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupFormResultOutput) SchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *string { return v.SchemaVersion }).(pulumi.StringPtrOutput)
}

func (o LookupFormResultOutput) SectionalElements() FormSectionalElementMapPtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormSectionalElementMap { return v.SectionalElements }).(FormSectionalElementMapPtrOutput)
}

func (o LookupFormResultOutput) Style() FormStylePtrOutput {
	return o.ApplyT(func(v LookupFormResult) *FormStyle { return v.Style }).(FormStylePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFormResultOutput{})
}
