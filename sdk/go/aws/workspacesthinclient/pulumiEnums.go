// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesthinclient

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type EnvironmentDayOfWeek string

const (
	EnvironmentDayOfWeekMonday    = EnvironmentDayOfWeek("MONDAY")
	EnvironmentDayOfWeekTuesday   = EnvironmentDayOfWeek("TUESDAY")
	EnvironmentDayOfWeekWednesday = EnvironmentDayOfWeek("WEDNESDAY")
	EnvironmentDayOfWeekThursday  = EnvironmentDayOfWeek("THURSDAY")
	EnvironmentDayOfWeekFriday    = EnvironmentDayOfWeek("FRIDAY")
	EnvironmentDayOfWeekSaturday  = EnvironmentDayOfWeek("SATURDAY")
	EnvironmentDayOfWeekSunday    = EnvironmentDayOfWeek("SUNDAY")
)

func (EnvironmentDayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDayOfWeek)(nil)).Elem()
}

func (e EnvironmentDayOfWeek) ToEnvironmentDayOfWeekOutput() EnvironmentDayOfWeekOutput {
	return pulumi.ToOutput(e).(EnvironmentDayOfWeekOutput)
}

func (e EnvironmentDayOfWeek) ToEnvironmentDayOfWeekOutputWithContext(ctx context.Context) EnvironmentDayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentDayOfWeekOutput)
}

func (e EnvironmentDayOfWeek) ToEnvironmentDayOfWeekPtrOutput() EnvironmentDayOfWeekPtrOutput {
	return e.ToEnvironmentDayOfWeekPtrOutputWithContext(context.Background())
}

func (e EnvironmentDayOfWeek) ToEnvironmentDayOfWeekPtrOutputWithContext(ctx context.Context) EnvironmentDayOfWeekPtrOutput {
	return EnvironmentDayOfWeek(e).ToEnvironmentDayOfWeekOutputWithContext(ctx).ToEnvironmentDayOfWeekPtrOutputWithContext(ctx)
}

func (e EnvironmentDayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentDayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentDayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentDayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentDayOfWeekOutput struct{ *pulumi.OutputState }

func (EnvironmentDayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDayOfWeek)(nil)).Elem()
}

func (o EnvironmentDayOfWeekOutput) ToEnvironmentDayOfWeekOutput() EnvironmentDayOfWeekOutput {
	return o
}

func (o EnvironmentDayOfWeekOutput) ToEnvironmentDayOfWeekOutputWithContext(ctx context.Context) EnvironmentDayOfWeekOutput {
	return o
}

func (o EnvironmentDayOfWeekOutput) ToEnvironmentDayOfWeekPtrOutput() EnvironmentDayOfWeekPtrOutput {
	return o.ToEnvironmentDayOfWeekPtrOutputWithContext(context.Background())
}

func (o EnvironmentDayOfWeekOutput) ToEnvironmentDayOfWeekPtrOutputWithContext(ctx context.Context) EnvironmentDayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentDayOfWeek) *EnvironmentDayOfWeek {
		return &v
	}).(EnvironmentDayOfWeekPtrOutput)
}

func (o EnvironmentDayOfWeekOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentDayOfWeek] {
	return pulumix.Output[EnvironmentDayOfWeek]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentDayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentDayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentDayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentDayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentDayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentDayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentDayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentDayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDayOfWeek)(nil)).Elem()
}

func (o EnvironmentDayOfWeekPtrOutput) ToEnvironmentDayOfWeekPtrOutput() EnvironmentDayOfWeekPtrOutput {
	return o
}

func (o EnvironmentDayOfWeekPtrOutput) ToEnvironmentDayOfWeekPtrOutputWithContext(ctx context.Context) EnvironmentDayOfWeekPtrOutput {
	return o
}

func (o EnvironmentDayOfWeekPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentDayOfWeek] {
	return pulumix.Output[*EnvironmentDayOfWeek]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentDayOfWeekPtrOutput) Elem() EnvironmentDayOfWeekOutput {
	return o.ApplyT(func(v *EnvironmentDayOfWeek) EnvironmentDayOfWeek {
		if v != nil {
			return *v
		}
		var ret EnvironmentDayOfWeek
		return ret
	}).(EnvironmentDayOfWeekOutput)
}

func (o EnvironmentDayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentDayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentDayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentDayOfWeekInput is an input type that accepts EnvironmentDayOfWeekArgs and EnvironmentDayOfWeekOutput values.
// You can construct a concrete instance of `EnvironmentDayOfWeekInput` via:
//
//	EnvironmentDayOfWeekArgs{...}
type EnvironmentDayOfWeekInput interface {
	pulumi.Input

	ToEnvironmentDayOfWeekOutput() EnvironmentDayOfWeekOutput
	ToEnvironmentDayOfWeekOutputWithContext(context.Context) EnvironmentDayOfWeekOutput
}

var environmentDayOfWeekPtrType = reflect.TypeOf((**EnvironmentDayOfWeek)(nil)).Elem()

type EnvironmentDayOfWeekPtrInput interface {
	pulumi.Input

	ToEnvironmentDayOfWeekPtrOutput() EnvironmentDayOfWeekPtrOutput
	ToEnvironmentDayOfWeekPtrOutputWithContext(context.Context) EnvironmentDayOfWeekPtrOutput
}

type environmentDayOfWeekPtr string

func EnvironmentDayOfWeekPtr(v string) EnvironmentDayOfWeekPtrInput {
	return (*environmentDayOfWeekPtr)(&v)
}

func (*environmentDayOfWeekPtr) ElementType() reflect.Type {
	return environmentDayOfWeekPtrType
}

func (in *environmentDayOfWeekPtr) ToEnvironmentDayOfWeekPtrOutput() EnvironmentDayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(EnvironmentDayOfWeekPtrOutput)
}

func (in *environmentDayOfWeekPtr) ToEnvironmentDayOfWeekPtrOutputWithContext(ctx context.Context) EnvironmentDayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentDayOfWeekPtrOutput)
}

func (in *environmentDayOfWeekPtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentDayOfWeek] {
	return pulumix.Output[*EnvironmentDayOfWeek]{
		OutputState: in.ToEnvironmentDayOfWeekPtrOutputWithContext(ctx).OutputState,
	}
}

// EnvironmentDayOfWeekArrayInput is an input type that accepts EnvironmentDayOfWeekArray and EnvironmentDayOfWeekArrayOutput values.
// You can construct a concrete instance of `EnvironmentDayOfWeekArrayInput` via:
//
//	EnvironmentDayOfWeekArray{ EnvironmentDayOfWeekArgs{...} }
type EnvironmentDayOfWeekArrayInput interface {
	pulumi.Input

	ToEnvironmentDayOfWeekArrayOutput() EnvironmentDayOfWeekArrayOutput
	ToEnvironmentDayOfWeekArrayOutputWithContext(context.Context) EnvironmentDayOfWeekArrayOutput
}

type EnvironmentDayOfWeekArray []EnvironmentDayOfWeek

func (EnvironmentDayOfWeekArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDayOfWeek)(nil)).Elem()
}

func (i EnvironmentDayOfWeekArray) ToEnvironmentDayOfWeekArrayOutput() EnvironmentDayOfWeekArrayOutput {
	return i.ToEnvironmentDayOfWeekArrayOutputWithContext(context.Background())
}

func (i EnvironmentDayOfWeekArray) ToEnvironmentDayOfWeekArrayOutputWithContext(ctx context.Context) EnvironmentDayOfWeekArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDayOfWeekArrayOutput)
}

func (i EnvironmentDayOfWeekArray) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentDayOfWeek] {
	return pulumix.Output[[]EnvironmentDayOfWeek]{
		OutputState: i.ToEnvironmentDayOfWeekArrayOutputWithContext(ctx).OutputState,
	}
}

type EnvironmentDayOfWeekArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentDayOfWeekArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDayOfWeek)(nil)).Elem()
}

func (o EnvironmentDayOfWeekArrayOutput) ToEnvironmentDayOfWeekArrayOutput() EnvironmentDayOfWeekArrayOutput {
	return o
}

func (o EnvironmentDayOfWeekArrayOutput) ToEnvironmentDayOfWeekArrayOutputWithContext(ctx context.Context) EnvironmentDayOfWeekArrayOutput {
	return o
}

func (o EnvironmentDayOfWeekArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]EnvironmentDayOfWeek] {
	return pulumix.Output[[]EnvironmentDayOfWeek]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentDayOfWeekArrayOutput) Index(i pulumi.IntInput) EnvironmentDayOfWeekOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentDayOfWeek {
		return vs[0].([]EnvironmentDayOfWeek)[vs[1].(int)]
	}).(EnvironmentDayOfWeekOutput)
}

// The type of VDI.
type EnvironmentDesktopType string

const (
	EnvironmentDesktopTypeWorkspaces    = EnvironmentDesktopType("workspaces")
	EnvironmentDesktopTypeAppstream     = EnvironmentDesktopType("appstream")
	EnvironmentDesktopTypeWorkspacesWeb = EnvironmentDesktopType("workspaces-web")
)

type EnvironmentDesktopTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentDesktopTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDesktopType)(nil)).Elem()
}

func (o EnvironmentDesktopTypeOutput) ToEnvironmentDesktopTypeOutput() EnvironmentDesktopTypeOutput {
	return o
}

func (o EnvironmentDesktopTypeOutput) ToEnvironmentDesktopTypeOutputWithContext(ctx context.Context) EnvironmentDesktopTypeOutput {
	return o
}

func (o EnvironmentDesktopTypeOutput) ToEnvironmentDesktopTypePtrOutput() EnvironmentDesktopTypePtrOutput {
	return o.ToEnvironmentDesktopTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentDesktopTypeOutput) ToEnvironmentDesktopTypePtrOutputWithContext(ctx context.Context) EnvironmentDesktopTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentDesktopType) *EnvironmentDesktopType {
		return &v
	}).(EnvironmentDesktopTypePtrOutput)
}

func (o EnvironmentDesktopTypeOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentDesktopType] {
	return pulumix.Output[EnvironmentDesktopType]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentDesktopTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentDesktopTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentDesktopType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentDesktopTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentDesktopTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentDesktopType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentDesktopTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentDesktopTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentDesktopType)(nil)).Elem()
}

func (o EnvironmentDesktopTypePtrOutput) ToEnvironmentDesktopTypePtrOutput() EnvironmentDesktopTypePtrOutput {
	return o
}

func (o EnvironmentDesktopTypePtrOutput) ToEnvironmentDesktopTypePtrOutputWithContext(ctx context.Context) EnvironmentDesktopTypePtrOutput {
	return o
}

func (o EnvironmentDesktopTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentDesktopType] {
	return pulumix.Output[*EnvironmentDesktopType]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentDesktopTypePtrOutput) Elem() EnvironmentDesktopTypeOutput {
	return o.ApplyT(func(v *EnvironmentDesktopType) EnvironmentDesktopType {
		if v != nil {
			return *v
		}
		var ret EnvironmentDesktopType
		return ret
	}).(EnvironmentDesktopTypeOutput)
}

func (o EnvironmentDesktopTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentDesktopTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentDesktopType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The desired time zone maintenance window.
type EnvironmentMaintenanceWindowApplyTimeOf string

const (
	EnvironmentMaintenanceWindowApplyTimeOfUtc    = EnvironmentMaintenanceWindowApplyTimeOf("UTC")
	EnvironmentMaintenanceWindowApplyTimeOfDevice = EnvironmentMaintenanceWindowApplyTimeOf("DEVICE")
)

func (EnvironmentMaintenanceWindowApplyTimeOf) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindowApplyTimeOf)(nil)).Elem()
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToEnvironmentMaintenanceWindowApplyTimeOfOutput() EnvironmentMaintenanceWindowApplyTimeOfOutput {
	return pulumi.ToOutput(e).(EnvironmentMaintenanceWindowApplyTimeOfOutput)
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToEnvironmentMaintenanceWindowApplyTimeOfOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentMaintenanceWindowApplyTimeOfOutput)
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutput() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return e.ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(context.Background())
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return EnvironmentMaintenanceWindowApplyTimeOf(e).ToEnvironmentMaintenanceWindowApplyTimeOfOutputWithContext(ctx).ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx)
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentMaintenanceWindowApplyTimeOf) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentMaintenanceWindowApplyTimeOfOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowApplyTimeOfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindowApplyTimeOf)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToEnvironmentMaintenanceWindowApplyTimeOfOutput() EnvironmentMaintenanceWindowApplyTimeOfOutput {
	return o
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToEnvironmentMaintenanceWindowApplyTimeOfOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfOutput {
	return o
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutput() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o.ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentMaintenanceWindowApplyTimeOf) *EnvironmentMaintenanceWindowApplyTimeOf {
		return &v
	}).(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput)
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentMaintenanceWindowApplyTimeOf] {
	return pulumix.Output[EnvironmentMaintenanceWindowApplyTimeOf]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentMaintenanceWindowApplyTimeOf) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowApplyTimeOfOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentMaintenanceWindowApplyTimeOf) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentMaintenanceWindowApplyTimeOfPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMaintenanceWindowApplyTimeOf)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutput() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentMaintenanceWindowApplyTimeOf] {
	return pulumix.Output[*EnvironmentMaintenanceWindowApplyTimeOf]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) Elem() EnvironmentMaintenanceWindowApplyTimeOfOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindowApplyTimeOf) EnvironmentMaintenanceWindowApplyTimeOf {
		if v != nil {
			return *v
		}
		var ret EnvironmentMaintenanceWindowApplyTimeOf
		return ret
	}).(EnvironmentMaintenanceWindowApplyTimeOfOutput)
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowApplyTimeOfPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentMaintenanceWindowApplyTimeOf) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentMaintenanceWindowApplyTimeOfInput is an input type that accepts EnvironmentMaintenanceWindowApplyTimeOfArgs and EnvironmentMaintenanceWindowApplyTimeOfOutput values.
// You can construct a concrete instance of `EnvironmentMaintenanceWindowApplyTimeOfInput` via:
//
//	EnvironmentMaintenanceWindowApplyTimeOfArgs{...}
type EnvironmentMaintenanceWindowApplyTimeOfInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowApplyTimeOfOutput() EnvironmentMaintenanceWindowApplyTimeOfOutput
	ToEnvironmentMaintenanceWindowApplyTimeOfOutputWithContext(context.Context) EnvironmentMaintenanceWindowApplyTimeOfOutput
}

var environmentMaintenanceWindowApplyTimeOfPtrType = reflect.TypeOf((**EnvironmentMaintenanceWindowApplyTimeOf)(nil)).Elem()

type EnvironmentMaintenanceWindowApplyTimeOfPtrInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutput() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput
	ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(context.Context) EnvironmentMaintenanceWindowApplyTimeOfPtrOutput
}

type environmentMaintenanceWindowApplyTimeOfPtr string

func EnvironmentMaintenanceWindowApplyTimeOfPtr(v string) EnvironmentMaintenanceWindowApplyTimeOfPtrInput {
	return (*environmentMaintenanceWindowApplyTimeOfPtr)(&v)
}

func (*environmentMaintenanceWindowApplyTimeOfPtr) ElementType() reflect.Type {
	return environmentMaintenanceWindowApplyTimeOfPtrType
}

func (in *environmentMaintenanceWindowApplyTimeOfPtr) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutput() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return pulumi.ToOutput(in).(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput)
}

func (in *environmentMaintenanceWindowApplyTimeOfPtr) ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput)
}

func (in *environmentMaintenanceWindowApplyTimeOfPtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentMaintenanceWindowApplyTimeOf] {
	return pulumix.Output[*EnvironmentMaintenanceWindowApplyTimeOf]{
		OutputState: in.ToEnvironmentMaintenanceWindowApplyTimeOfPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of maintenance window.
type EnvironmentMaintenanceWindowType string

const (
	EnvironmentMaintenanceWindowTypeSystem = EnvironmentMaintenanceWindowType("SYSTEM")
	EnvironmentMaintenanceWindowTypeCustom = EnvironmentMaintenanceWindowType("CUSTOM")
)

func (EnvironmentMaintenanceWindowType) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindowType)(nil)).Elem()
}

func (e EnvironmentMaintenanceWindowType) ToEnvironmentMaintenanceWindowTypeOutput() EnvironmentMaintenanceWindowTypeOutput {
	return pulumi.ToOutput(e).(EnvironmentMaintenanceWindowTypeOutput)
}

func (e EnvironmentMaintenanceWindowType) ToEnvironmentMaintenanceWindowTypeOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentMaintenanceWindowTypeOutput)
}

func (e EnvironmentMaintenanceWindowType) ToEnvironmentMaintenanceWindowTypePtrOutput() EnvironmentMaintenanceWindowTypePtrOutput {
	return e.ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(context.Background())
}

func (e EnvironmentMaintenanceWindowType) ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypePtrOutput {
	return EnvironmentMaintenanceWindowType(e).ToEnvironmentMaintenanceWindowTypeOutputWithContext(ctx).ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx)
}

func (e EnvironmentMaintenanceWindowType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentMaintenanceWindowType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentMaintenanceWindowType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentMaintenanceWindowType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentMaintenanceWindowTypeOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindowType)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToEnvironmentMaintenanceWindowTypeOutput() EnvironmentMaintenanceWindowTypeOutput {
	return o
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToEnvironmentMaintenanceWindowTypeOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypeOutput {
	return o
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToEnvironmentMaintenanceWindowTypePtrOutput() EnvironmentMaintenanceWindowTypePtrOutput {
	return o.ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentMaintenanceWindowType) *EnvironmentMaintenanceWindowType {
		return &v
	}).(EnvironmentMaintenanceWindowTypePtrOutput)
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentMaintenanceWindowType] {
	return pulumix.Output[EnvironmentMaintenanceWindowType]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentMaintenanceWindowType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentMaintenanceWindowType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentMaintenanceWindowTypePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMaintenanceWindowType)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) ToEnvironmentMaintenanceWindowTypePtrOutput() EnvironmentMaintenanceWindowTypePtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypePtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentMaintenanceWindowType] {
	return pulumix.Output[*EnvironmentMaintenanceWindowType]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) Elem() EnvironmentMaintenanceWindowTypeOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindowType) EnvironmentMaintenanceWindowType {
		if v != nil {
			return *v
		}
		var ret EnvironmentMaintenanceWindowType
		return ret
	}).(EnvironmentMaintenanceWindowTypeOutput)
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentMaintenanceWindowType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentMaintenanceWindowTypeInput is an input type that accepts EnvironmentMaintenanceWindowTypeArgs and EnvironmentMaintenanceWindowTypeOutput values.
// You can construct a concrete instance of `EnvironmentMaintenanceWindowTypeInput` via:
//
//	EnvironmentMaintenanceWindowTypeArgs{...}
type EnvironmentMaintenanceWindowTypeInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowTypeOutput() EnvironmentMaintenanceWindowTypeOutput
	ToEnvironmentMaintenanceWindowTypeOutputWithContext(context.Context) EnvironmentMaintenanceWindowTypeOutput
}

var environmentMaintenanceWindowTypePtrType = reflect.TypeOf((**EnvironmentMaintenanceWindowType)(nil)).Elem()

type EnvironmentMaintenanceWindowTypePtrInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowTypePtrOutput() EnvironmentMaintenanceWindowTypePtrOutput
	ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(context.Context) EnvironmentMaintenanceWindowTypePtrOutput
}

type environmentMaintenanceWindowTypePtr string

func EnvironmentMaintenanceWindowTypePtr(v string) EnvironmentMaintenanceWindowTypePtrInput {
	return (*environmentMaintenanceWindowTypePtr)(&v)
}

func (*environmentMaintenanceWindowTypePtr) ElementType() reflect.Type {
	return environmentMaintenanceWindowTypePtrType
}

func (in *environmentMaintenanceWindowTypePtr) ToEnvironmentMaintenanceWindowTypePtrOutput() EnvironmentMaintenanceWindowTypePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentMaintenanceWindowTypePtrOutput)
}

func (in *environmentMaintenanceWindowTypePtr) ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentMaintenanceWindowTypePtrOutput)
}

func (in *environmentMaintenanceWindowTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentMaintenanceWindowType] {
	return pulumix.Output[*EnvironmentMaintenanceWindowType]{
		OutputState: in.ToEnvironmentMaintenanceWindowTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Describes if the software currently installed on all devices in the environment is a supported version.
type EnvironmentSoftwareSetComplianceStatus string

const (
	EnvironmentSoftwareSetComplianceStatusCompliant           = EnvironmentSoftwareSetComplianceStatus("COMPLIANT")
	EnvironmentSoftwareSetComplianceStatusNotCompliant        = EnvironmentSoftwareSetComplianceStatus("NOT_COMPLIANT")
	EnvironmentSoftwareSetComplianceStatusNoRegisteredDevices = EnvironmentSoftwareSetComplianceStatus("NO_REGISTERED_DEVICES")
)

type EnvironmentSoftwareSetComplianceStatusOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetComplianceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSoftwareSetComplianceStatus)(nil)).Elem()
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToEnvironmentSoftwareSetComplianceStatusOutput() EnvironmentSoftwareSetComplianceStatusOutput {
	return o
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToEnvironmentSoftwareSetComplianceStatusOutputWithContext(ctx context.Context) EnvironmentSoftwareSetComplianceStatusOutput {
	return o
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToEnvironmentSoftwareSetComplianceStatusPtrOutput() EnvironmentSoftwareSetComplianceStatusPtrOutput {
	return o.ToEnvironmentSoftwareSetComplianceStatusPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToEnvironmentSoftwareSetComplianceStatusPtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetComplianceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentSoftwareSetComplianceStatus) *EnvironmentSoftwareSetComplianceStatus {
		return &v
	}).(EnvironmentSoftwareSetComplianceStatusPtrOutput)
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentSoftwareSetComplianceStatus] {
	return pulumix.Output[EnvironmentSoftwareSetComplianceStatus]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetComplianceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetComplianceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetComplianceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentSoftwareSetComplianceStatusPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetComplianceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSoftwareSetComplianceStatus)(nil)).Elem()
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) ToEnvironmentSoftwareSetComplianceStatusPtrOutput() EnvironmentSoftwareSetComplianceStatusPtrOutput {
	return o
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) ToEnvironmentSoftwareSetComplianceStatusPtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetComplianceStatusPtrOutput {
	return o
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentSoftwareSetComplianceStatus] {
	return pulumix.Output[*EnvironmentSoftwareSetComplianceStatus]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) Elem() EnvironmentSoftwareSetComplianceStatusOutput {
	return o.ApplyT(func(v *EnvironmentSoftwareSetComplianceStatus) EnvironmentSoftwareSetComplianceStatus {
		if v != nil {
			return *v
		}
		var ret EnvironmentSoftwareSetComplianceStatus
		return ret
	}).(EnvironmentSoftwareSetComplianceStatusOutput)
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetComplianceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentSoftwareSetComplianceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// An option to define which software updates to apply.
type EnvironmentSoftwareSetUpdateMode string

const (
	EnvironmentSoftwareSetUpdateModeUseLatest  = EnvironmentSoftwareSetUpdateMode("USE_LATEST")
	EnvironmentSoftwareSetUpdateModeUseDesired = EnvironmentSoftwareSetUpdateMode("USE_DESIRED")
)

func (EnvironmentSoftwareSetUpdateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSoftwareSetUpdateMode)(nil)).Elem()
}

func (e EnvironmentSoftwareSetUpdateMode) ToEnvironmentSoftwareSetUpdateModeOutput() EnvironmentSoftwareSetUpdateModeOutput {
	return pulumi.ToOutput(e).(EnvironmentSoftwareSetUpdateModeOutput)
}

func (e EnvironmentSoftwareSetUpdateMode) ToEnvironmentSoftwareSetUpdateModeOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentSoftwareSetUpdateModeOutput)
}

func (e EnvironmentSoftwareSetUpdateMode) ToEnvironmentSoftwareSetUpdateModePtrOutput() EnvironmentSoftwareSetUpdateModePtrOutput {
	return e.ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(context.Background())
}

func (e EnvironmentSoftwareSetUpdateMode) ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModePtrOutput {
	return EnvironmentSoftwareSetUpdateMode(e).ToEnvironmentSoftwareSetUpdateModeOutputWithContext(ctx).ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx)
}

func (e EnvironmentSoftwareSetUpdateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentSoftwareSetUpdateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentSoftwareSetUpdateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentSoftwareSetUpdateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentSoftwareSetUpdateModeOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetUpdateModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSoftwareSetUpdateMode)(nil)).Elem()
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToEnvironmentSoftwareSetUpdateModeOutput() EnvironmentSoftwareSetUpdateModeOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToEnvironmentSoftwareSetUpdateModeOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModeOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToEnvironmentSoftwareSetUpdateModePtrOutput() EnvironmentSoftwareSetUpdateModePtrOutput {
	return o.ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentSoftwareSetUpdateMode) *EnvironmentSoftwareSetUpdateMode {
		return &v
	}).(EnvironmentSoftwareSetUpdateModePtrOutput)
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentSoftwareSetUpdateMode] {
	return pulumix.Output[EnvironmentSoftwareSetUpdateMode]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetUpdateMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetUpdateMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentSoftwareSetUpdateModePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetUpdateModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSoftwareSetUpdateMode)(nil)).Elem()
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) ToEnvironmentSoftwareSetUpdateModePtrOutput() EnvironmentSoftwareSetUpdateModePtrOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModePtrOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentSoftwareSetUpdateMode] {
	return pulumix.Output[*EnvironmentSoftwareSetUpdateMode]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) Elem() EnvironmentSoftwareSetUpdateModeOutput {
	return o.ApplyT(func(v *EnvironmentSoftwareSetUpdateMode) EnvironmentSoftwareSetUpdateMode {
		if v != nil {
			return *v
		}
		var ret EnvironmentSoftwareSetUpdateMode
		return ret
	}).(EnvironmentSoftwareSetUpdateModeOutput)
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentSoftwareSetUpdateMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentSoftwareSetUpdateModeInput is an input type that accepts EnvironmentSoftwareSetUpdateModeArgs and EnvironmentSoftwareSetUpdateModeOutput values.
// You can construct a concrete instance of `EnvironmentSoftwareSetUpdateModeInput` via:
//
//	EnvironmentSoftwareSetUpdateModeArgs{...}
type EnvironmentSoftwareSetUpdateModeInput interface {
	pulumi.Input

	ToEnvironmentSoftwareSetUpdateModeOutput() EnvironmentSoftwareSetUpdateModeOutput
	ToEnvironmentSoftwareSetUpdateModeOutputWithContext(context.Context) EnvironmentSoftwareSetUpdateModeOutput
}

var environmentSoftwareSetUpdateModePtrType = reflect.TypeOf((**EnvironmentSoftwareSetUpdateMode)(nil)).Elem()

type EnvironmentSoftwareSetUpdateModePtrInput interface {
	pulumi.Input

	ToEnvironmentSoftwareSetUpdateModePtrOutput() EnvironmentSoftwareSetUpdateModePtrOutput
	ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(context.Context) EnvironmentSoftwareSetUpdateModePtrOutput
}

type environmentSoftwareSetUpdateModePtr string

func EnvironmentSoftwareSetUpdateModePtr(v string) EnvironmentSoftwareSetUpdateModePtrInput {
	return (*environmentSoftwareSetUpdateModePtr)(&v)
}

func (*environmentSoftwareSetUpdateModePtr) ElementType() reflect.Type {
	return environmentSoftwareSetUpdateModePtrType
}

func (in *environmentSoftwareSetUpdateModePtr) ToEnvironmentSoftwareSetUpdateModePtrOutput() EnvironmentSoftwareSetUpdateModePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentSoftwareSetUpdateModePtrOutput)
}

func (in *environmentSoftwareSetUpdateModePtr) ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentSoftwareSetUpdateModePtrOutput)
}

func (in *environmentSoftwareSetUpdateModePtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentSoftwareSetUpdateMode] {
	return pulumix.Output[*EnvironmentSoftwareSetUpdateMode]{
		OutputState: in.ToEnvironmentSoftwareSetUpdateModePtrOutputWithContext(ctx).OutputState,
	}
}

// An option to define if software updates should be applied within a maintenance window.
type EnvironmentSoftwareSetUpdateSchedule string

const (
	EnvironmentSoftwareSetUpdateScheduleUseMaintenanceWindow = EnvironmentSoftwareSetUpdateSchedule("USE_MAINTENANCE_WINDOW")
	EnvironmentSoftwareSetUpdateScheduleApplyImmediately     = EnvironmentSoftwareSetUpdateSchedule("APPLY_IMMEDIATELY")
)

func (EnvironmentSoftwareSetUpdateSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSoftwareSetUpdateSchedule)(nil)).Elem()
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToEnvironmentSoftwareSetUpdateScheduleOutput() EnvironmentSoftwareSetUpdateScheduleOutput {
	return pulumi.ToOutput(e).(EnvironmentSoftwareSetUpdateScheduleOutput)
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToEnvironmentSoftwareSetUpdateScheduleOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnvironmentSoftwareSetUpdateScheduleOutput)
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToEnvironmentSoftwareSetUpdateSchedulePtrOutput() EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return e.ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(context.Background())
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return EnvironmentSoftwareSetUpdateSchedule(e).ToEnvironmentSoftwareSetUpdateScheduleOutputWithContext(ctx).ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx)
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnvironmentSoftwareSetUpdateSchedule) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnvironmentSoftwareSetUpdateScheduleOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetUpdateScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSoftwareSetUpdateSchedule)(nil)).Elem()
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToEnvironmentSoftwareSetUpdateScheduleOutput() EnvironmentSoftwareSetUpdateScheduleOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToEnvironmentSoftwareSetUpdateScheduleOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateScheduleOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToEnvironmentSoftwareSetUpdateSchedulePtrOutput() EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return o.ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentSoftwareSetUpdateSchedule) *EnvironmentSoftwareSetUpdateSchedule {
		return &v
	}).(EnvironmentSoftwareSetUpdateSchedulePtrOutput)
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentSoftwareSetUpdateSchedule] {
	return pulumix.Output[EnvironmentSoftwareSetUpdateSchedule]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetUpdateSchedule) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateScheduleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnvironmentSoftwareSetUpdateSchedule) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnvironmentSoftwareSetUpdateSchedulePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentSoftwareSetUpdateSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentSoftwareSetUpdateSchedule)(nil)).Elem()
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) ToEnvironmentSoftwareSetUpdateSchedulePtrOutput() EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return o
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentSoftwareSetUpdateSchedule] {
	return pulumix.Output[*EnvironmentSoftwareSetUpdateSchedule]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) Elem() EnvironmentSoftwareSetUpdateScheduleOutput {
	return o.ApplyT(func(v *EnvironmentSoftwareSetUpdateSchedule) EnvironmentSoftwareSetUpdateSchedule {
		if v != nil {
			return *v
		}
		var ret EnvironmentSoftwareSetUpdateSchedule
		return ret
	}).(EnvironmentSoftwareSetUpdateScheduleOutput)
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnvironmentSoftwareSetUpdateSchedulePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnvironmentSoftwareSetUpdateSchedule) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnvironmentSoftwareSetUpdateScheduleInput is an input type that accepts EnvironmentSoftwareSetUpdateScheduleArgs and EnvironmentSoftwareSetUpdateScheduleOutput values.
// You can construct a concrete instance of `EnvironmentSoftwareSetUpdateScheduleInput` via:
//
//	EnvironmentSoftwareSetUpdateScheduleArgs{...}
type EnvironmentSoftwareSetUpdateScheduleInput interface {
	pulumi.Input

	ToEnvironmentSoftwareSetUpdateScheduleOutput() EnvironmentSoftwareSetUpdateScheduleOutput
	ToEnvironmentSoftwareSetUpdateScheduleOutputWithContext(context.Context) EnvironmentSoftwareSetUpdateScheduleOutput
}

var environmentSoftwareSetUpdateSchedulePtrType = reflect.TypeOf((**EnvironmentSoftwareSetUpdateSchedule)(nil)).Elem()

type EnvironmentSoftwareSetUpdateSchedulePtrInput interface {
	pulumi.Input

	ToEnvironmentSoftwareSetUpdateSchedulePtrOutput() EnvironmentSoftwareSetUpdateSchedulePtrOutput
	ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(context.Context) EnvironmentSoftwareSetUpdateSchedulePtrOutput
}

type environmentSoftwareSetUpdateSchedulePtr string

func EnvironmentSoftwareSetUpdateSchedulePtr(v string) EnvironmentSoftwareSetUpdateSchedulePtrInput {
	return (*environmentSoftwareSetUpdateSchedulePtr)(&v)
}

func (*environmentSoftwareSetUpdateSchedulePtr) ElementType() reflect.Type {
	return environmentSoftwareSetUpdateSchedulePtrType
}

func (in *environmentSoftwareSetUpdateSchedulePtr) ToEnvironmentSoftwareSetUpdateSchedulePtrOutput() EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return pulumi.ToOutput(in).(EnvironmentSoftwareSetUpdateSchedulePtrOutput)
}

func (in *environmentSoftwareSetUpdateSchedulePtr) ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx context.Context) EnvironmentSoftwareSetUpdateSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnvironmentSoftwareSetUpdateSchedulePtrOutput)
}

func (in *environmentSoftwareSetUpdateSchedulePtr) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentSoftwareSetUpdateSchedule] {
	return pulumix.Output[*EnvironmentSoftwareSetUpdateSchedule]{
		OutputState: in.ToEnvironmentSoftwareSetUpdateSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDayOfWeekInput)(nil)).Elem(), EnvironmentDayOfWeek("MONDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDayOfWeekPtrInput)(nil)).Elem(), EnvironmentDayOfWeek("MONDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDayOfWeekArrayInput)(nil)).Elem(), EnvironmentDayOfWeekArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowApplyTimeOfInput)(nil)).Elem(), EnvironmentMaintenanceWindowApplyTimeOf("UTC"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowApplyTimeOfPtrInput)(nil)).Elem(), EnvironmentMaintenanceWindowApplyTimeOf("UTC"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowTypeInput)(nil)).Elem(), EnvironmentMaintenanceWindowType("SYSTEM"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowTypePtrInput)(nil)).Elem(), EnvironmentMaintenanceWindowType("SYSTEM"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSoftwareSetUpdateModeInput)(nil)).Elem(), EnvironmentSoftwareSetUpdateMode("USE_LATEST"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSoftwareSetUpdateModePtrInput)(nil)).Elem(), EnvironmentSoftwareSetUpdateMode("USE_LATEST"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSoftwareSetUpdateScheduleInput)(nil)).Elem(), EnvironmentSoftwareSetUpdateSchedule("USE_MAINTENANCE_WINDOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSoftwareSetUpdateSchedulePtrInput)(nil)).Elem(), EnvironmentSoftwareSetUpdateSchedule("USE_MAINTENANCE_WINDOW"))
	pulumi.RegisterOutputType(EnvironmentDayOfWeekOutput{})
	pulumi.RegisterOutputType(EnvironmentDayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentDayOfWeekArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentDesktopTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentDesktopTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowApplyTimeOfOutput{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowTypeOutput{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowTypePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetComplianceStatusOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetComplianceStatusPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetUpdateModeOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetUpdateModePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetUpdateScheduleOutput{})
	pulumi.RegisterOutputType(EnvironmentSoftwareSetUpdateSchedulePtrOutput{})
}
