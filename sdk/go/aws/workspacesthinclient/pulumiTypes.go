// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesthinclient

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnvironmentMaintenanceWindow struct {
	// The desired time zone maintenance window.
	ApplyTimeOf *EnvironmentMaintenanceWindowApplyTimeOf `pulumi:"applyTimeOf"`
	// The date of maintenance window.
	DaysOfTheWeek []EnvironmentDayOfWeek `pulumi:"daysOfTheWeek"`
	// The hour end time of maintenance window.
	EndTimeHour *int `pulumi:"endTimeHour"`
	// The minute end time of maintenance window.
	EndTimeMinute *int `pulumi:"endTimeMinute"`
	// The hour start time of maintenance window.
	StartTimeHour *int `pulumi:"startTimeHour"`
	// The minute start time of maintenance window.
	StartTimeMinute *int `pulumi:"startTimeMinute"`
	// The type of maintenance window.
	Type EnvironmentMaintenanceWindowType `pulumi:"type"`
}

// EnvironmentMaintenanceWindowInput is an input type that accepts EnvironmentMaintenanceWindowArgs and EnvironmentMaintenanceWindowOutput values.
// You can construct a concrete instance of `EnvironmentMaintenanceWindowInput` via:
//
//	EnvironmentMaintenanceWindowArgs{...}
type EnvironmentMaintenanceWindowInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowOutput() EnvironmentMaintenanceWindowOutput
	ToEnvironmentMaintenanceWindowOutputWithContext(context.Context) EnvironmentMaintenanceWindowOutput
}

type EnvironmentMaintenanceWindowArgs struct {
	// The desired time zone maintenance window.
	ApplyTimeOf EnvironmentMaintenanceWindowApplyTimeOfPtrInput `pulumi:"applyTimeOf"`
	// The date of maintenance window.
	DaysOfTheWeek EnvironmentDayOfWeekArrayInput `pulumi:"daysOfTheWeek"`
	// The hour end time of maintenance window.
	EndTimeHour pulumi.IntPtrInput `pulumi:"endTimeHour"`
	// The minute end time of maintenance window.
	EndTimeMinute pulumi.IntPtrInput `pulumi:"endTimeMinute"`
	// The hour start time of maintenance window.
	StartTimeHour pulumi.IntPtrInput `pulumi:"startTimeHour"`
	// The minute start time of maintenance window.
	StartTimeMinute pulumi.IntPtrInput `pulumi:"startTimeMinute"`
	// The type of maintenance window.
	Type EnvironmentMaintenanceWindowTypeInput `pulumi:"type"`
}

func (EnvironmentMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindow)(nil)).Elem()
}

func (i EnvironmentMaintenanceWindowArgs) ToEnvironmentMaintenanceWindowOutput() EnvironmentMaintenanceWindowOutput {
	return i.ToEnvironmentMaintenanceWindowOutputWithContext(context.Background())
}

func (i EnvironmentMaintenanceWindowArgs) ToEnvironmentMaintenanceWindowOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMaintenanceWindowOutput)
}

func (i EnvironmentMaintenanceWindowArgs) ToEnvironmentMaintenanceWindowPtrOutput() EnvironmentMaintenanceWindowPtrOutput {
	return i.ToEnvironmentMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i EnvironmentMaintenanceWindowArgs) ToEnvironmentMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMaintenanceWindowOutput).ToEnvironmentMaintenanceWindowPtrOutputWithContext(ctx)
}

// EnvironmentMaintenanceWindowPtrInput is an input type that accepts EnvironmentMaintenanceWindowArgs, EnvironmentMaintenanceWindowPtr and EnvironmentMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `EnvironmentMaintenanceWindowPtrInput` via:
//
//	        EnvironmentMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type EnvironmentMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToEnvironmentMaintenanceWindowPtrOutput() EnvironmentMaintenanceWindowPtrOutput
	ToEnvironmentMaintenanceWindowPtrOutputWithContext(context.Context) EnvironmentMaintenanceWindowPtrOutput
}

type environmentMaintenanceWindowPtrType EnvironmentMaintenanceWindowArgs

func EnvironmentMaintenanceWindowPtr(v *EnvironmentMaintenanceWindowArgs) EnvironmentMaintenanceWindowPtrInput {
	return (*environmentMaintenanceWindowPtrType)(v)
}

func (*environmentMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMaintenanceWindow)(nil)).Elem()
}

func (i *environmentMaintenanceWindowPtrType) ToEnvironmentMaintenanceWindowPtrOutput() EnvironmentMaintenanceWindowPtrOutput {
	return i.ToEnvironmentMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *environmentMaintenanceWindowPtrType) ToEnvironmentMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMaintenanceWindowPtrOutput)
}

type EnvironmentMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMaintenanceWindow)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowOutput) ToEnvironmentMaintenanceWindowOutput() EnvironmentMaintenanceWindowOutput {
	return o
}

func (o EnvironmentMaintenanceWindowOutput) ToEnvironmentMaintenanceWindowOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowOutput {
	return o
}

func (o EnvironmentMaintenanceWindowOutput) ToEnvironmentMaintenanceWindowPtrOutput() EnvironmentMaintenanceWindowPtrOutput {
	return o.ToEnvironmentMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o EnvironmentMaintenanceWindowOutput) ToEnvironmentMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentMaintenanceWindow) *EnvironmentMaintenanceWindow {
		return &v
	}).(EnvironmentMaintenanceWindowPtrOutput)
}

// The desired time zone maintenance window.
func (o EnvironmentMaintenanceWindowOutput) ApplyTimeOf() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) *EnvironmentMaintenanceWindowApplyTimeOf { return v.ApplyTimeOf }).(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput)
}

// The date of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) DaysOfTheWeek() EnvironmentDayOfWeekArrayOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) []EnvironmentDayOfWeek { return v.DaysOfTheWeek }).(EnvironmentDayOfWeekArrayOutput)
}

// The hour end time of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) EndTimeHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) *int { return v.EndTimeHour }).(pulumi.IntPtrOutput)
}

// The minute end time of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) EndTimeMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) *int { return v.EndTimeMinute }).(pulumi.IntPtrOutput)
}

// The hour start time of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) StartTimeHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) *int { return v.StartTimeHour }).(pulumi.IntPtrOutput)
}

// The minute start time of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) StartTimeMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) *int { return v.StartTimeMinute }).(pulumi.IntPtrOutput)
}

// The type of maintenance window.
func (o EnvironmentMaintenanceWindowOutput) Type() EnvironmentMaintenanceWindowTypeOutput {
	return o.ApplyT(func(v EnvironmentMaintenanceWindow) EnvironmentMaintenanceWindowType { return v.Type }).(EnvironmentMaintenanceWindowTypeOutput)
}

type EnvironmentMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMaintenanceWindow)(nil)).Elem()
}

func (o EnvironmentMaintenanceWindowPtrOutput) ToEnvironmentMaintenanceWindowPtrOutput() EnvironmentMaintenanceWindowPtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowPtrOutput) ToEnvironmentMaintenanceWindowPtrOutputWithContext(ctx context.Context) EnvironmentMaintenanceWindowPtrOutput {
	return o
}

func (o EnvironmentMaintenanceWindowPtrOutput) Elem() EnvironmentMaintenanceWindowOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) EnvironmentMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret EnvironmentMaintenanceWindow
		return ret
	}).(EnvironmentMaintenanceWindowOutput)
}

// The desired time zone maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) ApplyTimeOf() EnvironmentMaintenanceWindowApplyTimeOfPtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *EnvironmentMaintenanceWindowApplyTimeOf {
		if v == nil {
			return nil
		}
		return v.ApplyTimeOf
	}).(EnvironmentMaintenanceWindowApplyTimeOfPtrOutput)
}

// The date of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) DaysOfTheWeek() EnvironmentDayOfWeekArrayOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) []EnvironmentDayOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(EnvironmentDayOfWeekArrayOutput)
}

// The hour end time of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) EndTimeHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.EndTimeHour
	}).(pulumi.IntPtrOutput)
}

// The minute end time of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) EndTimeMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.EndTimeMinute
	}).(pulumi.IntPtrOutput)
}

// The hour start time of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) StartTimeHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartTimeHour
	}).(pulumi.IntPtrOutput)
}

// The minute start time of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) StartTimeMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartTimeMinute
	}).(pulumi.IntPtrOutput)
}

// The type of maintenance window.
func (o EnvironmentMaintenanceWindowPtrOutput) Type() EnvironmentMaintenanceWindowTypePtrOutput {
	return o.ApplyT(func(v *EnvironmentMaintenanceWindow) *EnvironmentMaintenanceWindowType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(EnvironmentMaintenanceWindowTypePtrOutput)
}

// A key-value pair to associate with a resource.
type EnvironmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// EnvironmentTagInput is an input type that accepts EnvironmentTagArgs and EnvironmentTagOutput values.
// You can construct a concrete instance of `EnvironmentTagInput` via:
//
//	EnvironmentTagArgs{...}
type EnvironmentTagInput interface {
	pulumi.Input

	ToEnvironmentTagOutput() EnvironmentTagOutput
	ToEnvironmentTagOutputWithContext(context.Context) EnvironmentTagOutput
}

// A key-value pair to associate with a resource.
type EnvironmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTag)(nil)).Elem()
}

func (i EnvironmentTagArgs) ToEnvironmentTagOutput() EnvironmentTagOutput {
	return i.ToEnvironmentTagOutputWithContext(context.Background())
}

func (i EnvironmentTagArgs) ToEnvironmentTagOutputWithContext(ctx context.Context) EnvironmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTagOutput)
}

// EnvironmentTagArrayInput is an input type that accepts EnvironmentTagArray and EnvironmentTagArrayOutput values.
// You can construct a concrete instance of `EnvironmentTagArrayInput` via:
//
//	EnvironmentTagArray{ EnvironmentTagArgs{...} }
type EnvironmentTagArrayInput interface {
	pulumi.Input

	ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput
	ToEnvironmentTagArrayOutputWithContext(context.Context) EnvironmentTagArrayOutput
}

type EnvironmentTagArray []EnvironmentTagInput

func (EnvironmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentTag)(nil)).Elem()
}

func (i EnvironmentTagArray) ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput {
	return i.ToEnvironmentTagArrayOutputWithContext(context.Background())
}

func (i EnvironmentTagArray) ToEnvironmentTagArrayOutputWithContext(ctx context.Context) EnvironmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type EnvironmentTagOutput struct{ *pulumi.OutputState }

func (EnvironmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTag)(nil)).Elem()
}

func (o EnvironmentTagOutput) ToEnvironmentTagOutput() EnvironmentTagOutput {
	return o
}

func (o EnvironmentTagOutput) ToEnvironmentTagOutputWithContext(ctx context.Context) EnvironmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o EnvironmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o EnvironmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentTagArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentTag)(nil)).Elem()
}

func (o EnvironmentTagArrayOutput) ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput {
	return o
}

func (o EnvironmentTagArrayOutput) ToEnvironmentTagArrayOutputWithContext(ctx context.Context) EnvironmentTagArrayOutput {
	return o
}

func (o EnvironmentTagArrayOutput) Index(i pulumi.IntInput) EnvironmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentTag {
		return vs[0].([]EnvironmentTag)[vs[1].(int)]
	}).(EnvironmentTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowInput)(nil)).Elem(), EnvironmentMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMaintenanceWindowPtrInput)(nil)).Elem(), EnvironmentMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTagInput)(nil)).Elem(), EnvironmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTagArrayInput)(nil)).Elem(), EnvironmentTagArray{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(EnvironmentMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTagOutput{})
	pulumi.RegisterOutputType(EnvironmentTagArrayOutput{})
}
