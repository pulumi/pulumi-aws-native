// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amplify

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppAutoBranchCreationConfig struct {
	// Automated branch creation glob patterns for the Amplify app.
	AutoBranchCreationPatterns []string `pulumi:"autoBranchCreationPatterns"`
	// Sets password protection for your auto created branch.
	BasicAuthConfig *AppBasicAuthConfig `pulumi:"basicAuthConfig"`
	// The build specification (build spec) for the autocreated branch.
	BuildSpec *string `pulumi:"buildSpec"`
	// Enables automated branch creation for the Amplify app.
	EnableAutoBranchCreation *bool `pulumi:"enableAutoBranchCreation"`
	// Enables auto building for the auto created branch.
	EnableAutoBuild *bool `pulumi:"enableAutoBuild"`
	// Enables performance mode for the branch.
	//
	// Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
	EnablePerformanceMode *bool `pulumi:"enablePerformanceMode"`
	// Sets whether pull request previews are enabled for each branch that Amplify Hosting automatically creates for your app. Amplify creates previews by deploying your app to a unique URL whenever a pull request is opened for the branch. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
	//
	// To provide backend support for your preview, Amplify Hosting automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
	//
	// For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
	EnablePullRequestPreview *bool `pulumi:"enablePullRequestPreview"`
	// The environment variables for the autocreated branch.
	EnvironmentVariables []AppEnvironmentVariable `pulumi:"environmentVariables"`
	// The framework for the autocreated branch.
	Framework *string `pulumi:"framework"`
	// If pull request previews are enabled, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI.
	//
	// To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
	//
	// If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify deletes this environment when the pull request is closed.
	//
	// For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
	PullRequestEnvironmentName *string `pulumi:"pullRequestEnvironmentName"`
	// Stage for the auto created branch.
	Stage *AppAutoBranchCreationConfigStage `pulumi:"stage"`
}

// AppAutoBranchCreationConfigInput is an input type that accepts AppAutoBranchCreationConfigArgs and AppAutoBranchCreationConfigOutput values.
// You can construct a concrete instance of `AppAutoBranchCreationConfigInput` via:
//
//	AppAutoBranchCreationConfigArgs{...}
type AppAutoBranchCreationConfigInput interface {
	pulumi.Input

	ToAppAutoBranchCreationConfigOutput() AppAutoBranchCreationConfigOutput
	ToAppAutoBranchCreationConfigOutputWithContext(context.Context) AppAutoBranchCreationConfigOutput
}

type AppAutoBranchCreationConfigArgs struct {
	// Automated branch creation glob patterns for the Amplify app.
	AutoBranchCreationPatterns pulumi.StringArrayInput `pulumi:"autoBranchCreationPatterns"`
	// Sets password protection for your auto created branch.
	BasicAuthConfig AppBasicAuthConfigPtrInput `pulumi:"basicAuthConfig"`
	// The build specification (build spec) for the autocreated branch.
	BuildSpec pulumi.StringPtrInput `pulumi:"buildSpec"`
	// Enables automated branch creation for the Amplify app.
	EnableAutoBranchCreation pulumi.BoolPtrInput `pulumi:"enableAutoBranchCreation"`
	// Enables auto building for the auto created branch.
	EnableAutoBuild pulumi.BoolPtrInput `pulumi:"enableAutoBuild"`
	// Enables performance mode for the branch.
	//
	// Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
	EnablePerformanceMode pulumi.BoolPtrInput `pulumi:"enablePerformanceMode"`
	// Sets whether pull request previews are enabled for each branch that Amplify Hosting automatically creates for your app. Amplify creates previews by deploying your app to a unique URL whenever a pull request is opened for the branch. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
	//
	// To provide backend support for your preview, Amplify Hosting automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
	//
	// For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
	EnablePullRequestPreview pulumi.BoolPtrInput `pulumi:"enablePullRequestPreview"`
	// The environment variables for the autocreated branch.
	EnvironmentVariables AppEnvironmentVariableArrayInput `pulumi:"environmentVariables"`
	// The framework for the autocreated branch.
	Framework pulumi.StringPtrInput `pulumi:"framework"`
	// If pull request previews are enabled, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI.
	//
	// To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
	//
	// If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify deletes this environment when the pull request is closed.
	//
	// For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
	PullRequestEnvironmentName pulumi.StringPtrInput `pulumi:"pullRequestEnvironmentName"`
	// Stage for the auto created branch.
	Stage AppAutoBranchCreationConfigStagePtrInput `pulumi:"stage"`
}

func (AppAutoBranchCreationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAutoBranchCreationConfig)(nil)).Elem()
}

func (i AppAutoBranchCreationConfigArgs) ToAppAutoBranchCreationConfigOutput() AppAutoBranchCreationConfigOutput {
	return i.ToAppAutoBranchCreationConfigOutputWithContext(context.Background())
}

func (i AppAutoBranchCreationConfigArgs) ToAppAutoBranchCreationConfigOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAutoBranchCreationConfigOutput)
}

func (i AppAutoBranchCreationConfigArgs) ToAppAutoBranchCreationConfigPtrOutput() AppAutoBranchCreationConfigPtrOutput {
	return i.ToAppAutoBranchCreationConfigPtrOutputWithContext(context.Background())
}

func (i AppAutoBranchCreationConfigArgs) ToAppAutoBranchCreationConfigPtrOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAutoBranchCreationConfigOutput).ToAppAutoBranchCreationConfigPtrOutputWithContext(ctx)
}

// AppAutoBranchCreationConfigPtrInput is an input type that accepts AppAutoBranchCreationConfigArgs, AppAutoBranchCreationConfigPtr and AppAutoBranchCreationConfigPtrOutput values.
// You can construct a concrete instance of `AppAutoBranchCreationConfigPtrInput` via:
//
//	        AppAutoBranchCreationConfigArgs{...}
//
//	or:
//
//	        nil
type AppAutoBranchCreationConfigPtrInput interface {
	pulumi.Input

	ToAppAutoBranchCreationConfigPtrOutput() AppAutoBranchCreationConfigPtrOutput
	ToAppAutoBranchCreationConfigPtrOutputWithContext(context.Context) AppAutoBranchCreationConfigPtrOutput
}

type appAutoBranchCreationConfigPtrType AppAutoBranchCreationConfigArgs

func AppAutoBranchCreationConfigPtr(v *AppAutoBranchCreationConfigArgs) AppAutoBranchCreationConfigPtrInput {
	return (*appAutoBranchCreationConfigPtrType)(v)
}

func (*appAutoBranchCreationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAutoBranchCreationConfig)(nil)).Elem()
}

func (i *appAutoBranchCreationConfigPtrType) ToAppAutoBranchCreationConfigPtrOutput() AppAutoBranchCreationConfigPtrOutput {
	return i.ToAppAutoBranchCreationConfigPtrOutputWithContext(context.Background())
}

func (i *appAutoBranchCreationConfigPtrType) ToAppAutoBranchCreationConfigPtrOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAutoBranchCreationConfigPtrOutput)
}

type AppAutoBranchCreationConfigOutput struct{ *pulumi.OutputState }

func (AppAutoBranchCreationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAutoBranchCreationConfig)(nil)).Elem()
}

func (o AppAutoBranchCreationConfigOutput) ToAppAutoBranchCreationConfigOutput() AppAutoBranchCreationConfigOutput {
	return o
}

func (o AppAutoBranchCreationConfigOutput) ToAppAutoBranchCreationConfigOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigOutput {
	return o
}

func (o AppAutoBranchCreationConfigOutput) ToAppAutoBranchCreationConfigPtrOutput() AppAutoBranchCreationConfigPtrOutput {
	return o.ToAppAutoBranchCreationConfigPtrOutputWithContext(context.Background())
}

func (o AppAutoBranchCreationConfigOutput) ToAppAutoBranchCreationConfigPtrOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAutoBranchCreationConfig) *AppAutoBranchCreationConfig {
		return &v
	}).(AppAutoBranchCreationConfigPtrOutput)
}

// Automated branch creation glob patterns for the Amplify app.
func (o AppAutoBranchCreationConfigOutput) AutoBranchCreationPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) []string { return v.AutoBranchCreationPatterns }).(pulumi.StringArrayOutput)
}

// Sets password protection for your auto created branch.
func (o AppAutoBranchCreationConfigOutput) BasicAuthConfig() AppBasicAuthConfigPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *AppBasicAuthConfig { return v.BasicAuthConfig }).(AppBasicAuthConfigPtrOutput)
}

// The build specification (build spec) for the autocreated branch.
func (o AppAutoBranchCreationConfigOutput) BuildSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *string { return v.BuildSpec }).(pulumi.StringPtrOutput)
}

// Enables automated branch creation for the Amplify app.
func (o AppAutoBranchCreationConfigOutput) EnableAutoBranchCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *bool { return v.EnableAutoBranchCreation }).(pulumi.BoolPtrOutput)
}

// Enables auto building for the auto created branch.
func (o AppAutoBranchCreationConfigOutput) EnableAutoBuild() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *bool { return v.EnableAutoBuild }).(pulumi.BoolPtrOutput)
}

// Enables performance mode for the branch.
//
// Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
func (o AppAutoBranchCreationConfigOutput) EnablePerformanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *bool { return v.EnablePerformanceMode }).(pulumi.BoolPtrOutput)
}

// Sets whether pull request previews are enabled for each branch that Amplify Hosting automatically creates for your app. Amplify creates previews by deploying your app to a unique URL whenever a pull request is opened for the branch. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
//
// To provide backend support for your preview, Amplify Hosting automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
//
// For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
func (o AppAutoBranchCreationConfigOutput) EnablePullRequestPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *bool { return v.EnablePullRequestPreview }).(pulumi.BoolPtrOutput)
}

// The environment variables for the autocreated branch.
func (o AppAutoBranchCreationConfigOutput) EnvironmentVariables() AppEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) []AppEnvironmentVariable { return v.EnvironmentVariables }).(AppEnvironmentVariableArrayOutput)
}

// The framework for the autocreated branch.
func (o AppAutoBranchCreationConfigOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *string { return v.Framework }).(pulumi.StringPtrOutput)
}

// If pull request previews are enabled, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI.
//
// To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
//
// If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify deletes this environment when the pull request is closed.
//
// For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
func (o AppAutoBranchCreationConfigOutput) PullRequestEnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *string { return v.PullRequestEnvironmentName }).(pulumi.StringPtrOutput)
}

// Stage for the auto created branch.
func (o AppAutoBranchCreationConfigOutput) Stage() AppAutoBranchCreationConfigStagePtrOutput {
	return o.ApplyT(func(v AppAutoBranchCreationConfig) *AppAutoBranchCreationConfigStage { return v.Stage }).(AppAutoBranchCreationConfigStagePtrOutput)
}

type AppAutoBranchCreationConfigPtrOutput struct{ *pulumi.OutputState }

func (AppAutoBranchCreationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAutoBranchCreationConfig)(nil)).Elem()
}

func (o AppAutoBranchCreationConfigPtrOutput) ToAppAutoBranchCreationConfigPtrOutput() AppAutoBranchCreationConfigPtrOutput {
	return o
}

func (o AppAutoBranchCreationConfigPtrOutput) ToAppAutoBranchCreationConfigPtrOutputWithContext(ctx context.Context) AppAutoBranchCreationConfigPtrOutput {
	return o
}

func (o AppAutoBranchCreationConfigPtrOutput) Elem() AppAutoBranchCreationConfigOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) AppAutoBranchCreationConfig {
		if v != nil {
			return *v
		}
		var ret AppAutoBranchCreationConfig
		return ret
	}).(AppAutoBranchCreationConfigOutput)
}

// Automated branch creation glob patterns for the Amplify app.
func (o AppAutoBranchCreationConfigPtrOutput) AutoBranchCreationPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) []string {
		if v == nil {
			return nil
		}
		return v.AutoBranchCreationPatterns
	}).(pulumi.StringArrayOutput)
}

// Sets password protection for your auto created branch.
func (o AppAutoBranchCreationConfigPtrOutput) BasicAuthConfig() AppBasicAuthConfigPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *AppBasicAuthConfig {
		if v == nil {
			return nil
		}
		return v.BasicAuthConfig
	}).(AppBasicAuthConfigPtrOutput)
}

// The build specification (build spec) for the autocreated branch.
func (o AppAutoBranchCreationConfigPtrOutput) BuildSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *string {
		if v == nil {
			return nil
		}
		return v.BuildSpec
	}).(pulumi.StringPtrOutput)
}

// Enables automated branch creation for the Amplify app.
func (o AppAutoBranchCreationConfigPtrOutput) EnableAutoBranchCreation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoBranchCreation
	}).(pulumi.BoolPtrOutput)
}

// Enables auto building for the auto created branch.
func (o AppAutoBranchCreationConfigPtrOutput) EnableAutoBuild() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoBuild
	}).(pulumi.BoolPtrOutput)
}

// Enables performance mode for the branch.
//
// Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out.
func (o AppAutoBranchCreationConfigPtrOutput) EnablePerformanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePerformanceMode
	}).(pulumi.BoolPtrOutput)
}

// Sets whether pull request previews are enabled for each branch that Amplify Hosting automatically creates for your app. Amplify creates previews by deploying your app to a unique URL whenever a pull request is opened for the branch. Development and QA teams can use this preview to test the pull request before it's merged into a production or integration branch.
//
// To provide backend support for your preview, Amplify Hosting automatically provisions a temporary backend environment that it deletes when the pull request is closed. If you want to specify a dedicated backend environment for your previews, use the `PullRequestEnvironmentName` property.
//
// For more information, see [Web Previews](https://docs.aws.amazon.com/amplify/latest/userguide/pr-previews.html) in the *AWS Amplify Hosting User Guide* .
func (o AppAutoBranchCreationConfigPtrOutput) EnablePullRequestPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePullRequestPreview
	}).(pulumi.BoolPtrOutput)
}

// The environment variables for the autocreated branch.
func (o AppAutoBranchCreationConfigPtrOutput) EnvironmentVariables() AppEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) []AppEnvironmentVariable {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(AppEnvironmentVariableArrayOutput)
}

// The framework for the autocreated branch.
func (o AppAutoBranchCreationConfigPtrOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Framework
	}).(pulumi.StringPtrOutput)
}

// If pull request previews are enabled, you can use this property to specify a dedicated backend environment for your previews. For example, you could specify an environment named `prod` , `test` , or `dev` that you initialized with the Amplify CLI.
//
// To enable pull request previews, set the `EnablePullRequestPreview` property to `true` .
//
// If you don't specify an environment, Amplify Hosting provides backend support for each preview by automatically provisioning a temporary backend environment. Amplify deletes this environment when the pull request is closed.
//
// For more information about creating backend environments, see [Feature Branch Deployments and Team Workflows](https://docs.aws.amazon.com/amplify/latest/userguide/multi-environments.html) in the *AWS Amplify Hosting User Guide* .
func (o AppAutoBranchCreationConfigPtrOutput) PullRequestEnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *string {
		if v == nil {
			return nil
		}
		return v.PullRequestEnvironmentName
	}).(pulumi.StringPtrOutput)
}

// Stage for the auto created branch.
func (o AppAutoBranchCreationConfigPtrOutput) Stage() AppAutoBranchCreationConfigStagePtrOutput {
	return o.ApplyT(func(v *AppAutoBranchCreationConfig) *AppAutoBranchCreationConfigStage {
		if v == nil {
			return nil
		}
		return v.Stage
	}).(AppAutoBranchCreationConfigStagePtrOutput)
}

type AppBasicAuthConfig struct {
	// Enables basic authorization for the Amplify app's branches.
	EnableBasicAuth *bool `pulumi:"enableBasicAuth"`
	// The password for basic authorization.
	Password *string `pulumi:"password"`
	// The user name for basic authorization.
	Username *string `pulumi:"username"`
}

// AppBasicAuthConfigInput is an input type that accepts AppBasicAuthConfigArgs and AppBasicAuthConfigOutput values.
// You can construct a concrete instance of `AppBasicAuthConfigInput` via:
//
//	AppBasicAuthConfigArgs{...}
type AppBasicAuthConfigInput interface {
	pulumi.Input

	ToAppBasicAuthConfigOutput() AppBasicAuthConfigOutput
	ToAppBasicAuthConfigOutputWithContext(context.Context) AppBasicAuthConfigOutput
}

type AppBasicAuthConfigArgs struct {
	// Enables basic authorization for the Amplify app's branches.
	EnableBasicAuth pulumi.BoolPtrInput `pulumi:"enableBasicAuth"`
	// The password for basic authorization.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The user name for basic authorization.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AppBasicAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBasicAuthConfig)(nil)).Elem()
}

func (i AppBasicAuthConfigArgs) ToAppBasicAuthConfigOutput() AppBasicAuthConfigOutput {
	return i.ToAppBasicAuthConfigOutputWithContext(context.Background())
}

func (i AppBasicAuthConfigArgs) ToAppBasicAuthConfigOutputWithContext(ctx context.Context) AppBasicAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBasicAuthConfigOutput)
}

func (i AppBasicAuthConfigArgs) ToAppBasicAuthConfigPtrOutput() AppBasicAuthConfigPtrOutput {
	return i.ToAppBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (i AppBasicAuthConfigArgs) ToAppBasicAuthConfigPtrOutputWithContext(ctx context.Context) AppBasicAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBasicAuthConfigOutput).ToAppBasicAuthConfigPtrOutputWithContext(ctx)
}

// AppBasicAuthConfigPtrInput is an input type that accepts AppBasicAuthConfigArgs, AppBasicAuthConfigPtr and AppBasicAuthConfigPtrOutput values.
// You can construct a concrete instance of `AppBasicAuthConfigPtrInput` via:
//
//	        AppBasicAuthConfigArgs{...}
//
//	or:
//
//	        nil
type AppBasicAuthConfigPtrInput interface {
	pulumi.Input

	ToAppBasicAuthConfigPtrOutput() AppBasicAuthConfigPtrOutput
	ToAppBasicAuthConfigPtrOutputWithContext(context.Context) AppBasicAuthConfigPtrOutput
}

type appBasicAuthConfigPtrType AppBasicAuthConfigArgs

func AppBasicAuthConfigPtr(v *AppBasicAuthConfigArgs) AppBasicAuthConfigPtrInput {
	return (*appBasicAuthConfigPtrType)(v)
}

func (*appBasicAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBasicAuthConfig)(nil)).Elem()
}

func (i *appBasicAuthConfigPtrType) ToAppBasicAuthConfigPtrOutput() AppBasicAuthConfigPtrOutput {
	return i.ToAppBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (i *appBasicAuthConfigPtrType) ToAppBasicAuthConfigPtrOutputWithContext(ctx context.Context) AppBasicAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppBasicAuthConfigPtrOutput)
}

type AppBasicAuthConfigOutput struct{ *pulumi.OutputState }

func (AppBasicAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppBasicAuthConfig)(nil)).Elem()
}

func (o AppBasicAuthConfigOutput) ToAppBasicAuthConfigOutput() AppBasicAuthConfigOutput {
	return o
}

func (o AppBasicAuthConfigOutput) ToAppBasicAuthConfigOutputWithContext(ctx context.Context) AppBasicAuthConfigOutput {
	return o
}

func (o AppBasicAuthConfigOutput) ToAppBasicAuthConfigPtrOutput() AppBasicAuthConfigPtrOutput {
	return o.ToAppBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (o AppBasicAuthConfigOutput) ToAppBasicAuthConfigPtrOutputWithContext(ctx context.Context) AppBasicAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppBasicAuthConfig) *AppBasicAuthConfig {
		return &v
	}).(AppBasicAuthConfigPtrOutput)
}

// Enables basic authorization for the Amplify app's branches.
func (o AppBasicAuthConfigOutput) EnableBasicAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppBasicAuthConfig) *bool { return v.EnableBasicAuth }).(pulumi.BoolPtrOutput)
}

// The password for basic authorization.
func (o AppBasicAuthConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppBasicAuthConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The user name for basic authorization.
func (o AppBasicAuthConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppBasicAuthConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AppBasicAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (AppBasicAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppBasicAuthConfig)(nil)).Elem()
}

func (o AppBasicAuthConfigPtrOutput) ToAppBasicAuthConfigPtrOutput() AppBasicAuthConfigPtrOutput {
	return o
}

func (o AppBasicAuthConfigPtrOutput) ToAppBasicAuthConfigPtrOutputWithContext(ctx context.Context) AppBasicAuthConfigPtrOutput {
	return o
}

func (o AppBasicAuthConfigPtrOutput) Elem() AppBasicAuthConfigOutput {
	return o.ApplyT(func(v *AppBasicAuthConfig) AppBasicAuthConfig {
		if v != nil {
			return *v
		}
		var ret AppBasicAuthConfig
		return ret
	}).(AppBasicAuthConfigOutput)
}

// Enables basic authorization for the Amplify app's branches.
func (o AppBasicAuthConfigPtrOutput) EnableBasicAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppBasicAuthConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBasicAuth
	}).(pulumi.BoolPtrOutput)
}

// The password for basic authorization.
func (o AppBasicAuthConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBasicAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name for basic authorization.
func (o AppBasicAuthConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppBasicAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type AppCacheConfig struct {
	// The type of cache configuration to use for an Amplify app.
	//
	// The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules.
	//
	// The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key. This is the default setting.
	Type *AppCacheConfigType `pulumi:"type"`
}

// AppCacheConfigInput is an input type that accepts AppCacheConfigArgs and AppCacheConfigOutput values.
// You can construct a concrete instance of `AppCacheConfigInput` via:
//
//	AppCacheConfigArgs{...}
type AppCacheConfigInput interface {
	pulumi.Input

	ToAppCacheConfigOutput() AppCacheConfigOutput
	ToAppCacheConfigOutputWithContext(context.Context) AppCacheConfigOutput
}

type AppCacheConfigArgs struct {
	// The type of cache configuration to use for an Amplify app.
	//
	// The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules.
	//
	// The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key. This is the default setting.
	Type AppCacheConfigTypePtrInput `pulumi:"type"`
}

func (AppCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCacheConfig)(nil)).Elem()
}

func (i AppCacheConfigArgs) ToAppCacheConfigOutput() AppCacheConfigOutput {
	return i.ToAppCacheConfigOutputWithContext(context.Background())
}

func (i AppCacheConfigArgs) ToAppCacheConfigOutputWithContext(ctx context.Context) AppCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCacheConfigOutput)
}

func (i AppCacheConfigArgs) ToAppCacheConfigPtrOutput() AppCacheConfigPtrOutput {
	return i.ToAppCacheConfigPtrOutputWithContext(context.Background())
}

func (i AppCacheConfigArgs) ToAppCacheConfigPtrOutputWithContext(ctx context.Context) AppCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCacheConfigOutput).ToAppCacheConfigPtrOutputWithContext(ctx)
}

// AppCacheConfigPtrInput is an input type that accepts AppCacheConfigArgs, AppCacheConfigPtr and AppCacheConfigPtrOutput values.
// You can construct a concrete instance of `AppCacheConfigPtrInput` via:
//
//	        AppCacheConfigArgs{...}
//
//	or:
//
//	        nil
type AppCacheConfigPtrInput interface {
	pulumi.Input

	ToAppCacheConfigPtrOutput() AppCacheConfigPtrOutput
	ToAppCacheConfigPtrOutputWithContext(context.Context) AppCacheConfigPtrOutput
}

type appCacheConfigPtrType AppCacheConfigArgs

func AppCacheConfigPtr(v *AppCacheConfigArgs) AppCacheConfigPtrInput {
	return (*appCacheConfigPtrType)(v)
}

func (*appCacheConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCacheConfig)(nil)).Elem()
}

func (i *appCacheConfigPtrType) ToAppCacheConfigPtrOutput() AppCacheConfigPtrOutput {
	return i.ToAppCacheConfigPtrOutputWithContext(context.Background())
}

func (i *appCacheConfigPtrType) ToAppCacheConfigPtrOutputWithContext(ctx context.Context) AppCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCacheConfigPtrOutput)
}

type AppCacheConfigOutput struct{ *pulumi.OutputState }

func (AppCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCacheConfig)(nil)).Elem()
}

func (o AppCacheConfigOutput) ToAppCacheConfigOutput() AppCacheConfigOutput {
	return o
}

func (o AppCacheConfigOutput) ToAppCacheConfigOutputWithContext(ctx context.Context) AppCacheConfigOutput {
	return o
}

func (o AppCacheConfigOutput) ToAppCacheConfigPtrOutput() AppCacheConfigPtrOutput {
	return o.ToAppCacheConfigPtrOutputWithContext(context.Background())
}

func (o AppCacheConfigOutput) ToAppCacheConfigPtrOutputWithContext(ctx context.Context) AppCacheConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppCacheConfig) *AppCacheConfig {
		return &v
	}).(AppCacheConfigPtrOutput)
}

// The type of cache configuration to use for an Amplify app.
//
// The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules.
//
// The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key. This is the default setting.
func (o AppCacheConfigOutput) Type() AppCacheConfigTypePtrOutput {
	return o.ApplyT(func(v AppCacheConfig) *AppCacheConfigType { return v.Type }).(AppCacheConfigTypePtrOutput)
}

type AppCacheConfigPtrOutput struct{ *pulumi.OutputState }

func (AppCacheConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCacheConfig)(nil)).Elem()
}

func (o AppCacheConfigPtrOutput) ToAppCacheConfigPtrOutput() AppCacheConfigPtrOutput {
	return o
}

func (o AppCacheConfigPtrOutput) ToAppCacheConfigPtrOutputWithContext(ctx context.Context) AppCacheConfigPtrOutput {
	return o
}

func (o AppCacheConfigPtrOutput) Elem() AppCacheConfigOutput {
	return o.ApplyT(func(v *AppCacheConfig) AppCacheConfig {
		if v != nil {
			return *v
		}
		var ret AppCacheConfig
		return ret
	}).(AppCacheConfigOutput)
}

// The type of cache configuration to use for an Amplify app.
//
// The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized cache configuration for your app based on its platform, routing rules, and rewrite rules.
//
// The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same as `AMPLIFY_MANAGED` , except that it excludes all cookies from the cache key. This is the default setting.
func (o AppCacheConfigPtrOutput) Type() AppCacheConfigTypePtrOutput {
	return o.ApplyT(func(v *AppCacheConfig) *AppCacheConfigType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AppCacheConfigTypePtrOutput)
}

type AppCustomRule struct {
	// The condition for a URL rewrite or redirect rule, such as a country code.
	Condition *string `pulumi:"condition"`
	// The source pattern for a URL rewrite or redirect rule.
	Source string `pulumi:"source"`
	// The status code for a URL rewrite or redirect rule.
	//
	// - **200** - Represents a 200 rewrite rule.
	// - **301** - Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL.
	// - **302** - Represents a 302 temporary redirect rule.
	// - **404** - Represents a 404 redirect rule.
	// - **404-200** - Represents a 404 rewrite rule.
	Status *string `pulumi:"status"`
	// The target pattern for a URL rewrite or redirect rule.
	Target string `pulumi:"target"`
}

// AppCustomRuleInput is an input type that accepts AppCustomRuleArgs and AppCustomRuleOutput values.
// You can construct a concrete instance of `AppCustomRuleInput` via:
//
//	AppCustomRuleArgs{...}
type AppCustomRuleInput interface {
	pulumi.Input

	ToAppCustomRuleOutput() AppCustomRuleOutput
	ToAppCustomRuleOutputWithContext(context.Context) AppCustomRuleOutput
}

type AppCustomRuleArgs struct {
	// The condition for a URL rewrite or redirect rule, such as a country code.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The source pattern for a URL rewrite or redirect rule.
	Source pulumi.StringInput `pulumi:"source"`
	// The status code for a URL rewrite or redirect rule.
	//
	// - **200** - Represents a 200 rewrite rule.
	// - **301** - Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL.
	// - **302** - Represents a 302 temporary redirect rule.
	// - **404** - Represents a 404 redirect rule.
	// - **404-200** - Represents a 404 rewrite rule.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The target pattern for a URL rewrite or redirect rule.
	Target pulumi.StringInput `pulumi:"target"`
}

func (AppCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCustomRule)(nil)).Elem()
}

func (i AppCustomRuleArgs) ToAppCustomRuleOutput() AppCustomRuleOutput {
	return i.ToAppCustomRuleOutputWithContext(context.Background())
}

func (i AppCustomRuleArgs) ToAppCustomRuleOutputWithContext(ctx context.Context) AppCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCustomRuleOutput)
}

// AppCustomRuleArrayInput is an input type that accepts AppCustomRuleArray and AppCustomRuleArrayOutput values.
// You can construct a concrete instance of `AppCustomRuleArrayInput` via:
//
//	AppCustomRuleArray{ AppCustomRuleArgs{...} }
type AppCustomRuleArrayInput interface {
	pulumi.Input

	ToAppCustomRuleArrayOutput() AppCustomRuleArrayOutput
	ToAppCustomRuleArrayOutputWithContext(context.Context) AppCustomRuleArrayOutput
}

type AppCustomRuleArray []AppCustomRuleInput

func (AppCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppCustomRule)(nil)).Elem()
}

func (i AppCustomRuleArray) ToAppCustomRuleArrayOutput() AppCustomRuleArrayOutput {
	return i.ToAppCustomRuleArrayOutputWithContext(context.Background())
}

func (i AppCustomRuleArray) ToAppCustomRuleArrayOutputWithContext(ctx context.Context) AppCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCustomRuleArrayOutput)
}

type AppCustomRuleOutput struct{ *pulumi.OutputState }

func (AppCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCustomRule)(nil)).Elem()
}

func (o AppCustomRuleOutput) ToAppCustomRuleOutput() AppCustomRuleOutput {
	return o
}

func (o AppCustomRuleOutput) ToAppCustomRuleOutputWithContext(ctx context.Context) AppCustomRuleOutput {
	return o
}

// The condition for a URL rewrite or redirect rule, such as a country code.
func (o AppCustomRuleOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCustomRule) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The source pattern for a URL rewrite or redirect rule.
func (o AppCustomRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v AppCustomRule) string { return v.Source }).(pulumi.StringOutput)
}

// The status code for a URL rewrite or redirect rule.
//
// - **200** - Represents a 200 rewrite rule.
// - **301** - Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL.
// - **302** - Represents a 302 temporary redirect rule.
// - **404** - Represents a 404 redirect rule.
// - **404-200** - Represents a 404 rewrite rule.
func (o AppCustomRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCustomRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The target pattern for a URL rewrite or redirect rule.
func (o AppCustomRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v AppCustomRule) string { return v.Target }).(pulumi.StringOutput)
}

type AppCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (AppCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppCustomRule)(nil)).Elem()
}

func (o AppCustomRuleArrayOutput) ToAppCustomRuleArrayOutput() AppCustomRuleArrayOutput {
	return o
}

func (o AppCustomRuleArrayOutput) ToAppCustomRuleArrayOutputWithContext(ctx context.Context) AppCustomRuleArrayOutput {
	return o
}

func (o AppCustomRuleArrayOutput) Index(i pulumi.IntInput) AppCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppCustomRule {
		return vs[0].([]AppCustomRule)[vs[1].(int)]
	}).(AppCustomRuleOutput)
}

type AppEnvironmentVariable struct {
	// The environment variable name.
	Name string `pulumi:"name"`
	// The environment variable value.
	Value string `pulumi:"value"`
}

// AppEnvironmentVariableInput is an input type that accepts AppEnvironmentVariableArgs and AppEnvironmentVariableOutput values.
// You can construct a concrete instance of `AppEnvironmentVariableInput` via:
//
//	AppEnvironmentVariableArgs{...}
type AppEnvironmentVariableInput interface {
	pulumi.Input

	ToAppEnvironmentVariableOutput() AppEnvironmentVariableOutput
	ToAppEnvironmentVariableOutputWithContext(context.Context) AppEnvironmentVariableOutput
}

type AppEnvironmentVariableArgs struct {
	// The environment variable name.
	Name pulumi.StringInput `pulumi:"name"`
	// The environment variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEnvironmentVariable)(nil)).Elem()
}

func (i AppEnvironmentVariableArgs) ToAppEnvironmentVariableOutput() AppEnvironmentVariableOutput {
	return i.ToAppEnvironmentVariableOutputWithContext(context.Background())
}

func (i AppEnvironmentVariableArgs) ToAppEnvironmentVariableOutputWithContext(ctx context.Context) AppEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEnvironmentVariableOutput)
}

// AppEnvironmentVariableArrayInput is an input type that accepts AppEnvironmentVariableArray and AppEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `AppEnvironmentVariableArrayInput` via:
//
//	AppEnvironmentVariableArray{ AppEnvironmentVariableArgs{...} }
type AppEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToAppEnvironmentVariableArrayOutput() AppEnvironmentVariableArrayOutput
	ToAppEnvironmentVariableArrayOutputWithContext(context.Context) AppEnvironmentVariableArrayOutput
}

type AppEnvironmentVariableArray []AppEnvironmentVariableInput

func (AppEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppEnvironmentVariable)(nil)).Elem()
}

func (i AppEnvironmentVariableArray) ToAppEnvironmentVariableArrayOutput() AppEnvironmentVariableArrayOutput {
	return i.ToAppEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i AppEnvironmentVariableArray) ToAppEnvironmentVariableArrayOutputWithContext(ctx context.Context) AppEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEnvironmentVariableArrayOutput)
}

type AppEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (AppEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppEnvironmentVariable)(nil)).Elem()
}

func (o AppEnvironmentVariableOutput) ToAppEnvironmentVariableOutput() AppEnvironmentVariableOutput {
	return o
}

func (o AppEnvironmentVariableOutput) ToAppEnvironmentVariableOutputWithContext(ctx context.Context) AppEnvironmentVariableOutput {
	return o
}

// The environment variable name.
func (o AppEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The environment variable value.
func (o AppEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type AppEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (AppEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppEnvironmentVariable)(nil)).Elem()
}

func (o AppEnvironmentVariableArrayOutput) ToAppEnvironmentVariableArrayOutput() AppEnvironmentVariableArrayOutput {
	return o
}

func (o AppEnvironmentVariableArrayOutput) ToAppEnvironmentVariableArrayOutputWithContext(ctx context.Context) AppEnvironmentVariableArrayOutput {
	return o
}

func (o AppEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) AppEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppEnvironmentVariable {
		return vs[0].([]AppEnvironmentVariable)[vs[1].(int)]
	}).(AppEnvironmentVariableOutput)
}

type AppJobConfig struct {
	BuildComputeType AppJobConfigBuildComputeType `pulumi:"buildComputeType"`
}

// AppJobConfigInput is an input type that accepts AppJobConfigArgs and AppJobConfigOutput values.
// You can construct a concrete instance of `AppJobConfigInput` via:
//
//	AppJobConfigArgs{...}
type AppJobConfigInput interface {
	pulumi.Input

	ToAppJobConfigOutput() AppJobConfigOutput
	ToAppJobConfigOutputWithContext(context.Context) AppJobConfigOutput
}

type AppJobConfigArgs struct {
	BuildComputeType AppJobConfigBuildComputeTypeInput `pulumi:"buildComputeType"`
}

func (AppJobConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppJobConfig)(nil)).Elem()
}

func (i AppJobConfigArgs) ToAppJobConfigOutput() AppJobConfigOutput {
	return i.ToAppJobConfigOutputWithContext(context.Background())
}

func (i AppJobConfigArgs) ToAppJobConfigOutputWithContext(ctx context.Context) AppJobConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppJobConfigOutput)
}

func (i AppJobConfigArgs) ToAppJobConfigPtrOutput() AppJobConfigPtrOutput {
	return i.ToAppJobConfigPtrOutputWithContext(context.Background())
}

func (i AppJobConfigArgs) ToAppJobConfigPtrOutputWithContext(ctx context.Context) AppJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppJobConfigOutput).ToAppJobConfigPtrOutputWithContext(ctx)
}

// AppJobConfigPtrInput is an input type that accepts AppJobConfigArgs, AppJobConfigPtr and AppJobConfigPtrOutput values.
// You can construct a concrete instance of `AppJobConfigPtrInput` via:
//
//	        AppJobConfigArgs{...}
//
//	or:
//
//	        nil
type AppJobConfigPtrInput interface {
	pulumi.Input

	ToAppJobConfigPtrOutput() AppJobConfigPtrOutput
	ToAppJobConfigPtrOutputWithContext(context.Context) AppJobConfigPtrOutput
}

type appJobConfigPtrType AppJobConfigArgs

func AppJobConfigPtr(v *AppJobConfigArgs) AppJobConfigPtrInput {
	return (*appJobConfigPtrType)(v)
}

func (*appJobConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppJobConfig)(nil)).Elem()
}

func (i *appJobConfigPtrType) ToAppJobConfigPtrOutput() AppJobConfigPtrOutput {
	return i.ToAppJobConfigPtrOutputWithContext(context.Background())
}

func (i *appJobConfigPtrType) ToAppJobConfigPtrOutputWithContext(ctx context.Context) AppJobConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppJobConfigPtrOutput)
}

type AppJobConfigOutput struct{ *pulumi.OutputState }

func (AppJobConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppJobConfig)(nil)).Elem()
}

func (o AppJobConfigOutput) ToAppJobConfigOutput() AppJobConfigOutput {
	return o
}

func (o AppJobConfigOutput) ToAppJobConfigOutputWithContext(ctx context.Context) AppJobConfigOutput {
	return o
}

func (o AppJobConfigOutput) ToAppJobConfigPtrOutput() AppJobConfigPtrOutput {
	return o.ToAppJobConfigPtrOutputWithContext(context.Background())
}

func (o AppJobConfigOutput) ToAppJobConfigPtrOutputWithContext(ctx context.Context) AppJobConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppJobConfig) *AppJobConfig {
		return &v
	}).(AppJobConfigPtrOutput)
}

func (o AppJobConfigOutput) BuildComputeType() AppJobConfigBuildComputeTypeOutput {
	return o.ApplyT(func(v AppJobConfig) AppJobConfigBuildComputeType { return v.BuildComputeType }).(AppJobConfigBuildComputeTypeOutput)
}

type AppJobConfigPtrOutput struct{ *pulumi.OutputState }

func (AppJobConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppJobConfig)(nil)).Elem()
}

func (o AppJobConfigPtrOutput) ToAppJobConfigPtrOutput() AppJobConfigPtrOutput {
	return o
}

func (o AppJobConfigPtrOutput) ToAppJobConfigPtrOutputWithContext(ctx context.Context) AppJobConfigPtrOutput {
	return o
}

func (o AppJobConfigPtrOutput) Elem() AppJobConfigOutput {
	return o.ApplyT(func(v *AppJobConfig) AppJobConfig {
		if v != nil {
			return *v
		}
		var ret AppJobConfig
		return ret
	}).(AppJobConfigOutput)
}

func (o AppJobConfigPtrOutput) BuildComputeType() AppJobConfigBuildComputeTypePtrOutput {
	return o.ApplyT(func(v *AppJobConfig) *AppJobConfigBuildComputeType {
		if v == nil {
			return nil
		}
		return &v.BuildComputeType
	}).(AppJobConfigBuildComputeTypePtrOutput)
}

type AppTag struct {
	// Specifies the key for the tag.
	Key string `pulumi:"key"`
	// Specifies the value for the tag.
	Value string `pulumi:"value"`
}

type BranchBackend struct {
	// The Amazon Resource Name (ARN) for the AWS CloudFormation stack.
	StackArn *string `pulumi:"stackArn"`
}

// BranchBackendInput is an input type that accepts BranchBackendArgs and BranchBackendOutput values.
// You can construct a concrete instance of `BranchBackendInput` via:
//
//	BranchBackendArgs{...}
type BranchBackendInput interface {
	pulumi.Input

	ToBranchBackendOutput() BranchBackendOutput
	ToBranchBackendOutputWithContext(context.Context) BranchBackendOutput
}

type BranchBackendArgs struct {
	// The Amazon Resource Name (ARN) for the AWS CloudFormation stack.
	StackArn pulumi.StringPtrInput `pulumi:"stackArn"`
}

func (BranchBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchBackend)(nil)).Elem()
}

func (i BranchBackendArgs) ToBranchBackendOutput() BranchBackendOutput {
	return i.ToBranchBackendOutputWithContext(context.Background())
}

func (i BranchBackendArgs) ToBranchBackendOutputWithContext(ctx context.Context) BranchBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBackendOutput)
}

func (i BranchBackendArgs) ToBranchBackendPtrOutput() BranchBackendPtrOutput {
	return i.ToBranchBackendPtrOutputWithContext(context.Background())
}

func (i BranchBackendArgs) ToBranchBackendPtrOutputWithContext(ctx context.Context) BranchBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBackendOutput).ToBranchBackendPtrOutputWithContext(ctx)
}

// BranchBackendPtrInput is an input type that accepts BranchBackendArgs, BranchBackendPtr and BranchBackendPtrOutput values.
// You can construct a concrete instance of `BranchBackendPtrInput` via:
//
//	        BranchBackendArgs{...}
//
//	or:
//
//	        nil
type BranchBackendPtrInput interface {
	pulumi.Input

	ToBranchBackendPtrOutput() BranchBackendPtrOutput
	ToBranchBackendPtrOutputWithContext(context.Context) BranchBackendPtrOutput
}

type branchBackendPtrType BranchBackendArgs

func BranchBackendPtr(v *BranchBackendArgs) BranchBackendPtrInput {
	return (*branchBackendPtrType)(v)
}

func (*branchBackendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchBackend)(nil)).Elem()
}

func (i *branchBackendPtrType) ToBranchBackendPtrOutput() BranchBackendPtrOutput {
	return i.ToBranchBackendPtrOutputWithContext(context.Background())
}

func (i *branchBackendPtrType) ToBranchBackendPtrOutputWithContext(ctx context.Context) BranchBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBackendPtrOutput)
}

type BranchBackendOutput struct{ *pulumi.OutputState }

func (BranchBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchBackend)(nil)).Elem()
}

func (o BranchBackendOutput) ToBranchBackendOutput() BranchBackendOutput {
	return o
}

func (o BranchBackendOutput) ToBranchBackendOutputWithContext(ctx context.Context) BranchBackendOutput {
	return o
}

func (o BranchBackendOutput) ToBranchBackendPtrOutput() BranchBackendPtrOutput {
	return o.ToBranchBackendPtrOutputWithContext(context.Background())
}

func (o BranchBackendOutput) ToBranchBackendPtrOutputWithContext(ctx context.Context) BranchBackendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchBackend) *BranchBackend {
		return &v
	}).(BranchBackendPtrOutput)
}

// The Amazon Resource Name (ARN) for the AWS CloudFormation stack.
func (o BranchBackendOutput) StackArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchBackend) *string { return v.StackArn }).(pulumi.StringPtrOutput)
}

type BranchBackendPtrOutput struct{ *pulumi.OutputState }

func (BranchBackendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchBackend)(nil)).Elem()
}

func (o BranchBackendPtrOutput) ToBranchBackendPtrOutput() BranchBackendPtrOutput {
	return o
}

func (o BranchBackendPtrOutput) ToBranchBackendPtrOutputWithContext(ctx context.Context) BranchBackendPtrOutput {
	return o
}

func (o BranchBackendPtrOutput) Elem() BranchBackendOutput {
	return o.ApplyT(func(v *BranchBackend) BranchBackend {
		if v != nil {
			return *v
		}
		var ret BranchBackend
		return ret
	}).(BranchBackendOutput)
}

// The Amazon Resource Name (ARN) for the AWS CloudFormation stack.
func (o BranchBackendPtrOutput) StackArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BranchBackend) *string {
		if v == nil {
			return nil
		}
		return v.StackArn
	}).(pulumi.StringPtrOutput)
}

type BranchBasicAuthConfig struct {
	// Enables basic authorization for the branch.
	EnableBasicAuth *bool `pulumi:"enableBasicAuth"`
	// The password for basic authorization.
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

// BranchBasicAuthConfigInput is an input type that accepts BranchBasicAuthConfigArgs and BranchBasicAuthConfigOutput values.
// You can construct a concrete instance of `BranchBasicAuthConfigInput` via:
//
//	BranchBasicAuthConfigArgs{...}
type BranchBasicAuthConfigInput interface {
	pulumi.Input

	ToBranchBasicAuthConfigOutput() BranchBasicAuthConfigOutput
	ToBranchBasicAuthConfigOutputWithContext(context.Context) BranchBasicAuthConfigOutput
}

type BranchBasicAuthConfigArgs struct {
	// Enables basic authorization for the branch.
	EnableBasicAuth pulumi.BoolPtrInput `pulumi:"enableBasicAuth"`
	// The password for basic authorization.
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (BranchBasicAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchBasicAuthConfig)(nil)).Elem()
}

func (i BranchBasicAuthConfigArgs) ToBranchBasicAuthConfigOutput() BranchBasicAuthConfigOutput {
	return i.ToBranchBasicAuthConfigOutputWithContext(context.Background())
}

func (i BranchBasicAuthConfigArgs) ToBranchBasicAuthConfigOutputWithContext(ctx context.Context) BranchBasicAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBasicAuthConfigOutput)
}

func (i BranchBasicAuthConfigArgs) ToBranchBasicAuthConfigPtrOutput() BranchBasicAuthConfigPtrOutput {
	return i.ToBranchBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (i BranchBasicAuthConfigArgs) ToBranchBasicAuthConfigPtrOutputWithContext(ctx context.Context) BranchBasicAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBasicAuthConfigOutput).ToBranchBasicAuthConfigPtrOutputWithContext(ctx)
}

// BranchBasicAuthConfigPtrInput is an input type that accepts BranchBasicAuthConfigArgs, BranchBasicAuthConfigPtr and BranchBasicAuthConfigPtrOutput values.
// You can construct a concrete instance of `BranchBasicAuthConfigPtrInput` via:
//
//	        BranchBasicAuthConfigArgs{...}
//
//	or:
//
//	        nil
type BranchBasicAuthConfigPtrInput interface {
	pulumi.Input

	ToBranchBasicAuthConfigPtrOutput() BranchBasicAuthConfigPtrOutput
	ToBranchBasicAuthConfigPtrOutputWithContext(context.Context) BranchBasicAuthConfigPtrOutput
}

type branchBasicAuthConfigPtrType BranchBasicAuthConfigArgs

func BranchBasicAuthConfigPtr(v *BranchBasicAuthConfigArgs) BranchBasicAuthConfigPtrInput {
	return (*branchBasicAuthConfigPtrType)(v)
}

func (*branchBasicAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchBasicAuthConfig)(nil)).Elem()
}

func (i *branchBasicAuthConfigPtrType) ToBranchBasicAuthConfigPtrOutput() BranchBasicAuthConfigPtrOutput {
	return i.ToBranchBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (i *branchBasicAuthConfigPtrType) ToBranchBasicAuthConfigPtrOutputWithContext(ctx context.Context) BranchBasicAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchBasicAuthConfigPtrOutput)
}

type BranchBasicAuthConfigOutput struct{ *pulumi.OutputState }

func (BranchBasicAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchBasicAuthConfig)(nil)).Elem()
}

func (o BranchBasicAuthConfigOutput) ToBranchBasicAuthConfigOutput() BranchBasicAuthConfigOutput {
	return o
}

func (o BranchBasicAuthConfigOutput) ToBranchBasicAuthConfigOutputWithContext(ctx context.Context) BranchBasicAuthConfigOutput {
	return o
}

func (o BranchBasicAuthConfigOutput) ToBranchBasicAuthConfigPtrOutput() BranchBasicAuthConfigPtrOutput {
	return o.ToBranchBasicAuthConfigPtrOutputWithContext(context.Background())
}

func (o BranchBasicAuthConfigOutput) ToBranchBasicAuthConfigPtrOutputWithContext(ctx context.Context) BranchBasicAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchBasicAuthConfig) *BranchBasicAuthConfig {
		return &v
	}).(BranchBasicAuthConfigPtrOutput)
}

// Enables basic authorization for the branch.
func (o BranchBasicAuthConfigOutput) EnableBasicAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BranchBasicAuthConfig) *bool { return v.EnableBasicAuth }).(pulumi.BoolPtrOutput)
}

// The password for basic authorization.
func (o BranchBasicAuthConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v BranchBasicAuthConfig) string { return v.Password }).(pulumi.StringOutput)
}

func (o BranchBasicAuthConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BranchBasicAuthConfig) string { return v.Username }).(pulumi.StringOutput)
}

type BranchBasicAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (BranchBasicAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchBasicAuthConfig)(nil)).Elem()
}

func (o BranchBasicAuthConfigPtrOutput) ToBranchBasicAuthConfigPtrOutput() BranchBasicAuthConfigPtrOutput {
	return o
}

func (o BranchBasicAuthConfigPtrOutput) ToBranchBasicAuthConfigPtrOutputWithContext(ctx context.Context) BranchBasicAuthConfigPtrOutput {
	return o
}

func (o BranchBasicAuthConfigPtrOutput) Elem() BranchBasicAuthConfigOutput {
	return o.ApplyT(func(v *BranchBasicAuthConfig) BranchBasicAuthConfig {
		if v != nil {
			return *v
		}
		var ret BranchBasicAuthConfig
		return ret
	}).(BranchBasicAuthConfigOutput)
}

// Enables basic authorization for the branch.
func (o BranchBasicAuthConfigPtrOutput) EnableBasicAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BranchBasicAuthConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBasicAuth
	}).(pulumi.BoolPtrOutput)
}

// The password for basic authorization.
func (o BranchBasicAuthConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BranchBasicAuthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o BranchBasicAuthConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BranchBasicAuthConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type BranchEnvironmentVariable struct {
	// The environment variable name.
	Name string `pulumi:"name"`
	// The environment variable value.
	Value string `pulumi:"value"`
}

// BranchEnvironmentVariableInput is an input type that accepts BranchEnvironmentVariableArgs and BranchEnvironmentVariableOutput values.
// You can construct a concrete instance of `BranchEnvironmentVariableInput` via:
//
//	BranchEnvironmentVariableArgs{...}
type BranchEnvironmentVariableInput interface {
	pulumi.Input

	ToBranchEnvironmentVariableOutput() BranchEnvironmentVariableOutput
	ToBranchEnvironmentVariableOutputWithContext(context.Context) BranchEnvironmentVariableOutput
}

type BranchEnvironmentVariableArgs struct {
	// The environment variable name.
	Name pulumi.StringInput `pulumi:"name"`
	// The environment variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BranchEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchEnvironmentVariable)(nil)).Elem()
}

func (i BranchEnvironmentVariableArgs) ToBranchEnvironmentVariableOutput() BranchEnvironmentVariableOutput {
	return i.ToBranchEnvironmentVariableOutputWithContext(context.Background())
}

func (i BranchEnvironmentVariableArgs) ToBranchEnvironmentVariableOutputWithContext(ctx context.Context) BranchEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchEnvironmentVariableOutput)
}

// BranchEnvironmentVariableArrayInput is an input type that accepts BranchEnvironmentVariableArray and BranchEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `BranchEnvironmentVariableArrayInput` via:
//
//	BranchEnvironmentVariableArray{ BranchEnvironmentVariableArgs{...} }
type BranchEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToBranchEnvironmentVariableArrayOutput() BranchEnvironmentVariableArrayOutput
	ToBranchEnvironmentVariableArrayOutputWithContext(context.Context) BranchEnvironmentVariableArrayOutput
}

type BranchEnvironmentVariableArray []BranchEnvironmentVariableInput

func (BranchEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchEnvironmentVariable)(nil)).Elem()
}

func (i BranchEnvironmentVariableArray) ToBranchEnvironmentVariableArrayOutput() BranchEnvironmentVariableArrayOutput {
	return i.ToBranchEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i BranchEnvironmentVariableArray) ToBranchEnvironmentVariableArrayOutputWithContext(ctx context.Context) BranchEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchEnvironmentVariableArrayOutput)
}

type BranchEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (BranchEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchEnvironmentVariable)(nil)).Elem()
}

func (o BranchEnvironmentVariableOutput) ToBranchEnvironmentVariableOutput() BranchEnvironmentVariableOutput {
	return o
}

func (o BranchEnvironmentVariableOutput) ToBranchEnvironmentVariableOutputWithContext(ctx context.Context) BranchEnvironmentVariableOutput {
	return o
}

// The environment variable name.
func (o BranchEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BranchEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The environment variable value.
func (o BranchEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BranchEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type BranchEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (BranchEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BranchEnvironmentVariable)(nil)).Elem()
}

func (o BranchEnvironmentVariableArrayOutput) ToBranchEnvironmentVariableArrayOutput() BranchEnvironmentVariableArrayOutput {
	return o
}

func (o BranchEnvironmentVariableArrayOutput) ToBranchEnvironmentVariableArrayOutputWithContext(ctx context.Context) BranchEnvironmentVariableArrayOutput {
	return o
}

func (o BranchEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) BranchEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BranchEnvironmentVariable {
		return vs[0].([]BranchEnvironmentVariable)[vs[1].(int)]
	}).(BranchEnvironmentVariableOutput)
}

type BranchTag struct {
	// Specifies the key for the tag.
	Key string `pulumi:"key"`
	// Specifies the value for the tag.
	Value string `pulumi:"value"`
}

type DomainCertificate struct {
	// The Amazon resource name (ARN) for a custom certificate that you have already added to AWS Certificate Manager in your AWS account .
	//
	// This field is required only when the certificate type is `CUSTOM` .
	CertificateArn *string `pulumi:"certificateArn"`
	// The type of SSL/TLS certificate that you want to use.
	//
	// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
	//
	// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
	CertificateType *DomainCertificateCertificateType `pulumi:"certificateType"`
	// The DNS record for certificate verification.
	CertificateVerificationDnsRecord *string `pulumi:"certificateVerificationDnsRecord"`
}

type DomainCertificateOutput struct{ *pulumi.OutputState }

func (DomainCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCertificate)(nil)).Elem()
}

func (o DomainCertificateOutput) ToDomainCertificateOutput() DomainCertificateOutput {
	return o
}

func (o DomainCertificateOutput) ToDomainCertificateOutputWithContext(ctx context.Context) DomainCertificateOutput {
	return o
}

// The Amazon resource name (ARN) for a custom certificate that you have already added to AWS Certificate Manager in your AWS account .
//
// This field is required only when the certificate type is `CUSTOM` .
func (o DomainCertificateOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCertificate) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

// The type of SSL/TLS certificate that you want to use.
//
// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
//
// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
func (o DomainCertificateOutput) CertificateType() DomainCertificateCertificateTypePtrOutput {
	return o.ApplyT(func(v DomainCertificate) *DomainCertificateCertificateType { return v.CertificateType }).(DomainCertificateCertificateTypePtrOutput)
}

// The DNS record for certificate verification.
func (o DomainCertificateOutput) CertificateVerificationDnsRecord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCertificate) *string { return v.CertificateVerificationDnsRecord }).(pulumi.StringPtrOutput)
}

type DomainCertificatePtrOutput struct{ *pulumi.OutputState }

func (DomainCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCertificate)(nil)).Elem()
}

func (o DomainCertificatePtrOutput) ToDomainCertificatePtrOutput() DomainCertificatePtrOutput {
	return o
}

func (o DomainCertificatePtrOutput) ToDomainCertificatePtrOutputWithContext(ctx context.Context) DomainCertificatePtrOutput {
	return o
}

func (o DomainCertificatePtrOutput) Elem() DomainCertificateOutput {
	return o.ApplyT(func(v *DomainCertificate) DomainCertificate {
		if v != nil {
			return *v
		}
		var ret DomainCertificate
		return ret
	}).(DomainCertificateOutput)
}

// The Amazon resource name (ARN) for a custom certificate that you have already added to AWS Certificate Manager in your AWS account .
//
// This field is required only when the certificate type is `CUSTOM` .
func (o DomainCertificatePtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

// The type of SSL/TLS certificate that you want to use.
//
// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
//
// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
func (o DomainCertificatePtrOutput) CertificateType() DomainCertificateCertificateTypePtrOutput {
	return o.ApplyT(func(v *DomainCertificate) *DomainCertificateCertificateType {
		if v == nil {
			return nil
		}
		return v.CertificateType
	}).(DomainCertificateCertificateTypePtrOutput)
}

// The DNS record for certificate verification.
func (o DomainCertificatePtrOutput) CertificateVerificationDnsRecord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCertificate) *string {
		if v == nil {
			return nil
		}
		return v.CertificateVerificationDnsRecord
	}).(pulumi.StringPtrOutput)
}

type DomainCertificateSettings struct {
	// The certificate type.
	//
	// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
	//
	// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
	CertificateType *DomainCertificateSettingsCertificateType `pulumi:"certificateType"`
	// The Amazon resource name (ARN) for the custom certificate that you have already added to AWS Certificate Manager in your AWS account .
	//
	// This field is required only when the certificate type is `CUSTOM` .
	CustomCertificateArn *string `pulumi:"customCertificateArn"`
}

// DomainCertificateSettingsInput is an input type that accepts DomainCertificateSettingsArgs and DomainCertificateSettingsOutput values.
// You can construct a concrete instance of `DomainCertificateSettingsInput` via:
//
//	DomainCertificateSettingsArgs{...}
type DomainCertificateSettingsInput interface {
	pulumi.Input

	ToDomainCertificateSettingsOutput() DomainCertificateSettingsOutput
	ToDomainCertificateSettingsOutputWithContext(context.Context) DomainCertificateSettingsOutput
}

type DomainCertificateSettingsArgs struct {
	// The certificate type.
	//
	// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
	//
	// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
	CertificateType DomainCertificateSettingsCertificateTypePtrInput `pulumi:"certificateType"`
	// The Amazon resource name (ARN) for the custom certificate that you have already added to AWS Certificate Manager in your AWS account .
	//
	// This field is required only when the certificate type is `CUSTOM` .
	CustomCertificateArn pulumi.StringPtrInput `pulumi:"customCertificateArn"`
}

func (DomainCertificateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCertificateSettings)(nil)).Elem()
}

func (i DomainCertificateSettingsArgs) ToDomainCertificateSettingsOutput() DomainCertificateSettingsOutput {
	return i.ToDomainCertificateSettingsOutputWithContext(context.Background())
}

func (i DomainCertificateSettingsArgs) ToDomainCertificateSettingsOutputWithContext(ctx context.Context) DomainCertificateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCertificateSettingsOutput)
}

func (i DomainCertificateSettingsArgs) ToDomainCertificateSettingsPtrOutput() DomainCertificateSettingsPtrOutput {
	return i.ToDomainCertificateSettingsPtrOutputWithContext(context.Background())
}

func (i DomainCertificateSettingsArgs) ToDomainCertificateSettingsPtrOutputWithContext(ctx context.Context) DomainCertificateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCertificateSettingsOutput).ToDomainCertificateSettingsPtrOutputWithContext(ctx)
}

// DomainCertificateSettingsPtrInput is an input type that accepts DomainCertificateSettingsArgs, DomainCertificateSettingsPtr and DomainCertificateSettingsPtrOutput values.
// You can construct a concrete instance of `DomainCertificateSettingsPtrInput` via:
//
//	        DomainCertificateSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainCertificateSettingsPtrInput interface {
	pulumi.Input

	ToDomainCertificateSettingsPtrOutput() DomainCertificateSettingsPtrOutput
	ToDomainCertificateSettingsPtrOutputWithContext(context.Context) DomainCertificateSettingsPtrOutput
}

type domainCertificateSettingsPtrType DomainCertificateSettingsArgs

func DomainCertificateSettingsPtr(v *DomainCertificateSettingsArgs) DomainCertificateSettingsPtrInput {
	return (*domainCertificateSettingsPtrType)(v)
}

func (*domainCertificateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCertificateSettings)(nil)).Elem()
}

func (i *domainCertificateSettingsPtrType) ToDomainCertificateSettingsPtrOutput() DomainCertificateSettingsPtrOutput {
	return i.ToDomainCertificateSettingsPtrOutputWithContext(context.Background())
}

func (i *domainCertificateSettingsPtrType) ToDomainCertificateSettingsPtrOutputWithContext(ctx context.Context) DomainCertificateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCertificateSettingsPtrOutput)
}

type DomainCertificateSettingsOutput struct{ *pulumi.OutputState }

func (DomainCertificateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCertificateSettings)(nil)).Elem()
}

func (o DomainCertificateSettingsOutput) ToDomainCertificateSettingsOutput() DomainCertificateSettingsOutput {
	return o
}

func (o DomainCertificateSettingsOutput) ToDomainCertificateSettingsOutputWithContext(ctx context.Context) DomainCertificateSettingsOutput {
	return o
}

func (o DomainCertificateSettingsOutput) ToDomainCertificateSettingsPtrOutput() DomainCertificateSettingsPtrOutput {
	return o.ToDomainCertificateSettingsPtrOutputWithContext(context.Background())
}

func (o DomainCertificateSettingsOutput) ToDomainCertificateSettingsPtrOutputWithContext(ctx context.Context) DomainCertificateSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCertificateSettings) *DomainCertificateSettings {
		return &v
	}).(DomainCertificateSettingsPtrOutput)
}

// The certificate type.
//
// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
//
// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
func (o DomainCertificateSettingsOutput) CertificateType() DomainCertificateSettingsCertificateTypePtrOutput {
	return o.ApplyT(func(v DomainCertificateSettings) *DomainCertificateSettingsCertificateType { return v.CertificateType }).(DomainCertificateSettingsCertificateTypePtrOutput)
}

// The Amazon resource name (ARN) for the custom certificate that you have already added to AWS Certificate Manager in your AWS account .
//
// This field is required only when the certificate type is `CUSTOM` .
func (o DomainCertificateSettingsOutput) CustomCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCertificateSettings) *string { return v.CustomCertificateArn }).(pulumi.StringPtrOutput)
}

type DomainCertificateSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainCertificateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCertificateSettings)(nil)).Elem()
}

func (o DomainCertificateSettingsPtrOutput) ToDomainCertificateSettingsPtrOutput() DomainCertificateSettingsPtrOutput {
	return o
}

func (o DomainCertificateSettingsPtrOutput) ToDomainCertificateSettingsPtrOutputWithContext(ctx context.Context) DomainCertificateSettingsPtrOutput {
	return o
}

func (o DomainCertificateSettingsPtrOutput) Elem() DomainCertificateSettingsOutput {
	return o.ApplyT(func(v *DomainCertificateSettings) DomainCertificateSettings {
		if v != nil {
			return *v
		}
		var ret DomainCertificateSettings
		return ret
	}).(DomainCertificateSettingsOutput)
}

// The certificate type.
//
// Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify provisions for you.
//
// Specify `CUSTOM` to use your own certificate that you have already added to AWS Certificate Manager in your AWS account . Make sure you request (or import) the certificate in the US East (N. Virginia) Region (us-east-1). For more information about using ACM, see [Importing certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the *ACM User guide* .
func (o DomainCertificateSettingsPtrOutput) CertificateType() DomainCertificateSettingsCertificateTypePtrOutput {
	return o.ApplyT(func(v *DomainCertificateSettings) *DomainCertificateSettingsCertificateType {
		if v == nil {
			return nil
		}
		return v.CertificateType
	}).(DomainCertificateSettingsCertificateTypePtrOutput)
}

// The Amazon resource name (ARN) for the custom certificate that you have already added to AWS Certificate Manager in your AWS account .
//
// This field is required only when the certificate type is `CUSTOM` .
func (o DomainCertificateSettingsPtrOutput) CustomCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCertificateSettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomCertificateArn
	}).(pulumi.StringPtrOutput)
}

type DomainSubDomainSetting struct {
	// The branch name setting for the subdomain.
	//
	// *Length Constraints:* Minimum length of 1. Maximum length of 255.
	//
	// *Pattern:* (?s).+
	BranchName string `pulumi:"branchName"`
	// The prefix setting for the subdomain.
	Prefix string `pulumi:"prefix"`
}

// DomainSubDomainSettingInput is an input type that accepts DomainSubDomainSettingArgs and DomainSubDomainSettingOutput values.
// You can construct a concrete instance of `DomainSubDomainSettingInput` via:
//
//	DomainSubDomainSettingArgs{...}
type DomainSubDomainSettingInput interface {
	pulumi.Input

	ToDomainSubDomainSettingOutput() DomainSubDomainSettingOutput
	ToDomainSubDomainSettingOutputWithContext(context.Context) DomainSubDomainSettingOutput
}

type DomainSubDomainSettingArgs struct {
	// The branch name setting for the subdomain.
	//
	// *Length Constraints:* Minimum length of 1. Maximum length of 255.
	//
	// *Pattern:* (?s).+
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// The prefix setting for the subdomain.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (DomainSubDomainSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSubDomainSetting)(nil)).Elem()
}

func (i DomainSubDomainSettingArgs) ToDomainSubDomainSettingOutput() DomainSubDomainSettingOutput {
	return i.ToDomainSubDomainSettingOutputWithContext(context.Background())
}

func (i DomainSubDomainSettingArgs) ToDomainSubDomainSettingOutputWithContext(ctx context.Context) DomainSubDomainSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSubDomainSettingOutput)
}

// DomainSubDomainSettingArrayInput is an input type that accepts DomainSubDomainSettingArray and DomainSubDomainSettingArrayOutput values.
// You can construct a concrete instance of `DomainSubDomainSettingArrayInput` via:
//
//	DomainSubDomainSettingArray{ DomainSubDomainSettingArgs{...} }
type DomainSubDomainSettingArrayInput interface {
	pulumi.Input

	ToDomainSubDomainSettingArrayOutput() DomainSubDomainSettingArrayOutput
	ToDomainSubDomainSettingArrayOutputWithContext(context.Context) DomainSubDomainSettingArrayOutput
}

type DomainSubDomainSettingArray []DomainSubDomainSettingInput

func (DomainSubDomainSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSubDomainSetting)(nil)).Elem()
}

func (i DomainSubDomainSettingArray) ToDomainSubDomainSettingArrayOutput() DomainSubDomainSettingArrayOutput {
	return i.ToDomainSubDomainSettingArrayOutputWithContext(context.Background())
}

func (i DomainSubDomainSettingArray) ToDomainSubDomainSettingArrayOutputWithContext(ctx context.Context) DomainSubDomainSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSubDomainSettingArrayOutput)
}

type DomainSubDomainSettingOutput struct{ *pulumi.OutputState }

func (DomainSubDomainSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSubDomainSetting)(nil)).Elem()
}

func (o DomainSubDomainSettingOutput) ToDomainSubDomainSettingOutput() DomainSubDomainSettingOutput {
	return o
}

func (o DomainSubDomainSettingOutput) ToDomainSubDomainSettingOutputWithContext(ctx context.Context) DomainSubDomainSettingOutput {
	return o
}

// The branch name setting for the subdomain.
//
// *Length Constraints:* Minimum length of 1. Maximum length of 255.
//
// *Pattern:* (?s).+
func (o DomainSubDomainSettingOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSubDomainSetting) string { return v.BranchName }).(pulumi.StringOutput)
}

// The prefix setting for the subdomain.
func (o DomainSubDomainSettingOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSubDomainSetting) string { return v.Prefix }).(pulumi.StringOutput)
}

type DomainSubDomainSettingArrayOutput struct{ *pulumi.OutputState }

func (DomainSubDomainSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainSubDomainSetting)(nil)).Elem()
}

func (o DomainSubDomainSettingArrayOutput) ToDomainSubDomainSettingArrayOutput() DomainSubDomainSettingArrayOutput {
	return o
}

func (o DomainSubDomainSettingArrayOutput) ToDomainSubDomainSettingArrayOutputWithContext(ctx context.Context) DomainSubDomainSettingArrayOutput {
	return o
}

func (o DomainSubDomainSettingArrayOutput) Index(i pulumi.IntInput) DomainSubDomainSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainSubDomainSetting {
		return vs[0].([]DomainSubDomainSetting)[vs[1].(int)]
	}).(DomainSubDomainSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAutoBranchCreationConfigInput)(nil)).Elem(), AppAutoBranchCreationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAutoBranchCreationConfigPtrInput)(nil)).Elem(), AppAutoBranchCreationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBasicAuthConfigInput)(nil)).Elem(), AppBasicAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppBasicAuthConfigPtrInput)(nil)).Elem(), AppBasicAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCacheConfigInput)(nil)).Elem(), AppCacheConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCacheConfigPtrInput)(nil)).Elem(), AppCacheConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCustomRuleInput)(nil)).Elem(), AppCustomRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCustomRuleArrayInput)(nil)).Elem(), AppCustomRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEnvironmentVariableInput)(nil)).Elem(), AppEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppEnvironmentVariableArrayInput)(nil)).Elem(), AppEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppJobConfigInput)(nil)).Elem(), AppJobConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppJobConfigPtrInput)(nil)).Elem(), AppJobConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchBackendInput)(nil)).Elem(), BranchBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchBackendPtrInput)(nil)).Elem(), BranchBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchBasicAuthConfigInput)(nil)).Elem(), BranchBasicAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchBasicAuthConfigPtrInput)(nil)).Elem(), BranchBasicAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchEnvironmentVariableInput)(nil)).Elem(), BranchEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchEnvironmentVariableArrayInput)(nil)).Elem(), BranchEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCertificateSettingsInput)(nil)).Elem(), DomainCertificateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCertificateSettingsPtrInput)(nil)).Elem(), DomainCertificateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSubDomainSettingInput)(nil)).Elem(), DomainSubDomainSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSubDomainSettingArrayInput)(nil)).Elem(), DomainSubDomainSettingArray{})
	pulumi.RegisterOutputType(AppAutoBranchCreationConfigOutput{})
	pulumi.RegisterOutputType(AppAutoBranchCreationConfigPtrOutput{})
	pulumi.RegisterOutputType(AppBasicAuthConfigOutput{})
	pulumi.RegisterOutputType(AppBasicAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(AppCacheConfigOutput{})
	pulumi.RegisterOutputType(AppCacheConfigPtrOutput{})
	pulumi.RegisterOutputType(AppCustomRuleOutput{})
	pulumi.RegisterOutputType(AppCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(AppEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(AppEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(AppJobConfigOutput{})
	pulumi.RegisterOutputType(AppJobConfigPtrOutput{})
	pulumi.RegisterOutputType(BranchBackendOutput{})
	pulumi.RegisterOutputType(BranchBackendPtrOutput{})
	pulumi.RegisterOutputType(BranchBasicAuthConfigOutput{})
	pulumi.RegisterOutputType(BranchBasicAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(BranchEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(BranchEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(DomainCertificateOutput{})
	pulumi.RegisterOutputType(DomainCertificatePtrOutput{})
	pulumi.RegisterOutputType(DomainCertificateSettingsOutput{})
	pulumi.RegisterOutputType(DomainCertificateSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainSubDomainSettingOutput{})
	pulumi.RegisterOutputType(DomainSubDomainSettingArrayOutput{})
}
