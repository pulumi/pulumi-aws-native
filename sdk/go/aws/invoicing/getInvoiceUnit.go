// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package invoicing

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An invoice unit is a set of mutually exclusive accounts that correspond to your business entity. Invoice units allow you to separate AWS account costs and configures your invoice for each business entity.
func LookupInvoiceUnit(ctx *pulumi.Context, args *LookupInvoiceUnitArgs, opts ...pulumi.InvokeOption) (*LookupInvoiceUnitResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInvoiceUnitResult
	err := ctx.Invoke("aws-native:invoicing:getInvoiceUnit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInvoiceUnitArgs struct {
	InvoiceUnitArn string `pulumi:"invoiceUnitArn"`
}

type LookupInvoiceUnitResult struct {
	Description            *string          `pulumi:"description"`
	InvoiceUnitArn         *string          `pulumi:"invoiceUnitArn"`
	LastModified           *float64         `pulumi:"lastModified"`
	ResourceTags           []aws.Tag        `pulumi:"resourceTags"`
	Rule                   *InvoiceUnitRule `pulumi:"rule"`
	TaxInheritanceDisabled *bool            `pulumi:"taxInheritanceDisabled"`
}

func LookupInvoiceUnitOutput(ctx *pulumi.Context, args LookupInvoiceUnitOutputArgs, opts ...pulumi.InvokeOption) LookupInvoiceUnitResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInvoiceUnitResultOutput, error) {
			args := v.(LookupInvoiceUnitArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupInvoiceUnitResult
			secret, err := ctx.InvokePackageRaw("aws-native:invoicing:getInvoiceUnit", args, &rv, "", opts...)
			if err != nil {
				return LookupInvoiceUnitResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupInvoiceUnitResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupInvoiceUnitResultOutput), nil
			}
			return output, nil
		}).(LookupInvoiceUnitResultOutput)
}

type LookupInvoiceUnitOutputArgs struct {
	InvoiceUnitArn pulumi.StringInput `pulumi:"invoiceUnitArn"`
}

func (LookupInvoiceUnitOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvoiceUnitArgs)(nil)).Elem()
}

type LookupInvoiceUnitResultOutput struct{ *pulumi.OutputState }

func (LookupInvoiceUnitResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvoiceUnitResult)(nil)).Elem()
}

func (o LookupInvoiceUnitResultOutput) ToLookupInvoiceUnitResultOutput() LookupInvoiceUnitResultOutput {
	return o
}

func (o LookupInvoiceUnitResultOutput) ToLookupInvoiceUnitResultOutputWithContext(ctx context.Context) LookupInvoiceUnitResultOutput {
	return o
}

func (o LookupInvoiceUnitResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupInvoiceUnitResultOutput) InvoiceUnitArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) *string { return v.InvoiceUnitArn }).(pulumi.StringPtrOutput)
}

func (o LookupInvoiceUnitResultOutput) LastModified() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) *float64 { return v.LastModified }).(pulumi.Float64PtrOutput)
}

func (o LookupInvoiceUnitResultOutput) ResourceTags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) []aws.Tag { return v.ResourceTags }).(aws.TagArrayOutput)
}

func (o LookupInvoiceUnitResultOutput) Rule() InvoiceUnitRulePtrOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) *InvoiceUnitRule { return v.Rule }).(InvoiceUnitRulePtrOutput)
}

func (o LookupInvoiceUnitResultOutput) TaxInheritanceDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInvoiceUnitResult) *bool { return v.TaxInheritanceDisabled }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInvoiceUnitResultOutput{})
}
