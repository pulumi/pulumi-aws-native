// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package invoicing

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An invoice unit is a set of mutually exclusive accounts that correspond to your business entity. Invoice units allow you to separate AWS account costs and configures your invoice for each business entity.
type InvoiceUnit struct {
	pulumi.CustomResourceState

	Description            pulumi.StringPtrOutput `pulumi:"description"`
	InvoiceReceiver        pulumi.StringOutput    `pulumi:"invoiceReceiver"`
	InvoiceUnitArn         pulumi.StringOutput    `pulumi:"invoiceUnitArn"`
	LastModified           pulumi.Float64Output   `pulumi:"lastModified"`
	Name                   pulumi.StringOutput    `pulumi:"name"`
	ResourceTags           aws.TagArrayOutput     `pulumi:"resourceTags"`
	Rule                   InvoiceUnitRuleOutput  `pulumi:"rule"`
	TaxInheritanceDisabled pulumi.BoolPtrOutput   `pulumi:"taxInheritanceDisabled"`
}

// NewInvoiceUnit registers a new resource with the given unique name, arguments, and options.
func NewInvoiceUnit(ctx *pulumi.Context,
	name string, args *InvoiceUnitArgs, opts ...pulumi.ResourceOption) (*InvoiceUnit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InvoiceReceiver == nil {
		return nil, errors.New("invalid value for required argument 'InvoiceReceiver'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"invoiceReceiver",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InvoiceUnit
	err := ctx.RegisterResource("aws-native:invoicing:InvoiceUnit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvoiceUnit gets an existing InvoiceUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvoiceUnit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvoiceUnitState, opts ...pulumi.ResourceOption) (*InvoiceUnit, error) {
	var resource InvoiceUnit
	err := ctx.ReadResource("aws-native:invoicing:InvoiceUnit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvoiceUnit resources.
type invoiceUnitState struct {
}

type InvoiceUnitState struct {
}

func (InvoiceUnitState) ElementType() reflect.Type {
	return reflect.TypeOf((*invoiceUnitState)(nil)).Elem()
}

type invoiceUnitArgs struct {
	Description            *string         `pulumi:"description"`
	InvoiceReceiver        string          `pulumi:"invoiceReceiver"`
	Name                   *string         `pulumi:"name"`
	ResourceTags           []aws.Tag       `pulumi:"resourceTags"`
	Rule                   InvoiceUnitRule `pulumi:"rule"`
	TaxInheritanceDisabled *bool           `pulumi:"taxInheritanceDisabled"`
}

// The set of arguments for constructing a InvoiceUnit resource.
type InvoiceUnitArgs struct {
	Description            pulumi.StringPtrInput
	InvoiceReceiver        pulumi.StringInput
	Name                   pulumi.StringPtrInput
	ResourceTags           aws.TagArrayInput
	Rule                   InvoiceUnitRuleInput
	TaxInheritanceDisabled pulumi.BoolPtrInput
}

func (InvoiceUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invoiceUnitArgs)(nil)).Elem()
}

type InvoiceUnitInput interface {
	pulumi.Input

	ToInvoiceUnitOutput() InvoiceUnitOutput
	ToInvoiceUnitOutputWithContext(ctx context.Context) InvoiceUnitOutput
}

func (*InvoiceUnit) ElementType() reflect.Type {
	return reflect.TypeOf((**InvoiceUnit)(nil)).Elem()
}

func (i *InvoiceUnit) ToInvoiceUnitOutput() InvoiceUnitOutput {
	return i.ToInvoiceUnitOutputWithContext(context.Background())
}

func (i *InvoiceUnit) ToInvoiceUnitOutputWithContext(ctx context.Context) InvoiceUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvoiceUnitOutput)
}

type InvoiceUnitOutput struct{ *pulumi.OutputState }

func (InvoiceUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvoiceUnit)(nil)).Elem()
}

func (o InvoiceUnitOutput) ToInvoiceUnitOutput() InvoiceUnitOutput {
	return o
}

func (o InvoiceUnitOutput) ToInvoiceUnitOutputWithContext(ctx context.Context) InvoiceUnitOutput {
	return o
}

func (o InvoiceUnitOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InvoiceUnitOutput) InvoiceReceiver() pulumi.StringOutput {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.StringOutput { return v.InvoiceReceiver }).(pulumi.StringOutput)
}

func (o InvoiceUnitOutput) InvoiceUnitArn() pulumi.StringOutput {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.StringOutput { return v.InvoiceUnitArn }).(pulumi.StringOutput)
}

func (o InvoiceUnitOutput) LastModified() pulumi.Float64Output {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.Float64Output { return v.LastModified }).(pulumi.Float64Output)
}

func (o InvoiceUnitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o InvoiceUnitOutput) ResourceTags() aws.TagArrayOutput {
	return o.ApplyT(func(v *InvoiceUnit) aws.TagArrayOutput { return v.ResourceTags }).(aws.TagArrayOutput)
}

func (o InvoiceUnitOutput) Rule() InvoiceUnitRuleOutput {
	return o.ApplyT(func(v *InvoiceUnit) InvoiceUnitRuleOutput { return v.Rule }).(InvoiceUnitRuleOutput)
}

func (o InvoiceUnitOutput) TaxInheritanceDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvoiceUnit) pulumi.BoolPtrOutput { return v.TaxInheritanceDisabled }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvoiceUnitInput)(nil)).Elem(), &InvoiceUnit{})
	pulumi.RegisterOutputType(InvoiceUnitOutput{})
}
