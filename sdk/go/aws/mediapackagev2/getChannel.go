// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackagev2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// <p>Represents an entry point into AWS Elemental MediaPackage for an ABR video content stream sent from an upstream encoder such as AWS Elemental MediaLive. The channel continuously analyzes the content that it receives and prepares it to be distributed to consumers via one or more origin endpoints.</p>
func LookupChannel(ctx *pulumi.Context, args *LookupChannelArgs, opts ...pulumi.InvokeOption) (*LookupChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupChannelResult
	err := ctx.Invoke("aws-native:mediapackagev2:getChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupChannelArgs struct {
	// <p>The Amazon Resource Name (ARN) associated with the resource.</p>
	Arn string `pulumi:"arn"`
}

type LookupChannelResult struct {
	// <p>The Amazon Resource Name (ARN) associated with the resource.</p>
	Arn *string `pulumi:"arn"`
	// <p>The date and time the channel was created.</p>
	CreatedAt *string `pulumi:"createdAt"`
	// <p>Enter any descriptive text that helps you to identify the channel.</p>
	Description *string `pulumi:"description"`
	// <p>The list of ingest endpoints.</p>
	IngestEndpoints []ChannelIngestEndpoint `pulumi:"ingestEndpoints"`
	// <p>The date and time the channel was modified.</p>
	ModifiedAt *string   `pulumi:"modifiedAt"`
	Tags       []aws.Tag `pulumi:"tags"`
}

func LookupChannelOutput(ctx *pulumi.Context, args LookupChannelOutputArgs, opts ...pulumi.InvokeOption) LookupChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupChannelResult, error) {
			args := v.(LookupChannelArgs)
			r, err := LookupChannel(ctx, &args, opts...)
			var s LookupChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupChannelResultOutput)
}

type LookupChannelOutputArgs struct {
	// <p>The Amazon Resource Name (ARN) associated with the resource.</p>
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelArgs)(nil)).Elem()
}

type LookupChannelResultOutput struct{ *pulumi.OutputState }

func (LookupChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupChannelResult)(nil)).Elem()
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutput() LookupChannelResultOutput {
	return o
}

func (o LookupChannelResultOutput) ToLookupChannelResultOutputWithContext(ctx context.Context) LookupChannelResultOutput {
	return o
}

// <p>The Amazon Resource Name (ARN) associated with the resource.</p>
func (o LookupChannelResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// <p>The date and time the channel was created.</p>
func (o LookupChannelResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// <p>Enter any descriptive text that helps you to identify the channel.</p>
func (o LookupChannelResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>The list of ingest endpoints.</p>
func (o LookupChannelResultOutput) IngestEndpoints() ChannelIngestEndpointArrayOutput {
	return o.ApplyT(func(v LookupChannelResult) []ChannelIngestEndpoint { return v.IngestEndpoints }).(ChannelIngestEndpointArrayOutput)
}

// <p>The date and time the channel was modified.</p>
func (o LookupChannelResultOutput) ModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupChannelResult) *string { return v.ModifiedAt }).(pulumi.StringPtrOutput)
}

func (o LookupChannelResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupChannelResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupChannelResultOutput{})
}
