// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackagev2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::MediaPackageV2::OriginEndpointPolicy Resource Type
type OriginEndpointPolicy struct {
	pulumi.CustomResourceState

	ChannelGroupName   pulumi.StringPtrOutput `pulumi:"channelGroupName"`
	ChannelName        pulumi.StringPtrOutput `pulumi:"channelName"`
	OriginEndpointName pulumi.StringPtrOutput `pulumi:"originEndpointName"`
	Policy             pulumi.AnyOutput       `pulumi:"policy"`
}

// NewOriginEndpointPolicy registers a new resource with the given unique name, arguments, and options.
func NewOriginEndpointPolicy(ctx *pulumi.Context,
	name string, args *OriginEndpointPolicyArgs, opts ...pulumi.ResourceOption) (*OriginEndpointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"channelGroupName",
		"channelName",
		"originEndpointName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginEndpointPolicy
	err := ctx.RegisterResource("aws-native:mediapackagev2:OriginEndpointPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginEndpointPolicy gets an existing OriginEndpointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginEndpointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginEndpointPolicyState, opts ...pulumi.ResourceOption) (*OriginEndpointPolicy, error) {
	var resource OriginEndpointPolicy
	err := ctx.ReadResource("aws-native:mediapackagev2:OriginEndpointPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginEndpointPolicy resources.
type originEndpointPolicyState struct {
}

type OriginEndpointPolicyState struct {
}

func (OriginEndpointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*originEndpointPolicyState)(nil)).Elem()
}

type originEndpointPolicyArgs struct {
	ChannelGroupName   *string     `pulumi:"channelGroupName"`
	ChannelName        *string     `pulumi:"channelName"`
	OriginEndpointName *string     `pulumi:"originEndpointName"`
	Policy             interface{} `pulumi:"policy"`
}

// The set of arguments for constructing a OriginEndpointPolicy resource.
type OriginEndpointPolicyArgs struct {
	ChannelGroupName   pulumi.StringPtrInput
	ChannelName        pulumi.StringPtrInput
	OriginEndpointName pulumi.StringPtrInput
	Policy             pulumi.Input
}

func (OriginEndpointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originEndpointPolicyArgs)(nil)).Elem()
}

type OriginEndpointPolicyInput interface {
	pulumi.Input

	ToOriginEndpointPolicyOutput() OriginEndpointPolicyOutput
	ToOriginEndpointPolicyOutputWithContext(ctx context.Context) OriginEndpointPolicyOutput
}

func (*OriginEndpointPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointPolicy)(nil)).Elem()
}

func (i *OriginEndpointPolicy) ToOriginEndpointPolicyOutput() OriginEndpointPolicyOutput {
	return i.ToOriginEndpointPolicyOutputWithContext(context.Background())
}

func (i *OriginEndpointPolicy) ToOriginEndpointPolicyOutputWithContext(ctx context.Context) OriginEndpointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginEndpointPolicyOutput)
}

func (i *OriginEndpointPolicy) ToOutput(ctx context.Context) pulumix.Output[*OriginEndpointPolicy] {
	return pulumix.Output[*OriginEndpointPolicy]{
		OutputState: i.ToOriginEndpointPolicyOutputWithContext(ctx).OutputState,
	}
}

type OriginEndpointPolicyOutput struct{ *pulumi.OutputState }

func (OriginEndpointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginEndpointPolicy)(nil)).Elem()
}

func (o OriginEndpointPolicyOutput) ToOriginEndpointPolicyOutput() OriginEndpointPolicyOutput {
	return o
}

func (o OriginEndpointPolicyOutput) ToOriginEndpointPolicyOutputWithContext(ctx context.Context) OriginEndpointPolicyOutput {
	return o
}

func (o OriginEndpointPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*OriginEndpointPolicy] {
	return pulumix.Output[*OriginEndpointPolicy]{
		OutputState: o.OutputState,
	}
}

func (o OriginEndpointPolicyOutput) ChannelGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointPolicy) pulumi.StringPtrOutput { return v.ChannelGroupName }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointPolicyOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointPolicy) pulumi.StringPtrOutput { return v.ChannelName }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointPolicyOutput) OriginEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginEndpointPolicy) pulumi.StringPtrOutput { return v.OriginEndpointName }).(pulumi.StringPtrOutput)
}

func (o OriginEndpointPolicyOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v *OriginEndpointPolicy) pulumi.AnyOutput { return v.Policy }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginEndpointPolicyInput)(nil)).Elem(), &OriginEndpointPolicy{})
	pulumi.RegisterOutputType(OriginEndpointPolicyOutput{})
}
