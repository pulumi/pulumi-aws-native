// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scheduler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Scheduler::ScheduleGroup Resource Type
type ScheduleGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the schedule group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The time at which the schedule group was created.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// The time at which the schedule group was last modified.
	LastModificationDate pulumi.StringOutput          `pulumi:"lastModificationDate"`
	Name                 pulumi.StringPtrOutput       `pulumi:"name"`
	State                ScheduleGroupStateEnumOutput `pulumi:"state"`
	// The list of tags to associate with the schedule group.
	Tags ScheduleGroupTagArrayOutput `pulumi:"tags"`
}

// NewScheduleGroup registers a new resource with the given unique name, arguments, and options.
func NewScheduleGroup(ctx *pulumi.Context,
	name string, args *ScheduleGroupArgs, opts ...pulumi.ResourceOption) (*ScheduleGroup, error) {
	if args == nil {
		args = &ScheduleGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScheduleGroup
	err := ctx.RegisterResource("aws-native:scheduler:ScheduleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduleGroup gets an existing ScheduleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduleGroupState, opts ...pulumi.ResourceOption) (*ScheduleGroup, error) {
	var resource ScheduleGroup
	err := ctx.ReadResource("aws-native:scheduler:ScheduleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduleGroup resources.
type scheduleGroupState struct {
}

type ScheduleGroupState struct {
}

func (ScheduleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleGroupState)(nil)).Elem()
}

type scheduleGroupArgs struct {
	Name *string `pulumi:"name"`
	// The list of tags to associate with the schedule group.
	Tags []ScheduleGroupTag `pulumi:"tags"`
}

// The set of arguments for constructing a ScheduleGroup resource.
type ScheduleGroupArgs struct {
	Name pulumi.StringPtrInput
	// The list of tags to associate with the schedule group.
	Tags ScheduleGroupTagArrayInput
}

func (ScheduleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleGroupArgs)(nil)).Elem()
}

type ScheduleGroupInput interface {
	pulumi.Input

	ToScheduleGroupOutput() ScheduleGroupOutput
	ToScheduleGroupOutputWithContext(ctx context.Context) ScheduleGroupOutput
}

func (*ScheduleGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleGroup)(nil)).Elem()
}

func (i *ScheduleGroup) ToScheduleGroupOutput() ScheduleGroupOutput {
	return i.ToScheduleGroupOutputWithContext(context.Background())
}

func (i *ScheduleGroup) ToScheduleGroupOutputWithContext(ctx context.Context) ScheduleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleGroupOutput)
}

type ScheduleGroupOutput struct{ *pulumi.OutputState }

func (ScheduleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleGroup)(nil)).Elem()
}

func (o ScheduleGroupOutput) ToScheduleGroupOutput() ScheduleGroupOutput {
	return o
}

func (o ScheduleGroupOutput) ToScheduleGroupOutputWithContext(ctx context.Context) ScheduleGroupOutput {
	return o
}

// The Amazon Resource Name (ARN) of the schedule group.
func (o ScheduleGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduleGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The time at which the schedule group was created.
func (o ScheduleGroupOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduleGroup) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

// The time at which the schedule group was last modified.
func (o ScheduleGroupOutput) LastModificationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduleGroup) pulumi.StringOutput { return v.LastModificationDate }).(pulumi.StringOutput)
}

func (o ScheduleGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleGroup) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScheduleGroupOutput) State() ScheduleGroupStateEnumOutput {
	return o.ApplyT(func(v *ScheduleGroup) ScheduleGroupStateEnumOutput { return v.State }).(ScheduleGroupStateEnumOutput)
}

// The list of tags to associate with the schedule group.
func (o ScheduleGroupOutput) Tags() ScheduleGroupTagArrayOutput {
	return o.ApplyT(func(v *ScheduleGroup) ScheduleGroupTagArrayOutput { return v.Tags }).(ScheduleGroupTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleGroupInput)(nil)).Elem(), &ScheduleGroup{})
	pulumi.RegisterOutputType(ScheduleGroupOutput{})
}
