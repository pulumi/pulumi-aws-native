// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Transfer::Server
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	var rv LookupServerResult
	err := ctx.Invoke("aws-native:transfer:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerArgs struct {
	ServerId string `pulumi:"serverId"`
}

type LookupServerResult struct {
	Arn                           *string                        `pulumi:"arn"`
	Certificate                   *string                        `pulumi:"certificate"`
	EndpointDetails               *ServerEndpointDetails         `pulumi:"endpointDetails"`
	EndpointType                  *string                        `pulumi:"endpointType"`
	IdentityProviderDetails       *ServerIdentityProviderDetails `pulumi:"identityProviderDetails"`
	LoggingRole                   *string                        `pulumi:"loggingRole"`
	PostAuthenticationLoginBanner *string                        `pulumi:"postAuthenticationLoginBanner"`
	PreAuthenticationLoginBanner  *string                        `pulumi:"preAuthenticationLoginBanner"`
	ProtocolDetails               *ServerProtocolDetails         `pulumi:"protocolDetails"`
	Protocols                     []ServerProtocol               `pulumi:"protocols"`
	SecurityPolicyName            *string                        `pulumi:"securityPolicyName"`
	ServerId                      *string                        `pulumi:"serverId"`
	Tags                          []ServerTag                    `pulumi:"tags"`
	WorkflowDetails               *ServerWorkflowDetails         `pulumi:"workflowDetails"`
}

func LookupServerOutput(ctx *pulumi.Context, args LookupServerOutputArgs, opts ...pulumi.InvokeOption) LookupServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerResult, error) {
			args := v.(LookupServerArgs)
			r, err := LookupServer(ctx, &args, opts...)
			return *r, err
		}).(LookupServerResultOutput)
}

type LookupServerOutputArgs struct {
	ServerId pulumi.StringInput `pulumi:"serverId"`
}

func (LookupServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerArgs)(nil)).Elem()
}

type LookupServerResultOutput struct{ *pulumi.OutputState }

func (LookupServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerResult)(nil)).Elem()
}

func (o LookupServerResultOutput) ToLookupServerResultOutput() LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) ToLookupServerResultOutputWithContext(ctx context.Context) LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) EndpointDetails() ServerEndpointDetailsPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *ServerEndpointDetails { return v.EndpointDetails }).(ServerEndpointDetailsPtrOutput)
}

func (o LookupServerResultOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.EndpointType }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) IdentityProviderDetails() ServerIdentityProviderDetailsPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *ServerIdentityProviderDetails { return v.IdentityProviderDetails }).(ServerIdentityProviderDetailsPtrOutput)
}

func (o LookupServerResultOutput) LoggingRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.LoggingRole }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) PostAuthenticationLoginBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.PostAuthenticationLoginBanner }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) PreAuthenticationLoginBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.PreAuthenticationLoginBanner }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) ProtocolDetails() ServerProtocolDetailsPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *ServerProtocolDetails { return v.ProtocolDetails }).(ServerProtocolDetailsPtrOutput)
}

func (o LookupServerResultOutput) Protocols() ServerProtocolArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []ServerProtocol { return v.Protocols }).(ServerProtocolArrayOutput)
}

func (o LookupServerResultOutput) SecurityPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.SecurityPolicyName }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) Tags() ServerTagArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []ServerTag { return v.Tags }).(ServerTagArrayOutput)
}

func (o LookupServerResultOutput) WorkflowDetails() ServerWorkflowDetailsPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *ServerWorkflowDetails { return v.WorkflowDetails }).(ServerWorkflowDetailsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerResultOutput{})
}
