// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerEndpointDetails struct {
	AddressAllocationIds []string `pulumi:"addressAllocationIds"`
	SecurityGroupIds     []string `pulumi:"securityGroupIds"`
	SubnetIds            []string `pulumi:"subnetIds"`
	VpcEndpointId        *string  `pulumi:"vpcEndpointId"`
	VpcId                *string  `pulumi:"vpcId"`
}

// ServerEndpointDetailsInput is an input type that accepts ServerEndpointDetailsArgs and ServerEndpointDetailsOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsInput` via:
//
//          ServerEndpointDetailsArgs{...}
type ServerEndpointDetailsInput interface {
	pulumi.Input

	ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput
	ToServerEndpointDetailsOutputWithContext(context.Context) ServerEndpointDetailsOutput
}

type ServerEndpointDetailsArgs struct {
	AddressAllocationIds pulumi.StringArrayInput `pulumi:"addressAllocationIds"`
	SecurityGroupIds     pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds            pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcEndpointId        pulumi.StringPtrInput   `pulumi:"vpcEndpointId"`
	VpcId                pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (ServerEndpointDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return i.ToServerEndpointDetailsOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput)
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput).ToServerEndpointDetailsPtrOutputWithContext(ctx)
}

// ServerEndpointDetailsPtrInput is an input type that accepts ServerEndpointDetailsArgs, ServerEndpointDetailsPtr and ServerEndpointDetailsPtrOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsPtrInput` via:
//
//          ServerEndpointDetailsArgs{...}
//
//  or:
//
//          nil
type ServerEndpointDetailsPtrInput interface {
	pulumi.Input

	ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput
	ToServerEndpointDetailsPtrOutputWithContext(context.Context) ServerEndpointDetailsPtrOutput
}

type serverEndpointDetailsPtrType ServerEndpointDetailsArgs

func ServerEndpointDetailsPtr(v *ServerEndpointDetailsArgs) ServerEndpointDetailsPtrInput {
	return (*serverEndpointDetailsPtrType)(v)
}

func (*serverEndpointDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsPtrOutput)
}

type ServerEndpointDetailsOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerEndpointDetails) *ServerEndpointDetails {
		return &v
	}).(ServerEndpointDetailsPtrOutput)
}

func (o ServerEndpointDetailsOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.AddressAllocationIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

func (o ServerEndpointDetailsOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ServerEndpointDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) Elem() ServerEndpointDetailsOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) ServerEndpointDetails {
		if v != nil {
			return *v
		}
		var ret ServerEndpointDetails
		return ret
	}).(ServerEndpointDetailsOutput)
}

func (o ServerEndpointDetailsPtrOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.AddressAllocationIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

func (o ServerEndpointDetailsPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type ServerIdentityProviderDetails struct {
	DirectoryId    *string `pulumi:"directoryId"`
	Function       *string `pulumi:"function"`
	InvocationRole *string `pulumi:"invocationRole"`
	Url            *string `pulumi:"url"`
}

// ServerIdentityProviderDetailsInput is an input type that accepts ServerIdentityProviderDetailsArgs and ServerIdentityProviderDetailsOutput values.
// You can construct a concrete instance of `ServerIdentityProviderDetailsInput` via:
//
//          ServerIdentityProviderDetailsArgs{...}
type ServerIdentityProviderDetailsInput interface {
	pulumi.Input

	ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput
	ToServerIdentityProviderDetailsOutputWithContext(context.Context) ServerIdentityProviderDetailsOutput
}

type ServerIdentityProviderDetailsArgs struct {
	DirectoryId    pulumi.StringPtrInput `pulumi:"directoryId"`
	Function       pulumi.StringPtrInput `pulumi:"function"`
	InvocationRole pulumi.StringPtrInput `pulumi:"invocationRole"`
	Url            pulumi.StringPtrInput `pulumi:"url"`
}

func (ServerIdentityProviderDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentityProviderDetails)(nil)).Elem()
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput {
	return i.ToServerIdentityProviderDetailsOutputWithContext(context.Background())
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsOutput)
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return i.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsOutput).ToServerIdentityProviderDetailsPtrOutputWithContext(ctx)
}

// ServerIdentityProviderDetailsPtrInput is an input type that accepts ServerIdentityProviderDetailsArgs, ServerIdentityProviderDetailsPtr and ServerIdentityProviderDetailsPtrOutput values.
// You can construct a concrete instance of `ServerIdentityProviderDetailsPtrInput` via:
//
//          ServerIdentityProviderDetailsArgs{...}
//
//  or:
//
//          nil
type ServerIdentityProviderDetailsPtrInput interface {
	pulumi.Input

	ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput
	ToServerIdentityProviderDetailsPtrOutputWithContext(context.Context) ServerIdentityProviderDetailsPtrOutput
}

type serverIdentityProviderDetailsPtrType ServerIdentityProviderDetailsArgs

func ServerIdentityProviderDetailsPtr(v *ServerIdentityProviderDetailsArgs) ServerIdentityProviderDetailsPtrInput {
	return (*serverIdentityProviderDetailsPtrType)(v)
}

func (*serverIdentityProviderDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentityProviderDetails)(nil)).Elem()
}

func (i *serverIdentityProviderDetailsPtrType) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return i.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (i *serverIdentityProviderDetailsPtrType) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsPtrOutput)
}

type ServerIdentityProviderDetailsOutput struct{ *pulumi.OutputState }

func (ServerIdentityProviderDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentityProviderDetails)(nil)).Elem()
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput {
	return o
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsOutput {
	return o
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return o.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerIdentityProviderDetails) *ServerIdentityProviderDetails {
		return &v
	}).(ServerIdentityProviderDetailsPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.Function }).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) InvocationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.InvocationRole }).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ServerIdentityProviderDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerIdentityProviderDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentityProviderDetails)(nil)).Elem()
}

func (o ServerIdentityProviderDetailsPtrOutput) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return o
}

func (o ServerIdentityProviderDetailsPtrOutput) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return o
}

func (o ServerIdentityProviderDetailsPtrOutput) Elem() ServerIdentityProviderDetailsOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) ServerIdentityProviderDetails {
		if v != nil {
			return *v
		}
		var ret ServerIdentityProviderDetails
		return ret
	}).(ServerIdentityProviderDetailsOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryId
	}).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.Function
	}).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) InvocationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.InvocationRole
	}).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ServerProtocol struct {
}

// ServerProtocolInput is an input type that accepts ServerProtocolArgs and ServerProtocolOutput values.
// You can construct a concrete instance of `ServerProtocolInput` via:
//
//          ServerProtocolArgs{...}
type ServerProtocolInput interface {
	pulumi.Input

	ToServerProtocolOutput() ServerProtocolOutput
	ToServerProtocolOutputWithContext(context.Context) ServerProtocolOutput
}

type ServerProtocolArgs struct {
}

func (ServerProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocol)(nil)).Elem()
}

func (i ServerProtocolArgs) ToServerProtocolOutput() ServerProtocolOutput {
	return i.ToServerProtocolOutputWithContext(context.Background())
}

func (i ServerProtocolArgs) ToServerProtocolOutputWithContext(ctx context.Context) ServerProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolOutput)
}

// ServerProtocolArrayInput is an input type that accepts ServerProtocolArray and ServerProtocolArrayOutput values.
// You can construct a concrete instance of `ServerProtocolArrayInput` via:
//
//          ServerProtocolArray{ ServerProtocolArgs{...} }
type ServerProtocolArrayInput interface {
	pulumi.Input

	ToServerProtocolArrayOutput() ServerProtocolArrayOutput
	ToServerProtocolArrayOutputWithContext(context.Context) ServerProtocolArrayOutput
}

type ServerProtocolArray []ServerProtocolInput

func (ServerProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerProtocol)(nil)).Elem()
}

func (i ServerProtocolArray) ToServerProtocolArrayOutput() ServerProtocolArrayOutput {
	return i.ToServerProtocolArrayOutputWithContext(context.Background())
}

func (i ServerProtocolArray) ToServerProtocolArrayOutputWithContext(ctx context.Context) ServerProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolArrayOutput)
}

type ServerProtocolOutput struct{ *pulumi.OutputState }

func (ServerProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocol)(nil)).Elem()
}

func (o ServerProtocolOutput) ToServerProtocolOutput() ServerProtocolOutput {
	return o
}

func (o ServerProtocolOutput) ToServerProtocolOutputWithContext(ctx context.Context) ServerProtocolOutput {
	return o
}

type ServerProtocolArrayOutput struct{ *pulumi.OutputState }

func (ServerProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerProtocol)(nil)).Elem()
}

func (o ServerProtocolArrayOutput) ToServerProtocolArrayOutput() ServerProtocolArrayOutput {
	return o
}

func (o ServerProtocolArrayOutput) ToServerProtocolArrayOutputWithContext(ctx context.Context) ServerProtocolArrayOutput {
	return o
}

func (o ServerProtocolArrayOutput) Index(i pulumi.IntInput) ServerProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerProtocol {
		return vs[0].([]ServerProtocol)[vs[1].(int)]
	}).(ServerProtocolOutput)
}

type ServerProtocolDetails struct {
	PassiveIp *string `pulumi:"passiveIp"`
}

// ServerProtocolDetailsInput is an input type that accepts ServerProtocolDetailsArgs and ServerProtocolDetailsOutput values.
// You can construct a concrete instance of `ServerProtocolDetailsInput` via:
//
//          ServerProtocolDetailsArgs{...}
type ServerProtocolDetailsInput interface {
	pulumi.Input

	ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput
	ToServerProtocolDetailsOutputWithContext(context.Context) ServerProtocolDetailsOutput
}

type ServerProtocolDetailsArgs struct {
	PassiveIp pulumi.StringPtrInput `pulumi:"passiveIp"`
}

func (ServerProtocolDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocolDetails)(nil)).Elem()
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput {
	return i.ToServerProtocolDetailsOutputWithContext(context.Background())
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsOutputWithContext(ctx context.Context) ServerProtocolDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsOutput)
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return i.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsOutput).ToServerProtocolDetailsPtrOutputWithContext(ctx)
}

// ServerProtocolDetailsPtrInput is an input type that accepts ServerProtocolDetailsArgs, ServerProtocolDetailsPtr and ServerProtocolDetailsPtrOutput values.
// You can construct a concrete instance of `ServerProtocolDetailsPtrInput` via:
//
//          ServerProtocolDetailsArgs{...}
//
//  or:
//
//          nil
type ServerProtocolDetailsPtrInput interface {
	pulumi.Input

	ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput
	ToServerProtocolDetailsPtrOutputWithContext(context.Context) ServerProtocolDetailsPtrOutput
}

type serverProtocolDetailsPtrType ServerProtocolDetailsArgs

func ServerProtocolDetailsPtr(v *ServerProtocolDetailsArgs) ServerProtocolDetailsPtrInput {
	return (*serverProtocolDetailsPtrType)(v)
}

func (*serverProtocolDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerProtocolDetails)(nil)).Elem()
}

func (i *serverProtocolDetailsPtrType) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return i.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (i *serverProtocolDetailsPtrType) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsPtrOutput)
}

type ServerProtocolDetailsOutput struct{ *pulumi.OutputState }

func (ServerProtocolDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocolDetails)(nil)).Elem()
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput {
	return o
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsOutputWithContext(ctx context.Context) ServerProtocolDetailsOutput {
	return o
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return o.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerProtocolDetails) *ServerProtocolDetails {
		return &v
	}).(ServerProtocolDetailsPtrOutput)
}

func (o ServerProtocolDetailsOutput) PassiveIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProtocolDetails) *string { return v.PassiveIp }).(pulumi.StringPtrOutput)
}

type ServerProtocolDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerProtocolDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerProtocolDetails)(nil)).Elem()
}

func (o ServerProtocolDetailsPtrOutput) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return o
}

func (o ServerProtocolDetailsPtrOutput) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return o
}

func (o ServerProtocolDetailsPtrOutput) Elem() ServerProtocolDetailsOutput {
	return o.ApplyT(func(v *ServerProtocolDetails) ServerProtocolDetails {
		if v != nil {
			return *v
		}
		var ret ServerProtocolDetails
		return ret
	}).(ServerProtocolDetailsOutput)
}

func (o ServerProtocolDetailsPtrOutput) PassiveIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerProtocolDetails) *string {
		if v == nil {
			return nil
		}
		return v.PassiveIp
	}).(pulumi.StringPtrOutput)
}

type ServerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ServerTagInput is an input type that accepts ServerTagArgs and ServerTagOutput values.
// You can construct a concrete instance of `ServerTagInput` via:
//
//          ServerTagArgs{...}
type ServerTagInput interface {
	pulumi.Input

	ToServerTagOutput() ServerTagOutput
	ToServerTagOutputWithContext(context.Context) ServerTagOutput
}

type ServerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (i ServerTagArgs) ToServerTagOutput() ServerTagOutput {
	return i.ToServerTagOutputWithContext(context.Background())
}

func (i ServerTagArgs) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagOutput)
}

// ServerTagArrayInput is an input type that accepts ServerTagArray and ServerTagArrayOutput values.
// You can construct a concrete instance of `ServerTagArrayInput` via:
//
//          ServerTagArray{ ServerTagArgs{...} }
type ServerTagArrayInput interface {
	pulumi.Input

	ToServerTagArrayOutput() ServerTagArrayOutput
	ToServerTagArrayOutputWithContext(context.Context) ServerTagArrayOutput
}

type ServerTagArray []ServerTagInput

func (ServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (i ServerTagArray) ToServerTagArrayOutput() ServerTagArrayOutput {
	return i.ToServerTagArrayOutputWithContext(context.Background())
}

func (i ServerTagArray) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagArrayOutput)
}

type ServerTagOutput struct{ *pulumi.OutputState }

func (ServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (o ServerTagOutput) ToServerTagOutput() ServerTagOutput {
	return o
}

func (o ServerTagOutput) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return o
}

func (o ServerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Value }).(pulumi.StringOutput)
}

type ServerTagArrayOutput struct{ *pulumi.OutputState }

func (ServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (o ServerTagArrayOutput) ToServerTagArrayOutput() ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) Index(i pulumi.IntInput) ServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerTag {
		return vs[0].([]ServerTag)[vs[1].(int)]
	}).(ServerTagOutput)
}

type ServerWorkflowDetail struct {
	ExecutionRole string `pulumi:"executionRole"`
	WorkflowId    string `pulumi:"workflowId"`
}

// ServerWorkflowDetailInput is an input type that accepts ServerWorkflowDetailArgs and ServerWorkflowDetailOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailInput` via:
//
//          ServerWorkflowDetailArgs{...}
type ServerWorkflowDetailInput interface {
	pulumi.Input

	ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput
	ToServerWorkflowDetailOutputWithContext(context.Context) ServerWorkflowDetailOutput
}

type ServerWorkflowDetailArgs struct {
	ExecutionRole pulumi.StringInput `pulumi:"executionRole"`
	WorkflowId    pulumi.StringInput `pulumi:"workflowId"`
}

func (ServerWorkflowDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetail)(nil)).Elem()
}

func (i ServerWorkflowDetailArgs) ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput {
	return i.ToServerWorkflowDetailOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailArgs) ToServerWorkflowDetailOutputWithContext(ctx context.Context) ServerWorkflowDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailOutput)
}

// ServerWorkflowDetailArrayInput is an input type that accepts ServerWorkflowDetailArray and ServerWorkflowDetailArrayOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailArrayInput` via:
//
//          ServerWorkflowDetailArray{ ServerWorkflowDetailArgs{...} }
type ServerWorkflowDetailArrayInput interface {
	pulumi.Input

	ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput
	ToServerWorkflowDetailArrayOutputWithContext(context.Context) ServerWorkflowDetailArrayOutput
}

type ServerWorkflowDetailArray []ServerWorkflowDetailInput

func (ServerWorkflowDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerWorkflowDetail)(nil)).Elem()
}

func (i ServerWorkflowDetailArray) ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput {
	return i.ToServerWorkflowDetailArrayOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailArray) ToServerWorkflowDetailArrayOutputWithContext(ctx context.Context) ServerWorkflowDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailArrayOutput)
}

type ServerWorkflowDetailOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetail)(nil)).Elem()
}

func (o ServerWorkflowDetailOutput) ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput {
	return o
}

func (o ServerWorkflowDetailOutput) ToServerWorkflowDetailOutputWithContext(ctx context.Context) ServerWorkflowDetailOutput {
	return o
}

func (o ServerWorkflowDetailOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v ServerWorkflowDetail) string { return v.ExecutionRole }).(pulumi.StringOutput)
}

func (o ServerWorkflowDetailOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerWorkflowDetail) string { return v.WorkflowId }).(pulumi.StringOutput)
}

type ServerWorkflowDetailArrayOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerWorkflowDetail)(nil)).Elem()
}

func (o ServerWorkflowDetailArrayOutput) ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput {
	return o
}

func (o ServerWorkflowDetailArrayOutput) ToServerWorkflowDetailArrayOutputWithContext(ctx context.Context) ServerWorkflowDetailArrayOutput {
	return o
}

func (o ServerWorkflowDetailArrayOutput) Index(i pulumi.IntInput) ServerWorkflowDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerWorkflowDetail {
		return vs[0].([]ServerWorkflowDetail)[vs[1].(int)]
	}).(ServerWorkflowDetailOutput)
}

type ServerWorkflowDetails struct {
	OnUpload []ServerWorkflowDetail `pulumi:"onUpload"`
}

// ServerWorkflowDetailsInput is an input type that accepts ServerWorkflowDetailsArgs and ServerWorkflowDetailsOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailsInput` via:
//
//          ServerWorkflowDetailsArgs{...}
type ServerWorkflowDetailsInput interface {
	pulumi.Input

	ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput
	ToServerWorkflowDetailsOutputWithContext(context.Context) ServerWorkflowDetailsOutput
}

type ServerWorkflowDetailsArgs struct {
	OnUpload ServerWorkflowDetailArrayInput `pulumi:"onUpload"`
}

func (ServerWorkflowDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetails)(nil)).Elem()
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput {
	return i.ToServerWorkflowDetailsOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsOutputWithContext(ctx context.Context) ServerWorkflowDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsOutput)
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return i.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsOutput).ToServerWorkflowDetailsPtrOutputWithContext(ctx)
}

// ServerWorkflowDetailsPtrInput is an input type that accepts ServerWorkflowDetailsArgs, ServerWorkflowDetailsPtr and ServerWorkflowDetailsPtrOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailsPtrInput` via:
//
//          ServerWorkflowDetailsArgs{...}
//
//  or:
//
//          nil
type ServerWorkflowDetailsPtrInput interface {
	pulumi.Input

	ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput
	ToServerWorkflowDetailsPtrOutputWithContext(context.Context) ServerWorkflowDetailsPtrOutput
}

type serverWorkflowDetailsPtrType ServerWorkflowDetailsArgs

func ServerWorkflowDetailsPtr(v *ServerWorkflowDetailsArgs) ServerWorkflowDetailsPtrInput {
	return (*serverWorkflowDetailsPtrType)(v)
}

func (*serverWorkflowDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerWorkflowDetails)(nil)).Elem()
}

func (i *serverWorkflowDetailsPtrType) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return i.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (i *serverWorkflowDetailsPtrType) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsPtrOutput)
}

type ServerWorkflowDetailsOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetails)(nil)).Elem()
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput {
	return o
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsOutputWithContext(ctx context.Context) ServerWorkflowDetailsOutput {
	return o
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return o.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerWorkflowDetails) *ServerWorkflowDetails {
		return &v
	}).(ServerWorkflowDetailsPtrOutput)
}

func (o ServerWorkflowDetailsOutput) OnUpload() ServerWorkflowDetailArrayOutput {
	return o.ApplyT(func(v ServerWorkflowDetails) []ServerWorkflowDetail { return v.OnUpload }).(ServerWorkflowDetailArrayOutput)
}

type ServerWorkflowDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerWorkflowDetails)(nil)).Elem()
}

func (o ServerWorkflowDetailsPtrOutput) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return o
}

func (o ServerWorkflowDetailsPtrOutput) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return o
}

func (o ServerWorkflowDetailsPtrOutput) Elem() ServerWorkflowDetailsOutput {
	return o.ApplyT(func(v *ServerWorkflowDetails) ServerWorkflowDetails {
		if v != nil {
			return *v
		}
		var ret ServerWorkflowDetails
		return ret
	}).(ServerWorkflowDetailsOutput)
}

func (o ServerWorkflowDetailsPtrOutput) OnUpload() ServerWorkflowDetailArrayOutput {
	return o.ApplyT(func(v *ServerWorkflowDetails) []ServerWorkflowDetail {
		if v == nil {
			return nil
		}
		return v.OnUpload
	}).(ServerWorkflowDetailArrayOutput)
}

type UserHomeDirectoryMapEntry struct {
	Entry  string `pulumi:"entry"`
	Target string `pulumi:"target"`
}

// UserHomeDirectoryMapEntryInput is an input type that accepts UserHomeDirectoryMapEntryArgs and UserHomeDirectoryMapEntryOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMapEntryInput` via:
//
//          UserHomeDirectoryMapEntryArgs{...}
type UserHomeDirectoryMapEntryInput interface {
	pulumi.Input

	ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput
	ToUserHomeDirectoryMapEntryOutputWithContext(context.Context) UserHomeDirectoryMapEntryOutput
}

type UserHomeDirectoryMapEntryArgs struct {
	Entry  pulumi.StringInput `pulumi:"entry"`
	Target pulumi.StringInput `pulumi:"target"`
}

func (UserHomeDirectoryMapEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (i UserHomeDirectoryMapEntryArgs) ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput {
	return i.ToUserHomeDirectoryMapEntryOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMapEntryArgs) ToUserHomeDirectoryMapEntryOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMapEntryOutput)
}

// UserHomeDirectoryMapEntryArrayInput is an input type that accepts UserHomeDirectoryMapEntryArray and UserHomeDirectoryMapEntryArrayOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMapEntryArrayInput` via:
//
//          UserHomeDirectoryMapEntryArray{ UserHomeDirectoryMapEntryArgs{...} }
type UserHomeDirectoryMapEntryArrayInput interface {
	pulumi.Input

	ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput
	ToUserHomeDirectoryMapEntryArrayOutputWithContext(context.Context) UserHomeDirectoryMapEntryArrayOutput
}

type UserHomeDirectoryMapEntryArray []UserHomeDirectoryMapEntryInput

func (UserHomeDirectoryMapEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (i UserHomeDirectoryMapEntryArray) ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput {
	return i.ToUserHomeDirectoryMapEntryArrayOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMapEntryArray) ToUserHomeDirectoryMapEntryArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMapEntryArrayOutput)
}

type UserHomeDirectoryMapEntryOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMapEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (o UserHomeDirectoryMapEntryOutput) ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput {
	return o
}

func (o UserHomeDirectoryMapEntryOutput) ToUserHomeDirectoryMapEntryOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryOutput {
	return o
}

func (o UserHomeDirectoryMapEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapEntry) string { return v.Entry }).(pulumi.StringOutput)
}

func (o UserHomeDirectoryMapEntryOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapEntry) string { return v.Target }).(pulumi.StringOutput)
}

type UserHomeDirectoryMapEntryArrayOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMapEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (o UserHomeDirectoryMapEntryArrayOutput) ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput {
	return o
}

func (o UserHomeDirectoryMapEntryArrayOutput) ToUserHomeDirectoryMapEntryArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryArrayOutput {
	return o
}

func (o UserHomeDirectoryMapEntryArrayOutput) Index(i pulumi.IntInput) UserHomeDirectoryMapEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHomeDirectoryMapEntry {
		return vs[0].([]UserHomeDirectoryMapEntry)[vs[1].(int)]
	}).(UserHomeDirectoryMapEntryOutput)
}

type UserPosixProfile struct {
	Gid           float64   `pulumi:"gid"`
	SecondaryGids []float64 `pulumi:"secondaryGids"`
	Uid           float64   `pulumi:"uid"`
}

// UserPosixProfileInput is an input type that accepts UserPosixProfileArgs and UserPosixProfileOutput values.
// You can construct a concrete instance of `UserPosixProfileInput` via:
//
//          UserPosixProfileArgs{...}
type UserPosixProfileInput interface {
	pulumi.Input

	ToUserPosixProfileOutput() UserPosixProfileOutput
	ToUserPosixProfileOutputWithContext(context.Context) UserPosixProfileOutput
}

type UserPosixProfileArgs struct {
	Gid           pulumi.Float64Input      `pulumi:"gid"`
	SecondaryGids pulumi.Float64ArrayInput `pulumi:"secondaryGids"`
	Uid           pulumi.Float64Input      `pulumi:"uid"`
}

func (UserPosixProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return i.ToUserPosixProfileOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput)
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput).ToUserPosixProfilePtrOutputWithContext(ctx)
}

// UserPosixProfilePtrInput is an input type that accepts UserPosixProfileArgs, UserPosixProfilePtr and UserPosixProfilePtrOutput values.
// You can construct a concrete instance of `UserPosixProfilePtrInput` via:
//
//          UserPosixProfileArgs{...}
//
//  or:
//
//          nil
type UserPosixProfilePtrInput interface {
	pulumi.Input

	ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput
	ToUserPosixProfilePtrOutputWithContext(context.Context) UserPosixProfilePtrOutput
}

type userPosixProfilePtrType UserPosixProfileArgs

func UserPosixProfilePtr(v *UserPosixProfileArgs) UserPosixProfilePtrInput {
	return (*userPosixProfilePtrType)(v)
}

func (*userPosixProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfilePtrOutput)
}

type UserPosixProfileOutput struct{ *pulumi.OutputState }

func (UserPosixProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPosixProfile) *UserPosixProfile {
		return &v
	}).(UserPosixProfilePtrOutput)
}

func (o UserPosixProfileOutput) Gid() pulumi.Float64Output {
	return o.ApplyT(func(v UserPosixProfile) float64 { return v.Gid }).(pulumi.Float64Output)
}

func (o UserPosixProfileOutput) SecondaryGids() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v UserPosixProfile) []float64 { return v.SecondaryGids }).(pulumi.Float64ArrayOutput)
}

func (o UserPosixProfileOutput) Uid() pulumi.Float64Output {
	return o.ApplyT(func(v UserPosixProfile) float64 { return v.Uid }).(pulumi.Float64Output)
}

type UserPosixProfilePtrOutput struct{ *pulumi.OutputState }

func (UserPosixProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) Elem() UserPosixProfileOutput {
	return o.ApplyT(func(v *UserPosixProfile) UserPosixProfile {
		if v != nil {
			return *v
		}
		var ret UserPosixProfile
		return ret
	}).(UserPosixProfileOutput)
}

func (o UserPosixProfilePtrOutput) Gid() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *float64 {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.Float64PtrOutput)
}

func (o UserPosixProfilePtrOutput) SecondaryGids() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *UserPosixProfile) []float64 {
		if v == nil {
			return nil
		}
		return v.SecondaryGids
	}).(pulumi.Float64ArrayOutput)
}

func (o UserPosixProfilePtrOutput) Uid() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *float64 {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.Float64PtrOutput)
}

type UserSshPublicKey struct {
}

// UserSshPublicKeyInput is an input type that accepts UserSshPublicKeyArgs and UserSshPublicKeyOutput values.
// You can construct a concrete instance of `UserSshPublicKeyInput` via:
//
//          UserSshPublicKeyArgs{...}
type UserSshPublicKeyInput interface {
	pulumi.Input

	ToUserSshPublicKeyOutput() UserSshPublicKeyOutput
	ToUserSshPublicKeyOutputWithContext(context.Context) UserSshPublicKeyOutput
}

type UserSshPublicKeyArgs struct {
}

func (UserSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSshPublicKey)(nil)).Elem()
}

func (i UserSshPublicKeyArgs) ToUserSshPublicKeyOutput() UserSshPublicKeyOutput {
	return i.ToUserSshPublicKeyOutputWithContext(context.Background())
}

func (i UserSshPublicKeyArgs) ToUserSshPublicKeyOutputWithContext(ctx context.Context) UserSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSshPublicKeyOutput)
}

// UserSshPublicKeyArrayInput is an input type that accepts UserSshPublicKeyArray and UserSshPublicKeyArrayOutput values.
// You can construct a concrete instance of `UserSshPublicKeyArrayInput` via:
//
//          UserSshPublicKeyArray{ UserSshPublicKeyArgs{...} }
type UserSshPublicKeyArrayInput interface {
	pulumi.Input

	ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput
	ToUserSshPublicKeyArrayOutputWithContext(context.Context) UserSshPublicKeyArrayOutput
}

type UserSshPublicKeyArray []UserSshPublicKeyInput

func (UserSshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSshPublicKey)(nil)).Elem()
}

func (i UserSshPublicKeyArray) ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput {
	return i.ToUserSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i UserSshPublicKeyArray) ToUserSshPublicKeyArrayOutputWithContext(ctx context.Context) UserSshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSshPublicKeyArrayOutput)
}

type UserSshPublicKeyOutput struct{ *pulumi.OutputState }

func (UserSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSshPublicKey)(nil)).Elem()
}

func (o UserSshPublicKeyOutput) ToUserSshPublicKeyOutput() UserSshPublicKeyOutput {
	return o
}

func (o UserSshPublicKeyOutput) ToUserSshPublicKeyOutputWithContext(ctx context.Context) UserSshPublicKeyOutput {
	return o
}

type UserSshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (UserSshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSshPublicKey)(nil)).Elem()
}

func (o UserSshPublicKeyArrayOutput) ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput {
	return o
}

func (o UserSshPublicKeyArrayOutput) ToUserSshPublicKeyArrayOutputWithContext(ctx context.Context) UserSshPublicKeyArrayOutput {
	return o
}

func (o UserSshPublicKeyArrayOutput) Index(i pulumi.IntInput) UserSshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSshPublicKey {
		return vs[0].([]UserSshPublicKey)[vs[1].(int)]
	}).(UserSshPublicKeyOutput)
}

type UserTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// UserTagInput is an input type that accepts UserTagArgs and UserTagOutput values.
// You can construct a concrete instance of `UserTagInput` via:
//
//          UserTagArgs{...}
type UserTagInput interface {
	pulumi.Input

	ToUserTagOutput() UserTagOutput
	ToUserTagOutputWithContext(context.Context) UserTagOutput
}

type UserTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (UserTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (i UserTagArgs) ToUserTagOutput() UserTagOutput {
	return i.ToUserTagOutputWithContext(context.Background())
}

func (i UserTagArgs) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagOutput)
}

// UserTagArrayInput is an input type that accepts UserTagArray and UserTagArrayOutput values.
// You can construct a concrete instance of `UserTagArrayInput` via:
//
//          UserTagArray{ UserTagArgs{...} }
type UserTagArrayInput interface {
	pulumi.Input

	ToUserTagArrayOutput() UserTagArrayOutput
	ToUserTagArrayOutputWithContext(context.Context) UserTagArrayOutput
}

type UserTagArray []UserTagInput

func (UserTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (i UserTagArray) ToUserTagArrayOutput() UserTagArrayOutput {
	return i.ToUserTagArrayOutputWithContext(context.Background())
}

func (i UserTagArray) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagArrayOutput)
}

type UserTagOutput struct{ *pulumi.OutputState }

func (UserTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (o UserTagOutput) ToUserTagOutput() UserTagOutput {
	return o
}

func (o UserTagOutput) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return o
}

func (o UserTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o UserTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Value }).(pulumi.StringOutput)
}

type UserTagArrayOutput struct{ *pulumi.OutputState }

func (UserTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (o UserTagArrayOutput) ToUserTagArrayOutput() UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) Index(i pulumi.IntInput) UserTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserTag {
		return vs[0].([]UserTag)[vs[1].(int)]
	}).(UserTagOutput)
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowInputFileLocation struct {
	S3FileLocation *WorkflowS3InputFileLocation `pulumi:"s3FileLocation"`
}

// WorkflowInputFileLocationInput is an input type that accepts WorkflowInputFileLocationArgs and WorkflowInputFileLocationOutput values.
// You can construct a concrete instance of `WorkflowInputFileLocationInput` via:
//
//          WorkflowInputFileLocationArgs{...}
type WorkflowInputFileLocationInput interface {
	pulumi.Input

	ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput
	ToWorkflowInputFileLocationOutputWithContext(context.Context) WorkflowInputFileLocationOutput
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowInputFileLocationArgs struct {
	S3FileLocation WorkflowS3InputFileLocationPtrInput `pulumi:"s3FileLocation"`
}

func (WorkflowInputFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowInputFileLocation)(nil)).Elem()
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput {
	return i.ToWorkflowInputFileLocationOutputWithContext(context.Background())
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationOutputWithContext(ctx context.Context) WorkflowInputFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationOutput)
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return i.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationOutput).ToWorkflowInputFileLocationPtrOutputWithContext(ctx)
}

// WorkflowInputFileLocationPtrInput is an input type that accepts WorkflowInputFileLocationArgs, WorkflowInputFileLocationPtr and WorkflowInputFileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowInputFileLocationPtrInput` via:
//
//          WorkflowInputFileLocationArgs{...}
//
//  or:
//
//          nil
type WorkflowInputFileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput
	ToWorkflowInputFileLocationPtrOutputWithContext(context.Context) WorkflowInputFileLocationPtrOutput
}

type workflowInputFileLocationPtrType WorkflowInputFileLocationArgs

func WorkflowInputFileLocationPtr(v *WorkflowInputFileLocationArgs) WorkflowInputFileLocationPtrInput {
	return (*workflowInputFileLocationPtrType)(v)
}

func (*workflowInputFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowInputFileLocation)(nil)).Elem()
}

func (i *workflowInputFileLocationPtrType) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return i.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowInputFileLocationPtrType) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationPtrOutput)
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowInputFileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowInputFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowInputFileLocation)(nil)).Elem()
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput {
	return o
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationOutputWithContext(ctx context.Context) WorkflowInputFileLocationOutput {
	return o
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return o.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowInputFileLocation) *WorkflowInputFileLocation {
		return &v
	}).(WorkflowInputFileLocationPtrOutput)
}

func (o WorkflowInputFileLocationOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowInputFileLocation) *WorkflowS3InputFileLocation { return v.S3FileLocation }).(WorkflowS3InputFileLocationPtrOutput)
}

type WorkflowInputFileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowInputFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowInputFileLocation)(nil)).Elem()
}

func (o WorkflowInputFileLocationPtrOutput) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return o
}

func (o WorkflowInputFileLocationPtrOutput) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return o
}

func (o WorkflowInputFileLocationPtrOutput) Elem() WorkflowInputFileLocationOutput {
	return o.ApplyT(func(v *WorkflowInputFileLocation) WorkflowInputFileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowInputFileLocation
		return ret
	}).(WorkflowInputFileLocationOutput)
}

func (o WorkflowInputFileLocationPtrOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowInputFileLocation) *WorkflowS3InputFileLocation {
		if v == nil {
			return nil
		}
		return v.S3FileLocation
	}).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the details for the S3 file being copied.
type WorkflowS3InputFileLocation struct {
	// Specifies the S3 bucket that contains the file being copied.
	Bucket *string `pulumi:"bucket"`
	// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
	Key *string `pulumi:"key"`
}

// WorkflowS3InputFileLocationInput is an input type that accepts WorkflowS3InputFileLocationArgs and WorkflowS3InputFileLocationOutput values.
// You can construct a concrete instance of `WorkflowS3InputFileLocationInput` via:
//
//          WorkflowS3InputFileLocationArgs{...}
type WorkflowS3InputFileLocationInput interface {
	pulumi.Input

	ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput
	ToWorkflowS3InputFileLocationOutputWithContext(context.Context) WorkflowS3InputFileLocationOutput
}

// Specifies the details for the S3 file being copied.
type WorkflowS3InputFileLocationArgs struct {
	// Specifies the S3 bucket that contains the file being copied.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (WorkflowS3InputFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3InputFileLocation)(nil)).Elem()
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput {
	return i.ToWorkflowS3InputFileLocationOutputWithContext(context.Background())
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationOutput)
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return i.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationOutput).ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx)
}

// WorkflowS3InputFileLocationPtrInput is an input type that accepts WorkflowS3InputFileLocationArgs, WorkflowS3InputFileLocationPtr and WorkflowS3InputFileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowS3InputFileLocationPtrInput` via:
//
//          WorkflowS3InputFileLocationArgs{...}
//
//  or:
//
//          nil
type WorkflowS3InputFileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput
	ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Context) WorkflowS3InputFileLocationPtrOutput
}

type workflowS3InputFileLocationPtrType WorkflowS3InputFileLocationArgs

func WorkflowS3InputFileLocationPtr(v *WorkflowS3InputFileLocationArgs) WorkflowS3InputFileLocationPtrInput {
	return (*workflowS3InputFileLocationPtrType)(v)
}

func (*workflowS3InputFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3InputFileLocation)(nil)).Elem()
}

func (i *workflowS3InputFileLocationPtrType) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return i.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowS3InputFileLocationPtrType) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the details for the S3 file being copied.
type WorkflowS3InputFileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowS3InputFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3InputFileLocation)(nil)).Elem()
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput {
	return o
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationOutput {
	return o
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return o.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowS3InputFileLocation) *WorkflowS3InputFileLocation {
		return &v
	}).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the S3 bucket that contains the file being copied.
func (o WorkflowS3InputFileLocationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowS3InputFileLocation) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
func (o WorkflowS3InputFileLocationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowS3InputFileLocation) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type WorkflowS3InputFileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowS3InputFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3InputFileLocation)(nil)).Elem()
}

func (o WorkflowS3InputFileLocationPtrOutput) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return o
}

func (o WorkflowS3InputFileLocationPtrOutput) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return o
}

func (o WorkflowS3InputFileLocationPtrOutput) Elem() WorkflowS3InputFileLocationOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) WorkflowS3InputFileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowS3InputFileLocation
		return ret
	}).(WorkflowS3InputFileLocationOutput)
}

// Specifies the S3 bucket that contains the file being copied.
func (o WorkflowS3InputFileLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
func (o WorkflowS3InputFileLocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3Tag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// The value that corresponds to the key.
	Value string `pulumi:"value"`
}

// WorkflowS3TagInput is an input type that accepts WorkflowS3TagArgs and WorkflowS3TagOutput values.
// You can construct a concrete instance of `WorkflowS3TagInput` via:
//
//          WorkflowS3TagArgs{...}
type WorkflowS3TagInput interface {
	pulumi.Input

	ToWorkflowS3TagOutput() WorkflowS3TagOutput
	ToWorkflowS3TagOutputWithContext(context.Context) WorkflowS3TagOutput
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3TagArgs struct {
	// The name assigned to the tag that you create.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that corresponds to the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkflowS3TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3Tag)(nil)).Elem()
}

func (i WorkflowS3TagArgs) ToWorkflowS3TagOutput() WorkflowS3TagOutput {
	return i.ToWorkflowS3TagOutputWithContext(context.Background())
}

func (i WorkflowS3TagArgs) ToWorkflowS3TagOutputWithContext(ctx context.Context) WorkflowS3TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3TagOutput)
}

// WorkflowS3TagArrayInput is an input type that accepts WorkflowS3TagArray and WorkflowS3TagArrayOutput values.
// You can construct a concrete instance of `WorkflowS3TagArrayInput` via:
//
//          WorkflowS3TagArray{ WorkflowS3TagArgs{...} }
type WorkflowS3TagArrayInput interface {
	pulumi.Input

	ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput
	ToWorkflowS3TagArrayOutputWithContext(context.Context) WorkflowS3TagArrayOutput
}

type WorkflowS3TagArray []WorkflowS3TagInput

func (WorkflowS3TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowS3Tag)(nil)).Elem()
}

func (i WorkflowS3TagArray) ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput {
	return i.ToWorkflowS3TagArrayOutputWithContext(context.Background())
}

func (i WorkflowS3TagArray) ToWorkflowS3TagArrayOutputWithContext(ctx context.Context) WorkflowS3TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3TagArrayOutput)
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3TagOutput struct{ *pulumi.OutputState }

func (WorkflowS3TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3Tag)(nil)).Elem()
}

func (o WorkflowS3TagOutput) ToWorkflowS3TagOutput() WorkflowS3TagOutput {
	return o
}

func (o WorkflowS3TagOutput) ToWorkflowS3TagOutputWithContext(ctx context.Context) WorkflowS3TagOutput {
	return o
}

// The name assigned to the tag that you create.
func (o WorkflowS3TagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowS3Tag) string { return v.Key }).(pulumi.StringOutput)
}

// The value that corresponds to the key.
func (o WorkflowS3TagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowS3Tag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkflowS3TagArrayOutput struct{ *pulumi.OutputState }

func (WorkflowS3TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowS3Tag)(nil)).Elem()
}

func (o WorkflowS3TagArrayOutput) ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput {
	return o
}

func (o WorkflowS3TagArrayOutput) ToWorkflowS3TagArrayOutputWithContext(ctx context.Context) WorkflowS3TagArrayOutput {
	return o
}

func (o WorkflowS3TagArrayOutput) Index(i pulumi.IntInput) WorkflowS3TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowS3Tag {
		return vs[0].([]WorkflowS3Tag)[vs[1].(int)]
	}).(WorkflowS3TagOutput)
}

// The basic building block of a workflow.
type WorkflowStep struct {
	// Details for a step that performs a file copy.
	CopyStepDetails *WorkflowStepCopyStepDetailsProperties `pulumi:"copyStepDetails"`
	// Details for a step that invokes a lambda function.
	CustomStepDetails *WorkflowStepCustomStepDetailsProperties `pulumi:"customStepDetails"`
	// Details for a step that deletes the file.
	DeleteStepDetails *WorkflowStepDeleteStepDetailsProperties `pulumi:"deleteStepDetails"`
	// Details for a step that creates one or more tags.
	TagStepDetails *WorkflowStepTagStepDetailsProperties `pulumi:"tagStepDetails"`
	Type           *WorkflowStepType                     `pulumi:"type"`
}

// WorkflowStepInput is an input type that accepts WorkflowStepArgs and WorkflowStepOutput values.
// You can construct a concrete instance of `WorkflowStepInput` via:
//
//          WorkflowStepArgs{...}
type WorkflowStepInput interface {
	pulumi.Input

	ToWorkflowStepOutput() WorkflowStepOutput
	ToWorkflowStepOutputWithContext(context.Context) WorkflowStepOutput
}

// The basic building block of a workflow.
type WorkflowStepArgs struct {
	// Details for a step that performs a file copy.
	CopyStepDetails WorkflowStepCopyStepDetailsPropertiesPtrInput `pulumi:"copyStepDetails"`
	// Details for a step that invokes a lambda function.
	CustomStepDetails WorkflowStepCustomStepDetailsPropertiesPtrInput `pulumi:"customStepDetails"`
	// Details for a step that deletes the file.
	DeleteStepDetails WorkflowStepDeleteStepDetailsPropertiesPtrInput `pulumi:"deleteStepDetails"`
	// Details for a step that creates one or more tags.
	TagStepDetails WorkflowStepTagStepDetailsPropertiesPtrInput `pulumi:"tagStepDetails"`
	Type           WorkflowStepTypePtrInput                     `pulumi:"type"`
}

func (WorkflowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStep)(nil)).Elem()
}

func (i WorkflowStepArgs) ToWorkflowStepOutput() WorkflowStepOutput {
	return i.ToWorkflowStepOutputWithContext(context.Background())
}

func (i WorkflowStepArgs) ToWorkflowStepOutputWithContext(ctx context.Context) WorkflowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepOutput)
}

// WorkflowStepArrayInput is an input type that accepts WorkflowStepArray and WorkflowStepArrayOutput values.
// You can construct a concrete instance of `WorkflowStepArrayInput` via:
//
//          WorkflowStepArray{ WorkflowStepArgs{...} }
type WorkflowStepArrayInput interface {
	pulumi.Input

	ToWorkflowStepArrayOutput() WorkflowStepArrayOutput
	ToWorkflowStepArrayOutputWithContext(context.Context) WorkflowStepArrayOutput
}

type WorkflowStepArray []WorkflowStepInput

func (WorkflowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowStep)(nil)).Elem()
}

func (i WorkflowStepArray) ToWorkflowStepArrayOutput() WorkflowStepArrayOutput {
	return i.ToWorkflowStepArrayOutputWithContext(context.Background())
}

func (i WorkflowStepArray) ToWorkflowStepArrayOutputWithContext(ctx context.Context) WorkflowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepArrayOutput)
}

// The basic building block of a workflow.
type WorkflowStepOutput struct{ *pulumi.OutputState }

func (WorkflowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStep)(nil)).Elem()
}

func (o WorkflowStepOutput) ToWorkflowStepOutput() WorkflowStepOutput {
	return o
}

func (o WorkflowStepOutput) ToWorkflowStepOutputWithContext(ctx context.Context) WorkflowStepOutput {
	return o
}

// Details for a step that performs a file copy.
func (o WorkflowStepOutput) CopyStepDetails() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepCopyStepDetailsProperties { return v.CopyStepDetails }).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

// Details for a step that invokes a lambda function.
func (o WorkflowStepOutput) CustomStepDetails() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepCustomStepDetailsProperties { return v.CustomStepDetails }).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// Details for a step that deletes the file.
func (o WorkflowStepOutput) DeleteStepDetails() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepDeleteStepDetailsProperties { return v.DeleteStepDetails }).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// Details for a step that creates one or more tags.
func (o WorkflowStepOutput) TagStepDetails() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepTagStepDetailsProperties { return v.TagStepDetails }).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

func (o WorkflowStepOutput) Type() WorkflowStepTypePtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepType { return v.Type }).(WorkflowStepTypePtrOutput)
}

type WorkflowStepArrayOutput struct{ *pulumi.OutputState }

func (WorkflowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowStep)(nil)).Elem()
}

func (o WorkflowStepArrayOutput) ToWorkflowStepArrayOutput() WorkflowStepArrayOutput {
	return o
}

func (o WorkflowStepArrayOutput) ToWorkflowStepArrayOutputWithContext(ctx context.Context) WorkflowStepArrayOutput {
	return o
}

func (o WorkflowStepArrayOutput) Index(i pulumi.IntInput) WorkflowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowStep {
		return vs[0].([]WorkflowStep)[vs[1].(int)]
	}).(WorkflowStepOutput)
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsProperties struct {
	DestinationFileLocation *WorkflowInputFileLocation `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting `pulumi:"overwriteExisting"`
}

// WorkflowStepCopyStepDetailsPropertiesInput is an input type that accepts WorkflowStepCopyStepDetailsPropertiesArgs and WorkflowStepCopyStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepCopyStepDetailsPropertiesInput` via:
//
//          WorkflowStepCopyStepDetailsPropertiesArgs{...}
type WorkflowStepCopyStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput
	ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesOutput
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsPropertiesArgs struct {
	DestinationFileLocation WorkflowInputFileLocationPtrInput `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrInput `pulumi:"overwriteExisting"`
}

func (WorkflowStepCopyStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesOutput)
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesOutput).ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepCopyStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepCopyStepDetailsPropertiesArgs, WorkflowStepCopyStepDetailsPropertiesPtr and WorkflowStepCopyStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepCopyStepDetailsPropertiesPtrInput` via:
//
//          WorkflowStepCopyStepDetailsPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkflowStepCopyStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput
	ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput
}

type workflowStepCopyStepDetailsPropertiesPtrType WorkflowStepCopyStepDetailsPropertiesArgs

func WorkflowStepCopyStepDetailsPropertiesPtr(v *WorkflowStepCopyStepDetailsPropertiesArgs) WorkflowStepCopyStepDetailsPropertiesPtrInput {
	return (*workflowStepCopyStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepCopyStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepCopyStepDetailsPropertiesPtrType) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepCopyStepDetailsPropertiesPtrType) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsProperties {
		return &v
	}).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) DestinationFileLocation() WorkflowInputFileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *WorkflowInputFileLocation {
		return v.DestinationFileLocation
	}).(WorkflowInputFileLocationPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCopyStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepCopyStepDetailsPropertiesOutput) OverwriteExisting() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		return v.OverwriteExisting
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

type WorkflowStepCopyStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) Elem() WorkflowStepCopyStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) WorkflowStepCopyStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepCopyStepDetailsProperties
		return ret
	}).(WorkflowStepCopyStepDetailsPropertiesOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) DestinationFileLocation() WorkflowInputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *WorkflowInputFileLocation {
		if v == nil {
			return nil
		}
		return v.DestinationFileLocation
	}).(WorkflowInputFileLocationPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) OverwriteExisting() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		if v == nil {
			return nil
		}
		return v.OverwriteExisting
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// The ARN for the lambda function that is being called.
	Target *string `pulumi:"target"`
	// Timeout, in seconds, for the step.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// WorkflowStepCustomStepDetailsPropertiesInput is an input type that accepts WorkflowStepCustomStepDetailsPropertiesArgs and WorkflowStepCustomStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepCustomStepDetailsPropertiesInput` via:
//
//          WorkflowStepCustomStepDetailsPropertiesArgs{...}
type WorkflowStepCustomStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput
	ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepCustomStepDetailsPropertiesOutput
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ARN for the lambda function that is being called.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Timeout, in seconds, for the step.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (WorkflowStepCustomStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesOutput)
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesOutput).ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepCustomStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepCustomStepDetailsPropertiesArgs, WorkflowStepCustomStepDetailsPropertiesPtr and WorkflowStepCustomStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepCustomStepDetailsPropertiesPtrInput` via:
//
//          WorkflowStepCustomStepDetailsPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkflowStepCustomStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput
	ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput
}

type workflowStepCustomStepDetailsPropertiesPtrType WorkflowStepCustomStepDetailsPropertiesArgs

func WorkflowStepCustomStepDetailsPropertiesPtr(v *WorkflowStepCustomStepDetailsPropertiesArgs) WorkflowStepCustomStepDetailsPropertiesPtrInput {
	return (*workflowStepCustomStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepCustomStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepCustomStepDetailsPropertiesPtrType) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepCustomStepDetailsPropertiesPtrType) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepCustomStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepCustomStepDetailsProperties) *WorkflowStepCustomStepDetailsProperties {
		return &v
	}).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ARN for the lambda function that is being called.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Timeout, in seconds, for the step.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkflowStepCustomStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepCustomStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Elem() WorkflowStepCustomStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) WorkflowStepCustomStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepCustomStepDetailsProperties
		return ret
	}).(WorkflowStepCustomStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ARN for the lambda function that is being called.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Timeout, in seconds, for the step.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
}

// WorkflowStepDeleteStepDetailsPropertiesInput is an input type that accepts WorkflowStepDeleteStepDetailsPropertiesArgs and WorkflowStepDeleteStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepDeleteStepDetailsPropertiesInput` via:
//
//          WorkflowStepDeleteStepDetailsPropertiesArgs{...}
type WorkflowStepDeleteStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput
	ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WorkflowStepDeleteStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesOutput)
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesOutput).ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepDeleteStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepDeleteStepDetailsPropertiesArgs, WorkflowStepDeleteStepDetailsPropertiesPtr and WorkflowStepDeleteStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepDeleteStepDetailsPropertiesPtrInput` via:
//
//          WorkflowStepDeleteStepDetailsPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkflowStepDeleteStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput
	ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput
}

type workflowStepDeleteStepDetailsPropertiesPtrType WorkflowStepDeleteStepDetailsPropertiesArgs

func WorkflowStepDeleteStepDetailsPropertiesPtr(v *WorkflowStepDeleteStepDetailsPropertiesArgs) WorkflowStepDeleteStepDetailsPropertiesPtrInput {
	return (*workflowStepDeleteStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepDeleteStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepDeleteStepDetailsPropertiesPtrType) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepDeleteStepDetailsPropertiesPtrType) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepDeleteStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepDeleteStepDetailsProperties) *WorkflowStepDeleteStepDetailsProperties {
		return &v
	}).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDeleteStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepDeleteStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WorkflowStepDeleteStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) Elem() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepDeleteStepDetailsProperties) WorkflowStepDeleteStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepDeleteStepDetailsProperties
		return ret
	}).(WorkflowStepDeleteStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDeleteStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// Array that contains from 1 to 10 key/value pairs.
	Tags []WorkflowS3Tag `pulumi:"tags"`
}

// WorkflowStepTagStepDetailsPropertiesInput is an input type that accepts WorkflowStepTagStepDetailsPropertiesArgs and WorkflowStepTagStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepTagStepDetailsPropertiesInput` via:
//
//          WorkflowStepTagStepDetailsPropertiesArgs{...}
type WorkflowStepTagStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput
	ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepTagStepDetailsPropertiesOutput
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array that contains from 1 to 10 key/value pairs.
	Tags WorkflowS3TagArrayInput `pulumi:"tags"`
}

func (WorkflowStepTagStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesOutput)
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesOutput).ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepTagStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepTagStepDetailsPropertiesArgs, WorkflowStepTagStepDetailsPropertiesPtr and WorkflowStepTagStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepTagStepDetailsPropertiesPtrInput` via:
//
//          WorkflowStepTagStepDetailsPropertiesArgs{...}
//
//  or:
//
//          nil
type WorkflowStepTagStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput
	ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput
}

type workflowStepTagStepDetailsPropertiesPtrType WorkflowStepTagStepDetailsPropertiesArgs

func WorkflowStepTagStepDetailsPropertiesPtr(v *WorkflowStepTagStepDetailsPropertiesArgs) WorkflowStepTagStepDetailsPropertiesPtrInput {
	return (*workflowStepTagStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepTagStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepTagStepDetailsPropertiesPtrType) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepTagStepDetailsPropertiesPtrType) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepTagStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepTagStepDetailsProperties) *WorkflowStepTagStepDetailsProperties {
		return &v
	}).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepTagStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepTagStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array that contains from 1 to 10 key/value pairs.
func (o WorkflowStepTagStepDetailsPropertiesOutput) Tags() WorkflowS3TagArrayOutput {
	return o.ApplyT(func(v WorkflowStepTagStepDetailsProperties) []WorkflowS3Tag { return v.Tags }).(WorkflowS3TagArrayOutput)
}

type WorkflowStepTagStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepTagStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Elem() WorkflowStepTagStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) WorkflowStepTagStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepTagStepDetailsProperties
		return ret
	}).(WorkflowStepTagStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Array that contains from 1 to 10 key/value pairs.
func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Tags() WorkflowS3TagArrayOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) []WorkflowS3Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WorkflowS3TagArrayOutput)
}

// Creates a key-value pair for a specific resource.
type WorkflowTag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value string `pulumi:"value"`
}

// WorkflowTagInput is an input type that accepts WorkflowTagArgs and WorkflowTagOutput values.
// You can construct a concrete instance of `WorkflowTagInput` via:
//
//          WorkflowTagArgs{...}
type WorkflowTagInput interface {
	pulumi.Input

	ToWorkflowTagOutput() WorkflowTagOutput
	ToWorkflowTagOutputWithContext(context.Context) WorkflowTagOutput
}

// Creates a key-value pair for a specific resource.
type WorkflowTagArgs struct {
	// The name assigned to the tag that you create.
	Key pulumi.StringInput `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkflowTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTag)(nil)).Elem()
}

func (i WorkflowTagArgs) ToWorkflowTagOutput() WorkflowTagOutput {
	return i.ToWorkflowTagOutputWithContext(context.Background())
}

func (i WorkflowTagArgs) ToWorkflowTagOutputWithContext(ctx context.Context) WorkflowTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTagOutput)
}

// WorkflowTagArrayInput is an input type that accepts WorkflowTagArray and WorkflowTagArrayOutput values.
// You can construct a concrete instance of `WorkflowTagArrayInput` via:
//
//          WorkflowTagArray{ WorkflowTagArgs{...} }
type WorkflowTagArrayInput interface {
	pulumi.Input

	ToWorkflowTagArrayOutput() WorkflowTagArrayOutput
	ToWorkflowTagArrayOutputWithContext(context.Context) WorkflowTagArrayOutput
}

type WorkflowTagArray []WorkflowTagInput

func (WorkflowTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTag)(nil)).Elem()
}

func (i WorkflowTagArray) ToWorkflowTagArrayOutput() WorkflowTagArrayOutput {
	return i.ToWorkflowTagArrayOutputWithContext(context.Background())
}

func (i WorkflowTagArray) ToWorkflowTagArrayOutputWithContext(ctx context.Context) WorkflowTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTagArrayOutput)
}

// Creates a key-value pair for a specific resource.
type WorkflowTagOutput struct{ *pulumi.OutputState }

func (WorkflowTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTag)(nil)).Elem()
}

func (o WorkflowTagOutput) ToWorkflowTagOutput() WorkflowTagOutput {
	return o
}

func (o WorkflowTagOutput) ToWorkflowTagOutputWithContext(ctx context.Context) WorkflowTagOutput {
	return o
}

// The name assigned to the tag that you create.
func (o WorkflowTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTag) string { return v.Key }).(pulumi.StringOutput)
}

// Contains one or more values that you assigned to the key name you create.
func (o WorkflowTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkflowTagArrayOutput struct{ *pulumi.OutputState }

func (WorkflowTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowTag)(nil)).Elem()
}

func (o WorkflowTagArrayOutput) ToWorkflowTagArrayOutput() WorkflowTagArrayOutput {
	return o
}

func (o WorkflowTagArrayOutput) ToWorkflowTagArrayOutputWithContext(ctx context.Context) WorkflowTagArrayOutput {
	return o
}

func (o WorkflowTagArrayOutput) Index(i pulumi.IntInput) WorkflowTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowTag {
		return vs[0].([]WorkflowTag)[vs[1].(int)]
	}).(WorkflowTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsPtrInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityProviderDetailsInput)(nil)).Elem(), ServerIdentityProviderDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityProviderDetailsPtrInput)(nil)).Elem(), ServerIdentityProviderDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolInput)(nil)).Elem(), ServerProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolArrayInput)(nil)).Elem(), ServerProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolDetailsInput)(nil)).Elem(), ServerProtocolDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolDetailsPtrInput)(nil)).Elem(), ServerProtocolDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagInput)(nil)).Elem(), ServerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagArrayInput)(nil)).Elem(), ServerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailInput)(nil)).Elem(), ServerWorkflowDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailArrayInput)(nil)).Elem(), ServerWorkflowDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailsInput)(nil)).Elem(), ServerWorkflowDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailsPtrInput)(nil)).Elem(), ServerWorkflowDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMapEntryInput)(nil)).Elem(), UserHomeDirectoryMapEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMapEntryArrayInput)(nil)).Elem(), UserHomeDirectoryMapEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfileInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfilePtrInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSshPublicKeyInput)(nil)).Elem(), UserSshPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSshPublicKeyArrayInput)(nil)).Elem(), UserSshPublicKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagInput)(nil)).Elem(), UserTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagArrayInput)(nil)).Elem(), UserTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowInputFileLocationInput)(nil)).Elem(), WorkflowInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowInputFileLocationPtrInput)(nil)).Elem(), WorkflowInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3InputFileLocationInput)(nil)).Elem(), WorkflowS3InputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3InputFileLocationPtrInput)(nil)).Elem(), WorkflowS3InputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3TagInput)(nil)).Elem(), WorkflowS3TagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3TagArrayInput)(nil)).Elem(), WorkflowS3TagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepInput)(nil)).Elem(), WorkflowStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepArrayInput)(nil)).Elem(), WorkflowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCustomStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepCustomStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCustomStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepCustomStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDeleteStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepDeleteStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDeleteStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepDeleteStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTagStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepTagStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTagStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepTagStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTagInput)(nil)).Elem(), WorkflowTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowTagArrayInput)(nil)).Elem(), WorkflowTagArray{})
	pulumi.RegisterOutputType(ServerEndpointDetailsOutput{})
	pulumi.RegisterOutputType(ServerEndpointDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerIdentityProviderDetailsOutput{})
	pulumi.RegisterOutputType(ServerIdentityProviderDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerProtocolOutput{})
	pulumi.RegisterOutputType(ServerProtocolArrayOutput{})
	pulumi.RegisterOutputType(ServerProtocolDetailsOutput{})
	pulumi.RegisterOutputType(ServerProtocolDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerTagOutput{})
	pulumi.RegisterOutputType(ServerTagArrayOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailArrayOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailsOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMapEntryOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMapEntryArrayOutput{})
	pulumi.RegisterOutputType(UserPosixProfileOutput{})
	pulumi.RegisterOutputType(UserPosixProfilePtrOutput{})
	pulumi.RegisterOutputType(UserSshPublicKeyOutput{})
	pulumi.RegisterOutputType(UserSshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(UserTagOutput{})
	pulumi.RegisterOutputType(UserTagArrayOutput{})
	pulumi.RegisterOutputType(WorkflowInputFileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowInputFileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowS3InputFileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowS3InputFileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowS3TagOutput{})
	pulumi.RegisterOutputType(WorkflowS3TagArrayOutput{})
	pulumi.RegisterOutputType(WorkflowStepOutput{})
	pulumi.RegisterOutputType(WorkflowStepArrayOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepCustomStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepCustomStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepDeleteStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepDeleteStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepTagStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepTagStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowTagOutput{})
	pulumi.RegisterOutputType(WorkflowTagArrayOutput{})
}
