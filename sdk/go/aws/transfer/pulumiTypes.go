// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerEndpointDetails struct {
	AddressAllocationIds []string `pulumi:"addressAllocationIds"`
	SecurityGroupIds     []string `pulumi:"securityGroupIds"`
	SubnetIds            []string `pulumi:"subnetIds"`
	VpcEndpointId        *string  `pulumi:"vpcEndpointId"`
	VpcId                *string  `pulumi:"vpcId"`
}

// ServerEndpointDetailsInput is an input type that accepts ServerEndpointDetailsArgs and ServerEndpointDetailsOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsInput` via:
//
//          ServerEndpointDetailsArgs{...}
type ServerEndpointDetailsInput interface {
	pulumi.Input

	ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput
	ToServerEndpointDetailsOutputWithContext(context.Context) ServerEndpointDetailsOutput
}

type ServerEndpointDetailsArgs struct {
	AddressAllocationIds pulumi.StringArrayInput `pulumi:"addressAllocationIds"`
	SecurityGroupIds     pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds            pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcEndpointId        pulumi.StringPtrInput   `pulumi:"vpcEndpointId"`
	VpcId                pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (ServerEndpointDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return i.ToServerEndpointDetailsOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput)
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput).ToServerEndpointDetailsPtrOutputWithContext(ctx)
}

// ServerEndpointDetailsPtrInput is an input type that accepts ServerEndpointDetailsArgs, ServerEndpointDetailsPtr and ServerEndpointDetailsPtrOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsPtrInput` via:
//
//          ServerEndpointDetailsArgs{...}
//
//  or:
//
//          nil
type ServerEndpointDetailsPtrInput interface {
	pulumi.Input

	ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput
	ToServerEndpointDetailsPtrOutputWithContext(context.Context) ServerEndpointDetailsPtrOutput
}

type serverEndpointDetailsPtrType ServerEndpointDetailsArgs

func ServerEndpointDetailsPtr(v *ServerEndpointDetailsArgs) ServerEndpointDetailsPtrInput {
	return (*serverEndpointDetailsPtrType)(v)
}

func (*serverEndpointDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsPtrOutput)
}

type ServerEndpointDetailsOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerEndpointDetails) *ServerEndpointDetails {
		return &v
	}).(ServerEndpointDetailsPtrOutput)
}

func (o ServerEndpointDetailsOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.AddressAllocationIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

func (o ServerEndpointDetailsOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ServerEndpointDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) Elem() ServerEndpointDetailsOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) ServerEndpointDetails {
		if v != nil {
			return *v
		}
		var ret ServerEndpointDetails
		return ret
	}).(ServerEndpointDetailsOutput)
}

func (o ServerEndpointDetailsPtrOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.AddressAllocationIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o ServerEndpointDetailsPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

func (o ServerEndpointDetailsPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type ServerIdentityProviderDetails struct {
	DirectoryId    *string `pulumi:"directoryId"`
	InvocationRole *string `pulumi:"invocationRole"`
	Url            *string `pulumi:"url"`
}

// ServerIdentityProviderDetailsInput is an input type that accepts ServerIdentityProviderDetailsArgs and ServerIdentityProviderDetailsOutput values.
// You can construct a concrete instance of `ServerIdentityProviderDetailsInput` via:
//
//          ServerIdentityProviderDetailsArgs{...}
type ServerIdentityProviderDetailsInput interface {
	pulumi.Input

	ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput
	ToServerIdentityProviderDetailsOutputWithContext(context.Context) ServerIdentityProviderDetailsOutput
}

type ServerIdentityProviderDetailsArgs struct {
	DirectoryId    pulumi.StringPtrInput `pulumi:"directoryId"`
	InvocationRole pulumi.StringPtrInput `pulumi:"invocationRole"`
	Url            pulumi.StringPtrInput `pulumi:"url"`
}

func (ServerIdentityProviderDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentityProviderDetails)(nil)).Elem()
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput {
	return i.ToServerIdentityProviderDetailsOutputWithContext(context.Background())
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsOutput)
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return i.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (i ServerIdentityProviderDetailsArgs) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsOutput).ToServerIdentityProviderDetailsPtrOutputWithContext(ctx)
}

// ServerIdentityProviderDetailsPtrInput is an input type that accepts ServerIdentityProviderDetailsArgs, ServerIdentityProviderDetailsPtr and ServerIdentityProviderDetailsPtrOutput values.
// You can construct a concrete instance of `ServerIdentityProviderDetailsPtrInput` via:
//
//          ServerIdentityProviderDetailsArgs{...}
//
//  or:
//
//          nil
type ServerIdentityProviderDetailsPtrInput interface {
	pulumi.Input

	ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput
	ToServerIdentityProviderDetailsPtrOutputWithContext(context.Context) ServerIdentityProviderDetailsPtrOutput
}

type serverIdentityProviderDetailsPtrType ServerIdentityProviderDetailsArgs

func ServerIdentityProviderDetailsPtr(v *ServerIdentityProviderDetailsArgs) ServerIdentityProviderDetailsPtrInput {
	return (*serverIdentityProviderDetailsPtrType)(v)
}

func (*serverIdentityProviderDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentityProviderDetails)(nil)).Elem()
}

func (i *serverIdentityProviderDetailsPtrType) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return i.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (i *serverIdentityProviderDetailsPtrType) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityProviderDetailsPtrOutput)
}

type ServerIdentityProviderDetailsOutput struct{ *pulumi.OutputState }

func (ServerIdentityProviderDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentityProviderDetails)(nil)).Elem()
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsOutput() ServerIdentityProviderDetailsOutput {
	return o
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsOutput {
	return o
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return o.ToServerIdentityProviderDetailsPtrOutputWithContext(context.Background())
}

func (o ServerIdentityProviderDetailsOutput) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerIdentityProviderDetails) *ServerIdentityProviderDetails {
		return &v
	}).(ServerIdentityProviderDetailsPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) InvocationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.InvocationRole }).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentityProviderDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ServerIdentityProviderDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerIdentityProviderDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentityProviderDetails)(nil)).Elem()
}

func (o ServerIdentityProviderDetailsPtrOutput) ToServerIdentityProviderDetailsPtrOutput() ServerIdentityProviderDetailsPtrOutput {
	return o
}

func (o ServerIdentityProviderDetailsPtrOutput) ToServerIdentityProviderDetailsPtrOutputWithContext(ctx context.Context) ServerIdentityProviderDetailsPtrOutput {
	return o
}

func (o ServerIdentityProviderDetailsPtrOutput) Elem() ServerIdentityProviderDetailsOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) ServerIdentityProviderDetails {
		if v != nil {
			return *v
		}
		var ret ServerIdentityProviderDetails
		return ret
	}).(ServerIdentityProviderDetailsOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryId
	}).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) InvocationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.InvocationRole
	}).(pulumi.StringPtrOutput)
}

func (o ServerIdentityProviderDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentityProviderDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ServerProtocol struct {
}

// ServerProtocolInput is an input type that accepts ServerProtocolArgs and ServerProtocolOutput values.
// You can construct a concrete instance of `ServerProtocolInput` via:
//
//          ServerProtocolArgs{...}
type ServerProtocolInput interface {
	pulumi.Input

	ToServerProtocolOutput() ServerProtocolOutput
	ToServerProtocolOutputWithContext(context.Context) ServerProtocolOutput
}

type ServerProtocolArgs struct {
}

func (ServerProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocol)(nil)).Elem()
}

func (i ServerProtocolArgs) ToServerProtocolOutput() ServerProtocolOutput {
	return i.ToServerProtocolOutputWithContext(context.Background())
}

func (i ServerProtocolArgs) ToServerProtocolOutputWithContext(ctx context.Context) ServerProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolOutput)
}

// ServerProtocolArrayInput is an input type that accepts ServerProtocolArray and ServerProtocolArrayOutput values.
// You can construct a concrete instance of `ServerProtocolArrayInput` via:
//
//          ServerProtocolArray{ ServerProtocolArgs{...} }
type ServerProtocolArrayInput interface {
	pulumi.Input

	ToServerProtocolArrayOutput() ServerProtocolArrayOutput
	ToServerProtocolArrayOutputWithContext(context.Context) ServerProtocolArrayOutput
}

type ServerProtocolArray []ServerProtocolInput

func (ServerProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerProtocol)(nil)).Elem()
}

func (i ServerProtocolArray) ToServerProtocolArrayOutput() ServerProtocolArrayOutput {
	return i.ToServerProtocolArrayOutputWithContext(context.Background())
}

func (i ServerProtocolArray) ToServerProtocolArrayOutputWithContext(ctx context.Context) ServerProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolArrayOutput)
}

type ServerProtocolOutput struct{ *pulumi.OutputState }

func (ServerProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocol)(nil)).Elem()
}

func (o ServerProtocolOutput) ToServerProtocolOutput() ServerProtocolOutput {
	return o
}

func (o ServerProtocolOutput) ToServerProtocolOutputWithContext(ctx context.Context) ServerProtocolOutput {
	return o
}

type ServerProtocolArrayOutput struct{ *pulumi.OutputState }

func (ServerProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerProtocol)(nil)).Elem()
}

func (o ServerProtocolArrayOutput) ToServerProtocolArrayOutput() ServerProtocolArrayOutput {
	return o
}

func (o ServerProtocolArrayOutput) ToServerProtocolArrayOutputWithContext(ctx context.Context) ServerProtocolArrayOutput {
	return o
}

func (o ServerProtocolArrayOutput) Index(i pulumi.IntInput) ServerProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerProtocol {
		return vs[0].([]ServerProtocol)[vs[1].(int)]
	}).(ServerProtocolOutput)
}

type ServerProtocolDetails struct {
	PassiveIp *string `pulumi:"passiveIp"`
}

// ServerProtocolDetailsInput is an input type that accepts ServerProtocolDetailsArgs and ServerProtocolDetailsOutput values.
// You can construct a concrete instance of `ServerProtocolDetailsInput` via:
//
//          ServerProtocolDetailsArgs{...}
type ServerProtocolDetailsInput interface {
	pulumi.Input

	ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput
	ToServerProtocolDetailsOutputWithContext(context.Context) ServerProtocolDetailsOutput
}

type ServerProtocolDetailsArgs struct {
	PassiveIp pulumi.StringPtrInput `pulumi:"passiveIp"`
}

func (ServerProtocolDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocolDetails)(nil)).Elem()
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput {
	return i.ToServerProtocolDetailsOutputWithContext(context.Background())
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsOutputWithContext(ctx context.Context) ServerProtocolDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsOutput)
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return i.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (i ServerProtocolDetailsArgs) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsOutput).ToServerProtocolDetailsPtrOutputWithContext(ctx)
}

// ServerProtocolDetailsPtrInput is an input type that accepts ServerProtocolDetailsArgs, ServerProtocolDetailsPtr and ServerProtocolDetailsPtrOutput values.
// You can construct a concrete instance of `ServerProtocolDetailsPtrInput` via:
//
//          ServerProtocolDetailsArgs{...}
//
//  or:
//
//          nil
type ServerProtocolDetailsPtrInput interface {
	pulumi.Input

	ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput
	ToServerProtocolDetailsPtrOutputWithContext(context.Context) ServerProtocolDetailsPtrOutput
}

type serverProtocolDetailsPtrType ServerProtocolDetailsArgs

func ServerProtocolDetailsPtr(v *ServerProtocolDetailsArgs) ServerProtocolDetailsPtrInput {
	return (*serverProtocolDetailsPtrType)(v)
}

func (*serverProtocolDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerProtocolDetails)(nil)).Elem()
}

func (i *serverProtocolDetailsPtrType) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return i.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (i *serverProtocolDetailsPtrType) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerProtocolDetailsPtrOutput)
}

type ServerProtocolDetailsOutput struct{ *pulumi.OutputState }

func (ServerProtocolDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerProtocolDetails)(nil)).Elem()
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsOutput() ServerProtocolDetailsOutput {
	return o
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsOutputWithContext(ctx context.Context) ServerProtocolDetailsOutput {
	return o
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return o.ToServerProtocolDetailsPtrOutputWithContext(context.Background())
}

func (o ServerProtocolDetailsOutput) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerProtocolDetails) *ServerProtocolDetails {
		return &v
	}).(ServerProtocolDetailsPtrOutput)
}

func (o ServerProtocolDetailsOutput) PassiveIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerProtocolDetails) *string { return v.PassiveIp }).(pulumi.StringPtrOutput)
}

type ServerProtocolDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerProtocolDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerProtocolDetails)(nil)).Elem()
}

func (o ServerProtocolDetailsPtrOutput) ToServerProtocolDetailsPtrOutput() ServerProtocolDetailsPtrOutput {
	return o
}

func (o ServerProtocolDetailsPtrOutput) ToServerProtocolDetailsPtrOutputWithContext(ctx context.Context) ServerProtocolDetailsPtrOutput {
	return o
}

func (o ServerProtocolDetailsPtrOutput) Elem() ServerProtocolDetailsOutput {
	return o.ApplyT(func(v *ServerProtocolDetails) ServerProtocolDetails {
		if v != nil {
			return *v
		}
		var ret ServerProtocolDetails
		return ret
	}).(ServerProtocolDetailsOutput)
}

func (o ServerProtocolDetailsPtrOutput) PassiveIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerProtocolDetails) *string {
		if v == nil {
			return nil
		}
		return v.PassiveIp
	}).(pulumi.StringPtrOutput)
}

type ServerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ServerTagInput is an input type that accepts ServerTagArgs and ServerTagOutput values.
// You can construct a concrete instance of `ServerTagInput` via:
//
//          ServerTagArgs{...}
type ServerTagInput interface {
	pulumi.Input

	ToServerTagOutput() ServerTagOutput
	ToServerTagOutputWithContext(context.Context) ServerTagOutput
}

type ServerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (i ServerTagArgs) ToServerTagOutput() ServerTagOutput {
	return i.ToServerTagOutputWithContext(context.Background())
}

func (i ServerTagArgs) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagOutput)
}

// ServerTagArrayInput is an input type that accepts ServerTagArray and ServerTagArrayOutput values.
// You can construct a concrete instance of `ServerTagArrayInput` via:
//
//          ServerTagArray{ ServerTagArgs{...} }
type ServerTagArrayInput interface {
	pulumi.Input

	ToServerTagArrayOutput() ServerTagArrayOutput
	ToServerTagArrayOutputWithContext(context.Context) ServerTagArrayOutput
}

type ServerTagArray []ServerTagInput

func (ServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (i ServerTagArray) ToServerTagArrayOutput() ServerTagArrayOutput {
	return i.ToServerTagArrayOutputWithContext(context.Background())
}

func (i ServerTagArray) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagArrayOutput)
}

type ServerTagOutput struct{ *pulumi.OutputState }

func (ServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (o ServerTagOutput) ToServerTagOutput() ServerTagOutput {
	return o
}

func (o ServerTagOutput) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return o
}

func (o ServerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Value }).(pulumi.StringOutput)
}

type ServerTagArrayOutput struct{ *pulumi.OutputState }

func (ServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (o ServerTagArrayOutput) ToServerTagArrayOutput() ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) Index(i pulumi.IntInput) ServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerTag {
		return vs[0].([]ServerTag)[vs[1].(int)]
	}).(ServerTagOutput)
}

type ServerWorkflowDetail struct {
	ExecutionRole string `pulumi:"executionRole"`
	WorkflowId    string `pulumi:"workflowId"`
}

// ServerWorkflowDetailInput is an input type that accepts ServerWorkflowDetailArgs and ServerWorkflowDetailOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailInput` via:
//
//          ServerWorkflowDetailArgs{...}
type ServerWorkflowDetailInput interface {
	pulumi.Input

	ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput
	ToServerWorkflowDetailOutputWithContext(context.Context) ServerWorkflowDetailOutput
}

type ServerWorkflowDetailArgs struct {
	ExecutionRole pulumi.StringInput `pulumi:"executionRole"`
	WorkflowId    pulumi.StringInput `pulumi:"workflowId"`
}

func (ServerWorkflowDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetail)(nil)).Elem()
}

func (i ServerWorkflowDetailArgs) ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput {
	return i.ToServerWorkflowDetailOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailArgs) ToServerWorkflowDetailOutputWithContext(ctx context.Context) ServerWorkflowDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailOutput)
}

// ServerWorkflowDetailArrayInput is an input type that accepts ServerWorkflowDetailArray and ServerWorkflowDetailArrayOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailArrayInput` via:
//
//          ServerWorkflowDetailArray{ ServerWorkflowDetailArgs{...} }
type ServerWorkflowDetailArrayInput interface {
	pulumi.Input

	ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput
	ToServerWorkflowDetailArrayOutputWithContext(context.Context) ServerWorkflowDetailArrayOutput
}

type ServerWorkflowDetailArray []ServerWorkflowDetailInput

func (ServerWorkflowDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerWorkflowDetail)(nil)).Elem()
}

func (i ServerWorkflowDetailArray) ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput {
	return i.ToServerWorkflowDetailArrayOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailArray) ToServerWorkflowDetailArrayOutputWithContext(ctx context.Context) ServerWorkflowDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailArrayOutput)
}

type ServerWorkflowDetailOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetail)(nil)).Elem()
}

func (o ServerWorkflowDetailOutput) ToServerWorkflowDetailOutput() ServerWorkflowDetailOutput {
	return o
}

func (o ServerWorkflowDetailOutput) ToServerWorkflowDetailOutputWithContext(ctx context.Context) ServerWorkflowDetailOutput {
	return o
}

func (o ServerWorkflowDetailOutput) ExecutionRole() pulumi.StringOutput {
	return o.ApplyT(func(v ServerWorkflowDetail) string { return v.ExecutionRole }).(pulumi.StringOutput)
}

func (o ServerWorkflowDetailOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerWorkflowDetail) string { return v.WorkflowId }).(pulumi.StringOutput)
}

type ServerWorkflowDetailArrayOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerWorkflowDetail)(nil)).Elem()
}

func (o ServerWorkflowDetailArrayOutput) ToServerWorkflowDetailArrayOutput() ServerWorkflowDetailArrayOutput {
	return o
}

func (o ServerWorkflowDetailArrayOutput) ToServerWorkflowDetailArrayOutputWithContext(ctx context.Context) ServerWorkflowDetailArrayOutput {
	return o
}

func (o ServerWorkflowDetailArrayOutput) Index(i pulumi.IntInput) ServerWorkflowDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerWorkflowDetail {
		return vs[0].([]ServerWorkflowDetail)[vs[1].(int)]
	}).(ServerWorkflowDetailOutput)
}

type ServerWorkflowDetails struct {
	OnUpload []ServerWorkflowDetail `pulumi:"onUpload"`
}

// ServerWorkflowDetailsInput is an input type that accepts ServerWorkflowDetailsArgs and ServerWorkflowDetailsOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailsInput` via:
//
//          ServerWorkflowDetailsArgs{...}
type ServerWorkflowDetailsInput interface {
	pulumi.Input

	ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput
	ToServerWorkflowDetailsOutputWithContext(context.Context) ServerWorkflowDetailsOutput
}

type ServerWorkflowDetailsArgs struct {
	OnUpload ServerWorkflowDetailArrayInput `pulumi:"onUpload"`
}

func (ServerWorkflowDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetails)(nil)).Elem()
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput {
	return i.ToServerWorkflowDetailsOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsOutputWithContext(ctx context.Context) ServerWorkflowDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsOutput)
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return i.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (i ServerWorkflowDetailsArgs) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsOutput).ToServerWorkflowDetailsPtrOutputWithContext(ctx)
}

// ServerWorkflowDetailsPtrInput is an input type that accepts ServerWorkflowDetailsArgs, ServerWorkflowDetailsPtr and ServerWorkflowDetailsPtrOutput values.
// You can construct a concrete instance of `ServerWorkflowDetailsPtrInput` via:
//
//          ServerWorkflowDetailsArgs{...}
//
//  or:
//
//          nil
type ServerWorkflowDetailsPtrInput interface {
	pulumi.Input

	ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput
	ToServerWorkflowDetailsPtrOutputWithContext(context.Context) ServerWorkflowDetailsPtrOutput
}

type serverWorkflowDetailsPtrType ServerWorkflowDetailsArgs

func ServerWorkflowDetailsPtr(v *ServerWorkflowDetailsArgs) ServerWorkflowDetailsPtrInput {
	return (*serverWorkflowDetailsPtrType)(v)
}

func (*serverWorkflowDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerWorkflowDetails)(nil)).Elem()
}

func (i *serverWorkflowDetailsPtrType) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return i.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (i *serverWorkflowDetailsPtrType) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerWorkflowDetailsPtrOutput)
}

type ServerWorkflowDetailsOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerWorkflowDetails)(nil)).Elem()
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsOutput() ServerWorkflowDetailsOutput {
	return o
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsOutputWithContext(ctx context.Context) ServerWorkflowDetailsOutput {
	return o
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return o.ToServerWorkflowDetailsPtrOutputWithContext(context.Background())
}

func (o ServerWorkflowDetailsOutput) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerWorkflowDetails) *ServerWorkflowDetails {
		return &v
	}).(ServerWorkflowDetailsPtrOutput)
}

func (o ServerWorkflowDetailsOutput) OnUpload() ServerWorkflowDetailArrayOutput {
	return o.ApplyT(func(v ServerWorkflowDetails) []ServerWorkflowDetail { return v.OnUpload }).(ServerWorkflowDetailArrayOutput)
}

type ServerWorkflowDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerWorkflowDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerWorkflowDetails)(nil)).Elem()
}

func (o ServerWorkflowDetailsPtrOutput) ToServerWorkflowDetailsPtrOutput() ServerWorkflowDetailsPtrOutput {
	return o
}

func (o ServerWorkflowDetailsPtrOutput) ToServerWorkflowDetailsPtrOutputWithContext(ctx context.Context) ServerWorkflowDetailsPtrOutput {
	return o
}

func (o ServerWorkflowDetailsPtrOutput) Elem() ServerWorkflowDetailsOutput {
	return o.ApplyT(func(v *ServerWorkflowDetails) ServerWorkflowDetails {
		if v != nil {
			return *v
		}
		var ret ServerWorkflowDetails
		return ret
	}).(ServerWorkflowDetailsOutput)
}

func (o ServerWorkflowDetailsPtrOutput) OnUpload() ServerWorkflowDetailArrayOutput {
	return o.ApplyT(func(v *ServerWorkflowDetails) []ServerWorkflowDetail {
		if v == nil {
			return nil
		}
		return v.OnUpload
	}).(ServerWorkflowDetailArrayOutput)
}

type UserHomeDirectoryMapEntry struct {
	Entry  string `pulumi:"entry"`
	Target string `pulumi:"target"`
}

// UserHomeDirectoryMapEntryInput is an input type that accepts UserHomeDirectoryMapEntryArgs and UserHomeDirectoryMapEntryOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMapEntryInput` via:
//
//          UserHomeDirectoryMapEntryArgs{...}
type UserHomeDirectoryMapEntryInput interface {
	pulumi.Input

	ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput
	ToUserHomeDirectoryMapEntryOutputWithContext(context.Context) UserHomeDirectoryMapEntryOutput
}

type UserHomeDirectoryMapEntryArgs struct {
	Entry  pulumi.StringInput `pulumi:"entry"`
	Target pulumi.StringInput `pulumi:"target"`
}

func (UserHomeDirectoryMapEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (i UserHomeDirectoryMapEntryArgs) ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput {
	return i.ToUserHomeDirectoryMapEntryOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMapEntryArgs) ToUserHomeDirectoryMapEntryOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMapEntryOutput)
}

// UserHomeDirectoryMapEntryArrayInput is an input type that accepts UserHomeDirectoryMapEntryArray and UserHomeDirectoryMapEntryArrayOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMapEntryArrayInput` via:
//
//          UserHomeDirectoryMapEntryArray{ UserHomeDirectoryMapEntryArgs{...} }
type UserHomeDirectoryMapEntryArrayInput interface {
	pulumi.Input

	ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput
	ToUserHomeDirectoryMapEntryArrayOutputWithContext(context.Context) UserHomeDirectoryMapEntryArrayOutput
}

type UserHomeDirectoryMapEntryArray []UserHomeDirectoryMapEntryInput

func (UserHomeDirectoryMapEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (i UserHomeDirectoryMapEntryArray) ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput {
	return i.ToUserHomeDirectoryMapEntryArrayOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMapEntryArray) ToUserHomeDirectoryMapEntryArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMapEntryArrayOutput)
}

type UserHomeDirectoryMapEntryOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMapEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (o UserHomeDirectoryMapEntryOutput) ToUserHomeDirectoryMapEntryOutput() UserHomeDirectoryMapEntryOutput {
	return o
}

func (o UserHomeDirectoryMapEntryOutput) ToUserHomeDirectoryMapEntryOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryOutput {
	return o
}

func (o UserHomeDirectoryMapEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapEntry) string { return v.Entry }).(pulumi.StringOutput)
}

func (o UserHomeDirectoryMapEntryOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapEntry) string { return v.Target }).(pulumi.StringOutput)
}

type UserHomeDirectoryMapEntryArrayOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMapEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapEntry)(nil)).Elem()
}

func (o UserHomeDirectoryMapEntryArrayOutput) ToUserHomeDirectoryMapEntryArrayOutput() UserHomeDirectoryMapEntryArrayOutput {
	return o
}

func (o UserHomeDirectoryMapEntryArrayOutput) ToUserHomeDirectoryMapEntryArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMapEntryArrayOutput {
	return o
}

func (o UserHomeDirectoryMapEntryArrayOutput) Index(i pulumi.IntInput) UserHomeDirectoryMapEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHomeDirectoryMapEntry {
		return vs[0].([]UserHomeDirectoryMapEntry)[vs[1].(int)]
	}).(UserHomeDirectoryMapEntryOutput)
}

type UserPosixProfile struct {
	Gid           float64   `pulumi:"gid"`
	SecondaryGids []float64 `pulumi:"secondaryGids"`
	Uid           float64   `pulumi:"uid"`
}

// UserPosixProfileInput is an input type that accepts UserPosixProfileArgs and UserPosixProfileOutput values.
// You can construct a concrete instance of `UserPosixProfileInput` via:
//
//          UserPosixProfileArgs{...}
type UserPosixProfileInput interface {
	pulumi.Input

	ToUserPosixProfileOutput() UserPosixProfileOutput
	ToUserPosixProfileOutputWithContext(context.Context) UserPosixProfileOutput
}

type UserPosixProfileArgs struct {
	Gid           pulumi.Float64Input      `pulumi:"gid"`
	SecondaryGids pulumi.Float64ArrayInput `pulumi:"secondaryGids"`
	Uid           pulumi.Float64Input      `pulumi:"uid"`
}

func (UserPosixProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return i.ToUserPosixProfileOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput)
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput).ToUserPosixProfilePtrOutputWithContext(ctx)
}

// UserPosixProfilePtrInput is an input type that accepts UserPosixProfileArgs, UserPosixProfilePtr and UserPosixProfilePtrOutput values.
// You can construct a concrete instance of `UserPosixProfilePtrInput` via:
//
//          UserPosixProfileArgs{...}
//
//  or:
//
//          nil
type UserPosixProfilePtrInput interface {
	pulumi.Input

	ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput
	ToUserPosixProfilePtrOutputWithContext(context.Context) UserPosixProfilePtrOutput
}

type userPosixProfilePtrType UserPosixProfileArgs

func UserPosixProfilePtr(v *UserPosixProfileArgs) UserPosixProfilePtrInput {
	return (*userPosixProfilePtrType)(v)
}

func (*userPosixProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfilePtrOutput)
}

type UserPosixProfileOutput struct{ *pulumi.OutputState }

func (UserPosixProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPosixProfile) *UserPosixProfile {
		return &v
	}).(UserPosixProfilePtrOutput)
}

func (o UserPosixProfileOutput) Gid() pulumi.Float64Output {
	return o.ApplyT(func(v UserPosixProfile) float64 { return v.Gid }).(pulumi.Float64Output)
}

func (o UserPosixProfileOutput) SecondaryGids() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v UserPosixProfile) []float64 { return v.SecondaryGids }).(pulumi.Float64ArrayOutput)
}

func (o UserPosixProfileOutput) Uid() pulumi.Float64Output {
	return o.ApplyT(func(v UserPosixProfile) float64 { return v.Uid }).(pulumi.Float64Output)
}

type UserPosixProfilePtrOutput struct{ *pulumi.OutputState }

func (UserPosixProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) Elem() UserPosixProfileOutput {
	return o.ApplyT(func(v *UserPosixProfile) UserPosixProfile {
		if v != nil {
			return *v
		}
		var ret UserPosixProfile
		return ret
	}).(UserPosixProfileOutput)
}

func (o UserPosixProfilePtrOutput) Gid() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *float64 {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.Float64PtrOutput)
}

func (o UserPosixProfilePtrOutput) SecondaryGids() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *UserPosixProfile) []float64 {
		if v == nil {
			return nil
		}
		return v.SecondaryGids
	}).(pulumi.Float64ArrayOutput)
}

func (o UserPosixProfilePtrOutput) Uid() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *float64 {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.Float64PtrOutput)
}

type UserSshPublicKey struct {
}

// UserSshPublicKeyInput is an input type that accepts UserSshPublicKeyArgs and UserSshPublicKeyOutput values.
// You can construct a concrete instance of `UserSshPublicKeyInput` via:
//
//          UserSshPublicKeyArgs{...}
type UserSshPublicKeyInput interface {
	pulumi.Input

	ToUserSshPublicKeyOutput() UserSshPublicKeyOutput
	ToUserSshPublicKeyOutputWithContext(context.Context) UserSshPublicKeyOutput
}

type UserSshPublicKeyArgs struct {
}

func (UserSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSshPublicKey)(nil)).Elem()
}

func (i UserSshPublicKeyArgs) ToUserSshPublicKeyOutput() UserSshPublicKeyOutput {
	return i.ToUserSshPublicKeyOutputWithContext(context.Background())
}

func (i UserSshPublicKeyArgs) ToUserSshPublicKeyOutputWithContext(ctx context.Context) UserSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSshPublicKeyOutput)
}

// UserSshPublicKeyArrayInput is an input type that accepts UserSshPublicKeyArray and UserSshPublicKeyArrayOutput values.
// You can construct a concrete instance of `UserSshPublicKeyArrayInput` via:
//
//          UserSshPublicKeyArray{ UserSshPublicKeyArgs{...} }
type UserSshPublicKeyArrayInput interface {
	pulumi.Input

	ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput
	ToUserSshPublicKeyArrayOutputWithContext(context.Context) UserSshPublicKeyArrayOutput
}

type UserSshPublicKeyArray []UserSshPublicKeyInput

func (UserSshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSshPublicKey)(nil)).Elem()
}

func (i UserSshPublicKeyArray) ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput {
	return i.ToUserSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i UserSshPublicKeyArray) ToUserSshPublicKeyArrayOutputWithContext(ctx context.Context) UserSshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSshPublicKeyArrayOutput)
}

type UserSshPublicKeyOutput struct{ *pulumi.OutputState }

func (UserSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSshPublicKey)(nil)).Elem()
}

func (o UserSshPublicKeyOutput) ToUserSshPublicKeyOutput() UserSshPublicKeyOutput {
	return o
}

func (o UserSshPublicKeyOutput) ToUserSshPublicKeyOutputWithContext(ctx context.Context) UserSshPublicKeyOutput {
	return o
}

type UserSshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (UserSshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSshPublicKey)(nil)).Elem()
}

func (o UserSshPublicKeyArrayOutput) ToUserSshPublicKeyArrayOutput() UserSshPublicKeyArrayOutput {
	return o
}

func (o UserSshPublicKeyArrayOutput) ToUserSshPublicKeyArrayOutputWithContext(ctx context.Context) UserSshPublicKeyArrayOutput {
	return o
}

func (o UserSshPublicKeyArrayOutput) Index(i pulumi.IntInput) UserSshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSshPublicKey {
		return vs[0].([]UserSshPublicKey)[vs[1].(int)]
	}).(UserSshPublicKeyOutput)
}

type UserTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// UserTagInput is an input type that accepts UserTagArgs and UserTagOutput values.
// You can construct a concrete instance of `UserTagInput` via:
//
//          UserTagArgs{...}
type UserTagInput interface {
	pulumi.Input

	ToUserTagOutput() UserTagOutput
	ToUserTagOutputWithContext(context.Context) UserTagOutput
}

type UserTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (UserTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (i UserTagArgs) ToUserTagOutput() UserTagOutput {
	return i.ToUserTagOutputWithContext(context.Background())
}

func (i UserTagArgs) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagOutput)
}

// UserTagArrayInput is an input type that accepts UserTagArray and UserTagArrayOutput values.
// You can construct a concrete instance of `UserTagArrayInput` via:
//
//          UserTagArray{ UserTagArgs{...} }
type UserTagArrayInput interface {
	pulumi.Input

	ToUserTagArrayOutput() UserTagArrayOutput
	ToUserTagArrayOutputWithContext(context.Context) UserTagArrayOutput
}

type UserTagArray []UserTagInput

func (UserTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (i UserTagArray) ToUserTagArrayOutput() UserTagArrayOutput {
	return i.ToUserTagArrayOutputWithContext(context.Background())
}

func (i UserTagArray) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagArrayOutput)
}

type UserTagOutput struct{ *pulumi.OutputState }

func (UserTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (o UserTagOutput) ToUserTagOutput() UserTagOutput {
	return o
}

func (o UserTagOutput) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return o
}

func (o UserTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o UserTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Value }).(pulumi.StringOutput)
}

type UserTagArrayOutput struct{ *pulumi.OutputState }

func (UserTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (o UserTagArrayOutput) ToUserTagArrayOutput() UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) Index(i pulumi.IntInput) UserTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserTag {
		return vs[0].([]UserTag)[vs[1].(int)]
	}).(UserTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsPtrInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityProviderDetailsInput)(nil)).Elem(), ServerIdentityProviderDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityProviderDetailsPtrInput)(nil)).Elem(), ServerIdentityProviderDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolInput)(nil)).Elem(), ServerProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolArrayInput)(nil)).Elem(), ServerProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolDetailsInput)(nil)).Elem(), ServerProtocolDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerProtocolDetailsPtrInput)(nil)).Elem(), ServerProtocolDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagInput)(nil)).Elem(), ServerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagArrayInput)(nil)).Elem(), ServerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailInput)(nil)).Elem(), ServerWorkflowDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailArrayInput)(nil)).Elem(), ServerWorkflowDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailsInput)(nil)).Elem(), ServerWorkflowDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerWorkflowDetailsPtrInput)(nil)).Elem(), ServerWorkflowDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMapEntryInput)(nil)).Elem(), UserHomeDirectoryMapEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMapEntryArrayInput)(nil)).Elem(), UserHomeDirectoryMapEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfileInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfilePtrInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSshPublicKeyInput)(nil)).Elem(), UserSshPublicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSshPublicKeyArrayInput)(nil)).Elem(), UserSshPublicKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagInput)(nil)).Elem(), UserTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagArrayInput)(nil)).Elem(), UserTagArray{})
	pulumi.RegisterOutputType(ServerEndpointDetailsOutput{})
	pulumi.RegisterOutputType(ServerEndpointDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerIdentityProviderDetailsOutput{})
	pulumi.RegisterOutputType(ServerIdentityProviderDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerProtocolOutput{})
	pulumi.RegisterOutputType(ServerProtocolArrayOutput{})
	pulumi.RegisterOutputType(ServerProtocolDetailsOutput{})
	pulumi.RegisterOutputType(ServerProtocolDetailsPtrOutput{})
	pulumi.RegisterOutputType(ServerTagOutput{})
	pulumi.RegisterOutputType(ServerTagArrayOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailArrayOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailsOutput{})
	pulumi.RegisterOutputType(ServerWorkflowDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMapEntryOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMapEntryArrayOutput{})
	pulumi.RegisterOutputType(UserPosixProfileOutput{})
	pulumi.RegisterOutputType(UserPosixProfilePtrOutput{})
	pulumi.RegisterOutputType(UserSshPublicKeyOutput{})
	pulumi.RegisterOutputType(UserSshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(UserTagOutput{})
	pulumi.RegisterOutputType(UserTagArrayOutput{})
}
