// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Creates a key-value pair for a specific resource.
type AgreementTag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value string `pulumi:"value"`
}

// Configuration for an AS2 connector.
type As2ConfigProperties struct {
	// ARN or name of the secret in AWS Secrets Manager which contains the credentials for Basic authentication. If empty, Basic authentication is disabled for the AS2 connector
	BasicAuthSecretId *string `pulumi:"basicAuthSecretId"`
	// Compression setting for this AS2 connector configuration.
	Compression *ConnectorAs2ConfigPropertiesCompression `pulumi:"compression"`
	// Encryption algorithm for this AS2 connector configuration.
	EncryptionAlgorithm *ConnectorAs2ConfigPropertiesEncryptionAlgorithm `pulumi:"encryptionAlgorithm"`
	// A unique identifier for the local profile.
	LocalProfileId *string `pulumi:"localProfileId"`
	// MDN Response setting for this AS2 connector configuration.
	MdnResponse *ConnectorAs2ConfigPropertiesMdnResponse `pulumi:"mdnResponse"`
	// MDN Signing algorithm for this AS2 connector configuration.
	MdnSigningAlgorithm *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm `pulumi:"mdnSigningAlgorithm"`
	// The message subject for this AS2 connector configuration.
	MessageSubject *string `pulumi:"messageSubject"`
	// A unique identifier for the partner profile.
	PartnerProfileId *string `pulumi:"partnerProfileId"`
	// Signing algorithm for this AS2 connector configuration.
	SigningAlgorithm *ConnectorAs2ConfigPropertiesSigningAlgorithm `pulumi:"signingAlgorithm"`
}

// As2ConfigPropertiesInput is an input type that accepts As2ConfigPropertiesArgs and As2ConfigPropertiesOutput values.
// You can construct a concrete instance of `As2ConfigPropertiesInput` via:
//
//	As2ConfigPropertiesArgs{...}
type As2ConfigPropertiesInput interface {
	pulumi.Input

	ToAs2ConfigPropertiesOutput() As2ConfigPropertiesOutput
	ToAs2ConfigPropertiesOutputWithContext(context.Context) As2ConfigPropertiesOutput
}

// Configuration for an AS2 connector.
type As2ConfigPropertiesArgs struct {
	// ARN or name of the secret in AWS Secrets Manager which contains the credentials for Basic authentication. If empty, Basic authentication is disabled for the AS2 connector
	BasicAuthSecretId pulumi.StringPtrInput `pulumi:"basicAuthSecretId"`
	// Compression setting for this AS2 connector configuration.
	Compression ConnectorAs2ConfigPropertiesCompressionPtrInput `pulumi:"compression"`
	// Encryption algorithm for this AS2 connector configuration.
	EncryptionAlgorithm ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrInput `pulumi:"encryptionAlgorithm"`
	// A unique identifier for the local profile.
	LocalProfileId pulumi.StringPtrInput `pulumi:"localProfileId"`
	// MDN Response setting for this AS2 connector configuration.
	MdnResponse ConnectorAs2ConfigPropertiesMdnResponsePtrInput `pulumi:"mdnResponse"`
	// MDN Signing algorithm for this AS2 connector configuration.
	MdnSigningAlgorithm ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrInput `pulumi:"mdnSigningAlgorithm"`
	// The message subject for this AS2 connector configuration.
	MessageSubject pulumi.StringPtrInput `pulumi:"messageSubject"`
	// A unique identifier for the partner profile.
	PartnerProfileId pulumi.StringPtrInput `pulumi:"partnerProfileId"`
	// Signing algorithm for this AS2 connector configuration.
	SigningAlgorithm ConnectorAs2ConfigPropertiesSigningAlgorithmPtrInput `pulumi:"signingAlgorithm"`
}

func (As2ConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*As2ConfigProperties)(nil)).Elem()
}

func (i As2ConfigPropertiesArgs) ToAs2ConfigPropertiesOutput() As2ConfigPropertiesOutput {
	return i.ToAs2ConfigPropertiesOutputWithContext(context.Background())
}

func (i As2ConfigPropertiesArgs) ToAs2ConfigPropertiesOutputWithContext(ctx context.Context) As2ConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(As2ConfigPropertiesOutput)
}

func (i As2ConfigPropertiesArgs) ToAs2ConfigPropertiesPtrOutput() As2ConfigPropertiesPtrOutput {
	return i.ToAs2ConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i As2ConfigPropertiesArgs) ToAs2ConfigPropertiesPtrOutputWithContext(ctx context.Context) As2ConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(As2ConfigPropertiesOutput).ToAs2ConfigPropertiesPtrOutputWithContext(ctx)
}

// As2ConfigPropertiesPtrInput is an input type that accepts As2ConfigPropertiesArgs, As2ConfigPropertiesPtr and As2ConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `As2ConfigPropertiesPtrInput` via:
//
//	        As2ConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type As2ConfigPropertiesPtrInput interface {
	pulumi.Input

	ToAs2ConfigPropertiesPtrOutput() As2ConfigPropertiesPtrOutput
	ToAs2ConfigPropertiesPtrOutputWithContext(context.Context) As2ConfigPropertiesPtrOutput
}

type as2ConfigPropertiesPtrType As2ConfigPropertiesArgs

func As2ConfigPropertiesPtr(v *As2ConfigPropertiesArgs) As2ConfigPropertiesPtrInput {
	return (*as2ConfigPropertiesPtrType)(v)
}

func (*as2ConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**As2ConfigProperties)(nil)).Elem()
}

func (i *as2ConfigPropertiesPtrType) ToAs2ConfigPropertiesPtrOutput() As2ConfigPropertiesPtrOutput {
	return i.ToAs2ConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *as2ConfigPropertiesPtrType) ToAs2ConfigPropertiesPtrOutputWithContext(ctx context.Context) As2ConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(As2ConfigPropertiesPtrOutput)
}

// Configuration for an AS2 connector.
type As2ConfigPropertiesOutput struct{ *pulumi.OutputState }

func (As2ConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*As2ConfigProperties)(nil)).Elem()
}

func (o As2ConfigPropertiesOutput) ToAs2ConfigPropertiesOutput() As2ConfigPropertiesOutput {
	return o
}

func (o As2ConfigPropertiesOutput) ToAs2ConfigPropertiesOutputWithContext(ctx context.Context) As2ConfigPropertiesOutput {
	return o
}

func (o As2ConfigPropertiesOutput) ToAs2ConfigPropertiesPtrOutput() As2ConfigPropertiesPtrOutput {
	return o.ToAs2ConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o As2ConfigPropertiesOutput) ToAs2ConfigPropertiesPtrOutputWithContext(ctx context.Context) As2ConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v As2ConfigProperties) *As2ConfigProperties {
		return &v
	}).(As2ConfigPropertiesPtrOutput)
}

// ARN or name of the secret in AWS Secrets Manager which contains the credentials for Basic authentication. If empty, Basic authentication is disabled for the AS2 connector
func (o As2ConfigPropertiesOutput) BasicAuthSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *string { return v.BasicAuthSecretId }).(pulumi.StringPtrOutput)
}

// Compression setting for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) Compression() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *ConnectorAs2ConfigPropertiesCompression { return v.Compression }).(ConnectorAs2ConfigPropertiesCompressionPtrOutput)
}

// Encryption algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) EncryptionAlgorithm() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *ConnectorAs2ConfigPropertiesEncryptionAlgorithm {
		return v.EncryptionAlgorithm
	}).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput)
}

// A unique identifier for the local profile.
func (o As2ConfigPropertiesOutput) LocalProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *string { return v.LocalProfileId }).(pulumi.StringPtrOutput)
}

// MDN Response setting for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) MdnResponse() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *ConnectorAs2ConfigPropertiesMdnResponse { return v.MdnResponse }).(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput)
}

// MDN Signing algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) MdnSigningAlgorithm() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm {
		return v.MdnSigningAlgorithm
	}).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput)
}

// The message subject for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) MessageSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *string { return v.MessageSubject }).(pulumi.StringPtrOutput)
}

// A unique identifier for the partner profile.
func (o As2ConfigPropertiesOutput) PartnerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *string { return v.PartnerProfileId }).(pulumi.StringPtrOutput)
}

// Signing algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesOutput) SigningAlgorithm() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o.ApplyT(func(v As2ConfigProperties) *ConnectorAs2ConfigPropertiesSigningAlgorithm { return v.SigningAlgorithm }).(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput)
}

type As2ConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (As2ConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**As2ConfigProperties)(nil)).Elem()
}

func (o As2ConfigPropertiesPtrOutput) ToAs2ConfigPropertiesPtrOutput() As2ConfigPropertiesPtrOutput {
	return o
}

func (o As2ConfigPropertiesPtrOutput) ToAs2ConfigPropertiesPtrOutputWithContext(ctx context.Context) As2ConfigPropertiesPtrOutput {
	return o
}

func (o As2ConfigPropertiesPtrOutput) Elem() As2ConfigPropertiesOutput {
	return o.ApplyT(func(v *As2ConfigProperties) As2ConfigProperties {
		if v != nil {
			return *v
		}
		var ret As2ConfigProperties
		return ret
	}).(As2ConfigPropertiesOutput)
}

// ARN or name of the secret in AWS Secrets Manager which contains the credentials for Basic authentication. If empty, Basic authentication is disabled for the AS2 connector
func (o As2ConfigPropertiesPtrOutput) BasicAuthSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.BasicAuthSecretId
	}).(pulumi.StringPtrOutput)
}

// Compression setting for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) Compression() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *ConnectorAs2ConfigPropertiesCompression {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(ConnectorAs2ConfigPropertiesCompressionPtrOutput)
}

// Encryption algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) EncryptionAlgorithm() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *ConnectorAs2ConfigPropertiesEncryptionAlgorithm {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput)
}

// A unique identifier for the local profile.
func (o As2ConfigPropertiesPtrOutput) LocalProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.LocalProfileId
	}).(pulumi.StringPtrOutput)
}

// MDN Response setting for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) MdnResponse() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *ConnectorAs2ConfigPropertiesMdnResponse {
		if v == nil {
			return nil
		}
		return v.MdnResponse
	}).(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput)
}

// MDN Signing algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) MdnSigningAlgorithm() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm {
		if v == nil {
			return nil
		}
		return v.MdnSigningAlgorithm
	}).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput)
}

// The message subject for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) MessageSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.MessageSubject
	}).(pulumi.StringPtrOutput)
}

// A unique identifier for the partner profile.
func (o As2ConfigPropertiesPtrOutput) PartnerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.PartnerProfileId
	}).(pulumi.StringPtrOutput)
}

// Signing algorithm for this AS2 connector configuration.
func (o As2ConfigPropertiesPtrOutput) SigningAlgorithm() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o.ApplyT(func(v *As2ConfigProperties) *ConnectorAs2ConfigPropertiesSigningAlgorithm {
		if v == nil {
			return nil
		}
		return v.SigningAlgorithm
	}).(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput)
}

// A key-value pair to associate with a resource.
type CertificateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Creates a key-value pair for a specific resource.
type ConnectorTag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value string `pulumi:"value"`
}

// Creates a key-value pair for a specific resource.
type ProfileTag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value string `pulumi:"value"`
}

// Configuration for an SFTP connector.
type SftpConfigProperties struct {
	// List of public host keys, for the external server to which you are connecting.
	TrustedHostKeys []string `pulumi:"trustedHostKeys"`
	// ARN or name of the secret in AWS Secrets Manager which contains the SFTP user's private keys or passwords.
	UserSecretId *string `pulumi:"userSecretId"`
}

// SftpConfigPropertiesInput is an input type that accepts SftpConfigPropertiesArgs and SftpConfigPropertiesOutput values.
// You can construct a concrete instance of `SftpConfigPropertiesInput` via:
//
//	SftpConfigPropertiesArgs{...}
type SftpConfigPropertiesInput interface {
	pulumi.Input

	ToSftpConfigPropertiesOutput() SftpConfigPropertiesOutput
	ToSftpConfigPropertiesOutputWithContext(context.Context) SftpConfigPropertiesOutput
}

// Configuration for an SFTP connector.
type SftpConfigPropertiesArgs struct {
	// List of public host keys, for the external server to which you are connecting.
	TrustedHostKeys pulumi.StringArrayInput `pulumi:"trustedHostKeys"`
	// ARN or name of the secret in AWS Secrets Manager which contains the SFTP user's private keys or passwords.
	UserSecretId pulumi.StringPtrInput `pulumi:"userSecretId"`
}

func (SftpConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpConfigProperties)(nil)).Elem()
}

func (i SftpConfigPropertiesArgs) ToSftpConfigPropertiesOutput() SftpConfigPropertiesOutput {
	return i.ToSftpConfigPropertiesOutputWithContext(context.Background())
}

func (i SftpConfigPropertiesArgs) ToSftpConfigPropertiesOutputWithContext(ctx context.Context) SftpConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SftpConfigPropertiesOutput)
}

func (i SftpConfigPropertiesArgs) ToSftpConfigPropertiesPtrOutput() SftpConfigPropertiesPtrOutput {
	return i.ToSftpConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i SftpConfigPropertiesArgs) ToSftpConfigPropertiesPtrOutputWithContext(ctx context.Context) SftpConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SftpConfigPropertiesOutput).ToSftpConfigPropertiesPtrOutputWithContext(ctx)
}

// SftpConfigPropertiesPtrInput is an input type that accepts SftpConfigPropertiesArgs, SftpConfigPropertiesPtr and SftpConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `SftpConfigPropertiesPtrInput` via:
//
//	        SftpConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type SftpConfigPropertiesPtrInput interface {
	pulumi.Input

	ToSftpConfigPropertiesPtrOutput() SftpConfigPropertiesPtrOutput
	ToSftpConfigPropertiesPtrOutputWithContext(context.Context) SftpConfigPropertiesPtrOutput
}

type sftpConfigPropertiesPtrType SftpConfigPropertiesArgs

func SftpConfigPropertiesPtr(v *SftpConfigPropertiesArgs) SftpConfigPropertiesPtrInput {
	return (*sftpConfigPropertiesPtrType)(v)
}

func (*sftpConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SftpConfigProperties)(nil)).Elem()
}

func (i *sftpConfigPropertiesPtrType) ToSftpConfigPropertiesPtrOutput() SftpConfigPropertiesPtrOutput {
	return i.ToSftpConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *sftpConfigPropertiesPtrType) ToSftpConfigPropertiesPtrOutputWithContext(ctx context.Context) SftpConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SftpConfigPropertiesPtrOutput)
}

// Configuration for an SFTP connector.
type SftpConfigPropertiesOutput struct{ *pulumi.OutputState }

func (SftpConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SftpConfigProperties)(nil)).Elem()
}

func (o SftpConfigPropertiesOutput) ToSftpConfigPropertiesOutput() SftpConfigPropertiesOutput {
	return o
}

func (o SftpConfigPropertiesOutput) ToSftpConfigPropertiesOutputWithContext(ctx context.Context) SftpConfigPropertiesOutput {
	return o
}

func (o SftpConfigPropertiesOutput) ToSftpConfigPropertiesPtrOutput() SftpConfigPropertiesPtrOutput {
	return o.ToSftpConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o SftpConfigPropertiesOutput) ToSftpConfigPropertiesPtrOutputWithContext(ctx context.Context) SftpConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SftpConfigProperties) *SftpConfigProperties {
		return &v
	}).(SftpConfigPropertiesPtrOutput)
}

// List of public host keys, for the external server to which you are connecting.
func (o SftpConfigPropertiesOutput) TrustedHostKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SftpConfigProperties) []string { return v.TrustedHostKeys }).(pulumi.StringArrayOutput)
}

// ARN or name of the secret in AWS Secrets Manager which contains the SFTP user's private keys or passwords.
func (o SftpConfigPropertiesOutput) UserSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SftpConfigProperties) *string { return v.UserSecretId }).(pulumi.StringPtrOutput)
}

type SftpConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SftpConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SftpConfigProperties)(nil)).Elem()
}

func (o SftpConfigPropertiesPtrOutput) ToSftpConfigPropertiesPtrOutput() SftpConfigPropertiesPtrOutput {
	return o
}

func (o SftpConfigPropertiesPtrOutput) ToSftpConfigPropertiesPtrOutputWithContext(ctx context.Context) SftpConfigPropertiesPtrOutput {
	return o
}

func (o SftpConfigPropertiesPtrOutput) Elem() SftpConfigPropertiesOutput {
	return o.ApplyT(func(v *SftpConfigProperties) SftpConfigProperties {
		if v != nil {
			return *v
		}
		var ret SftpConfigProperties
		return ret
	}).(SftpConfigPropertiesOutput)
}

// List of public host keys, for the external server to which you are connecting.
func (o SftpConfigPropertiesPtrOutput) TrustedHostKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SftpConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.TrustedHostKeys
	}).(pulumi.StringArrayOutput)
}

// ARN or name of the secret in AWS Secrets Manager which contains the SFTP user's private keys or passwords.
func (o SftpConfigPropertiesPtrOutput) UserSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SftpConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.UserSecretId
	}).(pulumi.StringPtrOutput)
}

// Specifies the details for an EFS file.
type WorkflowEfsInputFileLocation struct {
	// Specifies the EFS filesystem that contains the file.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The name assigned to the file when it was created in EFS. You use the object path to retrieve the object.
	Path *string `pulumi:"path"`
}

// WorkflowEfsInputFileLocationInput is an input type that accepts WorkflowEfsInputFileLocationArgs and WorkflowEfsInputFileLocationOutput values.
// You can construct a concrete instance of `WorkflowEfsInputFileLocationInput` via:
//
//	WorkflowEfsInputFileLocationArgs{...}
type WorkflowEfsInputFileLocationInput interface {
	pulumi.Input

	ToWorkflowEfsInputFileLocationOutput() WorkflowEfsInputFileLocationOutput
	ToWorkflowEfsInputFileLocationOutputWithContext(context.Context) WorkflowEfsInputFileLocationOutput
}

// Specifies the details for an EFS file.
type WorkflowEfsInputFileLocationArgs struct {
	// Specifies the EFS filesystem that contains the file.
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// The name assigned to the file when it was created in EFS. You use the object path to retrieve the object.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (WorkflowEfsInputFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEfsInputFileLocation)(nil)).Elem()
}

func (i WorkflowEfsInputFileLocationArgs) ToWorkflowEfsInputFileLocationOutput() WorkflowEfsInputFileLocationOutput {
	return i.ToWorkflowEfsInputFileLocationOutputWithContext(context.Background())
}

func (i WorkflowEfsInputFileLocationArgs) ToWorkflowEfsInputFileLocationOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEfsInputFileLocationOutput)
}

func (i WorkflowEfsInputFileLocationArgs) ToWorkflowEfsInputFileLocationPtrOutput() WorkflowEfsInputFileLocationPtrOutput {
	return i.ToWorkflowEfsInputFileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowEfsInputFileLocationArgs) ToWorkflowEfsInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEfsInputFileLocationOutput).ToWorkflowEfsInputFileLocationPtrOutputWithContext(ctx)
}

// WorkflowEfsInputFileLocationPtrInput is an input type that accepts WorkflowEfsInputFileLocationArgs, WorkflowEfsInputFileLocationPtr and WorkflowEfsInputFileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowEfsInputFileLocationPtrInput` via:
//
//	        WorkflowEfsInputFileLocationArgs{...}
//
//	or:
//
//	        nil
type WorkflowEfsInputFileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowEfsInputFileLocationPtrOutput() WorkflowEfsInputFileLocationPtrOutput
	ToWorkflowEfsInputFileLocationPtrOutputWithContext(context.Context) WorkflowEfsInputFileLocationPtrOutput
}

type workflowEfsInputFileLocationPtrType WorkflowEfsInputFileLocationArgs

func WorkflowEfsInputFileLocationPtr(v *WorkflowEfsInputFileLocationArgs) WorkflowEfsInputFileLocationPtrInput {
	return (*workflowEfsInputFileLocationPtrType)(v)
}

func (*workflowEfsInputFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowEfsInputFileLocation)(nil)).Elem()
}

func (i *workflowEfsInputFileLocationPtrType) ToWorkflowEfsInputFileLocationPtrOutput() WorkflowEfsInputFileLocationPtrOutput {
	return i.ToWorkflowEfsInputFileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowEfsInputFileLocationPtrType) ToWorkflowEfsInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEfsInputFileLocationPtrOutput)
}

// Specifies the details for an EFS file.
type WorkflowEfsInputFileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowEfsInputFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEfsInputFileLocation)(nil)).Elem()
}

func (o WorkflowEfsInputFileLocationOutput) ToWorkflowEfsInputFileLocationOutput() WorkflowEfsInputFileLocationOutput {
	return o
}

func (o WorkflowEfsInputFileLocationOutput) ToWorkflowEfsInputFileLocationOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationOutput {
	return o
}

func (o WorkflowEfsInputFileLocationOutput) ToWorkflowEfsInputFileLocationPtrOutput() WorkflowEfsInputFileLocationPtrOutput {
	return o.ToWorkflowEfsInputFileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowEfsInputFileLocationOutput) ToWorkflowEfsInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowEfsInputFileLocation) *WorkflowEfsInputFileLocation {
		return &v
	}).(WorkflowEfsInputFileLocationPtrOutput)
}

// Specifies the EFS filesystem that contains the file.
func (o WorkflowEfsInputFileLocationOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowEfsInputFileLocation) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in EFS. You use the object path to retrieve the object.
func (o WorkflowEfsInputFileLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowEfsInputFileLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type WorkflowEfsInputFileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowEfsInputFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowEfsInputFileLocation)(nil)).Elem()
}

func (o WorkflowEfsInputFileLocationPtrOutput) ToWorkflowEfsInputFileLocationPtrOutput() WorkflowEfsInputFileLocationPtrOutput {
	return o
}

func (o WorkflowEfsInputFileLocationPtrOutput) ToWorkflowEfsInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowEfsInputFileLocationPtrOutput {
	return o
}

func (o WorkflowEfsInputFileLocationPtrOutput) Elem() WorkflowEfsInputFileLocationOutput {
	return o.ApplyT(func(v *WorkflowEfsInputFileLocation) WorkflowEfsInputFileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowEfsInputFileLocation
		return ret
	}).(WorkflowEfsInputFileLocationOutput)
}

// Specifies the EFS filesystem that contains the file.
func (o WorkflowEfsInputFileLocationPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowEfsInputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in EFS. You use the object path to retrieve the object.
func (o WorkflowEfsInputFileLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowEfsInputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the location for the file being decrypted. Only applicable for the Decrypt type of workflow steps.
type WorkflowInputFileLocation struct {
	EfsFileLocation *WorkflowEfsInputFileLocation `pulumi:"efsFileLocation"`
	S3FileLocation  *WorkflowS3InputFileLocation  `pulumi:"s3FileLocation"`
}

// WorkflowInputFileLocationInput is an input type that accepts WorkflowInputFileLocationArgs and WorkflowInputFileLocationOutput values.
// You can construct a concrete instance of `WorkflowInputFileLocationInput` via:
//
//	WorkflowInputFileLocationArgs{...}
type WorkflowInputFileLocationInput interface {
	pulumi.Input

	ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput
	ToWorkflowInputFileLocationOutputWithContext(context.Context) WorkflowInputFileLocationOutput
}

// Specifies the location for the file being decrypted. Only applicable for the Decrypt type of workflow steps.
type WorkflowInputFileLocationArgs struct {
	EfsFileLocation WorkflowEfsInputFileLocationPtrInput `pulumi:"efsFileLocation"`
	S3FileLocation  WorkflowS3InputFileLocationPtrInput  `pulumi:"s3FileLocation"`
}

func (WorkflowInputFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowInputFileLocation)(nil)).Elem()
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput {
	return i.ToWorkflowInputFileLocationOutputWithContext(context.Background())
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationOutputWithContext(ctx context.Context) WorkflowInputFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationOutput)
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return i.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowInputFileLocationArgs) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationOutput).ToWorkflowInputFileLocationPtrOutputWithContext(ctx)
}

// WorkflowInputFileLocationPtrInput is an input type that accepts WorkflowInputFileLocationArgs, WorkflowInputFileLocationPtr and WorkflowInputFileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowInputFileLocationPtrInput` via:
//
//	        WorkflowInputFileLocationArgs{...}
//
//	or:
//
//	        nil
type WorkflowInputFileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput
	ToWorkflowInputFileLocationPtrOutputWithContext(context.Context) WorkflowInputFileLocationPtrOutput
}

type workflowInputFileLocationPtrType WorkflowInputFileLocationArgs

func WorkflowInputFileLocationPtr(v *WorkflowInputFileLocationArgs) WorkflowInputFileLocationPtrInput {
	return (*workflowInputFileLocationPtrType)(v)
}

func (*workflowInputFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowInputFileLocation)(nil)).Elem()
}

func (i *workflowInputFileLocationPtrType) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return i.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowInputFileLocationPtrType) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowInputFileLocationPtrOutput)
}

// Specifies the location for the file being decrypted. Only applicable for the Decrypt type of workflow steps.
type WorkflowInputFileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowInputFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowInputFileLocation)(nil)).Elem()
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationOutput() WorkflowInputFileLocationOutput {
	return o
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationOutputWithContext(ctx context.Context) WorkflowInputFileLocationOutput {
	return o
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return o.ToWorkflowInputFileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowInputFileLocationOutput) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowInputFileLocation) *WorkflowInputFileLocation {
		return &v
	}).(WorkflowInputFileLocationPtrOutput)
}

func (o WorkflowInputFileLocationOutput) EfsFileLocation() WorkflowEfsInputFileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowInputFileLocation) *WorkflowEfsInputFileLocation { return v.EfsFileLocation }).(WorkflowEfsInputFileLocationPtrOutput)
}

func (o WorkflowInputFileLocationOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowInputFileLocation) *WorkflowS3InputFileLocation { return v.S3FileLocation }).(WorkflowS3InputFileLocationPtrOutput)
}

type WorkflowInputFileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowInputFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowInputFileLocation)(nil)).Elem()
}

func (o WorkflowInputFileLocationPtrOutput) ToWorkflowInputFileLocationPtrOutput() WorkflowInputFileLocationPtrOutput {
	return o
}

func (o WorkflowInputFileLocationPtrOutput) ToWorkflowInputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowInputFileLocationPtrOutput {
	return o
}

func (o WorkflowInputFileLocationPtrOutput) Elem() WorkflowInputFileLocationOutput {
	return o.ApplyT(func(v *WorkflowInputFileLocation) WorkflowInputFileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowInputFileLocation
		return ret
	}).(WorkflowInputFileLocationOutput)
}

func (o WorkflowInputFileLocationPtrOutput) EfsFileLocation() WorkflowEfsInputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowInputFileLocation) *WorkflowEfsInputFileLocation {
		if v == nil {
			return nil
		}
		return v.EfsFileLocation
	}).(WorkflowEfsInputFileLocationPtrOutput)
}

func (o WorkflowInputFileLocationPtrOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowInputFileLocation) *WorkflowS3InputFileLocation {
		if v == nil {
			return nil
		}
		return v.S3FileLocation
	}).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowS3FileLocation struct {
	// Specifies the details for the file location for the file that's being used in the workflow. Only applicable if you are using Amazon S3 storage.
	S3FileLocation *WorkflowS3InputFileLocation `pulumi:"s3FileLocation"`
}

// WorkflowS3FileLocationInput is an input type that accepts WorkflowS3FileLocationArgs and WorkflowS3FileLocationOutput values.
// You can construct a concrete instance of `WorkflowS3FileLocationInput` via:
//
//	WorkflowS3FileLocationArgs{...}
type WorkflowS3FileLocationInput interface {
	pulumi.Input

	ToWorkflowS3FileLocationOutput() WorkflowS3FileLocationOutput
	ToWorkflowS3FileLocationOutputWithContext(context.Context) WorkflowS3FileLocationOutput
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowS3FileLocationArgs struct {
	// Specifies the details for the file location for the file that's being used in the workflow. Only applicable if you are using Amazon S3 storage.
	S3FileLocation WorkflowS3InputFileLocationPtrInput `pulumi:"s3FileLocation"`
}

func (WorkflowS3FileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3FileLocation)(nil)).Elem()
}

func (i WorkflowS3FileLocationArgs) ToWorkflowS3FileLocationOutput() WorkflowS3FileLocationOutput {
	return i.ToWorkflowS3FileLocationOutputWithContext(context.Background())
}

func (i WorkflowS3FileLocationArgs) ToWorkflowS3FileLocationOutputWithContext(ctx context.Context) WorkflowS3FileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3FileLocationOutput)
}

func (i WorkflowS3FileLocationArgs) ToWorkflowS3FileLocationPtrOutput() WorkflowS3FileLocationPtrOutput {
	return i.ToWorkflowS3FileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowS3FileLocationArgs) ToWorkflowS3FileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3FileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3FileLocationOutput).ToWorkflowS3FileLocationPtrOutputWithContext(ctx)
}

// WorkflowS3FileLocationPtrInput is an input type that accepts WorkflowS3FileLocationArgs, WorkflowS3FileLocationPtr and WorkflowS3FileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowS3FileLocationPtrInput` via:
//
//	        WorkflowS3FileLocationArgs{...}
//
//	or:
//
//	        nil
type WorkflowS3FileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowS3FileLocationPtrOutput() WorkflowS3FileLocationPtrOutput
	ToWorkflowS3FileLocationPtrOutputWithContext(context.Context) WorkflowS3FileLocationPtrOutput
}

type workflowS3FileLocationPtrType WorkflowS3FileLocationArgs

func WorkflowS3FileLocationPtr(v *WorkflowS3FileLocationArgs) WorkflowS3FileLocationPtrInput {
	return (*workflowS3FileLocationPtrType)(v)
}

func (*workflowS3FileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3FileLocation)(nil)).Elem()
}

func (i *workflowS3FileLocationPtrType) ToWorkflowS3FileLocationPtrOutput() WorkflowS3FileLocationPtrOutput {
	return i.ToWorkflowS3FileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowS3FileLocationPtrType) ToWorkflowS3FileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3FileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3FileLocationPtrOutput)
}

// Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
type WorkflowS3FileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowS3FileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3FileLocation)(nil)).Elem()
}

func (o WorkflowS3FileLocationOutput) ToWorkflowS3FileLocationOutput() WorkflowS3FileLocationOutput {
	return o
}

func (o WorkflowS3FileLocationOutput) ToWorkflowS3FileLocationOutputWithContext(ctx context.Context) WorkflowS3FileLocationOutput {
	return o
}

func (o WorkflowS3FileLocationOutput) ToWorkflowS3FileLocationPtrOutput() WorkflowS3FileLocationPtrOutput {
	return o.ToWorkflowS3FileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowS3FileLocationOutput) ToWorkflowS3FileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3FileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowS3FileLocation) *WorkflowS3FileLocation {
		return &v
	}).(WorkflowS3FileLocationPtrOutput)
}

// Specifies the details for the file location for the file that's being used in the workflow. Only applicable if you are using Amazon S3 storage.
func (o WorkflowS3FileLocationOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowS3FileLocation) *WorkflowS3InputFileLocation { return v.S3FileLocation }).(WorkflowS3InputFileLocationPtrOutput)
}

type WorkflowS3FileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowS3FileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3FileLocation)(nil)).Elem()
}

func (o WorkflowS3FileLocationPtrOutput) ToWorkflowS3FileLocationPtrOutput() WorkflowS3FileLocationPtrOutput {
	return o
}

func (o WorkflowS3FileLocationPtrOutput) ToWorkflowS3FileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3FileLocationPtrOutput {
	return o
}

func (o WorkflowS3FileLocationPtrOutput) Elem() WorkflowS3FileLocationOutput {
	return o.ApplyT(func(v *WorkflowS3FileLocation) WorkflowS3FileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowS3FileLocation
		return ret
	}).(WorkflowS3FileLocationOutput)
}

// Specifies the details for the file location for the file that's being used in the workflow. Only applicable if you are using Amazon S3 storage.
func (o WorkflowS3FileLocationPtrOutput) S3FileLocation() WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowS3FileLocation) *WorkflowS3InputFileLocation {
		if v == nil {
			return nil
		}
		return v.S3FileLocation
	}).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the details for a S3 file.
type WorkflowS3InputFileLocation struct {
	// Specifies the S3 bucket that contains the file.
	Bucket *string `pulumi:"bucket"`
	// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
	Key *string `pulumi:"key"`
}

// WorkflowS3InputFileLocationInput is an input type that accepts WorkflowS3InputFileLocationArgs and WorkflowS3InputFileLocationOutput values.
// You can construct a concrete instance of `WorkflowS3InputFileLocationInput` via:
//
//	WorkflowS3InputFileLocationArgs{...}
type WorkflowS3InputFileLocationInput interface {
	pulumi.Input

	ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput
	ToWorkflowS3InputFileLocationOutputWithContext(context.Context) WorkflowS3InputFileLocationOutput
}

// Specifies the details for a S3 file.
type WorkflowS3InputFileLocationArgs struct {
	// Specifies the S3 bucket that contains the file.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (WorkflowS3InputFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3InputFileLocation)(nil)).Elem()
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput {
	return i.ToWorkflowS3InputFileLocationOutputWithContext(context.Background())
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationOutput)
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return i.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (i WorkflowS3InputFileLocationArgs) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationOutput).ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx)
}

// WorkflowS3InputFileLocationPtrInput is an input type that accepts WorkflowS3InputFileLocationArgs, WorkflowS3InputFileLocationPtr and WorkflowS3InputFileLocationPtrOutput values.
// You can construct a concrete instance of `WorkflowS3InputFileLocationPtrInput` via:
//
//	        WorkflowS3InputFileLocationArgs{...}
//
//	or:
//
//	        nil
type WorkflowS3InputFileLocationPtrInput interface {
	pulumi.Input

	ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput
	ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Context) WorkflowS3InputFileLocationPtrOutput
}

type workflowS3InputFileLocationPtrType WorkflowS3InputFileLocationArgs

func WorkflowS3InputFileLocationPtr(v *WorkflowS3InputFileLocationArgs) WorkflowS3InputFileLocationPtrInput {
	return (*workflowS3InputFileLocationPtrType)(v)
}

func (*workflowS3InputFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3InputFileLocation)(nil)).Elem()
}

func (i *workflowS3InputFileLocationPtrType) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return i.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (i *workflowS3InputFileLocationPtrType) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the details for a S3 file.
type WorkflowS3InputFileLocationOutput struct{ *pulumi.OutputState }

func (WorkflowS3InputFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3InputFileLocation)(nil)).Elem()
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationOutput() WorkflowS3InputFileLocationOutput {
	return o
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationOutput {
	return o
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return o.ToWorkflowS3InputFileLocationPtrOutputWithContext(context.Background())
}

func (o WorkflowS3InputFileLocationOutput) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowS3InputFileLocation) *WorkflowS3InputFileLocation {
		return &v
	}).(WorkflowS3InputFileLocationPtrOutput)
}

// Specifies the S3 bucket that contains the file.
func (o WorkflowS3InputFileLocationOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowS3InputFileLocation) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
func (o WorkflowS3InputFileLocationOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowS3InputFileLocation) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type WorkflowS3InputFileLocationPtrOutput struct{ *pulumi.OutputState }

func (WorkflowS3InputFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowS3InputFileLocation)(nil)).Elem()
}

func (o WorkflowS3InputFileLocationPtrOutput) ToWorkflowS3InputFileLocationPtrOutput() WorkflowS3InputFileLocationPtrOutput {
	return o
}

func (o WorkflowS3InputFileLocationPtrOutput) ToWorkflowS3InputFileLocationPtrOutputWithContext(ctx context.Context) WorkflowS3InputFileLocationPtrOutput {
	return o
}

func (o WorkflowS3InputFileLocationPtrOutput) Elem() WorkflowS3InputFileLocationOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) WorkflowS3InputFileLocation {
		if v != nil {
			return *v
		}
		var ret WorkflowS3InputFileLocation
		return ret
	}).(WorkflowS3InputFileLocationOutput)
}

// Specifies the S3 bucket that contains the file.
func (o WorkflowS3InputFileLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
func (o WorkflowS3InputFileLocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowS3InputFileLocation) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3Tag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// The value that corresponds to the key.
	Value string `pulumi:"value"`
}

// WorkflowS3TagInput is an input type that accepts WorkflowS3TagArgs and WorkflowS3TagOutput values.
// You can construct a concrete instance of `WorkflowS3TagInput` via:
//
//	WorkflowS3TagArgs{...}
type WorkflowS3TagInput interface {
	pulumi.Input

	ToWorkflowS3TagOutput() WorkflowS3TagOutput
	ToWorkflowS3TagOutputWithContext(context.Context) WorkflowS3TagOutput
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3TagArgs struct {
	// The name assigned to the tag that you create.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that corresponds to the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkflowS3TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3Tag)(nil)).Elem()
}

func (i WorkflowS3TagArgs) ToWorkflowS3TagOutput() WorkflowS3TagOutput {
	return i.ToWorkflowS3TagOutputWithContext(context.Background())
}

func (i WorkflowS3TagArgs) ToWorkflowS3TagOutputWithContext(ctx context.Context) WorkflowS3TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3TagOutput)
}

// WorkflowS3TagArrayInput is an input type that accepts WorkflowS3TagArray and WorkflowS3TagArrayOutput values.
// You can construct a concrete instance of `WorkflowS3TagArrayInput` via:
//
//	WorkflowS3TagArray{ WorkflowS3TagArgs{...} }
type WorkflowS3TagArrayInput interface {
	pulumi.Input

	ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput
	ToWorkflowS3TagArrayOutputWithContext(context.Context) WorkflowS3TagArrayOutput
}

type WorkflowS3TagArray []WorkflowS3TagInput

func (WorkflowS3TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowS3Tag)(nil)).Elem()
}

func (i WorkflowS3TagArray) ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput {
	return i.ToWorkflowS3TagArrayOutputWithContext(context.Background())
}

func (i WorkflowS3TagArray) ToWorkflowS3TagArrayOutputWithContext(ctx context.Context) WorkflowS3TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowS3TagArrayOutput)
}

// Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
type WorkflowS3TagOutput struct{ *pulumi.OutputState }

func (WorkflowS3TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowS3Tag)(nil)).Elem()
}

func (o WorkflowS3TagOutput) ToWorkflowS3TagOutput() WorkflowS3TagOutput {
	return o
}

func (o WorkflowS3TagOutput) ToWorkflowS3TagOutputWithContext(ctx context.Context) WorkflowS3TagOutput {
	return o
}

// The name assigned to the tag that you create.
func (o WorkflowS3TagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowS3Tag) string { return v.Key }).(pulumi.StringOutput)
}

// The value that corresponds to the key.
func (o WorkflowS3TagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowS3Tag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkflowS3TagArrayOutput struct{ *pulumi.OutputState }

func (WorkflowS3TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowS3Tag)(nil)).Elem()
}

func (o WorkflowS3TagArrayOutput) ToWorkflowS3TagArrayOutput() WorkflowS3TagArrayOutput {
	return o
}

func (o WorkflowS3TagArrayOutput) ToWorkflowS3TagArrayOutputWithContext(ctx context.Context) WorkflowS3TagArrayOutput {
	return o
}

func (o WorkflowS3TagArrayOutput) Index(i pulumi.IntInput) WorkflowS3TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowS3Tag {
		return vs[0].([]WorkflowS3Tag)[vs[1].(int)]
	}).(WorkflowS3TagOutput)
}

// The basic building block of a workflow.
type WorkflowStep struct {
	// Details for a step that performs a file copy.
	CopyStepDetails *WorkflowStepCopyStepDetailsProperties `pulumi:"copyStepDetails"`
	// Details for a step that invokes a lambda function.
	CustomStepDetails *WorkflowStepCustomStepDetailsProperties `pulumi:"customStepDetails"`
	// Details for a step that performs a file decryption.
	DecryptStepDetails *WorkflowStepDecryptStepDetailsProperties `pulumi:"decryptStepDetails"`
	// Details for a step that deletes the file.
	DeleteStepDetails *WorkflowStepDeleteStepDetailsProperties `pulumi:"deleteStepDetails"`
	// Details for a step that creates one or more tags.
	TagStepDetails *WorkflowStepTagStepDetailsProperties `pulumi:"tagStepDetails"`
	Type           *WorkflowStepType                     `pulumi:"type"`
}

// WorkflowStepInput is an input type that accepts WorkflowStepArgs and WorkflowStepOutput values.
// You can construct a concrete instance of `WorkflowStepInput` via:
//
//	WorkflowStepArgs{...}
type WorkflowStepInput interface {
	pulumi.Input

	ToWorkflowStepOutput() WorkflowStepOutput
	ToWorkflowStepOutputWithContext(context.Context) WorkflowStepOutput
}

// The basic building block of a workflow.
type WorkflowStepArgs struct {
	// Details for a step that performs a file copy.
	CopyStepDetails WorkflowStepCopyStepDetailsPropertiesPtrInput `pulumi:"copyStepDetails"`
	// Details for a step that invokes a lambda function.
	CustomStepDetails WorkflowStepCustomStepDetailsPropertiesPtrInput `pulumi:"customStepDetails"`
	// Details for a step that performs a file decryption.
	DecryptStepDetails WorkflowStepDecryptStepDetailsPropertiesPtrInput `pulumi:"decryptStepDetails"`
	// Details for a step that deletes the file.
	DeleteStepDetails WorkflowStepDeleteStepDetailsPropertiesPtrInput `pulumi:"deleteStepDetails"`
	// Details for a step that creates one or more tags.
	TagStepDetails WorkflowStepTagStepDetailsPropertiesPtrInput `pulumi:"tagStepDetails"`
	Type           WorkflowStepTypePtrInput                     `pulumi:"type"`
}

func (WorkflowStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStep)(nil)).Elem()
}

func (i WorkflowStepArgs) ToWorkflowStepOutput() WorkflowStepOutput {
	return i.ToWorkflowStepOutputWithContext(context.Background())
}

func (i WorkflowStepArgs) ToWorkflowStepOutputWithContext(ctx context.Context) WorkflowStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepOutput)
}

// WorkflowStepArrayInput is an input type that accepts WorkflowStepArray and WorkflowStepArrayOutput values.
// You can construct a concrete instance of `WorkflowStepArrayInput` via:
//
//	WorkflowStepArray{ WorkflowStepArgs{...} }
type WorkflowStepArrayInput interface {
	pulumi.Input

	ToWorkflowStepArrayOutput() WorkflowStepArrayOutput
	ToWorkflowStepArrayOutputWithContext(context.Context) WorkflowStepArrayOutput
}

type WorkflowStepArray []WorkflowStepInput

func (WorkflowStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowStep)(nil)).Elem()
}

func (i WorkflowStepArray) ToWorkflowStepArrayOutput() WorkflowStepArrayOutput {
	return i.ToWorkflowStepArrayOutputWithContext(context.Background())
}

func (i WorkflowStepArray) ToWorkflowStepArrayOutputWithContext(ctx context.Context) WorkflowStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepArrayOutput)
}

// The basic building block of a workflow.
type WorkflowStepOutput struct{ *pulumi.OutputState }

func (WorkflowStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStep)(nil)).Elem()
}

func (o WorkflowStepOutput) ToWorkflowStepOutput() WorkflowStepOutput {
	return o
}

func (o WorkflowStepOutput) ToWorkflowStepOutputWithContext(ctx context.Context) WorkflowStepOutput {
	return o
}

// Details for a step that performs a file copy.
func (o WorkflowStepOutput) CopyStepDetails() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepCopyStepDetailsProperties { return v.CopyStepDetails }).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

// Details for a step that invokes a lambda function.
func (o WorkflowStepOutput) CustomStepDetails() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepCustomStepDetailsProperties { return v.CustomStepDetails }).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// Details for a step that performs a file decryption.
func (o WorkflowStepOutput) DecryptStepDetails() WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepDecryptStepDetailsProperties { return v.DecryptStepDetails }).(WorkflowStepDecryptStepDetailsPropertiesPtrOutput)
}

// Details for a step that deletes the file.
func (o WorkflowStepOutput) DeleteStepDetails() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepDeleteStepDetailsProperties { return v.DeleteStepDetails }).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// Details for a step that creates one or more tags.
func (o WorkflowStepOutput) TagStepDetails() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepTagStepDetailsProperties { return v.TagStepDetails }).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

func (o WorkflowStepOutput) Type() WorkflowStepTypePtrOutput {
	return o.ApplyT(func(v WorkflowStep) *WorkflowStepType { return v.Type }).(WorkflowStepTypePtrOutput)
}

type WorkflowStepArrayOutput struct{ *pulumi.OutputState }

func (WorkflowStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowStep)(nil)).Elem()
}

func (o WorkflowStepArrayOutput) ToWorkflowStepArrayOutput() WorkflowStepArrayOutput {
	return o
}

func (o WorkflowStepArrayOutput) ToWorkflowStepArrayOutputWithContext(ctx context.Context) WorkflowStepArrayOutput {
	return o
}

func (o WorkflowStepArrayOutput) Index(i pulumi.IntInput) WorkflowStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowStep {
		return vs[0].([]WorkflowStep)[vs[1].(int)]
	}).(WorkflowStepOutput)
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsProperties struct {
	DestinationFileLocation *WorkflowS3FileLocation `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting `pulumi:"overwriteExisting"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation *string `pulumi:"sourceFileLocation"`
}

// WorkflowStepCopyStepDetailsPropertiesInput is an input type that accepts WorkflowStepCopyStepDetailsPropertiesArgs and WorkflowStepCopyStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepCopyStepDetailsPropertiesInput` via:
//
//	WorkflowStepCopyStepDetailsPropertiesArgs{...}
type WorkflowStepCopyStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput
	ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesOutput
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsPropertiesArgs struct {
	DestinationFileLocation WorkflowS3FileLocationPtrInput `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrInput `pulumi:"overwriteExisting"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation pulumi.StringPtrInput `pulumi:"sourceFileLocation"`
}

func (WorkflowStepCopyStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesOutput)
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepCopyStepDetailsPropertiesArgs) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesOutput).ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepCopyStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepCopyStepDetailsPropertiesArgs, WorkflowStepCopyStepDetailsPropertiesPtr and WorkflowStepCopyStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepCopyStepDetailsPropertiesPtrInput` via:
//
//	        WorkflowStepCopyStepDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowStepCopyStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput
	ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput
}

type workflowStepCopyStepDetailsPropertiesPtrType WorkflowStepCopyStepDetailsPropertiesArgs

func WorkflowStepCopyStepDetailsPropertiesPtr(v *WorkflowStepCopyStepDetailsPropertiesArgs) WorkflowStepCopyStepDetailsPropertiesPtrInput {
	return (*workflowStepCopyStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepCopyStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepCopyStepDetailsPropertiesPtrType) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepCopyStepDetailsPropertiesPtrType) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

// Details for a step that performs a file copy.
type WorkflowStepCopyStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesOutput() WorkflowStepCopyStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsProperties {
		return &v
	}).(WorkflowStepCopyStepDetailsPropertiesPtrOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesOutput) DestinationFileLocation() WorkflowS3FileLocationPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *WorkflowS3FileLocation {
		return v.DestinationFileLocation
	}).(WorkflowS3FileLocationPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCopyStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepCopyStepDetailsPropertiesOutput) OverwriteExisting() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		return v.OverwriteExisting
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepCopyStepDetailsPropertiesOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCopyStepDetailsProperties) *string { return v.SourceFileLocation }).(pulumi.StringPtrOutput)
}

type WorkflowStepCopyStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCopyStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutput() WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) Elem() WorkflowStepCopyStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) WorkflowStepCopyStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepCopyStepDetailsProperties
		return ret
	}).(WorkflowStepCopyStepDetailsPropertiesOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) DestinationFileLocation() WorkflowS3FileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *WorkflowS3FileLocation {
		if v == nil {
			return nil
		}
		return v.DestinationFileLocation
	}).(WorkflowS3FileLocationPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) OverwriteExisting() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		if v == nil {
			return nil
		}
		return v.OverwriteExisting
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepCopyStepDetailsPropertiesPtrOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceFileLocation
	}).(pulumi.StringPtrOutput)
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation *string `pulumi:"sourceFileLocation"`
	// The ARN for the lambda function that is being called.
	Target *string `pulumi:"target"`
	// Timeout, in seconds, for the step.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// WorkflowStepCustomStepDetailsPropertiesInput is an input type that accepts WorkflowStepCustomStepDetailsPropertiesArgs and WorkflowStepCustomStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepCustomStepDetailsPropertiesInput` via:
//
//	WorkflowStepCustomStepDetailsPropertiesArgs{...}
type WorkflowStepCustomStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput
	ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepCustomStepDetailsPropertiesOutput
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation pulumi.StringPtrInput `pulumi:"sourceFileLocation"`
	// The ARN for the lambda function that is being called.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Timeout, in seconds, for the step.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (WorkflowStepCustomStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesOutput)
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepCustomStepDetailsPropertiesArgs) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesOutput).ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepCustomStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepCustomStepDetailsPropertiesArgs, WorkflowStepCustomStepDetailsPropertiesPtr and WorkflowStepCustomStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepCustomStepDetailsPropertiesPtrInput` via:
//
//	        WorkflowStepCustomStepDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowStepCustomStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput
	ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput
}

type workflowStepCustomStepDetailsPropertiesPtrType WorkflowStepCustomStepDetailsPropertiesArgs

func WorkflowStepCustomStepDetailsPropertiesPtr(v *WorkflowStepCustomStepDetailsPropertiesArgs) WorkflowStepCustomStepDetailsPropertiesPtrInput {
	return (*workflowStepCustomStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepCustomStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepCustomStepDetailsPropertiesPtrType) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepCustomStepDetailsPropertiesPtrType) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// Details for a step that invokes a lambda function.
type WorkflowStepCustomStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepCustomStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesOutput() WorkflowStepCustomStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCustomStepDetailsPropertiesOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepCustomStepDetailsProperties) *WorkflowStepCustomStepDetailsProperties {
		return &v
	}).(WorkflowStepCustomStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *string { return v.SourceFileLocation }).(pulumi.StringPtrOutput)
}

// The ARN for the lambda function that is being called.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Timeout, in seconds, for the step.
func (o WorkflowStepCustomStepDetailsPropertiesOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkflowStepCustomStepDetailsProperties) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type WorkflowStepCustomStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepCustomStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCustomStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutput() WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) ToWorkflowStepCustomStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepCustomStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Elem() WorkflowStepCustomStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) WorkflowStepCustomStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepCustomStepDetailsProperties
		return ret
	}).(WorkflowStepCustomStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceFileLocation
	}).(pulumi.StringPtrOutput)
}

// The ARN for the lambda function that is being called.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Timeout, in seconds, for the step.
func (o WorkflowStepCustomStepDetailsPropertiesPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowStepCustomStepDetailsProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Details for a step that performs a file decryption.
type WorkflowStepDecryptStepDetailsProperties struct {
	DestinationFileLocation WorkflowInputFileLocation `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting *WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting `pulumi:"overwriteExisting"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation *string `pulumi:"sourceFileLocation"`
	// Specifies which encryption method to use.
	Type WorkflowStepDecryptStepDetailsPropertiesType `pulumi:"type"`
}

// WorkflowStepDecryptStepDetailsPropertiesInput is an input type that accepts WorkflowStepDecryptStepDetailsPropertiesArgs and WorkflowStepDecryptStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepDecryptStepDetailsPropertiesInput` via:
//
//	WorkflowStepDecryptStepDetailsPropertiesArgs{...}
type WorkflowStepDecryptStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepDecryptStepDetailsPropertiesOutput() WorkflowStepDecryptStepDetailsPropertiesOutput
	ToWorkflowStepDecryptStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepDecryptStepDetailsPropertiesOutput
}

// Details for a step that performs a file decryption.
type WorkflowStepDecryptStepDetailsPropertiesArgs struct {
	DestinationFileLocation WorkflowInputFileLocationInput `pulumi:"destinationFileLocation"`
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
	OverwriteExisting WorkflowStepDecryptStepDetailsPropertiesOverwriteExistingPtrInput `pulumi:"overwriteExisting"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation pulumi.StringPtrInput `pulumi:"sourceFileLocation"`
	// Specifies which encryption method to use.
	Type WorkflowStepDecryptStepDetailsPropertiesTypeInput `pulumi:"type"`
}

func (WorkflowStepDecryptStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDecryptStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepDecryptStepDetailsPropertiesArgs) ToWorkflowStepDecryptStepDetailsPropertiesOutput() WorkflowStepDecryptStepDetailsPropertiesOutput {
	return i.ToWorkflowStepDecryptStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepDecryptStepDetailsPropertiesArgs) ToWorkflowStepDecryptStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDecryptStepDetailsPropertiesOutput)
}

func (i WorkflowStepDecryptStepDetailsPropertiesArgs) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutput() WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepDecryptStepDetailsPropertiesArgs) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDecryptStepDetailsPropertiesOutput).ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepDecryptStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepDecryptStepDetailsPropertiesArgs, WorkflowStepDecryptStepDetailsPropertiesPtr and WorkflowStepDecryptStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepDecryptStepDetailsPropertiesPtrInput` via:
//
//	        WorkflowStepDecryptStepDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowStepDecryptStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepDecryptStepDetailsPropertiesPtrOutput() WorkflowStepDecryptStepDetailsPropertiesPtrOutput
	ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepDecryptStepDetailsPropertiesPtrOutput
}

type workflowStepDecryptStepDetailsPropertiesPtrType WorkflowStepDecryptStepDetailsPropertiesArgs

func WorkflowStepDecryptStepDetailsPropertiesPtr(v *WorkflowStepDecryptStepDetailsPropertiesArgs) WorkflowStepDecryptStepDetailsPropertiesPtrInput {
	return (*workflowStepDecryptStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepDecryptStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDecryptStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepDecryptStepDetailsPropertiesPtrType) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutput() WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepDecryptStepDetailsPropertiesPtrType) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDecryptStepDetailsPropertiesPtrOutput)
}

// Details for a step that performs a file decryption.
type WorkflowStepDecryptStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepDecryptStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDecryptStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDecryptStepDetailsPropertiesOutput) ToWorkflowStepDecryptStepDetailsPropertiesOutput() WorkflowStepDecryptStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDecryptStepDetailsPropertiesOutput) ToWorkflowStepDecryptStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDecryptStepDetailsPropertiesOutput) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutput() WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepDecryptStepDetailsPropertiesOutput) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepDecryptStepDetailsProperties) *WorkflowStepDecryptStepDetailsProperties {
		return &v
	}).(WorkflowStepDecryptStepDetailsPropertiesPtrOutput)
}

func (o WorkflowStepDecryptStepDetailsPropertiesOutput) DestinationFileLocation() WorkflowInputFileLocationOutput {
	return o.ApplyT(func(v WorkflowStepDecryptStepDetailsProperties) WorkflowInputFileLocation {
		return v.DestinationFileLocation
	}).(WorkflowInputFileLocationOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDecryptStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepDecryptStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepDecryptStepDetailsPropertiesOutput) OverwriteExisting() WorkflowStepDecryptStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v WorkflowStepDecryptStepDetailsProperties) *WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting {
		return v.OverwriteExisting
	}).(WorkflowStepDecryptStepDetailsPropertiesOverwriteExistingPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepDecryptStepDetailsPropertiesOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepDecryptStepDetailsProperties) *string { return v.SourceFileLocation }).(pulumi.StringPtrOutput)
}

// Specifies which encryption method to use.
func (o WorkflowStepDecryptStepDetailsPropertiesOutput) Type() WorkflowStepDecryptStepDetailsPropertiesTypeOutput {
	return o.ApplyT(func(v WorkflowStepDecryptStepDetailsProperties) WorkflowStepDecryptStepDetailsPropertiesType {
		return v.Type
	}).(WorkflowStepDecryptStepDetailsPropertiesTypeOutput)
}

type WorkflowStepDecryptStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepDecryptStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDecryptStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutput() WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) ToWorkflowStepDecryptStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDecryptStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) Elem() WorkflowStepDecryptStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) WorkflowStepDecryptStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepDecryptStepDetailsProperties
		return ret
	}).(WorkflowStepDecryptStepDetailsPropertiesOutput)
}

func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) DestinationFileLocation() WorkflowInputFileLocationPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) *WorkflowInputFileLocation {
		if v == nil {
			return nil
		}
		return &v.DestinationFileLocation
	}).(WorkflowInputFileLocationPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) OverwriteExisting() WorkflowStepDecryptStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) *WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting {
		if v == nil {
			return nil
		}
		return v.OverwriteExisting
	}).(WorkflowStepDecryptStepDetailsPropertiesOverwriteExistingPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceFileLocation
	}).(pulumi.StringPtrOutput)
}

// Specifies which encryption method to use.
func (o WorkflowStepDecryptStepDetailsPropertiesPtrOutput) Type() WorkflowStepDecryptStepDetailsPropertiesTypePtrOutput {
	return o.ApplyT(func(v *WorkflowStepDecryptStepDetailsProperties) *WorkflowStepDecryptStepDetailsPropertiesType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(WorkflowStepDecryptStepDetailsPropertiesTypePtrOutput)
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation *string `pulumi:"sourceFileLocation"`
}

// WorkflowStepDeleteStepDetailsPropertiesInput is an input type that accepts WorkflowStepDeleteStepDetailsPropertiesArgs and WorkflowStepDeleteStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepDeleteStepDetailsPropertiesInput` via:
//
//	WorkflowStepDeleteStepDetailsPropertiesArgs{...}
type WorkflowStepDeleteStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput
	ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation pulumi.StringPtrInput `pulumi:"sourceFileLocation"`
}

func (WorkflowStepDeleteStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesOutput)
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepDeleteStepDetailsPropertiesArgs) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesOutput).ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepDeleteStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepDeleteStepDetailsPropertiesArgs, WorkflowStepDeleteStepDetailsPropertiesPtr and WorkflowStepDeleteStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepDeleteStepDetailsPropertiesPtrInput` via:
//
//	        WorkflowStepDeleteStepDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowStepDeleteStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput
	ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput
}

type workflowStepDeleteStepDetailsPropertiesPtrType WorkflowStepDeleteStepDetailsPropertiesArgs

func WorkflowStepDeleteStepDetailsPropertiesPtr(v *WorkflowStepDeleteStepDetailsPropertiesArgs) WorkflowStepDeleteStepDetailsPropertiesPtrInput {
	return (*workflowStepDeleteStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepDeleteStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepDeleteStepDetailsPropertiesPtrType) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepDeleteStepDetailsPropertiesPtrType) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// Details for a step that deletes the file.
type WorkflowStepDeleteStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepDeleteStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesOutput() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepDeleteStepDetailsPropertiesOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepDeleteStepDetailsProperties) *WorkflowStepDeleteStepDetailsProperties {
		return &v
	}).(WorkflowStepDeleteStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDeleteStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepDeleteStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepDeleteStepDetailsPropertiesOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepDeleteStepDetailsProperties) *string { return v.SourceFileLocation }).(pulumi.StringPtrOutput)
}

type WorkflowStepDeleteStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepDeleteStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutput() WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) ToWorkflowStepDeleteStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepDeleteStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) Elem() WorkflowStepDeleteStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepDeleteStepDetailsProperties) WorkflowStepDeleteStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepDeleteStepDetailsProperties
		return ret
	}).(WorkflowStepDeleteStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDeleteStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepDeleteStepDetailsPropertiesPtrOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepDeleteStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceFileLocation
	}).(pulumi.StringPtrOutput)
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsProperties struct {
	// The name of the step, used as an identifier.
	Name *string `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation *string `pulumi:"sourceFileLocation"`
	// Array that contains from 1 to 10 key/value pairs.
	Tags []WorkflowS3Tag `pulumi:"tags"`
}

// WorkflowStepTagStepDetailsPropertiesInput is an input type that accepts WorkflowStepTagStepDetailsPropertiesArgs and WorkflowStepTagStepDetailsPropertiesOutput values.
// You can construct a concrete instance of `WorkflowStepTagStepDetailsPropertiesInput` via:
//
//	WorkflowStepTagStepDetailsPropertiesArgs{...}
type WorkflowStepTagStepDetailsPropertiesInput interface {
	pulumi.Input

	ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput
	ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(context.Context) WorkflowStepTagStepDetailsPropertiesOutput
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsPropertiesArgs struct {
	// The name of the step, used as an identifier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies which file to use as input to the workflow step.
	SourceFileLocation pulumi.StringPtrInput `pulumi:"sourceFileLocation"`
	// Array that contains from 1 to 10 key/value pairs.
	Tags WorkflowS3TagArrayInput `pulumi:"tags"`
}

func (WorkflowStepTagStepDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(context.Background())
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesOutput)
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkflowStepTagStepDetailsPropertiesArgs) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesOutput).ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx)
}

// WorkflowStepTagStepDetailsPropertiesPtrInput is an input type that accepts WorkflowStepTagStepDetailsPropertiesArgs, WorkflowStepTagStepDetailsPropertiesPtr and WorkflowStepTagStepDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkflowStepTagStepDetailsPropertiesPtrInput` via:
//
//	        WorkflowStepTagStepDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkflowStepTagStepDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput
	ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput
}

type workflowStepTagStepDetailsPropertiesPtrType WorkflowStepTagStepDetailsPropertiesArgs

func WorkflowStepTagStepDetailsPropertiesPtr(v *WorkflowStepTagStepDetailsPropertiesArgs) WorkflowStepTagStepDetailsPropertiesPtrInput {
	return (*workflowStepTagStepDetailsPropertiesPtrType)(v)
}

func (*workflowStepTagStepDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (i *workflowStepTagStepDetailsPropertiesPtrType) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return i.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *workflowStepTagStepDetailsPropertiesPtrType) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

// Details for a step that creates one or more tags.
type WorkflowStepTagStepDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (WorkflowStepTagStepDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesOutput() WorkflowStepTagStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkflowStepTagStepDetailsPropertiesOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepTagStepDetailsProperties) *WorkflowStepTagStepDetailsProperties {
		return &v
	}).(WorkflowStepTagStepDetailsPropertiesPtrOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepTagStepDetailsPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepTagStepDetailsProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepTagStepDetailsPropertiesOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowStepTagStepDetailsProperties) *string { return v.SourceFileLocation }).(pulumi.StringPtrOutput)
}

// Array that contains from 1 to 10 key/value pairs.
func (o WorkflowStepTagStepDetailsPropertiesOutput) Tags() WorkflowS3TagArrayOutput {
	return o.ApplyT(func(v WorkflowStepTagStepDetailsProperties) []WorkflowS3Tag { return v.Tags }).(WorkflowS3TagArrayOutput)
}

type WorkflowStepTagStepDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepTagStepDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepTagStepDetailsProperties)(nil)).Elem()
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutput() WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) ToWorkflowStepTagStepDetailsPropertiesPtrOutputWithContext(ctx context.Context) WorkflowStepTagStepDetailsPropertiesPtrOutput {
	return o
}

func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Elem() WorkflowStepTagStepDetailsPropertiesOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) WorkflowStepTagStepDetailsProperties {
		if v != nil {
			return *v
		}
		var ret WorkflowStepTagStepDetailsProperties
		return ret
	}).(WorkflowStepTagStepDetailsPropertiesOutput)
}

// The name of the step, used as an identifier.
func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies which file to use as input to the workflow step.
func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) SourceFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SourceFileLocation
	}).(pulumi.StringPtrOutput)
}

// Array that contains from 1 to 10 key/value pairs.
func (o WorkflowStepTagStepDetailsPropertiesPtrOutput) Tags() WorkflowS3TagArrayOutput {
	return o.ApplyT(func(v *WorkflowStepTagStepDetailsProperties) []WorkflowS3Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WorkflowS3TagArrayOutput)
}

// Creates a key-value pair for a specific resource.
type WorkflowTag struct {
	// The name assigned to the tag that you create.
	Key string `pulumi:"key"`
	// Contains one or more values that you assigned to the key name you create.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*As2ConfigPropertiesInput)(nil)).Elem(), As2ConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*As2ConfigPropertiesPtrInput)(nil)).Elem(), As2ConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SftpConfigPropertiesInput)(nil)).Elem(), SftpConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SftpConfigPropertiesPtrInput)(nil)).Elem(), SftpConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEfsInputFileLocationInput)(nil)).Elem(), WorkflowEfsInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEfsInputFileLocationPtrInput)(nil)).Elem(), WorkflowEfsInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowInputFileLocationInput)(nil)).Elem(), WorkflowInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowInputFileLocationPtrInput)(nil)).Elem(), WorkflowInputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3FileLocationInput)(nil)).Elem(), WorkflowS3FileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3FileLocationPtrInput)(nil)).Elem(), WorkflowS3FileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3InputFileLocationInput)(nil)).Elem(), WorkflowS3InputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3InputFileLocationPtrInput)(nil)).Elem(), WorkflowS3InputFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3TagInput)(nil)).Elem(), WorkflowS3TagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowS3TagArrayInput)(nil)).Elem(), WorkflowS3TagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepInput)(nil)).Elem(), WorkflowStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepArrayInput)(nil)).Elem(), WorkflowStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCustomStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepCustomStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCustomStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepCustomStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDecryptStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepDecryptStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDecryptStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepDecryptStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDeleteStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepDeleteStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepDeleteStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepDeleteStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTagStepDetailsPropertiesInput)(nil)).Elem(), WorkflowStepTagStepDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTagStepDetailsPropertiesPtrInput)(nil)).Elem(), WorkflowStepTagStepDetailsPropertiesArgs{})
	pulumi.RegisterOutputType(As2ConfigPropertiesOutput{})
	pulumi.RegisterOutputType(As2ConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SftpConfigPropertiesOutput{})
	pulumi.RegisterOutputType(SftpConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowEfsInputFileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowEfsInputFileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowInputFileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowInputFileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowS3FileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowS3FileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowS3InputFileLocationOutput{})
	pulumi.RegisterOutputType(WorkflowS3InputFileLocationPtrOutput{})
	pulumi.RegisterOutputType(WorkflowS3TagOutput{})
	pulumi.RegisterOutputType(WorkflowS3TagArrayOutput{})
	pulumi.RegisterOutputType(WorkflowStepOutput{})
	pulumi.RegisterOutputType(WorkflowStepArrayOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepCustomStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepCustomStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepDecryptStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepDecryptStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepDeleteStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepDeleteStepDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepTagStepDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(WorkflowStepTagStepDetailsPropertiesPtrOutput{})
}
