// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the status of the agreement.
type AgreementStatus string

const (
	AgreementStatusActive   = AgreementStatus("ACTIVE")
	AgreementStatusInactive = AgreementStatus("INACTIVE")
)

func (AgreementStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AgreementStatus)(nil)).Elem()
}

func (e AgreementStatus) ToAgreementStatusOutput() AgreementStatusOutput {
	return pulumi.ToOutput(e).(AgreementStatusOutput)
}

func (e AgreementStatus) ToAgreementStatusOutputWithContext(ctx context.Context) AgreementStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AgreementStatusOutput)
}

func (e AgreementStatus) ToAgreementStatusPtrOutput() AgreementStatusPtrOutput {
	return e.ToAgreementStatusPtrOutputWithContext(context.Background())
}

func (e AgreementStatus) ToAgreementStatusPtrOutputWithContext(ctx context.Context) AgreementStatusPtrOutput {
	return AgreementStatus(e).ToAgreementStatusOutputWithContext(ctx).ToAgreementStatusPtrOutputWithContext(ctx)
}

func (e AgreementStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgreementStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AgreementStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AgreementStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AgreementStatusOutput struct{ *pulumi.OutputState }

func (AgreementStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgreementStatus)(nil)).Elem()
}

func (o AgreementStatusOutput) ToAgreementStatusOutput() AgreementStatusOutput {
	return o
}

func (o AgreementStatusOutput) ToAgreementStatusOutputWithContext(ctx context.Context) AgreementStatusOutput {
	return o
}

func (o AgreementStatusOutput) ToAgreementStatusPtrOutput() AgreementStatusPtrOutput {
	return o.ToAgreementStatusPtrOutputWithContext(context.Background())
}

func (o AgreementStatusOutput) ToAgreementStatusPtrOutputWithContext(ctx context.Context) AgreementStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgreementStatus) *AgreementStatus {
		return &v
	}).(AgreementStatusPtrOutput)
}

func (o AgreementStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AgreementStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgreementStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AgreementStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgreementStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AgreementStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AgreementStatusPtrOutput struct{ *pulumi.OutputState }

func (AgreementStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgreementStatus)(nil)).Elem()
}

func (o AgreementStatusPtrOutput) ToAgreementStatusPtrOutput() AgreementStatusPtrOutput {
	return o
}

func (o AgreementStatusPtrOutput) ToAgreementStatusPtrOutputWithContext(ctx context.Context) AgreementStatusPtrOutput {
	return o
}

func (o AgreementStatusPtrOutput) Elem() AgreementStatusOutput {
	return o.ApplyT(func(v *AgreementStatus) AgreementStatus {
		if v != nil {
			return *v
		}
		var ret AgreementStatus
		return ret
	}).(AgreementStatusOutput)
}

func (o AgreementStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AgreementStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AgreementStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AgreementStatusInput is an input type that accepts AgreementStatusArgs and AgreementStatusOutput values.
// You can construct a concrete instance of `AgreementStatusInput` via:
//
//	AgreementStatusArgs{...}
type AgreementStatusInput interface {
	pulumi.Input

	ToAgreementStatusOutput() AgreementStatusOutput
	ToAgreementStatusOutputWithContext(context.Context) AgreementStatusOutput
}

var agreementStatusPtrType = reflect.TypeOf((**AgreementStatus)(nil)).Elem()

type AgreementStatusPtrInput interface {
	pulumi.Input

	ToAgreementStatusPtrOutput() AgreementStatusPtrOutput
	ToAgreementStatusPtrOutputWithContext(context.Context) AgreementStatusPtrOutput
}

type agreementStatusPtr string

func AgreementStatusPtr(v string) AgreementStatusPtrInput {
	return (*agreementStatusPtr)(&v)
}

func (*agreementStatusPtr) ElementType() reflect.Type {
	return agreementStatusPtrType
}

func (in *agreementStatusPtr) ToAgreementStatusPtrOutput() AgreementStatusPtrOutput {
	return pulumi.ToOutput(in).(AgreementStatusPtrOutput)
}

func (in *agreementStatusPtr) ToAgreementStatusPtrOutputWithContext(ctx context.Context) AgreementStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AgreementStatusPtrOutput)
}

// A status description for the certificate.
type CertificateStatus string

const (
	CertificateStatusActive   = CertificateStatus("ACTIVE")
	CertificateStatusPending  = CertificateStatus("PENDING")
	CertificateStatusInactive = CertificateStatus("INACTIVE")
)

type CertificateStatusOutput struct{ *pulumi.OutputState }

func (CertificateStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStatus)(nil)).Elem()
}

func (o CertificateStatusOutput) ToCertificateStatusOutput() CertificateStatusOutput {
	return o
}

func (o CertificateStatusOutput) ToCertificateStatusOutputWithContext(ctx context.Context) CertificateStatusOutput {
	return o
}

func (o CertificateStatusOutput) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return o.ToCertificateStatusPtrOutputWithContext(context.Background())
}

func (o CertificateStatusOutput) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateStatus) *CertificateStatus {
		return &v
	}).(CertificateStatusPtrOutput)
}

func (o CertificateStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateStatusPtrOutput struct{ *pulumi.OutputState }

func (CertificateStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateStatus)(nil)).Elem()
}

func (o CertificateStatusPtrOutput) ToCertificateStatusPtrOutput() CertificateStatusPtrOutput {
	return o
}

func (o CertificateStatusPtrOutput) ToCertificateStatusPtrOutputWithContext(ctx context.Context) CertificateStatusPtrOutput {
	return o
}

func (o CertificateStatusPtrOutput) Elem() CertificateStatusOutput {
	return o.ApplyT(func(v *CertificateStatus) CertificateStatus {
		if v != nil {
			return *v
		}
		var ret CertificateStatus
		return ret
	}).(CertificateStatusOutput)
}

func (o CertificateStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Describing the type of certificate. With or without a private key.
type CertificateType string

const (
	CertificateTypeCertificate               = CertificateType("CERTIFICATE")
	CertificateTypeCertificateWithPrivateKey = CertificateType("CERTIFICATE_WITH_PRIVATE_KEY")
)

type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypePtrOutput() CertificateTypePtrOutput {
	return o.ToCertificateTypePtrOutputWithContext(context.Background())
}

func (o CertificateTypeOutput) ToCertificateTypePtrOutputWithContext(ctx context.Context) CertificateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateType) *CertificateType {
		return &v
	}).(CertificateTypePtrOutput)
}

func (o CertificateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateTypePtrOutput struct{ *pulumi.OutputState }

func (CertificateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateType)(nil)).Elem()
}

func (o CertificateTypePtrOutput) ToCertificateTypePtrOutput() CertificateTypePtrOutput {
	return o
}

func (o CertificateTypePtrOutput) ToCertificateTypePtrOutputWithContext(ctx context.Context) CertificateTypePtrOutput {
	return o
}

func (o CertificateTypePtrOutput) Elem() CertificateTypeOutput {
	return o.ApplyT(func(v *CertificateType) CertificateType {
		if v != nil {
			return *v
		}
		var ret CertificateType
		return ret
	}).(CertificateTypeOutput)
}

func (o CertificateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Specifies the usage type for the certificate.
type CertificateUsage string

const (
	CertificateUsageSigning    = CertificateUsage("SIGNING")
	CertificateUsageEncryption = CertificateUsage("ENCRYPTION")
)

func (CertificateUsage) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateUsage)(nil)).Elem()
}

func (e CertificateUsage) ToCertificateUsageOutput() CertificateUsageOutput {
	return pulumi.ToOutput(e).(CertificateUsageOutput)
}

func (e CertificateUsage) ToCertificateUsageOutputWithContext(ctx context.Context) CertificateUsageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CertificateUsageOutput)
}

func (e CertificateUsage) ToCertificateUsagePtrOutput() CertificateUsagePtrOutput {
	return e.ToCertificateUsagePtrOutputWithContext(context.Background())
}

func (e CertificateUsage) ToCertificateUsagePtrOutputWithContext(ctx context.Context) CertificateUsagePtrOutput {
	return CertificateUsage(e).ToCertificateUsageOutputWithContext(ctx).ToCertificateUsagePtrOutputWithContext(ctx)
}

func (e CertificateUsage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificateUsage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificateUsage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CertificateUsage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CertificateUsageOutput struct{ *pulumi.OutputState }

func (CertificateUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateUsage)(nil)).Elem()
}

func (o CertificateUsageOutput) ToCertificateUsageOutput() CertificateUsageOutput {
	return o
}

func (o CertificateUsageOutput) ToCertificateUsageOutputWithContext(ctx context.Context) CertificateUsageOutput {
	return o
}

func (o CertificateUsageOutput) ToCertificateUsagePtrOutput() CertificateUsagePtrOutput {
	return o.ToCertificateUsagePtrOutputWithContext(context.Background())
}

func (o CertificateUsageOutput) ToCertificateUsagePtrOutputWithContext(ctx context.Context) CertificateUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateUsage) *CertificateUsage {
		return &v
	}).(CertificateUsagePtrOutput)
}

func (o CertificateUsageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateUsageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateUsage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateUsageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateUsageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateUsage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateUsagePtrOutput struct{ *pulumi.OutputState }

func (CertificateUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateUsage)(nil)).Elem()
}

func (o CertificateUsagePtrOutput) ToCertificateUsagePtrOutput() CertificateUsagePtrOutput {
	return o
}

func (o CertificateUsagePtrOutput) ToCertificateUsagePtrOutputWithContext(ctx context.Context) CertificateUsagePtrOutput {
	return o
}

func (o CertificateUsagePtrOutput) Elem() CertificateUsageOutput {
	return o.ApplyT(func(v *CertificateUsage) CertificateUsage {
		if v != nil {
			return *v
		}
		var ret CertificateUsage
		return ret
	}).(CertificateUsageOutput)
}

func (o CertificateUsagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateUsagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateUsage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CertificateUsageInput is an input type that accepts CertificateUsageArgs and CertificateUsageOutput values.
// You can construct a concrete instance of `CertificateUsageInput` via:
//
//	CertificateUsageArgs{...}
type CertificateUsageInput interface {
	pulumi.Input

	ToCertificateUsageOutput() CertificateUsageOutput
	ToCertificateUsageOutputWithContext(context.Context) CertificateUsageOutput
}

var certificateUsagePtrType = reflect.TypeOf((**CertificateUsage)(nil)).Elem()

type CertificateUsagePtrInput interface {
	pulumi.Input

	ToCertificateUsagePtrOutput() CertificateUsagePtrOutput
	ToCertificateUsagePtrOutputWithContext(context.Context) CertificateUsagePtrOutput
}

type certificateUsagePtr string

func CertificateUsagePtr(v string) CertificateUsagePtrInput {
	return (*certificateUsagePtr)(&v)
}

func (*certificateUsagePtr) ElementType() reflect.Type {
	return certificateUsagePtrType
}

func (in *certificateUsagePtr) ToCertificateUsagePtrOutput() CertificateUsagePtrOutput {
	return pulumi.ToOutput(in).(CertificateUsagePtrOutput)
}

func (in *certificateUsagePtr) ToCertificateUsagePtrOutputWithContext(ctx context.Context) CertificateUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CertificateUsagePtrOutput)
}

// Compression setting for this AS2 connector configuration.
type ConnectorAs2ConfigPropertiesCompression string

const (
	ConnectorAs2ConfigPropertiesCompressionZlib     = ConnectorAs2ConfigPropertiesCompression("ZLIB")
	ConnectorAs2ConfigPropertiesCompressionDisabled = ConnectorAs2ConfigPropertiesCompression("DISABLED")
)

func (ConnectorAs2ConfigPropertiesCompression) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesCompression)(nil)).Elem()
}

func (e ConnectorAs2ConfigPropertiesCompression) ToConnectorAs2ConfigPropertiesCompressionOutput() ConnectorAs2ConfigPropertiesCompressionOutput {
	return pulumi.ToOutput(e).(ConnectorAs2ConfigPropertiesCompressionOutput)
}

func (e ConnectorAs2ConfigPropertiesCompression) ToConnectorAs2ConfigPropertiesCompressionOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorAs2ConfigPropertiesCompressionOutput)
}

func (e ConnectorAs2ConfigPropertiesCompression) ToConnectorAs2ConfigPropertiesCompressionPtrOutput() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return e.ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesCompression) ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return ConnectorAs2ConfigPropertiesCompression(e).ToConnectorAs2ConfigPropertiesCompressionOutputWithContext(ctx).ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(ctx)
}

func (e ConnectorAs2ConfigPropertiesCompression) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesCompression) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesCompression) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesCompression) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorAs2ConfigPropertiesCompressionOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesCompression)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToConnectorAs2ConfigPropertiesCompressionOutput() ConnectorAs2ConfigPropertiesCompressionOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToConnectorAs2ConfigPropertiesCompressionOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToConnectorAs2ConfigPropertiesCompressionPtrOutput() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o.ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAs2ConfigPropertiesCompression) *ConnectorAs2ConfigPropertiesCompression {
		return &v
	}).(ConnectorAs2ConfigPropertiesCompressionPtrOutput)
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesCompression) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesCompressionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesCompression) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorAs2ConfigPropertiesCompressionPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAs2ConfigPropertiesCompression)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesCompressionPtrOutput) ToConnectorAs2ConfigPropertiesCompressionPtrOutput() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesCompressionPtrOutput) ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesCompressionPtrOutput) Elem() ConnectorAs2ConfigPropertiesCompressionOutput {
	return o.ApplyT(func(v *ConnectorAs2ConfigPropertiesCompression) ConnectorAs2ConfigPropertiesCompression {
		if v != nil {
			return *v
		}
		var ret ConnectorAs2ConfigPropertiesCompression
		return ret
	}).(ConnectorAs2ConfigPropertiesCompressionOutput)
}

func (o ConnectorAs2ConfigPropertiesCompressionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesCompressionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorAs2ConfigPropertiesCompression) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectorAs2ConfigPropertiesCompressionInput is an input type that accepts ConnectorAs2ConfigPropertiesCompressionArgs and ConnectorAs2ConfigPropertiesCompressionOutput values.
// You can construct a concrete instance of `ConnectorAs2ConfigPropertiesCompressionInput` via:
//
//	ConnectorAs2ConfigPropertiesCompressionArgs{...}
type ConnectorAs2ConfigPropertiesCompressionInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesCompressionOutput() ConnectorAs2ConfigPropertiesCompressionOutput
	ToConnectorAs2ConfigPropertiesCompressionOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesCompressionOutput
}

var connectorAs2ConfigPropertiesCompressionPtrType = reflect.TypeOf((**ConnectorAs2ConfigPropertiesCompression)(nil)).Elem()

type ConnectorAs2ConfigPropertiesCompressionPtrInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesCompressionPtrOutput() ConnectorAs2ConfigPropertiesCompressionPtrOutput
	ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesCompressionPtrOutput
}

type connectorAs2ConfigPropertiesCompressionPtr string

func ConnectorAs2ConfigPropertiesCompressionPtr(v string) ConnectorAs2ConfigPropertiesCompressionPtrInput {
	return (*connectorAs2ConfigPropertiesCompressionPtr)(&v)
}

func (*connectorAs2ConfigPropertiesCompressionPtr) ElementType() reflect.Type {
	return connectorAs2ConfigPropertiesCompressionPtrType
}

func (in *connectorAs2ConfigPropertiesCompressionPtr) ToConnectorAs2ConfigPropertiesCompressionPtrOutput() ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return pulumi.ToOutput(in).(ConnectorAs2ConfigPropertiesCompressionPtrOutput)
}

func (in *connectorAs2ConfigPropertiesCompressionPtr) ToConnectorAs2ConfigPropertiesCompressionPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorAs2ConfigPropertiesCompressionPtrOutput)
}

// Encryption algorithm for this AS2 connector configuration.
type ConnectorAs2ConfigPropertiesEncryptionAlgorithm string

const (
	ConnectorAs2ConfigPropertiesEncryptionAlgorithmAes128Cbc = ConnectorAs2ConfigPropertiesEncryptionAlgorithm("AES128_CBC")
	ConnectorAs2ConfigPropertiesEncryptionAlgorithmAes192Cbc = ConnectorAs2ConfigPropertiesEncryptionAlgorithm("AES192_CBC")
	ConnectorAs2ConfigPropertiesEncryptionAlgorithmAes256Cbc = ConnectorAs2ConfigPropertiesEncryptionAlgorithm("AES256_CBC")
)

func (ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesEncryptionAlgorithm)(nil)).Elem()
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return e.ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return ConnectorAs2ConfigPropertiesEncryptionAlgorithm(e).ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutputWithContext(ctx).ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesEncryptionAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o.ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAs2ConfigPropertiesEncryptionAlgorithm) *ConnectorAs2ConfigPropertiesEncryptionAlgorithm {
		return &v
	}).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput)
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAs2ConfigPropertiesEncryptionAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) Elem() ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *ConnectorAs2ConfigPropertiesEncryptionAlgorithm) ConnectorAs2ConfigPropertiesEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret ConnectorAs2ConfigPropertiesEncryptionAlgorithm
		return ret
	}).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput)
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorAs2ConfigPropertiesEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectorAs2ConfigPropertiesEncryptionAlgorithmInput is an input type that accepts ConnectorAs2ConfigPropertiesEncryptionAlgorithmArgs and ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput values.
// You can construct a concrete instance of `ConnectorAs2ConfigPropertiesEncryptionAlgorithmInput` via:
//
//	ConnectorAs2ConfigPropertiesEncryptionAlgorithmArgs{...}
type ConnectorAs2ConfigPropertiesEncryptionAlgorithmInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput
	ToConnectorAs2ConfigPropertiesEncryptionAlgorithmOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput
}

var connectorAs2ConfigPropertiesEncryptionAlgorithmPtrType = reflect.TypeOf((**ConnectorAs2ConfigPropertiesEncryptionAlgorithm)(nil)).Elem()

type ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput
	ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput
}

type connectorAs2ConfigPropertiesEncryptionAlgorithmPtr string

func ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtr(v string) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrInput {
	return (*connectorAs2ConfigPropertiesEncryptionAlgorithmPtr)(&v)
}

func (*connectorAs2ConfigPropertiesEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return connectorAs2ConfigPropertiesEncryptionAlgorithmPtrType
}

func (in *connectorAs2ConfigPropertiesEncryptionAlgorithmPtr) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput)
}

func (in *connectorAs2ConfigPropertiesEncryptionAlgorithmPtr) ToConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput)
}

// MDN Response setting for this AS2 connector configuration.
type ConnectorAs2ConfigPropertiesMdnResponse string

const (
	ConnectorAs2ConfigPropertiesMdnResponseSync = ConnectorAs2ConfigPropertiesMdnResponse("SYNC")
	ConnectorAs2ConfigPropertiesMdnResponseNone = ConnectorAs2ConfigPropertiesMdnResponse("NONE")
)

func (ConnectorAs2ConfigPropertiesMdnResponse) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnResponse)(nil)).Elem()
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToConnectorAs2ConfigPropertiesMdnResponseOutput() ConnectorAs2ConfigPropertiesMdnResponseOutput {
	return pulumi.ToOutput(e).(ConnectorAs2ConfigPropertiesMdnResponseOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToConnectorAs2ConfigPropertiesMdnResponseOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorAs2ConfigPropertiesMdnResponseOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutput() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return e.ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return ConnectorAs2ConfigPropertiesMdnResponse(e).ToConnectorAs2ConfigPropertiesMdnResponseOutputWithContext(ctx).ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(ctx)
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesMdnResponse) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorAs2ConfigPropertiesMdnResponseOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesMdnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnResponse)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToConnectorAs2ConfigPropertiesMdnResponseOutput() ConnectorAs2ConfigPropertiesMdnResponseOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToConnectorAs2ConfigPropertiesMdnResponseOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponseOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutput() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o.ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAs2ConfigPropertiesMdnResponse) *ConnectorAs2ConfigPropertiesMdnResponse {
		return &v
	}).(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesMdnResponse) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnResponseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesMdnResponse) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorAs2ConfigPropertiesMdnResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAs2ConfigPropertiesMdnResponse)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutput() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) Elem() ConnectorAs2ConfigPropertiesMdnResponseOutput {
	return o.ApplyT(func(v *ConnectorAs2ConfigPropertiesMdnResponse) ConnectorAs2ConfigPropertiesMdnResponse {
		if v != nil {
			return *v
		}
		var ret ConnectorAs2ConfigPropertiesMdnResponse
		return ret
	}).(ConnectorAs2ConfigPropertiesMdnResponseOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnResponsePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorAs2ConfigPropertiesMdnResponse) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectorAs2ConfigPropertiesMdnResponseInput is an input type that accepts ConnectorAs2ConfigPropertiesMdnResponseArgs and ConnectorAs2ConfigPropertiesMdnResponseOutput values.
// You can construct a concrete instance of `ConnectorAs2ConfigPropertiesMdnResponseInput` via:
//
//	ConnectorAs2ConfigPropertiesMdnResponseArgs{...}
type ConnectorAs2ConfigPropertiesMdnResponseInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesMdnResponseOutput() ConnectorAs2ConfigPropertiesMdnResponseOutput
	ToConnectorAs2ConfigPropertiesMdnResponseOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesMdnResponseOutput
}

var connectorAs2ConfigPropertiesMdnResponsePtrType = reflect.TypeOf((**ConnectorAs2ConfigPropertiesMdnResponse)(nil)).Elem()

type ConnectorAs2ConfigPropertiesMdnResponsePtrInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesMdnResponsePtrOutput() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput
	ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesMdnResponsePtrOutput
}

type connectorAs2ConfigPropertiesMdnResponsePtr string

func ConnectorAs2ConfigPropertiesMdnResponsePtr(v string) ConnectorAs2ConfigPropertiesMdnResponsePtrInput {
	return (*connectorAs2ConfigPropertiesMdnResponsePtr)(&v)
}

func (*connectorAs2ConfigPropertiesMdnResponsePtr) ElementType() reflect.Type {
	return connectorAs2ConfigPropertiesMdnResponsePtrType
}

func (in *connectorAs2ConfigPropertiesMdnResponsePtr) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutput() ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return pulumi.ToOutput(in).(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput)
}

func (in *connectorAs2ConfigPropertiesMdnResponsePtr) ToConnectorAs2ConfigPropertiesMdnResponsePtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput)
}

// MDN Signing algorithm for this AS2 connector configuration.
type ConnectorAs2ConfigPropertiesMdnSigningAlgorithm string

const (
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmSha256  = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA256")
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmSha384  = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA384")
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmSha512  = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA512")
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmSha1    = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA1")
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmNone    = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("NONE")
	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmDefault = ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("DEFAULT")
)

func (ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnSigningAlgorithm)(nil)).Elem()
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput {
	return pulumi.ToOutput(e).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return e.ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return ConnectorAs2ConfigPropertiesMdnSigningAlgorithm(e).ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutputWithContext(ctx).ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(ctx)
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnSigningAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o.ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm {
		return &v
	}).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAs2ConfigPropertiesMdnSigningAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) Elem() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput {
	return o.ApplyT(func(v *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) ConnectorAs2ConfigPropertiesMdnSigningAlgorithm {
		if v != nil {
			return *v
		}
		var ret ConnectorAs2ConfigPropertiesMdnSigningAlgorithm
		return ret
	}).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput)
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorAs2ConfigPropertiesMdnSigningAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectorAs2ConfigPropertiesMdnSigningAlgorithmInput is an input type that accepts ConnectorAs2ConfigPropertiesMdnSigningAlgorithmArgs and ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput values.
// You can construct a concrete instance of `ConnectorAs2ConfigPropertiesMdnSigningAlgorithmInput` via:
//
//	ConnectorAs2ConfigPropertiesMdnSigningAlgorithmArgs{...}
type ConnectorAs2ConfigPropertiesMdnSigningAlgorithmInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput
	ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput
}

var connectorAs2ConfigPropertiesMdnSigningAlgorithmPtrType = reflect.TypeOf((**ConnectorAs2ConfigPropertiesMdnSigningAlgorithm)(nil)).Elem()

type ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput
	ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput
}

type connectorAs2ConfigPropertiesMdnSigningAlgorithmPtr string

func ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtr(v string) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrInput {
	return (*connectorAs2ConfigPropertiesMdnSigningAlgorithmPtr)(&v)
}

func (*connectorAs2ConfigPropertiesMdnSigningAlgorithmPtr) ElementType() reflect.Type {
	return connectorAs2ConfigPropertiesMdnSigningAlgorithmPtrType
}

func (in *connectorAs2ConfigPropertiesMdnSigningAlgorithmPtr) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput)
}

func (in *connectorAs2ConfigPropertiesMdnSigningAlgorithmPtr) ToConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput)
}

// Signing algorithm for this AS2 connector configuration.
type ConnectorAs2ConfigPropertiesSigningAlgorithm string

const (
	ConnectorAs2ConfigPropertiesSigningAlgorithmSha256 = ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA256")
	ConnectorAs2ConfigPropertiesSigningAlgorithmSha384 = ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA384")
	ConnectorAs2ConfigPropertiesSigningAlgorithmSha512 = ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA512")
	ConnectorAs2ConfigPropertiesSigningAlgorithmSha1   = ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA1")
	ConnectorAs2ConfigPropertiesSigningAlgorithmNone   = ConnectorAs2ConfigPropertiesSigningAlgorithm("NONE")
)

func (ConnectorAs2ConfigPropertiesSigningAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesSigningAlgorithm)(nil)).Elem()
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToConnectorAs2ConfigPropertiesSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmOutput {
	return pulumi.ToOutput(e).(ConnectorAs2ConfigPropertiesSigningAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToConnectorAs2ConfigPropertiesSigningAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorAs2ConfigPropertiesSigningAlgorithmOutput)
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return e.ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return ConnectorAs2ConfigPropertiesSigningAlgorithm(e).ToConnectorAs2ConfigPropertiesSigningAlgorithmOutputWithContext(ctx).ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(ctx)
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorAs2ConfigPropertiesSigningAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorAs2ConfigPropertiesSigningAlgorithmOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAs2ConfigPropertiesSigningAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o.ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAs2ConfigPropertiesSigningAlgorithm) *ConnectorAs2ConfigPropertiesSigningAlgorithm {
		return &v
	}).(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput)
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesSigningAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorAs2ConfigPropertiesSigningAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAs2ConfigPropertiesSigningAlgorithm)(nil)).Elem()
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return o
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) Elem() ConnectorAs2ConfigPropertiesSigningAlgorithmOutput {
	return o.ApplyT(func(v *ConnectorAs2ConfigPropertiesSigningAlgorithm) ConnectorAs2ConfigPropertiesSigningAlgorithm {
		if v != nil {
			return *v
		}
		var ret ConnectorAs2ConfigPropertiesSigningAlgorithm
		return ret
	}).(ConnectorAs2ConfigPropertiesSigningAlgorithmOutput)
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorAs2ConfigPropertiesSigningAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectorAs2ConfigPropertiesSigningAlgorithmInput is an input type that accepts ConnectorAs2ConfigPropertiesSigningAlgorithmArgs and ConnectorAs2ConfigPropertiesSigningAlgorithmOutput values.
// You can construct a concrete instance of `ConnectorAs2ConfigPropertiesSigningAlgorithmInput` via:
//
//	ConnectorAs2ConfigPropertiesSigningAlgorithmArgs{...}
type ConnectorAs2ConfigPropertiesSigningAlgorithmInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesSigningAlgorithmOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmOutput
	ToConnectorAs2ConfigPropertiesSigningAlgorithmOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmOutput
}

var connectorAs2ConfigPropertiesSigningAlgorithmPtrType = reflect.TypeOf((**ConnectorAs2ConfigPropertiesSigningAlgorithm)(nil)).Elem()

type ConnectorAs2ConfigPropertiesSigningAlgorithmPtrInput interface {
	pulumi.Input

	ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput
	ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput
}

type connectorAs2ConfigPropertiesSigningAlgorithmPtr string

func ConnectorAs2ConfigPropertiesSigningAlgorithmPtr(v string) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrInput {
	return (*connectorAs2ConfigPropertiesSigningAlgorithmPtr)(&v)
}

func (*connectorAs2ConfigPropertiesSigningAlgorithmPtr) ElementType() reflect.Type {
	return connectorAs2ConfigPropertiesSigningAlgorithmPtrType
}

func (in *connectorAs2ConfigPropertiesSigningAlgorithmPtr) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput() ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput)
}

func (in *connectorAs2ConfigPropertiesSigningAlgorithmPtr) ToConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutputWithContext(ctx context.Context) ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput)
}

// Enum specifying whether the profile is local or associated with a trading partner.
type ProfileType string

const (
	ProfileTypeLocal   = ProfileType("LOCAL")
	ProfileTypePartner = ProfileType("PARTNER")
)

func (ProfileType) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileType)(nil)).Elem()
}

func (e ProfileType) ToProfileTypeOutput() ProfileTypeOutput {
	return pulumi.ToOutput(e).(ProfileTypeOutput)
}

func (e ProfileType) ToProfileTypeOutputWithContext(ctx context.Context) ProfileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProfileTypeOutput)
}

func (e ProfileType) ToProfileTypePtrOutput() ProfileTypePtrOutput {
	return e.ToProfileTypePtrOutputWithContext(context.Background())
}

func (e ProfileType) ToProfileTypePtrOutputWithContext(ctx context.Context) ProfileTypePtrOutput {
	return ProfileType(e).ToProfileTypeOutputWithContext(ctx).ToProfileTypePtrOutputWithContext(ctx)
}

func (e ProfileType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProfileType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProfileTypeOutput struct{ *pulumi.OutputState }

func (ProfileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileType)(nil)).Elem()
}

func (o ProfileTypeOutput) ToProfileTypeOutput() ProfileTypeOutput {
	return o
}

func (o ProfileTypeOutput) ToProfileTypeOutputWithContext(ctx context.Context) ProfileTypeOutput {
	return o
}

func (o ProfileTypeOutput) ToProfileTypePtrOutput() ProfileTypePtrOutput {
	return o.ToProfileTypePtrOutputWithContext(context.Background())
}

func (o ProfileTypeOutput) ToProfileTypePtrOutputWithContext(ctx context.Context) ProfileTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileType) *ProfileType {
		return &v
	}).(ProfileTypePtrOutput)
}

func (o ProfileTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProfileTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProfileTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProfileTypePtrOutput struct{ *pulumi.OutputState }

func (ProfileTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileType)(nil)).Elem()
}

func (o ProfileTypePtrOutput) ToProfileTypePtrOutput() ProfileTypePtrOutput {
	return o
}

func (o ProfileTypePtrOutput) ToProfileTypePtrOutputWithContext(ctx context.Context) ProfileTypePtrOutput {
	return o
}

func (o ProfileTypePtrOutput) Elem() ProfileTypeOutput {
	return o.ApplyT(func(v *ProfileType) ProfileType {
		if v != nil {
			return *v
		}
		var ret ProfileType
		return ret
	}).(ProfileTypeOutput)
}

func (o ProfileTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProfileType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProfileTypeInput is an input type that accepts ProfileTypeArgs and ProfileTypeOutput values.
// You can construct a concrete instance of `ProfileTypeInput` via:
//
//	ProfileTypeArgs{...}
type ProfileTypeInput interface {
	pulumi.Input

	ToProfileTypeOutput() ProfileTypeOutput
	ToProfileTypeOutputWithContext(context.Context) ProfileTypeOutput
}

var profileTypePtrType = reflect.TypeOf((**ProfileType)(nil)).Elem()

type ProfileTypePtrInput interface {
	pulumi.Input

	ToProfileTypePtrOutput() ProfileTypePtrOutput
	ToProfileTypePtrOutputWithContext(context.Context) ProfileTypePtrOutput
}

type profileTypePtr string

func ProfileTypePtr(v string) ProfileTypePtrInput {
	return (*profileTypePtr)(&v)
}

func (*profileTypePtr) ElementType() reflect.Type {
	return profileTypePtrType
}

func (in *profileTypePtr) ToProfileTypePtrOutput() ProfileTypePtrOutput {
	return pulumi.ToOutput(in).(ProfileTypePtrOutput)
}

func (in *profileTypePtr) ToProfileTypePtrOutputWithContext(ctx context.Context) ProfileTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProfileTypePtrOutput)
}

// A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE.
type WorkflowStepCopyStepDetailsPropertiesOverwriteExisting string

const (
	WorkflowStepCopyStepDetailsPropertiesOverwriteExistingTrue  = WorkflowStepCopyStepDetailsPropertiesOverwriteExisting("TRUE")
	WorkflowStepCopyStepDetailsPropertiesOverwriteExistingFalse = WorkflowStepCopyStepDetailsPropertiesOverwriteExisting("FALSE")
)

func (WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesOverwriteExisting)(nil)).Elem()
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput {
	return pulumi.ToOutput(e).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput)
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput)
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return e.ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(context.Background())
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return WorkflowStepCopyStepDetailsPropertiesOverwriteExisting(e).ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutputWithContext(ctx).ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(ctx)
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesOverwriteExisting)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		return &v
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepCopyStepDetailsPropertiesOverwriteExisting)(nil)).Elem()
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return o
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) Elem() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput {
	return o.ApplyT(func(v *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) WorkflowStepCopyStepDetailsPropertiesOverwriteExisting {
		if v != nil {
			return *v
		}
		var ret WorkflowStepCopyStepDetailsPropertiesOverwriteExisting
		return ret
	}).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput)
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowStepCopyStepDetailsPropertiesOverwriteExisting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkflowStepCopyStepDetailsPropertiesOverwriteExistingInput is an input type that accepts WorkflowStepCopyStepDetailsPropertiesOverwriteExistingArgs and WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput values.
// You can construct a concrete instance of `WorkflowStepCopyStepDetailsPropertiesOverwriteExistingInput` via:
//
//	WorkflowStepCopyStepDetailsPropertiesOverwriteExistingArgs{...}
type WorkflowStepCopyStepDetailsPropertiesOverwriteExistingInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput
	ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput
}

var workflowStepCopyStepDetailsPropertiesOverwriteExistingPtrType = reflect.TypeOf((**WorkflowStepCopyStepDetailsPropertiesOverwriteExisting)(nil)).Elem()

type WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrInput interface {
	pulumi.Input

	ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput
	ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput
}

type workflowStepCopyStepDetailsPropertiesOverwriteExistingPtr string

func WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtr(v string) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrInput {
	return (*workflowStepCopyStepDetailsPropertiesOverwriteExistingPtr)(&v)
}

func (*workflowStepCopyStepDetailsPropertiesOverwriteExistingPtr) ElementType() reflect.Type {
	return workflowStepCopyStepDetailsPropertiesOverwriteExistingPtrType
}

func (in *workflowStepCopyStepDetailsPropertiesOverwriteExistingPtr) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput() WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return pulumi.ToOutput(in).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

func (in *workflowStepCopyStepDetailsPropertiesOverwriteExistingPtr) ToWorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutputWithContext(ctx context.Context) WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput)
}

type WorkflowStepType string

const (
	WorkflowStepTypeCopy   = WorkflowStepType("COPY")
	WorkflowStepTypeCustom = WorkflowStepType("CUSTOM")
	WorkflowStepTypeDelete = WorkflowStepType("DELETE")
	WorkflowStepTypeTag    = WorkflowStepType("TAG")
)

func (WorkflowStepType) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepType)(nil)).Elem()
}

func (e WorkflowStepType) ToWorkflowStepTypeOutput() WorkflowStepTypeOutput {
	return pulumi.ToOutput(e).(WorkflowStepTypeOutput)
}

func (e WorkflowStepType) ToWorkflowStepTypeOutputWithContext(ctx context.Context) WorkflowStepTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkflowStepTypeOutput)
}

func (e WorkflowStepType) ToWorkflowStepTypePtrOutput() WorkflowStepTypePtrOutput {
	return e.ToWorkflowStepTypePtrOutputWithContext(context.Background())
}

func (e WorkflowStepType) ToWorkflowStepTypePtrOutputWithContext(ctx context.Context) WorkflowStepTypePtrOutput {
	return WorkflowStepType(e).ToWorkflowStepTypeOutputWithContext(ctx).ToWorkflowStepTypePtrOutputWithContext(ctx)
}

func (e WorkflowStepType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowStepType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowStepType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkflowStepType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkflowStepTypeOutput struct{ *pulumi.OutputState }

func (WorkflowStepTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowStepType)(nil)).Elem()
}

func (o WorkflowStepTypeOutput) ToWorkflowStepTypeOutput() WorkflowStepTypeOutput {
	return o
}

func (o WorkflowStepTypeOutput) ToWorkflowStepTypeOutputWithContext(ctx context.Context) WorkflowStepTypeOutput {
	return o
}

func (o WorkflowStepTypeOutput) ToWorkflowStepTypePtrOutput() WorkflowStepTypePtrOutput {
	return o.ToWorkflowStepTypePtrOutputWithContext(context.Background())
}

func (o WorkflowStepTypeOutput) ToWorkflowStepTypePtrOutputWithContext(ctx context.Context) WorkflowStepTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowStepType) *WorkflowStepType {
		return &v
	}).(WorkflowStepTypePtrOutput)
}

func (o WorkflowStepTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowStepTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStepType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowStepTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStepTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowStepType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowStepTypePtrOutput struct{ *pulumi.OutputState }

func (WorkflowStepTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowStepType)(nil)).Elem()
}

func (o WorkflowStepTypePtrOutput) ToWorkflowStepTypePtrOutput() WorkflowStepTypePtrOutput {
	return o
}

func (o WorkflowStepTypePtrOutput) ToWorkflowStepTypePtrOutputWithContext(ctx context.Context) WorkflowStepTypePtrOutput {
	return o
}

func (o WorkflowStepTypePtrOutput) Elem() WorkflowStepTypeOutput {
	return o.ApplyT(func(v *WorkflowStepType) WorkflowStepType {
		if v != nil {
			return *v
		}
		var ret WorkflowStepType
		return ret
	}).(WorkflowStepTypeOutput)
}

func (o WorkflowStepTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowStepTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowStepType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkflowStepTypeInput is an input type that accepts WorkflowStepTypeArgs and WorkflowStepTypeOutput values.
// You can construct a concrete instance of `WorkflowStepTypeInput` via:
//
//	WorkflowStepTypeArgs{...}
type WorkflowStepTypeInput interface {
	pulumi.Input

	ToWorkflowStepTypeOutput() WorkflowStepTypeOutput
	ToWorkflowStepTypeOutputWithContext(context.Context) WorkflowStepTypeOutput
}

var workflowStepTypePtrType = reflect.TypeOf((**WorkflowStepType)(nil)).Elem()

type WorkflowStepTypePtrInput interface {
	pulumi.Input

	ToWorkflowStepTypePtrOutput() WorkflowStepTypePtrOutput
	ToWorkflowStepTypePtrOutputWithContext(context.Context) WorkflowStepTypePtrOutput
}

type workflowStepTypePtr string

func WorkflowStepTypePtr(v string) WorkflowStepTypePtrInput {
	return (*workflowStepTypePtr)(&v)
}

func (*workflowStepTypePtr) ElementType() reflect.Type {
	return workflowStepTypePtrType
}

func (in *workflowStepTypePtr) ToWorkflowStepTypePtrOutput() WorkflowStepTypePtrOutput {
	return pulumi.ToOutput(in).(WorkflowStepTypePtrOutput)
}

func (in *workflowStepTypePtr) ToWorkflowStepTypePtrOutputWithContext(ctx context.Context) WorkflowStepTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkflowStepTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgreementStatusInput)(nil)).Elem(), AgreementStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AgreementStatusPtrInput)(nil)).Elem(), AgreementStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateUsageInput)(nil)).Elem(), CertificateUsage("SIGNING"))
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateUsagePtrInput)(nil)).Elem(), CertificateUsage("SIGNING"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesCompressionInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesCompression("ZLIB"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesCompressionPtrInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesCompression("ZLIB"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesEncryptionAlgorithmInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesEncryptionAlgorithm("AES128_CBC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesEncryptionAlgorithm("AES128_CBC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnResponseInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesMdnResponse("SYNC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnResponsePtrInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesMdnResponse("SYNC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnSigningAlgorithmInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA256"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesMdnSigningAlgorithm("SHA256"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesSigningAlgorithmInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA256"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAs2ConfigPropertiesSigningAlgorithmPtrInput)(nil)).Elem(), ConnectorAs2ConfigPropertiesSigningAlgorithm("SHA256"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileTypeInput)(nil)).Elem(), ProfileType("LOCAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileTypePtrInput)(nil)).Elem(), ProfileType("LOCAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesOverwriteExistingInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesOverwriteExisting("TRUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrInput)(nil)).Elem(), WorkflowStepCopyStepDetailsPropertiesOverwriteExisting("TRUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTypeInput)(nil)).Elem(), WorkflowStepType("COPY"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowStepTypePtrInput)(nil)).Elem(), WorkflowStepType("COPY"))
	pulumi.RegisterOutputType(AgreementStatusOutput{})
	pulumi.RegisterOutputType(AgreementStatusPtrOutput{})
	pulumi.RegisterOutputType(CertificateStatusOutput{})
	pulumi.RegisterOutputType(CertificateStatusPtrOutput{})
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateTypePtrOutput{})
	pulumi.RegisterOutputType(CertificateUsageOutput{})
	pulumi.RegisterOutputType(CertificateUsagePtrOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesCompressionOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesCompressionPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesMdnResponseOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesMdnResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesMdnSigningAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesSigningAlgorithmOutput{})
	pulumi.RegisterOutputType(ConnectorAs2ConfigPropertiesSigningAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(ProfileTypeOutput{})
	pulumi.RegisterOutputType(ProfileTypePtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingOutput{})
	pulumi.RegisterOutputType(WorkflowStepCopyStepDetailsPropertiesOverwriteExistingPtrOutput{})
	pulumi.RegisterOutputType(WorkflowStepTypeOutput{})
	pulumi.RegisterOutputType(WorkflowStepTypePtrOutput{})
}
