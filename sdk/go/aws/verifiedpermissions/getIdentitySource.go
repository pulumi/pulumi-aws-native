// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package verifiedpermissions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::VerifiedPermissions::IdentitySource Resource Type
func LookupIdentitySource(ctx *pulumi.Context, args *LookupIdentitySourceArgs, opts ...pulumi.InvokeOption) (*LookupIdentitySourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentitySourceResult
	err := ctx.Invoke("aws-native:verifiedpermissions:getIdentitySource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentitySourceArgs struct {
	// The unique ID of the new or updated identity store.
	IdentitySourceId string `pulumi:"identitySourceId"`
	// Specifies the ID of the policy store in which you want to store this identity source. Only policies and requests made using this policy store can reference identities from the identity provider configured in the new identity source.
	PolicyStoreId string `pulumi:"policyStoreId"`
}

type LookupIdentitySourceResult struct {
	// Contains configuration information used when creating a new identity source.
	Configuration interface{}            `pulumi:"configuration"`
	Details       *IdentitySourceDetails `pulumi:"details"`
	// The unique ID of the new or updated identity store.
	IdentitySourceId *string `pulumi:"identitySourceId"`
	// Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
	PrincipalEntityType *string `pulumi:"principalEntityType"`
}

func LookupIdentitySourceOutput(ctx *pulumi.Context, args LookupIdentitySourceOutputArgs, opts ...pulumi.InvokeOption) LookupIdentitySourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentitySourceResultOutput, error) {
			args := v.(LookupIdentitySourceArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupIdentitySourceResult
			secret, err := ctx.InvokePackageRaw("aws-native:verifiedpermissions:getIdentitySource", args, &rv, "", opts...)
			if err != nil {
				return LookupIdentitySourceResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupIdentitySourceResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupIdentitySourceResultOutput), nil
			}
			return output, nil
		}).(LookupIdentitySourceResultOutput)
}

type LookupIdentitySourceOutputArgs struct {
	// The unique ID of the new or updated identity store.
	IdentitySourceId pulumi.StringInput `pulumi:"identitySourceId"`
	// Specifies the ID of the policy store in which you want to store this identity source. Only policies and requests made using this policy store can reference identities from the identity provider configured in the new identity source.
	PolicyStoreId pulumi.StringInput `pulumi:"policyStoreId"`
}

func (LookupIdentitySourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentitySourceArgs)(nil)).Elem()
}

type LookupIdentitySourceResultOutput struct{ *pulumi.OutputState }

func (LookupIdentitySourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentitySourceResult)(nil)).Elem()
}

func (o LookupIdentitySourceResultOutput) ToLookupIdentitySourceResultOutput() LookupIdentitySourceResultOutput {
	return o
}

func (o LookupIdentitySourceResultOutput) ToLookupIdentitySourceResultOutputWithContext(ctx context.Context) LookupIdentitySourceResultOutput {
	return o
}

// Contains configuration information used when creating a new identity source.
func (o LookupIdentitySourceResultOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupIdentitySourceResult) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

func (o LookupIdentitySourceResultOutput) Details() IdentitySourceDetailsPtrOutput {
	return o.ApplyT(func(v LookupIdentitySourceResult) *IdentitySourceDetails { return v.Details }).(IdentitySourceDetailsPtrOutput)
}

// The unique ID of the new or updated identity store.
func (o LookupIdentitySourceResultOutput) IdentitySourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentitySourceResult) *string { return v.IdentitySourceId }).(pulumi.StringPtrOutput)
}

// Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
func (o LookupIdentitySourceResultOutput) PrincipalEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentitySourceResult) *string { return v.PrincipalEntityType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentitySourceResultOutput{})
}
