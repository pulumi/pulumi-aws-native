// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package verifiedpermissions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IdentitySourceCognitoGroupConfiguration struct {
	GroupEntityType string `pulumi:"groupEntityType"`
}

// IdentitySourceCognitoGroupConfigurationInput is an input type that accepts IdentitySourceCognitoGroupConfigurationArgs and IdentitySourceCognitoGroupConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoGroupConfigurationInput` via:
//
//	IdentitySourceCognitoGroupConfigurationArgs{...}
type IdentitySourceCognitoGroupConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput
	ToIdentitySourceCognitoGroupConfigurationOutputWithContext(context.Context) IdentitySourceCognitoGroupConfigurationOutput
}

type IdentitySourceCognitoGroupConfigurationArgs struct {
	GroupEntityType pulumi.StringInput `pulumi:"groupEntityType"`
}

func (IdentitySourceCognitoGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationOutput)
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationOutput).ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx)
}

// IdentitySourceCognitoGroupConfigurationPtrInput is an input type that accepts IdentitySourceCognitoGroupConfigurationArgs, IdentitySourceCognitoGroupConfigurationPtr and IdentitySourceCognitoGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoGroupConfigurationPtrInput` via:
//
//	        IdentitySourceCognitoGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type IdentitySourceCognitoGroupConfigurationPtrInput interface {
	pulumi.Input

	ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput
	ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput
}

type identitySourceCognitoGroupConfigurationPtrType IdentitySourceCognitoGroupConfigurationArgs

func IdentitySourceCognitoGroupConfigurationPtr(v *IdentitySourceCognitoGroupConfigurationArgs) IdentitySourceCognitoGroupConfigurationPtrInput {
	return (*identitySourceCognitoGroupConfigurationPtrType)(v)
}

func (*identitySourceCognitoGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (i *identitySourceCognitoGroupConfigurationPtrType) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *identitySourceCognitoGroupConfigurationPtrType) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

type IdentitySourceCognitoGroupConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentitySourceCognitoGroupConfiguration) *IdentitySourceCognitoGroupConfiguration {
		return &v
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoGroupConfigurationOutput) GroupEntityType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceCognitoGroupConfiguration) string { return v.GroupEntityType }).(pulumi.StringOutput)
}

type IdentitySourceCognitoGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) Elem() IdentitySourceCognitoGroupConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoGroupConfiguration) IdentitySourceCognitoGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceCognitoGroupConfiguration
		return ret
	}).(IdentitySourceCognitoGroupConfigurationOutput)
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) GroupEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.GroupEntityType
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceCognitoUserPoolConfiguration struct {
	ClientIds          []string                                 `pulumi:"clientIds"`
	GroupConfiguration *IdentitySourceCognitoGroupConfiguration `pulumi:"groupConfiguration"`
	UserPoolArn        string                                   `pulumi:"userPoolArn"`
}

// IdentitySourceCognitoUserPoolConfigurationInput is an input type that accepts IdentitySourceCognitoUserPoolConfigurationArgs and IdentitySourceCognitoUserPoolConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoUserPoolConfigurationInput` via:
//
//	IdentitySourceCognitoUserPoolConfigurationArgs{...}
type IdentitySourceCognitoUserPoolConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput
	ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(context.Context) IdentitySourceCognitoUserPoolConfigurationOutput
}

type IdentitySourceCognitoUserPoolConfigurationArgs struct {
	ClientIds          pulumi.StringArrayInput                         `pulumi:"clientIds"`
	GroupConfiguration IdentitySourceCognitoGroupConfigurationPtrInput `pulumi:"groupConfiguration"`
	UserPoolArn        pulumi.StringInput                              `pulumi:"userPoolArn"`
}

func (IdentitySourceCognitoUserPoolConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (i IdentitySourceCognitoUserPoolConfigurationArgs) ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput {
	return i.ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoUserPoolConfigurationArgs) ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

type IdentitySourceCognitoUserPoolConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoUserPoolConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) GroupConfiguration() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) *IdentitySourceCognitoGroupConfiguration {
		return v.GroupConfiguration
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

type IdentitySourceCognitoUserPoolConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoUserPoolConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ToIdentitySourceCognitoUserPoolConfigurationPtrOutput() IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ToIdentitySourceCognitoUserPoolConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) Elem() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) IdentitySourceCognitoUserPoolConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceCognitoUserPoolConfiguration
		return ret
	}).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ClientIds
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) GroupConfiguration() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) *IdentitySourceCognitoGroupConfiguration {
		if v == nil {
			return nil
		}
		return v.GroupConfiguration
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceConfiguration0Properties struct {
	CognitoUserPoolConfiguration IdentitySourceCognitoUserPoolConfiguration `pulumi:"cognitoUserPoolConfiguration"`
}

type IdentitySourceConfigurationProperties struct {
	CognitoUserPoolConfiguration IdentitySourceCognitoUserPoolConfiguration `pulumi:"cognitoUserPoolConfiguration"`
}

// IdentitySourceConfigurationPropertiesInput is an input type that accepts IdentitySourceConfigurationPropertiesArgs and IdentitySourceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `IdentitySourceConfigurationPropertiesInput` via:
//
//	IdentitySourceConfigurationPropertiesArgs{...}
type IdentitySourceConfigurationPropertiesInput interface {
	pulumi.Input

	ToIdentitySourceConfigurationPropertiesOutput() IdentitySourceConfigurationPropertiesOutput
	ToIdentitySourceConfigurationPropertiesOutputWithContext(context.Context) IdentitySourceConfigurationPropertiesOutput
}

type IdentitySourceConfigurationPropertiesArgs struct {
	CognitoUserPoolConfiguration IdentitySourceCognitoUserPoolConfigurationInput `pulumi:"cognitoUserPoolConfiguration"`
}

func (IdentitySourceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfigurationProperties)(nil)).Elem()
}

func (i IdentitySourceConfigurationPropertiesArgs) ToIdentitySourceConfigurationPropertiesOutput() IdentitySourceConfigurationPropertiesOutput {
	return i.ToIdentitySourceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i IdentitySourceConfigurationPropertiesArgs) ToIdentitySourceConfigurationPropertiesOutputWithContext(ctx context.Context) IdentitySourceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceConfigurationPropertiesOutput)
}

type IdentitySourceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfigurationProperties)(nil)).Elem()
}

func (o IdentitySourceConfigurationPropertiesOutput) ToIdentitySourceConfigurationPropertiesOutput() IdentitySourceConfigurationPropertiesOutput {
	return o
}

func (o IdentitySourceConfigurationPropertiesOutput) ToIdentitySourceConfigurationPropertiesOutputWithContext(ctx context.Context) IdentitySourceConfigurationPropertiesOutput {
	return o
}

func (o IdentitySourceConfigurationPropertiesOutput) CognitoUserPoolConfiguration() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o.ApplyT(func(v IdentitySourceConfigurationProperties) IdentitySourceCognitoUserPoolConfiguration {
		return v.CognitoUserPoolConfiguration
	}).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

type IdentitySourceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceConfigurationProperties)(nil)).Elem()
}

func (o IdentitySourceConfigurationPropertiesPtrOutput) ToIdentitySourceConfigurationPropertiesPtrOutput() IdentitySourceConfigurationPropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfigurationPropertiesPtrOutput) ToIdentitySourceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) IdentitySourceConfigurationPropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfigurationPropertiesPtrOutput) Elem() IdentitySourceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *IdentitySourceConfigurationProperties) IdentitySourceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret IdentitySourceConfigurationProperties
		return ret
	}).(IdentitySourceConfigurationPropertiesOutput)
}

func (o IdentitySourceConfigurationPropertiesPtrOutput) CognitoUserPoolConfiguration() IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceConfigurationProperties) *IdentitySourceCognitoUserPoolConfiguration {
		if v == nil {
			return nil
		}
		return &v.CognitoUserPoolConfiguration
	}).(IdentitySourceCognitoUserPoolConfigurationPtrOutput)
}

type IdentitySourceDetails struct {
	ClientIds    []string                    `pulumi:"clientIds"`
	DiscoveryUrl *string                     `pulumi:"discoveryUrl"`
	OpenIdIssuer *IdentitySourceOpenIdIssuer `pulumi:"openIdIssuer"`
	UserPoolArn  *string                     `pulumi:"userPoolArn"`
}

type IdentitySourceDetailsOutput struct{ *pulumi.OutputState }

func (IdentitySourceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceDetails)(nil)).Elem()
}

func (o IdentitySourceDetailsOutput) ToIdentitySourceDetailsOutput() IdentitySourceDetailsOutput {
	return o
}

func (o IdentitySourceDetailsOutput) ToIdentitySourceDetailsOutputWithContext(ctx context.Context) IdentitySourceDetailsOutput {
	return o
}

func (o IdentitySourceDetailsOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceDetails) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceDetailsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

func (o IdentitySourceDetailsOutput) OpenIdIssuer() IdentitySourceOpenIdIssuerPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *IdentitySourceOpenIdIssuer { return v.OpenIdIssuer }).(IdentitySourceOpenIdIssuerPtrOutput)
}

func (o IdentitySourceDetailsOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *string { return v.UserPoolArn }).(pulumi.StringPtrOutput)
}

type IdentitySourceDetailsPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceDetails)(nil)).Elem()
}

func (o IdentitySourceDetailsPtrOutput) ToIdentitySourceDetailsPtrOutput() IdentitySourceDetailsPtrOutput {
	return o
}

func (o IdentitySourceDetailsPtrOutput) ToIdentitySourceDetailsPtrOutputWithContext(ctx context.Context) IdentitySourceDetailsPtrOutput {
	return o
}

func (o IdentitySourceDetailsPtrOutput) Elem() IdentitySourceDetailsOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) IdentitySourceDetails {
		if v != nil {
			return *v
		}
		var ret IdentitySourceDetails
		return ret
	}).(IdentitySourceDetailsOutput)
}

func (o IdentitySourceDetailsPtrOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) []string {
		if v == nil {
			return nil
		}
		return v.ClientIds
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceDetailsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

func (o IdentitySourceDetailsPtrOutput) OpenIdIssuer() IdentitySourceOpenIdIssuerPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *IdentitySourceOpenIdIssuer {
		if v == nil {
			return nil
		}
		return v.OpenIdIssuer
	}).(IdentitySourceOpenIdIssuerPtrOutput)
}

func (o IdentitySourceDetailsPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

type PolicyDefinition0Properties struct {
	Static PolicyStaticPolicyDefinition `pulumi:"static"`
}

// PolicyDefinition0PropertiesInput is an input type that accepts PolicyDefinition0PropertiesArgs and PolicyDefinition0PropertiesOutput values.
// You can construct a concrete instance of `PolicyDefinition0PropertiesInput` via:
//
//	PolicyDefinition0PropertiesArgs{...}
type PolicyDefinition0PropertiesInput interface {
	pulumi.Input

	ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput
	ToPolicyDefinition0PropertiesOutputWithContext(context.Context) PolicyDefinition0PropertiesOutput
}

type PolicyDefinition0PropertiesArgs struct {
	Static PolicyStaticPolicyDefinitionInput `pulumi:"static"`
}

func (PolicyDefinition0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition0Properties)(nil)).Elem()
}

func (i PolicyDefinition0PropertiesArgs) ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput {
	return i.ToPolicyDefinition0PropertiesOutputWithContext(context.Background())
}

func (i PolicyDefinition0PropertiesArgs) ToPolicyDefinition0PropertiesOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinition0PropertiesOutput)
}

type PolicyDefinition0PropertiesOutput struct{ *pulumi.OutputState }

func (PolicyDefinition0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition0Properties)(nil)).Elem()
}

func (o PolicyDefinition0PropertiesOutput) ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput {
	return o
}

func (o PolicyDefinition0PropertiesOutput) ToPolicyDefinition0PropertiesOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesOutput {
	return o
}

func (o PolicyDefinition0PropertiesOutput) Static() PolicyStaticPolicyDefinitionOutput {
	return o.ApplyT(func(v PolicyDefinition0Properties) PolicyStaticPolicyDefinition { return v.Static }).(PolicyStaticPolicyDefinitionOutput)
}

type PolicyDefinition0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinition0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinition0Properties)(nil)).Elem()
}

func (o PolicyDefinition0PropertiesPtrOutput) ToPolicyDefinition0PropertiesPtrOutput() PolicyDefinition0PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition0PropertiesPtrOutput) ToPolicyDefinition0PropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition0PropertiesPtrOutput) Elem() PolicyDefinition0PropertiesOutput {
	return o.ApplyT(func(v *PolicyDefinition0Properties) PolicyDefinition0Properties {
		if v != nil {
			return *v
		}
		var ret PolicyDefinition0Properties
		return ret
	}).(PolicyDefinition0PropertiesOutput)
}

func (o PolicyDefinition0PropertiesPtrOutput) Static() PolicyStaticPolicyDefinitionPtrOutput {
	return o.ApplyT(func(v *PolicyDefinition0Properties) *PolicyStaticPolicyDefinition {
		if v == nil {
			return nil
		}
		return &v.Static
	}).(PolicyStaticPolicyDefinitionPtrOutput)
}

type PolicyDefinition1Properties struct {
	TemplateLinked PolicyTemplateLinkedPolicyDefinition `pulumi:"templateLinked"`
}

// PolicyDefinition1PropertiesInput is an input type that accepts PolicyDefinition1PropertiesArgs and PolicyDefinition1PropertiesOutput values.
// You can construct a concrete instance of `PolicyDefinition1PropertiesInput` via:
//
//	PolicyDefinition1PropertiesArgs{...}
type PolicyDefinition1PropertiesInput interface {
	pulumi.Input

	ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput
	ToPolicyDefinition1PropertiesOutputWithContext(context.Context) PolicyDefinition1PropertiesOutput
}

type PolicyDefinition1PropertiesArgs struct {
	TemplateLinked PolicyTemplateLinkedPolicyDefinitionInput `pulumi:"templateLinked"`
}

func (PolicyDefinition1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition1Properties)(nil)).Elem()
}

func (i PolicyDefinition1PropertiesArgs) ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput {
	return i.ToPolicyDefinition1PropertiesOutputWithContext(context.Background())
}

func (i PolicyDefinition1PropertiesArgs) ToPolicyDefinition1PropertiesOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinition1PropertiesOutput)
}

type PolicyDefinition1PropertiesOutput struct{ *pulumi.OutputState }

func (PolicyDefinition1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition1Properties)(nil)).Elem()
}

func (o PolicyDefinition1PropertiesOutput) ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput {
	return o
}

func (o PolicyDefinition1PropertiesOutput) ToPolicyDefinition1PropertiesOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesOutput {
	return o
}

func (o PolicyDefinition1PropertiesOutput) TemplateLinked() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o.ApplyT(func(v PolicyDefinition1Properties) PolicyTemplateLinkedPolicyDefinition { return v.TemplateLinked }).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

type PolicyDefinition1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinition1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinition1Properties)(nil)).Elem()
}

func (o PolicyDefinition1PropertiesPtrOutput) ToPolicyDefinition1PropertiesPtrOutput() PolicyDefinition1PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition1PropertiesPtrOutput) ToPolicyDefinition1PropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition1PropertiesPtrOutput) Elem() PolicyDefinition1PropertiesOutput {
	return o.ApplyT(func(v *PolicyDefinition1Properties) PolicyDefinition1Properties {
		if v != nil {
			return *v
		}
		var ret PolicyDefinition1Properties
		return ret
	}).(PolicyDefinition1PropertiesOutput)
}

func (o PolicyDefinition1PropertiesPtrOutput) TemplateLinked() PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o.ApplyT(func(v *PolicyDefinition1Properties) *PolicyTemplateLinkedPolicyDefinition {
		if v == nil {
			return nil
		}
		return &v.TemplateLinked
	}).(PolicyTemplateLinkedPolicyDefinitionPtrOutput)
}

type PolicyEntityIdentifier struct {
	EntityId   string `pulumi:"entityId"`
	EntityType string `pulumi:"entityType"`
}

// PolicyEntityIdentifierInput is an input type that accepts PolicyEntityIdentifierArgs and PolicyEntityIdentifierOutput values.
// You can construct a concrete instance of `PolicyEntityIdentifierInput` via:
//
//	PolicyEntityIdentifierArgs{...}
type PolicyEntityIdentifierInput interface {
	pulumi.Input

	ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput
	ToPolicyEntityIdentifierOutputWithContext(context.Context) PolicyEntityIdentifierOutput
}

type PolicyEntityIdentifierArgs struct {
	EntityId   pulumi.StringInput `pulumi:"entityId"`
	EntityType pulumi.StringInput `pulumi:"entityType"`
}

func (PolicyEntityIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyEntityIdentifier)(nil)).Elem()
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput {
	return i.ToPolicyEntityIdentifierOutputWithContext(context.Background())
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierOutputWithContext(ctx context.Context) PolicyEntityIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierOutput)
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return i.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierOutput).ToPolicyEntityIdentifierPtrOutputWithContext(ctx)
}

// PolicyEntityIdentifierPtrInput is an input type that accepts PolicyEntityIdentifierArgs, PolicyEntityIdentifierPtr and PolicyEntityIdentifierPtrOutput values.
// You can construct a concrete instance of `PolicyEntityIdentifierPtrInput` via:
//
//	        PolicyEntityIdentifierArgs{...}
//
//	or:
//
//	        nil
type PolicyEntityIdentifierPtrInput interface {
	pulumi.Input

	ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput
	ToPolicyEntityIdentifierPtrOutputWithContext(context.Context) PolicyEntityIdentifierPtrOutput
}

type policyEntityIdentifierPtrType PolicyEntityIdentifierArgs

func PolicyEntityIdentifierPtr(v *PolicyEntityIdentifierArgs) PolicyEntityIdentifierPtrInput {
	return (*policyEntityIdentifierPtrType)(v)
}

func (*policyEntityIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyEntityIdentifier)(nil)).Elem()
}

func (i *policyEntityIdentifierPtrType) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return i.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (i *policyEntityIdentifierPtrType) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierPtrOutput)
}

type PolicyEntityIdentifierOutput struct{ *pulumi.OutputState }

func (PolicyEntityIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyEntityIdentifier)(nil)).Elem()
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput {
	return o
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierOutputWithContext(ctx context.Context) PolicyEntityIdentifierOutput {
	return o
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return o.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyEntityIdentifier) *PolicyEntityIdentifier {
		return &v
	}).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyEntityIdentifierOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyEntityIdentifier) string { return v.EntityId }).(pulumi.StringOutput)
}

func (o PolicyEntityIdentifierOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyEntityIdentifier) string { return v.EntityType }).(pulumi.StringOutput)
}

type PolicyEntityIdentifierPtrOutput struct{ *pulumi.OutputState }

func (PolicyEntityIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyEntityIdentifier)(nil)).Elem()
}

func (o PolicyEntityIdentifierPtrOutput) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return o
}

func (o PolicyEntityIdentifierPtrOutput) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return o
}

func (o PolicyEntityIdentifierPtrOutput) Elem() PolicyEntityIdentifierOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) PolicyEntityIdentifier {
		if v != nil {
			return *v
		}
		var ret PolicyEntityIdentifier
		return ret
	}).(PolicyEntityIdentifierOutput)
}

func (o PolicyEntityIdentifierPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

func (o PolicyEntityIdentifierPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

type PolicyStaticPolicyDefinition struct {
	Description *string `pulumi:"description"`
	Statement   string  `pulumi:"statement"`
}

// PolicyStaticPolicyDefinitionInput is an input type that accepts PolicyStaticPolicyDefinitionArgs and PolicyStaticPolicyDefinitionOutput values.
// You can construct a concrete instance of `PolicyStaticPolicyDefinitionInput` via:
//
//	PolicyStaticPolicyDefinitionArgs{...}
type PolicyStaticPolicyDefinitionInput interface {
	pulumi.Input

	ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput
	ToPolicyStaticPolicyDefinitionOutputWithContext(context.Context) PolicyStaticPolicyDefinitionOutput
}

type PolicyStaticPolicyDefinitionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Statement   pulumi.StringInput    `pulumi:"statement"`
}

func (PolicyStaticPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (i PolicyStaticPolicyDefinitionArgs) ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput {
	return i.ToPolicyStaticPolicyDefinitionOutputWithContext(context.Background())
}

func (i PolicyStaticPolicyDefinitionArgs) ToPolicyStaticPolicyDefinitionOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticPolicyDefinitionOutput)
}

type PolicyStaticPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyStaticPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (o PolicyStaticPolicyDefinitionOutput) ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionOutput) ToPolicyStaticPolicyDefinitionOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStaticPolicyDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyStaticPolicyDefinitionOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyStaticPolicyDefinition) string { return v.Statement }).(pulumi.StringOutput)
}

type PolicyStaticPolicyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyStaticPolicyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (o PolicyStaticPolicyDefinitionPtrOutput) ToPolicyStaticPolicyDefinitionPtrOutput() PolicyStaticPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionPtrOutput) ToPolicyStaticPolicyDefinitionPtrOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Elem() PolicyStaticPolicyDefinitionOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) PolicyStaticPolicyDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyStaticPolicyDefinition
		return ret
	}).(PolicyStaticPolicyDefinitionOutput)
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Statement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Statement
	}).(pulumi.StringPtrOutput)
}

type PolicyStoreSchemaDefinition struct {
	// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the *Amazon Verified Permissions User Guide* .
	CedarJson *string `pulumi:"cedarJson"`
}

// PolicyStoreSchemaDefinitionInput is an input type that accepts PolicyStoreSchemaDefinitionArgs and PolicyStoreSchemaDefinitionOutput values.
// You can construct a concrete instance of `PolicyStoreSchemaDefinitionInput` via:
//
//	PolicyStoreSchemaDefinitionArgs{...}
type PolicyStoreSchemaDefinitionInput interface {
	pulumi.Input

	ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput
	ToPolicyStoreSchemaDefinitionOutputWithContext(context.Context) PolicyStoreSchemaDefinitionOutput
}

type PolicyStoreSchemaDefinitionArgs struct {
	// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the *Amazon Verified Permissions User Guide* .
	CedarJson pulumi.StringPtrInput `pulumi:"cedarJson"`
}

func (PolicyStoreSchemaDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput {
	return i.ToPolicyStoreSchemaDefinitionOutputWithContext(context.Background())
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionOutput)
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return i.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionOutput).ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx)
}

// PolicyStoreSchemaDefinitionPtrInput is an input type that accepts PolicyStoreSchemaDefinitionArgs, PolicyStoreSchemaDefinitionPtr and PolicyStoreSchemaDefinitionPtrOutput values.
// You can construct a concrete instance of `PolicyStoreSchemaDefinitionPtrInput` via:
//
//	        PolicyStoreSchemaDefinitionArgs{...}
//
//	or:
//
//	        nil
type PolicyStoreSchemaDefinitionPtrInput interface {
	pulumi.Input

	ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput
	ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Context) PolicyStoreSchemaDefinitionPtrOutput
}

type policyStoreSchemaDefinitionPtrType PolicyStoreSchemaDefinitionArgs

func PolicyStoreSchemaDefinitionPtr(v *PolicyStoreSchemaDefinitionArgs) PolicyStoreSchemaDefinitionPtrInput {
	return (*policyStoreSchemaDefinitionPtrType)(v)
}

func (*policyStoreSchemaDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (i *policyStoreSchemaDefinitionPtrType) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return i.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i *policyStoreSchemaDefinitionPtrType) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionPtrOutput)
}

type PolicyStoreSchemaDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyStoreSchemaDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return o.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyStoreSchemaDefinition) *PolicyStoreSchemaDefinition {
		return &v
	}).(PolicyStoreSchemaDefinitionPtrOutput)
}

// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the *Amazon Verified Permissions User Guide* .
func (o PolicyStoreSchemaDefinitionOutput) CedarJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStoreSchemaDefinition) *string { return v.CedarJson }).(pulumi.StringPtrOutput)
}

type PolicyStoreSchemaDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyStoreSchemaDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (o PolicyStoreSchemaDefinitionPtrOutput) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionPtrOutput) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionPtrOutput) Elem() PolicyStoreSchemaDefinitionOutput {
	return o.ApplyT(func(v *PolicyStoreSchemaDefinition) PolicyStoreSchemaDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyStoreSchemaDefinition
		return ret
	}).(PolicyStoreSchemaDefinitionOutput)
}

// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the *Amazon Verified Permissions User Guide* .
func (o PolicyStoreSchemaDefinitionPtrOutput) CedarJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStoreSchemaDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CedarJson
	}).(pulumi.StringPtrOutput)
}

type PolicyStoreValidationSettings struct {
	// The validation mode currently configured for this policy store. The valid values are:
	//
	// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
	// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
	//
	// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
	// >
	// > To submit a static policy or policy template without a schema, you must turn off validation.
	Mode PolicyStoreValidationMode `pulumi:"mode"`
}

// PolicyStoreValidationSettingsInput is an input type that accepts PolicyStoreValidationSettingsArgs and PolicyStoreValidationSettingsOutput values.
// You can construct a concrete instance of `PolicyStoreValidationSettingsInput` via:
//
//	PolicyStoreValidationSettingsArgs{...}
type PolicyStoreValidationSettingsInput interface {
	pulumi.Input

	ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput
	ToPolicyStoreValidationSettingsOutputWithContext(context.Context) PolicyStoreValidationSettingsOutput
}

type PolicyStoreValidationSettingsArgs struct {
	// The validation mode currently configured for this policy store. The valid values are:
	//
	// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
	// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
	//
	// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
	// >
	// > To submit a static policy or policy template without a schema, you must turn off validation.
	Mode PolicyStoreValidationModeInput `pulumi:"mode"`
}

func (PolicyStoreValidationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreValidationSettings)(nil)).Elem()
}

func (i PolicyStoreValidationSettingsArgs) ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput {
	return i.ToPolicyStoreValidationSettingsOutputWithContext(context.Background())
}

func (i PolicyStoreValidationSettingsArgs) ToPolicyStoreValidationSettingsOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreValidationSettingsOutput)
}

type PolicyStoreValidationSettingsOutput struct{ *pulumi.OutputState }

func (PolicyStoreValidationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreValidationSettings)(nil)).Elem()
}

func (o PolicyStoreValidationSettingsOutput) ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput {
	return o
}

func (o PolicyStoreValidationSettingsOutput) ToPolicyStoreValidationSettingsOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsOutput {
	return o
}

// The validation mode currently configured for this policy store. The valid values are:
//
// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
//
// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
// >
// > To submit a static policy or policy template without a schema, you must turn off validation.
func (o PolicyStoreValidationSettingsOutput) Mode() PolicyStoreValidationModeOutput {
	return o.ApplyT(func(v PolicyStoreValidationSettings) PolicyStoreValidationMode { return v.Mode }).(PolicyStoreValidationModeOutput)
}

type PolicyStoreValidationSettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicyStoreValidationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreValidationSettings)(nil)).Elem()
}

func (o PolicyStoreValidationSettingsPtrOutput) ToPolicyStoreValidationSettingsPtrOutput() PolicyStoreValidationSettingsPtrOutput {
	return o
}

func (o PolicyStoreValidationSettingsPtrOutput) ToPolicyStoreValidationSettingsPtrOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsPtrOutput {
	return o
}

func (o PolicyStoreValidationSettingsPtrOutput) Elem() PolicyStoreValidationSettingsOutput {
	return o.ApplyT(func(v *PolicyStoreValidationSettings) PolicyStoreValidationSettings {
		if v != nil {
			return *v
		}
		var ret PolicyStoreValidationSettings
		return ret
	}).(PolicyStoreValidationSettingsOutput)
}

// The validation mode currently configured for this policy store. The valid values are:
//
// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
//
// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
// >
// > To submit a static policy or policy template without a schema, you must turn off validation.
func (o PolicyStoreValidationSettingsPtrOutput) Mode() PolicyStoreValidationModePtrOutput {
	return o.ApplyT(func(v *PolicyStoreValidationSettings) *PolicyStoreValidationMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(PolicyStoreValidationModePtrOutput)
}

type PolicyTemplateLinkedPolicyDefinition struct {
	PolicyTemplateId string                  `pulumi:"policyTemplateId"`
	Principal        *PolicyEntityIdentifier `pulumi:"principal"`
	Resource         *PolicyEntityIdentifier `pulumi:"resource"`
}

// PolicyTemplateLinkedPolicyDefinitionInput is an input type that accepts PolicyTemplateLinkedPolicyDefinitionArgs and PolicyTemplateLinkedPolicyDefinitionOutput values.
// You can construct a concrete instance of `PolicyTemplateLinkedPolicyDefinitionInput` via:
//
//	PolicyTemplateLinkedPolicyDefinitionArgs{...}
type PolicyTemplateLinkedPolicyDefinitionInput interface {
	pulumi.Input

	ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput
	ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(context.Context) PolicyTemplateLinkedPolicyDefinitionOutput
}

type PolicyTemplateLinkedPolicyDefinitionArgs struct {
	PolicyTemplateId pulumi.StringInput             `pulumi:"policyTemplateId"`
	Principal        PolicyEntityIdentifierPtrInput `pulumi:"principal"`
	Resource         PolicyEntityIdentifierPtrInput `pulumi:"resource"`
}

func (PolicyTemplateLinkedPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (i PolicyTemplateLinkedPolicyDefinitionArgs) ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput {
	return i.ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(context.Background())
}

func (i PolicyTemplateLinkedPolicyDefinitionArgs) ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

type PolicyTemplateLinkedPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyTemplateLinkedPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) PolicyTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) string { return v.PolicyTemplateId }).(pulumi.StringOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) Principal() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier { return v.Principal }).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) Resource() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier { return v.Resource }).(PolicyEntityIdentifierPtrOutput)
}

type PolicyTemplateLinkedPolicyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyTemplateLinkedPolicyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) ToPolicyTemplateLinkedPolicyDefinitionPtrOutput() PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) ToPolicyTemplateLinkedPolicyDefinitionPtrOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Elem() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) PolicyTemplateLinkedPolicyDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyTemplateLinkedPolicyDefinition
		return ret
	}).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) PolicyTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Principal() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Resource() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(PolicyEntityIdentifierPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoGroupConfigurationInput)(nil)).Elem(), IdentitySourceCognitoGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoGroupConfigurationPtrInput)(nil)).Elem(), IdentitySourceCognitoGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoUserPoolConfigurationInput)(nil)).Elem(), IdentitySourceCognitoUserPoolConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceConfigurationPropertiesInput)(nil)).Elem(), IdentitySourceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDefinition0PropertiesInput)(nil)).Elem(), PolicyDefinition0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDefinition1PropertiesInput)(nil)).Elem(), PolicyDefinition1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyEntityIdentifierInput)(nil)).Elem(), PolicyEntityIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyEntityIdentifierPtrInput)(nil)).Elem(), PolicyEntityIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStaticPolicyDefinitionInput)(nil)).Elem(), PolicyStaticPolicyDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreSchemaDefinitionInput)(nil)).Elem(), PolicyStoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreSchemaDefinitionPtrInput)(nil)).Elem(), PolicyStoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreValidationSettingsInput)(nil)).Elem(), PolicyStoreValidationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinitionInput)(nil)).Elem(), PolicyTemplateLinkedPolicyDefinitionArgs{})
	pulumi.RegisterOutputType(IdentitySourceCognitoGroupConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoUserPoolConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoUserPoolConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceDetailsOutput{})
	pulumi.RegisterOutputType(IdentitySourceDetailsPtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinition0PropertiesOutput{})
	pulumi.RegisterOutputType(PolicyDefinition0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinition1PropertiesOutput{})
	pulumi.RegisterOutputType(PolicyDefinition1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyEntityIdentifierOutput{})
	pulumi.RegisterOutputType(PolicyEntityIdentifierPtrOutput{})
	pulumi.RegisterOutputType(PolicyStaticPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyStaticPolicyDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyStoreSchemaDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyStoreSchemaDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyStoreValidationSettingsOutput{})
	pulumi.RegisterOutputType(PolicyStoreValidationSettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicyTemplateLinkedPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyTemplateLinkedPolicyDefinitionPtrOutput{})
}
