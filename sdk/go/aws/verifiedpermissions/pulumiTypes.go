// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package verifiedpermissions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IdentitySourceCognitoGroupConfiguration struct {
	GroupEntityType string `pulumi:"groupEntityType"`
}

// IdentitySourceCognitoGroupConfigurationInput is an input type that accepts IdentitySourceCognitoGroupConfigurationArgs and IdentitySourceCognitoGroupConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoGroupConfigurationInput` via:
//
//	IdentitySourceCognitoGroupConfigurationArgs{...}
type IdentitySourceCognitoGroupConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput
	ToIdentitySourceCognitoGroupConfigurationOutputWithContext(context.Context) IdentitySourceCognitoGroupConfigurationOutput
}

type IdentitySourceCognitoGroupConfigurationArgs struct {
	GroupEntityType pulumi.StringInput `pulumi:"groupEntityType"`
}

func (IdentitySourceCognitoGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationOutput)
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoGroupConfigurationArgs) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationOutput).ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx)
}

// IdentitySourceCognitoGroupConfigurationPtrInput is an input type that accepts IdentitySourceCognitoGroupConfigurationArgs, IdentitySourceCognitoGroupConfigurationPtr and IdentitySourceCognitoGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoGroupConfigurationPtrInput` via:
//
//	        IdentitySourceCognitoGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type IdentitySourceCognitoGroupConfigurationPtrInput interface {
	pulumi.Input

	ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput
	ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput
}

type identitySourceCognitoGroupConfigurationPtrType IdentitySourceCognitoGroupConfigurationArgs

func IdentitySourceCognitoGroupConfigurationPtr(v *IdentitySourceCognitoGroupConfigurationArgs) IdentitySourceCognitoGroupConfigurationPtrInput {
	return (*identitySourceCognitoGroupConfigurationPtrType)(v)
}

func (*identitySourceCognitoGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (i *identitySourceCognitoGroupConfigurationPtrType) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return i.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *identitySourceCognitoGroupConfigurationPtrType) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

type IdentitySourceCognitoGroupConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationOutput() IdentitySourceCognitoGroupConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o IdentitySourceCognitoGroupConfigurationOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentitySourceCognitoGroupConfiguration) *IdentitySourceCognitoGroupConfiguration {
		return &v
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoGroupConfigurationOutput) GroupEntityType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceCognitoGroupConfiguration) string { return v.GroupEntityType }).(pulumi.StringOutput)
}

type IdentitySourceCognitoGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutput() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) ToIdentitySourceCognitoGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) Elem() IdentitySourceCognitoGroupConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoGroupConfiguration) IdentitySourceCognitoGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceCognitoGroupConfiguration
		return ret
	}).(IdentitySourceCognitoGroupConfigurationOutput)
}

func (o IdentitySourceCognitoGroupConfigurationPtrOutput) GroupEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.GroupEntityType
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceCognitoUserPoolConfiguration struct {
	ClientIds          []string                                 `pulumi:"clientIds"`
	GroupConfiguration *IdentitySourceCognitoGroupConfiguration `pulumi:"groupConfiguration"`
	UserPoolArn        string                                   `pulumi:"userPoolArn"`
}

// IdentitySourceCognitoUserPoolConfigurationInput is an input type that accepts IdentitySourceCognitoUserPoolConfigurationArgs and IdentitySourceCognitoUserPoolConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceCognitoUserPoolConfigurationInput` via:
//
//	IdentitySourceCognitoUserPoolConfigurationArgs{...}
type IdentitySourceCognitoUserPoolConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput
	ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(context.Context) IdentitySourceCognitoUserPoolConfigurationOutput
}

type IdentitySourceCognitoUserPoolConfigurationArgs struct {
	ClientIds          pulumi.StringArrayInput                         `pulumi:"clientIds"`
	GroupConfiguration IdentitySourceCognitoGroupConfigurationPtrInput `pulumi:"groupConfiguration"`
	UserPoolArn        pulumi.StringInput                              `pulumi:"userPoolArn"`
}

func (IdentitySourceCognitoUserPoolConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (i IdentitySourceCognitoUserPoolConfigurationArgs) ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput {
	return i.ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceCognitoUserPoolConfigurationArgs) ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

type IdentitySourceCognitoUserPoolConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoUserPoolConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ToIdentitySourceCognitoUserPoolConfigurationOutput() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ToIdentitySourceCognitoUserPoolConfigurationOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) GroupConfiguration() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) *IdentitySourceCognitoGroupConfiguration {
		return v.GroupConfiguration
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceCognitoUserPoolConfiguration) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

type IdentitySourceCognitoUserPoolConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceCognitoUserPoolConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceCognitoUserPoolConfiguration)(nil)).Elem()
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ToIdentitySourceCognitoUserPoolConfigurationPtrOutput() IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ToIdentitySourceCognitoUserPoolConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) Elem() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) IdentitySourceCognitoUserPoolConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceCognitoUserPoolConfiguration
		return ret
	}).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ClientIds
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) GroupConfiguration() IdentitySourceCognitoGroupConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) *IdentitySourceCognitoGroupConfiguration {
		if v == nil {
			return nil
		}
		return v.GroupConfiguration
	}).(IdentitySourceCognitoGroupConfigurationPtrOutput)
}

func (o IdentitySourceCognitoUserPoolConfigurationPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceCognitoUserPoolConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceConfiguration0Properties struct {
	CognitoUserPoolConfiguration IdentitySourceCognitoUserPoolConfiguration `pulumi:"cognitoUserPoolConfiguration"`
}

// IdentitySourceConfiguration0PropertiesInput is an input type that accepts IdentitySourceConfiguration0PropertiesArgs and IdentitySourceConfiguration0PropertiesOutput values.
// You can construct a concrete instance of `IdentitySourceConfiguration0PropertiesInput` via:
//
//	IdentitySourceConfiguration0PropertiesArgs{...}
type IdentitySourceConfiguration0PropertiesInput interface {
	pulumi.Input

	ToIdentitySourceConfiguration0PropertiesOutput() IdentitySourceConfiguration0PropertiesOutput
	ToIdentitySourceConfiguration0PropertiesOutputWithContext(context.Context) IdentitySourceConfiguration0PropertiesOutput
}

type IdentitySourceConfiguration0PropertiesArgs struct {
	CognitoUserPoolConfiguration IdentitySourceCognitoUserPoolConfigurationInput `pulumi:"cognitoUserPoolConfiguration"`
}

func (IdentitySourceConfiguration0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfiguration0Properties)(nil)).Elem()
}

func (i IdentitySourceConfiguration0PropertiesArgs) ToIdentitySourceConfiguration0PropertiesOutput() IdentitySourceConfiguration0PropertiesOutput {
	return i.ToIdentitySourceConfiguration0PropertiesOutputWithContext(context.Background())
}

func (i IdentitySourceConfiguration0PropertiesArgs) ToIdentitySourceConfiguration0PropertiesOutputWithContext(ctx context.Context) IdentitySourceConfiguration0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceConfiguration0PropertiesOutput)
}

type IdentitySourceConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfiguration0Properties)(nil)).Elem()
}

func (o IdentitySourceConfiguration0PropertiesOutput) ToIdentitySourceConfiguration0PropertiesOutput() IdentitySourceConfiguration0PropertiesOutput {
	return o
}

func (o IdentitySourceConfiguration0PropertiesOutput) ToIdentitySourceConfiguration0PropertiesOutputWithContext(ctx context.Context) IdentitySourceConfiguration0PropertiesOutput {
	return o
}

func (o IdentitySourceConfiguration0PropertiesOutput) CognitoUserPoolConfiguration() IdentitySourceCognitoUserPoolConfigurationOutput {
	return o.ApplyT(func(v IdentitySourceConfiguration0Properties) IdentitySourceCognitoUserPoolConfiguration {
		return v.CognitoUserPoolConfiguration
	}).(IdentitySourceCognitoUserPoolConfigurationOutput)
}

type IdentitySourceConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceConfiguration0Properties)(nil)).Elem()
}

func (o IdentitySourceConfiguration0PropertiesPtrOutput) ToIdentitySourceConfiguration0PropertiesPtrOutput() IdentitySourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfiguration0PropertiesPtrOutput) ToIdentitySourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) IdentitySourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfiguration0PropertiesPtrOutput) Elem() IdentitySourceConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *IdentitySourceConfiguration0Properties) IdentitySourceConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret IdentitySourceConfiguration0Properties
		return ret
	}).(IdentitySourceConfiguration0PropertiesOutput)
}

func (o IdentitySourceConfiguration0PropertiesPtrOutput) CognitoUserPoolConfiguration() IdentitySourceCognitoUserPoolConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceConfiguration0Properties) *IdentitySourceCognitoUserPoolConfiguration {
		if v == nil {
			return nil
		}
		return &v.CognitoUserPoolConfiguration
	}).(IdentitySourceCognitoUserPoolConfigurationPtrOutput)
}

type IdentitySourceConfiguration1Properties struct {
	OpenIdConnectConfiguration IdentitySourceOpenIdConnectConfiguration `pulumi:"openIdConnectConfiguration"`
}

// IdentitySourceConfiguration1PropertiesInput is an input type that accepts IdentitySourceConfiguration1PropertiesArgs and IdentitySourceConfiguration1PropertiesOutput values.
// You can construct a concrete instance of `IdentitySourceConfiguration1PropertiesInput` via:
//
//	IdentitySourceConfiguration1PropertiesArgs{...}
type IdentitySourceConfiguration1PropertiesInput interface {
	pulumi.Input

	ToIdentitySourceConfiguration1PropertiesOutput() IdentitySourceConfiguration1PropertiesOutput
	ToIdentitySourceConfiguration1PropertiesOutputWithContext(context.Context) IdentitySourceConfiguration1PropertiesOutput
}

type IdentitySourceConfiguration1PropertiesArgs struct {
	OpenIdConnectConfiguration IdentitySourceOpenIdConnectConfigurationInput `pulumi:"openIdConnectConfiguration"`
}

func (IdentitySourceConfiguration1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfiguration1Properties)(nil)).Elem()
}

func (i IdentitySourceConfiguration1PropertiesArgs) ToIdentitySourceConfiguration1PropertiesOutput() IdentitySourceConfiguration1PropertiesOutput {
	return i.ToIdentitySourceConfiguration1PropertiesOutputWithContext(context.Background())
}

func (i IdentitySourceConfiguration1PropertiesArgs) ToIdentitySourceConfiguration1PropertiesOutputWithContext(ctx context.Context) IdentitySourceConfiguration1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceConfiguration1PropertiesOutput)
}

type IdentitySourceConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceConfiguration1Properties)(nil)).Elem()
}

func (o IdentitySourceConfiguration1PropertiesOutput) ToIdentitySourceConfiguration1PropertiesOutput() IdentitySourceConfiguration1PropertiesOutput {
	return o
}

func (o IdentitySourceConfiguration1PropertiesOutput) ToIdentitySourceConfiguration1PropertiesOutputWithContext(ctx context.Context) IdentitySourceConfiguration1PropertiesOutput {
	return o
}

func (o IdentitySourceConfiguration1PropertiesOutput) OpenIdConnectConfiguration() IdentitySourceOpenIdConnectConfigurationOutput {
	return o.ApplyT(func(v IdentitySourceConfiguration1Properties) IdentitySourceOpenIdConnectConfiguration {
		return v.OpenIdConnectConfiguration
	}).(IdentitySourceOpenIdConnectConfigurationOutput)
}

type IdentitySourceConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceConfiguration1Properties)(nil)).Elem()
}

func (o IdentitySourceConfiguration1PropertiesPtrOutput) ToIdentitySourceConfiguration1PropertiesPtrOutput() IdentitySourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfiguration1PropertiesPtrOutput) ToIdentitySourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) IdentitySourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o IdentitySourceConfiguration1PropertiesPtrOutput) Elem() IdentitySourceConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *IdentitySourceConfiguration1Properties) IdentitySourceConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret IdentitySourceConfiguration1Properties
		return ret
	}).(IdentitySourceConfiguration1PropertiesOutput)
}

func (o IdentitySourceConfiguration1PropertiesPtrOutput) OpenIdConnectConfiguration() IdentitySourceOpenIdConnectConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceConfiguration1Properties) *IdentitySourceOpenIdConnectConfiguration {
		if v == nil {
			return nil
		}
		return &v.OpenIdConnectConfiguration
	}).(IdentitySourceOpenIdConnectConfigurationPtrOutput)
}

type IdentitySourceDetails struct {
	ClientIds    []string                    `pulumi:"clientIds"`
	DiscoveryUrl *string                     `pulumi:"discoveryUrl"`
	OpenIdIssuer *IdentitySourceOpenIdIssuer `pulumi:"openIdIssuer"`
	UserPoolArn  *string                     `pulumi:"userPoolArn"`
}

type IdentitySourceDetailsOutput struct{ *pulumi.OutputState }

func (IdentitySourceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceDetails)(nil)).Elem()
}

func (o IdentitySourceDetailsOutput) ToIdentitySourceDetailsOutput() IdentitySourceDetailsOutput {
	return o
}

func (o IdentitySourceDetailsOutput) ToIdentitySourceDetailsOutputWithContext(ctx context.Context) IdentitySourceDetailsOutput {
	return o
}

func (o IdentitySourceDetailsOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceDetails) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceDetailsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

func (o IdentitySourceDetailsOutput) OpenIdIssuer() IdentitySourceOpenIdIssuerPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *IdentitySourceOpenIdIssuer { return v.OpenIdIssuer }).(IdentitySourceOpenIdIssuerPtrOutput)
}

func (o IdentitySourceDetailsOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceDetails) *string { return v.UserPoolArn }).(pulumi.StringPtrOutput)
}

type IdentitySourceDetailsPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceDetails)(nil)).Elem()
}

func (o IdentitySourceDetailsPtrOutput) ToIdentitySourceDetailsPtrOutput() IdentitySourceDetailsPtrOutput {
	return o
}

func (o IdentitySourceDetailsPtrOutput) ToIdentitySourceDetailsPtrOutputWithContext(ctx context.Context) IdentitySourceDetailsPtrOutput {
	return o
}

func (o IdentitySourceDetailsPtrOutput) Elem() IdentitySourceDetailsOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) IdentitySourceDetails {
		if v != nil {
			return *v
		}
		var ret IdentitySourceDetails
		return ret
	}).(IdentitySourceDetailsOutput)
}

func (o IdentitySourceDetailsPtrOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) []string {
		if v == nil {
			return nil
		}
		return v.ClientIds
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceDetailsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

func (o IdentitySourceDetailsPtrOutput) OpenIdIssuer() IdentitySourceOpenIdIssuerPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *IdentitySourceOpenIdIssuer {
		if v == nil {
			return nil
		}
		return v.OpenIdIssuer
	}).(IdentitySourceOpenIdIssuerPtrOutput)
}

func (o IdentitySourceDetailsPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectAccessTokenConfiguration struct {
	Audiences        []string `pulumi:"audiences"`
	PrincipalIdClaim *string  `pulumi:"principalIdClaim"`
}

// IdentitySourceOpenIdConnectAccessTokenConfigurationInput is an input type that accepts IdentitySourceOpenIdConnectAccessTokenConfigurationArgs and IdentitySourceOpenIdConnectAccessTokenConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectAccessTokenConfigurationInput` via:
//
//	IdentitySourceOpenIdConnectAccessTokenConfigurationArgs{...}
type IdentitySourceOpenIdConnectAccessTokenConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutput() IdentitySourceOpenIdConnectAccessTokenConfigurationOutput
	ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutputWithContext(context.Context) IdentitySourceOpenIdConnectAccessTokenConfigurationOutput
}

type IdentitySourceOpenIdConnectAccessTokenConfigurationArgs struct {
	Audiences        pulumi.StringArrayInput `pulumi:"audiences"`
	PrincipalIdClaim pulumi.StringPtrInput   `pulumi:"principalIdClaim"`
}

func (IdentitySourceOpenIdConnectAccessTokenConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectAccessTokenConfiguration)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectAccessTokenConfigurationArgs) ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutput() IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return i.ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectAccessTokenConfigurationArgs) ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectAccessTokenConfigurationOutput)
}

type IdentitySourceOpenIdConnectAccessTokenConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectAccessTokenConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectAccessTokenConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationOutput) ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutput() IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationOutput) ToIdentitySourceOpenIdConnectAccessTokenConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectAccessTokenConfiguration) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationOutput) PrincipalIdClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectAccessTokenConfiguration) *string { return v.PrincipalIdClaim }).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectAccessTokenConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) ToIdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput() IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) ToIdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) Elem() IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectAccessTokenConfiguration) IdentitySourceOpenIdConnectAccessTokenConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectAccessTokenConfiguration
		return ret
	}).(IdentitySourceOpenIdConnectAccessTokenConfigurationOutput)
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectAccessTokenConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput) PrincipalIdClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectAccessTokenConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalIdClaim
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectConfiguration struct {
	EntityIdPrefix     *string                                        `pulumi:"entityIdPrefix"`
	GroupConfiguration *IdentitySourceOpenIdConnectGroupConfiguration `pulumi:"groupConfiguration"`
	Issuer             string                                         `pulumi:"issuer"`
	TokenSelection     interface{}                                    `pulumi:"tokenSelection"`
}

// IdentitySourceOpenIdConnectConfigurationInput is an input type that accepts IdentitySourceOpenIdConnectConfigurationArgs and IdentitySourceOpenIdConnectConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectConfigurationInput` via:
//
//	IdentitySourceOpenIdConnectConfigurationArgs{...}
type IdentitySourceOpenIdConnectConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectConfigurationOutput() IdentitySourceOpenIdConnectConfigurationOutput
	ToIdentitySourceOpenIdConnectConfigurationOutputWithContext(context.Context) IdentitySourceOpenIdConnectConfigurationOutput
}

type IdentitySourceOpenIdConnectConfigurationArgs struct {
	EntityIdPrefix     pulumi.StringPtrInput                                 `pulumi:"entityIdPrefix"`
	GroupConfiguration IdentitySourceOpenIdConnectGroupConfigurationPtrInput `pulumi:"groupConfiguration"`
	Issuer             pulumi.StringInput                                    `pulumi:"issuer"`
	TokenSelection     pulumi.Input                                          `pulumi:"tokenSelection"`
}

func (IdentitySourceOpenIdConnectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectConfiguration)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectConfigurationArgs) ToIdentitySourceOpenIdConnectConfigurationOutput() IdentitySourceOpenIdConnectConfigurationOutput {
	return i.ToIdentitySourceOpenIdConnectConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectConfigurationArgs) ToIdentitySourceOpenIdConnectConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectConfigurationOutput)
}

type IdentitySourceOpenIdConnectConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) ToIdentitySourceOpenIdConnectConfigurationOutput() IdentitySourceOpenIdConnectConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) ToIdentitySourceOpenIdConnectConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) EntityIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectConfiguration) *string { return v.EntityIdPrefix }).(pulumi.StringPtrOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) GroupConfiguration() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectConfiguration) *IdentitySourceOpenIdConnectGroupConfiguration {
		return v.GroupConfiguration
	}).(IdentitySourceOpenIdConnectGroupConfigurationPtrOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectConfiguration) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationOutput) TokenSelection() pulumi.AnyOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectConfiguration) interface{} { return v.TokenSelection }).(pulumi.AnyOutput)
}

type IdentitySourceOpenIdConnectConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) ToIdentitySourceOpenIdConnectConfigurationPtrOutput() IdentitySourceOpenIdConnectConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) ToIdentitySourceOpenIdConnectConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) Elem() IdentitySourceOpenIdConnectConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectConfiguration) IdentitySourceOpenIdConnectConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectConfiguration
		return ret
	}).(IdentitySourceOpenIdConnectConfigurationOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) EntityIdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EntityIdPrefix
	}).(pulumi.StringPtrOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) GroupConfiguration() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectConfiguration) *IdentitySourceOpenIdConnectGroupConfiguration {
		if v == nil {
			return nil
		}
		return v.GroupConfiguration
	}).(IdentitySourceOpenIdConnectGroupConfigurationPtrOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o IdentitySourceOpenIdConnectConfigurationPtrOutput) TokenSelection() pulumi.AnyOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.TokenSelection
	}).(pulumi.AnyOutput)
}

type IdentitySourceOpenIdConnectGroupConfiguration struct {
	GroupClaim      string `pulumi:"groupClaim"`
	GroupEntityType string `pulumi:"groupEntityType"`
}

// IdentitySourceOpenIdConnectGroupConfigurationInput is an input type that accepts IdentitySourceOpenIdConnectGroupConfigurationArgs and IdentitySourceOpenIdConnectGroupConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectGroupConfigurationInput` via:
//
//	IdentitySourceOpenIdConnectGroupConfigurationArgs{...}
type IdentitySourceOpenIdConnectGroupConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectGroupConfigurationOutput() IdentitySourceOpenIdConnectGroupConfigurationOutput
	ToIdentitySourceOpenIdConnectGroupConfigurationOutputWithContext(context.Context) IdentitySourceOpenIdConnectGroupConfigurationOutput
}

type IdentitySourceOpenIdConnectGroupConfigurationArgs struct {
	GroupClaim      pulumi.StringInput `pulumi:"groupClaim"`
	GroupEntityType pulumi.StringInput `pulumi:"groupEntityType"`
}

func (IdentitySourceOpenIdConnectGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectGroupConfiguration)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectGroupConfigurationArgs) ToIdentitySourceOpenIdConnectGroupConfigurationOutput() IdentitySourceOpenIdConnectGroupConfigurationOutput {
	return i.ToIdentitySourceOpenIdConnectGroupConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectGroupConfigurationArgs) ToIdentitySourceOpenIdConnectGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectGroupConfigurationOutput)
}

func (i IdentitySourceOpenIdConnectGroupConfigurationArgs) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutput() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return i.ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectGroupConfigurationArgs) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectGroupConfigurationOutput).ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(ctx)
}

// IdentitySourceOpenIdConnectGroupConfigurationPtrInput is an input type that accepts IdentitySourceOpenIdConnectGroupConfigurationArgs, IdentitySourceOpenIdConnectGroupConfigurationPtr and IdentitySourceOpenIdConnectGroupConfigurationPtrOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectGroupConfigurationPtrInput` via:
//
//	        IdentitySourceOpenIdConnectGroupConfigurationArgs{...}
//
//	or:
//
//	        nil
type IdentitySourceOpenIdConnectGroupConfigurationPtrInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutput() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput
	ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(context.Context) IdentitySourceOpenIdConnectGroupConfigurationPtrOutput
}

type identitySourceOpenIdConnectGroupConfigurationPtrType IdentitySourceOpenIdConnectGroupConfigurationArgs

func IdentitySourceOpenIdConnectGroupConfigurationPtr(v *IdentitySourceOpenIdConnectGroupConfigurationArgs) IdentitySourceOpenIdConnectGroupConfigurationPtrInput {
	return (*identitySourceOpenIdConnectGroupConfigurationPtrType)(v)
}

func (*identitySourceOpenIdConnectGroupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectGroupConfiguration)(nil)).Elem()
}

func (i *identitySourceOpenIdConnectGroupConfigurationPtrType) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutput() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return i.ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(context.Background())
}

func (i *identitySourceOpenIdConnectGroupConfigurationPtrType) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectGroupConfigurationPtrOutput)
}

type IdentitySourceOpenIdConnectGroupConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) ToIdentitySourceOpenIdConnectGroupConfigurationOutput() IdentitySourceOpenIdConnectGroupConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) ToIdentitySourceOpenIdConnectGroupConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutput() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o.ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(context.Background())
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentitySourceOpenIdConnectGroupConfiguration) *IdentitySourceOpenIdConnectGroupConfiguration {
		return &v
	}).(IdentitySourceOpenIdConnectGroupConfigurationPtrOutput)
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) GroupClaim() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectGroupConfiguration) string { return v.GroupClaim }).(pulumi.StringOutput)
}

func (o IdentitySourceOpenIdConnectGroupConfigurationOutput) GroupEntityType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectGroupConfiguration) string { return v.GroupEntityType }).(pulumi.StringOutput)
}

type IdentitySourceOpenIdConnectGroupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectGroupConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutput() IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) ToIdentitySourceOpenIdConnectGroupConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectGroupConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) Elem() IdentitySourceOpenIdConnectGroupConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectGroupConfiguration) IdentitySourceOpenIdConnectGroupConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectGroupConfiguration
		return ret
	}).(IdentitySourceOpenIdConnectGroupConfigurationOutput)
}

func (o IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) GroupClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.GroupClaim
	}).(pulumi.StringPtrOutput)
}

func (o IdentitySourceOpenIdConnectGroupConfigurationPtrOutput) GroupEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectGroupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.GroupEntityType
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectIdentityTokenConfiguration struct {
	ClientIds        []string `pulumi:"clientIds"`
	PrincipalIdClaim *string  `pulumi:"principalIdClaim"`
}

// IdentitySourceOpenIdConnectIdentityTokenConfigurationInput is an input type that accepts IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs and IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectIdentityTokenConfigurationInput` via:
//
//	IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs{...}
type IdentitySourceOpenIdConnectIdentityTokenConfigurationInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutput() IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput
	ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutputWithContext(context.Context) IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput
}

type IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs struct {
	ClientIds        pulumi.StringArrayInput `pulumi:"clientIds"`
	PrincipalIdClaim pulumi.StringPtrInput   `pulumi:"principalIdClaim"`
}

func (IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectIdentityTokenConfiguration)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutput() IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return i.ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput)
}

type IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectIdentityTokenConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutput() IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return o
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectIdentityTokenConfiguration) []string { return v.ClientIds }).(pulumi.StringArrayOutput)
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput) PrincipalIdClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectIdentityTokenConfiguration) *string { return v.PrincipalIdClaim }).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectIdentityTokenConfiguration)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput() IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) ToIdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) Elem() IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectIdentityTokenConfiguration) IdentitySourceOpenIdConnectIdentityTokenConfiguration {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectIdentityTokenConfiguration
		return ret
	}).(IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput)
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) ClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectIdentityTokenConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ClientIds
	}).(pulumi.StringArrayOutput)
}

func (o IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput) PrincipalIdClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectIdentityTokenConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalIdClaim
	}).(pulumi.StringPtrOutput)
}

type IdentitySourceOpenIdConnectTokenSelection0Properties struct {
	AccessTokenOnly IdentitySourceOpenIdConnectAccessTokenConfiguration `pulumi:"accessTokenOnly"`
}

// IdentitySourceOpenIdConnectTokenSelection0PropertiesInput is an input type that accepts IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs and IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectTokenSelection0PropertiesInput` via:
//
//	IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs{...}
type IdentitySourceOpenIdConnectTokenSelection0PropertiesInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput
	ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutputWithContext(context.Context) IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput
}

type IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs struct {
	AccessTokenOnly IdentitySourceOpenIdConnectAccessTokenConfigurationInput `pulumi:"accessTokenOnly"`
}

func (IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection0Properties)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput {
	return i.ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput)
}

type IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection0Properties)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput) AccessTokenOnly() IdentitySourceOpenIdConnectAccessTokenConfigurationOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectTokenSelection0Properties) IdentitySourceOpenIdConnectAccessTokenConfiguration {
		return v.AccessTokenOnly
	}).(IdentitySourceOpenIdConnectAccessTokenConfigurationOutput)
}

type IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectTokenSelection0Properties)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput() IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput) ToIdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput) Elem() IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectTokenSelection0Properties) IdentitySourceOpenIdConnectTokenSelection0Properties {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectTokenSelection0Properties
		return ret
	}).(IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput)
}

func (o IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput) AccessTokenOnly() IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectTokenSelection0Properties) *IdentitySourceOpenIdConnectAccessTokenConfiguration {
		if v == nil {
			return nil
		}
		return &v.AccessTokenOnly
	}).(IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput)
}

type IdentitySourceOpenIdConnectTokenSelection1Properties struct {
	IdentityTokenOnly IdentitySourceOpenIdConnectIdentityTokenConfiguration `pulumi:"identityTokenOnly"`
}

// IdentitySourceOpenIdConnectTokenSelection1PropertiesInput is an input type that accepts IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs and IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput values.
// You can construct a concrete instance of `IdentitySourceOpenIdConnectTokenSelection1PropertiesInput` via:
//
//	IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs{...}
type IdentitySourceOpenIdConnectTokenSelection1PropertiesInput interface {
	pulumi.Input

	ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput
	ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutputWithContext(context.Context) IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput
}

type IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs struct {
	IdentityTokenOnly IdentitySourceOpenIdConnectIdentityTokenConfigurationInput `pulumi:"identityTokenOnly"`
}

func (IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection1Properties)(nil)).Elem()
}

func (i IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput {
	return i.ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutputWithContext(context.Background())
}

func (i IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput)
}

type IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection1Properties)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutput() IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput) IdentityTokenOnly() IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput {
	return o.ApplyT(func(v IdentitySourceOpenIdConnectTokenSelection1Properties) IdentitySourceOpenIdConnectIdentityTokenConfiguration {
		return v.IdentityTokenOnly
	}).(IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput)
}

type IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentitySourceOpenIdConnectTokenSelection1Properties)(nil)).Elem()
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput() IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput) ToIdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutputWithContext(ctx context.Context) IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput {
	return o
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput) Elem() IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectTokenSelection1Properties) IdentitySourceOpenIdConnectTokenSelection1Properties {
		if v != nil {
			return *v
		}
		var ret IdentitySourceOpenIdConnectTokenSelection1Properties
		return ret
	}).(IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput)
}

func (o IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput) IdentityTokenOnly() IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput {
	return o.ApplyT(func(v *IdentitySourceOpenIdConnectTokenSelection1Properties) *IdentitySourceOpenIdConnectIdentityTokenConfiguration {
		if v == nil {
			return nil
		}
		return &v.IdentityTokenOnly
	}).(IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput)
}

type PolicyDefinition0Properties struct {
	Static PolicyStaticPolicyDefinition `pulumi:"static"`
}

// PolicyDefinition0PropertiesInput is an input type that accepts PolicyDefinition0PropertiesArgs and PolicyDefinition0PropertiesOutput values.
// You can construct a concrete instance of `PolicyDefinition0PropertiesInput` via:
//
//	PolicyDefinition0PropertiesArgs{...}
type PolicyDefinition0PropertiesInput interface {
	pulumi.Input

	ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput
	ToPolicyDefinition0PropertiesOutputWithContext(context.Context) PolicyDefinition0PropertiesOutput
}

type PolicyDefinition0PropertiesArgs struct {
	Static PolicyStaticPolicyDefinitionInput `pulumi:"static"`
}

func (PolicyDefinition0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition0Properties)(nil)).Elem()
}

func (i PolicyDefinition0PropertiesArgs) ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput {
	return i.ToPolicyDefinition0PropertiesOutputWithContext(context.Background())
}

func (i PolicyDefinition0PropertiesArgs) ToPolicyDefinition0PropertiesOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinition0PropertiesOutput)
}

type PolicyDefinition0PropertiesOutput struct{ *pulumi.OutputState }

func (PolicyDefinition0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition0Properties)(nil)).Elem()
}

func (o PolicyDefinition0PropertiesOutput) ToPolicyDefinition0PropertiesOutput() PolicyDefinition0PropertiesOutput {
	return o
}

func (o PolicyDefinition0PropertiesOutput) ToPolicyDefinition0PropertiesOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesOutput {
	return o
}

func (o PolicyDefinition0PropertiesOutput) Static() PolicyStaticPolicyDefinitionOutput {
	return o.ApplyT(func(v PolicyDefinition0Properties) PolicyStaticPolicyDefinition { return v.Static }).(PolicyStaticPolicyDefinitionOutput)
}

type PolicyDefinition0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinition0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinition0Properties)(nil)).Elem()
}

func (o PolicyDefinition0PropertiesPtrOutput) ToPolicyDefinition0PropertiesPtrOutput() PolicyDefinition0PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition0PropertiesPtrOutput) ToPolicyDefinition0PropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinition0PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition0PropertiesPtrOutput) Elem() PolicyDefinition0PropertiesOutput {
	return o.ApplyT(func(v *PolicyDefinition0Properties) PolicyDefinition0Properties {
		if v != nil {
			return *v
		}
		var ret PolicyDefinition0Properties
		return ret
	}).(PolicyDefinition0PropertiesOutput)
}

func (o PolicyDefinition0PropertiesPtrOutput) Static() PolicyStaticPolicyDefinitionPtrOutput {
	return o.ApplyT(func(v *PolicyDefinition0Properties) *PolicyStaticPolicyDefinition {
		if v == nil {
			return nil
		}
		return &v.Static
	}).(PolicyStaticPolicyDefinitionPtrOutput)
}

type PolicyDefinition1Properties struct {
	TemplateLinked PolicyTemplateLinkedPolicyDefinition `pulumi:"templateLinked"`
}

// PolicyDefinition1PropertiesInput is an input type that accepts PolicyDefinition1PropertiesArgs and PolicyDefinition1PropertiesOutput values.
// You can construct a concrete instance of `PolicyDefinition1PropertiesInput` via:
//
//	PolicyDefinition1PropertiesArgs{...}
type PolicyDefinition1PropertiesInput interface {
	pulumi.Input

	ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput
	ToPolicyDefinition1PropertiesOutputWithContext(context.Context) PolicyDefinition1PropertiesOutput
}

type PolicyDefinition1PropertiesArgs struct {
	TemplateLinked PolicyTemplateLinkedPolicyDefinitionInput `pulumi:"templateLinked"`
}

func (PolicyDefinition1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition1Properties)(nil)).Elem()
}

func (i PolicyDefinition1PropertiesArgs) ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput {
	return i.ToPolicyDefinition1PropertiesOutputWithContext(context.Background())
}

func (i PolicyDefinition1PropertiesArgs) ToPolicyDefinition1PropertiesOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinition1PropertiesOutput)
}

type PolicyDefinition1PropertiesOutput struct{ *pulumi.OutputState }

func (PolicyDefinition1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinition1Properties)(nil)).Elem()
}

func (o PolicyDefinition1PropertiesOutput) ToPolicyDefinition1PropertiesOutput() PolicyDefinition1PropertiesOutput {
	return o
}

func (o PolicyDefinition1PropertiesOutput) ToPolicyDefinition1PropertiesOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesOutput {
	return o
}

func (o PolicyDefinition1PropertiesOutput) TemplateLinked() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o.ApplyT(func(v PolicyDefinition1Properties) PolicyTemplateLinkedPolicyDefinition { return v.TemplateLinked }).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

type PolicyDefinition1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinition1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinition1Properties)(nil)).Elem()
}

func (o PolicyDefinition1PropertiesPtrOutput) ToPolicyDefinition1PropertiesPtrOutput() PolicyDefinition1PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition1PropertiesPtrOutput) ToPolicyDefinition1PropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinition1PropertiesPtrOutput {
	return o
}

func (o PolicyDefinition1PropertiesPtrOutput) Elem() PolicyDefinition1PropertiesOutput {
	return o.ApplyT(func(v *PolicyDefinition1Properties) PolicyDefinition1Properties {
		if v != nil {
			return *v
		}
		var ret PolicyDefinition1Properties
		return ret
	}).(PolicyDefinition1PropertiesOutput)
}

func (o PolicyDefinition1PropertiesPtrOutput) TemplateLinked() PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o.ApplyT(func(v *PolicyDefinition1Properties) *PolicyTemplateLinkedPolicyDefinition {
		if v == nil {
			return nil
		}
		return &v.TemplateLinked
	}).(PolicyTemplateLinkedPolicyDefinitionPtrOutput)
}

type PolicyEntityIdentifier struct {
	EntityId   string `pulumi:"entityId"`
	EntityType string `pulumi:"entityType"`
}

// PolicyEntityIdentifierInput is an input type that accepts PolicyEntityIdentifierArgs and PolicyEntityIdentifierOutput values.
// You can construct a concrete instance of `PolicyEntityIdentifierInput` via:
//
//	PolicyEntityIdentifierArgs{...}
type PolicyEntityIdentifierInput interface {
	pulumi.Input

	ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput
	ToPolicyEntityIdentifierOutputWithContext(context.Context) PolicyEntityIdentifierOutput
}

type PolicyEntityIdentifierArgs struct {
	EntityId   pulumi.StringInput `pulumi:"entityId"`
	EntityType pulumi.StringInput `pulumi:"entityType"`
}

func (PolicyEntityIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyEntityIdentifier)(nil)).Elem()
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput {
	return i.ToPolicyEntityIdentifierOutputWithContext(context.Background())
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierOutputWithContext(ctx context.Context) PolicyEntityIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierOutput)
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return i.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (i PolicyEntityIdentifierArgs) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierOutput).ToPolicyEntityIdentifierPtrOutputWithContext(ctx)
}

// PolicyEntityIdentifierPtrInput is an input type that accepts PolicyEntityIdentifierArgs, PolicyEntityIdentifierPtr and PolicyEntityIdentifierPtrOutput values.
// You can construct a concrete instance of `PolicyEntityIdentifierPtrInput` via:
//
//	        PolicyEntityIdentifierArgs{...}
//
//	or:
//
//	        nil
type PolicyEntityIdentifierPtrInput interface {
	pulumi.Input

	ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput
	ToPolicyEntityIdentifierPtrOutputWithContext(context.Context) PolicyEntityIdentifierPtrOutput
}

type policyEntityIdentifierPtrType PolicyEntityIdentifierArgs

func PolicyEntityIdentifierPtr(v *PolicyEntityIdentifierArgs) PolicyEntityIdentifierPtrInput {
	return (*policyEntityIdentifierPtrType)(v)
}

func (*policyEntityIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyEntityIdentifier)(nil)).Elem()
}

func (i *policyEntityIdentifierPtrType) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return i.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (i *policyEntityIdentifierPtrType) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyEntityIdentifierPtrOutput)
}

type PolicyEntityIdentifierOutput struct{ *pulumi.OutputState }

func (PolicyEntityIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyEntityIdentifier)(nil)).Elem()
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierOutput() PolicyEntityIdentifierOutput {
	return o
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierOutputWithContext(ctx context.Context) PolicyEntityIdentifierOutput {
	return o
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return o.ToPolicyEntityIdentifierPtrOutputWithContext(context.Background())
}

func (o PolicyEntityIdentifierOutput) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyEntityIdentifier) *PolicyEntityIdentifier {
		return &v
	}).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyEntityIdentifierOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyEntityIdentifier) string { return v.EntityId }).(pulumi.StringOutput)
}

func (o PolicyEntityIdentifierOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyEntityIdentifier) string { return v.EntityType }).(pulumi.StringOutput)
}

type PolicyEntityIdentifierPtrOutput struct{ *pulumi.OutputState }

func (PolicyEntityIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyEntityIdentifier)(nil)).Elem()
}

func (o PolicyEntityIdentifierPtrOutput) ToPolicyEntityIdentifierPtrOutput() PolicyEntityIdentifierPtrOutput {
	return o
}

func (o PolicyEntityIdentifierPtrOutput) ToPolicyEntityIdentifierPtrOutputWithContext(ctx context.Context) PolicyEntityIdentifierPtrOutput {
	return o
}

func (o PolicyEntityIdentifierPtrOutput) Elem() PolicyEntityIdentifierOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) PolicyEntityIdentifier {
		if v != nil {
			return *v
		}
		var ret PolicyEntityIdentifier
		return ret
	}).(PolicyEntityIdentifierOutput)
}

func (o PolicyEntityIdentifierPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

func (o PolicyEntityIdentifierPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyEntityIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

type PolicyStaticPolicyDefinition struct {
	Description *string `pulumi:"description"`
	Statement   string  `pulumi:"statement"`
}

// PolicyStaticPolicyDefinitionInput is an input type that accepts PolicyStaticPolicyDefinitionArgs and PolicyStaticPolicyDefinitionOutput values.
// You can construct a concrete instance of `PolicyStaticPolicyDefinitionInput` via:
//
//	PolicyStaticPolicyDefinitionArgs{...}
type PolicyStaticPolicyDefinitionInput interface {
	pulumi.Input

	ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput
	ToPolicyStaticPolicyDefinitionOutputWithContext(context.Context) PolicyStaticPolicyDefinitionOutput
}

type PolicyStaticPolicyDefinitionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Statement   pulumi.StringInput    `pulumi:"statement"`
}

func (PolicyStaticPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (i PolicyStaticPolicyDefinitionArgs) ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput {
	return i.ToPolicyStaticPolicyDefinitionOutputWithContext(context.Background())
}

func (i PolicyStaticPolicyDefinitionArgs) ToPolicyStaticPolicyDefinitionOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStaticPolicyDefinitionOutput)
}

type PolicyStaticPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyStaticPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (o PolicyStaticPolicyDefinitionOutput) ToPolicyStaticPolicyDefinitionOutput() PolicyStaticPolicyDefinitionOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionOutput) ToPolicyStaticPolicyDefinitionOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStaticPolicyDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyStaticPolicyDefinitionOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyStaticPolicyDefinition) string { return v.Statement }).(pulumi.StringOutput)
}

type PolicyStaticPolicyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyStaticPolicyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStaticPolicyDefinition)(nil)).Elem()
}

func (o PolicyStaticPolicyDefinitionPtrOutput) ToPolicyStaticPolicyDefinitionPtrOutput() PolicyStaticPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionPtrOutput) ToPolicyStaticPolicyDefinitionPtrOutputWithContext(ctx context.Context) PolicyStaticPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Elem() PolicyStaticPolicyDefinitionOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) PolicyStaticPolicyDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyStaticPolicyDefinition
		return ret
	}).(PolicyStaticPolicyDefinitionOutput)
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o PolicyStaticPolicyDefinitionPtrOutput) Statement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStaticPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Statement
	}).(pulumi.StringPtrOutput)
}

type PolicyStoreDeletionProtection struct {
	Mode PolicyStoreDeletionMode `pulumi:"mode"`
}

// PolicyStoreDeletionProtectionInput is an input type that accepts PolicyStoreDeletionProtectionArgs and PolicyStoreDeletionProtectionOutput values.
// You can construct a concrete instance of `PolicyStoreDeletionProtectionInput` via:
//
//	PolicyStoreDeletionProtectionArgs{...}
type PolicyStoreDeletionProtectionInput interface {
	pulumi.Input

	ToPolicyStoreDeletionProtectionOutput() PolicyStoreDeletionProtectionOutput
	ToPolicyStoreDeletionProtectionOutputWithContext(context.Context) PolicyStoreDeletionProtectionOutput
}

type PolicyStoreDeletionProtectionArgs struct {
	Mode PolicyStoreDeletionModeInput `pulumi:"mode"`
}

func (PolicyStoreDeletionProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreDeletionProtection)(nil)).Elem()
}

func (i PolicyStoreDeletionProtectionArgs) ToPolicyStoreDeletionProtectionOutput() PolicyStoreDeletionProtectionOutput {
	return i.ToPolicyStoreDeletionProtectionOutputWithContext(context.Background())
}

func (i PolicyStoreDeletionProtectionArgs) ToPolicyStoreDeletionProtectionOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreDeletionProtectionOutput)
}

func (i PolicyStoreDeletionProtectionArgs) ToPolicyStoreDeletionProtectionPtrOutput() PolicyStoreDeletionProtectionPtrOutput {
	return i.ToPolicyStoreDeletionProtectionPtrOutputWithContext(context.Background())
}

func (i PolicyStoreDeletionProtectionArgs) ToPolicyStoreDeletionProtectionPtrOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreDeletionProtectionOutput).ToPolicyStoreDeletionProtectionPtrOutputWithContext(ctx)
}

// PolicyStoreDeletionProtectionPtrInput is an input type that accepts PolicyStoreDeletionProtectionArgs, PolicyStoreDeletionProtectionPtr and PolicyStoreDeletionProtectionPtrOutput values.
// You can construct a concrete instance of `PolicyStoreDeletionProtectionPtrInput` via:
//
//	        PolicyStoreDeletionProtectionArgs{...}
//
//	or:
//
//	        nil
type PolicyStoreDeletionProtectionPtrInput interface {
	pulumi.Input

	ToPolicyStoreDeletionProtectionPtrOutput() PolicyStoreDeletionProtectionPtrOutput
	ToPolicyStoreDeletionProtectionPtrOutputWithContext(context.Context) PolicyStoreDeletionProtectionPtrOutput
}

type policyStoreDeletionProtectionPtrType PolicyStoreDeletionProtectionArgs

func PolicyStoreDeletionProtectionPtr(v *PolicyStoreDeletionProtectionArgs) PolicyStoreDeletionProtectionPtrInput {
	return (*policyStoreDeletionProtectionPtrType)(v)
}

func (*policyStoreDeletionProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreDeletionProtection)(nil)).Elem()
}

func (i *policyStoreDeletionProtectionPtrType) ToPolicyStoreDeletionProtectionPtrOutput() PolicyStoreDeletionProtectionPtrOutput {
	return i.ToPolicyStoreDeletionProtectionPtrOutputWithContext(context.Background())
}

func (i *policyStoreDeletionProtectionPtrType) ToPolicyStoreDeletionProtectionPtrOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreDeletionProtectionPtrOutput)
}

type PolicyStoreDeletionProtectionOutput struct{ *pulumi.OutputState }

func (PolicyStoreDeletionProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreDeletionProtection)(nil)).Elem()
}

func (o PolicyStoreDeletionProtectionOutput) ToPolicyStoreDeletionProtectionOutput() PolicyStoreDeletionProtectionOutput {
	return o
}

func (o PolicyStoreDeletionProtectionOutput) ToPolicyStoreDeletionProtectionOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionOutput {
	return o
}

func (o PolicyStoreDeletionProtectionOutput) ToPolicyStoreDeletionProtectionPtrOutput() PolicyStoreDeletionProtectionPtrOutput {
	return o.ToPolicyStoreDeletionProtectionPtrOutputWithContext(context.Background())
}

func (o PolicyStoreDeletionProtectionOutput) ToPolicyStoreDeletionProtectionPtrOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyStoreDeletionProtection) *PolicyStoreDeletionProtection {
		return &v
	}).(PolicyStoreDeletionProtectionPtrOutput)
}

func (o PolicyStoreDeletionProtectionOutput) Mode() PolicyStoreDeletionModeOutput {
	return o.ApplyT(func(v PolicyStoreDeletionProtection) PolicyStoreDeletionMode { return v.Mode }).(PolicyStoreDeletionModeOutput)
}

type PolicyStoreDeletionProtectionPtrOutput struct{ *pulumi.OutputState }

func (PolicyStoreDeletionProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreDeletionProtection)(nil)).Elem()
}

func (o PolicyStoreDeletionProtectionPtrOutput) ToPolicyStoreDeletionProtectionPtrOutput() PolicyStoreDeletionProtectionPtrOutput {
	return o
}

func (o PolicyStoreDeletionProtectionPtrOutput) ToPolicyStoreDeletionProtectionPtrOutputWithContext(ctx context.Context) PolicyStoreDeletionProtectionPtrOutput {
	return o
}

func (o PolicyStoreDeletionProtectionPtrOutput) Elem() PolicyStoreDeletionProtectionOutput {
	return o.ApplyT(func(v *PolicyStoreDeletionProtection) PolicyStoreDeletionProtection {
		if v != nil {
			return *v
		}
		var ret PolicyStoreDeletionProtection
		return ret
	}).(PolicyStoreDeletionProtectionOutput)
}

func (o PolicyStoreDeletionProtectionPtrOutput) Mode() PolicyStoreDeletionModePtrOutput {
	return o.ApplyT(func(v *PolicyStoreDeletionProtection) *PolicyStoreDeletionMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(PolicyStoreDeletionModePtrOutput)
}

type PolicyStoreSchemaDefinition struct {
	// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the AVP User Guide.
	CedarJson *string `pulumi:"cedarJson"`
}

// PolicyStoreSchemaDefinitionInput is an input type that accepts PolicyStoreSchemaDefinitionArgs and PolicyStoreSchemaDefinitionOutput values.
// You can construct a concrete instance of `PolicyStoreSchemaDefinitionInput` via:
//
//	PolicyStoreSchemaDefinitionArgs{...}
type PolicyStoreSchemaDefinitionInput interface {
	pulumi.Input

	ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput
	ToPolicyStoreSchemaDefinitionOutputWithContext(context.Context) PolicyStoreSchemaDefinitionOutput
}

type PolicyStoreSchemaDefinitionArgs struct {
	// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the AVP User Guide.
	CedarJson pulumi.StringPtrInput `pulumi:"cedarJson"`
}

func (PolicyStoreSchemaDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput {
	return i.ToPolicyStoreSchemaDefinitionOutputWithContext(context.Background())
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionOutput)
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return i.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i PolicyStoreSchemaDefinitionArgs) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionOutput).ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx)
}

// PolicyStoreSchemaDefinitionPtrInput is an input type that accepts PolicyStoreSchemaDefinitionArgs, PolicyStoreSchemaDefinitionPtr and PolicyStoreSchemaDefinitionPtrOutput values.
// You can construct a concrete instance of `PolicyStoreSchemaDefinitionPtrInput` via:
//
//	        PolicyStoreSchemaDefinitionArgs{...}
//
//	or:
//
//	        nil
type PolicyStoreSchemaDefinitionPtrInput interface {
	pulumi.Input

	ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput
	ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Context) PolicyStoreSchemaDefinitionPtrOutput
}

type policyStoreSchemaDefinitionPtrType PolicyStoreSchemaDefinitionArgs

func PolicyStoreSchemaDefinitionPtr(v *PolicyStoreSchemaDefinitionArgs) PolicyStoreSchemaDefinitionPtrInput {
	return (*policyStoreSchemaDefinitionPtrType)(v)
}

func (*policyStoreSchemaDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (i *policyStoreSchemaDefinitionPtrType) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return i.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i *policyStoreSchemaDefinitionPtrType) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreSchemaDefinitionPtrOutput)
}

type PolicyStoreSchemaDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyStoreSchemaDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionOutput() PolicyStoreSchemaDefinitionOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return o.ToPolicyStoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (o PolicyStoreSchemaDefinitionOutput) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyStoreSchemaDefinition) *PolicyStoreSchemaDefinition {
		return &v
	}).(PolicyStoreSchemaDefinitionPtrOutput)
}

// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the AVP User Guide.
func (o PolicyStoreSchemaDefinitionOutput) CedarJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStoreSchemaDefinition) *string { return v.CedarJson }).(pulumi.StringPtrOutput)
}

type PolicyStoreSchemaDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyStoreSchemaDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreSchemaDefinition)(nil)).Elem()
}

func (o PolicyStoreSchemaDefinitionPtrOutput) ToPolicyStoreSchemaDefinitionPtrOutput() PolicyStoreSchemaDefinitionPtrOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionPtrOutput) ToPolicyStoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) PolicyStoreSchemaDefinitionPtrOutput {
	return o
}

func (o PolicyStoreSchemaDefinitionPtrOutput) Elem() PolicyStoreSchemaDefinitionOutput {
	return o.ApplyT(func(v *PolicyStoreSchemaDefinition) PolicyStoreSchemaDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyStoreSchemaDefinition
		return ret
	}).(PolicyStoreSchemaDefinitionOutput)
}

// A JSON string representation of the schema supported by applications that use this policy store. For more information, see [Policy store schema](https://docs.aws.amazon.com/verifiedpermissions/latest/userguide/schema.html) in the AVP User Guide.
func (o PolicyStoreSchemaDefinitionPtrOutput) CedarJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStoreSchemaDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CedarJson
	}).(pulumi.StringPtrOutput)
}

type PolicyStoreTag struct {
	// A string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.
	Key string `pulumi:"key"`
	// The value for the specified tag key.
	Value string `pulumi:"value"`
}

type PolicyStoreValidationSettings struct {
	// The validation mode currently configured for this policy store. The valid values are:
	//
	// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
	// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
	//
	// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
	// >
	// > To submit a static policy or policy template without a schema, you must turn off validation.
	Mode PolicyStoreValidationMode `pulumi:"mode"`
}

// PolicyStoreValidationSettingsInput is an input type that accepts PolicyStoreValidationSettingsArgs and PolicyStoreValidationSettingsOutput values.
// You can construct a concrete instance of `PolicyStoreValidationSettingsInput` via:
//
//	PolicyStoreValidationSettingsArgs{...}
type PolicyStoreValidationSettingsInput interface {
	pulumi.Input

	ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput
	ToPolicyStoreValidationSettingsOutputWithContext(context.Context) PolicyStoreValidationSettingsOutput
}

type PolicyStoreValidationSettingsArgs struct {
	// The validation mode currently configured for this policy store. The valid values are:
	//
	// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
	// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
	//
	// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
	// >
	// > To submit a static policy or policy template without a schema, you must turn off validation.
	Mode PolicyStoreValidationModeInput `pulumi:"mode"`
}

func (PolicyStoreValidationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreValidationSettings)(nil)).Elem()
}

func (i PolicyStoreValidationSettingsArgs) ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput {
	return i.ToPolicyStoreValidationSettingsOutputWithContext(context.Background())
}

func (i PolicyStoreValidationSettingsArgs) ToPolicyStoreValidationSettingsOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStoreValidationSettingsOutput)
}

type PolicyStoreValidationSettingsOutput struct{ *pulumi.OutputState }

func (PolicyStoreValidationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStoreValidationSettings)(nil)).Elem()
}

func (o PolicyStoreValidationSettingsOutput) ToPolicyStoreValidationSettingsOutput() PolicyStoreValidationSettingsOutput {
	return o
}

func (o PolicyStoreValidationSettingsOutput) ToPolicyStoreValidationSettingsOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsOutput {
	return o
}

// The validation mode currently configured for this policy store. The valid values are:
//
// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
//
// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
// >
// > To submit a static policy or policy template without a schema, you must turn off validation.
func (o PolicyStoreValidationSettingsOutput) Mode() PolicyStoreValidationModeOutput {
	return o.ApplyT(func(v PolicyStoreValidationSettings) PolicyStoreValidationMode { return v.Mode }).(PolicyStoreValidationModeOutput)
}

type PolicyStoreValidationSettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicyStoreValidationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStoreValidationSettings)(nil)).Elem()
}

func (o PolicyStoreValidationSettingsPtrOutput) ToPolicyStoreValidationSettingsPtrOutput() PolicyStoreValidationSettingsPtrOutput {
	return o
}

func (o PolicyStoreValidationSettingsPtrOutput) ToPolicyStoreValidationSettingsPtrOutputWithContext(ctx context.Context) PolicyStoreValidationSettingsPtrOutput {
	return o
}

func (o PolicyStoreValidationSettingsPtrOutput) Elem() PolicyStoreValidationSettingsOutput {
	return o.ApplyT(func(v *PolicyStoreValidationSettings) PolicyStoreValidationSettings {
		if v != nil {
			return *v
		}
		var ret PolicyStoreValidationSettings
		return ret
	}).(PolicyStoreValidationSettingsOutput)
}

// The validation mode currently configured for this policy store. The valid values are:
//
// - *OFF* – Neither Verified Permissions nor Cedar perform any validation on policies. No validation errors are reported by either service.
// - *STRICT* – Requires a schema to be present in the policy store. Cedar performs validation on all submitted new or updated static policies and policy templates. Any that fail validation are rejected and Cedar doesn't store them in the policy store.
//
// > If `Mode=STRICT` and the policy store doesn't contain a schema, Verified Permissions rejects all static policies and policy templates because there is no schema to validate against.
// >
// > To submit a static policy or policy template without a schema, you must turn off validation.
func (o PolicyStoreValidationSettingsPtrOutput) Mode() PolicyStoreValidationModePtrOutput {
	return o.ApplyT(func(v *PolicyStoreValidationSettings) *PolicyStoreValidationMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(PolicyStoreValidationModePtrOutput)
}

type PolicyTemplateLinkedPolicyDefinition struct {
	PolicyTemplateId string                  `pulumi:"policyTemplateId"`
	Principal        *PolicyEntityIdentifier `pulumi:"principal"`
	Resource         *PolicyEntityIdentifier `pulumi:"resource"`
}

// PolicyTemplateLinkedPolicyDefinitionInput is an input type that accepts PolicyTemplateLinkedPolicyDefinitionArgs and PolicyTemplateLinkedPolicyDefinitionOutput values.
// You can construct a concrete instance of `PolicyTemplateLinkedPolicyDefinitionInput` via:
//
//	PolicyTemplateLinkedPolicyDefinitionArgs{...}
type PolicyTemplateLinkedPolicyDefinitionInput interface {
	pulumi.Input

	ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput
	ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(context.Context) PolicyTemplateLinkedPolicyDefinitionOutput
}

type PolicyTemplateLinkedPolicyDefinitionArgs struct {
	PolicyTemplateId pulumi.StringInput             `pulumi:"policyTemplateId"`
	Principal        PolicyEntityIdentifierPtrInput `pulumi:"principal"`
	Resource         PolicyEntityIdentifierPtrInput `pulumi:"resource"`
}

func (PolicyTemplateLinkedPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (i PolicyTemplateLinkedPolicyDefinitionArgs) ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput {
	return i.ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(context.Background())
}

func (i PolicyTemplateLinkedPolicyDefinitionArgs) ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

type PolicyTemplateLinkedPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyTemplateLinkedPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) ToPolicyTemplateLinkedPolicyDefinitionOutput() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) ToPolicyTemplateLinkedPolicyDefinitionOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) PolicyTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) string { return v.PolicyTemplateId }).(pulumi.StringOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) Principal() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier { return v.Principal }).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionOutput) Resource() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier { return v.Resource }).(PolicyEntityIdentifierPtrOutput)
}

type PolicyTemplateLinkedPolicyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyTemplateLinkedPolicyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTemplateLinkedPolicyDefinition)(nil)).Elem()
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) ToPolicyTemplateLinkedPolicyDefinitionPtrOutput() PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) ToPolicyTemplateLinkedPolicyDefinitionPtrOutputWithContext(ctx context.Context) PolicyTemplateLinkedPolicyDefinitionPtrOutput {
	return o
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Elem() PolicyTemplateLinkedPolicyDefinitionOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) PolicyTemplateLinkedPolicyDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyTemplateLinkedPolicyDefinition
		return ret
	}).(PolicyTemplateLinkedPolicyDefinitionOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) PolicyTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyTemplateId
	}).(pulumi.StringPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Principal() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(PolicyEntityIdentifierPtrOutput)
}

func (o PolicyTemplateLinkedPolicyDefinitionPtrOutput) Resource() PolicyEntityIdentifierPtrOutput {
	return o.ApplyT(func(v *PolicyTemplateLinkedPolicyDefinition) *PolicyEntityIdentifier {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(PolicyEntityIdentifierPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoGroupConfigurationInput)(nil)).Elem(), IdentitySourceCognitoGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoGroupConfigurationPtrInput)(nil)).Elem(), IdentitySourceCognitoGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceCognitoUserPoolConfigurationInput)(nil)).Elem(), IdentitySourceCognitoUserPoolConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceConfiguration0PropertiesInput)(nil)).Elem(), IdentitySourceConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceConfiguration1PropertiesInput)(nil)).Elem(), IdentitySourceConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectAccessTokenConfigurationInput)(nil)).Elem(), IdentitySourceOpenIdConnectAccessTokenConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectConfigurationInput)(nil)).Elem(), IdentitySourceOpenIdConnectConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectGroupConfigurationInput)(nil)).Elem(), IdentitySourceOpenIdConnectGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectGroupConfigurationPtrInput)(nil)).Elem(), IdentitySourceOpenIdConnectGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectIdentityTokenConfigurationInput)(nil)).Elem(), IdentitySourceOpenIdConnectIdentityTokenConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection0PropertiesInput)(nil)).Elem(), IdentitySourceOpenIdConnectTokenSelection0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentitySourceOpenIdConnectTokenSelection1PropertiesInput)(nil)).Elem(), IdentitySourceOpenIdConnectTokenSelection1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDefinition0PropertiesInput)(nil)).Elem(), PolicyDefinition0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDefinition1PropertiesInput)(nil)).Elem(), PolicyDefinition1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyEntityIdentifierInput)(nil)).Elem(), PolicyEntityIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyEntityIdentifierPtrInput)(nil)).Elem(), PolicyEntityIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStaticPolicyDefinitionInput)(nil)).Elem(), PolicyStaticPolicyDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreDeletionProtectionInput)(nil)).Elem(), PolicyStoreDeletionProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreDeletionProtectionPtrInput)(nil)).Elem(), PolicyStoreDeletionProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreSchemaDefinitionInput)(nil)).Elem(), PolicyStoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreSchemaDefinitionPtrInput)(nil)).Elem(), PolicyStoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyStoreValidationSettingsInput)(nil)).Elem(), PolicyStoreValidationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTemplateLinkedPolicyDefinitionInput)(nil)).Elem(), PolicyTemplateLinkedPolicyDefinitionArgs{})
	pulumi.RegisterOutputType(IdentitySourceCognitoGroupConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoUserPoolConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceCognitoUserPoolConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(IdentitySourceConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceDetailsOutput{})
	pulumi.RegisterOutputType(IdentitySourceDetailsPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectAccessTokenConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectAccessTokenConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectGroupConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectGroupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectIdentityTokenConfigurationOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectIdentityTokenConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectTokenSelection0PropertiesOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectTokenSelection0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectTokenSelection1PropertiesOutput{})
	pulumi.RegisterOutputType(IdentitySourceOpenIdConnectTokenSelection1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinition0PropertiesOutput{})
	pulumi.RegisterOutputType(PolicyDefinition0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinition1PropertiesOutput{})
	pulumi.RegisterOutputType(PolicyDefinition1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyEntityIdentifierOutput{})
	pulumi.RegisterOutputType(PolicyEntityIdentifierPtrOutput{})
	pulumi.RegisterOutputType(PolicyStaticPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyStaticPolicyDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyStoreDeletionProtectionOutput{})
	pulumi.RegisterOutputType(PolicyStoreDeletionProtectionPtrOutput{})
	pulumi.RegisterOutputType(PolicyStoreSchemaDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyStoreSchemaDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyStoreValidationSettingsOutput{})
	pulumi.RegisterOutputType(PolicyStoreValidationSettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicyTemplateLinkedPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyTemplateLinkedPolicyDefinitionPtrOutput{})
}
