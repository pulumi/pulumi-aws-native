// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package verifiedpermissions

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::VerifiedPermissions::PolicyTemplate Resource Type
type PolicyTemplate struct {
	pulumi.CustomResourceState

	Description      pulumi.StringPtrOutput `pulumi:"description"`
	PolicyStoreId    pulumi.StringOutput    `pulumi:"policyStoreId"`
	PolicyTemplateId pulumi.StringOutput    `pulumi:"policyTemplateId"`
	Statement        pulumi.StringOutput    `pulumi:"statement"`
}

// NewPolicyTemplate registers a new resource with the given unique name, arguments, and options.
func NewPolicyTemplate(ctx *pulumi.Context,
	name string, args *PolicyTemplateArgs, opts ...pulumi.ResourceOption) (*PolicyTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyStoreId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyStoreId'")
	}
	if args.Statement == nil {
		return nil, errors.New("invalid value for required argument 'Statement'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"policyStoreId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyTemplate
	err := ctx.RegisterResource("aws-native:verifiedpermissions:PolicyTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyTemplate gets an existing PolicyTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyTemplateState, opts ...pulumi.ResourceOption) (*PolicyTemplate, error) {
	var resource PolicyTemplate
	err := ctx.ReadResource("aws-native:verifiedpermissions:PolicyTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyTemplate resources.
type policyTemplateState struct {
}

type PolicyTemplateState struct {
}

func (PolicyTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTemplateState)(nil)).Elem()
}

type policyTemplateArgs struct {
	Description   *string `pulumi:"description"`
	PolicyStoreId string  `pulumi:"policyStoreId"`
	Statement     string  `pulumi:"statement"`
}

// The set of arguments for constructing a PolicyTemplate resource.
type PolicyTemplateArgs struct {
	Description   pulumi.StringPtrInput
	PolicyStoreId pulumi.StringInput
	Statement     pulumi.StringInput
}

func (PolicyTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTemplateArgs)(nil)).Elem()
}

type PolicyTemplateInput interface {
	pulumi.Input

	ToPolicyTemplateOutput() PolicyTemplateOutput
	ToPolicyTemplateOutputWithContext(ctx context.Context) PolicyTemplateOutput
}

func (*PolicyTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTemplate)(nil)).Elem()
}

func (i *PolicyTemplate) ToPolicyTemplateOutput() PolicyTemplateOutput {
	return i.ToPolicyTemplateOutputWithContext(context.Background())
}

func (i *PolicyTemplate) ToPolicyTemplateOutputWithContext(ctx context.Context) PolicyTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTemplateOutput)
}

type PolicyTemplateOutput struct{ *pulumi.OutputState }

func (PolicyTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTemplate)(nil)).Elem()
}

func (o PolicyTemplateOutput) ToPolicyTemplateOutput() PolicyTemplateOutput {
	return o
}

func (o PolicyTemplateOutput) ToPolicyTemplateOutputWithContext(ctx context.Context) PolicyTemplateOutput {
	return o
}

func (o PolicyTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PolicyTemplateOutput) PolicyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTemplate) pulumi.StringOutput { return v.PolicyStoreId }).(pulumi.StringOutput)
}

func (o PolicyTemplateOutput) PolicyTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTemplate) pulumi.StringOutput { return v.PolicyTemplateId }).(pulumi.StringOutput)
}

func (o PolicyTemplateOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyTemplate) pulumi.StringOutput { return v.Statement }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyTemplateInput)(nil)).Elem(), &PolicyTemplate{})
	pulumi.RegisterOutputType(PolicyTemplateOutput{})
}
