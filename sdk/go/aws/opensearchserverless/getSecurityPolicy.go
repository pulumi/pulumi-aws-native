// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Amazon OpenSearchServerless security policy resource
func LookupSecurityPolicy(ctx *pulumi.Context, args *LookupSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityPolicyResult
	err := ctx.Invoke("aws-native:opensearchserverless:getSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityPolicyArgs struct {
	// The name of the policy
	Name string             `pulumi:"name"`
	Type SecurityPolicyType `pulumi:"type"`
}

type LookupSecurityPolicyResult struct {
	// The description of the policy
	Description *string `pulumi:"description"`
	// The JSON policy document that is the content for the policy
	Policy *string `pulumi:"policy"`
}

func LookupSecurityPolicyOutput(ctx *pulumi.Context, args LookupSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecurityPolicyResult, error) {
			args := v.(LookupSecurityPolicyArgs)
			r, err := LookupSecurityPolicy(ctx, &args, opts...)
			var s LookupSecurityPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecurityPolicyResultOutput)
}

type LookupSecurityPolicyOutputArgs struct {
	// The name of the policy
	Name pulumi.StringInput      `pulumi:"name"`
	Type SecurityPolicyTypeInput `pulumi:"type"`
}

func (LookupSecurityPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityPolicyArgs)(nil)).Elem()
}

type LookupSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityPolicyResult)(nil)).Elem()
}

func (o LookupSecurityPolicyResultOutput) ToLookupSecurityPolicyResultOutput() LookupSecurityPolicyResultOutput {
	return o
}

func (o LookupSecurityPolicyResultOutput) ToLookupSecurityPolicyResultOutputWithContext(ctx context.Context) LookupSecurityPolicyResultOutput {
	return o
}

func (o LookupSecurityPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSecurityPolicyResult] {
	return pulumix.Output[LookupSecurityPolicyResult]{
		OutputState: o.OutputState,
	}
}

// The description of the policy
func (o LookupSecurityPolicyResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The JSON policy document that is the content for the policy
func (o LookupSecurityPolicyResultOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityPolicyResult) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityPolicyResultOutput{})
}
