// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchserverless

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Amazon OpenSearchServerless security policy resource
type SecurityPolicy struct {
	pulumi.CustomResourceState

	// The description of the policy
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the policy
	Name pulumi.StringOutput `pulumi:"name"`
	// The JSON policy document that is the content for the policy
	Policy pulumi.StringOutput      `pulumi:"policy"`
	Type   SecurityPolicyTypeOutput `pulumi:"type"`
}

// NewSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecurityPolicy(ctx *pulumi.Context,
	name string, args *SecurityPolicyArgs, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource SecurityPolicy
	err := ctx.RegisterResource("aws-native:opensearchserverless:SecurityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityPolicy gets an existing SecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityPolicyState, opts ...pulumi.ResourceOption) (*SecurityPolicy, error) {
	var resource SecurityPolicy
	err := ctx.ReadResource("aws-native:opensearchserverless:SecurityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityPolicy resources.
type securityPolicyState struct {
}

type SecurityPolicyState struct {
}

func (SecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyState)(nil)).Elem()
}

type securityPolicyArgs struct {
	// The description of the policy
	Description *string `pulumi:"description"`
	// The name of the policy
	Name *string `pulumi:"name"`
	// The JSON policy document that is the content for the policy
	Policy string             `pulumi:"policy"`
	Type   SecurityPolicyType `pulumi:"type"`
}

// The set of arguments for constructing a SecurityPolicy resource.
type SecurityPolicyArgs struct {
	// The description of the policy
	Description pulumi.StringPtrInput
	// The name of the policy
	Name pulumi.StringPtrInput
	// The JSON policy document that is the content for the policy
	Policy pulumi.StringInput
	Type   SecurityPolicyTypeInput
}

func (SecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyArgs)(nil)).Elem()
}

type SecurityPolicyInput interface {
	pulumi.Input

	ToSecurityPolicyOutput() SecurityPolicyOutput
	ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput
}

func (*SecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (i *SecurityPolicy) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return i.ToSecurityPolicyOutputWithContext(context.Background())
}

func (i *SecurityPolicy) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyOutput)
}

type SecurityPolicyOutput struct{ *pulumi.OutputState }

func (SecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicy)(nil)).Elem()
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutput() SecurityPolicyOutput {
	return o
}

func (o SecurityPolicyOutput) ToSecurityPolicyOutputWithContext(ctx context.Context) SecurityPolicyOutput {
	return o
}

// The description of the policy
func (o SecurityPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the policy
func (o SecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The JSON policy document that is the content for the policy
func (o SecurityPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicy) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o SecurityPolicyOutput) Type() SecurityPolicyTypeOutput {
	return o.ApplyT(func(v *SecurityPolicy) SecurityPolicyTypeOutput { return v.Type }).(SecurityPolicyTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyInput)(nil)).Elem(), &SecurityPolicy{})
	pulumi.RegisterOutputType(SecurityPolicyOutput{})
}
