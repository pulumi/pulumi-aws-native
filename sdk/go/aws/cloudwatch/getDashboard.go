// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CloudWatch::Dashboard
func LookupDashboard(ctx *pulumi.Context, args *LookupDashboardArgs, opts ...pulumi.InvokeOption) (*LookupDashboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDashboardResult
	err := ctx.Invoke("aws-native:cloudwatch:getDashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDashboardArgs struct {
	// The name of the dashboard. The name must be between 1 and 255 characters. If you do not specify a name, one will be generated automatically.
	DashboardName string `pulumi:"dashboardName"`
}

type LookupDashboardResult struct {
	// The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard
	DashboardBody *string `pulumi:"dashboardBody"`
}

func LookupDashboardOutput(ctx *pulumi.Context, args LookupDashboardOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDashboardResultOutput, error) {
			args := v.(LookupDashboardArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:cloudwatch:getDashboard", args, LookupDashboardResultOutput{}, options).(LookupDashboardResultOutput), nil
		}).(LookupDashboardResultOutput)
}

type LookupDashboardOutputArgs struct {
	// The name of the dashboard. The name must be between 1 and 255 characters. If you do not specify a name, one will be generated automatically.
	DashboardName pulumi.StringInput `pulumi:"dashboardName"`
}

func (LookupDashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardArgs)(nil)).Elem()
}

type LookupDashboardResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardResult)(nil)).Elem()
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutput() LookupDashboardResultOutput {
	return o
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutputWithContext(ctx context.Context) LookupDashboardResultOutput {
	return o
}

// The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard
func (o LookupDashboardResultOutput) DashboardBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.DashboardBody }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardResultOutput{})
}
