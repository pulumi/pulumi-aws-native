// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devopsguru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// DevOps Guru Insight Severity Enum
type NotificationChannelInsightSeverity string

const (
	NotificationChannelInsightSeverityLow    = NotificationChannelInsightSeverity("LOW")
	NotificationChannelInsightSeverityMedium = NotificationChannelInsightSeverity("MEDIUM")
	NotificationChannelInsightSeverityHigh   = NotificationChannelInsightSeverity("HIGH")
)

func (NotificationChannelInsightSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelInsightSeverity)(nil)).Elem()
}

func (e NotificationChannelInsightSeverity) ToNotificationChannelInsightSeverityOutput() NotificationChannelInsightSeverityOutput {
	return pulumi.ToOutput(e).(NotificationChannelInsightSeverityOutput)
}

func (e NotificationChannelInsightSeverity) ToNotificationChannelInsightSeverityOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationChannelInsightSeverityOutput)
}

func (e NotificationChannelInsightSeverity) ToNotificationChannelInsightSeverityPtrOutput() NotificationChannelInsightSeverityPtrOutput {
	return e.ToNotificationChannelInsightSeverityPtrOutputWithContext(context.Background())
}

func (e NotificationChannelInsightSeverity) ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityPtrOutput {
	return NotificationChannelInsightSeverity(e).ToNotificationChannelInsightSeverityOutputWithContext(ctx).ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx)
}

func (e NotificationChannelInsightSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationChannelInsightSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationChannelInsightSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationChannelInsightSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationChannelInsightSeverityOutput struct{ *pulumi.OutputState }

func (NotificationChannelInsightSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelInsightSeverity)(nil)).Elem()
}

func (o NotificationChannelInsightSeverityOutput) ToNotificationChannelInsightSeverityOutput() NotificationChannelInsightSeverityOutput {
	return o
}

func (o NotificationChannelInsightSeverityOutput) ToNotificationChannelInsightSeverityOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityOutput {
	return o
}

func (o NotificationChannelInsightSeverityOutput) ToNotificationChannelInsightSeverityPtrOutput() NotificationChannelInsightSeverityPtrOutput {
	return o.ToNotificationChannelInsightSeverityPtrOutputWithContext(context.Background())
}

func (o NotificationChannelInsightSeverityOutput) ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationChannelInsightSeverity) *NotificationChannelInsightSeverity {
		return &v
	}).(NotificationChannelInsightSeverityPtrOutput)
}

func (o NotificationChannelInsightSeverityOutput) ToOutput(ctx context.Context) pulumix.Output[NotificationChannelInsightSeverity] {
	return pulumix.Output[NotificationChannelInsightSeverity]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelInsightSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationChannelInsightSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationChannelInsightSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationChannelInsightSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationChannelInsightSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationChannelInsightSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationChannelInsightSeverityPtrOutput struct{ *pulumi.OutputState }

func (NotificationChannelInsightSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelInsightSeverity)(nil)).Elem()
}

func (o NotificationChannelInsightSeverityPtrOutput) ToNotificationChannelInsightSeverityPtrOutput() NotificationChannelInsightSeverityPtrOutput {
	return o
}

func (o NotificationChannelInsightSeverityPtrOutput) ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityPtrOutput {
	return o
}

func (o NotificationChannelInsightSeverityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*NotificationChannelInsightSeverity] {
	return pulumix.Output[*NotificationChannelInsightSeverity]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelInsightSeverityPtrOutput) Elem() NotificationChannelInsightSeverityOutput {
	return o.ApplyT(func(v *NotificationChannelInsightSeverity) NotificationChannelInsightSeverity {
		if v != nil {
			return *v
		}
		var ret NotificationChannelInsightSeverity
		return ret
	}).(NotificationChannelInsightSeverityOutput)
}

func (o NotificationChannelInsightSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationChannelInsightSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationChannelInsightSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationChannelInsightSeverityInput is an input type that accepts NotificationChannelInsightSeverityArgs and NotificationChannelInsightSeverityOutput values.
// You can construct a concrete instance of `NotificationChannelInsightSeverityInput` via:
//
//	NotificationChannelInsightSeverityArgs{...}
type NotificationChannelInsightSeverityInput interface {
	pulumi.Input

	ToNotificationChannelInsightSeverityOutput() NotificationChannelInsightSeverityOutput
	ToNotificationChannelInsightSeverityOutputWithContext(context.Context) NotificationChannelInsightSeverityOutput
}

var notificationChannelInsightSeverityPtrType = reflect.TypeOf((**NotificationChannelInsightSeverity)(nil)).Elem()

type NotificationChannelInsightSeverityPtrInput interface {
	pulumi.Input

	ToNotificationChannelInsightSeverityPtrOutput() NotificationChannelInsightSeverityPtrOutput
	ToNotificationChannelInsightSeverityPtrOutputWithContext(context.Context) NotificationChannelInsightSeverityPtrOutput
}

type notificationChannelInsightSeverityPtr string

func NotificationChannelInsightSeverityPtr(v string) NotificationChannelInsightSeverityPtrInput {
	return (*notificationChannelInsightSeverityPtr)(&v)
}

func (*notificationChannelInsightSeverityPtr) ElementType() reflect.Type {
	return notificationChannelInsightSeverityPtrType
}

func (in *notificationChannelInsightSeverityPtr) ToNotificationChannelInsightSeverityPtrOutput() NotificationChannelInsightSeverityPtrOutput {
	return pulumi.ToOutput(in).(NotificationChannelInsightSeverityPtrOutput)
}

func (in *notificationChannelInsightSeverityPtr) ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationChannelInsightSeverityPtrOutput)
}

func (in *notificationChannelInsightSeverityPtr) ToOutput(ctx context.Context) pulumix.Output[*NotificationChannelInsightSeverity] {
	return pulumix.Output[*NotificationChannelInsightSeverity]{
		OutputState: in.ToNotificationChannelInsightSeverityPtrOutputWithContext(ctx).OutputState,
	}
}

// NotificationChannelInsightSeverityArrayInput is an input type that accepts NotificationChannelInsightSeverityArray and NotificationChannelInsightSeverityArrayOutput values.
// You can construct a concrete instance of `NotificationChannelInsightSeverityArrayInput` via:
//
//	NotificationChannelInsightSeverityArray{ NotificationChannelInsightSeverityArgs{...} }
type NotificationChannelInsightSeverityArrayInput interface {
	pulumi.Input

	ToNotificationChannelInsightSeverityArrayOutput() NotificationChannelInsightSeverityArrayOutput
	ToNotificationChannelInsightSeverityArrayOutputWithContext(context.Context) NotificationChannelInsightSeverityArrayOutput
}

type NotificationChannelInsightSeverityArray []NotificationChannelInsightSeverity

func (NotificationChannelInsightSeverityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelInsightSeverity)(nil)).Elem()
}

func (i NotificationChannelInsightSeverityArray) ToNotificationChannelInsightSeverityArrayOutput() NotificationChannelInsightSeverityArrayOutput {
	return i.ToNotificationChannelInsightSeverityArrayOutputWithContext(context.Background())
}

func (i NotificationChannelInsightSeverityArray) ToNotificationChannelInsightSeverityArrayOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelInsightSeverityArrayOutput)
}

func (i NotificationChannelInsightSeverityArray) ToOutput(ctx context.Context) pulumix.Output[[]NotificationChannelInsightSeverity] {
	return pulumix.Output[[]NotificationChannelInsightSeverity]{
		OutputState: i.ToNotificationChannelInsightSeverityArrayOutputWithContext(ctx).OutputState,
	}
}

type NotificationChannelInsightSeverityArrayOutput struct{ *pulumi.OutputState }

func (NotificationChannelInsightSeverityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelInsightSeverity)(nil)).Elem()
}

func (o NotificationChannelInsightSeverityArrayOutput) ToNotificationChannelInsightSeverityArrayOutput() NotificationChannelInsightSeverityArrayOutput {
	return o
}

func (o NotificationChannelInsightSeverityArrayOutput) ToNotificationChannelInsightSeverityArrayOutputWithContext(ctx context.Context) NotificationChannelInsightSeverityArrayOutput {
	return o
}

func (o NotificationChannelInsightSeverityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NotificationChannelInsightSeverity] {
	return pulumix.Output[[]NotificationChannelInsightSeverity]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelInsightSeverityArrayOutput) Index(i pulumi.IntInput) NotificationChannelInsightSeverityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationChannelInsightSeverity {
		return vs[0].([]NotificationChannelInsightSeverity)[vs[1].(int)]
	}).(NotificationChannelInsightSeverityOutput)
}

// DevOps Guru NotificationMessageType Enum
type NotificationChannelNotificationMessageType string

const (
	NotificationChannelNotificationMessageTypeNewInsight        = NotificationChannelNotificationMessageType("NEW_INSIGHT")
	NotificationChannelNotificationMessageTypeClosedInsight     = NotificationChannelNotificationMessageType("CLOSED_INSIGHT")
	NotificationChannelNotificationMessageTypeNewAssociation    = NotificationChannelNotificationMessageType("NEW_ASSOCIATION")
	NotificationChannelNotificationMessageTypeSeverityUpgraded  = NotificationChannelNotificationMessageType("SEVERITY_UPGRADED")
	NotificationChannelNotificationMessageTypeNewRecommendation = NotificationChannelNotificationMessageType("NEW_RECOMMENDATION")
)

func (NotificationChannelNotificationMessageType) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelNotificationMessageType)(nil)).Elem()
}

func (e NotificationChannelNotificationMessageType) ToNotificationChannelNotificationMessageTypeOutput() NotificationChannelNotificationMessageTypeOutput {
	return pulumi.ToOutput(e).(NotificationChannelNotificationMessageTypeOutput)
}

func (e NotificationChannelNotificationMessageType) ToNotificationChannelNotificationMessageTypeOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationChannelNotificationMessageTypeOutput)
}

func (e NotificationChannelNotificationMessageType) ToNotificationChannelNotificationMessageTypePtrOutput() NotificationChannelNotificationMessageTypePtrOutput {
	return e.ToNotificationChannelNotificationMessageTypePtrOutputWithContext(context.Background())
}

func (e NotificationChannelNotificationMessageType) ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypePtrOutput {
	return NotificationChannelNotificationMessageType(e).ToNotificationChannelNotificationMessageTypeOutputWithContext(ctx).ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx)
}

func (e NotificationChannelNotificationMessageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationChannelNotificationMessageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationChannelNotificationMessageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationChannelNotificationMessageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationChannelNotificationMessageTypeOutput struct{ *pulumi.OutputState }

func (NotificationChannelNotificationMessageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelNotificationMessageType)(nil)).Elem()
}

func (o NotificationChannelNotificationMessageTypeOutput) ToNotificationChannelNotificationMessageTypeOutput() NotificationChannelNotificationMessageTypeOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypeOutput) ToNotificationChannelNotificationMessageTypeOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypeOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypeOutput) ToNotificationChannelNotificationMessageTypePtrOutput() NotificationChannelNotificationMessageTypePtrOutput {
	return o.ToNotificationChannelNotificationMessageTypePtrOutputWithContext(context.Background())
}

func (o NotificationChannelNotificationMessageTypeOutput) ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationChannelNotificationMessageType) *NotificationChannelNotificationMessageType {
		return &v
	}).(NotificationChannelNotificationMessageTypePtrOutput)
}

func (o NotificationChannelNotificationMessageTypeOutput) ToOutput(ctx context.Context) pulumix.Output[NotificationChannelNotificationMessageType] {
	return pulumix.Output[NotificationChannelNotificationMessageType]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelNotificationMessageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationChannelNotificationMessageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationChannelNotificationMessageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationChannelNotificationMessageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationChannelNotificationMessageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationChannelNotificationMessageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationChannelNotificationMessageTypePtrOutput struct{ *pulumi.OutputState }

func (NotificationChannelNotificationMessageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelNotificationMessageType)(nil)).Elem()
}

func (o NotificationChannelNotificationMessageTypePtrOutput) ToNotificationChannelNotificationMessageTypePtrOutput() NotificationChannelNotificationMessageTypePtrOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypePtrOutput) ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypePtrOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*NotificationChannelNotificationMessageType] {
	return pulumix.Output[*NotificationChannelNotificationMessageType]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelNotificationMessageTypePtrOutput) Elem() NotificationChannelNotificationMessageTypeOutput {
	return o.ApplyT(func(v *NotificationChannelNotificationMessageType) NotificationChannelNotificationMessageType {
		if v != nil {
			return *v
		}
		var ret NotificationChannelNotificationMessageType
		return ret
	}).(NotificationChannelNotificationMessageTypeOutput)
}

func (o NotificationChannelNotificationMessageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationChannelNotificationMessageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationChannelNotificationMessageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationChannelNotificationMessageTypeInput is an input type that accepts NotificationChannelNotificationMessageTypeArgs and NotificationChannelNotificationMessageTypeOutput values.
// You can construct a concrete instance of `NotificationChannelNotificationMessageTypeInput` via:
//
//	NotificationChannelNotificationMessageTypeArgs{...}
type NotificationChannelNotificationMessageTypeInput interface {
	pulumi.Input

	ToNotificationChannelNotificationMessageTypeOutput() NotificationChannelNotificationMessageTypeOutput
	ToNotificationChannelNotificationMessageTypeOutputWithContext(context.Context) NotificationChannelNotificationMessageTypeOutput
}

var notificationChannelNotificationMessageTypePtrType = reflect.TypeOf((**NotificationChannelNotificationMessageType)(nil)).Elem()

type NotificationChannelNotificationMessageTypePtrInput interface {
	pulumi.Input

	ToNotificationChannelNotificationMessageTypePtrOutput() NotificationChannelNotificationMessageTypePtrOutput
	ToNotificationChannelNotificationMessageTypePtrOutputWithContext(context.Context) NotificationChannelNotificationMessageTypePtrOutput
}

type notificationChannelNotificationMessageTypePtr string

func NotificationChannelNotificationMessageTypePtr(v string) NotificationChannelNotificationMessageTypePtrInput {
	return (*notificationChannelNotificationMessageTypePtr)(&v)
}

func (*notificationChannelNotificationMessageTypePtr) ElementType() reflect.Type {
	return notificationChannelNotificationMessageTypePtrType
}

func (in *notificationChannelNotificationMessageTypePtr) ToNotificationChannelNotificationMessageTypePtrOutput() NotificationChannelNotificationMessageTypePtrOutput {
	return pulumi.ToOutput(in).(NotificationChannelNotificationMessageTypePtrOutput)
}

func (in *notificationChannelNotificationMessageTypePtr) ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationChannelNotificationMessageTypePtrOutput)
}

func (in *notificationChannelNotificationMessageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*NotificationChannelNotificationMessageType] {
	return pulumix.Output[*NotificationChannelNotificationMessageType]{
		OutputState: in.ToNotificationChannelNotificationMessageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// NotificationChannelNotificationMessageTypeArrayInput is an input type that accepts NotificationChannelNotificationMessageTypeArray and NotificationChannelNotificationMessageTypeArrayOutput values.
// You can construct a concrete instance of `NotificationChannelNotificationMessageTypeArrayInput` via:
//
//	NotificationChannelNotificationMessageTypeArray{ NotificationChannelNotificationMessageTypeArgs{...} }
type NotificationChannelNotificationMessageTypeArrayInput interface {
	pulumi.Input

	ToNotificationChannelNotificationMessageTypeArrayOutput() NotificationChannelNotificationMessageTypeArrayOutput
	ToNotificationChannelNotificationMessageTypeArrayOutputWithContext(context.Context) NotificationChannelNotificationMessageTypeArrayOutput
}

type NotificationChannelNotificationMessageTypeArray []NotificationChannelNotificationMessageType

func (NotificationChannelNotificationMessageTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelNotificationMessageType)(nil)).Elem()
}

func (i NotificationChannelNotificationMessageTypeArray) ToNotificationChannelNotificationMessageTypeArrayOutput() NotificationChannelNotificationMessageTypeArrayOutput {
	return i.ToNotificationChannelNotificationMessageTypeArrayOutputWithContext(context.Background())
}

func (i NotificationChannelNotificationMessageTypeArray) ToNotificationChannelNotificationMessageTypeArrayOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelNotificationMessageTypeArrayOutput)
}

func (i NotificationChannelNotificationMessageTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]NotificationChannelNotificationMessageType] {
	return pulumix.Output[[]NotificationChannelNotificationMessageType]{
		OutputState: i.ToNotificationChannelNotificationMessageTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type NotificationChannelNotificationMessageTypeArrayOutput struct{ *pulumi.OutputState }

func (NotificationChannelNotificationMessageTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelNotificationMessageType)(nil)).Elem()
}

func (o NotificationChannelNotificationMessageTypeArrayOutput) ToNotificationChannelNotificationMessageTypeArrayOutput() NotificationChannelNotificationMessageTypeArrayOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypeArrayOutput) ToNotificationChannelNotificationMessageTypeArrayOutputWithContext(ctx context.Context) NotificationChannelNotificationMessageTypeArrayOutput {
	return o
}

func (o NotificationChannelNotificationMessageTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]NotificationChannelNotificationMessageType] {
	return pulumix.Output[[]NotificationChannelNotificationMessageType]{
		OutputState: o.OutputState,
	}
}

func (o NotificationChannelNotificationMessageTypeArrayOutput) Index(i pulumi.IntInput) NotificationChannelNotificationMessageTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationChannelNotificationMessageType {
		return vs[0].([]NotificationChannelNotificationMessageType)[vs[1].(int)]
	}).(NotificationChannelNotificationMessageTypeOutput)
}

// The type of ResourceCollection
type ResourceCollectionType string

const (
	ResourceCollectionTypeAwsCloudFormation = ResourceCollectionType("AWS_CLOUD_FORMATION")
	ResourceCollectionTypeAwsTags           = ResourceCollectionType("AWS_TAGS")
)

func (ResourceCollectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionType)(nil)).Elem()
}

func (e ResourceCollectionType) ToResourceCollectionTypeOutput() ResourceCollectionTypeOutput {
	return pulumi.ToOutput(e).(ResourceCollectionTypeOutput)
}

func (e ResourceCollectionType) ToResourceCollectionTypeOutputWithContext(ctx context.Context) ResourceCollectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceCollectionTypeOutput)
}

func (e ResourceCollectionType) ToResourceCollectionTypePtrOutput() ResourceCollectionTypePtrOutput {
	return e.ToResourceCollectionTypePtrOutputWithContext(context.Background())
}

func (e ResourceCollectionType) ToResourceCollectionTypePtrOutputWithContext(ctx context.Context) ResourceCollectionTypePtrOutput {
	return ResourceCollectionType(e).ToResourceCollectionTypeOutputWithContext(ctx).ToResourceCollectionTypePtrOutputWithContext(ctx)
}

func (e ResourceCollectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceCollectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceCollectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceCollectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceCollectionTypeOutput struct{ *pulumi.OutputState }

func (ResourceCollectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionType)(nil)).Elem()
}

func (o ResourceCollectionTypeOutput) ToResourceCollectionTypeOutput() ResourceCollectionTypeOutput {
	return o
}

func (o ResourceCollectionTypeOutput) ToResourceCollectionTypeOutputWithContext(ctx context.Context) ResourceCollectionTypeOutput {
	return o
}

func (o ResourceCollectionTypeOutput) ToResourceCollectionTypePtrOutput() ResourceCollectionTypePtrOutput {
	return o.ToResourceCollectionTypePtrOutputWithContext(context.Background())
}

func (o ResourceCollectionTypeOutput) ToResourceCollectionTypePtrOutputWithContext(ctx context.Context) ResourceCollectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceCollectionType) *ResourceCollectionType {
		return &v
	}).(ResourceCollectionTypePtrOutput)
}

func (o ResourceCollectionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ResourceCollectionType] {
	return pulumix.Output[ResourceCollectionType]{
		OutputState: o.OutputState,
	}
}

func (o ResourceCollectionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceCollectionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceCollectionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceCollectionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceCollectionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceCollectionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceCollectionTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceCollectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCollectionType)(nil)).Elem()
}

func (o ResourceCollectionTypePtrOutput) ToResourceCollectionTypePtrOutput() ResourceCollectionTypePtrOutput {
	return o
}

func (o ResourceCollectionTypePtrOutput) ToResourceCollectionTypePtrOutputWithContext(ctx context.Context) ResourceCollectionTypePtrOutput {
	return o
}

func (o ResourceCollectionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ResourceCollectionType] {
	return pulumix.Output[*ResourceCollectionType]{
		OutputState: o.OutputState,
	}
}

func (o ResourceCollectionTypePtrOutput) Elem() ResourceCollectionTypeOutput {
	return o.ApplyT(func(v *ResourceCollectionType) ResourceCollectionType {
		if v != nil {
			return *v
		}
		var ret ResourceCollectionType
		return ret
	}).(ResourceCollectionTypeOutput)
}

func (o ResourceCollectionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceCollectionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceCollectionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceCollectionTypeInput is an input type that accepts ResourceCollectionTypeArgs and ResourceCollectionTypeOutput values.
// You can construct a concrete instance of `ResourceCollectionTypeInput` via:
//
//	ResourceCollectionTypeArgs{...}
type ResourceCollectionTypeInput interface {
	pulumi.Input

	ToResourceCollectionTypeOutput() ResourceCollectionTypeOutput
	ToResourceCollectionTypeOutputWithContext(context.Context) ResourceCollectionTypeOutput
}

var resourceCollectionTypePtrType = reflect.TypeOf((**ResourceCollectionType)(nil)).Elem()

type ResourceCollectionTypePtrInput interface {
	pulumi.Input

	ToResourceCollectionTypePtrOutput() ResourceCollectionTypePtrOutput
	ToResourceCollectionTypePtrOutputWithContext(context.Context) ResourceCollectionTypePtrOutput
}

type resourceCollectionTypePtr string

func ResourceCollectionTypePtr(v string) ResourceCollectionTypePtrInput {
	return (*resourceCollectionTypePtr)(&v)
}

func (*resourceCollectionTypePtr) ElementType() reflect.Type {
	return resourceCollectionTypePtrType
}

func (in *resourceCollectionTypePtr) ToResourceCollectionTypePtrOutput() ResourceCollectionTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceCollectionTypePtrOutput)
}

func (in *resourceCollectionTypePtr) ToResourceCollectionTypePtrOutputWithContext(ctx context.Context) ResourceCollectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceCollectionTypePtrOutput)
}

func (in *resourceCollectionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceCollectionType] {
	return pulumix.Output[*ResourceCollectionType]{
		OutputState: in.ToResourceCollectionTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelInsightSeverityInput)(nil)).Elem(), NotificationChannelInsightSeverity("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelInsightSeverityPtrInput)(nil)).Elem(), NotificationChannelInsightSeverity("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelInsightSeverityArrayInput)(nil)).Elem(), NotificationChannelInsightSeverityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelNotificationMessageTypeInput)(nil)).Elem(), NotificationChannelNotificationMessageType("NEW_INSIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelNotificationMessageTypePtrInput)(nil)).Elem(), NotificationChannelNotificationMessageType("NEW_INSIGHT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelNotificationMessageTypeArrayInput)(nil)).Elem(), NotificationChannelNotificationMessageTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionTypeInput)(nil)).Elem(), ResourceCollectionType("AWS_CLOUD_FORMATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionTypePtrInput)(nil)).Elem(), ResourceCollectionType("AWS_CLOUD_FORMATION"))
	pulumi.RegisterOutputType(NotificationChannelInsightSeverityOutput{})
	pulumi.RegisterOutputType(NotificationChannelInsightSeverityPtrOutput{})
	pulumi.RegisterOutputType(NotificationChannelInsightSeverityArrayOutput{})
	pulumi.RegisterOutputType(NotificationChannelNotificationMessageTypeOutput{})
	pulumi.RegisterOutputType(NotificationChannelNotificationMessageTypePtrOutput{})
	pulumi.RegisterOutputType(NotificationChannelNotificationMessageTypeArrayOutput{})
	pulumi.RegisterOutputType(ResourceCollectionTypeOutput{})
	pulumi.RegisterOutputType(ResourceCollectionTypePtrOutput{})
}
