// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationautoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// specifies the minimum and maximum capacity
type ScalableTargetAction struct {
	MaxCapacity *int `pulumi:"maxCapacity"`
	MinCapacity *int `pulumi:"minCapacity"`
}

// ScalableTargetActionInput is an input type that accepts ScalableTargetActionArgs and ScalableTargetActionOutput values.
// You can construct a concrete instance of `ScalableTargetActionInput` via:
//
//	ScalableTargetActionArgs{...}
type ScalableTargetActionInput interface {
	pulumi.Input

	ToScalableTargetActionOutput() ScalableTargetActionOutput
	ToScalableTargetActionOutputWithContext(context.Context) ScalableTargetActionOutput
}

// specifies the minimum and maximum capacity
type ScalableTargetActionArgs struct {
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (ScalableTargetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetAction)(nil)).Elem()
}

func (i ScalableTargetActionArgs) ToScalableTargetActionOutput() ScalableTargetActionOutput {
	return i.ToScalableTargetActionOutputWithContext(context.Background())
}

func (i ScalableTargetActionArgs) ToScalableTargetActionOutputWithContext(ctx context.Context) ScalableTargetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionOutput)
}

func (i ScalableTargetActionArgs) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return i.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i ScalableTargetActionArgs) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionOutput).ToScalableTargetActionPtrOutputWithContext(ctx)
}

// ScalableTargetActionPtrInput is an input type that accepts ScalableTargetActionArgs, ScalableTargetActionPtr and ScalableTargetActionPtrOutput values.
// You can construct a concrete instance of `ScalableTargetActionPtrInput` via:
//
//	        ScalableTargetActionArgs{...}
//
//	or:
//
//	        nil
type ScalableTargetActionPtrInput interface {
	pulumi.Input

	ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput
	ToScalableTargetActionPtrOutputWithContext(context.Context) ScalableTargetActionPtrOutput
}

type scalableTargetActionPtrType ScalableTargetActionArgs

func ScalableTargetActionPtr(v *ScalableTargetActionArgs) ScalableTargetActionPtrInput {
	return (*scalableTargetActionPtrType)(v)
}

func (*scalableTargetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetAction)(nil)).Elem()
}

func (i *scalableTargetActionPtrType) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return i.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i *scalableTargetActionPtrType) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionPtrOutput)
}

// specifies the minimum and maximum capacity
type ScalableTargetActionOutput struct{ *pulumi.OutputState }

func (ScalableTargetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetAction)(nil)).Elem()
}

func (o ScalableTargetActionOutput) ToScalableTargetActionOutput() ScalableTargetActionOutput {
	return o
}

func (o ScalableTargetActionOutput) ToScalableTargetActionOutputWithContext(ctx context.Context) ScalableTargetActionOutput {
	return o
}

func (o ScalableTargetActionOutput) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return o.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (o ScalableTargetActionOutput) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalableTargetAction) *ScalableTargetAction {
		return &v
	}).(ScalableTargetActionPtrOutput)
}

func (o ScalableTargetActionOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalableTargetAction) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

func (o ScalableTargetActionOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalableTargetAction) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type ScalableTargetActionPtrOutput struct{ *pulumi.OutputState }

func (ScalableTargetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetAction)(nil)).Elem()
}

func (o ScalableTargetActionPtrOutput) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return o
}

func (o ScalableTargetActionPtrOutput) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return o
}

func (o ScalableTargetActionPtrOutput) Elem() ScalableTargetActionOutput {
	return o.ApplyT(func(v *ScalableTargetAction) ScalableTargetAction {
		if v != nil {
			return *v
		}
		var ret ScalableTargetAction
		return ret
	}).(ScalableTargetActionOutput)
}

func (o ScalableTargetActionPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

func (o ScalableTargetActionPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// specifies a scheduled action for a scalable target
type ScalableTargetScheduledAction struct {
	EndTime              *string               `pulumi:"endTime"`
	ScalableTargetAction *ScalableTargetAction `pulumi:"scalableTargetAction"`
	Schedule             string                `pulumi:"schedule"`
	ScheduledActionName  string                `pulumi:"scheduledActionName"`
	StartTime            *string               `pulumi:"startTime"`
	Timezone             *string               `pulumi:"timezone"`
}

// ScalableTargetScheduledActionInput is an input type that accepts ScalableTargetScheduledActionArgs and ScalableTargetScheduledActionOutput values.
// You can construct a concrete instance of `ScalableTargetScheduledActionInput` via:
//
//	ScalableTargetScheduledActionArgs{...}
type ScalableTargetScheduledActionInput interface {
	pulumi.Input

	ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput
	ToScalableTargetScheduledActionOutputWithContext(context.Context) ScalableTargetScheduledActionOutput
}

// specifies a scheduled action for a scalable target
type ScalableTargetScheduledActionArgs struct {
	EndTime              pulumi.StringPtrInput        `pulumi:"endTime"`
	ScalableTargetAction ScalableTargetActionPtrInput `pulumi:"scalableTargetAction"`
	Schedule             pulumi.StringInput           `pulumi:"schedule"`
	ScheduledActionName  pulumi.StringInput           `pulumi:"scheduledActionName"`
	StartTime            pulumi.StringPtrInput        `pulumi:"startTime"`
	Timezone             pulumi.StringPtrInput        `pulumi:"timezone"`
}

func (ScalableTargetScheduledActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetScheduledAction)(nil)).Elem()
}

func (i ScalableTargetScheduledActionArgs) ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput {
	return i.ToScalableTargetScheduledActionOutputWithContext(context.Background())
}

func (i ScalableTargetScheduledActionArgs) ToScalableTargetScheduledActionOutputWithContext(ctx context.Context) ScalableTargetScheduledActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetScheduledActionOutput)
}

// ScalableTargetScheduledActionArrayInput is an input type that accepts ScalableTargetScheduledActionArray and ScalableTargetScheduledActionArrayOutput values.
// You can construct a concrete instance of `ScalableTargetScheduledActionArrayInput` via:
//
//	ScalableTargetScheduledActionArray{ ScalableTargetScheduledActionArgs{...} }
type ScalableTargetScheduledActionArrayInput interface {
	pulumi.Input

	ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput
	ToScalableTargetScheduledActionArrayOutputWithContext(context.Context) ScalableTargetScheduledActionArrayOutput
}

type ScalableTargetScheduledActionArray []ScalableTargetScheduledActionInput

func (ScalableTargetScheduledActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalableTargetScheduledAction)(nil)).Elem()
}

func (i ScalableTargetScheduledActionArray) ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput {
	return i.ToScalableTargetScheduledActionArrayOutputWithContext(context.Background())
}

func (i ScalableTargetScheduledActionArray) ToScalableTargetScheduledActionArrayOutputWithContext(ctx context.Context) ScalableTargetScheduledActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetScheduledActionArrayOutput)
}

// specifies a scheduled action for a scalable target
type ScalableTargetScheduledActionOutput struct{ *pulumi.OutputState }

func (ScalableTargetScheduledActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetScheduledAction)(nil)).Elem()
}

func (o ScalableTargetScheduledActionOutput) ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput {
	return o
}

func (o ScalableTargetScheduledActionOutput) ToScalableTargetScheduledActionOutputWithContext(ctx context.Context) ScalableTargetScheduledActionOutput {
	return o
}

func (o ScalableTargetScheduledActionOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o ScalableTargetScheduledActionOutput) ScalableTargetAction() ScalableTargetActionPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *ScalableTargetAction { return v.ScalableTargetAction }).(ScalableTargetActionPtrOutput)
}

func (o ScalableTargetScheduledActionOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) string { return v.Schedule }).(pulumi.StringOutput)
}

func (o ScalableTargetScheduledActionOutput) ScheduledActionName() pulumi.StringOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) string { return v.ScheduledActionName }).(pulumi.StringOutput)
}

func (o ScalableTargetScheduledActionOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o ScalableTargetScheduledActionOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type ScalableTargetScheduledActionArrayOutput struct{ *pulumi.OutputState }

func (ScalableTargetScheduledActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalableTargetScheduledAction)(nil)).Elem()
}

func (o ScalableTargetScheduledActionArrayOutput) ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput {
	return o
}

func (o ScalableTargetScheduledActionArrayOutput) ToScalableTargetScheduledActionArrayOutputWithContext(ctx context.Context) ScalableTargetScheduledActionArrayOutput {
	return o
}

func (o ScalableTargetScheduledActionArrayOutput) Index(i pulumi.IntInput) ScalableTargetScheduledActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalableTargetScheduledAction {
		return vs[0].([]ScalableTargetScheduledAction)[vs[1].(int)]
	}).(ScalableTargetScheduledActionOutput)
}

// specifies whether the scaling activities for a scalable target are in a suspended state
type ScalableTargetSuspendedState struct {
	DynamicScalingInSuspended  *bool `pulumi:"dynamicScalingInSuspended"`
	DynamicScalingOutSuspended *bool `pulumi:"dynamicScalingOutSuspended"`
	ScheduledScalingSuspended  *bool `pulumi:"scheduledScalingSuspended"`
}

// ScalableTargetSuspendedStateInput is an input type that accepts ScalableTargetSuspendedStateArgs and ScalableTargetSuspendedStateOutput values.
// You can construct a concrete instance of `ScalableTargetSuspendedStateInput` via:
//
//	ScalableTargetSuspendedStateArgs{...}
type ScalableTargetSuspendedStateInput interface {
	pulumi.Input

	ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput
	ToScalableTargetSuspendedStateOutputWithContext(context.Context) ScalableTargetSuspendedStateOutput
}

// specifies whether the scaling activities for a scalable target are in a suspended state
type ScalableTargetSuspendedStateArgs struct {
	DynamicScalingInSuspended  pulumi.BoolPtrInput `pulumi:"dynamicScalingInSuspended"`
	DynamicScalingOutSuspended pulumi.BoolPtrInput `pulumi:"dynamicScalingOutSuspended"`
	ScheduledScalingSuspended  pulumi.BoolPtrInput `pulumi:"scheduledScalingSuspended"`
}

func (ScalableTargetSuspendedStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetSuspendedState)(nil)).Elem()
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput {
	return i.ToScalableTargetSuspendedStateOutputWithContext(context.Background())
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStateOutputWithContext(ctx context.Context) ScalableTargetSuspendedStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStateOutput)
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return i.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStateOutput).ToScalableTargetSuspendedStatePtrOutputWithContext(ctx)
}

// ScalableTargetSuspendedStatePtrInput is an input type that accepts ScalableTargetSuspendedStateArgs, ScalableTargetSuspendedStatePtr and ScalableTargetSuspendedStatePtrOutput values.
// You can construct a concrete instance of `ScalableTargetSuspendedStatePtrInput` via:
//
//	        ScalableTargetSuspendedStateArgs{...}
//
//	or:
//
//	        nil
type ScalableTargetSuspendedStatePtrInput interface {
	pulumi.Input

	ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput
	ToScalableTargetSuspendedStatePtrOutputWithContext(context.Context) ScalableTargetSuspendedStatePtrOutput
}

type scalableTargetSuspendedStatePtrType ScalableTargetSuspendedStateArgs

func ScalableTargetSuspendedStatePtr(v *ScalableTargetSuspendedStateArgs) ScalableTargetSuspendedStatePtrInput {
	return (*scalableTargetSuspendedStatePtrType)(v)
}

func (*scalableTargetSuspendedStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetSuspendedState)(nil)).Elem()
}

func (i *scalableTargetSuspendedStatePtrType) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return i.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (i *scalableTargetSuspendedStatePtrType) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStatePtrOutput)
}

// specifies whether the scaling activities for a scalable target are in a suspended state
type ScalableTargetSuspendedStateOutput struct{ *pulumi.OutputState }

func (ScalableTargetSuspendedStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetSuspendedState)(nil)).Elem()
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput {
	return o
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStateOutputWithContext(ctx context.Context) ScalableTargetSuspendedStateOutput {
	return o
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return o.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalableTargetSuspendedState) *ScalableTargetSuspendedState {
		return &v
	}).(ScalableTargetSuspendedStatePtrOutput)
}

func (o ScalableTargetSuspendedStateOutput) DynamicScalingInSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.DynamicScalingInSuspended }).(pulumi.BoolPtrOutput)
}

func (o ScalableTargetSuspendedStateOutput) DynamicScalingOutSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.DynamicScalingOutSuspended }).(pulumi.BoolPtrOutput)
}

func (o ScalableTargetSuspendedStateOutput) ScheduledScalingSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.ScheduledScalingSuspended }).(pulumi.BoolPtrOutput)
}

type ScalableTargetSuspendedStatePtrOutput struct{ *pulumi.OutputState }

func (ScalableTargetSuspendedStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetSuspendedState)(nil)).Elem()
}

func (o ScalableTargetSuspendedStatePtrOutput) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return o
}

func (o ScalableTargetSuspendedStatePtrOutput) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return o
}

func (o ScalableTargetSuspendedStatePtrOutput) Elem() ScalableTargetSuspendedStateOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) ScalableTargetSuspendedState {
		if v != nil {
			return *v
		}
		var ret ScalableTargetSuspendedState
		return ret
	}).(ScalableTargetSuspendedStateOutput)
}

func (o ScalableTargetSuspendedStatePtrOutput) DynamicScalingInSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicScalingInSuspended
	}).(pulumi.BoolPtrOutput)
}

func (o ScalableTargetSuspendedStatePtrOutput) DynamicScalingOutSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicScalingOutSuspended
	}).(pulumi.BoolPtrOutput)
}

func (o ScalableTargetSuspendedStatePtrOutput) ScheduledScalingSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.ScheduledScalingSuspended
	}).(pulumi.BoolPtrOutput)
}

// Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyCustomizedMetricSpecification struct {
	// The dimensions of the metric.
	Dimensions []ScalingPolicyMetricDimension `pulumi:"dimensions"`
	// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the Metric object that is returned by a call to ListMetrics.
	MetricName *string `pulumi:"metricName"`
	// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
	Metrics []ScalingPolicyTargetTrackingMetricDataQuery `pulumi:"metrics"`
	// The namespace of the metric.
	Namespace *string `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic *string `pulumi:"statistic"`
	// The unit of the metric. For a complete list of the units that CloudWatch supports, see the MetricDatum data type in the Amazon CloudWatch API Reference.
	Unit *string `pulumi:"unit"`
}

// ScalingPolicyCustomizedMetricSpecificationInput is an input type that accepts ScalingPolicyCustomizedMetricSpecificationArgs and ScalingPolicyCustomizedMetricSpecificationOutput values.
// You can construct a concrete instance of `ScalingPolicyCustomizedMetricSpecificationInput` via:
//
//	ScalingPolicyCustomizedMetricSpecificationArgs{...}
type ScalingPolicyCustomizedMetricSpecificationInput interface {
	pulumi.Input

	ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput
	ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(context.Context) ScalingPolicyCustomizedMetricSpecificationOutput
}

// Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyCustomizedMetricSpecificationArgs struct {
	// The dimensions of the metric.
	Dimensions ScalingPolicyMetricDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the Metric object that is returned by a call to ListMetrics.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
	Metrics ScalingPolicyTargetTrackingMetricDataQueryArrayInput `pulumi:"metrics"`
	// The namespace of the metric.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic pulumi.StringPtrInput `pulumi:"statistic"`
	// The unit of the metric. For a complete list of the units that CloudWatch supports, see the MetricDatum data type in the Amazon CloudWatch API Reference.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ScalingPolicyCustomizedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationOutput)
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationOutput).ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx)
}

// ScalingPolicyCustomizedMetricSpecificationPtrInput is an input type that accepts ScalingPolicyCustomizedMetricSpecificationArgs, ScalingPolicyCustomizedMetricSpecificationPtr and ScalingPolicyCustomizedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyCustomizedMetricSpecificationPtrInput` via:
//
//	        ScalingPolicyCustomizedMetricSpecificationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyCustomizedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput
	ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput
}

type scalingPolicyCustomizedMetricSpecificationPtrType ScalingPolicyCustomizedMetricSpecificationArgs

func ScalingPolicyCustomizedMetricSpecificationPtr(v *ScalingPolicyCustomizedMetricSpecificationArgs) ScalingPolicyCustomizedMetricSpecificationPtrInput {
	return (*scalingPolicyCustomizedMetricSpecificationPtrType)(v)
}

func (*scalingPolicyCustomizedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (i *scalingPolicyCustomizedMetricSpecificationPtrType) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyCustomizedMetricSpecificationPtrType) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyCustomizedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyCustomizedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyCustomizedMetricSpecification) *ScalingPolicyCustomizedMetricSpecification {
		return &v
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// The dimensions of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Dimensions() ScalingPolicyMetricDimensionArrayOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyMetricDimension { return v.Dimensions }).(ScalingPolicyMetricDimensionArrayOutput)
}

// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the Metric object that is returned by a call to ListMetrics.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Metrics() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyTargetTrackingMetricDataQuery {
		return v.Metrics
	}).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The namespace of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The statistic of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Statistic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Statistic }).(pulumi.StringPtrOutput)
}

// The unit of the metric. For a complete list of the units that CloudWatch supports, see the MetricDatum data type in the Amazon CloudWatch API Reference.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ScalingPolicyCustomizedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyCustomizedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Elem() ScalingPolicyCustomizedMetricSpecificationOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) ScalingPolicyCustomizedMetricSpecification {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyCustomizedMetricSpecification
		return ret
	}).(ScalingPolicyCustomizedMetricSpecificationOutput)
}

// The dimensions of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Dimensions() ScalingPolicyMetricDimensionArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ScalingPolicyMetricDimensionArrayOutput)
}

// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the Metric object that is returned by a call to ListMetrics.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Metrics() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyTargetTrackingMetricDataQuery {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The namespace of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The statistic of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Statistic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Statistic
	}).(pulumi.StringPtrOutput)
}

// The unit of the metric. For a complete list of the units that CloudWatch supports, see the MetricDatum data type in the Amazon CloudWatch API Reference.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Describes the dimension names and values associated with a metric.
type ScalingPolicyMetricDimension struct {
	// The name of the dimension.
	Name string `pulumi:"name"`
	// The value of the dimension.
	Value string `pulumi:"value"`
}

// ScalingPolicyMetricDimensionInput is an input type that accepts ScalingPolicyMetricDimensionArgs and ScalingPolicyMetricDimensionOutput values.
// You can construct a concrete instance of `ScalingPolicyMetricDimensionInput` via:
//
//	ScalingPolicyMetricDimensionArgs{...}
type ScalingPolicyMetricDimensionInput interface {
	pulumi.Input

	ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput
	ToScalingPolicyMetricDimensionOutputWithContext(context.Context) ScalingPolicyMetricDimensionOutput
}

// Describes the dimension names and values associated with a metric.
type ScalingPolicyMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ScalingPolicyMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyMetricDimensionArgs) ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput {
	return i.ToScalingPolicyMetricDimensionOutputWithContext(context.Background())
}

func (i ScalingPolicyMetricDimensionArgs) ToScalingPolicyMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyMetricDimensionOutput)
}

// ScalingPolicyMetricDimensionArrayInput is an input type that accepts ScalingPolicyMetricDimensionArray and ScalingPolicyMetricDimensionArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyMetricDimensionArrayInput` via:
//
//	ScalingPolicyMetricDimensionArray{ ScalingPolicyMetricDimensionArgs{...} }
type ScalingPolicyMetricDimensionArrayInput interface {
	pulumi.Input

	ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput
	ToScalingPolicyMetricDimensionArrayOutputWithContext(context.Context) ScalingPolicyMetricDimensionArrayOutput
}

type ScalingPolicyMetricDimensionArray []ScalingPolicyMetricDimensionInput

func (ScalingPolicyMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyMetricDimensionArray) ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput {
	return i.ToScalingPolicyMetricDimensionArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyMetricDimensionArray) ToScalingPolicyMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyMetricDimensionArrayOutput)
}

// Describes the dimension names and values associated with a metric.
type ScalingPolicyMetricDimensionOutput struct{ *pulumi.OutputState }

func (ScalingPolicyMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyMetricDimensionOutput) ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput {
	return o
}

func (o ScalingPolicyMetricDimensionOutput) ToScalingPolicyMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o ScalingPolicyMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyMetricDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the dimension.
func (o ScalingPolicyMetricDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyMetricDimension) string { return v.Value }).(pulumi.StringOutput)
}

type ScalingPolicyMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyMetricDimensionArrayOutput) ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyMetricDimensionArrayOutput) ToScalingPolicyMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyMetricDimensionArrayOutput) Index(i pulumi.IntInput) ScalingPolicyMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyMetricDimension {
		return vs[0].([]ScalingPolicyMetricDimension)[vs[1].(int)]
	}).(ScalingPolicyMetricDimensionOutput)
}

// Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyPredefinedMetricSpecification struct {
	// The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// ScalingPolicyPredefinedMetricSpecificationInput is an input type that accepts ScalingPolicyPredefinedMetricSpecificationArgs and ScalingPolicyPredefinedMetricSpecificationOutput values.
// You can construct a concrete instance of `ScalingPolicyPredefinedMetricSpecificationInput` via:
//
//	ScalingPolicyPredefinedMetricSpecificationArgs{...}
type ScalingPolicyPredefinedMetricSpecificationInput interface {
	pulumi.Input

	ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput
	ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(context.Context) ScalingPolicyPredefinedMetricSpecificationOutput
}

// Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyPredefinedMetricSpecificationArgs struct {
	// The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (ScalingPolicyPredefinedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationOutput)
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationOutput).ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx)
}

// ScalingPolicyPredefinedMetricSpecificationPtrInput is an input type that accepts ScalingPolicyPredefinedMetricSpecificationArgs, ScalingPolicyPredefinedMetricSpecificationPtr and ScalingPolicyPredefinedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredefinedMetricSpecificationPtrInput` via:
//
//	        ScalingPolicyPredefinedMetricSpecificationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredefinedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput
	ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput
}

type scalingPolicyPredefinedMetricSpecificationPtrType ScalingPolicyPredefinedMetricSpecificationArgs

func ScalingPolicyPredefinedMetricSpecificationPtr(v *ScalingPolicyPredefinedMetricSpecificationArgs) ScalingPolicyPredefinedMetricSpecificationPtrInput {
	return (*scalingPolicyPredefinedMetricSpecificationPtrType)(v)
}

func (*scalingPolicyPredefinedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (i *scalingPolicyPredefinedMetricSpecificationPtrType) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredefinedMetricSpecificationPtrType) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.
type ScalingPolicyPredefinedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredefinedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredefinedMetricSpecification) *ScalingPolicyPredefinedMetricSpecification {
		return &v
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
func (o ScalingPolicyPredefinedMetricSpecificationOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyPredefinedMetricSpecification) string { return v.PredefinedMetricType }).(pulumi.StringOutput)
}

// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service.
func (o ScalingPolicyPredefinedMetricSpecificationOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredefinedMetricSpecification) *string { return v.ResourceLabel }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredefinedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredefinedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) Elem() ScalingPolicyPredefinedMetricSpecificationOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) ScalingPolicyPredefinedMetricSpecification {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredefinedMetricSpecification
		return ret
	}).(ScalingPolicyPredefinedMetricSpecificationOutput)
}

// The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service.
func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

// Represents a step adjustment for a StepScalingPolicyConfiguration. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm.
type ScalingPolicyStepAdjustment struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
	MetricIntervalLowerBound *float64 `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
	MetricIntervalUpperBound *float64 `pulumi:"metricIntervalUpperBound"`
	// The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.
	ScalingAdjustment int `pulumi:"scalingAdjustment"`
}

// ScalingPolicyStepAdjustmentInput is an input type that accepts ScalingPolicyStepAdjustmentArgs and ScalingPolicyStepAdjustmentOutput values.
// You can construct a concrete instance of `ScalingPolicyStepAdjustmentInput` via:
//
//	ScalingPolicyStepAdjustmentArgs{...}
type ScalingPolicyStepAdjustmentInput interface {
	pulumi.Input

	ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput
	ToScalingPolicyStepAdjustmentOutputWithContext(context.Context) ScalingPolicyStepAdjustmentOutput
}

// Represents a step adjustment for a StepScalingPolicyConfiguration. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm.
type ScalingPolicyStepAdjustmentArgs struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
	MetricIntervalLowerBound pulumi.Float64PtrInput `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
	MetricIntervalUpperBound pulumi.Float64PtrInput `pulumi:"metricIntervalUpperBound"`
	// The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.
	ScalingAdjustment pulumi.IntInput `pulumi:"scalingAdjustment"`
}

func (ScalingPolicyStepAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (i ScalingPolicyStepAdjustmentArgs) ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput {
	return i.ToScalingPolicyStepAdjustmentOutputWithContext(context.Background())
}

func (i ScalingPolicyStepAdjustmentArgs) ToScalingPolicyStepAdjustmentOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepAdjustmentOutput)
}

// ScalingPolicyStepAdjustmentArrayInput is an input type that accepts ScalingPolicyStepAdjustmentArray and ScalingPolicyStepAdjustmentArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyStepAdjustmentArrayInput` via:
//
//	ScalingPolicyStepAdjustmentArray{ ScalingPolicyStepAdjustmentArgs{...} }
type ScalingPolicyStepAdjustmentArrayInput interface {
	pulumi.Input

	ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput
	ToScalingPolicyStepAdjustmentArrayOutputWithContext(context.Context) ScalingPolicyStepAdjustmentArrayOutput
}

type ScalingPolicyStepAdjustmentArray []ScalingPolicyStepAdjustmentInput

func (ScalingPolicyStepAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (i ScalingPolicyStepAdjustmentArray) ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput {
	return i.ToScalingPolicyStepAdjustmentArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyStepAdjustmentArray) ToScalingPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepAdjustmentArrayOutput)
}

// Represents a step adjustment for a StepScalingPolicyConfiguration. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm.
type ScalingPolicyStepAdjustmentOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (o ScalingPolicyStepAdjustmentOutput) ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentOutput) ToScalingPolicyStepAdjustmentOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentOutput {
	return o
}

// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
func (o ScalingPolicyStepAdjustmentOutput) MetricIntervalLowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) *float64 { return v.MetricIntervalLowerBound }).(pulumi.Float64PtrOutput)
}

// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
func (o ScalingPolicyStepAdjustmentOutput) MetricIntervalUpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) *float64 { return v.MetricIntervalUpperBound }).(pulumi.Float64PtrOutput)
}

// The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.
func (o ScalingPolicyStepAdjustmentOutput) ScalingAdjustment() pulumi.IntOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) int { return v.ScalingAdjustment }).(pulumi.IntOutput)
}

type ScalingPolicyStepAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (o ScalingPolicyStepAdjustmentArrayOutput) ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentArrayOutput) ToScalingPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentArrayOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentArrayOutput) Index(i pulumi.IntInput) ScalingPolicyStepAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyStepAdjustment {
		return vs[0].([]ScalingPolicyStepAdjustment)[vs[1].(int)]
	}).(ScalingPolicyStepAdjustmentOutput)
}

// A step scaling policy.
type ScalingPolicyStepScalingPolicyConfiguration struct {
	// Specifies how the ScalingAdjustment value in a StepAdjustment is interpreted.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// The amount of time, in seconds, to wait for a previous scaling activity to take effect.
	Cooldown *int `pulumi:"cooldown"`
	// The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average
	MetricAggregationType *string `pulumi:"metricAggregationType"`
	// The minimum value to scale by when the adjustment type is PercentChangeInCapacity.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that enable you to scale based on the size of the alarm breach.
	StepAdjustments []ScalingPolicyStepAdjustment `pulumi:"stepAdjustments"`
}

// ScalingPolicyStepScalingPolicyConfigurationInput is an input type that accepts ScalingPolicyStepScalingPolicyConfigurationArgs and ScalingPolicyStepScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `ScalingPolicyStepScalingPolicyConfigurationInput` via:
//
//	ScalingPolicyStepScalingPolicyConfigurationArgs{...}
type ScalingPolicyStepScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput
	ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput
}

// A step scaling policy.
type ScalingPolicyStepScalingPolicyConfigurationArgs struct {
	// Specifies how the ScalingAdjustment value in a StepAdjustment is interpreted.
	AdjustmentType pulumi.StringPtrInput `pulumi:"adjustmentType"`
	// The amount of time, in seconds, to wait for a previous scaling activity to take effect.
	Cooldown pulumi.IntPtrInput `pulumi:"cooldown"`
	// The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average
	MetricAggregationType pulumi.StringPtrInput `pulumi:"metricAggregationType"`
	// The minimum value to scale by when the adjustment type is PercentChangeInCapacity.
	MinAdjustmentMagnitude pulumi.IntPtrInput `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that enable you to scale based on the size of the alarm breach.
	StepAdjustments ScalingPolicyStepAdjustmentArrayInput `pulumi:"stepAdjustments"`
}

func (ScalingPolicyStepScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationOutput)
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationOutput).ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// ScalingPolicyStepScalingPolicyConfigurationPtrInput is an input type that accepts ScalingPolicyStepScalingPolicyConfigurationArgs, ScalingPolicyStepScalingPolicyConfigurationPtr and ScalingPolicyStepScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyStepScalingPolicyConfigurationPtrInput` via:
//
//	        ScalingPolicyStepScalingPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyStepScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput
	ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput
}

type scalingPolicyStepScalingPolicyConfigurationPtrType ScalingPolicyStepScalingPolicyConfigurationArgs

func ScalingPolicyStepScalingPolicyConfigurationPtr(v *ScalingPolicyStepScalingPolicyConfigurationArgs) ScalingPolicyStepScalingPolicyConfigurationPtrInput {
	return (*scalingPolicyStepScalingPolicyConfigurationPtrType)(v)
}

func (*scalingPolicyStepScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i *scalingPolicyStepScalingPolicyConfigurationPtrType) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyStepScalingPolicyConfigurationPtrType) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationPtrOutput)
}

// A step scaling policy.
type ScalingPolicyStepScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyStepScalingPolicyConfiguration) *ScalingPolicyStepScalingPolicyConfiguration {
		return &v
	}).(ScalingPolicyStepScalingPolicyConfigurationPtrOutput)
}

// Specifies how the ScalingAdjustment value in a StepAdjustment is interpreted.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *string { return v.AdjustmentType }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scaling activity to take effect.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *int { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *string { return v.MetricAggregationType }).(pulumi.StringPtrOutput)
}

// The minimum value to scale by when the adjustment type is PercentChangeInCapacity.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *int { return v.MinAdjustmentMagnitude }).(pulumi.IntPtrOutput)
}

// A set of adjustments that enable you to scale based on the size of the alarm breach.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) StepAdjustments() ScalingPolicyStepAdjustmentArrayOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) []ScalingPolicyStepAdjustment {
		return v.StepAdjustments
	}).(ScalingPolicyStepAdjustmentArrayOutput)
}

type ScalingPolicyStepScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) Elem() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) ScalingPolicyStepScalingPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyStepScalingPolicyConfiguration
		return ret
	}).(ScalingPolicyStepScalingPolicyConfigurationOutput)
}

// Specifies how the ScalingAdjustment value in a StepAdjustment is interpreted.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AdjustmentType
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scaling activity to take effect.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Cooldown
	}).(pulumi.IntPtrOutput)
}

// The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MetricAggregationType
	}).(pulumi.StringPtrOutput)
}

// The minimum value to scale by when the adjustment type is PercentChangeInCapacity.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinAdjustmentMagnitude
	}).(pulumi.IntPtrOutput)
}

// A set of adjustments that enable you to scale based on the size of the alarm breach.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) StepAdjustments() ScalingPolicyStepAdjustmentArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) []ScalingPolicyStepAdjustment {
		if v == nil {
			return nil
		}
		return v.StepAdjustments
	}).(ScalingPolicyStepAdjustmentArrayOutput)
}

// Represents a specific metric.
type ScalingPolicyTargetTrackingMetric struct {
	// The dimensions for the metric.
	Dimensions []ScalingPolicyTargetTrackingMetricDimension `pulumi:"dimensions"`
	// The name of the metric.
	MetricName *string `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace *string `pulumi:"namespace"`
}

// ScalingPolicyTargetTrackingMetricInput is an input type that accepts ScalingPolicyTargetTrackingMetricArgs and ScalingPolicyTargetTrackingMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricInput` via:
//
//	ScalingPolicyTargetTrackingMetricArgs{...}
type ScalingPolicyTargetTrackingMetricInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput
	ToScalingPolicyTargetTrackingMetricOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricOutput
}

// Represents a specific metric.
type ScalingPolicyTargetTrackingMetricArgs struct {
	// The dimensions for the metric.
	Dimensions ScalingPolicyTargetTrackingMetricDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ScalingPolicyTargetTrackingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput {
	return i.ToScalingPolicyTargetTrackingMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricOutput)
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricOutput).ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingMetricPtrInput is an input type that accepts ScalingPolicyTargetTrackingMetricArgs, ScalingPolicyTargetTrackingMetricPtr and ScalingPolicyTargetTrackingMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricPtrInput` via:
//
//	        ScalingPolicyTargetTrackingMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput
	ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricPtrOutput
}

type scalingPolicyTargetTrackingMetricPtrType ScalingPolicyTargetTrackingMetricArgs

func ScalingPolicyTargetTrackingMetricPtr(v *ScalingPolicyTargetTrackingMetricArgs) ScalingPolicyTargetTrackingMetricPtrInput {
	return (*scalingPolicyTargetTrackingMetricPtrType)(v)
}

func (*scalingPolicyTargetTrackingMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingMetricPtrType) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingMetricPtrType) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// Represents a specific metric.
type ScalingPolicyTargetTrackingMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingMetric) *ScalingPolicyTargetTrackingMetric {
		return &v
	}).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The dimensions for the metric.
func (o ScalingPolicyTargetTrackingMetricOutput) Dimensions() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) []ScalingPolicyTargetTrackingMetricDimension {
		return v.Dimensions
	}).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyTargetTrackingMetricOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The namespace of the metric.
func (o ScalingPolicyTargetTrackingMetricOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) Elem() ScalingPolicyTargetTrackingMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) ScalingPolicyTargetTrackingMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingMetric
		return ret
	}).(ScalingPolicyTargetTrackingMetricOutput)
}

// The dimensions for the metric.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) Dimensions() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) []ScalingPolicyTargetTrackingMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyTargetTrackingMetricDataQuery struct {
	// The math expression to perform on the returned data, if this object is performing a math expression.
	Expression *string `pulumi:"expression"`
	// A short name that identifies the object's results in the response.
	Id *string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label *string `pulumi:"label"`
	// Information about the metric data to return.
	MetricStat *ScalingPolicyTargetTrackingMetricStat `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	ReturnData *bool `pulumi:"returnData"`
}

// ScalingPolicyTargetTrackingMetricDataQueryInput is an input type that accepts ScalingPolicyTargetTrackingMetricDataQueryArgs and ScalingPolicyTargetTrackingMetricDataQueryOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDataQueryInput` via:
//
//	ScalingPolicyTargetTrackingMetricDataQueryArgs{...}
type ScalingPolicyTargetTrackingMetricDataQueryInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput
	ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyTargetTrackingMetricDataQueryArgs struct {
	// The math expression to perform on the returned data, if this object is performing a math expression.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// A short name that identifies the object's results in the response.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Information about the metric data to return.
	MetricStat ScalingPolicyTargetTrackingMetricStatPtrInput `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	ReturnData pulumi.BoolPtrInput `pulumi:"returnData"`
}

func (ScalingPolicyTargetTrackingMetricDataQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArgs) ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return i.ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArgs) ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDataQueryOutput)
}

// ScalingPolicyTargetTrackingMetricDataQueryArrayInput is an input type that accepts ScalingPolicyTargetTrackingMetricDataQueryArray and ScalingPolicyTargetTrackingMetricDataQueryArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDataQueryArrayInput` via:
//
//	ScalingPolicyTargetTrackingMetricDataQueryArray{ ScalingPolicyTargetTrackingMetricDataQueryArgs{...} }
type ScalingPolicyTargetTrackingMetricDataQueryArrayInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput
	ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput
}

type ScalingPolicyTargetTrackingMetricDataQueryArray []ScalingPolicyTargetTrackingMetricDataQueryInput

func (ScalingPolicyTargetTrackingMetricDataQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArray) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return i.ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArray) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyTargetTrackingMetricDataQueryOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDataQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return o
}

// The math expression to perform on the returned data, if this object is performing a math expression.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name that identifies the object's results in the response.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Information about the metric data to return.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) MetricStat() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *ScalingPolicyTargetTrackingMetricStat {
		return v.MetricStat
	}).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// Indicates whether to return the timestamps and raw data values of this metric.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type ScalingPolicyTargetTrackingMetricDataQueryArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) Index(i pulumi.IntInput) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyTargetTrackingMetricDataQuery {
		return vs[0].([]ScalingPolicyTargetTrackingMetricDataQuery)[vs[1].(int)]
	}).(ScalingPolicyTargetTrackingMetricDataQueryOutput)
}

// Describes the dimension of a metric.
type ScalingPolicyTargetTrackingMetricDimension struct {
	// The name of the dimension.
	Name *string `pulumi:"name"`
	// The value of the dimension.
	Value *string `pulumi:"value"`
}

// ScalingPolicyTargetTrackingMetricDimensionInput is an input type that accepts ScalingPolicyTargetTrackingMetricDimensionArgs and ScalingPolicyTargetTrackingMetricDimensionOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDimensionInput` via:
//
//	ScalingPolicyTargetTrackingMetricDimensionArgs{...}
type ScalingPolicyTargetTrackingMetricDimensionInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput
	ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput
}

// Describes the dimension of a metric.
type ScalingPolicyTargetTrackingMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScalingPolicyTargetTrackingMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDimensionArgs) ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput {
	return i.ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDimensionArgs) ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDimensionOutput)
}

// ScalingPolicyTargetTrackingMetricDimensionArrayInput is an input type that accepts ScalingPolicyTargetTrackingMetricDimensionArray and ScalingPolicyTargetTrackingMetricDimensionArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDimensionArrayInput` via:
//
//	ScalingPolicyTargetTrackingMetricDimensionArray{ ScalingPolicyTargetTrackingMetricDimensionArgs{...} }
type ScalingPolicyTargetTrackingMetricDimensionArrayInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput
	ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput
}

type ScalingPolicyTargetTrackingMetricDimensionArray []ScalingPolicyTargetTrackingMetricDimensionInput

func (ScalingPolicyTargetTrackingMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDimensionArray) ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return i.ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDimensionArray) ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// Describes the dimension of a metric.
type ScalingPolicyTargetTrackingMetricDimensionOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDimensionOutput) ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionOutput) ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o ScalingPolicyTargetTrackingMetricDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the dimension.
func (o ScalingPolicyTargetTrackingMetricDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) Index(i pulumi.IntInput) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyTargetTrackingMetricDimension {
		return vs[0].([]ScalingPolicyTargetTrackingMetricDimension)[vs[1].(int)]
	}).(ScalingPolicyTargetTrackingMetricDimensionOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.
type ScalingPolicyTargetTrackingMetricStat struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions.
	Metric *ScalingPolicyTargetTrackingMetric `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic.
	Stat *string `pulumi:"stat"`
	// The unit to use for the returned data points.
	Unit *string `pulumi:"unit"`
}

// ScalingPolicyTargetTrackingMetricStatInput is an input type that accepts ScalingPolicyTargetTrackingMetricStatArgs and ScalingPolicyTargetTrackingMetricStatOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricStatInput` via:
//
//	ScalingPolicyTargetTrackingMetricStatArgs{...}
type ScalingPolicyTargetTrackingMetricStatInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput
	ToScalingPolicyTargetTrackingMetricStatOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricStatOutput
}

// This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.
type ScalingPolicyTargetTrackingMetricStatArgs struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions.
	Metric ScalingPolicyTargetTrackingMetricPtrInput `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic.
	Stat pulumi.StringPtrInput `pulumi:"stat"`
	// The unit to use for the returned data points.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ScalingPolicyTargetTrackingMetricStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatOutput)
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatOutput).ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingMetricStatPtrInput is an input type that accepts ScalingPolicyTargetTrackingMetricStatArgs, ScalingPolicyTargetTrackingMetricStatPtr and ScalingPolicyTargetTrackingMetricStatPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricStatPtrInput` via:
//
//	        ScalingPolicyTargetTrackingMetricStatArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingMetricStatPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput
	ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput
}

type scalingPolicyTargetTrackingMetricStatPtrType ScalingPolicyTargetTrackingMetricStatArgs

func ScalingPolicyTargetTrackingMetricStatPtr(v *ScalingPolicyTargetTrackingMetricStatArgs) ScalingPolicyTargetTrackingMetricStatPtrInput {
	return (*scalingPolicyTargetTrackingMetricStatPtrType)(v)
}

func (*scalingPolicyTargetTrackingMetricStatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingMetricStatPtrType) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingMetricStatPtrType) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.
type ScalingPolicyTargetTrackingMetricStatOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetricStat {
		return &v
	}).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions.
func (o ScalingPolicyTargetTrackingMetricStatOutput) Metric() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetric { return v.Metric }).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic.
func (o ScalingPolicyTargetTrackingMetricStatOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.
func (o ScalingPolicyTargetTrackingMetricStatOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricStatPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricStatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Elem() ScalingPolicyTargetTrackingMetricStatOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) ScalingPolicyTargetTrackingMetricStat {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingMetricStat
		return ret
	}).(ScalingPolicyTargetTrackingMetricStatOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions.
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Metric() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetric {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic.
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points.
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// A target tracking scaling policy.
type ScalingPolicyTargetTrackingScalingPolicyConfiguration struct {
	// A customized metric. You can specify either a predefined metric or a customized metric.
	CustomizedMetricSpecification *ScalingPolicyCustomizedMetricSpecification `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// A predefined metric. You can specify either a predefined metric or a customized metric.
	PredefinedMetricSpecification *ScalingPolicyPredefinedMetricSpecification `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start.
	ScaleInCooldown *int `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, to wait for a previous scale-out activity to take effect.
	ScaleOutCooldown *int `pulumi:"scaleOutCooldown"`
	// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
	TargetValue float64 `pulumi:"targetValue"`
}

// ScalingPolicyTargetTrackingScalingPolicyConfigurationInput is an input type that accepts ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs and ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingScalingPolicyConfigurationInput` via:
//
//	ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{...}
type ScalingPolicyTargetTrackingScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput
	ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput
}

// A target tracking scaling policy.
type ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs struct {
	// A customized metric. You can specify either a predefined metric or a customized metric.
	CustomizedMetricSpecification ScalingPolicyCustomizedMetricSpecificationPtrInput `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
	DisableScaleIn pulumi.BoolPtrInput `pulumi:"disableScaleIn"`
	// A predefined metric. You can specify either a predefined metric or a customized metric.
	PredefinedMetricSpecification ScalingPolicyPredefinedMetricSpecificationPtrInput `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start.
	ScaleInCooldown pulumi.IntPtrInput `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, to wait for a previous scale-out activity to take effect.
	ScaleOutCooldown pulumi.IntPtrInput `pulumi:"scaleOutCooldown"`
	// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
	TargetValue pulumi.Float64Input `pulumi:"targetValue"`
}

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput)
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput).ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput is an input type that accepts ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs, ScalingPolicyTargetTrackingScalingPolicyConfigurationPtr and ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput` via:
//
//	        ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput
	ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput
}

type scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs

func ScalingPolicyTargetTrackingScalingPolicyConfigurationPtr(v *ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput {
	return (*scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType)(v)
}

func (*scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// A target tracking scaling policy.
type ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyTargetTrackingScalingPolicyConfiguration {
		return &v
	}).(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// A customized metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) CustomizedMetricSpecification() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *bool { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// A predefined metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) PredefinedMetricSpecification() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleInCooldown }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scale-out activity to take effect.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleOutCooldown }).(pulumi.IntPtrOutput)
}

// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) Elem() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) ScalingPolicyTargetTrackingScalingPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingScalingPolicyConfiguration
		return ret
	}).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput)
}

// A customized metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) CustomizedMetricSpecification() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyCustomizedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.CustomizedMetricSpecification
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleIn
	}).(pulumi.BoolPtrOutput)
}

// A predefined metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) PredefinedMetricSpecification() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyPredefinedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.PredefinedMetricSpecification
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleInCooldown
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scale-out activity to take effect.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleOutCooldown
	}).(pulumi.IntPtrOutput)
}

// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) TargetValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.TargetValue
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetActionInput)(nil)).Elem(), ScalableTargetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetActionPtrInput)(nil)).Elem(), ScalableTargetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetScheduledActionInput)(nil)).Elem(), ScalableTargetScheduledActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetScheduledActionArrayInput)(nil)).Elem(), ScalableTargetScheduledActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetSuspendedStateInput)(nil)).Elem(), ScalableTargetSuspendedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetSuspendedStatePtrInput)(nil)).Elem(), ScalableTargetSuspendedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecificationInput)(nil)).Elem(), ScalingPolicyCustomizedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecificationPtrInput)(nil)).Elem(), ScalingPolicyCustomizedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyMetricDimensionInput)(nil)).Elem(), ScalingPolicyMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyMetricDimensionArrayInput)(nil)).Elem(), ScalingPolicyMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecificationInput)(nil)).Elem(), ScalingPolicyPredefinedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecificationPtrInput)(nil)).Elem(), ScalingPolicyPredefinedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepAdjustmentInput)(nil)).Elem(), ScalingPolicyStepAdjustmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepAdjustmentArrayInput)(nil)).Elem(), ScalingPolicyStepAdjustmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfigurationInput)(nil)).Elem(), ScalingPolicyStepScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfigurationPtrInput)(nil)).Elem(), ScalingPolicyStepScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQueryInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDataQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQueryArrayInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDataQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimensionInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimensionArrayInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStatInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStatPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfigurationInput)(nil)).Elem(), ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{})
	pulumi.RegisterOutputType(ScalableTargetActionOutput{})
	pulumi.RegisterOutputType(ScalableTargetActionPtrOutput{})
	pulumi.RegisterOutputType(ScalableTargetScheduledActionOutput{})
	pulumi.RegisterOutputType(ScalableTargetScheduledActionArrayOutput{})
	pulumi.RegisterOutputType(ScalableTargetSuspendedStateOutput{})
	pulumi.RegisterOutputType(ScalableTargetSuspendedStatePtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyCustomizedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyCustomizedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyMetricDimensionOutput{})
	pulumi.RegisterOutputType(ScalingPolicyMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredefinedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredefinedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepAdjustmentOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepScalingPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDataQueryOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDimensionOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricStatOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricStatPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput{})
}
