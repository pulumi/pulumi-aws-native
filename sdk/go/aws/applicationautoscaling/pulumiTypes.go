// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationautoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// “ScalableTargetAction“ specifies the minimum and maximum capacity for the “ScalableTargetAction“ property of the [AWS::ApplicationAutoScaling::ScalableTarget ScheduledAction](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html) property type.
type ScalableTargetAction struct {
	// The maximum capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// The minimum capacity.
	MinCapacity *int `pulumi:"minCapacity"`
}

// ScalableTargetActionInput is an input type that accepts ScalableTargetActionArgs and ScalableTargetActionOutput values.
// You can construct a concrete instance of `ScalableTargetActionInput` via:
//
//	ScalableTargetActionArgs{...}
type ScalableTargetActionInput interface {
	pulumi.Input

	ToScalableTargetActionOutput() ScalableTargetActionOutput
	ToScalableTargetActionOutputWithContext(context.Context) ScalableTargetActionOutput
}

// “ScalableTargetAction“ specifies the minimum and maximum capacity for the “ScalableTargetAction“ property of the [AWS::ApplicationAutoScaling::ScalableTarget ScheduledAction](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html) property type.
type ScalableTargetActionArgs struct {
	// The maximum capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// The minimum capacity.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (ScalableTargetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetAction)(nil)).Elem()
}

func (i ScalableTargetActionArgs) ToScalableTargetActionOutput() ScalableTargetActionOutput {
	return i.ToScalableTargetActionOutputWithContext(context.Background())
}

func (i ScalableTargetActionArgs) ToScalableTargetActionOutputWithContext(ctx context.Context) ScalableTargetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionOutput)
}

func (i ScalableTargetActionArgs) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return i.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i ScalableTargetActionArgs) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionOutput).ToScalableTargetActionPtrOutputWithContext(ctx)
}

// ScalableTargetActionPtrInput is an input type that accepts ScalableTargetActionArgs, ScalableTargetActionPtr and ScalableTargetActionPtrOutput values.
// You can construct a concrete instance of `ScalableTargetActionPtrInput` via:
//
//	        ScalableTargetActionArgs{...}
//
//	or:
//
//	        nil
type ScalableTargetActionPtrInput interface {
	pulumi.Input

	ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput
	ToScalableTargetActionPtrOutputWithContext(context.Context) ScalableTargetActionPtrOutput
}

type scalableTargetActionPtrType ScalableTargetActionArgs

func ScalableTargetActionPtr(v *ScalableTargetActionArgs) ScalableTargetActionPtrInput {
	return (*scalableTargetActionPtrType)(v)
}

func (*scalableTargetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetAction)(nil)).Elem()
}

func (i *scalableTargetActionPtrType) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return i.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i *scalableTargetActionPtrType) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetActionPtrOutput)
}

// “ScalableTargetAction“ specifies the minimum and maximum capacity for the “ScalableTargetAction“ property of the [AWS::ApplicationAutoScaling::ScalableTarget ScheduledAction](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalabletarget-scheduledaction.html) property type.
type ScalableTargetActionOutput struct{ *pulumi.OutputState }

func (ScalableTargetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetAction)(nil)).Elem()
}

func (o ScalableTargetActionOutput) ToScalableTargetActionOutput() ScalableTargetActionOutput {
	return o
}

func (o ScalableTargetActionOutput) ToScalableTargetActionOutputWithContext(ctx context.Context) ScalableTargetActionOutput {
	return o
}

func (o ScalableTargetActionOutput) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return o.ToScalableTargetActionPtrOutputWithContext(context.Background())
}

func (o ScalableTargetActionOutput) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalableTargetAction) *ScalableTargetAction {
		return &v
	}).(ScalableTargetActionPtrOutput)
}

// The maximum capacity.
func (o ScalableTargetActionOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalableTargetAction) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// The minimum capacity.
func (o ScalableTargetActionOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalableTargetAction) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type ScalableTargetActionPtrOutput struct{ *pulumi.OutputState }

func (ScalableTargetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetAction)(nil)).Elem()
}

func (o ScalableTargetActionPtrOutput) ToScalableTargetActionPtrOutput() ScalableTargetActionPtrOutput {
	return o
}

func (o ScalableTargetActionPtrOutput) ToScalableTargetActionPtrOutputWithContext(ctx context.Context) ScalableTargetActionPtrOutput {
	return o
}

func (o ScalableTargetActionPtrOutput) Elem() ScalableTargetActionOutput {
	return o.ApplyT(func(v *ScalableTargetAction) ScalableTargetAction {
		if v != nil {
			return *v
		}
		var ret ScalableTargetAction
		return ret
	}).(ScalableTargetActionOutput)
}

// The maximum capacity.
func (o ScalableTargetActionPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// The minimum capacity.
func (o ScalableTargetActionPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// “ScheduledAction“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies a scheduled action for a scalable target.
//
//	For more information, see [Scheduled scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetScheduledAction struct {
	// The date and time that the action is scheduled to end, in UTC.
	EndTime *string `pulumi:"endTime"`
	// The new minimum and maximum capacity. You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.
	ScalableTargetAction *ScalableTargetAction `pulumi:"scalableTargetAction"`
	// The schedule for this action. The following formats are supported:
	//   +  At expressions - "``at(yyyy-mm-ddThh:mm:ss)``"
	//   +  Rate expressions - "``rate(valueunit)``"
	//   +  Cron expressions - "``cron(fields)``"
	//
	//  At expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval.
	//  At and cron expressions use Universal Coordinated Time (UTC) by default.
	//  The cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
	//  For rate expressions, *value* is a positive integer and *unit* is ``minute`` | ``minutes`` | ``hour`` | ``hours`` | ``day`` | ``days``.
	Schedule string `pulumi:"schedule"`
	// The name of the scheduled action. This name must be unique among all other scheduled actions on the specified scalable target.
	ScheduledActionName string `pulumi:"scheduledActionName"`
	// The date and time that the action is scheduled to begin, in UTC.
	StartTime *string `pulumi:"startTime"`
	// The time zone used when referring to the date and time of a scheduled action, when the scheduled action uses an at or cron expression.
	Timezone *string `pulumi:"timezone"`
}

// ScalableTargetScheduledActionInput is an input type that accepts ScalableTargetScheduledActionArgs and ScalableTargetScheduledActionOutput values.
// You can construct a concrete instance of `ScalableTargetScheduledActionInput` via:
//
//	ScalableTargetScheduledActionArgs{...}
type ScalableTargetScheduledActionInput interface {
	pulumi.Input

	ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput
	ToScalableTargetScheduledActionOutputWithContext(context.Context) ScalableTargetScheduledActionOutput
}

// “ScheduledAction“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies a scheduled action for a scalable target.
//
//	For more information, see [Scheduled scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetScheduledActionArgs struct {
	// The date and time that the action is scheduled to end, in UTC.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The new minimum and maximum capacity. You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.
	ScalableTargetAction ScalableTargetActionPtrInput `pulumi:"scalableTargetAction"`
	// The schedule for this action. The following formats are supported:
	//   +  At expressions - "``at(yyyy-mm-ddThh:mm:ss)``"
	//   +  Rate expressions - "``rate(valueunit)``"
	//   +  Cron expressions - "``cron(fields)``"
	//
	//  At expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval.
	//  At and cron expressions use Universal Coordinated Time (UTC) by default.
	//  The cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
	//  For rate expressions, *value* is a positive integer and *unit* is ``minute`` | ``minutes`` | ``hour`` | ``hours`` | ``day`` | ``days``.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The name of the scheduled action. This name must be unique among all other scheduled actions on the specified scalable target.
	ScheduledActionName pulumi.StringInput `pulumi:"scheduledActionName"`
	// The date and time that the action is scheduled to begin, in UTC.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The time zone used when referring to the date and time of a scheduled action, when the scheduled action uses an at or cron expression.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (ScalableTargetScheduledActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetScheduledAction)(nil)).Elem()
}

func (i ScalableTargetScheduledActionArgs) ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput {
	return i.ToScalableTargetScheduledActionOutputWithContext(context.Background())
}

func (i ScalableTargetScheduledActionArgs) ToScalableTargetScheduledActionOutputWithContext(ctx context.Context) ScalableTargetScheduledActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetScheduledActionOutput)
}

// ScalableTargetScheduledActionArrayInput is an input type that accepts ScalableTargetScheduledActionArray and ScalableTargetScheduledActionArrayOutput values.
// You can construct a concrete instance of `ScalableTargetScheduledActionArrayInput` via:
//
//	ScalableTargetScheduledActionArray{ ScalableTargetScheduledActionArgs{...} }
type ScalableTargetScheduledActionArrayInput interface {
	pulumi.Input

	ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput
	ToScalableTargetScheduledActionArrayOutputWithContext(context.Context) ScalableTargetScheduledActionArrayOutput
}

type ScalableTargetScheduledActionArray []ScalableTargetScheduledActionInput

func (ScalableTargetScheduledActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalableTargetScheduledAction)(nil)).Elem()
}

func (i ScalableTargetScheduledActionArray) ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput {
	return i.ToScalableTargetScheduledActionArrayOutputWithContext(context.Background())
}

func (i ScalableTargetScheduledActionArray) ToScalableTargetScheduledActionArrayOutputWithContext(ctx context.Context) ScalableTargetScheduledActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetScheduledActionArrayOutput)
}

// “ScheduledAction“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies a scheduled action for a scalable target.
//
//	For more information, see [Scheduled scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scheduled-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetScheduledActionOutput struct{ *pulumi.OutputState }

func (ScalableTargetScheduledActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetScheduledAction)(nil)).Elem()
}

func (o ScalableTargetScheduledActionOutput) ToScalableTargetScheduledActionOutput() ScalableTargetScheduledActionOutput {
	return o
}

func (o ScalableTargetScheduledActionOutput) ToScalableTargetScheduledActionOutputWithContext(ctx context.Context) ScalableTargetScheduledActionOutput {
	return o
}

// The date and time that the action is scheduled to end, in UTC.
func (o ScalableTargetScheduledActionOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The new minimum and maximum capacity. You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.
func (o ScalableTargetScheduledActionOutput) ScalableTargetAction() ScalableTargetActionPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *ScalableTargetAction { return v.ScalableTargetAction }).(ScalableTargetActionPtrOutput)
}

// The schedule for this action. The following formats are supported:
//
//   - At expressions - "“at(yyyy-mm-ddThh:mm:ss)“"
//
//   - Rate expressions - "“rate(valueunit)“"
//
//   - Cron expressions - "“cron(fields)“"
//
//     At expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval.
//     At and cron expressions use Universal Coordinated Time (UTC) by default.
//     The cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
//     For rate expressions, *value* is a positive integer and *unit* is “minute“ | “minutes“ | “hour“ | “hours“ | “day“ | “days“.
func (o ScalableTargetScheduledActionOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) string { return v.Schedule }).(pulumi.StringOutput)
}

// The name of the scheduled action. This name must be unique among all other scheduled actions on the specified scalable target.
func (o ScalableTargetScheduledActionOutput) ScheduledActionName() pulumi.StringOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) string { return v.ScheduledActionName }).(pulumi.StringOutput)
}

// The date and time that the action is scheduled to begin, in UTC.
func (o ScalableTargetScheduledActionOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The time zone used when referring to the date and time of a scheduled action, when the scheduled action uses an at or cron expression.
func (o ScalableTargetScheduledActionOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalableTargetScheduledAction) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type ScalableTargetScheduledActionArrayOutput struct{ *pulumi.OutputState }

func (ScalableTargetScheduledActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalableTargetScheduledAction)(nil)).Elem()
}

func (o ScalableTargetScheduledActionArrayOutput) ToScalableTargetScheduledActionArrayOutput() ScalableTargetScheduledActionArrayOutput {
	return o
}

func (o ScalableTargetScheduledActionArrayOutput) ToScalableTargetScheduledActionArrayOutputWithContext(ctx context.Context) ScalableTargetScheduledActionArrayOutput {
	return o
}

func (o ScalableTargetScheduledActionArrayOutput) Index(i pulumi.IntInput) ScalableTargetScheduledActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalableTargetScheduledAction {
		return vs[0].([]ScalableTargetScheduledAction)[vs[1].(int)]
	}).(ScalableTargetScheduledActionOutput)
}

// “SuspendedState“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies whether the scaling activities for a scalable target are in a suspended state.
//
//	For more information, see [Suspending and resuming scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetSuspendedState struct {
	// Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is ``false``.
	DynamicScalingInSuspended *bool `pulumi:"dynamicScalingInSuspended"`
	// Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is ``false``.
	DynamicScalingOutSuspended *bool `pulumi:"dynamicScalingOutSuspended"`
	// Whether scheduled scaling is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is ``false``.
	ScheduledScalingSuspended *bool `pulumi:"scheduledScalingSuspended"`
}

// ScalableTargetSuspendedStateInput is an input type that accepts ScalableTargetSuspendedStateArgs and ScalableTargetSuspendedStateOutput values.
// You can construct a concrete instance of `ScalableTargetSuspendedStateInput` via:
//
//	ScalableTargetSuspendedStateArgs{...}
type ScalableTargetSuspendedStateInput interface {
	pulumi.Input

	ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput
	ToScalableTargetSuspendedStateOutputWithContext(context.Context) ScalableTargetSuspendedStateOutput
}

// “SuspendedState“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies whether the scaling activities for a scalable target are in a suspended state.
//
//	For more information, see [Suspending and resuming scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetSuspendedStateArgs struct {
	// Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is ``false``.
	DynamicScalingInSuspended pulumi.BoolPtrInput `pulumi:"dynamicScalingInSuspended"`
	// Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is ``false``.
	DynamicScalingOutSuspended pulumi.BoolPtrInput `pulumi:"dynamicScalingOutSuspended"`
	// Whether scheduled scaling is suspended. Set the value to ``true`` if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is ``false``.
	ScheduledScalingSuspended pulumi.BoolPtrInput `pulumi:"scheduledScalingSuspended"`
}

func (ScalableTargetSuspendedStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetSuspendedState)(nil)).Elem()
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput {
	return i.ToScalableTargetSuspendedStateOutputWithContext(context.Background())
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStateOutputWithContext(ctx context.Context) ScalableTargetSuspendedStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStateOutput)
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return i.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (i ScalableTargetSuspendedStateArgs) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStateOutput).ToScalableTargetSuspendedStatePtrOutputWithContext(ctx)
}

// ScalableTargetSuspendedStatePtrInput is an input type that accepts ScalableTargetSuspendedStateArgs, ScalableTargetSuspendedStatePtr and ScalableTargetSuspendedStatePtrOutput values.
// You can construct a concrete instance of `ScalableTargetSuspendedStatePtrInput` via:
//
//	        ScalableTargetSuspendedStateArgs{...}
//
//	or:
//
//	        nil
type ScalableTargetSuspendedStatePtrInput interface {
	pulumi.Input

	ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput
	ToScalableTargetSuspendedStatePtrOutputWithContext(context.Context) ScalableTargetSuspendedStatePtrOutput
}

type scalableTargetSuspendedStatePtrType ScalableTargetSuspendedStateArgs

func ScalableTargetSuspendedStatePtr(v *ScalableTargetSuspendedStateArgs) ScalableTargetSuspendedStatePtrInput {
	return (*scalableTargetSuspendedStatePtrType)(v)
}

func (*scalableTargetSuspendedStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetSuspendedState)(nil)).Elem()
}

func (i *scalableTargetSuspendedStatePtrType) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return i.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (i *scalableTargetSuspendedStatePtrType) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalableTargetSuspendedStatePtrOutput)
}

// “SuspendedState“ is a property of the [AWS::ApplicationAutoScaling::ScalableTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html) resource that specifies whether the scaling activities for a scalable target are in a suspended state.
//
//	For more information, see [Suspending and resuming scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the *Application Auto Scaling User Guide*.
type ScalableTargetSuspendedStateOutput struct{ *pulumi.OutputState }

func (ScalableTargetSuspendedStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalableTargetSuspendedState)(nil)).Elem()
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStateOutput() ScalableTargetSuspendedStateOutput {
	return o
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStateOutputWithContext(ctx context.Context) ScalableTargetSuspendedStateOutput {
	return o
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return o.ToScalableTargetSuspendedStatePtrOutputWithContext(context.Background())
}

func (o ScalableTargetSuspendedStateOutput) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalableTargetSuspendedState) *ScalableTargetSuspendedState {
		return &v
	}).(ScalableTargetSuspendedStatePtrOutput)
}

// Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Set the value to “true“ if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is “false“.
func (o ScalableTargetSuspendedStateOutput) DynamicScalingInSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.DynamicScalingInSuspended }).(pulumi.BoolPtrOutput)
}

// Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Set the value to “true“ if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is “false“.
func (o ScalableTargetSuspendedStateOutput) DynamicScalingOutSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.DynamicScalingOutSuspended }).(pulumi.BoolPtrOutput)
}

// Whether scheduled scaling is suspended. Set the value to “true“ if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is “false“.
func (o ScalableTargetSuspendedStateOutput) ScheduledScalingSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalableTargetSuspendedState) *bool { return v.ScheduledScalingSuspended }).(pulumi.BoolPtrOutput)
}

type ScalableTargetSuspendedStatePtrOutput struct{ *pulumi.OutputState }

func (ScalableTargetSuspendedStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalableTargetSuspendedState)(nil)).Elem()
}

func (o ScalableTargetSuspendedStatePtrOutput) ToScalableTargetSuspendedStatePtrOutput() ScalableTargetSuspendedStatePtrOutput {
	return o
}

func (o ScalableTargetSuspendedStatePtrOutput) ToScalableTargetSuspendedStatePtrOutputWithContext(ctx context.Context) ScalableTargetSuspendedStatePtrOutput {
	return o
}

func (o ScalableTargetSuspendedStatePtrOutput) Elem() ScalableTargetSuspendedStateOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) ScalableTargetSuspendedState {
		if v != nil {
			return *v
		}
		var ret ScalableTargetSuspendedState
		return ret
	}).(ScalableTargetSuspendedStateOutput)
}

// Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Set the value to “true“ if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is “false“.
func (o ScalableTargetSuspendedStatePtrOutput) DynamicScalingInSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicScalingInSuspended
	}).(pulumi.BoolPtrOutput)
}

// Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Set the value to “true“ if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is “false“.
func (o ScalableTargetSuspendedStatePtrOutput) DynamicScalingOutSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicScalingOutSuspended
	}).(pulumi.BoolPtrOutput)
}

// Whether scheduled scaling is suspended. Set the value to “true“ if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is “false“.
func (o ScalableTargetSuspendedStatePtrOutput) ScheduledScalingSuspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalableTargetSuspendedState) *bool {
		if v == nil {
			return nil
		}
		return v.ScheduledScalingSuspended
	}).(pulumi.BoolPtrOutput)
}

// Contains customized metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	For information about the available metrics for a service, see [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
//	To create your customized metric specification:
//	 +  Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide*.
//	 +  Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.
//
//	For an example of how creating new metrics can be useful, see [Scaling based on Amazon SQS](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-using-sqs-queue.html) in the *Amazon EC2 Auto Scaling User Guide*. This topic mentions Auto Scaling groups, but the same scenario for Amazon SQS can apply to the target tracking scaling policies that you create for a Spot Fleet by using Application Auto Scaling.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html).
//	``CustomizedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyCustomizedMetricSpecification struct {
	// The dimensions of the metric.
	//  Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
	Dimensions []ScalingPolicyMetricDimension `pulumi:"dimensions"`
	// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	MetricName *string `pulumi:"metricName"`
	// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
	Metrics []ScalingPolicyTargetTrackingMetricDataQuery `pulumi:"metrics"`
	// The namespace of the metric.
	Namespace *string `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic *string `pulumi:"statistic"`
	// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit *string `pulumi:"unit"`
}

// ScalingPolicyCustomizedMetricSpecificationInput is an input type that accepts ScalingPolicyCustomizedMetricSpecificationArgs and ScalingPolicyCustomizedMetricSpecificationOutput values.
// You can construct a concrete instance of `ScalingPolicyCustomizedMetricSpecificationInput` via:
//
//	ScalingPolicyCustomizedMetricSpecificationArgs{...}
type ScalingPolicyCustomizedMetricSpecificationInput interface {
	pulumi.Input

	ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput
	ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(context.Context) ScalingPolicyCustomizedMetricSpecificationOutput
}

// Contains customized metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	For information about the available metrics for a service, see [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
//	To create your customized metric specification:
//	 +  Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide*.
//	 +  Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.
//
//	For an example of how creating new metrics can be useful, see [Scaling based on Amazon SQS](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-using-sqs-queue.html) in the *Amazon EC2 Auto Scaling User Guide*. This topic mentions Auto Scaling groups, but the same scenario for Amazon SQS can apply to the target tracking scaling policies that you create for a Spot Fleet by using Application Auto Scaling.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html).
//	``CustomizedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyCustomizedMetricSpecificationArgs struct {
	// The dimensions of the metric.
	//  Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
	Dimensions ScalingPolicyMetricDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
	Metrics ScalingPolicyTargetTrackingMetricDataQueryArrayInput `pulumi:"metrics"`
	// The namespace of the metric.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic pulumi.StringPtrInput `pulumi:"statistic"`
	// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ScalingPolicyCustomizedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationOutput)
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyCustomizedMetricSpecificationArgs) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationOutput).ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx)
}

// ScalingPolicyCustomizedMetricSpecificationPtrInput is an input type that accepts ScalingPolicyCustomizedMetricSpecificationArgs, ScalingPolicyCustomizedMetricSpecificationPtr and ScalingPolicyCustomizedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyCustomizedMetricSpecificationPtrInput` via:
//
//	        ScalingPolicyCustomizedMetricSpecificationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyCustomizedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput
	ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput
}

type scalingPolicyCustomizedMetricSpecificationPtrType ScalingPolicyCustomizedMetricSpecificationArgs

func ScalingPolicyCustomizedMetricSpecificationPtr(v *ScalingPolicyCustomizedMetricSpecificationArgs) ScalingPolicyCustomizedMetricSpecificationPtrInput {
	return (*scalingPolicyCustomizedMetricSpecificationPtrType)(v)
}

func (*scalingPolicyCustomizedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (i *scalingPolicyCustomizedMetricSpecificationPtrType) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyCustomizedMetricSpecificationPtrType) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Contains customized metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	For information about the available metrics for a service, see [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
//	To create your customized metric specification:
//	 +  Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide*.
//	 +  Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.
//
//	For an example of how creating new metrics can be useful, see [Scaling based on Amazon SQS](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-using-sqs-queue.html) in the *Amazon EC2 Auto Scaling User Guide*. This topic mentions Auto Scaling groups, but the same scenario for Amazon SQS can apply to the target tracking scaling policies that you create for a Spot Fleet by using Application Auto Scaling.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html).
//	``CustomizedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyCustomizedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyCustomizedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationOutput() ScalingPolicyCustomizedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyCustomizedMetricSpecificationOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyCustomizedMetricSpecification) *ScalingPolicyCustomizedMetricSpecification {
		return &v
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// The dimensions of the metric.
//
//	Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Dimensions() ScalingPolicyMetricDimensionArrayOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyMetricDimension { return v.Dimensions }).(ScalingPolicyMetricDimensionArrayOutput)
}

// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyCustomizedMetricSpecificationOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Metrics() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyTargetTrackingMetricDataQuery {
		return v.Metrics
	}).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The namespace of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The statistic of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Statistic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Statistic }).(pulumi.StringPtrOutput)
}

// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyCustomizedMetricSpecificationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyCustomizedMetricSpecification) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ScalingPolicyCustomizedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyCustomizedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyCustomizedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutput() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) ToScalingPolicyCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Elem() ScalingPolicyCustomizedMetricSpecificationOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) ScalingPolicyCustomizedMetricSpecification {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyCustomizedMetricSpecification
		return ret
	}).(ScalingPolicyCustomizedMetricSpecificationOutput)
}

// The dimensions of the metric.
//
//	Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Dimensions() ScalingPolicyMetricDimensionArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ScalingPolicyMetricDimensionArrayOutput)
}

// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Metrics() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) []ScalingPolicyTargetTrackingMetricDataQuery {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The namespace of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The statistic of the metric.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Statistic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Statistic
	}).(pulumi.StringPtrOutput)
}

// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyCustomizedMetricSpecificationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// “MetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyMetricDimension struct {
	// The name of the dimension.
	Name string `pulumi:"name"`
	// The value of the dimension.
	Value string `pulumi:"value"`
}

// ScalingPolicyMetricDimensionInput is an input type that accepts ScalingPolicyMetricDimensionArgs and ScalingPolicyMetricDimensionOutput values.
// You can construct a concrete instance of `ScalingPolicyMetricDimensionInput` via:
//
//	ScalingPolicyMetricDimensionArgs{...}
type ScalingPolicyMetricDimensionInput interface {
	pulumi.Input

	ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput
	ToScalingPolicyMetricDimensionOutputWithContext(context.Context) ScalingPolicyMetricDimensionOutput
}

// “MetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ScalingPolicyMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyMetricDimensionArgs) ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput {
	return i.ToScalingPolicyMetricDimensionOutputWithContext(context.Background())
}

func (i ScalingPolicyMetricDimensionArgs) ToScalingPolicyMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyMetricDimensionOutput)
}

// ScalingPolicyMetricDimensionArrayInput is an input type that accepts ScalingPolicyMetricDimensionArray and ScalingPolicyMetricDimensionArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyMetricDimensionArrayInput` via:
//
//	ScalingPolicyMetricDimensionArray{ ScalingPolicyMetricDimensionArgs{...} }
type ScalingPolicyMetricDimensionArrayInput interface {
	pulumi.Input

	ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput
	ToScalingPolicyMetricDimensionArrayOutputWithContext(context.Context) ScalingPolicyMetricDimensionArrayOutput
}

type ScalingPolicyMetricDimensionArray []ScalingPolicyMetricDimensionInput

func (ScalingPolicyMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyMetricDimensionArray) ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput {
	return i.ToScalingPolicyMetricDimensionArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyMetricDimensionArray) ToScalingPolicyMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyMetricDimensionArrayOutput)
}

// “MetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyMetricDimensionOutput struct{ *pulumi.OutputState }

func (ScalingPolicyMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyMetricDimensionOutput) ToScalingPolicyMetricDimensionOutput() ScalingPolicyMetricDimensionOutput {
	return o
}

func (o ScalingPolicyMetricDimensionOutput) ToScalingPolicyMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o ScalingPolicyMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyMetricDimension) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the dimension.
func (o ScalingPolicyMetricDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyMetricDimension) string { return v.Value }).(pulumi.StringOutput)
}

type ScalingPolicyMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyMetricDimensionArrayOutput) ToScalingPolicyMetricDimensionArrayOutput() ScalingPolicyMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyMetricDimensionArrayOutput) ToScalingPolicyMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyMetricDimensionArrayOutput) Index(i pulumi.IntInput) ScalingPolicyMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyMetricDimension {
		return vs[0].([]ScalingPolicyMetricDimension)[vs[1].(int)]
	}).(ScalingPolicyMetricDimensionOutput)
}

// Contains predefined metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	``PredefinedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyPredefinedMetricSpecification struct {
	// The metric type. The ``ALBRequestCountPerTarget`` metric type applies only to Spot fleet requests and ECS services.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ``ALBRequestCountPerTarget`` and there is a target group attached to the Spot Fleet or ECS service.
	//  You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:
	//  ``app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff``.
	//  Where:
	//   +  app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN
	//   +  targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.
	//
	//  To find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// ScalingPolicyPredefinedMetricSpecificationInput is an input type that accepts ScalingPolicyPredefinedMetricSpecificationArgs and ScalingPolicyPredefinedMetricSpecificationOutput values.
// You can construct a concrete instance of `ScalingPolicyPredefinedMetricSpecificationInput` via:
//
//	ScalingPolicyPredefinedMetricSpecificationArgs{...}
type ScalingPolicyPredefinedMetricSpecificationInput interface {
	pulumi.Input

	ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput
	ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(context.Context) ScalingPolicyPredefinedMetricSpecificationOutput
}

// Contains predefined metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	``PredefinedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyPredefinedMetricSpecificationArgs struct {
	// The metric type. The ``ALBRequestCountPerTarget`` metric type applies only to Spot fleet requests and ECS services.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ``ALBRequestCountPerTarget`` and there is a target group attached to the Spot Fleet or ECS service.
	//  You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:
	//  ``app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff``.
	//  Where:
	//   +  app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN
	//   +  targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.
	//
	//  To find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (ScalingPolicyPredefinedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationOutput)
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredefinedMetricSpecificationArgs) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationOutput).ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx)
}

// ScalingPolicyPredefinedMetricSpecificationPtrInput is an input type that accepts ScalingPolicyPredefinedMetricSpecificationArgs, ScalingPolicyPredefinedMetricSpecificationPtr and ScalingPolicyPredefinedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredefinedMetricSpecificationPtrInput` via:
//
//	        ScalingPolicyPredefinedMetricSpecificationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredefinedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput
	ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput
}

type scalingPolicyPredefinedMetricSpecificationPtrType ScalingPolicyPredefinedMetricSpecificationArgs

func ScalingPolicyPredefinedMetricSpecificationPtr(v *ScalingPolicyPredefinedMetricSpecificationArgs) ScalingPolicyPredefinedMetricSpecificationPtrInput {
	return (*scalingPolicyPredefinedMetricSpecificationPtrType)(v)
}

func (*scalingPolicyPredefinedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (i *scalingPolicyPredefinedMetricSpecificationPtrType) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return i.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredefinedMetricSpecificationPtrType) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// Contains predefined metric specification information for a target tracking scaling policy for Application Auto Scaling.
//
//	``PredefinedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
type ScalingPolicyPredefinedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredefinedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationOutput() ScalingPolicyPredefinedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredefinedMetricSpecificationOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredefinedMetricSpecification) *ScalingPolicyPredefinedMetricSpecification {
		return &v
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The metric type. The “ALBRequestCountPerTarget“ metric type applies only to Spot fleet requests and ECS services.
func (o ScalingPolicyPredefinedMetricSpecificationOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyPredefinedMetricSpecification) string { return v.PredefinedMetricType }).(pulumi.StringOutput)
}

// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is “ALBRequestCountPerTarget“ and there is a target group attached to the Spot Fleet or ECS service.
//
//	You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:
//	``app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff``.
//	Where:
//	 +  app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN
//	 +  targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.
//
//	To find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.
func (o ScalingPolicyPredefinedMetricSpecificationOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredefinedMetricSpecification) *string { return v.ResourceLabel }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredefinedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredefinedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredefinedMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutput() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ToScalingPolicyPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) Elem() ScalingPolicyPredefinedMetricSpecificationOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) ScalingPolicyPredefinedMetricSpecification {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredefinedMetricSpecification
		return ret
	}).(ScalingPolicyPredefinedMetricSpecificationOutput)
}

// The metric type. The “ALBRequestCountPerTarget“ metric type applies only to Spot fleet requests and ECS services.
func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is “ALBRequestCountPerTarget“ and there is a target group attached to the Spot Fleet or ECS service.
//
//	You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:
//	``app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff``.
//	Where:
//	 +  app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN
//	 +  targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.
//
//	To find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.
func (o ScalingPolicyPredefinedMetricSpecificationPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

// Represents a CloudWatch metric of your choosing for a predictive scaling policy.
type ScalingPolicyPredictiveScalingCustomizedCapacityMetric struct {
	// One or more metric data queries to provide data points for a metric specification.
	MetricDataQueries []ScalingPolicyPredictiveScalingMetricDataQuery `pulumi:"metricDataQueries"`
}

// ScalingPolicyPredictiveScalingCustomizedCapacityMetricInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs and ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedCapacityMetricInput` via:
//
//	ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs{...}
type ScalingPolicyPredictiveScalingCustomizedCapacityMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput
	ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput
}

// Represents a CloudWatch metric of your choosing for a predictive scaling policy.
type ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs struct {
	// One or more metric data queries to provide data points for a metric specification.
	MetricDataQueries ScalingPolicyPredictiveScalingMetricDataQueryArrayInput `pulumi:"metricDataQueries"`
}

func (ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedCapacityMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput)
}

func (i ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput).ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs, ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtr and ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput
	ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput
}

type scalingPolicyPredictiveScalingCustomizedCapacityMetricPtrType ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs

func ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtr(v *ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput {
	return (*scalingPolicyPredictiveScalingCustomizedCapacityMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingCustomizedCapacityMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedCapacityMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingCustomizedCapacityMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingCustomizedCapacityMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput)
}

// Represents a CloudWatch metric of your choosing for a predictive scaling policy.
type ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedCapacityMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingCustomizedCapacityMetric) *ScalingPolicyPredictiveScalingCustomizedCapacityMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput)
}

// One or more metric data queries to provide data points for a metric specification.
func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingCustomizedCapacityMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

type ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedCapacityMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedCapacityMetric) ScalingPolicyPredictiveScalingCustomizedCapacityMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingCustomizedCapacityMetric
		return ret
	}).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput)
}

// One or more metric data queries to provide data points for a metric specification.
func (o ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedCapacityMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		if v == nil {
			return nil
		}
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

// The customized load metric specification.
type ScalingPolicyPredictiveScalingCustomizedLoadMetric struct {
	MetricDataQueries []ScalingPolicyPredictiveScalingMetricDataQuery `pulumi:"metricDataQueries"`
}

// ScalingPolicyPredictiveScalingCustomizedLoadMetricInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs and ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedLoadMetricInput` via:
//
//	ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs{...}
type ScalingPolicyPredictiveScalingCustomizedLoadMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput
	ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput
}

// The customized load metric specification.
type ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs struct {
	MetricDataQueries ScalingPolicyPredictiveScalingMetricDataQueryArrayInput `pulumi:"metricDataQueries"`
}

func (ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedLoadMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput)
}

func (i ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput).ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs, ScalingPolicyPredictiveScalingCustomizedLoadMetricPtr and ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput
	ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput
}

type scalingPolicyPredictiveScalingCustomizedLoadMetricPtrType ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs

func ScalingPolicyPredictiveScalingCustomizedLoadMetricPtr(v *ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput {
	return (*scalingPolicyPredictiveScalingCustomizedLoadMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingCustomizedLoadMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedLoadMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingCustomizedLoadMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingCustomizedLoadMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput)
}

// The customized load metric specification.
type ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedLoadMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingCustomizedLoadMetric) *ScalingPolicyPredictiveScalingCustomizedLoadMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput)
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingCustomizedLoadMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

type ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedLoadMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedLoadMetric) ScalingPolicyPredictiveScalingCustomizedLoadMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingCustomizedLoadMetric
		return ret
	}).(ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput)
}

func (o ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedLoadMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		if v == nil {
			return nil
		}
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

// One or more metric data queries to provide data points for a metric specification.
type ScalingPolicyPredictiveScalingCustomizedScalingMetric struct {
	// One or more metric data queries to provide data points for a metric specification.
	MetricDataQueries []ScalingPolicyPredictiveScalingMetricDataQuery `pulumi:"metricDataQueries"`
}

// ScalingPolicyPredictiveScalingCustomizedScalingMetricInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs and ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedScalingMetricInput` via:
//
//	ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs{...}
type ScalingPolicyPredictiveScalingCustomizedScalingMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput
	ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput
}

// One or more metric data queries to provide data points for a metric specification.
type ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs struct {
	// One or more metric data queries to provide data points for a metric specification.
	MetricDataQueries ScalingPolicyPredictiveScalingMetricDataQueryArrayInput `pulumi:"metricDataQueries"`
}

func (ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedScalingMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput)
}

func (i ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput).ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs, ScalingPolicyPredictiveScalingCustomizedScalingMetricPtr and ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput
	ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput
}

type scalingPolicyPredictiveScalingCustomizedScalingMetricPtrType ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs

func ScalingPolicyPredictiveScalingCustomizedScalingMetricPtr(v *ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput {
	return (*scalingPolicyPredictiveScalingCustomizedScalingMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingCustomizedScalingMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedScalingMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingCustomizedScalingMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingCustomizedScalingMetricPtrType) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput)
}

// One or more metric data queries to provide data points for a metric specification.
type ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingCustomizedScalingMetric) *ScalingPolicyPredictiveScalingCustomizedScalingMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput)
}

// One or more metric data queries to provide data points for a metric specification.
func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingCustomizedScalingMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

type ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingCustomizedScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedScalingMetric) ScalingPolicyPredictiveScalingCustomizedScalingMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingCustomizedScalingMetric
		return ret
	}).(ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput)
}

// One or more metric data queries to provide data points for a metric specification.
func (o ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput) MetricDataQueries() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingCustomizedScalingMetric) []ScalingPolicyPredictiveScalingMetricDataQuery {
		if v == nil {
			return nil
		}
		return v.MetricDataQueries
	}).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

// Describes the scaling metric.
type ScalingPolicyPredictiveScalingMetric struct {
	// Describes the dimensions of the metric.
	Dimensions []ScalingPolicyPredictiveScalingMetricDimension `pulumi:"dimensions"`
	// The name of the metric.
	MetricName *string `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace *string `pulumi:"namespace"`
}

// ScalingPolicyPredictiveScalingMetricInput is an input type that accepts ScalingPolicyPredictiveScalingMetricArgs and ScalingPolicyPredictiveScalingMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricInput` via:
//
//	ScalingPolicyPredictiveScalingMetricArgs{...}
type ScalingPolicyPredictiveScalingMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricOutput() ScalingPolicyPredictiveScalingMetricOutput
	ToScalingPolicyPredictiveScalingMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricOutput
}

// Describes the scaling metric.
type ScalingPolicyPredictiveScalingMetricArgs struct {
	// Describes the dimensions of the metric.
	Dimensions ScalingPolicyPredictiveScalingMetricDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ScalingPolicyPredictiveScalingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricArgs) ToScalingPolicyPredictiveScalingMetricOutput() ScalingPolicyPredictiveScalingMetricOutput {
	return i.ToScalingPolicyPredictiveScalingMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricArgs) ToScalingPolicyPredictiveScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricOutput)
}

func (i ScalingPolicyPredictiveScalingMetricArgs) ToScalingPolicyPredictiveScalingMetricPtrOutput() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricArgs) ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricOutput).ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingMetricArgs, ScalingPolicyPredictiveScalingMetricPtr and ScalingPolicyPredictiveScalingMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricPtrOutput() ScalingPolicyPredictiveScalingMetricPtrOutput
	ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricPtrOutput
}

type scalingPolicyPredictiveScalingMetricPtrType ScalingPolicyPredictiveScalingMetricArgs

func ScalingPolicyPredictiveScalingMetricPtr(v *ScalingPolicyPredictiveScalingMetricArgs) ScalingPolicyPredictiveScalingMetricPtrInput {
	return (*scalingPolicyPredictiveScalingMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingMetricPtrType) ToScalingPolicyPredictiveScalingMetricPtrOutput() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingMetricPtrType) ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricPtrOutput)
}

// Describes the scaling metric.
type ScalingPolicyPredictiveScalingMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricOutput) ToScalingPolicyPredictiveScalingMetricOutput() ScalingPolicyPredictiveScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricOutput) ToScalingPolicyPredictiveScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricOutput) ToScalingPolicyPredictiveScalingMetricPtrOutput() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingMetricOutput) ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingMetric) *ScalingPolicyPredictiveScalingMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingMetricPtrOutput)
}

// Describes the dimensions of the metric.
func (o ScalingPolicyPredictiveScalingMetricOutput) Dimensions() ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetric) []ScalingPolicyPredictiveScalingMetricDimension {
		return v.Dimensions
	}).(ScalingPolicyPredictiveScalingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyPredictiveScalingMetricOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetric) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The namespace of the metric.
func (o ScalingPolicyPredictiveScalingMetricOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetric) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingMetricPtrOutput() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetric) ScalingPolicyPredictiveScalingMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingMetric
		return ret
	}).(ScalingPolicyPredictiveScalingMetricOutput)
}

// Describes the dimensions of the metric.
func (o ScalingPolicyPredictiveScalingMetricPtrOutput) Dimensions() ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetric) []ScalingPolicyPredictiveScalingMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ScalingPolicyPredictiveScalingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyPredictiveScalingMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetric) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric.
func (o ScalingPolicyPredictiveScalingMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetric) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyPredictiveScalingMetricDataQuery struct {
	// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	Expression *string `pulumi:"expression"`
	// A short name that identifies the object's results in the response. This name must be unique among all ``MetricDataQuery`` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
	Id *string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label *string `pulumi:"label"`
	// Information about the metric data to return.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	MetricStat *ScalingPolicyPredictiveScalingMetricStat `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	//  If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
	//  If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
	ReturnData *bool `pulumi:"returnData"`
}

// ScalingPolicyPredictiveScalingMetricDataQueryInput is an input type that accepts ScalingPolicyPredictiveScalingMetricDataQueryArgs and ScalingPolicyPredictiveScalingMetricDataQueryOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricDataQueryInput` via:
//
//	ScalingPolicyPredictiveScalingMetricDataQueryArgs{...}
type ScalingPolicyPredictiveScalingMetricDataQueryInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricDataQueryOutput() ScalingPolicyPredictiveScalingMetricDataQueryOutput
	ToScalingPolicyPredictiveScalingMetricDataQueryOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricDataQueryOutput
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyPredictiveScalingMetricDataQueryArgs struct {
	// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// A short name that identifies the object's results in the response. This name must be unique among all ``MetricDataQuery`` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Information about the metric data to return.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	MetricStat ScalingPolicyPredictiveScalingMetricStatPtrInput `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	//  If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
	//  If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
	ReturnData pulumi.BoolPtrInput `pulumi:"returnData"`
}

func (ScalingPolicyPredictiveScalingMetricDataQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricDataQueryArgs) ToScalingPolicyPredictiveScalingMetricDataQueryOutput() ScalingPolicyPredictiveScalingMetricDataQueryOutput {
	return i.ToScalingPolicyPredictiveScalingMetricDataQueryOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricDataQueryArgs) ToScalingPolicyPredictiveScalingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDataQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricDataQueryOutput)
}

// ScalingPolicyPredictiveScalingMetricDataQueryArrayInput is an input type that accepts ScalingPolicyPredictiveScalingMetricDataQueryArray and ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricDataQueryArrayInput` via:
//
//	ScalingPolicyPredictiveScalingMetricDataQueryArray{ ScalingPolicyPredictiveScalingMetricDataQueryArgs{...} }
type ScalingPolicyPredictiveScalingMetricDataQueryArrayInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutput() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput
	ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput
}

type ScalingPolicyPredictiveScalingMetricDataQueryArray []ScalingPolicyPredictiveScalingMetricDataQueryInput

func (ScalingPolicyPredictiveScalingMetricDataQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricDataQueryArray) ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutput() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return i.ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricDataQueryArray) ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
type ScalingPolicyPredictiveScalingMetricDataQueryOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricDataQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) ToScalingPolicyPredictiveScalingMetricDataQueryOutput() ScalingPolicyPredictiveScalingMetricDataQueryOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) ToScalingPolicyPredictiveScalingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDataQueryOutput {
	return o
}

// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the “Id“ of the other metrics to refer to those metrics, and can also use the “Id“ of other expressions to use the result of those expressions.
//
//	Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDataQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name that identifies the object's results in the response. This name must be unique among all “MetricDataQuery“ objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDataQuery) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDataQuery) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Information about the metric data to return.
//
//	Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) MetricStat() ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDataQuery) *ScalingPolicyPredictiveScalingMetricStat {
		return v.MetricStat
	}).(ScalingPolicyPredictiveScalingMetricStatPtrOutput)
}

// Indicates whether to return the timestamps and raw data values of this metric.
//
//	If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
//	If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
func (o ScalingPolicyPredictiveScalingMetricDataQueryOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDataQuery) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput) ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutput() ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput) ToScalingPolicyPredictiveScalingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput) Index(i pulumi.IntInput) ScalingPolicyPredictiveScalingMetricDataQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyPredictiveScalingMetricDataQuery {
		return vs[0].([]ScalingPolicyPredictiveScalingMetricDataQuery)[vs[1].(int)]
	}).(ScalingPolicyPredictiveScalingMetricDataQueryOutput)
}

// Describes the dimension of a metric.
type ScalingPolicyPredictiveScalingMetricDimension struct {
	// The name of the dimension.
	Name *string `pulumi:"name"`
	// The value of the dimension.
	Value *string `pulumi:"value"`
}

// ScalingPolicyPredictiveScalingMetricDimensionInput is an input type that accepts ScalingPolicyPredictiveScalingMetricDimensionArgs and ScalingPolicyPredictiveScalingMetricDimensionOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricDimensionInput` via:
//
//	ScalingPolicyPredictiveScalingMetricDimensionArgs{...}
type ScalingPolicyPredictiveScalingMetricDimensionInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricDimensionOutput() ScalingPolicyPredictiveScalingMetricDimensionOutput
	ToScalingPolicyPredictiveScalingMetricDimensionOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricDimensionOutput
}

// Describes the dimension of a metric.
type ScalingPolicyPredictiveScalingMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScalingPolicyPredictiveScalingMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricDimensionArgs) ToScalingPolicyPredictiveScalingMetricDimensionOutput() ScalingPolicyPredictiveScalingMetricDimensionOutput {
	return i.ToScalingPolicyPredictiveScalingMetricDimensionOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricDimensionArgs) ToScalingPolicyPredictiveScalingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricDimensionOutput)
}

// ScalingPolicyPredictiveScalingMetricDimensionArrayInput is an input type that accepts ScalingPolicyPredictiveScalingMetricDimensionArray and ScalingPolicyPredictiveScalingMetricDimensionArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricDimensionArrayInput` via:
//
//	ScalingPolicyPredictiveScalingMetricDimensionArray{ ScalingPolicyPredictiveScalingMetricDimensionArgs{...} }
type ScalingPolicyPredictiveScalingMetricDimensionArrayInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricDimensionArrayOutput() ScalingPolicyPredictiveScalingMetricDimensionArrayOutput
	ToScalingPolicyPredictiveScalingMetricDimensionArrayOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricDimensionArrayOutput
}

type ScalingPolicyPredictiveScalingMetricDimensionArray []ScalingPolicyPredictiveScalingMetricDimensionInput

func (ScalingPolicyPredictiveScalingMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricDimensionArray) ToScalingPolicyPredictiveScalingMetricDimensionArrayOutput() ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return i.ToScalingPolicyPredictiveScalingMetricDimensionArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricDimensionArray) ToScalingPolicyPredictiveScalingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricDimensionArrayOutput)
}

// Describes the dimension of a metric.
type ScalingPolicyPredictiveScalingMetricDimensionOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricDimensionOutput) ToScalingPolicyPredictiveScalingMetricDimensionOutput() ScalingPolicyPredictiveScalingMetricDimensionOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDimensionOutput) ToScalingPolicyPredictiveScalingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o ScalingPolicyPredictiveScalingMetricDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the dimension.
func (o ScalingPolicyPredictiveScalingMetricDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricDimensionArrayOutput) ToScalingPolicyPredictiveScalingMetricDimensionArrayOutput() ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDimensionArrayOutput) ToScalingPolicyPredictiveScalingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricDimensionArrayOutput) Index(i pulumi.IntInput) ScalingPolicyPredictiveScalingMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyPredictiveScalingMetricDimension {
		return vs[0].([]ScalingPolicyPredictiveScalingMetricDimension)[vs[1].(int)]
	}).(ScalingPolicyPredictiveScalingMetricDimensionOutput)
}

// This structure specifies the metrics and target utilization settings for a predictive scaling policy.
//
//	You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.
type ScalingPolicyPredictiveScalingMetricSpecification struct {
	// The customized capacity metric specification.
	CustomizedCapacityMetricSpecification *ScalingPolicyPredictiveScalingCustomizedCapacityMetric `pulumi:"customizedCapacityMetricSpecification"`
	// The customized load metric specification.
	CustomizedLoadMetricSpecification *ScalingPolicyPredictiveScalingCustomizedLoadMetric `pulumi:"customizedLoadMetricSpecification"`
	// The customized scaling metric specification.
	CustomizedScalingMetricSpecification *ScalingPolicyPredictiveScalingCustomizedScalingMetric `pulumi:"customizedScalingMetricSpecification"`
	// The predefined load metric specification.
	PredefinedLoadMetricSpecification *ScalingPolicyPredictiveScalingPredefinedLoadMetric `pulumi:"predefinedLoadMetricSpecification"`
	// The predefined metric pair specification that determines the appropriate scaling metric and load metric to use.
	PredefinedMetricPairSpecification *ScalingPolicyPredictiveScalingPredefinedMetricPair `pulumi:"predefinedMetricPairSpecification"`
	// The predefined scaling metric specification.
	PredefinedScalingMetricSpecification *ScalingPolicyPredictiveScalingPredefinedScalingMetric `pulumi:"predefinedScalingMetricSpecification"`
	// Specifies the target utilization.
	TargetValue float64 `pulumi:"targetValue"`
}

// ScalingPolicyPredictiveScalingMetricSpecificationInput is an input type that accepts ScalingPolicyPredictiveScalingMetricSpecificationArgs and ScalingPolicyPredictiveScalingMetricSpecificationOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricSpecificationInput` via:
//
//	ScalingPolicyPredictiveScalingMetricSpecificationArgs{...}
type ScalingPolicyPredictiveScalingMetricSpecificationInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricSpecificationOutput() ScalingPolicyPredictiveScalingMetricSpecificationOutput
	ToScalingPolicyPredictiveScalingMetricSpecificationOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricSpecificationOutput
}

// This structure specifies the metrics and target utilization settings for a predictive scaling policy.
//
//	You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.
type ScalingPolicyPredictiveScalingMetricSpecificationArgs struct {
	// The customized capacity metric specification.
	CustomizedCapacityMetricSpecification ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput `pulumi:"customizedCapacityMetricSpecification"`
	// The customized load metric specification.
	CustomizedLoadMetricSpecification ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput `pulumi:"customizedLoadMetricSpecification"`
	// The customized scaling metric specification.
	CustomizedScalingMetricSpecification ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput `pulumi:"customizedScalingMetricSpecification"`
	// The predefined load metric specification.
	PredefinedLoadMetricSpecification ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput `pulumi:"predefinedLoadMetricSpecification"`
	// The predefined metric pair specification that determines the appropriate scaling metric and load metric to use.
	PredefinedMetricPairSpecification ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput `pulumi:"predefinedMetricPairSpecification"`
	// The predefined scaling metric specification.
	PredefinedScalingMetricSpecification ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput `pulumi:"predefinedScalingMetricSpecification"`
	// Specifies the target utilization.
	TargetValue pulumi.Float64Input `pulumi:"targetValue"`
}

func (ScalingPolicyPredictiveScalingMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricSpecificationArgs) ToScalingPolicyPredictiveScalingMetricSpecificationOutput() ScalingPolicyPredictiveScalingMetricSpecificationOutput {
	return i.ToScalingPolicyPredictiveScalingMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricSpecificationArgs) ToScalingPolicyPredictiveScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricSpecificationOutput)
}

// ScalingPolicyPredictiveScalingMetricSpecificationArrayInput is an input type that accepts ScalingPolicyPredictiveScalingMetricSpecificationArray and ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricSpecificationArrayInput` via:
//
//	ScalingPolicyPredictiveScalingMetricSpecificationArray{ ScalingPolicyPredictiveScalingMetricSpecificationArgs{...} }
type ScalingPolicyPredictiveScalingMetricSpecificationArrayInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutput() ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput
	ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput
}

type ScalingPolicyPredictiveScalingMetricSpecificationArray []ScalingPolicyPredictiveScalingMetricSpecificationInput

func (ScalingPolicyPredictiveScalingMetricSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricSpecification)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricSpecificationArray) ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutput() ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return i.ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricSpecificationArray) ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput)
}

// This structure specifies the metrics and target utilization settings for a predictive scaling policy.
//
//	You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.
type ScalingPolicyPredictiveScalingMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) ToScalingPolicyPredictiveScalingMetricSpecificationOutput() ScalingPolicyPredictiveScalingMetricSpecificationOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) ToScalingPolicyPredictiveScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricSpecificationOutput {
	return o
}

// The customized capacity metric specification.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) CustomizedCapacityMetricSpecification() ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingCustomizedCapacityMetric {
		return v.CustomizedCapacityMetricSpecification
	}).(ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput)
}

// The customized load metric specification.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) CustomizedLoadMetricSpecification() ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingCustomizedLoadMetric {
		return v.CustomizedLoadMetricSpecification
	}).(ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput)
}

// The customized scaling metric specification.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) CustomizedScalingMetricSpecification() ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingCustomizedScalingMetric {
		return v.CustomizedScalingMetricSpecification
	}).(ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput)
}

// The predefined load metric specification.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) PredefinedLoadMetricSpecification() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingPredefinedLoadMetric {
		return v.PredefinedLoadMetricSpecification
	}).(ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput)
}

// The predefined metric pair specification that determines the appropriate scaling metric and load metric to use.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) PredefinedMetricPairSpecification() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingPredefinedMetricPair {
		return v.PredefinedMetricPairSpecification
	}).(ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput)
}

// The predefined scaling metric specification.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) PredefinedScalingMetricSpecification() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) *ScalingPolicyPredictiveScalingPredefinedScalingMetric {
		return v.PredefinedScalingMetricSpecification
	}).(ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput)
}

// Specifies the target utilization.
func (o ScalingPolicyPredictiveScalingMetricSpecificationOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricSpecification) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyPredictiveScalingMetricSpecification)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput) ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutput() ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput) ToScalingPolicyPredictiveScalingMetricSpecificationArrayOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput) Index(i pulumi.IntInput) ScalingPolicyPredictiveScalingMetricSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyPredictiveScalingMetricSpecification {
		return vs[0].([]ScalingPolicyPredictiveScalingMetricSpecification)[vs[1].(int)]
	}).(ScalingPolicyPredictiveScalingMetricSpecificationOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
type ScalingPolicyPredictiveScalingMetricStat struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	Metric *ScalingPolicyPredictiveScalingMetric `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
	//  The most commonly used metrics for predictive scaling are ``Average`` and ``Sum``.
	Stat *string `pulumi:"stat"`
	// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit *string `pulumi:"unit"`
}

// ScalingPolicyPredictiveScalingMetricStatInput is an input type that accepts ScalingPolicyPredictiveScalingMetricStatArgs and ScalingPolicyPredictiveScalingMetricStatOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricStatInput` via:
//
//	ScalingPolicyPredictiveScalingMetricStatArgs{...}
type ScalingPolicyPredictiveScalingMetricStatInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricStatOutput() ScalingPolicyPredictiveScalingMetricStatOutput
	ToScalingPolicyPredictiveScalingMetricStatOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricStatOutput
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
type ScalingPolicyPredictiveScalingMetricStatArgs struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	Metric ScalingPolicyPredictiveScalingMetricPtrInput `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
	//  The most commonly used metrics for predictive scaling are ``Average`` and ``Sum``.
	Stat pulumi.StringPtrInput `pulumi:"stat"`
	// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ScalingPolicyPredictiveScalingMetricStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricStat)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingMetricStatArgs) ToScalingPolicyPredictiveScalingMetricStatOutput() ScalingPolicyPredictiveScalingMetricStatOutput {
	return i.ToScalingPolicyPredictiveScalingMetricStatOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricStatArgs) ToScalingPolicyPredictiveScalingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricStatOutput)
}

func (i ScalingPolicyPredictiveScalingMetricStatArgs) ToScalingPolicyPredictiveScalingMetricStatPtrOutput() ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return i.ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingMetricStatArgs) ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricStatOutput).ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingMetricStatPtrInput is an input type that accepts ScalingPolicyPredictiveScalingMetricStatArgs, ScalingPolicyPredictiveScalingMetricStatPtr and ScalingPolicyPredictiveScalingMetricStatPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingMetricStatPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingMetricStatArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingMetricStatPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingMetricStatPtrOutput() ScalingPolicyPredictiveScalingMetricStatPtrOutput
	ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingMetricStatPtrOutput
}

type scalingPolicyPredictiveScalingMetricStatPtrType ScalingPolicyPredictiveScalingMetricStatArgs

func ScalingPolicyPredictiveScalingMetricStatPtr(v *ScalingPolicyPredictiveScalingMetricStatArgs) ScalingPolicyPredictiveScalingMetricStatPtrInput {
	return (*scalingPolicyPredictiveScalingMetricStatPtrType)(v)
}

func (*scalingPolicyPredictiveScalingMetricStatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingMetricStat)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingMetricStatPtrType) ToScalingPolicyPredictiveScalingMetricStatPtrOutput() ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return i.ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingMetricStatPtrType) ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingMetricStatPtrOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
type ScalingPolicyPredictiveScalingMetricStatOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricStatOutput) ToScalingPolicyPredictiveScalingMetricStatOutput() ScalingPolicyPredictiveScalingMetricStatOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricStatOutput) ToScalingPolicyPredictiveScalingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricStatOutput) ToScalingPolicyPredictiveScalingMetricStatPtrOutput() ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return o.ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingMetricStatOutput) ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingMetricStat) *ScalingPolicyPredictiveScalingMetricStat {
		return &v
	}).(ScalingPolicyPredictiveScalingMetricStatPtrOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyPredictiveScalingMetricStatOutput) Metric() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricStat) *ScalingPolicyPredictiveScalingMetric {
		return v.Metric
	}).(ScalingPolicyPredictiveScalingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
//
//	The most commonly used metrics for predictive scaling are ``Average`` and ``Sum``.
func (o ScalingPolicyPredictiveScalingMetricStatOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricStat) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyPredictiveScalingMetricStatOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingMetricStat) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingMetricStatPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingMetricStatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) ToScalingPolicyPredictiveScalingMetricStatPtrOutput() ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) ToScalingPolicyPredictiveScalingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) Elem() ScalingPolicyPredictiveScalingMetricStatOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetricStat) ScalingPolicyPredictiveScalingMetricStat {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingMetricStat
		return ret
	}).(ScalingPolicyPredictiveScalingMetricStatOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) Metric() ScalingPolicyPredictiveScalingMetricPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetricStat) *ScalingPolicyPredictiveScalingMetric {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(ScalingPolicyPredictiveScalingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
//
//	The most commonly used metrics for predictive scaling are ``Average`` and ``Sum``.
func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyPredictiveScalingMetricStatPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// Represents a predictive scaling policy configuration. Predictive scaling is supported on Amazon ECS services.
type ScalingPolicyPredictiveScalingPolicyConfiguration struct {
	// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Defaults to ``HonorMaxCapacity`` if not specified.
	MaxCapacityBreachBehavior *string `pulumi:"maxCapacityBreachBehavior"`
	// The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.
	//  Required if the ``MaxCapacityBreachBehavior`` property is set to ``IncreaseMaxCapacity``, and cannot be used otherwise.
	MaxCapacityBuffer *int `pulumi:"maxCapacityBuffer"`
	// This structure includes the metrics and target utilization to use for predictive scaling.
	//  This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.
	MetricSpecifications []ScalingPolicyPredictiveScalingMetricSpecification `pulumi:"metricSpecifications"`
	// The predictive scaling mode. Defaults to ``ForecastOnly`` if not specified.
	Mode *string `pulumi:"mode"`
	// The amount of time, in seconds, that the start time can be advanced.
	//  The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified.
	SchedulingBufferTime *int `pulumi:"schedulingBufferTime"`
}

// ScalingPolicyPredictiveScalingPolicyConfigurationInput is an input type that accepts ScalingPolicyPredictiveScalingPolicyConfigurationArgs and ScalingPolicyPredictiveScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPolicyConfigurationInput` via:
//
//	ScalingPolicyPredictiveScalingPolicyConfigurationArgs{...}
type ScalingPolicyPredictiveScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPolicyConfigurationOutput() ScalingPolicyPredictiveScalingPolicyConfigurationOutput
	ToScalingPolicyPredictiveScalingPolicyConfigurationOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationOutput
}

// Represents a predictive scaling policy configuration. Predictive scaling is supported on Amazon ECS services.
type ScalingPolicyPredictiveScalingPolicyConfigurationArgs struct {
	// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Defaults to ``HonorMaxCapacity`` if not specified.
	MaxCapacityBreachBehavior pulumi.StringPtrInput `pulumi:"maxCapacityBreachBehavior"`
	// The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.
	//  Required if the ``MaxCapacityBreachBehavior`` property is set to ``IncreaseMaxCapacity``, and cannot be used otherwise.
	MaxCapacityBuffer pulumi.IntPtrInput `pulumi:"maxCapacityBuffer"`
	// This structure includes the metrics and target utilization to use for predictive scaling.
	//  This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.
	MetricSpecifications ScalingPolicyPredictiveScalingMetricSpecificationArrayInput `pulumi:"metricSpecifications"`
	// The predictive scaling mode. Defaults to ``ForecastOnly`` if not specified.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The amount of time, in seconds, that the start time can be advanced.
	//  The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified.
	SchedulingBufferTime pulumi.IntPtrInput `pulumi:"schedulingBufferTime"`
}

func (ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPolicyConfiguration)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ToScalingPolicyPredictiveScalingPolicyConfigurationOutput() ScalingPolicyPredictiveScalingPolicyConfigurationOutput {
	return i.ToScalingPolicyPredictiveScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ToScalingPolicyPredictiveScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPolicyConfigurationOutput)
}

func (i ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput() ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPolicyConfigurationOutput).ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingPolicyConfigurationPtrInput is an input type that accepts ScalingPolicyPredictiveScalingPolicyConfigurationArgs, ScalingPolicyPredictiveScalingPolicyConfigurationPtr and ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPolicyConfigurationPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput() ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput
	ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput
}

type scalingPolicyPredictiveScalingPolicyConfigurationPtrType ScalingPolicyPredictiveScalingPolicyConfigurationArgs

func ScalingPolicyPredictiveScalingPolicyConfigurationPtr(v *ScalingPolicyPredictiveScalingPolicyConfigurationArgs) ScalingPolicyPredictiveScalingPolicyConfigurationPtrInput {
	return (*scalingPolicyPredictiveScalingPolicyConfigurationPtrType)(v)
}

func (*scalingPolicyPredictiveScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPolicyConfiguration)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingPolicyConfigurationPtrType) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput() ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingPolicyConfigurationPtrType) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput)
}

// Represents a predictive scaling policy configuration. Predictive scaling is supported on Amazon ECS services.
type ScalingPolicyPredictiveScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationOutput() ScalingPolicyPredictiveScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput() ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return o.ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingPolicyConfiguration) *ScalingPolicyPredictiveScalingPolicyConfiguration {
		return &v
	}).(ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput)
}

// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Defaults to “HonorMaxCapacity“ if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) MaxCapacityBreachBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPolicyConfiguration) *string { return v.MaxCapacityBreachBehavior }).(pulumi.StringPtrOutput)
}

// The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.
//
//	Required if the ``MaxCapacityBreachBehavior`` property is set to ``IncreaseMaxCapacity``, and cannot be used otherwise.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) MaxCapacityBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPolicyConfiguration) *int { return v.MaxCapacityBuffer }).(pulumi.IntPtrOutput)
}

// This structure includes the metrics and target utilization to use for predictive scaling.
//
//	This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) MetricSpecifications() ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPolicyConfiguration) []ScalingPolicyPredictiveScalingMetricSpecification {
		return v.MetricSpecifications
	}).(ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput)
}

// The predictive scaling mode. Defaults to “ForecastOnly“ if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPolicyConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, that the start time can be advanced.
//
//	The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationOutput) SchedulingBufferTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPolicyConfiguration) *int { return v.SchedulingBufferTime }).(pulumi.IntPtrOutput)
}

type ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput() ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) ToScalingPolicyPredictiveScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) Elem() ScalingPolicyPredictiveScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) ScalingPolicyPredictiveScalingPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingPolicyConfiguration
		return ret
	}).(ScalingPolicyPredictiveScalingPolicyConfigurationOutput)
}

// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Defaults to “HonorMaxCapacity“ if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) MaxCapacityBreachBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MaxCapacityBreachBehavior
	}).(pulumi.StringPtrOutput)
}

// The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.
//
//	Required if the ``MaxCapacityBreachBehavior`` property is set to ``IncreaseMaxCapacity``, and cannot be used otherwise.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) MaxCapacityBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacityBuffer
	}).(pulumi.IntPtrOutput)
}

// This structure includes the metrics and target utilization to use for predictive scaling.
//
//	This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) MetricSpecifications() ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) []ScalingPolicyPredictiveScalingMetricSpecification {
		if v == nil {
			return nil
		}
		return v.MetricSpecifications
	}).(ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput)
}

// The predictive scaling mode. Defaults to “ForecastOnly“ if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, that the start time can be advanced.
//
//	The value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified.
func (o ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput) SchedulingBufferTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SchedulingBufferTime
	}).(pulumi.IntPtrOutput)
}

// Describes a load metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedLoadMetric struct {
	// The metric type.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a target group.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// ScalingPolicyPredictiveScalingPredefinedLoadMetricInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs and ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedLoadMetricInput` via:
//
//	ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs{...}
type ScalingPolicyPredictiveScalingPredefinedLoadMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput
	ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput
}

// Describes a load metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs struct {
	// The metric type.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a target group.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedLoadMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput)
}

func (i ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput).ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs, ScalingPolicyPredictiveScalingPredefinedLoadMetricPtr and ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput
	ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput
}

type scalingPolicyPredictiveScalingPredefinedLoadMetricPtrType ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs

func ScalingPolicyPredictiveScalingPredefinedLoadMetricPtr(v *ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput {
	return (*scalingPolicyPredictiveScalingPredefinedLoadMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingPredefinedLoadMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedLoadMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingPredefinedLoadMetricPtrType) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingPredefinedLoadMetricPtrType) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput)
}

// Describes a load metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedLoadMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingPredefinedLoadMetric) *ScalingPolicyPredictiveScalingPredefinedLoadMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput)
}

// The metric type.
func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedLoadMetric) string { return v.PredefinedMetricType }).(pulumi.StringOutput)
}

// A label that uniquely identifies a target group.
func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedLoadMetric) *string { return v.ResourceLabel }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedLoadMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) ToScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedLoadMetric) ScalingPolicyPredictiveScalingPredefinedLoadMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingPredefinedLoadMetric
		return ret
	}).(ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput)
}

// The metric type.
func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedLoadMetric) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// A label that uniquely identifies a target group.
func (o ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedLoadMetric) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

// Represents a metric pair for a predictive scaling policy.
//
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedMetricPair struct {
	// Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a specific target group from which to determine the total and average request count.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// ScalingPolicyPredictiveScalingPredefinedMetricPairInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedMetricPairArgs and ScalingPolicyPredictiveScalingPredefinedMetricPairOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedMetricPairInput` via:
//
//	ScalingPolicyPredictiveScalingPredefinedMetricPairArgs{...}
type ScalingPolicyPredictiveScalingPredefinedMetricPairInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedMetricPairOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairOutput
	ToScalingPolicyPredictiveScalingPredefinedMetricPairOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairOutput
}

// Represents a metric pair for a predictive scaling policy.
//
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedMetricPairArgs struct {
	// Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a specific target group from which to determine the total and average request count.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedMetricPair)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ToScalingPolicyPredictiveScalingPredefinedMetricPairOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedMetricPairOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ToScalingPolicyPredictiveScalingPredefinedMetricPairOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedMetricPairOutput)
}

func (i ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedMetricPairOutput).ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedMetricPairArgs, ScalingPolicyPredictiveScalingPredefinedMetricPairPtr and ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingPredefinedMetricPairArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput
	ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput
}

type scalingPolicyPredictiveScalingPredefinedMetricPairPtrType ScalingPolicyPredictiveScalingPredefinedMetricPairArgs

func ScalingPolicyPredictiveScalingPredefinedMetricPairPtr(v *ScalingPolicyPredictiveScalingPredefinedMetricPairArgs) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput {
	return (*scalingPolicyPredictiveScalingPredefinedMetricPairPtrType)(v)
}

func (*scalingPolicyPredictiveScalingPredefinedMetricPairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedMetricPair)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingPredefinedMetricPairPtrType) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingPredefinedMetricPairPtrType) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput)
}

// Represents a metric pair for a predictive scaling policy.
//
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedMetricPairOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedMetricPair)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return o.ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingPredefinedMetricPair) *ScalingPolicyPredictiveScalingPredefinedMetricPair {
		return &v
	}).(ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput)
}

// Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric.
func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedMetricPair) string { return v.PredefinedMetricType }).(pulumi.StringOutput)
}

// A label that uniquely identifies a specific target group from which to determine the total and average request count.
func (o ScalingPolicyPredictiveScalingPredefinedMetricPairOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedMetricPair) *string { return v.ResourceLabel }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedMetricPair)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput() ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) ToScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) Elem() ScalingPolicyPredictiveScalingPredefinedMetricPairOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedMetricPair) ScalingPolicyPredictiveScalingPredefinedMetricPair {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingPredefinedMetricPair
		return ret
	}).(ScalingPolicyPredictiveScalingPredefinedMetricPairOutput)
}

// Indicates which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric.
func (o ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedMetricPair) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// A label that uniquely identifies a specific target group from which to determine the total and average request count.
func (o ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedMetricPair) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

// Describes a scaling metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedScalingMetric struct {
	// The metric type.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a specific target group from which to determine the average request count.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// ScalingPolicyPredictiveScalingPredefinedScalingMetricInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs and ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedScalingMetricInput` via:
//
//	ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs{...}
type ScalingPolicyPredictiveScalingPredefinedScalingMetricInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput
	ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput
}

// Describes a scaling metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs struct {
	// The metric type.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// A label that uniquely identifies a specific target group from which to determine the average request count.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedScalingMetric)(nil)).Elem()
}

func (i ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput)
}

func (i ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput).ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput is an input type that accepts ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs, ScalingPolicyPredictiveScalingPredefinedScalingMetricPtr and ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput` via:
//
//	        ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput
	ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput
}

type scalingPolicyPredictiveScalingPredefinedScalingMetricPtrType ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs

func ScalingPolicyPredictiveScalingPredefinedScalingMetricPtr(v *ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput {
	return (*scalingPolicyPredictiveScalingPredefinedScalingMetricPtrType)(v)
}

func (*scalingPolicyPredictiveScalingPredefinedScalingMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedScalingMetric)(nil)).Elem()
}

func (i *scalingPolicyPredictiveScalingPredefinedScalingMetricPtrType) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return i.ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyPredictiveScalingPredefinedScalingMetricPtrType) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput)
}

// Describes a scaling metric for a predictive scaling policy.
//
//	When returned in the output of ``DescribePolicies``, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.
//	The following predefined metrics are available for predictive scaling:
//	 +   ``ECSServiceAverageCPUUtilization``
//	 +   ``ECSServiceAverageMemoryUtilization``
//	 +   ``ECSServiceCPUUtilization``
//	 +   ``ECSServiceMemoryUtilization``
//	 +   ``ECSServiceTotalCPUUtilization``
//	 +   ``ECSServiceTotalMemoryUtilization``
//	 +   ``ALBRequestCount``
//	 +   ``ALBRequestCountPerTarget``
//	 +   ``TotalALBRequestCount``
type ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return o.ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyPredictiveScalingPredefinedScalingMetric) *ScalingPolicyPredictiveScalingPredefinedScalingMetric {
		return &v
	}).(ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput)
}

// The metric type.
func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedScalingMetric) string { return v.PredefinedMetricType }).(pulumi.StringOutput)
}

// A label that uniquely identifies a specific target group from which to determine the average request count.
func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyPredictiveScalingPredefinedScalingMetric) *string { return v.ResourceLabel }).(pulumi.StringPtrOutput)
}

type ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyPredictiveScalingPredefinedScalingMetric)(nil)).Elem()
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput() ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) ToScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput {
	return o
}

func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) Elem() ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedScalingMetric) ScalingPolicyPredictiveScalingPredefinedScalingMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyPredictiveScalingPredefinedScalingMetric
		return ret
	}).(ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput)
}

// The metric type.
func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedScalingMetric) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// A label that uniquely identifies a specific target group from which to determine the average request count.
func (o ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyPredictiveScalingPredefinedScalingMetric) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

// “StepAdjustment“ specifies a step adjustment for the “StepAdjustments“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html) property type.
//
//	For the following examples, suppose that you have an alarm with a breach threshold of 50:
//	 +  To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.
//	 +  To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.
//
//	For more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#as-scaling-steps) in the *Application Auto Scaling User Guide*.
//	You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#aws-resource-applicationautoscaling-scalingpolicy--examples) section of the ``AWS::ApplicationAutoScaling::ScalingPolicy`` documentation.
type ScalingPolicyStepAdjustment struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
	//  You must specify at least one upper or lower bound.
	MetricIntervalLowerBound *float64 `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
	//  You must specify at least one upper or lower bound.
	MetricIntervalUpperBound *float64 `pulumi:"metricIntervalUpperBound"`
	// The amount by which to scale. The adjustment is based on the value that you specified in the ``AdjustmentType`` property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity.
	ScalingAdjustment int `pulumi:"scalingAdjustment"`
}

// ScalingPolicyStepAdjustmentInput is an input type that accepts ScalingPolicyStepAdjustmentArgs and ScalingPolicyStepAdjustmentOutput values.
// You can construct a concrete instance of `ScalingPolicyStepAdjustmentInput` via:
//
//	ScalingPolicyStepAdjustmentArgs{...}
type ScalingPolicyStepAdjustmentInput interface {
	pulumi.Input

	ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput
	ToScalingPolicyStepAdjustmentOutputWithContext(context.Context) ScalingPolicyStepAdjustmentOutput
}

// “StepAdjustment“ specifies a step adjustment for the “StepAdjustments“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html) property type.
//
//	For the following examples, suppose that you have an alarm with a breach threshold of 50:
//	 +  To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.
//	 +  To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.
//
//	For more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#as-scaling-steps) in the *Application Auto Scaling User Guide*.
//	You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#aws-resource-applicationautoscaling-scalingpolicy--examples) section of the ``AWS::ApplicationAutoScaling::ScalingPolicy`` documentation.
type ScalingPolicyStepAdjustmentArgs struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
	//  You must specify at least one upper or lower bound.
	MetricIntervalLowerBound pulumi.Float64PtrInput `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
	//  You must specify at least one upper or lower bound.
	MetricIntervalUpperBound pulumi.Float64PtrInput `pulumi:"metricIntervalUpperBound"`
	// The amount by which to scale. The adjustment is based on the value that you specified in the ``AdjustmentType`` property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity.
	ScalingAdjustment pulumi.IntInput `pulumi:"scalingAdjustment"`
}

func (ScalingPolicyStepAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (i ScalingPolicyStepAdjustmentArgs) ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput {
	return i.ToScalingPolicyStepAdjustmentOutputWithContext(context.Background())
}

func (i ScalingPolicyStepAdjustmentArgs) ToScalingPolicyStepAdjustmentOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepAdjustmentOutput)
}

// ScalingPolicyStepAdjustmentArrayInput is an input type that accepts ScalingPolicyStepAdjustmentArray and ScalingPolicyStepAdjustmentArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyStepAdjustmentArrayInput` via:
//
//	ScalingPolicyStepAdjustmentArray{ ScalingPolicyStepAdjustmentArgs{...} }
type ScalingPolicyStepAdjustmentArrayInput interface {
	pulumi.Input

	ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput
	ToScalingPolicyStepAdjustmentArrayOutputWithContext(context.Context) ScalingPolicyStepAdjustmentArrayOutput
}

type ScalingPolicyStepAdjustmentArray []ScalingPolicyStepAdjustmentInput

func (ScalingPolicyStepAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (i ScalingPolicyStepAdjustmentArray) ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput {
	return i.ToScalingPolicyStepAdjustmentArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyStepAdjustmentArray) ToScalingPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepAdjustmentArrayOutput)
}

// “StepAdjustment“ specifies a step adjustment for the “StepAdjustments“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html) property type.
//
//	For the following examples, suppose that you have an alarm with a breach threshold of 50:
//	 +  To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.
//	 +  To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.
//
//	For more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#as-scaling-steps) in the *Application Auto Scaling User Guide*.
//	You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#aws-resource-applicationautoscaling-scalingpolicy--examples) section of the ``AWS::ApplicationAutoScaling::ScalingPolicy`` documentation.
type ScalingPolicyStepAdjustmentOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (o ScalingPolicyStepAdjustmentOutput) ToScalingPolicyStepAdjustmentOutput() ScalingPolicyStepAdjustmentOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentOutput) ToScalingPolicyStepAdjustmentOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentOutput {
	return o
}

// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
//
//	You must specify at least one upper or lower bound.
func (o ScalingPolicyStepAdjustmentOutput) MetricIntervalLowerBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) *float64 { return v.MetricIntervalLowerBound }).(pulumi.Float64PtrOutput)
}

// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
//
//	You must specify at least one upper or lower bound.
func (o ScalingPolicyStepAdjustmentOutput) MetricIntervalUpperBound() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) *float64 { return v.MetricIntervalUpperBound }).(pulumi.Float64PtrOutput)
}

// The amount by which to scale. The adjustment is based on the value that you specified in the “AdjustmentType“ property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity.
func (o ScalingPolicyStepAdjustmentOutput) ScalingAdjustment() pulumi.IntOutput {
	return o.ApplyT(func(v ScalingPolicyStepAdjustment) int { return v.ScalingAdjustment }).(pulumi.IntOutput)
}

type ScalingPolicyStepAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyStepAdjustment)(nil)).Elem()
}

func (o ScalingPolicyStepAdjustmentArrayOutput) ToScalingPolicyStepAdjustmentArrayOutput() ScalingPolicyStepAdjustmentArrayOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentArrayOutput) ToScalingPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) ScalingPolicyStepAdjustmentArrayOutput {
	return o
}

func (o ScalingPolicyStepAdjustmentArrayOutput) Index(i pulumi.IntInput) ScalingPolicyStepAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyStepAdjustment {
		return vs[0].([]ScalingPolicyStepAdjustment)[vs[1].(int)]
	}).(ScalingPolicyStepAdjustmentOutput)
}

// “StepScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a step scaling policy configuration for Application Auto Scaling.
//
//	For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyStepScalingPolicyConfiguration struct {
	// Specifies whether the ``ScalingAdjustment`` value in the ``StepAdjustment`` property is an absolute number or a percentage of the current capacity.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see [Cooldown period](https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown) in the *Application Auto Scaling User Guide*.
	Cooldown *int `pulumi:"cooldown"`
	// The aggregation type for the CloudWatch metrics. Valid values are ``Minimum``, ``Maximum``, and ``Average``. If the aggregation type is null, the value is treated as ``Average``.
	MetricAggregationType *string `pulumi:"metricAggregationType"`
	// The minimum value to scale by when the adjustment type is ``PercentChangeInCapacity``. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a ``MinAdjustmentMagnitude`` of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a ``MinAdjustmentMagnitude`` of 2, Application Auto Scaling scales out the service by 2 tasks.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that enable you to scale based on the size of the alarm breach.
	//  At least one step adjustment is required if you are adding a new step scaling policy configuration.
	StepAdjustments []ScalingPolicyStepAdjustment `pulumi:"stepAdjustments"`
}

// ScalingPolicyStepScalingPolicyConfigurationInput is an input type that accepts ScalingPolicyStepScalingPolicyConfigurationArgs and ScalingPolicyStepScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `ScalingPolicyStepScalingPolicyConfigurationInput` via:
//
//	ScalingPolicyStepScalingPolicyConfigurationArgs{...}
type ScalingPolicyStepScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput
	ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput
}

// “StepScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a step scaling policy configuration for Application Auto Scaling.
//
//	For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyStepScalingPolicyConfigurationArgs struct {
	// Specifies whether the ``ScalingAdjustment`` value in the ``StepAdjustment`` property is an absolute number or a percentage of the current capacity.
	AdjustmentType pulumi.StringPtrInput `pulumi:"adjustmentType"`
	// The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see [Cooldown period](https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown) in the *Application Auto Scaling User Guide*.
	Cooldown pulumi.IntPtrInput `pulumi:"cooldown"`
	// The aggregation type for the CloudWatch metrics. Valid values are ``Minimum``, ``Maximum``, and ``Average``. If the aggregation type is null, the value is treated as ``Average``.
	MetricAggregationType pulumi.StringPtrInput `pulumi:"metricAggregationType"`
	// The minimum value to scale by when the adjustment type is ``PercentChangeInCapacity``. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a ``MinAdjustmentMagnitude`` of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a ``MinAdjustmentMagnitude`` of 2, Application Auto Scaling scales out the service by 2 tasks.
	MinAdjustmentMagnitude pulumi.IntPtrInput `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that enable you to scale based on the size of the alarm breach.
	//  At least one step adjustment is required if you are adding a new step scaling policy configuration.
	StepAdjustments ScalingPolicyStepAdjustmentArrayInput `pulumi:"stepAdjustments"`
}

func (ScalingPolicyStepScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationOutput)
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyStepScalingPolicyConfigurationArgs) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationOutput).ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// ScalingPolicyStepScalingPolicyConfigurationPtrInput is an input type that accepts ScalingPolicyStepScalingPolicyConfigurationArgs, ScalingPolicyStepScalingPolicyConfigurationPtr and ScalingPolicyStepScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyStepScalingPolicyConfigurationPtrInput` via:
//
//	        ScalingPolicyStepScalingPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyStepScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput
	ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput
}

type scalingPolicyStepScalingPolicyConfigurationPtrType ScalingPolicyStepScalingPolicyConfigurationArgs

func ScalingPolicyStepScalingPolicyConfigurationPtr(v *ScalingPolicyStepScalingPolicyConfigurationArgs) ScalingPolicyStepScalingPolicyConfigurationPtrInput {
	return (*scalingPolicyStepScalingPolicyConfigurationPtrType)(v)
}

func (*scalingPolicyStepScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i *scalingPolicyStepScalingPolicyConfigurationPtrType) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyStepScalingPolicyConfigurationPtrType) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyStepScalingPolicyConfigurationPtrOutput)
}

// “StepScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a step scaling policy configuration for Application Auto Scaling.
//
//	For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyStepScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationOutput() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyStepScalingPolicyConfigurationOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyStepScalingPolicyConfiguration) *ScalingPolicyStepScalingPolicyConfiguration {
		return &v
	}).(ScalingPolicyStepScalingPolicyConfigurationPtrOutput)
}

// Specifies whether the “ScalingAdjustment“ value in the “StepAdjustment“ property is an absolute number or a percentage of the current capacity.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *string { return v.AdjustmentType }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see [Cooldown period](https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *int { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// The aggregation type for the CloudWatch metrics. Valid values are “Minimum“, “Maximum“, and “Average“. If the aggregation type is null, the value is treated as “Average“.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *string { return v.MetricAggregationType }).(pulumi.StringPtrOutput)
}

// The minimum value to scale by when the adjustment type is “PercentChangeInCapacity“. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a “MinAdjustmentMagnitude“ of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a “MinAdjustmentMagnitude“ of 2, Application Auto Scaling scales out the service by 2 tasks.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) *int { return v.MinAdjustmentMagnitude }).(pulumi.IntPtrOutput)
}

// A set of adjustments that enable you to scale based on the size of the alarm breach.
//
//	At least one step adjustment is required if you are adding a new step scaling policy configuration.
func (o ScalingPolicyStepScalingPolicyConfigurationOutput) StepAdjustments() ScalingPolicyStepAdjustmentArrayOutput {
	return o.ApplyT(func(v ScalingPolicyStepScalingPolicyConfiguration) []ScalingPolicyStepAdjustment {
		return v.StepAdjustments
	}).(ScalingPolicyStepAdjustmentArrayOutput)
}

type ScalingPolicyStepScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutput() ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) ToScalingPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) Elem() ScalingPolicyStepScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) ScalingPolicyStepScalingPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyStepScalingPolicyConfiguration
		return ret
	}).(ScalingPolicyStepScalingPolicyConfigurationOutput)
}

// Specifies whether the “ScalingAdjustment“ value in the “StepAdjustment“ property is an absolute number or a percentage of the current capacity.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AdjustmentType
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see [Cooldown period](https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Cooldown
	}).(pulumi.IntPtrOutput)
}

// The aggregation type for the CloudWatch metrics. Valid values are “Minimum“, “Maximum“, and “Average“. If the aggregation type is null, the value is treated as “Average“.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MetricAggregationType
	}).(pulumi.StringPtrOutput)
}

// The minimum value to scale by when the adjustment type is “PercentChangeInCapacity“. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a “MinAdjustmentMagnitude“ of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a “MinAdjustmentMagnitude“ of 2, Application Auto Scaling scales out the service by 2 tasks.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinAdjustmentMagnitude
	}).(pulumi.IntPtrOutput)
}

// A set of adjustments that enable you to scale based on the size of the alarm breach.
//
//	At least one step adjustment is required if you are adding a new step scaling policy configuration.
func (o ScalingPolicyStepScalingPolicyConfigurationPtrOutput) StepAdjustments() ScalingPolicyStepAdjustmentArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyStepScalingPolicyConfiguration) []ScalingPolicyStepAdjustment {
		if v == nil {
			return nil
		}
		return v.StepAdjustments
	}).(ScalingPolicyStepAdjustmentArrayOutput)
}

// Represents a specific metric for a target tracking scaling policy for Application Auto Scaling.
//
//	Metric is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricstat.html) property type.
type ScalingPolicyTargetTrackingMetric struct {
	// The dimensions for the metric. For the list of available dimensions, see the AWS documentation available from the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
	//  Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
	Dimensions []ScalingPolicyTargetTrackingMetricDimension `pulumi:"dimensions"`
	// The name of the metric.
	MetricName *string `pulumi:"metricName"`
	// The namespace of the metric. For more information, see the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
	Namespace *string `pulumi:"namespace"`
}

// ScalingPolicyTargetTrackingMetricInput is an input type that accepts ScalingPolicyTargetTrackingMetricArgs and ScalingPolicyTargetTrackingMetricOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricInput` via:
//
//	ScalingPolicyTargetTrackingMetricArgs{...}
type ScalingPolicyTargetTrackingMetricInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput
	ToScalingPolicyTargetTrackingMetricOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricOutput
}

// Represents a specific metric for a target tracking scaling policy for Application Auto Scaling.
//
//	Metric is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricstat.html) property type.
type ScalingPolicyTargetTrackingMetricArgs struct {
	// The dimensions for the metric. For the list of available dimensions, see the AWS documentation available from the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
	//  Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
	Dimensions ScalingPolicyTargetTrackingMetricDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The namespace of the metric. For more information, see the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ScalingPolicyTargetTrackingMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput {
	return i.ToScalingPolicyTargetTrackingMetricOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricOutput)
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricArgs) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricOutput).ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingMetricPtrInput is an input type that accepts ScalingPolicyTargetTrackingMetricArgs, ScalingPolicyTargetTrackingMetricPtr and ScalingPolicyTargetTrackingMetricPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricPtrInput` via:
//
//	        ScalingPolicyTargetTrackingMetricArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingMetricPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput
	ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricPtrOutput
}

type scalingPolicyTargetTrackingMetricPtrType ScalingPolicyTargetTrackingMetricArgs

func ScalingPolicyTargetTrackingMetricPtr(v *ScalingPolicyTargetTrackingMetricArgs) ScalingPolicyTargetTrackingMetricPtrInput {
	return (*scalingPolicyTargetTrackingMetricPtrType)(v)
}

func (*scalingPolicyTargetTrackingMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingMetricPtrType) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingMetricPtrType) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// Represents a specific metric for a target tracking scaling policy for Application Auto Scaling.
//
//	Metric is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricstat.html) property type.
type ScalingPolicyTargetTrackingMetricOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricOutput() ScalingPolicyTargetTrackingMetricOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingMetricOutput) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingMetric) *ScalingPolicyTargetTrackingMetric {
		return &v
	}).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The dimensions for the metric. For the list of available dimensions, see the AWS documentation available from the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
//
//	Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
func (o ScalingPolicyTargetTrackingMetricOutput) Dimensions() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) []ScalingPolicyTargetTrackingMetricDimension {
		return v.Dimensions
	}).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyTargetTrackingMetricOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The namespace of the metric. For more information, see the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
func (o ScalingPolicyTargetTrackingMetricOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetric) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetric)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) ToScalingPolicyTargetTrackingMetricPtrOutput() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) ToScalingPolicyTargetTrackingMetricPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricPtrOutput) Elem() ScalingPolicyTargetTrackingMetricOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) ScalingPolicyTargetTrackingMetric {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingMetric
		return ret
	}).(ScalingPolicyTargetTrackingMetricOutput)
}

// The dimensions for the metric. For the list of available dimensions, see the AWS documentation available from the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
//
//	Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) Dimensions() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) []ScalingPolicyTargetTrackingMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// The name of the metric.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric. For more information, see the table in [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
func (o ScalingPolicyTargetTrackingMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetric) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
//
//	You can call for a single metric or perform math expressions on multiple metrics. Any expressions used in a metric specification must eventually return a single time series.
//	For more information and examples, see [Create a target tracking scaling policy for Application Auto Scaling using metric math](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html) in the *Application Auto Scaling User Guide*.
//	``TargetTrackingMetricDataQuery`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type.
type ScalingPolicyTargetTrackingMetricDataQuery struct {
	// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions.
	//  Conditional: Within each ``TargetTrackingMetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	Expression *string `pulumi:"expression"`
	// A short name that identifies the object's results in the response. This name must be unique among all ``MetricDataQuery`` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
	Id *string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label *string `pulumi:"label"`
	// Information about the metric data to return.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	MetricStat *ScalingPolicyTargetTrackingMetricStat `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	//  If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
	//  If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
	ReturnData *bool `pulumi:"returnData"`
}

// ScalingPolicyTargetTrackingMetricDataQueryInput is an input type that accepts ScalingPolicyTargetTrackingMetricDataQueryArgs and ScalingPolicyTargetTrackingMetricDataQueryOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDataQueryInput` via:
//
//	ScalingPolicyTargetTrackingMetricDataQueryArgs{...}
type ScalingPolicyTargetTrackingMetricDataQueryInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput
	ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
//
//	You can call for a single metric or perform math expressions on multiple metrics. Any expressions used in a metric specification must eventually return a single time series.
//	For more information and examples, see [Create a target tracking scaling policy for Application Auto Scaling using metric math](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html) in the *Application Auto Scaling User Guide*.
//	``TargetTrackingMetricDataQuery`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type.
type ScalingPolicyTargetTrackingMetricDataQueryArgs struct {
	// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions.
	//  Conditional: Within each ``TargetTrackingMetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// A short name that identifies the object's results in the response. This name must be unique among all ``MetricDataQuery`` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Information about the metric data to return.
	//  Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
	MetricStat ScalingPolicyTargetTrackingMetricStatPtrInput `pulumi:"metricStat"`
	// Indicates whether to return the timestamps and raw data values of this metric.
	//  If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
	//  If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
	ReturnData pulumi.BoolPtrInput `pulumi:"returnData"`
}

func (ScalingPolicyTargetTrackingMetricDataQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArgs) ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return i.ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArgs) ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDataQueryOutput)
}

// ScalingPolicyTargetTrackingMetricDataQueryArrayInput is an input type that accepts ScalingPolicyTargetTrackingMetricDataQueryArray and ScalingPolicyTargetTrackingMetricDataQueryArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDataQueryArrayInput` via:
//
//	ScalingPolicyTargetTrackingMetricDataQueryArray{ ScalingPolicyTargetTrackingMetricDataQueryArgs{...} }
type ScalingPolicyTargetTrackingMetricDataQueryArrayInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput
	ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput
}

type ScalingPolicyTargetTrackingMetricDataQueryArray []ScalingPolicyTargetTrackingMetricDataQueryInput

func (ScalingPolicyTargetTrackingMetricDataQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArray) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return i.ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDataQueryArray) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput)
}

// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
//
//	You can call for a single metric or perform math expressions on multiple metrics. Any expressions used in a metric specification must eventually return a single time series.
//	For more information and examples, see [Create a target tracking scaling policy for Application Auto Scaling using metric math](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html) in the *Application Auto Scaling User Guide*.
//	``TargetTrackingMetricDataQuery`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type.
type ScalingPolicyTargetTrackingMetricDataQueryOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDataQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ToScalingPolicyTargetTrackingMetricDataQueryOutput() ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ToScalingPolicyTargetTrackingMetricDataQueryOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return o
}

// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the “Id“ of the other metrics to refer to those metrics, and can also use the “Id“ of other expressions to use the result of those expressions.
//
//	Conditional: Within each ``TargetTrackingMetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name that identifies the object's results in the response. This name must be unique among all “MetricDataQuery“ objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Information about the metric data to return.
//
//	Conditional: Within each ``MetricDataQuery`` object, you must specify either ``Expression`` or ``MetricStat``, but not both.
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) MetricStat() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *ScalingPolicyTargetTrackingMetricStat {
		return v.MetricStat
	}).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// Indicates whether to return the timestamps and raw data values of this metric.
//
//	If you use any math expressions, specify ``true`` for this value for only the final math expression that the metric specification is based on. You must specify ``false`` for ``ReturnData`` for all the other metrics and expressions used in the metric specification.
//	If you are only retrieving metrics and not performing any math expressions, do not specify anything for ``ReturnData``. This sets it to its default (``true``).
func (o ScalingPolicyTargetTrackingMetricDataQueryOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDataQuery) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type ScalingPolicyTargetTrackingMetricDataQueryArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDataQuery)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutput() ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) ToScalingPolicyTargetTrackingMetricDataQueryArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDataQueryArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDataQueryArrayOutput) Index(i pulumi.IntInput) ScalingPolicyTargetTrackingMetricDataQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyTargetTrackingMetricDataQuery {
		return vs[0].([]ScalingPolicyTargetTrackingMetricDataQuery)[vs[1].(int)]
	}).(ScalingPolicyTargetTrackingMetricDataQueryOutput)
}

// “TargetTrackingMetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetric.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyTargetTrackingMetricDimension struct {
	// The name of the dimension.
	Name *string `pulumi:"name"`
	// The value of the dimension.
	Value *string `pulumi:"value"`
}

// ScalingPolicyTargetTrackingMetricDimensionInput is an input type that accepts ScalingPolicyTargetTrackingMetricDimensionArgs and ScalingPolicyTargetTrackingMetricDimensionOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDimensionInput` via:
//
//	ScalingPolicyTargetTrackingMetricDimensionArgs{...}
type ScalingPolicyTargetTrackingMetricDimensionInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput
	ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput
}

// “TargetTrackingMetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetric.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyTargetTrackingMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScalingPolicyTargetTrackingMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDimensionArgs) ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput {
	return i.ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDimensionArgs) ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDimensionOutput)
}

// ScalingPolicyTargetTrackingMetricDimensionArrayInput is an input type that accepts ScalingPolicyTargetTrackingMetricDimensionArray and ScalingPolicyTargetTrackingMetricDimensionArrayOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricDimensionArrayInput` via:
//
//	ScalingPolicyTargetTrackingMetricDimensionArray{ ScalingPolicyTargetTrackingMetricDimensionArgs{...} }
type ScalingPolicyTargetTrackingMetricDimensionArrayInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput
	ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput
}

type ScalingPolicyTargetTrackingMetricDimensionArray []ScalingPolicyTargetTrackingMetricDimensionInput

func (ScalingPolicyTargetTrackingMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricDimensionArray) ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return i.ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricDimensionArray) ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricDimensionArrayOutput)
}

// “TargetTrackingMetricDimension“ specifies a name/value pair that is part of the identity of a CloudWatch metric for the “Dimensions“ property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetric.html) property type. Duplicate dimensions are not allowed.
type ScalingPolicyTargetTrackingMetricDimensionOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDimensionOutput) ToScalingPolicyTargetTrackingMetricDimensionOutput() ScalingPolicyTargetTrackingMetricDimensionOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionOutput) ToScalingPolicyTargetTrackingMetricDimensionOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o ScalingPolicyTargetTrackingMetricDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the dimension.
func (o ScalingPolicyTargetTrackingMetricDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingPolicyTargetTrackingMetricDimension)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ToScalingPolicyTargetTrackingMetricDimensionArrayOutput() ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) ToScalingPolicyTargetTrackingMetricDimensionArrayOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricDimensionArrayOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricDimensionArrayOutput) Index(i pulumi.IntInput) ScalingPolicyTargetTrackingMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingPolicyTargetTrackingMetricDimension {
		return vs[0].([]ScalingPolicyTargetTrackingMetricDimension)[vs[1].(int)]
	}).(ScalingPolicyTargetTrackingMetricDimensionOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
//
//	``TargetTrackingMetricStat`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricdataquery.html) property type.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the *Amazon CloudWatch User Guide*.
type ScalingPolicyTargetTrackingMetricStat struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	Metric *ScalingPolicyTargetTrackingMetric `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
	//  The most commonly used metric for scaling is ``Average``.
	Stat *string `pulumi:"stat"`
	// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit *string `pulumi:"unit"`
}

// ScalingPolicyTargetTrackingMetricStatInput is an input type that accepts ScalingPolicyTargetTrackingMetricStatArgs and ScalingPolicyTargetTrackingMetricStatOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricStatInput` via:
//
//	ScalingPolicyTargetTrackingMetricStatArgs{...}
type ScalingPolicyTargetTrackingMetricStatInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput
	ToScalingPolicyTargetTrackingMetricStatOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricStatOutput
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
//
//	``TargetTrackingMetricStat`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricdataquery.html) property type.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the *Amazon CloudWatch User Guide*.
type ScalingPolicyTargetTrackingMetricStatArgs struct {
	// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
	Metric ScalingPolicyTargetTrackingMetricPtrInput `pulumi:"metric"`
	// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
	//  The most commonly used metric for scaling is ``Average``.
	Stat pulumi.StringPtrInput `pulumi:"stat"`
	// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ScalingPolicyTargetTrackingMetricStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatOutput)
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingMetricStatArgs) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatOutput).ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingMetricStatPtrInput is an input type that accepts ScalingPolicyTargetTrackingMetricStatArgs, ScalingPolicyTargetTrackingMetricStatPtr and ScalingPolicyTargetTrackingMetricStatPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingMetricStatPtrInput` via:
//
//	        ScalingPolicyTargetTrackingMetricStatArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingMetricStatPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput
	ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput
}

type scalingPolicyTargetTrackingMetricStatPtrType ScalingPolicyTargetTrackingMetricStatArgs

func ScalingPolicyTargetTrackingMetricStatPtr(v *ScalingPolicyTargetTrackingMetricStatArgs) ScalingPolicyTargetTrackingMetricStatPtrInput {
	return (*scalingPolicyTargetTrackingMetricStatPtrType)(v)
}

func (*scalingPolicyTargetTrackingMetricStatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingMetricStatPtrType) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return i.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingMetricStatPtrType) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// This structure defines the CloudWatch metric to return, along with the statistic and unit.
//
//	``TargetTrackingMetricStat`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricdataquery.html) property type.
//	For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the *Amazon CloudWatch User Guide*.
type ScalingPolicyTargetTrackingMetricStatOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatOutput() ScalingPolicyTargetTrackingMetricStatOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingMetricStatOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetricStat {
		return &v
	}).(ScalingPolicyTargetTrackingMetricStatPtrOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyTargetTrackingMetricStatOutput) Metric() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetric { return v.Metric }).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
//
//	The most commonly used metric for scaling is ``Average``.
func (o ScalingPolicyTargetTrackingMetricStatOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyTargetTrackingMetricStatOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingMetricStat) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ScalingPolicyTargetTrackingMetricStatPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingMetricStatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingMetricStat)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutput() ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) ToScalingPolicyTargetTrackingMetricStatPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingMetricStatPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Elem() ScalingPolicyTargetTrackingMetricStatOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) ScalingPolicyTargetTrackingMetricStat {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingMetricStat
		return ret
	}).(ScalingPolicyTargetTrackingMetricStatOutput)
}

// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Metric() ScalingPolicyTargetTrackingMetricPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *ScalingPolicyTargetTrackingMetric {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(ScalingPolicyTargetTrackingMetricPtrOutput)
}

// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide*.
//
//	The most commonly used metric for scaling is ``Average``.
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference*.
func (o ScalingPolicyTargetTrackingMetricStatPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingMetricStat) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// “TargetTrackingScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a target tracking scaling policy configuration for Application Auto Scaling. Use a target tracking scaling policy to adjust the capacity of the specified scalable target in response to actual workloads, so that resource utilization remains at or near the target utilization value.
//
//	For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyTargetTrackingScalingPolicyConfiguration struct {
	// A customized metric. You can specify either a predefined metric or a customized metric.
	CustomizedMetricSpecification *ScalingPolicyCustomizedMetricSpecification `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is ``true``, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is ``false``.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// A predefined metric. You can specify either a predefined metric or a customized metric.
	PredefinedMetricSpecification *ScalingPolicyPredefinedMetricSpecification `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
	ScaleInCooldown *int `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
	ScaleOutCooldown *int `pulumi:"scaleOutCooldown"`
	// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
	TargetValue float64 `pulumi:"targetValue"`
}

// ScalingPolicyTargetTrackingScalingPolicyConfigurationInput is an input type that accepts ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs and ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingScalingPolicyConfigurationInput` via:
//
//	ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{...}
type ScalingPolicyTargetTrackingScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput
	ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput
}

// “TargetTrackingScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a target tracking scaling policy configuration for Application Auto Scaling. Use a target tracking scaling policy to adjust the capacity of the specified scalable target in response to actual workloads, so that resource utilization remains at or near the target utilization value.
//
//	For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs struct {
	// A customized metric. You can specify either a predefined metric or a customized metric.
	CustomizedMetricSpecification ScalingPolicyCustomizedMetricSpecificationPtrInput `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is ``true``, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is ``false``.
	DisableScaleIn pulumi.BoolPtrInput `pulumi:"disableScaleIn"`
	// A predefined metric. You can specify either a predefined metric or a customized metric.
	PredefinedMetricSpecification ScalingPolicyPredefinedMetricSpecificationPtrInput `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
	ScaleInCooldown pulumi.IntPtrInput `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
	ScaleOutCooldown pulumi.IntPtrInput `pulumi:"scaleOutCooldown"`
	// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
	TargetValue pulumi.Float64Input `pulumi:"targetValue"`
}

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput)
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput).ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput is an input type that accepts ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs, ScalingPolicyTargetTrackingScalingPolicyConfigurationPtr and ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput` via:
//
//	        ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput
	ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput
}

type scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs

func ScalingPolicyTargetTrackingScalingPolicyConfigurationPtr(v *ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput {
	return (*scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType)(v)
}

func (*scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i *scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *scalingPolicyTargetTrackingScalingPolicyConfigurationPtrType) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// “TargetTrackingScalingPolicyConfiguration“ is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a target tracking scaling policy configuration for Application Auto Scaling. Use a target tracking scaling policy to adjust the capacity of the specified scalable target in response to actual workloads, so that resource utilization remains at or near the target utilization value.
//
//	For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the *Application Auto Scaling User Guide*.
type ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyTargetTrackingScalingPolicyConfiguration {
		return &v
	}).(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// A customized metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) CustomizedMetricSpecification() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is “true“, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is “false“.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *bool { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// A predefined metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) PredefinedMetricSpecification() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleInCooldown }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleOutCooldown }).(pulumi.IntPtrOutput)
}

// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v ScalingPolicyTargetTrackingScalingPolicyConfiguration) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingPolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) Elem() ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) ScalingPolicyTargetTrackingScalingPolicyConfiguration {
		if v != nil {
			return *v
		}
		var ret ScalingPolicyTargetTrackingScalingPolicyConfiguration
		return ret
	}).(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput)
}

// A customized metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) CustomizedMetricSpecification() ScalingPolicyCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyCustomizedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.CustomizedMetricSpecification
	}).(ScalingPolicyCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is “true“, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is “false“.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleIn
	}).(pulumi.BoolPtrOutput)
}

// A predefined metric. You can specify either a predefined metric or a customized metric.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) PredefinedMetricSpecification() ScalingPolicyPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *ScalingPolicyPredefinedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.PredefinedMetricSpecification
	}).(ScalingPolicyPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleInCooldown
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the *Application Auto Scaling User Guide*.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleOutCooldown
	}).(pulumi.IntPtrOutput)
}

// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
func (o ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput) TargetValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ScalingPolicyTargetTrackingScalingPolicyConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.TargetValue
	}).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetActionInput)(nil)).Elem(), ScalableTargetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetActionPtrInput)(nil)).Elem(), ScalableTargetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetScheduledActionInput)(nil)).Elem(), ScalableTargetScheduledActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetScheduledActionArrayInput)(nil)).Elem(), ScalableTargetScheduledActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetSuspendedStateInput)(nil)).Elem(), ScalableTargetSuspendedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalableTargetSuspendedStatePtrInput)(nil)).Elem(), ScalableTargetSuspendedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecificationInput)(nil)).Elem(), ScalingPolicyCustomizedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyCustomizedMetricSpecificationPtrInput)(nil)).Elem(), ScalingPolicyCustomizedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyMetricDimensionInput)(nil)).Elem(), ScalingPolicyMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyMetricDimensionArrayInput)(nil)).Elem(), ScalingPolicyMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecificationInput)(nil)).Elem(), ScalingPolicyPredefinedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredefinedMetricSpecificationPtrInput)(nil)).Elem(), ScalingPolicyPredefinedMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedCapacityMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedCapacityMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedLoadMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedLoadMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedScalingMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingCustomizedScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDataQueryInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricDataQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDataQueryArrayInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricDataQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDimensionInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricDimensionArrayInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricSpecificationInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricSpecificationArrayInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricStatInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingMetricStatPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPolicyConfigurationInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPolicyConfigurationPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedLoadMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedLoadMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedMetricPairInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedMetricPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedMetricPairPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedMetricPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedScalingMetricInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrInput)(nil)).Elem(), ScalingPolicyPredictiveScalingPredefinedScalingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepAdjustmentInput)(nil)).Elem(), ScalingPolicyStepAdjustmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepAdjustmentArrayInput)(nil)).Elem(), ScalingPolicyStepAdjustmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfigurationInput)(nil)).Elem(), ScalingPolicyStepScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyStepScalingPolicyConfigurationPtrInput)(nil)).Elem(), ScalingPolicyStepScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQueryInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDataQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDataQueryArrayInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDataQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimensionInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricDimensionArrayInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStatInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingMetricStatPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingMetricStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfigurationInput)(nil)).Elem(), ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrInput)(nil)).Elem(), ScalingPolicyTargetTrackingScalingPolicyConfigurationArgs{})
	pulumi.RegisterOutputType(ScalableTargetActionOutput{})
	pulumi.RegisterOutputType(ScalableTargetActionPtrOutput{})
	pulumi.RegisterOutputType(ScalableTargetScheduledActionOutput{})
	pulumi.RegisterOutputType(ScalableTargetScheduledActionArrayOutput{})
	pulumi.RegisterOutputType(ScalableTargetSuspendedStateOutput{})
	pulumi.RegisterOutputType(ScalableTargetSuspendedStatePtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyCustomizedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyCustomizedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyMetricDimensionOutput{})
	pulumi.RegisterOutputType(ScalingPolicyMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredefinedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredefinedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedCapacityMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedCapacityMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedLoadMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedLoadMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedScalingMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingCustomizedScalingMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricDataQueryOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricDataQueryArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricDimensionOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricSpecificationArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricStatOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingMetricStatPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedLoadMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedLoadMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedMetricPairOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedMetricPairPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedScalingMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyPredictiveScalingPredefinedScalingMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepAdjustmentOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyStepScalingPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDataQueryOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDataQueryArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDimensionOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricStatOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingMetricStatPtrOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPolicyTargetTrackingScalingPolicyConfigurationPtrOutput{})
}
