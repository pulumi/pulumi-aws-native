// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Lambda::Version
type Version struct {
	pulumi.CustomResourceState

	// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
	CodeSha256 pulumi.StringPtrOutput `pulumi:"codeSha256"`
	// A description for the version to override the description in the function configuration. Updates are not supported for this property.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ARN of the version.
	FunctionArn pulumi.StringOutput `pulumi:"functionArn"`
	// The name of the Lambda function.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
	ProvisionedConcurrencyConfig VersionProvisionedConcurrencyConfigurationPtrOutput `pulumi:"provisionedConcurrencyConfig"`
	// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
	RuntimePolicy VersionRuntimePolicyPtrOutput `pulumi:"runtimePolicy"`
	// The version number.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewVersion registers a new resource with the given unique name, arguments, and options.
func NewVersion(ctx *pulumi.Context,
	name string, args *VersionArgs, opts ...pulumi.ResourceOption) (*Version, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"codeSha256",
		"description",
		"functionName",
		"provisionedConcurrencyConfig",
		"runtimePolicy",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Version
	err := ctx.RegisterResource("aws-native:lambda:Version", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVersion gets an existing Version resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VersionState, opts ...pulumi.ResourceOption) (*Version, error) {
	var resource Version
	err := ctx.ReadResource("aws-native:lambda:Version", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Version resources.
type versionState struct {
}

type VersionState struct {
}

func (VersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*versionState)(nil)).Elem()
}

type versionArgs struct {
	// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
	CodeSha256 *string `pulumi:"codeSha256"`
	// A description for the version to override the description in the function configuration. Updates are not supported for this property.
	Description *string `pulumi:"description"`
	// The name of the Lambda function.
	FunctionName string `pulumi:"functionName"`
	// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
	ProvisionedConcurrencyConfig *VersionProvisionedConcurrencyConfiguration `pulumi:"provisionedConcurrencyConfig"`
	// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
	RuntimePolicy *VersionRuntimePolicy `pulumi:"runtimePolicy"`
}

// The set of arguments for constructing a Version resource.
type VersionArgs struct {
	// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
	CodeSha256 pulumi.StringPtrInput
	// A description for the version to override the description in the function configuration. Updates are not supported for this property.
	Description pulumi.StringPtrInput
	// The name of the Lambda function.
	FunctionName pulumi.StringInput
	// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
	ProvisionedConcurrencyConfig VersionProvisionedConcurrencyConfigurationPtrInput
	// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
	RuntimePolicy VersionRuntimePolicyPtrInput
}

func (VersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*versionArgs)(nil)).Elem()
}

type VersionInput interface {
	pulumi.Input

	ToVersionOutput() VersionOutput
	ToVersionOutputWithContext(ctx context.Context) VersionOutput
}

func (*Version) ElementType() reflect.Type {
	return reflect.TypeOf((**Version)(nil)).Elem()
}

func (i *Version) ToVersionOutput() VersionOutput {
	return i.ToVersionOutputWithContext(context.Background())
}

func (i *Version) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VersionOutput)
}

func (i *Version) ToOutput(ctx context.Context) pulumix.Output[*Version] {
	return pulumix.Output[*Version]{
		OutputState: i.ToVersionOutputWithContext(ctx).OutputState,
	}
}

type VersionOutput struct{ *pulumi.OutputState }

func (VersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Version)(nil)).Elem()
}

func (o VersionOutput) ToVersionOutput() VersionOutput {
	return o
}

func (o VersionOutput) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return o
}

func (o VersionOutput) ToOutput(ctx context.Context) pulumix.Output[*Version] {
	return pulumix.Output[*Version]{
		OutputState: o.OutputState,
	}
}

// Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. Updates are not supported for this property.
func (o VersionOutput) CodeSha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Version) pulumi.StringPtrOutput { return v.CodeSha256 }).(pulumi.StringPtrOutput)
}

// A description for the version to override the description in the function configuration. Updates are not supported for this property.
func (o VersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Version) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ARN of the version.
func (o VersionOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.FunctionArn }).(pulumi.StringOutput)
}

// The name of the Lambda function.
func (o VersionOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// Specifies a provisioned concurrency configuration for a function's version. Updates are not supported for this property.
func (o VersionOutput) ProvisionedConcurrencyConfig() VersionProvisionedConcurrencyConfigurationPtrOutput {
	return o.ApplyT(func(v *Version) VersionProvisionedConcurrencyConfigurationPtrOutput {
		return v.ProvisionedConcurrencyConfig
	}).(VersionProvisionedConcurrencyConfigurationPtrOutput)
}

// Specifies the runtime management configuration of a function. Displays runtimeVersionArn only for Manual.
func (o VersionOutput) RuntimePolicy() VersionRuntimePolicyPtrOutput {
	return o.ApplyT(func(v *Version) VersionRuntimePolicyPtrOutput { return v.RuntimePolicy }).(VersionRuntimePolicyPtrOutput)
}

// The version number.
func (o VersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VersionInput)(nil)).Elem(), &Version{})
	pulumi.RegisterOutputType(VersionOutput{})
}
