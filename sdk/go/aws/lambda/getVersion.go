// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lambda::Version
func LookupVersion(ctx *pulumi.Context, args *LookupVersionArgs, opts ...pulumi.InvokeOption) (*LookupVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVersionResult
	err := ctx.Invoke("aws-native:lambda:getVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVersionArgs struct {
	// The ARN of the version.
	FunctionArn string `pulumi:"functionArn"`
}

type LookupVersionResult struct {
	// The ARN of the version.
	FunctionArn *string `pulumi:"functionArn"`
	// The resource policy of your function
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Lambda::Version` for more information about the expected schema for this property.
	Policy interface{} `pulumi:"policy"`
	// The version number.
	Version *string `pulumi:"version"`
}

func LookupVersionOutput(ctx *pulumi.Context, args LookupVersionOutputArgs, opts ...pulumi.InvokeOption) LookupVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVersionResultOutput, error) {
			args := v.(LookupVersionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVersionResult
			secret, err := ctx.InvokePackageRaw("aws-native:lambda:getVersion", args, &rv, "", opts...)
			if err != nil {
				return LookupVersionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVersionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVersionResultOutput), nil
			}
			return output, nil
		}).(LookupVersionResultOutput)
}

type LookupVersionOutputArgs struct {
	// The ARN of the version.
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
}

func (LookupVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionArgs)(nil)).Elem()
}

type LookupVersionResultOutput struct{ *pulumi.OutputState }

func (LookupVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVersionResult)(nil)).Elem()
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutput() LookupVersionResultOutput {
	return o
}

func (o LookupVersionResultOutput) ToLookupVersionResultOutputWithContext(ctx context.Context) LookupVersionResultOutput {
	return o
}

// The ARN of the version.
func (o LookupVersionResultOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVersionResult) *string { return v.FunctionArn }).(pulumi.StringPtrOutput)
}

// The resource policy of your function
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Lambda::Version` for more information about the expected schema for this property.
func (o LookupVersionResultOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupVersionResult) interface{} { return v.Policy }).(pulumi.AnyOutput)
}

// The version number.
func (o LookupVersionResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVersionResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVersionResultOutput{})
}
