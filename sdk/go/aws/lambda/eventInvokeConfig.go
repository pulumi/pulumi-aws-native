// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The AWS::Lambda::EventInvokeConfig resource configures options for asynchronous invocation on a version or an alias.
type EventInvokeConfig struct {
	pulumi.CustomResourceState

	DestinationConfig EventInvokeConfigDestinationConfigPtrOutput `pulumi:"destinationConfig"`
	// The name of the Lambda function.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// The maximum age of a request that Lambda sends to a function for processing.
	MaximumEventAgeInSeconds pulumi.IntPtrOutput `pulumi:"maximumEventAgeInSeconds"`
	// The maximum number of times to retry when the function returns an error.
	MaximumRetryAttempts pulumi.IntPtrOutput `pulumi:"maximumRetryAttempts"`
	// The identifier of a version or alias.
	Qualifier pulumi.StringOutput `pulumi:"qualifier"`
}

// NewEventInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewEventInvokeConfig(ctx *pulumi.Context,
	name string, args *EventInvokeConfigArgs, opts ...pulumi.ResourceOption) (*EventInvokeConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	if args.Qualifier == nil {
		return nil, errors.New("invalid value for required argument 'Qualifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"functionName",
		"qualifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventInvokeConfig
	err := ctx.RegisterResource("aws-native:lambda:EventInvokeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventInvokeConfig gets an existing EventInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventInvokeConfigState, opts ...pulumi.ResourceOption) (*EventInvokeConfig, error) {
	var resource EventInvokeConfig
	err := ctx.ReadResource("aws-native:lambda:EventInvokeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventInvokeConfig resources.
type eventInvokeConfigState struct {
}

type EventInvokeConfigState struct {
}

func (EventInvokeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventInvokeConfigState)(nil)).Elem()
}

type eventInvokeConfigArgs struct {
	DestinationConfig *EventInvokeConfigDestinationConfig `pulumi:"destinationConfig"`
	// The name of the Lambda function.
	FunctionName string `pulumi:"functionName"`
	// The maximum age of a request that Lambda sends to a function for processing.
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	// The maximum number of times to retry when the function returns an error.
	MaximumRetryAttempts *int `pulumi:"maximumRetryAttempts"`
	// The identifier of a version or alias.
	Qualifier string `pulumi:"qualifier"`
}

// The set of arguments for constructing a EventInvokeConfig resource.
type EventInvokeConfigArgs struct {
	DestinationConfig EventInvokeConfigDestinationConfigPtrInput
	// The name of the Lambda function.
	FunctionName pulumi.StringInput
	// The maximum age of a request that Lambda sends to a function for processing.
	MaximumEventAgeInSeconds pulumi.IntPtrInput
	// The maximum number of times to retry when the function returns an error.
	MaximumRetryAttempts pulumi.IntPtrInput
	// The identifier of a version or alias.
	Qualifier pulumi.StringInput
}

func (EventInvokeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventInvokeConfigArgs)(nil)).Elem()
}

type EventInvokeConfigInput interface {
	pulumi.Input

	ToEventInvokeConfigOutput() EventInvokeConfigOutput
	ToEventInvokeConfigOutputWithContext(ctx context.Context) EventInvokeConfigOutput
}

func (*EventInvokeConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**EventInvokeConfig)(nil)).Elem()
}

func (i *EventInvokeConfig) ToEventInvokeConfigOutput() EventInvokeConfigOutput {
	return i.ToEventInvokeConfigOutputWithContext(context.Background())
}

func (i *EventInvokeConfig) ToEventInvokeConfigOutputWithContext(ctx context.Context) EventInvokeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventInvokeConfigOutput)
}

func (i *EventInvokeConfig) ToOutput(ctx context.Context) pulumix.Output[*EventInvokeConfig] {
	return pulumix.Output[*EventInvokeConfig]{
		OutputState: i.ToEventInvokeConfigOutputWithContext(ctx).OutputState,
	}
}

type EventInvokeConfigOutput struct{ *pulumi.OutputState }

func (EventInvokeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventInvokeConfig)(nil)).Elem()
}

func (o EventInvokeConfigOutput) ToEventInvokeConfigOutput() EventInvokeConfigOutput {
	return o
}

func (o EventInvokeConfigOutput) ToEventInvokeConfigOutputWithContext(ctx context.Context) EventInvokeConfigOutput {
	return o
}

func (o EventInvokeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[*EventInvokeConfig] {
	return pulumix.Output[*EventInvokeConfig]{
		OutputState: o.OutputState,
	}
}

func (o EventInvokeConfigOutput) DestinationConfig() EventInvokeConfigDestinationConfigPtrOutput {
	return o.ApplyT(func(v *EventInvokeConfig) EventInvokeConfigDestinationConfigPtrOutput { return v.DestinationConfig }).(EventInvokeConfigDestinationConfigPtrOutput)
}

// The name of the Lambda function.
func (o EventInvokeConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *EventInvokeConfig) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// The maximum age of a request that Lambda sends to a function for processing.
func (o EventInvokeConfigOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventInvokeConfig) pulumi.IntPtrOutput { return v.MaximumEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

// The maximum number of times to retry when the function returns an error.
func (o EventInvokeConfigOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventInvokeConfig) pulumi.IntPtrOutput { return v.MaximumRetryAttempts }).(pulumi.IntPtrOutput)
}

// The identifier of a version or alias.
func (o EventInvokeConfigOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EventInvokeConfig) pulumi.StringOutput { return v.Qualifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventInvokeConfigInput)(nil)).Elem(), &EventInvokeConfig{})
	pulumi.RegisterOutputType(EventInvokeConfigOutput{})
}
