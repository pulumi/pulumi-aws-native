// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package robomaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The name of robot software suite.
type RobotApplicationRobotSoftwareSuiteName string

const (
	RobotApplicationRobotSoftwareSuiteNameRos     = RobotApplicationRobotSoftwareSuiteName("ROS")
	RobotApplicationRobotSoftwareSuiteNameRos2    = RobotApplicationRobotSoftwareSuiteName("ROS2")
	RobotApplicationRobotSoftwareSuiteNameGeneral = RobotApplicationRobotSoftwareSuiteName("General")
)

func (RobotApplicationRobotSoftwareSuiteName) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (e RobotApplicationRobotSoftwareSuiteName) ToRobotApplicationRobotSoftwareSuiteNameOutput() RobotApplicationRobotSoftwareSuiteNameOutput {
	return pulumi.ToOutput(e).(RobotApplicationRobotSoftwareSuiteNameOutput)
}

func (e RobotApplicationRobotSoftwareSuiteName) ToRobotApplicationRobotSoftwareSuiteNameOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RobotApplicationRobotSoftwareSuiteNameOutput)
}

func (e RobotApplicationRobotSoftwareSuiteName) ToRobotApplicationRobotSoftwareSuiteNamePtrOutput() RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return e.ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (e RobotApplicationRobotSoftwareSuiteName) ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return RobotApplicationRobotSoftwareSuiteName(e).ToRobotApplicationRobotSoftwareSuiteNameOutputWithContext(ctx).ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx)
}

func (e RobotApplicationRobotSoftwareSuiteName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationRobotSoftwareSuiteName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationRobotSoftwareSuiteName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RobotApplicationRobotSoftwareSuiteName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RobotApplicationRobotSoftwareSuiteNameOutput struct{ *pulumi.OutputState }

func (RobotApplicationRobotSoftwareSuiteNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToRobotApplicationRobotSoftwareSuiteNameOutput() RobotApplicationRobotSoftwareSuiteNameOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToRobotApplicationRobotSoftwareSuiteNameOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNameOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToRobotApplicationRobotSoftwareSuiteNamePtrOutput() RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return o.ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RobotApplicationRobotSoftwareSuiteName) *RobotApplicationRobotSoftwareSuiteName {
		return &v
	}).(RobotApplicationRobotSoftwareSuiteNamePtrOutput)
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationRobotSoftwareSuiteName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationRobotSoftwareSuiteName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RobotApplicationRobotSoftwareSuiteNamePtrOutput struct{ *pulumi.OutputState }

func (RobotApplicationRobotSoftwareSuiteNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RobotApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (o RobotApplicationRobotSoftwareSuiteNamePtrOutput) ToRobotApplicationRobotSoftwareSuiteNamePtrOutput() RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteNamePtrOutput) ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteNamePtrOutput) Elem() RobotApplicationRobotSoftwareSuiteNameOutput {
	return o.ApplyT(func(v *RobotApplicationRobotSoftwareSuiteName) RobotApplicationRobotSoftwareSuiteName {
		if v != nil {
			return *v
		}
		var ret RobotApplicationRobotSoftwareSuiteName
		return ret
	}).(RobotApplicationRobotSoftwareSuiteNameOutput)
}

func (o RobotApplicationRobotSoftwareSuiteNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RobotApplicationRobotSoftwareSuiteName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RobotApplicationRobotSoftwareSuiteNameInput is an input type that accepts RobotApplicationRobotSoftwareSuiteNameArgs and RobotApplicationRobotSoftwareSuiteNameOutput values.
// You can construct a concrete instance of `RobotApplicationRobotSoftwareSuiteNameInput` via:
//
//          RobotApplicationRobotSoftwareSuiteNameArgs{...}
type RobotApplicationRobotSoftwareSuiteNameInput interface {
	pulumi.Input

	ToRobotApplicationRobotSoftwareSuiteNameOutput() RobotApplicationRobotSoftwareSuiteNameOutput
	ToRobotApplicationRobotSoftwareSuiteNameOutputWithContext(context.Context) RobotApplicationRobotSoftwareSuiteNameOutput
}

var robotApplicationRobotSoftwareSuiteNamePtrType = reflect.TypeOf((**RobotApplicationRobotSoftwareSuiteName)(nil)).Elem()

type RobotApplicationRobotSoftwareSuiteNamePtrInput interface {
	pulumi.Input

	ToRobotApplicationRobotSoftwareSuiteNamePtrOutput() RobotApplicationRobotSoftwareSuiteNamePtrOutput
	ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Context) RobotApplicationRobotSoftwareSuiteNamePtrOutput
}

type robotApplicationRobotSoftwareSuiteNamePtr string

func RobotApplicationRobotSoftwareSuiteNamePtr(v string) RobotApplicationRobotSoftwareSuiteNamePtrInput {
	return (*robotApplicationRobotSoftwareSuiteNamePtr)(&v)
}

func (*robotApplicationRobotSoftwareSuiteNamePtr) ElementType() reflect.Type {
	return robotApplicationRobotSoftwareSuiteNamePtrType
}

func (in *robotApplicationRobotSoftwareSuiteNamePtr) ToRobotApplicationRobotSoftwareSuiteNamePtrOutput() RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutput(in).(RobotApplicationRobotSoftwareSuiteNamePtrOutput)
}

func (in *robotApplicationRobotSoftwareSuiteNamePtr) ToRobotApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RobotApplicationRobotSoftwareSuiteNamePtrOutput)
}

// The version of robot software suite.
type RobotApplicationRobotSoftwareSuiteVersion string

const (
	RobotApplicationRobotSoftwareSuiteVersionKinetic = RobotApplicationRobotSoftwareSuiteVersion("Kinetic")
	RobotApplicationRobotSoftwareSuiteVersionMelodic = RobotApplicationRobotSoftwareSuiteVersion("Melodic")
	RobotApplicationRobotSoftwareSuiteVersionDashing = RobotApplicationRobotSoftwareSuiteVersion("Dashing")
)

func (RobotApplicationRobotSoftwareSuiteVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToRobotApplicationRobotSoftwareSuiteVersionOutput() RobotApplicationRobotSoftwareSuiteVersionOutput {
	return pulumi.ToOutput(e).(RobotApplicationRobotSoftwareSuiteVersionOutput)
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToRobotApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RobotApplicationRobotSoftwareSuiteVersionOutput)
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutput() RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return e.ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return RobotApplicationRobotSoftwareSuiteVersion(e).ToRobotApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx).ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx)
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RobotApplicationRobotSoftwareSuiteVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RobotApplicationRobotSoftwareSuiteVersionOutput struct{ *pulumi.OutputState }

func (RobotApplicationRobotSoftwareSuiteVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToRobotApplicationRobotSoftwareSuiteVersionOutput() RobotApplicationRobotSoftwareSuiteVersionOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToRobotApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutput() RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o.ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RobotApplicationRobotSoftwareSuiteVersion) *RobotApplicationRobotSoftwareSuiteVersion {
		return &v
	}).(RobotApplicationRobotSoftwareSuiteVersionPtrOutput)
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationRobotSoftwareSuiteVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationRobotSoftwareSuiteVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RobotApplicationRobotSoftwareSuiteVersionPtrOutput struct{ *pulumi.OutputState }

func (RobotApplicationRobotSoftwareSuiteVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RobotApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (o RobotApplicationRobotSoftwareSuiteVersionPtrOutput) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutput() RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteVersionPtrOutput) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o
}

func (o RobotApplicationRobotSoftwareSuiteVersionPtrOutput) Elem() RobotApplicationRobotSoftwareSuiteVersionOutput {
	return o.ApplyT(func(v *RobotApplicationRobotSoftwareSuiteVersion) RobotApplicationRobotSoftwareSuiteVersion {
		if v != nil {
			return *v
		}
		var ret RobotApplicationRobotSoftwareSuiteVersion
		return ret
	}).(RobotApplicationRobotSoftwareSuiteVersionOutput)
}

func (o RobotApplicationRobotSoftwareSuiteVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationRobotSoftwareSuiteVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RobotApplicationRobotSoftwareSuiteVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RobotApplicationRobotSoftwareSuiteVersionInput is an input type that accepts RobotApplicationRobotSoftwareSuiteVersionArgs and RobotApplicationRobotSoftwareSuiteVersionOutput values.
// You can construct a concrete instance of `RobotApplicationRobotSoftwareSuiteVersionInput` via:
//
//          RobotApplicationRobotSoftwareSuiteVersionArgs{...}
type RobotApplicationRobotSoftwareSuiteVersionInput interface {
	pulumi.Input

	ToRobotApplicationRobotSoftwareSuiteVersionOutput() RobotApplicationRobotSoftwareSuiteVersionOutput
	ToRobotApplicationRobotSoftwareSuiteVersionOutputWithContext(context.Context) RobotApplicationRobotSoftwareSuiteVersionOutput
}

var robotApplicationRobotSoftwareSuiteVersionPtrType = reflect.TypeOf((**RobotApplicationRobotSoftwareSuiteVersion)(nil)).Elem()

type RobotApplicationRobotSoftwareSuiteVersionPtrInput interface {
	pulumi.Input

	ToRobotApplicationRobotSoftwareSuiteVersionPtrOutput() RobotApplicationRobotSoftwareSuiteVersionPtrOutput
	ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Context) RobotApplicationRobotSoftwareSuiteVersionPtrOutput
}

type robotApplicationRobotSoftwareSuiteVersionPtr string

func RobotApplicationRobotSoftwareSuiteVersionPtr(v string) RobotApplicationRobotSoftwareSuiteVersionPtrInput {
	return (*robotApplicationRobotSoftwareSuiteVersionPtr)(&v)
}

func (*robotApplicationRobotSoftwareSuiteVersionPtr) ElementType() reflect.Type {
	return robotApplicationRobotSoftwareSuiteVersionPtrType
}

func (in *robotApplicationRobotSoftwareSuiteVersionPtr) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutput() RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutput(in).(RobotApplicationRobotSoftwareSuiteVersionPtrOutput)
}

func (in *robotApplicationRobotSoftwareSuiteVersionPtr) ToRobotApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) RobotApplicationRobotSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RobotApplicationRobotSoftwareSuiteVersionPtrOutput)
}

// The architecture of robot application.
type RobotApplicationSourceConfigArchitecture string

const (
	RobotApplicationSourceConfigArchitectureX8664 = RobotApplicationSourceConfigArchitecture("X86_64")
	RobotApplicationSourceConfigArchitectureArm64 = RobotApplicationSourceConfigArchitecture("ARM64")
	RobotApplicationSourceConfigArchitectureArmhf = RobotApplicationSourceConfigArchitecture("ARMHF")
)

func (RobotApplicationSourceConfigArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (e RobotApplicationSourceConfigArchitecture) ToRobotApplicationSourceConfigArchitectureOutput() RobotApplicationSourceConfigArchitectureOutput {
	return pulumi.ToOutput(e).(RobotApplicationSourceConfigArchitectureOutput)
}

func (e RobotApplicationSourceConfigArchitecture) ToRobotApplicationSourceConfigArchitectureOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RobotApplicationSourceConfigArchitectureOutput)
}

func (e RobotApplicationSourceConfigArchitecture) ToRobotApplicationSourceConfigArchitecturePtrOutput() RobotApplicationSourceConfigArchitecturePtrOutput {
	return e.ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(context.Background())
}

func (e RobotApplicationSourceConfigArchitecture) ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitecturePtrOutput {
	return RobotApplicationSourceConfigArchitecture(e).ToRobotApplicationSourceConfigArchitectureOutputWithContext(ctx).ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(ctx)
}

func (e RobotApplicationSourceConfigArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationSourceConfigArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotApplicationSourceConfigArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RobotApplicationSourceConfigArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RobotApplicationSourceConfigArchitectureOutput struct{ *pulumi.OutputState }

func (RobotApplicationSourceConfigArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToRobotApplicationSourceConfigArchitectureOutput() RobotApplicationSourceConfigArchitectureOutput {
	return o
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToRobotApplicationSourceConfigArchitectureOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitectureOutput {
	return o
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToRobotApplicationSourceConfigArchitecturePtrOutput() RobotApplicationSourceConfigArchitecturePtrOutput {
	return o.ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(context.Background())
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RobotApplicationSourceConfigArchitecture) *RobotApplicationSourceConfigArchitecture {
		return &v
	}).(RobotApplicationSourceConfigArchitecturePtrOutput)
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationSourceConfigArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationSourceConfigArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotApplicationSourceConfigArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RobotApplicationSourceConfigArchitecturePtrOutput struct{ *pulumi.OutputState }

func (RobotApplicationSourceConfigArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RobotApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (o RobotApplicationSourceConfigArchitecturePtrOutput) ToRobotApplicationSourceConfigArchitecturePtrOutput() RobotApplicationSourceConfigArchitecturePtrOutput {
	return o
}

func (o RobotApplicationSourceConfigArchitecturePtrOutput) ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitecturePtrOutput {
	return o
}

func (o RobotApplicationSourceConfigArchitecturePtrOutput) Elem() RobotApplicationSourceConfigArchitectureOutput {
	return o.ApplyT(func(v *RobotApplicationSourceConfigArchitecture) RobotApplicationSourceConfigArchitecture {
		if v != nil {
			return *v
		}
		var ret RobotApplicationSourceConfigArchitecture
		return ret
	}).(RobotApplicationSourceConfigArchitectureOutput)
}

func (o RobotApplicationSourceConfigArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotApplicationSourceConfigArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RobotApplicationSourceConfigArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RobotApplicationSourceConfigArchitectureInput is an input type that accepts RobotApplicationSourceConfigArchitectureArgs and RobotApplicationSourceConfigArchitectureOutput values.
// You can construct a concrete instance of `RobotApplicationSourceConfigArchitectureInput` via:
//
//          RobotApplicationSourceConfigArchitectureArgs{...}
type RobotApplicationSourceConfigArchitectureInput interface {
	pulumi.Input

	ToRobotApplicationSourceConfigArchitectureOutput() RobotApplicationSourceConfigArchitectureOutput
	ToRobotApplicationSourceConfigArchitectureOutputWithContext(context.Context) RobotApplicationSourceConfigArchitectureOutput
}

var robotApplicationSourceConfigArchitecturePtrType = reflect.TypeOf((**RobotApplicationSourceConfigArchitecture)(nil)).Elem()

type RobotApplicationSourceConfigArchitecturePtrInput interface {
	pulumi.Input

	ToRobotApplicationSourceConfigArchitecturePtrOutput() RobotApplicationSourceConfigArchitecturePtrOutput
	ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(context.Context) RobotApplicationSourceConfigArchitecturePtrOutput
}

type robotApplicationSourceConfigArchitecturePtr string

func RobotApplicationSourceConfigArchitecturePtr(v string) RobotApplicationSourceConfigArchitecturePtrInput {
	return (*robotApplicationSourceConfigArchitecturePtr)(&v)
}

func (*robotApplicationSourceConfigArchitecturePtr) ElementType() reflect.Type {
	return robotApplicationSourceConfigArchitecturePtrType
}

func (in *robotApplicationSourceConfigArchitecturePtr) ToRobotApplicationSourceConfigArchitecturePtrOutput() RobotApplicationSourceConfigArchitecturePtrOutput {
	return pulumi.ToOutput(in).(RobotApplicationSourceConfigArchitecturePtrOutput)
}

func (in *robotApplicationSourceConfigArchitecturePtr) ToRobotApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) RobotApplicationSourceConfigArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RobotApplicationSourceConfigArchitecturePtrOutput)
}

// The target architecture of the robot.
type RobotArchitecture string

const (
	RobotArchitectureX8664 = RobotArchitecture("X86_64")
	RobotArchitectureArm64 = RobotArchitecture("ARM64")
	RobotArchitectureArmhf = RobotArchitecture("ARMHF")
)

func (RobotArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotArchitecture)(nil)).Elem()
}

func (e RobotArchitecture) ToRobotArchitectureOutput() RobotArchitectureOutput {
	return pulumi.ToOutput(e).(RobotArchitectureOutput)
}

func (e RobotArchitecture) ToRobotArchitectureOutputWithContext(ctx context.Context) RobotArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RobotArchitectureOutput)
}

func (e RobotArchitecture) ToRobotArchitecturePtrOutput() RobotArchitecturePtrOutput {
	return e.ToRobotArchitecturePtrOutputWithContext(context.Background())
}

func (e RobotArchitecture) ToRobotArchitecturePtrOutputWithContext(ctx context.Context) RobotArchitecturePtrOutput {
	return RobotArchitecture(e).ToRobotArchitectureOutputWithContext(ctx).ToRobotArchitecturePtrOutputWithContext(ctx)
}

func (e RobotArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RobotArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RobotArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RobotArchitectureOutput struct{ *pulumi.OutputState }

func (RobotArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RobotArchitecture)(nil)).Elem()
}

func (o RobotArchitectureOutput) ToRobotArchitectureOutput() RobotArchitectureOutput {
	return o
}

func (o RobotArchitectureOutput) ToRobotArchitectureOutputWithContext(ctx context.Context) RobotArchitectureOutput {
	return o
}

func (o RobotArchitectureOutput) ToRobotArchitecturePtrOutput() RobotArchitecturePtrOutput {
	return o.ToRobotArchitecturePtrOutputWithContext(context.Background())
}

func (o RobotArchitectureOutput) ToRobotArchitecturePtrOutputWithContext(ctx context.Context) RobotArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RobotArchitecture) *RobotArchitecture {
		return &v
	}).(RobotArchitecturePtrOutput)
}

func (o RobotArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RobotArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RobotArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RobotArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RobotArchitecturePtrOutput struct{ *pulumi.OutputState }

func (RobotArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RobotArchitecture)(nil)).Elem()
}

func (o RobotArchitecturePtrOutput) ToRobotArchitecturePtrOutput() RobotArchitecturePtrOutput {
	return o
}

func (o RobotArchitecturePtrOutput) ToRobotArchitecturePtrOutputWithContext(ctx context.Context) RobotArchitecturePtrOutput {
	return o
}

func (o RobotArchitecturePtrOutput) Elem() RobotArchitectureOutput {
	return o.ApplyT(func(v *RobotArchitecture) RobotArchitecture {
		if v != nil {
			return *v
		}
		var ret RobotArchitecture
		return ret
	}).(RobotArchitectureOutput)
}

func (o RobotArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RobotArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RobotArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RobotArchitectureInput is an input type that accepts RobotArchitectureArgs and RobotArchitectureOutput values.
// You can construct a concrete instance of `RobotArchitectureInput` via:
//
//          RobotArchitectureArgs{...}
type RobotArchitectureInput interface {
	pulumi.Input

	ToRobotArchitectureOutput() RobotArchitectureOutput
	ToRobotArchitectureOutputWithContext(context.Context) RobotArchitectureOutput
}

var robotArchitecturePtrType = reflect.TypeOf((**RobotArchitecture)(nil)).Elem()

type RobotArchitecturePtrInput interface {
	pulumi.Input

	ToRobotArchitecturePtrOutput() RobotArchitecturePtrOutput
	ToRobotArchitecturePtrOutputWithContext(context.Context) RobotArchitecturePtrOutput
}

type robotArchitecturePtr string

func RobotArchitecturePtr(v string) RobotArchitecturePtrInput {
	return (*robotArchitecturePtr)(&v)
}

func (*robotArchitecturePtr) ElementType() reflect.Type {
	return robotArchitecturePtrType
}

func (in *robotArchitecturePtr) ToRobotArchitecturePtrOutput() RobotArchitecturePtrOutput {
	return pulumi.ToOutput(in).(RobotArchitecturePtrOutput)
}

func (in *robotArchitecturePtr) ToRobotArchitecturePtrOutputWithContext(ctx context.Context) RobotArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RobotArchitecturePtrOutput)
}

// The name of the rendering engine.
type SimulationApplicationRenderingEngineName string

const (
	SimulationApplicationRenderingEngineNameOgre = SimulationApplicationRenderingEngineName("OGRE")
)

func (SimulationApplicationRenderingEngineName) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRenderingEngineName)(nil)).Elem()
}

func (e SimulationApplicationRenderingEngineName) ToSimulationApplicationRenderingEngineNameOutput() SimulationApplicationRenderingEngineNameOutput {
	return pulumi.ToOutput(e).(SimulationApplicationRenderingEngineNameOutput)
}

func (e SimulationApplicationRenderingEngineName) ToSimulationApplicationRenderingEngineNameOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationRenderingEngineNameOutput)
}

func (e SimulationApplicationRenderingEngineName) ToSimulationApplicationRenderingEngineNamePtrOutput() SimulationApplicationRenderingEngineNamePtrOutput {
	return e.ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRenderingEngineName) ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNamePtrOutput {
	return SimulationApplicationRenderingEngineName(e).ToSimulationApplicationRenderingEngineNameOutputWithContext(ctx).ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(ctx)
}

func (e SimulationApplicationRenderingEngineName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRenderingEngineName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRenderingEngineName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRenderingEngineName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationRenderingEngineNameOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRenderingEngineNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRenderingEngineName)(nil)).Elem()
}

func (o SimulationApplicationRenderingEngineNameOutput) ToSimulationApplicationRenderingEngineNameOutput() SimulationApplicationRenderingEngineNameOutput {
	return o
}

func (o SimulationApplicationRenderingEngineNameOutput) ToSimulationApplicationRenderingEngineNameOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNameOutput {
	return o
}

func (o SimulationApplicationRenderingEngineNameOutput) ToSimulationApplicationRenderingEngineNamePtrOutput() SimulationApplicationRenderingEngineNamePtrOutput {
	return o.ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRenderingEngineNameOutput) ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationRenderingEngineName) *SimulationApplicationRenderingEngineName {
		return &v
	}).(SimulationApplicationRenderingEngineNamePtrOutput)
}

func (o SimulationApplicationRenderingEngineNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationRenderingEngineNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRenderingEngineName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationRenderingEngineNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRenderingEngineNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRenderingEngineName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationRenderingEngineNamePtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRenderingEngineNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationRenderingEngineName)(nil)).Elem()
}

func (o SimulationApplicationRenderingEngineNamePtrOutput) ToSimulationApplicationRenderingEngineNamePtrOutput() SimulationApplicationRenderingEngineNamePtrOutput {
	return o
}

func (o SimulationApplicationRenderingEngineNamePtrOutput) ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNamePtrOutput {
	return o
}

func (o SimulationApplicationRenderingEngineNamePtrOutput) Elem() SimulationApplicationRenderingEngineNameOutput {
	return o.ApplyT(func(v *SimulationApplicationRenderingEngineName) SimulationApplicationRenderingEngineName {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationRenderingEngineName
		return ret
	}).(SimulationApplicationRenderingEngineNameOutput)
}

func (o SimulationApplicationRenderingEngineNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRenderingEngineNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationRenderingEngineName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationRenderingEngineNameInput is an input type that accepts SimulationApplicationRenderingEngineNameArgs and SimulationApplicationRenderingEngineNameOutput values.
// You can construct a concrete instance of `SimulationApplicationRenderingEngineNameInput` via:
//
//          SimulationApplicationRenderingEngineNameArgs{...}
type SimulationApplicationRenderingEngineNameInput interface {
	pulumi.Input

	ToSimulationApplicationRenderingEngineNameOutput() SimulationApplicationRenderingEngineNameOutput
	ToSimulationApplicationRenderingEngineNameOutputWithContext(context.Context) SimulationApplicationRenderingEngineNameOutput
}

var simulationApplicationRenderingEngineNamePtrType = reflect.TypeOf((**SimulationApplicationRenderingEngineName)(nil)).Elem()

type SimulationApplicationRenderingEngineNamePtrInput interface {
	pulumi.Input

	ToSimulationApplicationRenderingEngineNamePtrOutput() SimulationApplicationRenderingEngineNamePtrOutput
	ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(context.Context) SimulationApplicationRenderingEngineNamePtrOutput
}

type simulationApplicationRenderingEngineNamePtr string

func SimulationApplicationRenderingEngineNamePtr(v string) SimulationApplicationRenderingEngineNamePtrInput {
	return (*simulationApplicationRenderingEngineNamePtr)(&v)
}

func (*simulationApplicationRenderingEngineNamePtr) ElementType() reflect.Type {
	return simulationApplicationRenderingEngineNamePtrType
}

func (in *simulationApplicationRenderingEngineNamePtr) ToSimulationApplicationRenderingEngineNamePtrOutput() SimulationApplicationRenderingEngineNamePtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationRenderingEngineNamePtrOutput)
}

func (in *simulationApplicationRenderingEngineNamePtr) ToSimulationApplicationRenderingEngineNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRenderingEngineNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationRenderingEngineNamePtrOutput)
}

// The name of the robot software suite.
type SimulationApplicationRobotSoftwareSuiteName string

const (
	SimulationApplicationRobotSoftwareSuiteNameRos     = SimulationApplicationRobotSoftwareSuiteName("ROS")
	SimulationApplicationRobotSoftwareSuiteNameRos2    = SimulationApplicationRobotSoftwareSuiteName("ROS2")
	SimulationApplicationRobotSoftwareSuiteNameGeneral = SimulationApplicationRobotSoftwareSuiteName("General")
)

func (SimulationApplicationRobotSoftwareSuiteName) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToSimulationApplicationRobotSoftwareSuiteNameOutput() SimulationApplicationRobotSoftwareSuiteNameOutput {
	return pulumi.ToOutput(e).(SimulationApplicationRobotSoftwareSuiteNameOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToSimulationApplicationRobotSoftwareSuiteNameOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationRobotSoftwareSuiteNameOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutput() SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return e.ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return SimulationApplicationRobotSoftwareSuiteName(e).ToSimulationApplicationRobotSoftwareSuiteNameOutputWithContext(ctx).ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx)
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRobotSoftwareSuiteName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationRobotSoftwareSuiteNameOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRobotSoftwareSuiteNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToSimulationApplicationRobotSoftwareSuiteNameOutput() SimulationApplicationRobotSoftwareSuiteNameOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToSimulationApplicationRobotSoftwareSuiteNameOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNameOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutput() SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return o.ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationRobotSoftwareSuiteName) *SimulationApplicationRobotSoftwareSuiteName {
		return &v
	}).(SimulationApplicationRobotSoftwareSuiteNamePtrOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRobotSoftwareSuiteName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRobotSoftwareSuiteName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationRobotSoftwareSuiteNamePtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRobotSoftwareSuiteNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationRobotSoftwareSuiteName)(nil)).Elem()
}

func (o SimulationApplicationRobotSoftwareSuiteNamePtrOutput) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutput() SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteNamePtrOutput) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteNamePtrOutput) Elem() SimulationApplicationRobotSoftwareSuiteNameOutput {
	return o.ApplyT(func(v *SimulationApplicationRobotSoftwareSuiteName) SimulationApplicationRobotSoftwareSuiteName {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationRobotSoftwareSuiteName
		return ret
	}).(SimulationApplicationRobotSoftwareSuiteNameOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationRobotSoftwareSuiteName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationRobotSoftwareSuiteNameInput is an input type that accepts SimulationApplicationRobotSoftwareSuiteNameArgs and SimulationApplicationRobotSoftwareSuiteNameOutput values.
// You can construct a concrete instance of `SimulationApplicationRobotSoftwareSuiteNameInput` via:
//
//          SimulationApplicationRobotSoftwareSuiteNameArgs{...}
type SimulationApplicationRobotSoftwareSuiteNameInput interface {
	pulumi.Input

	ToSimulationApplicationRobotSoftwareSuiteNameOutput() SimulationApplicationRobotSoftwareSuiteNameOutput
	ToSimulationApplicationRobotSoftwareSuiteNameOutputWithContext(context.Context) SimulationApplicationRobotSoftwareSuiteNameOutput
}

var simulationApplicationRobotSoftwareSuiteNamePtrType = reflect.TypeOf((**SimulationApplicationRobotSoftwareSuiteName)(nil)).Elem()

type SimulationApplicationRobotSoftwareSuiteNamePtrInput interface {
	pulumi.Input

	ToSimulationApplicationRobotSoftwareSuiteNamePtrOutput() SimulationApplicationRobotSoftwareSuiteNamePtrOutput
	ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(context.Context) SimulationApplicationRobotSoftwareSuiteNamePtrOutput
}

type simulationApplicationRobotSoftwareSuiteNamePtr string

func SimulationApplicationRobotSoftwareSuiteNamePtr(v string) SimulationApplicationRobotSoftwareSuiteNamePtrInput {
	return (*simulationApplicationRobotSoftwareSuiteNamePtr)(&v)
}

func (*simulationApplicationRobotSoftwareSuiteNamePtr) ElementType() reflect.Type {
	return simulationApplicationRobotSoftwareSuiteNamePtrType
}

func (in *simulationApplicationRobotSoftwareSuiteNamePtr) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutput() SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationRobotSoftwareSuiteNamePtrOutput)
}

func (in *simulationApplicationRobotSoftwareSuiteNamePtr) ToSimulationApplicationRobotSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationRobotSoftwareSuiteNamePtrOutput)
}

// The version of the robot software suite.
type SimulationApplicationRobotSoftwareSuiteVersion string

const (
	SimulationApplicationRobotSoftwareSuiteVersionKinetic = SimulationApplicationRobotSoftwareSuiteVersion("Kinetic")
	SimulationApplicationRobotSoftwareSuiteVersionMelodic = SimulationApplicationRobotSoftwareSuiteVersion("Melodic")
	SimulationApplicationRobotSoftwareSuiteVersionDashing = SimulationApplicationRobotSoftwareSuiteVersion("Dashing")
	SimulationApplicationRobotSoftwareSuiteVersionFoxy    = SimulationApplicationRobotSoftwareSuiteVersion("Foxy")
)

func (SimulationApplicationRobotSoftwareSuiteVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToSimulationApplicationRobotSoftwareSuiteVersionOutput() SimulationApplicationRobotSoftwareSuiteVersionOutput {
	return pulumi.ToOutput(e).(SimulationApplicationRobotSoftwareSuiteVersionOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToSimulationApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationRobotSoftwareSuiteVersionOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutput() SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return e.ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return SimulationApplicationRobotSoftwareSuiteVersion(e).ToSimulationApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx).ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx)
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationRobotSoftwareSuiteVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationRobotSoftwareSuiteVersionOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRobotSoftwareSuiteVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToSimulationApplicationRobotSoftwareSuiteVersionOutput() SimulationApplicationRobotSoftwareSuiteVersionOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToSimulationApplicationRobotSoftwareSuiteVersionOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutput() SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o.ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationRobotSoftwareSuiteVersion) *SimulationApplicationRobotSoftwareSuiteVersion {
		return &v
	}).(SimulationApplicationRobotSoftwareSuiteVersionPtrOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRobotSoftwareSuiteVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationRobotSoftwareSuiteVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationRobotSoftwareSuiteVersionPtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationRobotSoftwareSuiteVersion)(nil)).Elem()
}

func (o SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutput() SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return o
}

func (o SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) Elem() SimulationApplicationRobotSoftwareSuiteVersionOutput {
	return o.ApplyT(func(v *SimulationApplicationRobotSoftwareSuiteVersion) SimulationApplicationRobotSoftwareSuiteVersion {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationRobotSoftwareSuiteVersion
		return ret
	}).(SimulationApplicationRobotSoftwareSuiteVersionOutput)
}

func (o SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationRobotSoftwareSuiteVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationRobotSoftwareSuiteVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationRobotSoftwareSuiteVersionInput is an input type that accepts SimulationApplicationRobotSoftwareSuiteVersionArgs and SimulationApplicationRobotSoftwareSuiteVersionOutput values.
// You can construct a concrete instance of `SimulationApplicationRobotSoftwareSuiteVersionInput` via:
//
//          SimulationApplicationRobotSoftwareSuiteVersionArgs{...}
type SimulationApplicationRobotSoftwareSuiteVersionInput interface {
	pulumi.Input

	ToSimulationApplicationRobotSoftwareSuiteVersionOutput() SimulationApplicationRobotSoftwareSuiteVersionOutput
	ToSimulationApplicationRobotSoftwareSuiteVersionOutputWithContext(context.Context) SimulationApplicationRobotSoftwareSuiteVersionOutput
}

var simulationApplicationRobotSoftwareSuiteVersionPtrType = reflect.TypeOf((**SimulationApplicationRobotSoftwareSuiteVersion)(nil)).Elem()

type SimulationApplicationRobotSoftwareSuiteVersionPtrInput interface {
	pulumi.Input

	ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutput() SimulationApplicationRobotSoftwareSuiteVersionPtrOutput
	ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(context.Context) SimulationApplicationRobotSoftwareSuiteVersionPtrOutput
}

type simulationApplicationRobotSoftwareSuiteVersionPtr string

func SimulationApplicationRobotSoftwareSuiteVersionPtr(v string) SimulationApplicationRobotSoftwareSuiteVersionPtrInput {
	return (*simulationApplicationRobotSoftwareSuiteVersionPtr)(&v)
}

func (*simulationApplicationRobotSoftwareSuiteVersionPtr) ElementType() reflect.Type {
	return simulationApplicationRobotSoftwareSuiteVersionPtrType
}

func (in *simulationApplicationRobotSoftwareSuiteVersionPtr) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutput() SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationRobotSoftwareSuiteVersionPtrOutput)
}

func (in *simulationApplicationRobotSoftwareSuiteVersionPtr) ToSimulationApplicationRobotSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationRobotSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationRobotSoftwareSuiteVersionPtrOutput)
}

// The name of the simulation software suite.
type SimulationApplicationSimulationSoftwareSuiteName string

const (
	SimulationApplicationSimulationSoftwareSuiteNameGazebo            = SimulationApplicationSimulationSoftwareSuiteName("Gazebo")
	SimulationApplicationSimulationSoftwareSuiteNameRosbagPlay        = SimulationApplicationSimulationSoftwareSuiteName("RosbagPlay")
	SimulationApplicationSimulationSoftwareSuiteNameSimulationRuntime = SimulationApplicationSimulationSoftwareSuiteName("SimulationRuntime")
)

func (SimulationApplicationSimulationSoftwareSuiteName) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteName)(nil)).Elem()
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToSimulationApplicationSimulationSoftwareSuiteNameOutput() SimulationApplicationSimulationSoftwareSuiteNameOutput {
	return pulumi.ToOutput(e).(SimulationApplicationSimulationSoftwareSuiteNameOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToSimulationApplicationSimulationSoftwareSuiteNameOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationSimulationSoftwareSuiteNameOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutput() SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return e.ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return SimulationApplicationSimulationSoftwareSuiteName(e).ToSimulationApplicationSimulationSoftwareSuiteNameOutputWithContext(ctx).ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(ctx)
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSimulationSoftwareSuiteName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationSimulationSoftwareSuiteNameOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSimulationSoftwareSuiteNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteName)(nil)).Elem()
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToSimulationApplicationSimulationSoftwareSuiteNameOutput() SimulationApplicationSimulationSoftwareSuiteNameOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToSimulationApplicationSimulationSoftwareSuiteNameOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNameOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutput() SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return o.ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationSimulationSoftwareSuiteName) *SimulationApplicationSimulationSoftwareSuiteName {
		return &v
	}).(SimulationApplicationSimulationSoftwareSuiteNamePtrOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSimulationSoftwareSuiteName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSimulationSoftwareSuiteName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationSimulationSoftwareSuiteNamePtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationSimulationSoftwareSuiteName)(nil)).Elem()
}

func (o SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutput() SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) Elem() SimulationApplicationSimulationSoftwareSuiteNameOutput {
	return o.ApplyT(func(v *SimulationApplicationSimulationSoftwareSuiteName) SimulationApplicationSimulationSoftwareSuiteName {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationSimulationSoftwareSuiteName
		return ret
	}).(SimulationApplicationSimulationSoftwareSuiteNameOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationSimulationSoftwareSuiteName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationSimulationSoftwareSuiteNameInput is an input type that accepts SimulationApplicationSimulationSoftwareSuiteNameArgs and SimulationApplicationSimulationSoftwareSuiteNameOutput values.
// You can construct a concrete instance of `SimulationApplicationSimulationSoftwareSuiteNameInput` via:
//
//          SimulationApplicationSimulationSoftwareSuiteNameArgs{...}
type SimulationApplicationSimulationSoftwareSuiteNameInput interface {
	pulumi.Input

	ToSimulationApplicationSimulationSoftwareSuiteNameOutput() SimulationApplicationSimulationSoftwareSuiteNameOutput
	ToSimulationApplicationSimulationSoftwareSuiteNameOutputWithContext(context.Context) SimulationApplicationSimulationSoftwareSuiteNameOutput
}

var simulationApplicationSimulationSoftwareSuiteNamePtrType = reflect.TypeOf((**SimulationApplicationSimulationSoftwareSuiteName)(nil)).Elem()

type SimulationApplicationSimulationSoftwareSuiteNamePtrInput interface {
	pulumi.Input

	ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutput() SimulationApplicationSimulationSoftwareSuiteNamePtrOutput
	ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(context.Context) SimulationApplicationSimulationSoftwareSuiteNamePtrOutput
}

type simulationApplicationSimulationSoftwareSuiteNamePtr string

func SimulationApplicationSimulationSoftwareSuiteNamePtr(v string) SimulationApplicationSimulationSoftwareSuiteNamePtrInput {
	return (*simulationApplicationSimulationSoftwareSuiteNamePtr)(&v)
}

func (*simulationApplicationSimulationSoftwareSuiteNamePtr) ElementType() reflect.Type {
	return simulationApplicationSimulationSoftwareSuiteNamePtrType
}

func (in *simulationApplicationSimulationSoftwareSuiteNamePtr) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutput() SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationSimulationSoftwareSuiteNamePtrOutput)
}

func (in *simulationApplicationSimulationSoftwareSuiteNamePtr) ToSimulationApplicationSimulationSoftwareSuiteNamePtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationSimulationSoftwareSuiteNamePtrOutput)
}

// The version of the simulation software suite.
type SimulationApplicationSimulationSoftwareSuiteVersion string

const (
	SimulationApplicationSimulationSoftwareSuiteVersionSeven   = SimulationApplicationSimulationSoftwareSuiteVersion("7")
	SimulationApplicationSimulationSoftwareSuiteVersionNine    = SimulationApplicationSimulationSoftwareSuiteVersion("9")
	SimulationApplicationSimulationSoftwareSuiteVersion_11     = SimulationApplicationSimulationSoftwareSuiteVersion("11")
	SimulationApplicationSimulationSoftwareSuiteVersionKinetic = SimulationApplicationSimulationSoftwareSuiteVersion("Kinetic")
	SimulationApplicationSimulationSoftwareSuiteVersionMelodic = SimulationApplicationSimulationSoftwareSuiteVersion("Melodic")
	SimulationApplicationSimulationSoftwareSuiteVersionDashing = SimulationApplicationSimulationSoftwareSuiteVersion("Dashing")
	SimulationApplicationSimulationSoftwareSuiteVersionFoxy    = SimulationApplicationSimulationSoftwareSuiteVersion("Foxy")
)

func (SimulationApplicationSimulationSoftwareSuiteVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteVersion)(nil)).Elem()
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToSimulationApplicationSimulationSoftwareSuiteVersionOutput() SimulationApplicationSimulationSoftwareSuiteVersionOutput {
	return pulumi.ToOutput(e).(SimulationApplicationSimulationSoftwareSuiteVersionOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToSimulationApplicationSimulationSoftwareSuiteVersionOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationSimulationSoftwareSuiteVersionOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutput() SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return e.ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return SimulationApplicationSimulationSoftwareSuiteVersion(e).ToSimulationApplicationSimulationSoftwareSuiteVersionOutputWithContext(ctx).ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(ctx)
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSimulationSoftwareSuiteVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationSimulationSoftwareSuiteVersionOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSimulationSoftwareSuiteVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteVersion)(nil)).Elem()
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionOutput() SimulationApplicationSimulationSoftwareSuiteVersionOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutput() SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return o.ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationSimulationSoftwareSuiteVersion) *SimulationApplicationSimulationSoftwareSuiteVersion {
		return &v
	}).(SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSimulationSoftwareSuiteVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSimulationSoftwareSuiteVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationSimulationSoftwareSuiteVersion)(nil)).Elem()
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutput() SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return o
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) Elem() SimulationApplicationSimulationSoftwareSuiteVersionOutput {
	return o.ApplyT(func(v *SimulationApplicationSimulationSoftwareSuiteVersion) SimulationApplicationSimulationSoftwareSuiteVersion {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationSimulationSoftwareSuiteVersion
		return ret
	}).(SimulationApplicationSimulationSoftwareSuiteVersionOutput)
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationSimulationSoftwareSuiteVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationSimulationSoftwareSuiteVersionInput is an input type that accepts SimulationApplicationSimulationSoftwareSuiteVersionArgs and SimulationApplicationSimulationSoftwareSuiteVersionOutput values.
// You can construct a concrete instance of `SimulationApplicationSimulationSoftwareSuiteVersionInput` via:
//
//          SimulationApplicationSimulationSoftwareSuiteVersionArgs{...}
type SimulationApplicationSimulationSoftwareSuiteVersionInput interface {
	pulumi.Input

	ToSimulationApplicationSimulationSoftwareSuiteVersionOutput() SimulationApplicationSimulationSoftwareSuiteVersionOutput
	ToSimulationApplicationSimulationSoftwareSuiteVersionOutputWithContext(context.Context) SimulationApplicationSimulationSoftwareSuiteVersionOutput
}

var simulationApplicationSimulationSoftwareSuiteVersionPtrType = reflect.TypeOf((**SimulationApplicationSimulationSoftwareSuiteVersion)(nil)).Elem()

type SimulationApplicationSimulationSoftwareSuiteVersionPtrInput interface {
	pulumi.Input

	ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutput() SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput
	ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(context.Context) SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput
}

type simulationApplicationSimulationSoftwareSuiteVersionPtr string

func SimulationApplicationSimulationSoftwareSuiteVersionPtr(v string) SimulationApplicationSimulationSoftwareSuiteVersionPtrInput {
	return (*simulationApplicationSimulationSoftwareSuiteVersionPtr)(&v)
}

func (*simulationApplicationSimulationSoftwareSuiteVersionPtr) ElementType() reflect.Type {
	return simulationApplicationSimulationSoftwareSuiteVersionPtrType
}

func (in *simulationApplicationSimulationSoftwareSuiteVersionPtr) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutput() SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput)
}

func (in *simulationApplicationSimulationSoftwareSuiteVersionPtr) ToSimulationApplicationSimulationSoftwareSuiteVersionPtrOutputWithContext(ctx context.Context) SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput)
}

// The target processor architecture for the application.
type SimulationApplicationSourceConfigArchitecture string

const (
	SimulationApplicationSourceConfigArchitectureX8664 = SimulationApplicationSourceConfigArchitecture("X86_64")
	SimulationApplicationSourceConfigArchitectureArm64 = SimulationApplicationSourceConfigArchitecture("ARM64")
	SimulationApplicationSourceConfigArchitectureArmhf = SimulationApplicationSourceConfigArchitecture("ARMHF")
)

func (SimulationApplicationSourceConfigArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (e SimulationApplicationSourceConfigArchitecture) ToSimulationApplicationSourceConfigArchitectureOutput() SimulationApplicationSourceConfigArchitectureOutput {
	return pulumi.ToOutput(e).(SimulationApplicationSourceConfigArchitectureOutput)
}

func (e SimulationApplicationSourceConfigArchitecture) ToSimulationApplicationSourceConfigArchitectureOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SimulationApplicationSourceConfigArchitectureOutput)
}

func (e SimulationApplicationSourceConfigArchitecture) ToSimulationApplicationSourceConfigArchitecturePtrOutput() SimulationApplicationSourceConfigArchitecturePtrOutput {
	return e.ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSourceConfigArchitecture) ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitecturePtrOutput {
	return SimulationApplicationSourceConfigArchitecture(e).ToSimulationApplicationSourceConfigArchitectureOutputWithContext(ctx).ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(ctx)
}

func (e SimulationApplicationSourceConfigArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSourceConfigArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SimulationApplicationSourceConfigArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SimulationApplicationSourceConfigArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SimulationApplicationSourceConfigArchitectureOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSourceConfigArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToSimulationApplicationSourceConfigArchitectureOutput() SimulationApplicationSourceConfigArchitectureOutput {
	return o
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToSimulationApplicationSourceConfigArchitectureOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitectureOutput {
	return o
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToSimulationApplicationSourceConfigArchitecturePtrOutput() SimulationApplicationSourceConfigArchitecturePtrOutput {
	return o.ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimulationApplicationSourceConfigArchitecture) *SimulationApplicationSourceConfigArchitecture {
		return &v
	}).(SimulationApplicationSourceConfigArchitecturePtrOutput)
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSourceConfigArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSourceConfigArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SimulationApplicationSourceConfigArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SimulationApplicationSourceConfigArchitecturePtrOutput struct{ *pulumi.OutputState }

func (SimulationApplicationSourceConfigArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimulationApplicationSourceConfigArchitecture)(nil)).Elem()
}

func (o SimulationApplicationSourceConfigArchitecturePtrOutput) ToSimulationApplicationSourceConfigArchitecturePtrOutput() SimulationApplicationSourceConfigArchitecturePtrOutput {
	return o
}

func (o SimulationApplicationSourceConfigArchitecturePtrOutput) ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitecturePtrOutput {
	return o
}

func (o SimulationApplicationSourceConfigArchitecturePtrOutput) Elem() SimulationApplicationSourceConfigArchitectureOutput {
	return o.ApplyT(func(v *SimulationApplicationSourceConfigArchitecture) SimulationApplicationSourceConfigArchitecture {
		if v != nil {
			return *v
		}
		var ret SimulationApplicationSourceConfigArchitecture
		return ret
	}).(SimulationApplicationSourceConfigArchitectureOutput)
}

func (o SimulationApplicationSourceConfigArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SimulationApplicationSourceConfigArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SimulationApplicationSourceConfigArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SimulationApplicationSourceConfigArchitectureInput is an input type that accepts SimulationApplicationSourceConfigArchitectureArgs and SimulationApplicationSourceConfigArchitectureOutput values.
// You can construct a concrete instance of `SimulationApplicationSourceConfigArchitectureInput` via:
//
//          SimulationApplicationSourceConfigArchitectureArgs{...}
type SimulationApplicationSourceConfigArchitectureInput interface {
	pulumi.Input

	ToSimulationApplicationSourceConfigArchitectureOutput() SimulationApplicationSourceConfigArchitectureOutput
	ToSimulationApplicationSourceConfigArchitectureOutputWithContext(context.Context) SimulationApplicationSourceConfigArchitectureOutput
}

var simulationApplicationSourceConfigArchitecturePtrType = reflect.TypeOf((**SimulationApplicationSourceConfigArchitecture)(nil)).Elem()

type SimulationApplicationSourceConfigArchitecturePtrInput interface {
	pulumi.Input

	ToSimulationApplicationSourceConfigArchitecturePtrOutput() SimulationApplicationSourceConfigArchitecturePtrOutput
	ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(context.Context) SimulationApplicationSourceConfigArchitecturePtrOutput
}

type simulationApplicationSourceConfigArchitecturePtr string

func SimulationApplicationSourceConfigArchitecturePtr(v string) SimulationApplicationSourceConfigArchitecturePtrInput {
	return (*simulationApplicationSourceConfigArchitecturePtr)(&v)
}

func (*simulationApplicationSourceConfigArchitecturePtr) ElementType() reflect.Type {
	return simulationApplicationSourceConfigArchitecturePtrType
}

func (in *simulationApplicationSourceConfigArchitecturePtr) ToSimulationApplicationSourceConfigArchitecturePtrOutput() SimulationApplicationSourceConfigArchitecturePtrOutput {
	return pulumi.ToOutput(in).(SimulationApplicationSourceConfigArchitecturePtrOutput)
}

func (in *simulationApplicationSourceConfigArchitecturePtr) ToSimulationApplicationSourceConfigArchitecturePtrOutputWithContext(ctx context.Context) SimulationApplicationSourceConfigArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SimulationApplicationSourceConfigArchitecturePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteNameInput)(nil)).Elem(), RobotApplicationRobotSoftwareSuiteName("ROS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteNamePtrInput)(nil)).Elem(), RobotApplicationRobotSoftwareSuiteName("ROS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteVersionInput)(nil)).Elem(), RobotApplicationRobotSoftwareSuiteVersion("Kinetic"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationRobotSoftwareSuiteVersionPtrInput)(nil)).Elem(), RobotApplicationRobotSoftwareSuiteVersion("Kinetic"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationSourceConfigArchitectureInput)(nil)).Elem(), RobotApplicationSourceConfigArchitecture("X86_64"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotApplicationSourceConfigArchitecturePtrInput)(nil)).Elem(), RobotApplicationSourceConfigArchitecture("X86_64"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotArchitectureInput)(nil)).Elem(), RobotArchitecture("X86_64"))
	pulumi.RegisterInputType(reflect.TypeOf((*RobotArchitecturePtrInput)(nil)).Elem(), RobotArchitecture("X86_64"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRenderingEngineNameInput)(nil)).Elem(), SimulationApplicationRenderingEngineName("OGRE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRenderingEngineNamePtrInput)(nil)).Elem(), SimulationApplicationRenderingEngineName("OGRE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteNameInput)(nil)).Elem(), SimulationApplicationRobotSoftwareSuiteName("ROS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteNamePtrInput)(nil)).Elem(), SimulationApplicationRobotSoftwareSuiteName("ROS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteVersionInput)(nil)).Elem(), SimulationApplicationRobotSoftwareSuiteVersion("Kinetic"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationRobotSoftwareSuiteVersionPtrInput)(nil)).Elem(), SimulationApplicationRobotSoftwareSuiteVersion("Kinetic"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteNameInput)(nil)).Elem(), SimulationApplicationSimulationSoftwareSuiteName("Gazebo"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteNamePtrInput)(nil)).Elem(), SimulationApplicationSimulationSoftwareSuiteName("Gazebo"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteVersionInput)(nil)).Elem(), SimulationApplicationSimulationSoftwareSuiteVersion("7"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSimulationSoftwareSuiteVersionPtrInput)(nil)).Elem(), SimulationApplicationSimulationSoftwareSuiteVersion("7"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSourceConfigArchitectureInput)(nil)).Elem(), SimulationApplicationSourceConfigArchitecture("X86_64"))
	pulumi.RegisterInputType(reflect.TypeOf((*SimulationApplicationSourceConfigArchitecturePtrInput)(nil)).Elem(), SimulationApplicationSourceConfigArchitecture("X86_64"))
	pulumi.RegisterOutputType(RobotApplicationRobotSoftwareSuiteNameOutput{})
	pulumi.RegisterOutputType(RobotApplicationRobotSoftwareSuiteNamePtrOutput{})
	pulumi.RegisterOutputType(RobotApplicationRobotSoftwareSuiteVersionOutput{})
	pulumi.RegisterOutputType(RobotApplicationRobotSoftwareSuiteVersionPtrOutput{})
	pulumi.RegisterOutputType(RobotApplicationSourceConfigArchitectureOutput{})
	pulumi.RegisterOutputType(RobotApplicationSourceConfigArchitecturePtrOutput{})
	pulumi.RegisterOutputType(RobotArchitectureOutput{})
	pulumi.RegisterOutputType(RobotArchitecturePtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRenderingEngineNameOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRenderingEngineNamePtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRobotSoftwareSuiteNameOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRobotSoftwareSuiteNamePtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRobotSoftwareSuiteVersionOutput{})
	pulumi.RegisterOutputType(SimulationApplicationRobotSoftwareSuiteVersionPtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSimulationSoftwareSuiteNameOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSimulationSoftwareSuiteNamePtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSimulationSoftwareSuiteVersionOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSimulationSoftwareSuiteVersionPtrOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSourceConfigArchitectureOutput{})
	pulumi.RegisterOutputType(SimulationApplicationSourceConfigArchitecturePtrOutput{})
}
