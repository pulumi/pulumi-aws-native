// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package robomaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::RoboMaker::RobotApplicationVersion resource creates an AWS RoboMaker RobotApplicationVersion. This helps you control which code your robot uses.
func LookupRobotApplicationVersion(ctx *pulumi.Context, args *LookupRobotApplicationVersionArgs, opts ...pulumi.InvokeOption) (*LookupRobotApplicationVersionResult, error) {
	var rv LookupRobotApplicationVersionResult
	err := ctx.Invoke("aws-native:robomaker:getRobotApplicationVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRobotApplicationVersionArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupRobotApplicationVersionResult struct {
	ApplicationVersion *string `pulumi:"applicationVersion"`
	Arn                *string `pulumi:"arn"`
}

func LookupRobotApplicationVersionOutput(ctx *pulumi.Context, args LookupRobotApplicationVersionOutputArgs, opts ...pulumi.InvokeOption) LookupRobotApplicationVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRobotApplicationVersionResult, error) {
			args := v.(LookupRobotApplicationVersionArgs)
			r, err := LookupRobotApplicationVersion(ctx, &args, opts...)
			var s LookupRobotApplicationVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRobotApplicationVersionResultOutput)
}

type LookupRobotApplicationVersionOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupRobotApplicationVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRobotApplicationVersionArgs)(nil)).Elem()
}

type LookupRobotApplicationVersionResultOutput struct{ *pulumi.OutputState }

func (LookupRobotApplicationVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRobotApplicationVersionResult)(nil)).Elem()
}

func (o LookupRobotApplicationVersionResultOutput) ToLookupRobotApplicationVersionResultOutput() LookupRobotApplicationVersionResultOutput {
	return o
}

func (o LookupRobotApplicationVersionResultOutput) ToLookupRobotApplicationVersionResultOutputWithContext(ctx context.Context) LookupRobotApplicationVersionResultOutput {
	return o
}

func (o LookupRobotApplicationVersionResultOutput) ApplicationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRobotApplicationVersionResult) *string { return v.ApplicationVersion }).(pulumi.StringPtrOutput)
}

func (o LookupRobotApplicationVersionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRobotApplicationVersionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRobotApplicationVersionResultOutput{})
}
