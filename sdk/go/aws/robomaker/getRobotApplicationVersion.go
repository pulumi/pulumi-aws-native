// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package robomaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::RoboMaker::RobotApplicationVersion resource creates an AWS RoboMaker RobotApplicationVersion. This helps you control which code your robot uses.
func LookupRobotApplicationVersion(ctx *pulumi.Context, args *LookupRobotApplicationVersionArgs, opts ...pulumi.InvokeOption) (*LookupRobotApplicationVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRobotApplicationVersionResult
	err := ctx.Invoke("aws-native:robomaker:getRobotApplicationVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRobotApplicationVersionArgs struct {
	// The Amazon Resource Name (ARN) of the robot application version.
	Arn string `pulumi:"arn"`
}

type LookupRobotApplicationVersionResult struct {
	// The robot application version.
	ApplicationVersion *string `pulumi:"applicationVersion"`
	// The Amazon Resource Name (ARN) of the robot application version.
	Arn *string `pulumi:"arn"`
}

func LookupRobotApplicationVersionOutput(ctx *pulumi.Context, args LookupRobotApplicationVersionOutputArgs, opts ...pulumi.InvokeOption) LookupRobotApplicationVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRobotApplicationVersionResultOutput, error) {
			args := v.(LookupRobotApplicationVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:robomaker:getRobotApplicationVersion", args, LookupRobotApplicationVersionResultOutput{}, options).(LookupRobotApplicationVersionResultOutput), nil
		}).(LookupRobotApplicationVersionResultOutput)
}

type LookupRobotApplicationVersionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the robot application version.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupRobotApplicationVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRobotApplicationVersionArgs)(nil)).Elem()
}

type LookupRobotApplicationVersionResultOutput struct{ *pulumi.OutputState }

func (LookupRobotApplicationVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRobotApplicationVersionResult)(nil)).Elem()
}

func (o LookupRobotApplicationVersionResultOutput) ToLookupRobotApplicationVersionResultOutput() LookupRobotApplicationVersionResultOutput {
	return o
}

func (o LookupRobotApplicationVersionResultOutput) ToLookupRobotApplicationVersionResultOutputWithContext(ctx context.Context) LookupRobotApplicationVersionResultOutput {
	return o
}

// The robot application version.
func (o LookupRobotApplicationVersionResultOutput) ApplicationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRobotApplicationVersionResult) *string { return v.ApplicationVersion }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the robot application version.
func (o LookupRobotApplicationVersionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRobotApplicationVersionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRobotApplicationVersionResultOutput{})
}
