// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package robomaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html
type SimulationApplication struct {
	pulumi.CustomResourceState

	Arn               pulumi.StringOutput `pulumi:"arn"`
	CurrentRevisionId pulumi.StringOutput `pulumi:"currentRevisionId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-renderingengine
	RenderingEngine SimulationApplicationRenderingEngineOutput `pulumi:"renderingEngine"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-robotsoftwaresuite
	RobotSoftwareSuite SimulationApplicationRobotSoftwareSuiteOutput `pulumi:"robotSoftwareSuite"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-simulationsoftwaresuite
	SimulationSoftwareSuite SimulationApplicationSimulationSoftwareSuiteOutput `pulumi:"simulationSoftwareSuite"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-sources
	Sources SimulationApplicationSourceConfigArrayOutput `pulumi:"sources"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewSimulationApplication registers a new resource with the given unique name, arguments, and options.
func NewSimulationApplication(ctx *pulumi.Context,
	name string, args *SimulationApplicationArgs, opts ...pulumi.ResourceOption) (*SimulationApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RenderingEngine == nil {
		return nil, errors.New("invalid value for required argument 'RenderingEngine'")
	}
	if args.RobotSoftwareSuite == nil {
		return nil, errors.New("invalid value for required argument 'RobotSoftwareSuite'")
	}
	if args.SimulationSoftwareSuite == nil {
		return nil, errors.New("invalid value for required argument 'SimulationSoftwareSuite'")
	}
	if args.Sources == nil {
		return nil, errors.New("invalid value for required argument 'Sources'")
	}
	var resource SimulationApplication
	err := ctx.RegisterResource("aws-native:robomaker:SimulationApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSimulationApplication gets an existing SimulationApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSimulationApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SimulationApplicationState, opts ...pulumi.ResourceOption) (*SimulationApplication, error) {
	var resource SimulationApplication
	err := ctx.ReadResource("aws-native:robomaker:SimulationApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SimulationApplication resources.
type simulationApplicationState struct {
}

type SimulationApplicationState struct {
}

func (SimulationApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*simulationApplicationState)(nil)).Elem()
}

type simulationApplicationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-currentrevisionid
	CurrentRevisionId *string `pulumi:"currentRevisionId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-renderingengine
	RenderingEngine SimulationApplicationRenderingEngine `pulumi:"renderingEngine"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-robotsoftwaresuite
	RobotSoftwareSuite SimulationApplicationRobotSoftwareSuite `pulumi:"robotSoftwareSuite"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-simulationsoftwaresuite
	SimulationSoftwareSuite SimulationApplicationSimulationSoftwareSuite `pulumi:"simulationSoftwareSuite"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-sources
	Sources []SimulationApplicationSourceConfig `pulumi:"sources"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SimulationApplication resource.
type SimulationApplicationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-currentrevisionid
	CurrentRevisionId pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-renderingengine
	RenderingEngine SimulationApplicationRenderingEngineInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-robotsoftwaresuite
	RobotSoftwareSuite SimulationApplicationRobotSoftwareSuiteInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-simulationsoftwaresuite
	SimulationSoftwareSuite SimulationApplicationSimulationSoftwareSuiteInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-sources
	Sources SimulationApplicationSourceConfigArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-tags
	Tags pulumi.StringMapInput
}

func (SimulationApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*simulationApplicationArgs)(nil)).Elem()
}

type SimulationApplicationInput interface {
	pulumi.Input

	ToSimulationApplicationOutput() SimulationApplicationOutput
	ToSimulationApplicationOutputWithContext(ctx context.Context) SimulationApplicationOutput
}

func (*SimulationApplication) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplication)(nil))
}

func (i *SimulationApplication) ToSimulationApplicationOutput() SimulationApplicationOutput {
	return i.ToSimulationApplicationOutputWithContext(context.Background())
}

func (i *SimulationApplication) ToSimulationApplicationOutputWithContext(ctx context.Context) SimulationApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimulationApplicationOutput)
}

type SimulationApplicationOutput struct{ *pulumi.OutputState }

func (SimulationApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimulationApplication)(nil))
}

func (o SimulationApplicationOutput) ToSimulationApplicationOutput() SimulationApplicationOutput {
	return o
}

func (o SimulationApplicationOutput) ToSimulationApplicationOutputWithContext(ctx context.Context) SimulationApplicationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SimulationApplicationOutput{})
}
