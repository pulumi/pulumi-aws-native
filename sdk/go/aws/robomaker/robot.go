// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package robomaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html
type Robot struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-architecture
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	Arn          pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-fleet
	Fleet pulumi.StringPtrOutput `pulumi:"fleet"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-greengrassgroupid
	GreengrassGroupId pulumi.StringOutput `pulumi:"greengrassGroupId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewRobot registers a new resource with the given unique name, arguments, and options.
func NewRobot(ctx *pulumi.Context,
	name string, args *RobotArgs, opts ...pulumi.ResourceOption) (*Robot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Architecture == nil {
		return nil, errors.New("invalid value for required argument 'Architecture'")
	}
	if args.GreengrassGroupId == nil {
		return nil, errors.New("invalid value for required argument 'GreengrassGroupId'")
	}
	var resource Robot
	err := ctx.RegisterResource("aws-native:robomaker:Robot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRobot gets an existing Robot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRobot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RobotState, opts ...pulumi.ResourceOption) (*Robot, error) {
	var resource Robot
	err := ctx.ReadResource("aws-native:robomaker:Robot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Robot resources.
type robotState struct {
}

type RobotState struct {
}

func (RobotState) ElementType() reflect.Type {
	return reflect.TypeOf((*robotState)(nil)).Elem()
}

type robotArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-architecture
	Architecture string `pulumi:"architecture"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-fleet
	Fleet *string `pulumi:"fleet"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-greengrassgroupid
	GreengrassGroupId string `pulumi:"greengrassGroupId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Robot resource.
type RobotArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-architecture
	Architecture pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-fleet
	Fleet pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-greengrassgroupid
	GreengrassGroupId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-tags
	Tags pulumi.StringMapInput
}

func (RobotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*robotArgs)(nil)).Elem()
}

type RobotInput interface {
	pulumi.Input

	ToRobotOutput() RobotOutput
	ToRobotOutputWithContext(ctx context.Context) RobotOutput
}

func (*Robot) ElementType() reflect.Type {
	return reflect.TypeOf((*Robot)(nil))
}

func (i *Robot) ToRobotOutput() RobotOutput {
	return i.ToRobotOutputWithContext(context.Background())
}

func (i *Robot) ToRobotOutputWithContext(ctx context.Context) RobotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RobotOutput)
}

type RobotOutput struct{ *pulumi.OutputState }

func (RobotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Robot)(nil))
}

func (o RobotOutput) ToRobotOutput() RobotOutput {
	return o
}

func (o RobotOutput) ToRobotOutputWithContext(ctx context.Context) RobotOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RobotOutput{})
}
