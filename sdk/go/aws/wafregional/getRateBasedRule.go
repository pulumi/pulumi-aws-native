// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::WAFRegional::RateBasedRule
func LookupRateBasedRule(ctx *pulumi.Context, args *LookupRateBasedRuleArgs, opts ...pulumi.InvokeOption) (*LookupRateBasedRuleResult, error) {
	var rv LookupRateBasedRuleResult
	err := ctx.Invoke("aws-native:wafregional:getRateBasedRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRateBasedRuleArgs struct {
	Id string `pulumi:"id"`
}

type LookupRateBasedRuleResult struct {
	Id              *string                  `pulumi:"id"`
	MatchPredicates []RateBasedRulePredicate `pulumi:"matchPredicates"`
	RateLimit       *int                     `pulumi:"rateLimit"`
}

func LookupRateBasedRuleOutput(ctx *pulumi.Context, args LookupRateBasedRuleOutputArgs, opts ...pulumi.InvokeOption) LookupRateBasedRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRateBasedRuleResult, error) {
			args := v.(LookupRateBasedRuleArgs)
			r, err := LookupRateBasedRule(ctx, &args, opts...)
			var s LookupRateBasedRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRateBasedRuleResultOutput)
}

type LookupRateBasedRuleOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRateBasedRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRateBasedRuleArgs)(nil)).Elem()
}

type LookupRateBasedRuleResultOutput struct{ *pulumi.OutputState }

func (LookupRateBasedRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRateBasedRuleResult)(nil)).Elem()
}

func (o LookupRateBasedRuleResultOutput) ToLookupRateBasedRuleResultOutput() LookupRateBasedRuleResultOutput {
	return o
}

func (o LookupRateBasedRuleResultOutput) ToLookupRateBasedRuleResultOutputWithContext(ctx context.Context) LookupRateBasedRuleResultOutput {
	return o
}

func (o LookupRateBasedRuleResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRateBasedRuleResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupRateBasedRuleResultOutput) MatchPredicates() RateBasedRulePredicateArrayOutput {
	return o.ApplyT(func(v LookupRateBasedRuleResult) []RateBasedRulePredicate { return v.MatchPredicates }).(RateBasedRulePredicateArrayOutput)
}

func (o LookupRateBasedRuleResultOutput) RateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRateBasedRuleResult) *int { return v.RateLimit }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRateBasedRuleResultOutput{})
}
