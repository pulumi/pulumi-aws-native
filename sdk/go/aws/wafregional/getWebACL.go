// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::WAFRegional::WebACL
func LookupWebACL(ctx *pulumi.Context, args *LookupWebACLArgs, opts ...pulumi.InvokeOption) (*LookupWebACLResult, error) {
	var rv LookupWebACLResult
	err := ctx.Invoke("aws-native:wafregional:getWebACL", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebACLArgs struct {
	Id string `pulumi:"id"`
}

type LookupWebACLResult struct {
	DefaultAction *WebACLAction `pulumi:"defaultAction"`
	Id            *string       `pulumi:"id"`
	Rules         []WebACLRule  `pulumi:"rules"`
}

func LookupWebACLOutput(ctx *pulumi.Context, args LookupWebACLOutputArgs, opts ...pulumi.InvokeOption) LookupWebACLResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebACLResult, error) {
			args := v.(LookupWebACLArgs)
			r, err := LookupWebACL(ctx, &args, opts...)
			var s LookupWebACLResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebACLResultOutput)
}

type LookupWebACLOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupWebACLOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebACLArgs)(nil)).Elem()
}

type LookupWebACLResultOutput struct{ *pulumi.OutputState }

func (LookupWebACLResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebACLResult)(nil)).Elem()
}

func (o LookupWebACLResultOutput) ToLookupWebACLResultOutput() LookupWebACLResultOutput {
	return o
}

func (o LookupWebACLResultOutput) ToLookupWebACLResultOutputWithContext(ctx context.Context) LookupWebACLResultOutput {
	return o
}

func (o LookupWebACLResultOutput) DefaultAction() WebACLActionPtrOutput {
	return o.ApplyT(func(v LookupWebACLResult) *WebACLAction { return v.DefaultAction }).(WebACLActionPtrOutput)
}

func (o LookupWebACLResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebACLResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupWebACLResultOutput) Rules() WebACLRuleArrayOutput {
	return o.ApplyT(func(v LookupWebACLResult) []WebACLRule { return v.Rules }).(WebACLRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebACLResultOutput{})
}
