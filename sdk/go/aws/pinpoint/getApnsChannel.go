// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Pinpoint::APNSChannel
func LookupApnsChannel(ctx *pulumi.Context, args *LookupApnsChannelArgs, opts ...pulumi.InvokeOption) (*LookupApnsChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApnsChannelResult
	err := ctx.Invoke("aws-native:pinpoint:getApnsChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApnsChannelArgs struct {
	Id string `pulumi:"id"`
}

type LookupApnsChannelResult struct {
	BundleId                    *string `pulumi:"bundleId"`
	Certificate                 *string `pulumi:"certificate"`
	DefaultAuthenticationMethod *string `pulumi:"defaultAuthenticationMethod"`
	Enabled                     *bool   `pulumi:"enabled"`
	Id                          *string `pulumi:"id"`
	PrivateKey                  *string `pulumi:"privateKey"`
	TeamId                      *string `pulumi:"teamId"`
	TokenKey                    *string `pulumi:"tokenKey"`
	TokenKeyId                  *string `pulumi:"tokenKeyId"`
}

func LookupApnsChannelOutput(ctx *pulumi.Context, args LookupApnsChannelOutputArgs, opts ...pulumi.InvokeOption) LookupApnsChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApnsChannelResult, error) {
			args := v.(LookupApnsChannelArgs)
			r, err := LookupApnsChannel(ctx, &args, opts...)
			var s LookupApnsChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApnsChannelResultOutput)
}

type LookupApnsChannelOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupApnsChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApnsChannelArgs)(nil)).Elem()
}

type LookupApnsChannelResultOutput struct{ *pulumi.OutputState }

func (LookupApnsChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApnsChannelResult)(nil)).Elem()
}

func (o LookupApnsChannelResultOutput) ToLookupApnsChannelResultOutput() LookupApnsChannelResultOutput {
	return o
}

func (o LookupApnsChannelResultOutput) ToLookupApnsChannelResultOutputWithContext(ctx context.Context) LookupApnsChannelResultOutput {
	return o
}

func (o LookupApnsChannelResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupApnsChannelResult] {
	return pulumix.Output[LookupApnsChannelResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupApnsChannelResultOutput) BundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.BundleId }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) DefaultAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.DefaultAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LookupApnsChannelResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) TokenKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.TokenKey }).(pulumi.StringPtrOutput)
}

func (o LookupApnsChannelResultOutput) TokenKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApnsChannelResult) *string { return v.TokenKeyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApnsChannelResultOutput{})
}
