// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::GCMChannel
//
// Deprecated: GcmChannel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type GcmChannel struct {
	pulumi.CustomResourceState

	ApiKey                      pulumi.StringPtrOutput `pulumi:"apiKey"`
	ApplicationId               pulumi.StringOutput    `pulumi:"applicationId"`
	DefaultAuthenticationMethod pulumi.StringPtrOutput `pulumi:"defaultAuthenticationMethod"`
	Enabled                     pulumi.BoolPtrOutput   `pulumi:"enabled"`
	ServiceJson                 pulumi.StringPtrOutput `pulumi:"serviceJson"`
}

// NewGcmChannel registers a new resource with the given unique name, arguments, and options.
func NewGcmChannel(ctx *pulumi.Context,
	name string, args *GcmChannelArgs, opts ...pulumi.ResourceOption) (*GcmChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcmChannel
	err := ctx.RegisterResource("aws-native:pinpoint:GcmChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcmChannel gets an existing GcmChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcmChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcmChannelState, opts ...pulumi.ResourceOption) (*GcmChannel, error) {
	var resource GcmChannel
	err := ctx.ReadResource("aws-native:pinpoint:GcmChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcmChannel resources.
type gcmChannelState struct {
}

type GcmChannelState struct {
}

func (GcmChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcmChannelState)(nil)).Elem()
}

type gcmChannelArgs struct {
	ApiKey                      *string `pulumi:"apiKey"`
	ApplicationId               string  `pulumi:"applicationId"`
	DefaultAuthenticationMethod *string `pulumi:"defaultAuthenticationMethod"`
	Enabled                     *bool   `pulumi:"enabled"`
	ServiceJson                 *string `pulumi:"serviceJson"`
}

// The set of arguments for constructing a GcmChannel resource.
type GcmChannelArgs struct {
	ApiKey                      pulumi.StringPtrInput
	ApplicationId               pulumi.StringInput
	DefaultAuthenticationMethod pulumi.StringPtrInput
	Enabled                     pulumi.BoolPtrInput
	ServiceJson                 pulumi.StringPtrInput
}

func (GcmChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcmChannelArgs)(nil)).Elem()
}

type GcmChannelInput interface {
	pulumi.Input

	ToGcmChannelOutput() GcmChannelOutput
	ToGcmChannelOutputWithContext(ctx context.Context) GcmChannelOutput
}

func (*GcmChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**GcmChannel)(nil)).Elem()
}

func (i *GcmChannel) ToGcmChannelOutput() GcmChannelOutput {
	return i.ToGcmChannelOutputWithContext(context.Background())
}

func (i *GcmChannel) ToGcmChannelOutputWithContext(ctx context.Context) GcmChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcmChannelOutput)
}

type GcmChannelOutput struct{ *pulumi.OutputState }

func (GcmChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcmChannel)(nil)).Elem()
}

func (o GcmChannelOutput) ToGcmChannelOutput() GcmChannelOutput {
	return o
}

func (o GcmChannelOutput) ToGcmChannelOutputWithContext(ctx context.Context) GcmChannelOutput {
	return o
}

func (o GcmChannelOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcmChannel) pulumi.StringPtrOutput { return v.ApiKey }).(pulumi.StringPtrOutput)
}

func (o GcmChannelOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcmChannel) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GcmChannelOutput) DefaultAuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcmChannel) pulumi.StringPtrOutput { return v.DefaultAuthenticationMethod }).(pulumi.StringPtrOutput)
}

func (o GcmChannelOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcmChannel) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GcmChannelOutput) ServiceJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcmChannel) pulumi.StringPtrOutput { return v.ServiceJson }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcmChannelInput)(nil)).Elem(), &GcmChannel{})
	pulumi.RegisterOutputType(GcmChannelOutput{})
}
