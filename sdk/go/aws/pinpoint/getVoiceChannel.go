// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::VoiceChannel
func LookupVoiceChannel(ctx *pulumi.Context, args *LookupVoiceChannelArgs, opts ...pulumi.InvokeOption) (*LookupVoiceChannelResult, error) {
	var rv LookupVoiceChannelResult
	err := ctx.Invoke("aws-native:pinpoint:getVoiceChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVoiceChannelArgs struct {
	Id string `pulumi:"id"`
}

type LookupVoiceChannelResult struct {
	Enabled *bool   `pulumi:"enabled"`
	Id      *string `pulumi:"id"`
}

func LookupVoiceChannelOutput(ctx *pulumi.Context, args LookupVoiceChannelOutputArgs, opts ...pulumi.InvokeOption) LookupVoiceChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVoiceChannelResult, error) {
			args := v.(LookupVoiceChannelArgs)
			r, err := LookupVoiceChannel(ctx, &args, opts...)
			var s LookupVoiceChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVoiceChannelResultOutput)
}

type LookupVoiceChannelOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupVoiceChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVoiceChannelArgs)(nil)).Elem()
}

type LookupVoiceChannelResultOutput struct{ *pulumi.OutputState }

func (LookupVoiceChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVoiceChannelResult)(nil)).Elem()
}

func (o LookupVoiceChannelResultOutput) ToLookupVoiceChannelResultOutput() LookupVoiceChannelResultOutput {
	return o
}

func (o LookupVoiceChannelResultOutput) ToLookupVoiceChannelResultOutputWithContext(ctx context.Context) LookupVoiceChannelResultOutput {
	return o
}

func (o LookupVoiceChannelResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVoiceChannelResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LookupVoiceChannelResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVoiceChannelResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVoiceChannelResultOutput{})
}
