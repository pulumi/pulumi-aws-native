// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Pinpoint::ADMChannel
func LookupAdmChannel(ctx *pulumi.Context, args *LookupAdmChannelArgs, opts ...pulumi.InvokeOption) (*LookupAdmChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAdmChannelResult
	err := ctx.Invoke("aws-native:pinpoint:getAdmChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAdmChannelArgs struct {
	Id string `pulumi:"id"`
}

type LookupAdmChannelResult struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	Enabled      *bool   `pulumi:"enabled"`
	Id           *string `pulumi:"id"`
}

func LookupAdmChannelOutput(ctx *pulumi.Context, args LookupAdmChannelOutputArgs, opts ...pulumi.InvokeOption) LookupAdmChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAdmChannelResult, error) {
			args := v.(LookupAdmChannelArgs)
			r, err := LookupAdmChannel(ctx, &args, opts...)
			var s LookupAdmChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAdmChannelResultOutput)
}

type LookupAdmChannelOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAdmChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdmChannelArgs)(nil)).Elem()
}

type LookupAdmChannelResultOutput struct{ *pulumi.OutputState }

func (LookupAdmChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAdmChannelResult)(nil)).Elem()
}

func (o LookupAdmChannelResultOutput) ToLookupAdmChannelResultOutput() LookupAdmChannelResultOutput {
	return o
}

func (o LookupAdmChannelResultOutput) ToLookupAdmChannelResultOutputWithContext(ctx context.Context) LookupAdmChannelResultOutput {
	return o
}

func (o LookupAdmChannelResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAdmChannelResult] {
	return pulumix.Output[LookupAdmChannelResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupAdmChannelResultOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAdmChannelResult) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o LookupAdmChannelResultOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAdmChannelResult) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o LookupAdmChannelResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAdmChannelResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LookupAdmChannelResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAdmChannelResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAdmChannelResultOutput{})
}
