// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::SMSChannel
//
// Deprecated: SMSChannel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type SMSChannel struct {
	pulumi.CustomResourceState

	ApplicationId pulumi.StringOutput    `pulumi:"applicationId"`
	Enabled       pulumi.BoolPtrOutput   `pulumi:"enabled"`
	SenderId      pulumi.StringPtrOutput `pulumi:"senderId"`
	ShortCode     pulumi.StringPtrOutput `pulumi:"shortCode"`
}

// NewSMSChannel registers a new resource with the given unique name, arguments, and options.
func NewSMSChannel(ctx *pulumi.Context,
	name string, args *SMSChannelArgs, opts ...pulumi.ResourceOption) (*SMSChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	var resource SMSChannel
	err := ctx.RegisterResource("aws-native:pinpoint:SMSChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSMSChannel gets an existing SMSChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSMSChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SMSChannelState, opts ...pulumi.ResourceOption) (*SMSChannel, error) {
	var resource SMSChannel
	err := ctx.ReadResource("aws-native:pinpoint:SMSChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SMSChannel resources.
type smschannelState struct {
}

type SMSChannelState struct {
}

func (SMSChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*smschannelState)(nil)).Elem()
}

type smschannelArgs struct {
	ApplicationId string  `pulumi:"applicationId"`
	Enabled       *bool   `pulumi:"enabled"`
	SenderId      *string `pulumi:"senderId"`
	ShortCode     *string `pulumi:"shortCode"`
}

// The set of arguments for constructing a SMSChannel resource.
type SMSChannelArgs struct {
	ApplicationId pulumi.StringInput
	Enabled       pulumi.BoolPtrInput
	SenderId      pulumi.StringPtrInput
	ShortCode     pulumi.StringPtrInput
}

func (SMSChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smschannelArgs)(nil)).Elem()
}

type SMSChannelInput interface {
	pulumi.Input

	ToSMSChannelOutput() SMSChannelOutput
	ToSMSChannelOutputWithContext(ctx context.Context) SMSChannelOutput
}

func (*SMSChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*SMSChannel)(nil))
}

func (i *SMSChannel) ToSMSChannelOutput() SMSChannelOutput {
	return i.ToSMSChannelOutputWithContext(context.Background())
}

func (i *SMSChannel) ToSMSChannelOutputWithContext(ctx context.Context) SMSChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SMSChannelOutput)
}

type SMSChannelOutput struct{ *pulumi.OutputState }

func (SMSChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SMSChannel)(nil))
}

func (o SMSChannelOutput) ToSMSChannelOutput() SMSChannelOutput {
	return o
}

func (o SMSChannelOutput) ToSMSChannelOutputWithContext(ctx context.Context) SMSChannelOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SMSChannelInput)(nil)).Elem(), &SMSChannel{})
	pulumi.RegisterOutputType(SMSChannelOutput{})
}
