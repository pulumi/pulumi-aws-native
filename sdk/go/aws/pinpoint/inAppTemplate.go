// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::InAppTemplate
type InAppTemplate struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the message template.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An object that contains information about the content of an in-app message, including its title and body text, text colors, background colors, images, buttons, and behaviors.
	Content InAppTemplateInAppMessageContentArrayOutput `pulumi:"content"`
	// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	CustomConfig pulumi.AnyOutput `pulumi:"customConfig"`
	// A string that determines the appearance of the in-app message. You can specify one of the following:
	//
	// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
	// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
	// - `OVERLAYS` – a message that covers entire screen.
	// - `MOBILE_FEED` – a message that appears in a window in front of the page.
	// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
	// - `CAROUSEL` – a scrollable layout of up to five unique messages.
	Layout InAppTemplateLayoutPtrOutput `pulumi:"layout"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	Tags pulumi.AnyOutput `pulumi:"tags"`
	// An optional description of the in-app template.
	TemplateDescription pulumi.StringPtrOutput `pulumi:"templateDescription"`
	// The name of the in-app message template.
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
}

// NewInAppTemplate registers a new resource with the given unique name, arguments, and options.
func NewInAppTemplate(ctx *pulumi.Context,
	name string, args *InAppTemplateArgs, opts ...pulumi.ResourceOption) (*InAppTemplate, error) {
	if args == nil {
		args = &InAppTemplateArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"templateName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InAppTemplate
	err := ctx.RegisterResource("aws-native:pinpoint:InAppTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInAppTemplate gets an existing InAppTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInAppTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InAppTemplateState, opts ...pulumi.ResourceOption) (*InAppTemplate, error) {
	var resource InAppTemplate
	err := ctx.ReadResource("aws-native:pinpoint:InAppTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InAppTemplate resources.
type inAppTemplateState struct {
}

type InAppTemplateState struct {
}

func (InAppTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*inAppTemplateState)(nil)).Elem()
}

type inAppTemplateArgs struct {
	// An object that contains information about the content of an in-app message, including its title and body text, text colors, background colors, images, buttons, and behaviors.
	Content []InAppTemplateInAppMessageContent `pulumi:"content"`
	// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	CustomConfig interface{} `pulumi:"customConfig"`
	// A string that determines the appearance of the in-app message. You can specify one of the following:
	//
	// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
	// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
	// - `OVERLAYS` – a message that covers entire screen.
	// - `MOBILE_FEED` – a message that appears in a window in front of the page.
	// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
	// - `CAROUSEL` – a scrollable layout of up to five unique messages.
	Layout *InAppTemplateLayout `pulumi:"layout"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	Tags interface{} `pulumi:"tags"`
	// An optional description of the in-app template.
	TemplateDescription *string `pulumi:"templateDescription"`
	// The name of the in-app message template.
	TemplateName *string `pulumi:"templateName"`
}

// The set of arguments for constructing a InAppTemplate resource.
type InAppTemplateArgs struct {
	// An object that contains information about the content of an in-app message, including its title and body text, text colors, background colors, images, buttons, and behaviors.
	Content InAppTemplateInAppMessageContentArrayInput
	// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	CustomConfig pulumi.Input
	// A string that determines the appearance of the in-app message. You can specify one of the following:
	//
	// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
	// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
	// - `OVERLAYS` – a message that covers entire screen.
	// - `MOBILE_FEED` – a message that appears in a window in front of the page.
	// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
	// - `CAROUSEL` – a scrollable layout of up to five unique messages.
	Layout InAppTemplateLayoutPtrInput
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	Tags pulumi.Input
	// An optional description of the in-app template.
	TemplateDescription pulumi.StringPtrInput
	// The name of the in-app message template.
	TemplateName pulumi.StringPtrInput
}

func (InAppTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inAppTemplateArgs)(nil)).Elem()
}

type InAppTemplateInput interface {
	pulumi.Input

	ToInAppTemplateOutput() InAppTemplateOutput
	ToInAppTemplateOutputWithContext(ctx context.Context) InAppTemplateOutput
}

func (*InAppTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**InAppTemplate)(nil)).Elem()
}

func (i *InAppTemplate) ToInAppTemplateOutput() InAppTemplateOutput {
	return i.ToInAppTemplateOutputWithContext(context.Background())
}

func (i *InAppTemplate) ToInAppTemplateOutputWithContext(ctx context.Context) InAppTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InAppTemplateOutput)
}

type InAppTemplateOutput struct{ *pulumi.OutputState }

func (InAppTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InAppTemplate)(nil)).Elem()
}

func (o InAppTemplateOutput) ToInAppTemplateOutput() InAppTemplateOutput {
	return o
}

func (o InAppTemplateOutput) ToInAppTemplateOutputWithContext(ctx context.Context) InAppTemplateOutput {
	return o
}

// The Amazon Resource Name (ARN) of the message template.
func (o InAppTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *InAppTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An object that contains information about the content of an in-app message, including its title and body text, text colors, background colors, images, buttons, and behaviors.
func (o InAppTemplateOutput) Content() InAppTemplateInAppMessageContentArrayOutput {
	return o.ApplyT(func(v *InAppTemplate) InAppTemplateInAppMessageContentArrayOutput { return v.Content }).(InAppTemplateInAppMessageContentArrayOutput)
}

// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
func (o InAppTemplateOutput) CustomConfig() pulumi.AnyOutput {
	return o.ApplyT(func(v *InAppTemplate) pulumi.AnyOutput { return v.CustomConfig }).(pulumi.AnyOutput)
}

// A string that determines the appearance of the in-app message. You can specify one of the following:
//
// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
// - `OVERLAYS` – a message that covers entire screen.
// - `MOBILE_FEED` – a message that appears in a window in front of the page.
// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
// - `CAROUSEL` – a scrollable layout of up to five unique messages.
func (o InAppTemplateOutput) Layout() InAppTemplateLayoutPtrOutput {
	return o.ApplyT(func(v *InAppTemplate) InAppTemplateLayoutPtrOutput { return v.Layout }).(InAppTemplateLayoutPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
func (o InAppTemplateOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v *InAppTemplate) pulumi.AnyOutput { return v.Tags }).(pulumi.AnyOutput)
}

// An optional description of the in-app template.
func (o InAppTemplateOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InAppTemplate) pulumi.StringPtrOutput { return v.TemplateDescription }).(pulumi.StringPtrOutput)
}

// The name of the in-app message template.
func (o InAppTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *InAppTemplate) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InAppTemplateInput)(nil)).Elem(), &InAppTemplate{})
	pulumi.RegisterOutputType(InAppTemplateOutput{})
}
