// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::Campaign
//
// Deprecated: Campaign is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Campaign struct {
	pulumi.CustomResourceState

	AdditionalTreatments CampaignWriteTreatmentResourceArrayOutput `pulumi:"additionalTreatments"`
	ApplicationId        pulumi.StringOutput                       `pulumi:"applicationId"`
	Arn                  pulumi.StringOutput                       `pulumi:"arn"`
	CampaignHook         CampaignHookPtrOutput                     `pulumi:"campaignHook"`
	CampaignId           pulumi.StringOutput                       `pulumi:"campaignId"`
	Description          pulumi.StringPtrOutput                    `pulumi:"description"`
	HoldoutPercent       pulumi.IntPtrOutput                       `pulumi:"holdoutPercent"`
	IsPaused             pulumi.BoolPtrOutput                      `pulumi:"isPaused"`
	Limits               CampaignLimitsPtrOutput                   `pulumi:"limits"`
	MessageConfiguration CampaignMessageConfigurationOutput        `pulumi:"messageConfiguration"`
	Name                 pulumi.StringOutput                       `pulumi:"name"`
	Schedule             CampaignScheduleOutput                    `pulumi:"schedule"`
	SegmentId            pulumi.StringOutput                       `pulumi:"segmentId"`
	SegmentVersion       pulumi.IntPtrOutput                       `pulumi:"segmentVersion"`
	Tags                 pulumi.AnyOutput                          `pulumi:"tags"`
	TreatmentDescription pulumi.StringPtrOutput                    `pulumi:"treatmentDescription"`
	TreatmentName        pulumi.StringPtrOutput                    `pulumi:"treatmentName"`
}

// NewCampaign registers a new resource with the given unique name, arguments, and options.
func NewCampaign(ctx *pulumi.Context,
	name string, args *CampaignArgs, opts ...pulumi.ResourceOption) (*Campaign, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.MessageConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'MessageConfiguration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.SegmentId == nil {
		return nil, errors.New("invalid value for required argument 'SegmentId'")
	}
	var resource Campaign
	err := ctx.RegisterResource("aws-native:pinpoint:Campaign", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCampaign gets an existing Campaign resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCampaign(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CampaignState, opts ...pulumi.ResourceOption) (*Campaign, error) {
	var resource Campaign
	err := ctx.ReadResource("aws-native:pinpoint:Campaign", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Campaign resources.
type campaignState struct {
}

type CampaignState struct {
}

func (CampaignState) ElementType() reflect.Type {
	return reflect.TypeOf((*campaignState)(nil)).Elem()
}

type campaignArgs struct {
	AdditionalTreatments []CampaignWriteTreatmentResource `pulumi:"additionalTreatments"`
	ApplicationId        string                           `pulumi:"applicationId"`
	CampaignHook         *CampaignHook                    `pulumi:"campaignHook"`
	Description          *string                          `pulumi:"description"`
	HoldoutPercent       *int                             `pulumi:"holdoutPercent"`
	IsPaused             *bool                            `pulumi:"isPaused"`
	Limits               *CampaignLimits                  `pulumi:"limits"`
	MessageConfiguration CampaignMessageConfiguration     `pulumi:"messageConfiguration"`
	Name                 string                           `pulumi:"name"`
	Schedule             CampaignSchedule                 `pulumi:"schedule"`
	SegmentId            string                           `pulumi:"segmentId"`
	SegmentVersion       *int                             `pulumi:"segmentVersion"`
	Tags                 interface{}                      `pulumi:"tags"`
	TreatmentDescription *string                          `pulumi:"treatmentDescription"`
	TreatmentName        *string                          `pulumi:"treatmentName"`
}

// The set of arguments for constructing a Campaign resource.
type CampaignArgs struct {
	AdditionalTreatments CampaignWriteTreatmentResourceArrayInput
	ApplicationId        pulumi.StringInput
	CampaignHook         CampaignHookPtrInput
	Description          pulumi.StringPtrInput
	HoldoutPercent       pulumi.IntPtrInput
	IsPaused             pulumi.BoolPtrInput
	Limits               CampaignLimitsPtrInput
	MessageConfiguration CampaignMessageConfigurationInput
	Name                 pulumi.StringInput
	Schedule             CampaignScheduleInput
	SegmentId            pulumi.StringInput
	SegmentVersion       pulumi.IntPtrInput
	Tags                 pulumi.Input
	TreatmentDescription pulumi.StringPtrInput
	TreatmentName        pulumi.StringPtrInput
}

func (CampaignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*campaignArgs)(nil)).Elem()
}

type CampaignInput interface {
	pulumi.Input

	ToCampaignOutput() CampaignOutput
	ToCampaignOutputWithContext(ctx context.Context) CampaignOutput
}

func (*Campaign) ElementType() reflect.Type {
	return reflect.TypeOf((*Campaign)(nil))
}

func (i *Campaign) ToCampaignOutput() CampaignOutput {
	return i.ToCampaignOutputWithContext(context.Background())
}

func (i *Campaign) ToCampaignOutputWithContext(ctx context.Context) CampaignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CampaignOutput)
}

type CampaignOutput struct{ *pulumi.OutputState }

func (CampaignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Campaign)(nil))
}

func (o CampaignOutput) ToCampaignOutput() CampaignOutput {
	return o
}

func (o CampaignOutput) ToCampaignOutputWithContext(ctx context.Context) CampaignOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CampaignOutput{})
}
