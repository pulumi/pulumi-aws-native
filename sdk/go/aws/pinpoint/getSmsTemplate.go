// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::SmsTemplate
func LookupSmsTemplate(ctx *pulumi.Context, args *LookupSmsTemplateArgs, opts ...pulumi.InvokeOption) (*LookupSmsTemplateResult, error) {
	var rv LookupSmsTemplateResult
	err := ctx.Invoke("aws-native:pinpoint:getSmsTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSmsTemplateArgs struct {
	Id string `pulumi:"id"`
}

type LookupSmsTemplateResult struct {
	Arn                  *string     `pulumi:"arn"`
	Body                 *string     `pulumi:"body"`
	DefaultSubstitutions *string     `pulumi:"defaultSubstitutions"`
	Id                   *string     `pulumi:"id"`
	Tags                 interface{} `pulumi:"tags"`
	TemplateDescription  *string     `pulumi:"templateDescription"`
}

func LookupSmsTemplateOutput(ctx *pulumi.Context, args LookupSmsTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupSmsTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSmsTemplateResult, error) {
			args := v.(LookupSmsTemplateArgs)
			r, err := LookupSmsTemplate(ctx, &args, opts...)
			var s LookupSmsTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSmsTemplateResultOutput)
}

type LookupSmsTemplateOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSmsTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmsTemplateArgs)(nil)).Elem()
}

type LookupSmsTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupSmsTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSmsTemplateResult)(nil)).Elem()
}

func (o LookupSmsTemplateResultOutput) ToLookupSmsTemplateResultOutput() LookupSmsTemplateResultOutput {
	return o
}

func (o LookupSmsTemplateResultOutput) ToLookupSmsTemplateResultOutputWithContext(ctx context.Context) LookupSmsTemplateResultOutput {
	return o
}

func (o LookupSmsTemplateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupSmsTemplateResultOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) *string { return v.Body }).(pulumi.StringPtrOutput)
}

func (o LookupSmsTemplateResultOutput) DefaultSubstitutions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) *string { return v.DefaultSubstitutions }).(pulumi.StringPtrOutput)
}

func (o LookupSmsTemplateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupSmsTemplateResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

func (o LookupSmsTemplateResultOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSmsTemplateResult) *string { return v.TemplateDescription }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSmsTemplateResultOutput{})
}
