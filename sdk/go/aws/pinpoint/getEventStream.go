// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::EventStream
func LookupEventStream(ctx *pulumi.Context, args *LookupEventStreamArgs, opts ...pulumi.InvokeOption) (*LookupEventStreamResult, error) {
	var rv LookupEventStreamResult
	err := ctx.Invoke("aws-native:pinpoint:getEventStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEventStreamArgs struct {
	Id string `pulumi:"id"`
}

type LookupEventStreamResult struct {
	DestinationStreamArn *string `pulumi:"destinationStreamArn"`
	Id                   *string `pulumi:"id"`
	RoleArn              *string `pulumi:"roleArn"`
}

func LookupEventStreamOutput(ctx *pulumi.Context, args LookupEventStreamOutputArgs, opts ...pulumi.InvokeOption) LookupEventStreamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEventStreamResult, error) {
			args := v.(LookupEventStreamArgs)
			r, err := LookupEventStream(ctx, &args, opts...)
			return *r, err
		}).(LookupEventStreamResultOutput)
}

type LookupEventStreamOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupEventStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventStreamArgs)(nil)).Elem()
}

type LookupEventStreamResultOutput struct{ *pulumi.OutputState }

func (LookupEventStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventStreamResult)(nil)).Elem()
}

func (o LookupEventStreamResultOutput) ToLookupEventStreamResultOutput() LookupEventStreamResultOutput {
	return o
}

func (o LookupEventStreamResultOutput) ToLookupEventStreamResultOutputWithContext(ctx context.Context) LookupEventStreamResultOutput {
	return o
}

func (o LookupEventStreamResultOutput) DestinationStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEventStreamResult) *string { return v.DestinationStreamArn }).(pulumi.StringPtrOutput)
}

func (o LookupEventStreamResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEventStreamResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupEventStreamResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEventStreamResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEventStreamResultOutput{})
}
