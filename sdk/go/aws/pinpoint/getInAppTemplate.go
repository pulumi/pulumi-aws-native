// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::InAppTemplate
func LookupInAppTemplate(ctx *pulumi.Context, args *LookupInAppTemplateArgs, opts ...pulumi.InvokeOption) (*LookupInAppTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInAppTemplateResult
	err := ctx.Invoke("aws-native:pinpoint:getInAppTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInAppTemplateArgs struct {
	// The name of the in-app message template.
	TemplateName string `pulumi:"templateName"`
}

type LookupInAppTemplateResult struct {
	// The Amazon Resource Name (ARN) of the message template.
	Arn *string `pulumi:"arn"`
	// Specifies the configuration of an in-app message, including its header, body, buttons, colors, and images.
	Content []InAppTemplateInAppMessageContent `pulumi:"content"`
	// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	CustomConfig interface{} `pulumi:"customConfig"`
	// A string that determines the appearance of the in-app message. You can specify one of the following:
	//
	// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
	// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
	// - `OVERLAYS` – a message that covers entire screen.
	// - `MOBILE_FEED` – a message that appears in a window in front of the page.
	// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
	// - `CAROUSEL` – a scrollable layout of up to five unique messages.
	Layout *InAppTemplateLayout `pulumi:"layout"`
	// An array of key-value pairs to apply to this resource.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
	Tags interface{} `pulumi:"tags"`
	// An optional description of the in-app template.
	TemplateDescription *string `pulumi:"templateDescription"`
}

func LookupInAppTemplateOutput(ctx *pulumi.Context, args LookupInAppTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupInAppTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInAppTemplateResult, error) {
			args := v.(LookupInAppTemplateArgs)
			r, err := LookupInAppTemplate(ctx, &args, opts...)
			var s LookupInAppTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInAppTemplateResultOutput)
}

type LookupInAppTemplateOutputArgs struct {
	// The name of the in-app message template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
}

func (LookupInAppTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInAppTemplateArgs)(nil)).Elem()
}

type LookupInAppTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupInAppTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInAppTemplateResult)(nil)).Elem()
}

func (o LookupInAppTemplateResultOutput) ToLookupInAppTemplateResultOutput() LookupInAppTemplateResultOutput {
	return o
}

func (o LookupInAppTemplateResultOutput) ToLookupInAppTemplateResultOutputWithContext(ctx context.Context) LookupInAppTemplateResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the message template.
func (o LookupInAppTemplateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Specifies the configuration of an in-app message, including its header, body, buttons, colors, and images.
func (o LookupInAppTemplateResultOutput) Content() InAppTemplateInAppMessageContentArrayOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) []InAppTemplateInAppMessageContent { return v.Content }).(InAppTemplateInAppMessageContentArrayOutput)
}

// Custom data, in the form of key-value pairs, that is included in an in-app messaging payload.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
func (o LookupInAppTemplateResultOutput) CustomConfig() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) interface{} { return v.CustomConfig }).(pulumi.AnyOutput)
}

// A string that determines the appearance of the in-app message. You can specify one of the following:
//
// - `BOTTOM_BANNER` – a message that appears as a banner at the bottom of the page.
// - `TOP_BANNER` – a message that appears as a banner at the top of the page.
// - `OVERLAYS` – a message that covers entire screen.
// - `MOBILE_FEED` – a message that appears in a window in front of the page.
// - `MIDDLE_BANNER` – a message that appears as a banner in the middle of the page.
// - `CAROUSEL` – a scrollable layout of up to five unique messages.
func (o LookupInAppTemplateResultOutput) Layout() InAppTemplateLayoutPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *InAppTemplateLayout { return v.Layout }).(InAppTemplateLayoutPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Pinpoint::InAppTemplate` for more information about the expected schema for this property.
func (o LookupInAppTemplateResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

// An optional description of the in-app template.
func (o LookupInAppTemplateResultOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *string { return v.TemplateDescription }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInAppTemplateResultOutput{})
}
