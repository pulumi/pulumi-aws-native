// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Pinpoint::InAppTemplate
func LookupInAppTemplate(ctx *pulumi.Context, args *LookupInAppTemplateArgs, opts ...pulumi.InvokeOption) (*LookupInAppTemplateResult, error) {
	var rv LookupInAppTemplateResult
	err := ctx.Invoke("aws-native:pinpoint:getInAppTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInAppTemplateArgs struct {
	TemplateName string `pulumi:"templateName"`
}

type LookupInAppTemplateResult struct {
	Arn                 *string                            `pulumi:"arn"`
	Content             []InAppTemplateInAppMessageContent `pulumi:"content"`
	CustomConfig        interface{}                        `pulumi:"customConfig"`
	Layout              *InAppTemplateLayout               `pulumi:"layout"`
	Tags                interface{}                        `pulumi:"tags"`
	TemplateDescription *string                            `pulumi:"templateDescription"`
}

func LookupInAppTemplateOutput(ctx *pulumi.Context, args LookupInAppTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupInAppTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInAppTemplateResult, error) {
			args := v.(LookupInAppTemplateArgs)
			r, err := LookupInAppTemplate(ctx, &args, opts...)
			var s LookupInAppTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInAppTemplateResultOutput)
}

type LookupInAppTemplateOutputArgs struct {
	TemplateName pulumi.StringInput `pulumi:"templateName"`
}

func (LookupInAppTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInAppTemplateArgs)(nil)).Elem()
}

type LookupInAppTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupInAppTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInAppTemplateResult)(nil)).Elem()
}

func (o LookupInAppTemplateResultOutput) ToLookupInAppTemplateResultOutput() LookupInAppTemplateResultOutput {
	return o
}

func (o LookupInAppTemplateResultOutput) ToLookupInAppTemplateResultOutputWithContext(ctx context.Context) LookupInAppTemplateResultOutput {
	return o
}

func (o LookupInAppTemplateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupInAppTemplateResultOutput) Content() InAppTemplateInAppMessageContentArrayOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) []InAppTemplateInAppMessageContent { return v.Content }).(InAppTemplateInAppMessageContentArrayOutput)
}

func (o LookupInAppTemplateResultOutput) CustomConfig() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) interface{} { return v.CustomConfig }).(pulumi.AnyOutput)
}

func (o LookupInAppTemplateResultOutput) Layout() InAppTemplateLayoutPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *InAppTemplateLayout { return v.Layout }).(InAppTemplateLayoutPtrOutput)
}

func (o LookupInAppTemplateResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

func (o LookupInAppTemplateResultOutput) TemplateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInAppTemplateResult) *string { return v.TemplateDescription }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInAppTemplateResultOutput{})
}
