// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package observabilityadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS:ObservabilityAdmin:OrganizationCentralizationRule
type OrganizationCentralizationRule struct {
	pulumi.CustomResourceState

	Rule OrganizationCentralizationRuleCentralizationRuleOutput `pulumi:"rule"`
	// The Amazon Resource Name (ARN) of the organization centralization rule.
	RuleArn pulumi.StringOutput `pulumi:"ruleArn"`
	// The name of the organization centralization rule.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewOrganizationCentralizationRule registers a new resource with the given unique name, arguments, and options.
func NewOrganizationCentralizationRule(ctx *pulumi.Context,
	name string, args *OrganizationCentralizationRuleArgs, opts ...pulumi.ResourceOption) (*OrganizationCentralizationRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"ruleName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationCentralizationRule
	err := ctx.RegisterResource("aws-native:observabilityadmin:OrganizationCentralizationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationCentralizationRule gets an existing OrganizationCentralizationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationCentralizationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationCentralizationRuleState, opts ...pulumi.ResourceOption) (*OrganizationCentralizationRule, error) {
	var resource OrganizationCentralizationRule
	err := ctx.ReadResource("aws-native:observabilityadmin:OrganizationCentralizationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationCentralizationRule resources.
type organizationCentralizationRuleState struct {
}

type OrganizationCentralizationRuleState struct {
}

func (OrganizationCentralizationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationCentralizationRuleState)(nil)).Elem()
}

type organizationCentralizationRuleArgs struct {
	Rule OrganizationCentralizationRuleCentralizationRule `pulumi:"rule"`
	// The name of the organization centralization rule.
	RuleName *string `pulumi:"ruleName"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a OrganizationCentralizationRule resource.
type OrganizationCentralizationRuleArgs struct {
	Rule OrganizationCentralizationRuleCentralizationRuleInput
	// The name of the organization centralization rule.
	RuleName pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (OrganizationCentralizationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationCentralizationRuleArgs)(nil)).Elem()
}

type OrganizationCentralizationRuleInput interface {
	pulumi.Input

	ToOrganizationCentralizationRuleOutput() OrganizationCentralizationRuleOutput
	ToOrganizationCentralizationRuleOutputWithContext(ctx context.Context) OrganizationCentralizationRuleOutput
}

func (*OrganizationCentralizationRule) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationCentralizationRule)(nil)).Elem()
}

func (i *OrganizationCentralizationRule) ToOrganizationCentralizationRuleOutput() OrganizationCentralizationRuleOutput {
	return i.ToOrganizationCentralizationRuleOutputWithContext(context.Background())
}

func (i *OrganizationCentralizationRule) ToOrganizationCentralizationRuleOutputWithContext(ctx context.Context) OrganizationCentralizationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationCentralizationRuleOutput)
}

type OrganizationCentralizationRuleOutput struct{ *pulumi.OutputState }

func (OrganizationCentralizationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationCentralizationRule)(nil)).Elem()
}

func (o OrganizationCentralizationRuleOutput) ToOrganizationCentralizationRuleOutput() OrganizationCentralizationRuleOutput {
	return o
}

func (o OrganizationCentralizationRuleOutput) ToOrganizationCentralizationRuleOutputWithContext(ctx context.Context) OrganizationCentralizationRuleOutput {
	return o
}

func (o OrganizationCentralizationRuleOutput) Rule() OrganizationCentralizationRuleCentralizationRuleOutput {
	return o.ApplyT(func(v *OrganizationCentralizationRule) OrganizationCentralizationRuleCentralizationRuleOutput {
		return v.Rule
	}).(OrganizationCentralizationRuleCentralizationRuleOutput)
}

// The Amazon Resource Name (ARN) of the organization centralization rule.
func (o OrganizationCentralizationRuleOutput) RuleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationCentralizationRule) pulumi.StringOutput { return v.RuleArn }).(pulumi.StringOutput)
}

// The name of the organization centralization rule.
func (o OrganizationCentralizationRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationCentralizationRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o OrganizationCentralizationRuleOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *OrganizationCentralizationRule) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationCentralizationRuleInput)(nil)).Elem(), &OrganizationCentralizationRule{})
	pulumi.RegisterOutputType(OrganizationCentralizationRuleOutput{})
}
