// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package observabilityadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource
type OrganizationTelemetryRuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The destination configuration for telemetry data
type OrganizationTelemetryRuleTelemetryDestinationConfiguration struct {
	DestinationPattern   *string                                        `pulumi:"destinationPattern"`
	DestinationType      *OrganizationTelemetryRuleDestinationType      `pulumi:"destinationType"`
	RetentionInDays      *int                                           `pulumi:"retentionInDays"`
	VpcFlowLogParameters *OrganizationTelemetryRuleVpcFlowLogParameters `pulumi:"vpcFlowLogParameters"`
}

// OrganizationTelemetryRuleTelemetryDestinationConfigurationInput is an input type that accepts OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs and OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput values.
// You can construct a concrete instance of `OrganizationTelemetryRuleTelemetryDestinationConfigurationInput` via:
//
//	OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs{...}
type OrganizationTelemetryRuleTelemetryDestinationConfigurationInput interface {
	pulumi.Input

	ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput
	ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput
}

// The destination configuration for telemetry data
type OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs struct {
	DestinationPattern   pulumi.StringPtrInput                                 `pulumi:"destinationPattern"`
	DestinationType      OrganizationTelemetryRuleDestinationTypePtrInput      `pulumi:"destinationType"`
	RetentionInDays      pulumi.IntPtrInput                                    `pulumi:"retentionInDays"`
	VpcFlowLogParameters OrganizationTelemetryRuleVpcFlowLogParametersPtrInput `pulumi:"vpcFlowLogParameters"`
}

func (OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (i OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput {
	return i.ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(context.Background())
}

func (i OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput)
}

func (i OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return i.ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput).ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx)
}

// OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput is an input type that accepts OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs, OrganizationTelemetryRuleTelemetryDestinationConfigurationPtr and OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput` via:
//
//	        OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput
	ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput
}

type organizationTelemetryRuleTelemetryDestinationConfigurationPtrType OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs

func OrganizationTelemetryRuleTelemetryDestinationConfigurationPtr(v *OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput {
	return (*organizationTelemetryRuleTelemetryDestinationConfigurationPtrType)(v)
}

func (*organizationTelemetryRuleTelemetryDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationTelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (i *organizationTelemetryRuleTelemetryDestinationConfigurationPtrType) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return i.ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *organizationTelemetryRuleTelemetryDestinationConfigurationPtrType) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

// The destination configuration for telemetry data
type OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationTelemetryRuleTelemetryDestinationConfiguration) *OrganizationTelemetryRuleTelemetryDestinationConfiguration {
		return &v
	}).(OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) DestinationPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryDestinationConfiguration) *string {
		return v.DestinationPattern
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) DestinationType() OrganizationTelemetryRuleDestinationTypePtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryDestinationConfiguration) *OrganizationTelemetryRuleDestinationType {
		return v.DestinationType
	}).(OrganizationTelemetryRuleDestinationTypePtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryDestinationConfiguration) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput) VpcFlowLogParameters() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryDestinationConfiguration) *OrganizationTelemetryRuleVpcFlowLogParameters {
		return v.VpcFlowLogParameters
	}).(OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput)
}

type OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationTelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) ToOrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) Elem() OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryDestinationConfiguration) OrganizationTelemetryRuleTelemetryDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret OrganizationTelemetryRuleTelemetryDestinationConfiguration
		return ret
	}).(OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) DestinationPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPattern
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) DestinationType() OrganizationTelemetryRuleDestinationTypePtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryDestinationConfiguration) *OrganizationTelemetryRuleDestinationType {
		if v == nil {
			return nil
		}
		return v.DestinationType
	}).(OrganizationTelemetryRuleDestinationTypePtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryDestinationConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput) VpcFlowLogParameters() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryDestinationConfiguration) *OrganizationTelemetryRuleVpcFlowLogParameters {
		if v == nil {
			return nil
		}
		return v.VpcFlowLogParameters
	}).(OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput)
}

// The telemetry rule
type OrganizationTelemetryRuleTelemetryRule struct {
	DestinationConfiguration *OrganizationTelemetryRuleTelemetryDestinationConfiguration `pulumi:"destinationConfiguration"`
	ResourceType             OrganizationTelemetryRuleResourceType                       `pulumi:"resourceType"`
	Scope                    *string                                                     `pulumi:"scope"`
	SelectionCriteria        *string                                                     `pulumi:"selectionCriteria"`
	TelemetryType            OrganizationTelemetryRuleTelemetryType                      `pulumi:"telemetryType"`
}

// OrganizationTelemetryRuleTelemetryRuleInput is an input type that accepts OrganizationTelemetryRuleTelemetryRuleArgs and OrganizationTelemetryRuleTelemetryRuleOutput values.
// You can construct a concrete instance of `OrganizationTelemetryRuleTelemetryRuleInput` via:
//
//	OrganizationTelemetryRuleTelemetryRuleArgs{...}
type OrganizationTelemetryRuleTelemetryRuleInput interface {
	pulumi.Input

	ToOrganizationTelemetryRuleTelemetryRuleOutput() OrganizationTelemetryRuleTelemetryRuleOutput
	ToOrganizationTelemetryRuleTelemetryRuleOutputWithContext(context.Context) OrganizationTelemetryRuleTelemetryRuleOutput
}

// The telemetry rule
type OrganizationTelemetryRuleTelemetryRuleArgs struct {
	DestinationConfiguration OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput `pulumi:"destinationConfiguration"`
	ResourceType             OrganizationTelemetryRuleResourceTypeInput                         `pulumi:"resourceType"`
	Scope                    pulumi.StringPtrInput                                              `pulumi:"scope"`
	SelectionCriteria        pulumi.StringPtrInput                                              `pulumi:"selectionCriteria"`
	TelemetryType            OrganizationTelemetryRuleTelemetryTypeInput                        `pulumi:"telemetryType"`
}

func (OrganizationTelemetryRuleTelemetryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleTelemetryRule)(nil)).Elem()
}

func (i OrganizationTelemetryRuleTelemetryRuleArgs) ToOrganizationTelemetryRuleTelemetryRuleOutput() OrganizationTelemetryRuleTelemetryRuleOutput {
	return i.ToOrganizationTelemetryRuleTelemetryRuleOutputWithContext(context.Background())
}

func (i OrganizationTelemetryRuleTelemetryRuleArgs) ToOrganizationTelemetryRuleTelemetryRuleOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleTelemetryRuleOutput)
}

// The telemetry rule
type OrganizationTelemetryRuleTelemetryRuleOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleTelemetryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleTelemetryRule)(nil)).Elem()
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) ToOrganizationTelemetryRuleTelemetryRuleOutput() OrganizationTelemetryRuleTelemetryRuleOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) ToOrganizationTelemetryRuleTelemetryRuleOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryRuleOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) DestinationConfiguration() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryRule) *OrganizationTelemetryRuleTelemetryDestinationConfiguration {
		return v.DestinationConfiguration
	}).(OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) ResourceType() OrganizationTelemetryRuleResourceTypeOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryRule) OrganizationTelemetryRuleResourceType {
		return v.ResourceType
	}).(OrganizationTelemetryRuleResourceTypeOutput)
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryRule) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) SelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryRule) *string { return v.SelectionCriteria }).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRuleOutput) TelemetryType() OrganizationTelemetryRuleTelemetryTypeOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleTelemetryRule) OrganizationTelemetryRuleTelemetryType {
		return v.TelemetryType
	}).(OrganizationTelemetryRuleTelemetryTypeOutput)
}

type OrganizationTelemetryRuleTelemetryRulePtrOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleTelemetryRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationTelemetryRuleTelemetryRule)(nil)).Elem()
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) ToOrganizationTelemetryRuleTelemetryRulePtrOutput() OrganizationTelemetryRuleTelemetryRulePtrOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) ToOrganizationTelemetryRuleTelemetryRulePtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleTelemetryRulePtrOutput {
	return o
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) Elem() OrganizationTelemetryRuleTelemetryRuleOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) OrganizationTelemetryRuleTelemetryRule {
		if v != nil {
			return *v
		}
		var ret OrganizationTelemetryRuleTelemetryRule
		return ret
	}).(OrganizationTelemetryRuleTelemetryRuleOutput)
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) DestinationConfiguration() OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) *OrganizationTelemetryRuleTelemetryDestinationConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationConfiguration
	}).(OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) ResourceType() OrganizationTelemetryRuleResourceTypePtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) *OrganizationTelemetryRuleResourceType {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(OrganizationTelemetryRuleResourceTypePtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) SelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) *string {
		if v == nil {
			return nil
		}
		return v.SelectionCriteria
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationTelemetryRuleTelemetryRulePtrOutput) TelemetryType() OrganizationTelemetryRuleTelemetryTypePtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleTelemetryRule) *OrganizationTelemetryRuleTelemetryType {
		if v == nil {
			return nil
		}
		return &v.TelemetryType
	}).(OrganizationTelemetryRuleTelemetryTypePtrOutput)
}

// Telemetry parameters for VPC Flow logs
type OrganizationTelemetryRuleVpcFlowLogParameters struct {
	// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
	LogFormat *string `pulumi:"logFormat"`
	// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
	MaxAggregationInterval *int `pulumi:"maxAggregationInterval"`
	// The type of traffic captured for the flow log. Default is ALL
	TrafficType *string `pulumi:"trafficType"`
}

// OrganizationTelemetryRuleVpcFlowLogParametersInput is an input type that accepts OrganizationTelemetryRuleVpcFlowLogParametersArgs and OrganizationTelemetryRuleVpcFlowLogParametersOutput values.
// You can construct a concrete instance of `OrganizationTelemetryRuleVpcFlowLogParametersInput` via:
//
//	OrganizationTelemetryRuleVpcFlowLogParametersArgs{...}
type OrganizationTelemetryRuleVpcFlowLogParametersInput interface {
	pulumi.Input

	ToOrganizationTelemetryRuleVpcFlowLogParametersOutput() OrganizationTelemetryRuleVpcFlowLogParametersOutput
	ToOrganizationTelemetryRuleVpcFlowLogParametersOutputWithContext(context.Context) OrganizationTelemetryRuleVpcFlowLogParametersOutput
}

// Telemetry parameters for VPC Flow logs
type OrganizationTelemetryRuleVpcFlowLogParametersArgs struct {
	// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
	LogFormat pulumi.StringPtrInput `pulumi:"logFormat"`
	// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
	MaxAggregationInterval pulumi.IntPtrInput `pulumi:"maxAggregationInterval"`
	// The type of traffic captured for the flow log. Default is ALL
	TrafficType pulumi.StringPtrInput `pulumi:"trafficType"`
}

func (OrganizationTelemetryRuleVpcFlowLogParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (i OrganizationTelemetryRuleVpcFlowLogParametersArgs) ToOrganizationTelemetryRuleVpcFlowLogParametersOutput() OrganizationTelemetryRuleVpcFlowLogParametersOutput {
	return i.ToOrganizationTelemetryRuleVpcFlowLogParametersOutputWithContext(context.Background())
}

func (i OrganizationTelemetryRuleVpcFlowLogParametersArgs) ToOrganizationTelemetryRuleVpcFlowLogParametersOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleVpcFlowLogParametersOutput)
}

func (i OrganizationTelemetryRuleVpcFlowLogParametersArgs) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutput() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return i.ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (i OrganizationTelemetryRuleVpcFlowLogParametersArgs) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleVpcFlowLogParametersOutput).ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx)
}

// OrganizationTelemetryRuleVpcFlowLogParametersPtrInput is an input type that accepts OrganizationTelemetryRuleVpcFlowLogParametersArgs, OrganizationTelemetryRuleVpcFlowLogParametersPtr and OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput values.
// You can construct a concrete instance of `OrganizationTelemetryRuleVpcFlowLogParametersPtrInput` via:
//
//	        OrganizationTelemetryRuleVpcFlowLogParametersArgs{...}
//
//	or:
//
//	        nil
type OrganizationTelemetryRuleVpcFlowLogParametersPtrInput interface {
	pulumi.Input

	ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutput() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput
	ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Context) OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput
}

type organizationTelemetryRuleVpcFlowLogParametersPtrType OrganizationTelemetryRuleVpcFlowLogParametersArgs

func OrganizationTelemetryRuleVpcFlowLogParametersPtr(v *OrganizationTelemetryRuleVpcFlowLogParametersArgs) OrganizationTelemetryRuleVpcFlowLogParametersPtrInput {
	return (*organizationTelemetryRuleVpcFlowLogParametersPtrType)(v)
}

func (*organizationTelemetryRuleVpcFlowLogParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationTelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (i *organizationTelemetryRuleVpcFlowLogParametersPtrType) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutput() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return i.ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (i *organizationTelemetryRuleVpcFlowLogParametersPtrType) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput)
}

// Telemetry parameters for VPC Flow logs
type OrganizationTelemetryRuleVpcFlowLogParametersOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleVpcFlowLogParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationTelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersOutput() OrganizationTelemetryRuleVpcFlowLogParametersOutput {
	return o
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersOutput {
	return o
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutput() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationTelemetryRuleVpcFlowLogParameters) *OrganizationTelemetryRuleVpcFlowLogParameters {
		return &v
	}).(OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput)
}

// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) LogFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleVpcFlowLogParameters) *string { return v.LogFormat }).(pulumi.StringPtrOutput)
}

// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) MaxAggregationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleVpcFlowLogParameters) *int { return v.MaxAggregationInterval }).(pulumi.IntPtrOutput)
}

// The type of traffic captured for the flow log. Default is ALL
func (o OrganizationTelemetryRuleVpcFlowLogParametersOutput) TrafficType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationTelemetryRuleVpcFlowLogParameters) *string { return v.TrafficType }).(pulumi.StringPtrOutput)
}

type OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput struct{ *pulumi.OutputState }

func (OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationTelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutput() OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) ToOrganizationTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput {
	return o
}

func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) Elem() OrganizationTelemetryRuleVpcFlowLogParametersOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleVpcFlowLogParameters) OrganizationTelemetryRuleVpcFlowLogParameters {
		if v != nil {
			return *v
		}
		var ret OrganizationTelemetryRuleVpcFlowLogParameters
		return ret
	}).(OrganizationTelemetryRuleVpcFlowLogParametersOutput)
}

// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) LogFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleVpcFlowLogParameters) *string {
		if v == nil {
			return nil
		}
		return v.LogFormat
	}).(pulumi.StringPtrOutput)
}

// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) MaxAggregationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleVpcFlowLogParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxAggregationInterval
	}).(pulumi.IntPtrOutput)
}

// The type of traffic captured for the flow log. Default is ALL
func (o OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput) TrafficType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationTelemetryRuleVpcFlowLogParameters) *string {
		if v == nil {
			return nil
		}
		return v.TrafficType
	}).(pulumi.StringPtrOutput)
}

// The telemetry rule
type TelemetryRuleType struct {
	DestinationConfiguration *TelemetryRuleTelemetryDestinationConfiguration `pulumi:"destinationConfiguration"`
	ResourceType             TelemetryRuleResourceType                       `pulumi:"resourceType"`
	SelectionCriteria        *string                                         `pulumi:"selectionCriteria"`
	TelemetryType            TelemetryRuleTelemetryType                      `pulumi:"telemetryType"`
}

// TelemetryRuleTypeInput is an input type that accepts TelemetryRuleTypeArgs and TelemetryRuleTypeOutput values.
// You can construct a concrete instance of `TelemetryRuleTypeInput` via:
//
//	TelemetryRuleTypeArgs{...}
type TelemetryRuleTypeInput interface {
	pulumi.Input

	ToTelemetryRuleTypeOutput() TelemetryRuleTypeOutput
	ToTelemetryRuleTypeOutputWithContext(context.Context) TelemetryRuleTypeOutput
}

// The telemetry rule
type TelemetryRuleTypeArgs struct {
	DestinationConfiguration TelemetryRuleTelemetryDestinationConfigurationPtrInput `pulumi:"destinationConfiguration"`
	ResourceType             TelemetryRuleResourceTypeInput                         `pulumi:"resourceType"`
	SelectionCriteria        pulumi.StringPtrInput                                  `pulumi:"selectionCriteria"`
	TelemetryType            TelemetryRuleTelemetryTypeInput                        `pulumi:"telemetryType"`
}

func (TelemetryRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleType)(nil)).Elem()
}

func (i TelemetryRuleTypeArgs) ToTelemetryRuleTypeOutput() TelemetryRuleTypeOutput {
	return i.ToTelemetryRuleTypeOutputWithContext(context.Background())
}

func (i TelemetryRuleTypeArgs) ToTelemetryRuleTypeOutputWithContext(ctx context.Context) TelemetryRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleTypeOutput)
}

// The telemetry rule
type TelemetryRuleTypeOutput struct{ *pulumi.OutputState }

func (TelemetryRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleType)(nil)).Elem()
}

func (o TelemetryRuleTypeOutput) ToTelemetryRuleTypeOutput() TelemetryRuleTypeOutput {
	return o
}

func (o TelemetryRuleTypeOutput) ToTelemetryRuleTypeOutputWithContext(ctx context.Context) TelemetryRuleTypeOutput {
	return o
}

func (o TelemetryRuleTypeOutput) DestinationConfiguration() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v TelemetryRuleType) *TelemetryRuleTelemetryDestinationConfiguration {
		return v.DestinationConfiguration
	}).(TelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o TelemetryRuleTypeOutput) ResourceType() TelemetryRuleResourceTypeOutput {
	return o.ApplyT(func(v TelemetryRuleType) TelemetryRuleResourceType { return v.ResourceType }).(TelemetryRuleResourceTypeOutput)
}

func (o TelemetryRuleTypeOutput) SelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryRuleType) *string { return v.SelectionCriteria }).(pulumi.StringPtrOutput)
}

func (o TelemetryRuleTypeOutput) TelemetryType() TelemetryRuleTelemetryTypeOutput {
	return o.ApplyT(func(v TelemetryRuleType) TelemetryRuleTelemetryType { return v.TelemetryType }).(TelemetryRuleTelemetryTypeOutput)
}

type TelemetryRuleTypePtrOutput struct{ *pulumi.OutputState }

func (TelemetryRuleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryRuleType)(nil)).Elem()
}

func (o TelemetryRuleTypePtrOutput) ToTelemetryRuleTypePtrOutput() TelemetryRuleTypePtrOutput {
	return o
}

func (o TelemetryRuleTypePtrOutput) ToTelemetryRuleTypePtrOutputWithContext(ctx context.Context) TelemetryRuleTypePtrOutput {
	return o
}

func (o TelemetryRuleTypePtrOutput) Elem() TelemetryRuleTypeOutput {
	return o.ApplyT(func(v *TelemetryRuleType) TelemetryRuleType {
		if v != nil {
			return *v
		}
		var ret TelemetryRuleType
		return ret
	}).(TelemetryRuleTypeOutput)
}

func (o TelemetryRuleTypePtrOutput) DestinationConfiguration() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleType) *TelemetryRuleTelemetryDestinationConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationConfiguration
	}).(TelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o TelemetryRuleTypePtrOutput) ResourceType() TelemetryRuleResourceTypePtrOutput {
	return o.ApplyT(func(v *TelemetryRuleType) *TelemetryRuleResourceType {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(TelemetryRuleResourceTypePtrOutput)
}

func (o TelemetryRuleTypePtrOutput) SelectionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleType) *string {
		if v == nil {
			return nil
		}
		return v.SelectionCriteria
	}).(pulumi.StringPtrOutput)
}

func (o TelemetryRuleTypePtrOutput) TelemetryType() TelemetryRuleTelemetryTypePtrOutput {
	return o.ApplyT(func(v *TelemetryRuleType) *TelemetryRuleTelemetryType {
		if v == nil {
			return nil
		}
		return &v.TelemetryType
	}).(TelemetryRuleTelemetryTypePtrOutput)
}

// A key-value pair to associate with a resource
type TelemetryRuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The destination configuration for telemetry data
type TelemetryRuleTelemetryDestinationConfiguration struct {
	DestinationPattern   *string                            `pulumi:"destinationPattern"`
	DestinationType      *TelemetryRuleDestinationType      `pulumi:"destinationType"`
	RetentionInDays      *int                               `pulumi:"retentionInDays"`
	VpcFlowLogParameters *TelemetryRuleVpcFlowLogParameters `pulumi:"vpcFlowLogParameters"`
}

// TelemetryRuleTelemetryDestinationConfigurationInput is an input type that accepts TelemetryRuleTelemetryDestinationConfigurationArgs and TelemetryRuleTelemetryDestinationConfigurationOutput values.
// You can construct a concrete instance of `TelemetryRuleTelemetryDestinationConfigurationInput` via:
//
//	TelemetryRuleTelemetryDestinationConfigurationArgs{...}
type TelemetryRuleTelemetryDestinationConfigurationInput interface {
	pulumi.Input

	ToTelemetryRuleTelemetryDestinationConfigurationOutput() TelemetryRuleTelemetryDestinationConfigurationOutput
	ToTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(context.Context) TelemetryRuleTelemetryDestinationConfigurationOutput
}

// The destination configuration for telemetry data
type TelemetryRuleTelemetryDestinationConfigurationArgs struct {
	DestinationPattern   pulumi.StringPtrInput                     `pulumi:"destinationPattern"`
	DestinationType      TelemetryRuleDestinationTypePtrInput      `pulumi:"destinationType"`
	RetentionInDays      pulumi.IntPtrInput                        `pulumi:"retentionInDays"`
	VpcFlowLogParameters TelemetryRuleVpcFlowLogParametersPtrInput `pulumi:"vpcFlowLogParameters"`
}

func (TelemetryRuleTelemetryDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (i TelemetryRuleTelemetryDestinationConfigurationArgs) ToTelemetryRuleTelemetryDestinationConfigurationOutput() TelemetryRuleTelemetryDestinationConfigurationOutput {
	return i.ToTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(context.Background())
}

func (i TelemetryRuleTelemetryDestinationConfigurationArgs) ToTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleTelemetryDestinationConfigurationOutput)
}

func (i TelemetryRuleTelemetryDestinationConfigurationArgs) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutput() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return i.ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i TelemetryRuleTelemetryDestinationConfigurationArgs) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleTelemetryDestinationConfigurationOutput).ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx)
}

// TelemetryRuleTelemetryDestinationConfigurationPtrInput is an input type that accepts TelemetryRuleTelemetryDestinationConfigurationArgs, TelemetryRuleTelemetryDestinationConfigurationPtr and TelemetryRuleTelemetryDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `TelemetryRuleTelemetryDestinationConfigurationPtrInput` via:
//
//	        TelemetryRuleTelemetryDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type TelemetryRuleTelemetryDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToTelemetryRuleTelemetryDestinationConfigurationPtrOutput() TelemetryRuleTelemetryDestinationConfigurationPtrOutput
	ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Context) TelemetryRuleTelemetryDestinationConfigurationPtrOutput
}

type telemetryRuleTelemetryDestinationConfigurationPtrType TelemetryRuleTelemetryDestinationConfigurationArgs

func TelemetryRuleTelemetryDestinationConfigurationPtr(v *TelemetryRuleTelemetryDestinationConfigurationArgs) TelemetryRuleTelemetryDestinationConfigurationPtrInput {
	return (*telemetryRuleTelemetryDestinationConfigurationPtrType)(v)
}

func (*telemetryRuleTelemetryDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (i *telemetryRuleTelemetryDestinationConfigurationPtrType) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutput() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return i.ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *telemetryRuleTelemetryDestinationConfigurationPtrType) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

// The destination configuration for telemetry data
type TelemetryRuleTelemetryDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (TelemetryRuleTelemetryDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) ToTelemetryRuleTelemetryDestinationConfigurationOutput() TelemetryRuleTelemetryDestinationConfigurationOutput {
	return o
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) ToTelemetryRuleTelemetryDestinationConfigurationOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationOutput {
	return o
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutput() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelemetryRuleTelemetryDestinationConfiguration) *TelemetryRuleTelemetryDestinationConfiguration {
		return &v
	}).(TelemetryRuleTelemetryDestinationConfigurationPtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) DestinationPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryRuleTelemetryDestinationConfiguration) *string { return v.DestinationPattern }).(pulumi.StringPtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) DestinationType() TelemetryRuleDestinationTypePtrOutput {
	return o.ApplyT(func(v TelemetryRuleTelemetryDestinationConfiguration) *TelemetryRuleDestinationType {
		return v.DestinationType
	}).(TelemetryRuleDestinationTypePtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TelemetryRuleTelemetryDestinationConfiguration) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationOutput) VpcFlowLogParameters() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyT(func(v TelemetryRuleTelemetryDestinationConfiguration) *TelemetryRuleVpcFlowLogParameters {
		return v.VpcFlowLogParameters
	}).(TelemetryRuleVpcFlowLogParametersPtrOutput)
}

type TelemetryRuleTelemetryDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TelemetryRuleTelemetryDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryRuleTelemetryDestinationConfiguration)(nil)).Elem()
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutput() TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) ToTelemetryRuleTelemetryDestinationConfigurationPtrOutputWithContext(ctx context.Context) TelemetryRuleTelemetryDestinationConfigurationPtrOutput {
	return o
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) Elem() TelemetryRuleTelemetryDestinationConfigurationOutput {
	return o.ApplyT(func(v *TelemetryRuleTelemetryDestinationConfiguration) TelemetryRuleTelemetryDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret TelemetryRuleTelemetryDestinationConfiguration
		return ret
	}).(TelemetryRuleTelemetryDestinationConfigurationOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) DestinationPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleTelemetryDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPattern
	}).(pulumi.StringPtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) DestinationType() TelemetryRuleDestinationTypePtrOutput {
	return o.ApplyT(func(v *TelemetryRuleTelemetryDestinationConfiguration) *TelemetryRuleDestinationType {
		if v == nil {
			return nil
		}
		return v.DestinationType
	}).(TelemetryRuleDestinationTypePtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleTelemetryDestinationConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

func (o TelemetryRuleTelemetryDestinationConfigurationPtrOutput) VpcFlowLogParameters() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleTelemetryDestinationConfiguration) *TelemetryRuleVpcFlowLogParameters {
		if v == nil {
			return nil
		}
		return v.VpcFlowLogParameters
	}).(TelemetryRuleVpcFlowLogParametersPtrOutput)
}

// Telemetry parameters for VPC Flow logs
type TelemetryRuleVpcFlowLogParameters struct {
	// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
	LogFormat *string `pulumi:"logFormat"`
	// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
	MaxAggregationInterval *int `pulumi:"maxAggregationInterval"`
	// The type of traffic captured for the flow log. Default is ALL
	TrafficType *string `pulumi:"trafficType"`
}

// TelemetryRuleVpcFlowLogParametersInput is an input type that accepts TelemetryRuleVpcFlowLogParametersArgs and TelemetryRuleVpcFlowLogParametersOutput values.
// You can construct a concrete instance of `TelemetryRuleVpcFlowLogParametersInput` via:
//
//	TelemetryRuleVpcFlowLogParametersArgs{...}
type TelemetryRuleVpcFlowLogParametersInput interface {
	pulumi.Input

	ToTelemetryRuleVpcFlowLogParametersOutput() TelemetryRuleVpcFlowLogParametersOutput
	ToTelemetryRuleVpcFlowLogParametersOutputWithContext(context.Context) TelemetryRuleVpcFlowLogParametersOutput
}

// Telemetry parameters for VPC Flow logs
type TelemetryRuleVpcFlowLogParametersArgs struct {
	// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
	LogFormat pulumi.StringPtrInput `pulumi:"logFormat"`
	// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
	MaxAggregationInterval pulumi.IntPtrInput `pulumi:"maxAggregationInterval"`
	// The type of traffic captured for the flow log. Default is ALL
	TrafficType pulumi.StringPtrInput `pulumi:"trafficType"`
}

func (TelemetryRuleVpcFlowLogParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (i TelemetryRuleVpcFlowLogParametersArgs) ToTelemetryRuleVpcFlowLogParametersOutput() TelemetryRuleVpcFlowLogParametersOutput {
	return i.ToTelemetryRuleVpcFlowLogParametersOutputWithContext(context.Background())
}

func (i TelemetryRuleVpcFlowLogParametersArgs) ToTelemetryRuleVpcFlowLogParametersOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleVpcFlowLogParametersOutput)
}

func (i TelemetryRuleVpcFlowLogParametersArgs) ToTelemetryRuleVpcFlowLogParametersPtrOutput() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return i.ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (i TelemetryRuleVpcFlowLogParametersArgs) ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleVpcFlowLogParametersOutput).ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx)
}

// TelemetryRuleVpcFlowLogParametersPtrInput is an input type that accepts TelemetryRuleVpcFlowLogParametersArgs, TelemetryRuleVpcFlowLogParametersPtr and TelemetryRuleVpcFlowLogParametersPtrOutput values.
// You can construct a concrete instance of `TelemetryRuleVpcFlowLogParametersPtrInput` via:
//
//	        TelemetryRuleVpcFlowLogParametersArgs{...}
//
//	or:
//
//	        nil
type TelemetryRuleVpcFlowLogParametersPtrInput interface {
	pulumi.Input

	ToTelemetryRuleVpcFlowLogParametersPtrOutput() TelemetryRuleVpcFlowLogParametersPtrOutput
	ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Context) TelemetryRuleVpcFlowLogParametersPtrOutput
}

type telemetryRuleVpcFlowLogParametersPtrType TelemetryRuleVpcFlowLogParametersArgs

func TelemetryRuleVpcFlowLogParametersPtr(v *TelemetryRuleVpcFlowLogParametersArgs) TelemetryRuleVpcFlowLogParametersPtrInput {
	return (*telemetryRuleVpcFlowLogParametersPtrType)(v)
}

func (*telemetryRuleVpcFlowLogParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (i *telemetryRuleVpcFlowLogParametersPtrType) ToTelemetryRuleVpcFlowLogParametersPtrOutput() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return i.ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (i *telemetryRuleVpcFlowLogParametersPtrType) ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TelemetryRuleVpcFlowLogParametersPtrOutput)
}

// Telemetry parameters for VPC Flow logs
type TelemetryRuleVpcFlowLogParametersOutput struct{ *pulumi.OutputState }

func (TelemetryRuleVpcFlowLogParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (o TelemetryRuleVpcFlowLogParametersOutput) ToTelemetryRuleVpcFlowLogParametersOutput() TelemetryRuleVpcFlowLogParametersOutput {
	return o
}

func (o TelemetryRuleVpcFlowLogParametersOutput) ToTelemetryRuleVpcFlowLogParametersOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersOutput {
	return o
}

func (o TelemetryRuleVpcFlowLogParametersOutput) ToTelemetryRuleVpcFlowLogParametersPtrOutput() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(context.Background())
}

func (o TelemetryRuleVpcFlowLogParametersOutput) ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelemetryRuleVpcFlowLogParameters) *TelemetryRuleVpcFlowLogParameters {
		return &v
	}).(TelemetryRuleVpcFlowLogParametersPtrOutput)
}

// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
func (o TelemetryRuleVpcFlowLogParametersOutput) LogFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryRuleVpcFlowLogParameters) *string { return v.LogFormat }).(pulumi.StringPtrOutput)
}

// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
func (o TelemetryRuleVpcFlowLogParametersOutput) MaxAggregationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TelemetryRuleVpcFlowLogParameters) *int { return v.MaxAggregationInterval }).(pulumi.IntPtrOutput)
}

// The type of traffic captured for the flow log. Default is ALL
func (o TelemetryRuleVpcFlowLogParametersOutput) TrafficType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TelemetryRuleVpcFlowLogParameters) *string { return v.TrafficType }).(pulumi.StringPtrOutput)
}

type TelemetryRuleVpcFlowLogParametersPtrOutput struct{ *pulumi.OutputState }

func (TelemetryRuleVpcFlowLogParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryRuleVpcFlowLogParameters)(nil)).Elem()
}

func (o TelemetryRuleVpcFlowLogParametersPtrOutput) ToTelemetryRuleVpcFlowLogParametersPtrOutput() TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o
}

func (o TelemetryRuleVpcFlowLogParametersPtrOutput) ToTelemetryRuleVpcFlowLogParametersPtrOutputWithContext(ctx context.Context) TelemetryRuleVpcFlowLogParametersPtrOutput {
	return o
}

func (o TelemetryRuleVpcFlowLogParametersPtrOutput) Elem() TelemetryRuleVpcFlowLogParametersOutput {
	return o.ApplyT(func(v *TelemetryRuleVpcFlowLogParameters) TelemetryRuleVpcFlowLogParameters {
		if v != nil {
			return *v
		}
		var ret TelemetryRuleVpcFlowLogParameters
		return ret
	}).(TelemetryRuleVpcFlowLogParametersOutput)
}

// The fields to include in the flow log record. If you omit this parameter, the flow log is created using the default format.
func (o TelemetryRuleVpcFlowLogParametersPtrOutput) LogFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleVpcFlowLogParameters) *string {
		if v == nil {
			return nil
		}
		return v.LogFormat
	}).(pulumi.StringPtrOutput)
}

// The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record. Default is 600s.
func (o TelemetryRuleVpcFlowLogParametersPtrOutput) MaxAggregationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleVpcFlowLogParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxAggregationInterval
	}).(pulumi.IntPtrOutput)
}

// The type of traffic captured for the flow log. Default is ALL
func (o TelemetryRuleVpcFlowLogParametersPtrOutput) TrafficType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TelemetryRuleVpcFlowLogParameters) *string {
		if v == nil {
			return nil
		}
		return v.TrafficType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTelemetryRuleTelemetryDestinationConfigurationInput)(nil)).Elem(), OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrInput)(nil)).Elem(), OrganizationTelemetryRuleTelemetryDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTelemetryRuleTelemetryRuleInput)(nil)).Elem(), OrganizationTelemetryRuleTelemetryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTelemetryRuleVpcFlowLogParametersInput)(nil)).Elem(), OrganizationTelemetryRuleVpcFlowLogParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTelemetryRuleVpcFlowLogParametersPtrInput)(nil)).Elem(), OrganizationTelemetryRuleVpcFlowLogParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryRuleTypeInput)(nil)).Elem(), TelemetryRuleTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryRuleTelemetryDestinationConfigurationInput)(nil)).Elem(), TelemetryRuleTelemetryDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryRuleTelemetryDestinationConfigurationPtrInput)(nil)).Elem(), TelemetryRuleTelemetryDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryRuleVpcFlowLogParametersInput)(nil)).Elem(), TelemetryRuleVpcFlowLogParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryRuleVpcFlowLogParametersPtrInput)(nil)).Elem(), TelemetryRuleVpcFlowLogParametersArgs{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleTelemetryDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleTelemetryDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleTelemetryRuleOutput{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleTelemetryRulePtrOutput{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleVpcFlowLogParametersOutput{})
	pulumi.RegisterOutputType(OrganizationTelemetryRuleVpcFlowLogParametersPtrOutput{})
	pulumi.RegisterOutputType(TelemetryRuleTypeOutput{})
	pulumi.RegisterOutputType(TelemetryRuleTypePtrOutput{})
	pulumi.RegisterOutputType(TelemetryRuleTelemetryDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(TelemetryRuleTelemetryDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TelemetryRuleVpcFlowLogParametersOutput{})
	pulumi.RegisterOutputType(TelemetryRuleVpcFlowLogParametersPtrOutput{})
}
