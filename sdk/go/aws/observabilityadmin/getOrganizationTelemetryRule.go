// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package observabilityadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ObservabilityAdmin::OrganizationTelemetryRule resource defines a CloudWatch Observability Admin Organization Telemetry Rule.
func LookupOrganizationTelemetryRule(ctx *pulumi.Context, args *LookupOrganizationTelemetryRuleArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationTelemetryRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationTelemetryRuleResult
	err := ctx.Invoke("aws-native:observabilityadmin:getOrganizationTelemetryRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOrganizationTelemetryRuleArgs struct {
	// The arn of the organization telemetry rule
	RuleArn string `pulumi:"ruleArn"`
}

type LookupOrganizationTelemetryRuleResult struct {
	// The name of the organization telemetry rule.
	Rule *OrganizationTelemetryRuleTelemetryRule `pulumi:"rule"`
	// The arn of the organization telemetry rule
	RuleArn *string `pulumi:"ruleArn"`
	// An array of key-value pairs to apply to this resource
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupOrganizationTelemetryRuleOutput(ctx *pulumi.Context, args LookupOrganizationTelemetryRuleOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationTelemetryRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrganizationTelemetryRuleResultOutput, error) {
			args := v.(LookupOrganizationTelemetryRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:observabilityadmin:getOrganizationTelemetryRule", args, LookupOrganizationTelemetryRuleResultOutput{}, options).(LookupOrganizationTelemetryRuleResultOutput), nil
		}).(LookupOrganizationTelemetryRuleResultOutput)
}

type LookupOrganizationTelemetryRuleOutputArgs struct {
	// The arn of the organization telemetry rule
	RuleArn pulumi.StringInput `pulumi:"ruleArn"`
}

func (LookupOrganizationTelemetryRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationTelemetryRuleArgs)(nil)).Elem()
}

type LookupOrganizationTelemetryRuleResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationTelemetryRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationTelemetryRuleResult)(nil)).Elem()
}

func (o LookupOrganizationTelemetryRuleResultOutput) ToLookupOrganizationTelemetryRuleResultOutput() LookupOrganizationTelemetryRuleResultOutput {
	return o
}

func (o LookupOrganizationTelemetryRuleResultOutput) ToLookupOrganizationTelemetryRuleResultOutputWithContext(ctx context.Context) LookupOrganizationTelemetryRuleResultOutput {
	return o
}

// The name of the organization telemetry rule.
func (o LookupOrganizationTelemetryRuleResultOutput) Rule() OrganizationTelemetryRuleTelemetryRulePtrOutput {
	return o.ApplyT(func(v LookupOrganizationTelemetryRuleResult) *OrganizationTelemetryRuleTelemetryRule { return v.Rule }).(OrganizationTelemetryRuleTelemetryRulePtrOutput)
}

// The arn of the organization telemetry rule
func (o LookupOrganizationTelemetryRuleResultOutput) RuleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationTelemetryRuleResult) *string { return v.RuleArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource
func (o LookupOrganizationTelemetryRuleResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupOrganizationTelemetryRuleResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationTelemetryRuleResultOutput{})
}
