// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EFS::FileSystem
func LookupFileSystem(ctx *pulumi.Context, args *LookupFileSystemArgs, opts ...pulumi.InvokeOption) (*LookupFileSystemResult, error) {
	var rv LookupFileSystemResult
	err := ctx.Invoke("aws-native:efs:getFileSystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFileSystemArgs struct {
	FileSystemId string `pulumi:"fileSystemId"`
}

type LookupFileSystemResult struct {
	Arn                          *string                          `pulumi:"arn"`
	BackupPolicy                 *FileSystemBackupPolicy          `pulumi:"backupPolicy"`
	FileSystemId                 *string                          `pulumi:"fileSystemId"`
	FileSystemPolicy             interface{}                      `pulumi:"fileSystemPolicy"`
	FileSystemTags               []FileSystemElasticFileSystemTag `pulumi:"fileSystemTags"`
	LifecyclePolicies            []FileSystemLifecyclePolicy      `pulumi:"lifecyclePolicies"`
	ProvisionedThroughputInMibps *float64                         `pulumi:"provisionedThroughputInMibps"`
	ThroughputMode               *string                          `pulumi:"throughputMode"`
}

func LookupFileSystemOutput(ctx *pulumi.Context, args LookupFileSystemOutputArgs, opts ...pulumi.InvokeOption) LookupFileSystemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFileSystemResult, error) {
			args := v.(LookupFileSystemArgs)
			r, err := LookupFileSystem(ctx, &args, opts...)
			var s LookupFileSystemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFileSystemResultOutput)
}

type LookupFileSystemOutputArgs struct {
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
}

func (LookupFileSystemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileSystemArgs)(nil)).Elem()
}

type LookupFileSystemResultOutput struct{ *pulumi.OutputState }

func (LookupFileSystemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileSystemResult)(nil)).Elem()
}

func (o LookupFileSystemResultOutput) ToLookupFileSystemResultOutput() LookupFileSystemResultOutput {
	return o
}

func (o LookupFileSystemResultOutput) ToLookupFileSystemResultOutputWithContext(ctx context.Context) LookupFileSystemResultOutput {
	return o
}

func (o LookupFileSystemResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileSystemResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFileSystemResultOutput) BackupPolicy() FileSystemBackupPolicyPtrOutput {
	return o.ApplyT(func(v LookupFileSystemResult) *FileSystemBackupPolicy { return v.BackupPolicy }).(FileSystemBackupPolicyPtrOutput)
}

func (o LookupFileSystemResultOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileSystemResult) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

func (o LookupFileSystemResultOutput) FileSystemPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupFileSystemResult) interface{} { return v.FileSystemPolicy }).(pulumi.AnyOutput)
}

func (o LookupFileSystemResultOutput) FileSystemTags() FileSystemElasticFileSystemTagArrayOutput {
	return o.ApplyT(func(v LookupFileSystemResult) []FileSystemElasticFileSystemTag { return v.FileSystemTags }).(FileSystemElasticFileSystemTagArrayOutput)
}

func (o LookupFileSystemResultOutput) LifecyclePolicies() FileSystemLifecyclePolicyArrayOutput {
	return o.ApplyT(func(v LookupFileSystemResult) []FileSystemLifecyclePolicy { return v.LifecyclePolicies }).(FileSystemLifecyclePolicyArrayOutput)
}

func (o LookupFileSystemResultOutput) ProvisionedThroughputInMibps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupFileSystemResult) *float64 { return v.ProvisionedThroughputInMibps }).(pulumi.Float64PtrOutput)
}

func (o LookupFileSystemResultOutput) ThroughputMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFileSystemResult) *string { return v.ThroughputMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFileSystemResultOutput{})
}
