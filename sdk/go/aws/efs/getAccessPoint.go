// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::EFS::AccessPoint“ resource creates an EFS access point. An access point is an application-specific view into an EFS file system that applies an operating system user and group, and a file system path, to any file system request made through the access point. The operating system user and group override any identity information provided by the NFS client. The file system path is exposed as the access point's root directory. Applications using the access point can only access data in its own directory and below. To learn more, see [Mounting a file system using EFS access points](https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html).
//
//	This operation requires permissions for the ``elasticfilesystem:CreateAccessPoint`` action.
func LookupAccessPoint(ctx *pulumi.Context, args *LookupAccessPointArgs, opts ...pulumi.InvokeOption) (*LookupAccessPointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccessPointResult
	err := ctx.Invoke("aws-native:efs:getAccessPoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccessPointArgs struct {
	AccessPointId string `pulumi:"accessPointId"`
}

type LookupAccessPointResult struct {
	AccessPointId *string `pulumi:"accessPointId"`
	// An array of key-value pairs to apply to this resource.
	//  For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
	AccessPointTags []aws.Tag `pulumi:"accessPointTags"`
	Arn             *string   `pulumi:"arn"`
}

func LookupAccessPointOutput(ctx *pulumi.Context, args LookupAccessPointOutputArgs, opts ...pulumi.InvokeOption) LookupAccessPointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessPointResult, error) {
			args := v.(LookupAccessPointArgs)
			r, err := LookupAccessPoint(ctx, &args, opts...)
			var s LookupAccessPointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccessPointResultOutput)
}

type LookupAccessPointOutputArgs struct {
	AccessPointId pulumi.StringInput `pulumi:"accessPointId"`
}

func (LookupAccessPointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPointArgs)(nil)).Elem()
}

type LookupAccessPointResultOutput struct{ *pulumi.OutputState }

func (LookupAccessPointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPointResult)(nil)).Elem()
}

func (o LookupAccessPointResultOutput) ToLookupAccessPointResultOutput() LookupAccessPointResultOutput {
	return o
}

func (o LookupAccessPointResultOutput) ToLookupAccessPointResultOutputWithContext(ctx context.Context) LookupAccessPointResultOutput {
	return o
}

func (o LookupAccessPointResultOutput) AccessPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPointResult) *string { return v.AccessPointId }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
//
//	For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
func (o LookupAccessPointResultOutput) AccessPointTags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupAccessPointResult) []aws.Tag { return v.AccessPointTags }).(aws.TagArrayOutput)
}

func (o LookupAccessPointResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPointResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessPointResultOutput{})
}
