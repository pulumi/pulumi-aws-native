// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppMonitorCustomEventsStatus string

const (
	AppMonitorCustomEventsStatusEnabled  = AppMonitorCustomEventsStatus("ENABLED")
	AppMonitorCustomEventsStatusDisabled = AppMonitorCustomEventsStatus("DISABLED")
)

func (AppMonitorCustomEventsStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorCustomEventsStatus)(nil)).Elem()
}

func (e AppMonitorCustomEventsStatus) ToAppMonitorCustomEventsStatusOutput() AppMonitorCustomEventsStatusOutput {
	return pulumi.ToOutput(e).(AppMonitorCustomEventsStatusOutput)
}

func (e AppMonitorCustomEventsStatus) ToAppMonitorCustomEventsStatusOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppMonitorCustomEventsStatusOutput)
}

func (e AppMonitorCustomEventsStatus) ToAppMonitorCustomEventsStatusPtrOutput() AppMonitorCustomEventsStatusPtrOutput {
	return e.ToAppMonitorCustomEventsStatusPtrOutputWithContext(context.Background())
}

func (e AppMonitorCustomEventsStatus) ToAppMonitorCustomEventsStatusPtrOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusPtrOutput {
	return AppMonitorCustomEventsStatus(e).ToAppMonitorCustomEventsStatusOutputWithContext(ctx).ToAppMonitorCustomEventsStatusPtrOutputWithContext(ctx)
}

func (e AppMonitorCustomEventsStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorCustomEventsStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorCustomEventsStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppMonitorCustomEventsStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppMonitorCustomEventsStatusOutput struct{ *pulumi.OutputState }

func (AppMonitorCustomEventsStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorCustomEventsStatus)(nil)).Elem()
}

func (o AppMonitorCustomEventsStatusOutput) ToAppMonitorCustomEventsStatusOutput() AppMonitorCustomEventsStatusOutput {
	return o
}

func (o AppMonitorCustomEventsStatusOutput) ToAppMonitorCustomEventsStatusOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusOutput {
	return o
}

func (o AppMonitorCustomEventsStatusOutput) ToAppMonitorCustomEventsStatusPtrOutput() AppMonitorCustomEventsStatusPtrOutput {
	return o.ToAppMonitorCustomEventsStatusPtrOutputWithContext(context.Background())
}

func (o AppMonitorCustomEventsStatusOutput) ToAppMonitorCustomEventsStatusPtrOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppMonitorCustomEventsStatus) *AppMonitorCustomEventsStatus {
		return &v
	}).(AppMonitorCustomEventsStatusPtrOutput)
}

func (o AppMonitorCustomEventsStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppMonitorCustomEventsStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorCustomEventsStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppMonitorCustomEventsStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorCustomEventsStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorCustomEventsStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppMonitorCustomEventsStatusPtrOutput struct{ *pulumi.OutputState }

func (AppMonitorCustomEventsStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppMonitorCustomEventsStatus)(nil)).Elem()
}

func (o AppMonitorCustomEventsStatusPtrOutput) ToAppMonitorCustomEventsStatusPtrOutput() AppMonitorCustomEventsStatusPtrOutput {
	return o
}

func (o AppMonitorCustomEventsStatusPtrOutput) ToAppMonitorCustomEventsStatusPtrOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusPtrOutput {
	return o
}

func (o AppMonitorCustomEventsStatusPtrOutput) Elem() AppMonitorCustomEventsStatusOutput {
	return o.ApplyT(func(v *AppMonitorCustomEventsStatus) AppMonitorCustomEventsStatus {
		if v != nil {
			return *v
		}
		var ret AppMonitorCustomEventsStatus
		return ret
	}).(AppMonitorCustomEventsStatusOutput)
}

func (o AppMonitorCustomEventsStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorCustomEventsStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppMonitorCustomEventsStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppMonitorCustomEventsStatusInput is an input type that accepts values of the AppMonitorCustomEventsStatus enum
// A concrete instance of `AppMonitorCustomEventsStatusInput` can be one of the following:
//
//	AppMonitorCustomEventsStatusEnabled
//	AppMonitorCustomEventsStatusDisabled
type AppMonitorCustomEventsStatusInput interface {
	pulumi.Input

	ToAppMonitorCustomEventsStatusOutput() AppMonitorCustomEventsStatusOutput
	ToAppMonitorCustomEventsStatusOutputWithContext(context.Context) AppMonitorCustomEventsStatusOutput
}

var appMonitorCustomEventsStatusPtrType = reflect.TypeOf((**AppMonitorCustomEventsStatus)(nil)).Elem()

type AppMonitorCustomEventsStatusPtrInput interface {
	pulumi.Input

	ToAppMonitorCustomEventsStatusPtrOutput() AppMonitorCustomEventsStatusPtrOutput
	ToAppMonitorCustomEventsStatusPtrOutputWithContext(context.Context) AppMonitorCustomEventsStatusPtrOutput
}

type appMonitorCustomEventsStatusPtr string

func AppMonitorCustomEventsStatusPtr(v string) AppMonitorCustomEventsStatusPtrInput {
	return (*appMonitorCustomEventsStatusPtr)(&v)
}

func (*appMonitorCustomEventsStatusPtr) ElementType() reflect.Type {
	return appMonitorCustomEventsStatusPtrType
}

func (in *appMonitorCustomEventsStatusPtr) ToAppMonitorCustomEventsStatusPtrOutput() AppMonitorCustomEventsStatusPtrOutput {
	return pulumi.ToOutput(in).(AppMonitorCustomEventsStatusPtrOutput)
}

func (in *appMonitorCustomEventsStatusPtr) ToAppMonitorCustomEventsStatusPtrOutputWithContext(ctx context.Context) AppMonitorCustomEventsStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppMonitorCustomEventsStatusPtrOutput)
}

// Defines the destination to send the metrics to. Valid values are CloudWatch and Evidently. If you specify Evidently, you must also specify the ARN of the Evidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
type AppMonitorMetricDestinationDestination string

const (
	AppMonitorMetricDestinationDestinationCloudWatch = AppMonitorMetricDestinationDestination("CloudWatch")
	AppMonitorMetricDestinationDestinationEvidently  = AppMonitorMetricDestinationDestination("Evidently")
)

func (AppMonitorMetricDestinationDestination) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorMetricDestinationDestination)(nil)).Elem()
}

func (e AppMonitorMetricDestinationDestination) ToAppMonitorMetricDestinationDestinationOutput() AppMonitorMetricDestinationDestinationOutput {
	return pulumi.ToOutput(e).(AppMonitorMetricDestinationDestinationOutput)
}

func (e AppMonitorMetricDestinationDestination) ToAppMonitorMetricDestinationDestinationOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppMonitorMetricDestinationDestinationOutput)
}

func (e AppMonitorMetricDestinationDestination) ToAppMonitorMetricDestinationDestinationPtrOutput() AppMonitorMetricDestinationDestinationPtrOutput {
	return e.ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(context.Background())
}

func (e AppMonitorMetricDestinationDestination) ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationPtrOutput {
	return AppMonitorMetricDestinationDestination(e).ToAppMonitorMetricDestinationDestinationOutputWithContext(ctx).ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(ctx)
}

func (e AppMonitorMetricDestinationDestination) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorMetricDestinationDestination) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorMetricDestinationDestination) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppMonitorMetricDestinationDestination) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppMonitorMetricDestinationDestinationOutput struct{ *pulumi.OutputState }

func (AppMonitorMetricDestinationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorMetricDestinationDestination)(nil)).Elem()
}

func (o AppMonitorMetricDestinationDestinationOutput) ToAppMonitorMetricDestinationDestinationOutput() AppMonitorMetricDestinationDestinationOutput {
	return o
}

func (o AppMonitorMetricDestinationDestinationOutput) ToAppMonitorMetricDestinationDestinationOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationOutput {
	return o
}

func (o AppMonitorMetricDestinationDestinationOutput) ToAppMonitorMetricDestinationDestinationPtrOutput() AppMonitorMetricDestinationDestinationPtrOutput {
	return o.ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(context.Background())
}

func (o AppMonitorMetricDestinationDestinationOutput) ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppMonitorMetricDestinationDestination) *AppMonitorMetricDestinationDestination {
		return &v
	}).(AppMonitorMetricDestinationDestinationPtrOutput)
}

func (o AppMonitorMetricDestinationDestinationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppMonitorMetricDestinationDestinationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorMetricDestinationDestination) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppMonitorMetricDestinationDestinationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorMetricDestinationDestinationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorMetricDestinationDestination) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppMonitorMetricDestinationDestinationPtrOutput struct{ *pulumi.OutputState }

func (AppMonitorMetricDestinationDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppMonitorMetricDestinationDestination)(nil)).Elem()
}

func (o AppMonitorMetricDestinationDestinationPtrOutput) ToAppMonitorMetricDestinationDestinationPtrOutput() AppMonitorMetricDestinationDestinationPtrOutput {
	return o
}

func (o AppMonitorMetricDestinationDestinationPtrOutput) ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationPtrOutput {
	return o
}

func (o AppMonitorMetricDestinationDestinationPtrOutput) Elem() AppMonitorMetricDestinationDestinationOutput {
	return o.ApplyT(func(v *AppMonitorMetricDestinationDestination) AppMonitorMetricDestinationDestination {
		if v != nil {
			return *v
		}
		var ret AppMonitorMetricDestinationDestination
		return ret
	}).(AppMonitorMetricDestinationDestinationOutput)
}

func (o AppMonitorMetricDestinationDestinationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorMetricDestinationDestinationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppMonitorMetricDestinationDestination) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppMonitorMetricDestinationDestinationInput is an input type that accepts values of the AppMonitorMetricDestinationDestination enum
// A concrete instance of `AppMonitorMetricDestinationDestinationInput` can be one of the following:
//
//	AppMonitorMetricDestinationDestinationCloudWatch
//	AppMonitorMetricDestinationDestinationEvidently
type AppMonitorMetricDestinationDestinationInput interface {
	pulumi.Input

	ToAppMonitorMetricDestinationDestinationOutput() AppMonitorMetricDestinationDestinationOutput
	ToAppMonitorMetricDestinationDestinationOutputWithContext(context.Context) AppMonitorMetricDestinationDestinationOutput
}

var appMonitorMetricDestinationDestinationPtrType = reflect.TypeOf((**AppMonitorMetricDestinationDestination)(nil)).Elem()

type AppMonitorMetricDestinationDestinationPtrInput interface {
	pulumi.Input

	ToAppMonitorMetricDestinationDestinationPtrOutput() AppMonitorMetricDestinationDestinationPtrOutput
	ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(context.Context) AppMonitorMetricDestinationDestinationPtrOutput
}

type appMonitorMetricDestinationDestinationPtr string

func AppMonitorMetricDestinationDestinationPtr(v string) AppMonitorMetricDestinationDestinationPtrInput {
	return (*appMonitorMetricDestinationDestinationPtr)(&v)
}

func (*appMonitorMetricDestinationDestinationPtr) ElementType() reflect.Type {
	return appMonitorMetricDestinationDestinationPtrType
}

func (in *appMonitorMetricDestinationDestinationPtr) ToAppMonitorMetricDestinationDestinationPtrOutput() AppMonitorMetricDestinationDestinationPtrOutput {
	return pulumi.ToOutput(in).(AppMonitorMetricDestinationDestinationPtrOutput)
}

func (in *appMonitorMetricDestinationDestinationPtr) ToAppMonitorMetricDestinationDestinationPtrOutputWithContext(ctx context.Context) AppMonitorMetricDestinationDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppMonitorMetricDestinationDestinationPtrOutput)
}

type AppMonitorTelemetry string

const (
	AppMonitorTelemetryErrors      = AppMonitorTelemetry("errors")
	AppMonitorTelemetryPerformance = AppMonitorTelemetry("performance")
	AppMonitorTelemetryHttp        = AppMonitorTelemetry("http")
)

func (AppMonitorTelemetry) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorTelemetry)(nil)).Elem()
}

func (e AppMonitorTelemetry) ToAppMonitorTelemetryOutput() AppMonitorTelemetryOutput {
	return pulumi.ToOutput(e).(AppMonitorTelemetryOutput)
}

func (e AppMonitorTelemetry) ToAppMonitorTelemetryOutputWithContext(ctx context.Context) AppMonitorTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppMonitorTelemetryOutput)
}

func (e AppMonitorTelemetry) ToAppMonitorTelemetryPtrOutput() AppMonitorTelemetryPtrOutput {
	return e.ToAppMonitorTelemetryPtrOutputWithContext(context.Background())
}

func (e AppMonitorTelemetry) ToAppMonitorTelemetryPtrOutputWithContext(ctx context.Context) AppMonitorTelemetryPtrOutput {
	return AppMonitorTelemetry(e).ToAppMonitorTelemetryOutputWithContext(ctx).ToAppMonitorTelemetryPtrOutputWithContext(ctx)
}

func (e AppMonitorTelemetry) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorTelemetry) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppMonitorTelemetry) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppMonitorTelemetry) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppMonitorTelemetryOutput struct{ *pulumi.OutputState }

func (AppMonitorTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMonitorTelemetry)(nil)).Elem()
}

func (o AppMonitorTelemetryOutput) ToAppMonitorTelemetryOutput() AppMonitorTelemetryOutput {
	return o
}

func (o AppMonitorTelemetryOutput) ToAppMonitorTelemetryOutputWithContext(ctx context.Context) AppMonitorTelemetryOutput {
	return o
}

func (o AppMonitorTelemetryOutput) ToAppMonitorTelemetryPtrOutput() AppMonitorTelemetryPtrOutput {
	return o.ToAppMonitorTelemetryPtrOutputWithContext(context.Background())
}

func (o AppMonitorTelemetryOutput) ToAppMonitorTelemetryPtrOutputWithContext(ctx context.Context) AppMonitorTelemetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppMonitorTelemetry) *AppMonitorTelemetry {
		return &v
	}).(AppMonitorTelemetryPtrOutput)
}

func (o AppMonitorTelemetryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppMonitorTelemetryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorTelemetry) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppMonitorTelemetryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorTelemetryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppMonitorTelemetry) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppMonitorTelemetryPtrOutput struct{ *pulumi.OutputState }

func (AppMonitorTelemetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppMonitorTelemetry)(nil)).Elem()
}

func (o AppMonitorTelemetryPtrOutput) ToAppMonitorTelemetryPtrOutput() AppMonitorTelemetryPtrOutput {
	return o
}

func (o AppMonitorTelemetryPtrOutput) ToAppMonitorTelemetryPtrOutputWithContext(ctx context.Context) AppMonitorTelemetryPtrOutput {
	return o
}

func (o AppMonitorTelemetryPtrOutput) Elem() AppMonitorTelemetryOutput {
	return o.ApplyT(func(v *AppMonitorTelemetry) AppMonitorTelemetry {
		if v != nil {
			return *v
		}
		var ret AppMonitorTelemetry
		return ret
	}).(AppMonitorTelemetryOutput)
}

func (o AppMonitorTelemetryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppMonitorTelemetryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppMonitorTelemetry) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppMonitorTelemetryInput is an input type that accepts values of the AppMonitorTelemetry enum
// A concrete instance of `AppMonitorTelemetryInput` can be one of the following:
//
//	AppMonitorTelemetryErrors
//	AppMonitorTelemetryPerformance
//	AppMonitorTelemetryHttp
type AppMonitorTelemetryInput interface {
	pulumi.Input

	ToAppMonitorTelemetryOutput() AppMonitorTelemetryOutput
	ToAppMonitorTelemetryOutputWithContext(context.Context) AppMonitorTelemetryOutput
}

var appMonitorTelemetryPtrType = reflect.TypeOf((**AppMonitorTelemetry)(nil)).Elem()

type AppMonitorTelemetryPtrInput interface {
	pulumi.Input

	ToAppMonitorTelemetryPtrOutput() AppMonitorTelemetryPtrOutput
	ToAppMonitorTelemetryPtrOutputWithContext(context.Context) AppMonitorTelemetryPtrOutput
}

type appMonitorTelemetryPtr string

func AppMonitorTelemetryPtr(v string) AppMonitorTelemetryPtrInput {
	return (*appMonitorTelemetryPtr)(&v)
}

func (*appMonitorTelemetryPtr) ElementType() reflect.Type {
	return appMonitorTelemetryPtrType
}

func (in *appMonitorTelemetryPtr) ToAppMonitorTelemetryPtrOutput() AppMonitorTelemetryPtrOutput {
	return pulumi.ToOutput(in).(AppMonitorTelemetryPtrOutput)
}

func (in *appMonitorTelemetryPtr) ToAppMonitorTelemetryPtrOutputWithContext(ctx context.Context) AppMonitorTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppMonitorTelemetryPtrOutput)
}

// AppMonitorTelemetryArrayInput is an input type that accepts AppMonitorTelemetryArray and AppMonitorTelemetryArrayOutput values.
// You can construct a concrete instance of `AppMonitorTelemetryArrayInput` via:
//
//	AppMonitorTelemetryArray{ AppMonitorTelemetryArgs{...} }
type AppMonitorTelemetryArrayInput interface {
	pulumi.Input

	ToAppMonitorTelemetryArrayOutput() AppMonitorTelemetryArrayOutput
	ToAppMonitorTelemetryArrayOutputWithContext(context.Context) AppMonitorTelemetryArrayOutput
}

type AppMonitorTelemetryArray []AppMonitorTelemetry

func (AppMonitorTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppMonitorTelemetry)(nil)).Elem()
}

func (i AppMonitorTelemetryArray) ToAppMonitorTelemetryArrayOutput() AppMonitorTelemetryArrayOutput {
	return i.ToAppMonitorTelemetryArrayOutputWithContext(context.Background())
}

func (i AppMonitorTelemetryArray) ToAppMonitorTelemetryArrayOutputWithContext(ctx context.Context) AppMonitorTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppMonitorTelemetryArrayOutput)
}

type AppMonitorTelemetryArrayOutput struct{ *pulumi.OutputState }

func (AppMonitorTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppMonitorTelemetry)(nil)).Elem()
}

func (o AppMonitorTelemetryArrayOutput) ToAppMonitorTelemetryArrayOutput() AppMonitorTelemetryArrayOutput {
	return o
}

func (o AppMonitorTelemetryArrayOutput) ToAppMonitorTelemetryArrayOutputWithContext(ctx context.Context) AppMonitorTelemetryArrayOutput {
	return o
}

func (o AppMonitorTelemetryArrayOutput) Index(i pulumi.IntInput) AppMonitorTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppMonitorTelemetry {
		return vs[0].([]AppMonitorTelemetry)[vs[1].(int)]
	}).(AppMonitorTelemetryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorCustomEventsStatusInput)(nil)).Elem(), AppMonitorCustomEventsStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorCustomEventsStatusPtrInput)(nil)).Elem(), AppMonitorCustomEventsStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorMetricDestinationDestinationInput)(nil)).Elem(), AppMonitorMetricDestinationDestination("CloudWatch"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorMetricDestinationDestinationPtrInput)(nil)).Elem(), AppMonitorMetricDestinationDestination("CloudWatch"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorTelemetryInput)(nil)).Elem(), AppMonitorTelemetry("errors"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorTelemetryPtrInput)(nil)).Elem(), AppMonitorTelemetry("errors"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppMonitorTelemetryArrayInput)(nil)).Elem(), AppMonitorTelemetryArray{})
	pulumi.RegisterOutputType(AppMonitorCustomEventsStatusOutput{})
	pulumi.RegisterOutputType(AppMonitorCustomEventsStatusPtrOutput{})
	pulumi.RegisterOutputType(AppMonitorMetricDestinationDestinationOutput{})
	pulumi.RegisterOutputType(AppMonitorMetricDestinationDestinationPtrOutput{})
	pulumi.RegisterOutputType(AppMonitorTelemetryOutput{})
	pulumi.RegisterOutputType(AppMonitorTelemetryPtrOutput{})
	pulumi.RegisterOutputType(AppMonitorTelemetryArrayOutput{})
}
