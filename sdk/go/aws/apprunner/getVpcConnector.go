// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::AppRunner::VpcConnector resource specifies an App Runner VpcConnector.
func LookupVpcConnector(ctx *pulumi.Context, args *LookupVpcConnectorArgs, opts ...pulumi.InvokeOption) (*LookupVpcConnectorResult, error) {
	var rv LookupVpcConnectorResult
	err := ctx.Invoke("aws-native:apprunner:getVpcConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcConnectorArgs struct {
	// The Amazon Resource Name (ARN) of this VPC connector.
	VpcConnectorArn string `pulumi:"vpcConnectorArn"`
}

type LookupVpcConnectorResult struct {
	// The Amazon Resource Name (ARN) of this VPC connector.
	VpcConnectorArn *string `pulumi:"vpcConnectorArn"`
	// The revision of this VPC connector. It's unique among all the active connectors ("Status": "ACTIVE") that share the same Name.
	VpcConnectorRevision *int `pulumi:"vpcConnectorRevision"`
}

func LookupVpcConnectorOutput(ctx *pulumi.Context, args LookupVpcConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupVpcConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcConnectorResult, error) {
			args := v.(LookupVpcConnectorArgs)
			r, err := LookupVpcConnector(ctx, &args, opts...)
			var s LookupVpcConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcConnectorResultOutput)
}

type LookupVpcConnectorOutputArgs struct {
	// The Amazon Resource Name (ARN) of this VPC connector.
	VpcConnectorArn pulumi.StringInput `pulumi:"vpcConnectorArn"`
}

func (LookupVpcConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcConnectorArgs)(nil)).Elem()
}

type LookupVpcConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupVpcConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcConnectorResult)(nil)).Elem()
}

func (o LookupVpcConnectorResultOutput) ToLookupVpcConnectorResultOutput() LookupVpcConnectorResultOutput {
	return o
}

func (o LookupVpcConnectorResultOutput) ToLookupVpcConnectorResultOutputWithContext(ctx context.Context) LookupVpcConnectorResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of this VPC connector.
func (o LookupVpcConnectorResultOutput) VpcConnectorArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcConnectorResult) *string { return v.VpcConnectorArn }).(pulumi.StringPtrOutput)
}

// The revision of this VPC connector. It's unique among all the active connectors ("Status": "ACTIVE") that share the same Name.
func (o LookupVpcConnectorResultOutput) VpcConnectorRevision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVpcConnectorResult) *int { return v.VpcConnectorRevision }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcConnectorResultOutput{})
}
