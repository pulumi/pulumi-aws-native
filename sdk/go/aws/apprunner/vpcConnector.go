// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::AppRunner::VpcConnector resource specifies an App Runner VpcConnector.
type VpcConnector struct {
	pulumi.CustomResourceState

	// A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
	Subnets pulumi.StringArrayOutput `pulumi:"subnets"`
	// A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
	Tags VpcConnectorTagArrayOutput `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of this VPC connector.
	VpcConnectorArn pulumi.StringOutput `pulumi:"vpcConnectorArn"`
	// A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
	VpcConnectorName pulumi.StringPtrOutput `pulumi:"vpcConnectorName"`
	// The revision of this VPC connector. It's unique among all the active connectors ("Status": "ACTIVE") that share the same Name.
	VpcConnectorRevision pulumi.IntOutput `pulumi:"vpcConnectorRevision"`
}

// NewVpcConnector registers a new resource with the given unique name, arguments, and options.
func NewVpcConnector(ctx *pulumi.Context,
	name string, args *VpcConnectorArgs, opts ...pulumi.ResourceOption) (*VpcConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Subnets == nil {
		return nil, errors.New("invalid value for required argument 'Subnets'")
	}
	var resource VpcConnector
	err := ctx.RegisterResource("aws-native:apprunner:VpcConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcConnector gets an existing VpcConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcConnectorState, opts ...pulumi.ResourceOption) (*VpcConnector, error) {
	var resource VpcConnector
	err := ctx.ReadResource("aws-native:apprunner:VpcConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcConnector resources.
type vpcConnectorState struct {
}

type VpcConnectorState struct {
}

func (VpcConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectorState)(nil)).Elem()
}

type vpcConnectorArgs struct {
	// A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
	SecurityGroups []string `pulumi:"securityGroups"`
	// A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
	Subnets []string `pulumi:"subnets"`
	// A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
	Tags []VpcConnectorTag `pulumi:"tags"`
	// A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
	VpcConnectorName *string `pulumi:"vpcConnectorName"`
}

// The set of arguments for constructing a VpcConnector resource.
type VpcConnectorArgs struct {
	// A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
	SecurityGroups pulumi.StringArrayInput
	// A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
	Subnets pulumi.StringArrayInput
	// A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
	Tags VpcConnectorTagArrayInput
	// A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
	VpcConnectorName pulumi.StringPtrInput
}

func (VpcConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectorArgs)(nil)).Elem()
}

type VpcConnectorInput interface {
	pulumi.Input

	ToVpcConnectorOutput() VpcConnectorOutput
	ToVpcConnectorOutputWithContext(ctx context.Context) VpcConnectorOutput
}

func (*VpcConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnector)(nil)).Elem()
}

func (i *VpcConnector) ToVpcConnectorOutput() VpcConnectorOutput {
	return i.ToVpcConnectorOutputWithContext(context.Background())
}

func (i *VpcConnector) ToVpcConnectorOutputWithContext(ctx context.Context) VpcConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConnectorOutput)
}

type VpcConnectorOutput struct{ *pulumi.OutputState }

func (VpcConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnector)(nil)).Elem()
}

func (o VpcConnectorOutput) ToVpcConnectorOutput() VpcConnectorOutput {
	return o
}

func (o VpcConnectorOutput) ToVpcConnectorOutputWithContext(ctx context.Context) VpcConnectorOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcConnectorInput)(nil)).Elem(), &VpcConnector{})
	pulumi.RegisterOutputType(VpcConnectorOutput{})
}
