// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::AppRunner::VpcIngressConnection resource is an App Runner resource that specifies an App Runner VpcIngressConnection.
func LookupVpcIngressConnection(ctx *pulumi.Context, args *LookupVpcIngressConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVpcIngressConnectionResult, error) {
	var rv LookupVpcIngressConnectionResult
	err := ctx.Invoke("aws-native:apprunner:getVpcIngressConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcIngressConnectionArgs struct {
	// The Amazon Resource Name (ARN) of the VpcIngressConnection.
	VpcIngressConnectionArn string `pulumi:"vpcIngressConnectionArn"`
}

type LookupVpcIngressConnectionResult struct {
	// The Domain name associated with the VPC Ingress Connection.
	DomainName              *string                                      `pulumi:"domainName"`
	IngressVpcConfiguration *VpcIngressConnectionIngressVpcConfiguration `pulumi:"ingressVpcConfiguration"`
	// The current status of the VpcIngressConnection.
	Status *VpcIngressConnectionStatus `pulumi:"status"`
	// The Amazon Resource Name (ARN) of the VpcIngressConnection.
	VpcIngressConnectionArn *string `pulumi:"vpcIngressConnectionArn"`
}

func LookupVpcIngressConnectionOutput(ctx *pulumi.Context, args LookupVpcIngressConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVpcIngressConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcIngressConnectionResult, error) {
			args := v.(LookupVpcIngressConnectionArgs)
			r, err := LookupVpcIngressConnection(ctx, &args, opts...)
			var s LookupVpcIngressConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcIngressConnectionResultOutput)
}

type LookupVpcIngressConnectionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the VpcIngressConnection.
	VpcIngressConnectionArn pulumi.StringInput `pulumi:"vpcIngressConnectionArn"`
}

func (LookupVpcIngressConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcIngressConnectionArgs)(nil)).Elem()
}

type LookupVpcIngressConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVpcIngressConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcIngressConnectionResult)(nil)).Elem()
}

func (o LookupVpcIngressConnectionResultOutput) ToLookupVpcIngressConnectionResultOutput() LookupVpcIngressConnectionResultOutput {
	return o
}

func (o LookupVpcIngressConnectionResultOutput) ToLookupVpcIngressConnectionResultOutputWithContext(ctx context.Context) LookupVpcIngressConnectionResultOutput {
	return o
}

// The Domain name associated with the VPC Ingress Connection.
func (o LookupVpcIngressConnectionResultOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcIngressConnectionResult) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o LookupVpcIngressConnectionResultOutput) IngressVpcConfiguration() VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return o.ApplyT(func(v LookupVpcIngressConnectionResult) *VpcIngressConnectionIngressVpcConfiguration {
		return v.IngressVpcConfiguration
	}).(VpcIngressConnectionIngressVpcConfigurationPtrOutput)
}

// The current status of the VpcIngressConnection.
func (o LookupVpcIngressConnectionResultOutput) Status() VpcIngressConnectionStatusPtrOutput {
	return o.ApplyT(func(v LookupVpcIngressConnectionResult) *VpcIngressConnectionStatus { return v.Status }).(VpcIngressConnectionStatusPtrOutput)
}

// The Amazon Resource Name (ARN) of the VpcIngressConnection.
func (o LookupVpcIngressConnectionResultOutput) VpcIngressConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcIngressConnectionResult) *string { return v.VpcIngressConnectionArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcIngressConnectionResultOutput{})
}
