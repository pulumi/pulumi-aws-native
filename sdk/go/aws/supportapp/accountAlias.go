// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package supportapp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// An AWS Support App resource that creates, updates, reads, and deletes a customer's account alias.
type AccountAlias struct {
	pulumi.CustomResourceState

	// An account alias associated with a customer's account.
	AccountAlias pulumi.StringOutput `pulumi:"accountAlias"`
	// Unique identifier representing an alias tied to an account
	AccountAliasResourceId pulumi.StringOutput `pulumi:"accountAliasResourceId"`
}

// NewAccountAlias registers a new resource with the given unique name, arguments, and options.
func NewAccountAlias(ctx *pulumi.Context,
	name string, args *AccountAliasArgs, opts ...pulumi.ResourceOption) (*AccountAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountAlias == nil {
		return nil, errors.New("invalid value for required argument 'AccountAlias'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountAlias
	err := ctx.RegisterResource("aws-native:supportapp:AccountAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAlias gets an existing AccountAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountAliasState, opts ...pulumi.ResourceOption) (*AccountAlias, error) {
	var resource AccountAlias
	err := ctx.ReadResource("aws-native:supportapp:AccountAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAlias resources.
type accountAliasState struct {
}

type AccountAliasState struct {
}

func (AccountAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAliasState)(nil)).Elem()
}

type accountAliasArgs struct {
	// An account alias associated with a customer's account.
	AccountAlias string `pulumi:"accountAlias"`
}

// The set of arguments for constructing a AccountAlias resource.
type AccountAliasArgs struct {
	// An account alias associated with a customer's account.
	AccountAlias pulumi.StringInput
}

func (AccountAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAliasArgs)(nil)).Elem()
}

type AccountAliasInput interface {
	pulumi.Input

	ToAccountAliasOutput() AccountAliasOutput
	ToAccountAliasOutputWithContext(ctx context.Context) AccountAliasOutput
}

func (*AccountAlias) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAlias)(nil)).Elem()
}

func (i *AccountAlias) ToAccountAliasOutput() AccountAliasOutput {
	return i.ToAccountAliasOutputWithContext(context.Background())
}

func (i *AccountAlias) ToAccountAliasOutputWithContext(ctx context.Context) AccountAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAliasOutput)
}

func (i *AccountAlias) ToOutput(ctx context.Context) pulumix.Output[*AccountAlias] {
	return pulumix.Output[*AccountAlias]{
		OutputState: i.ToAccountAliasOutputWithContext(ctx).OutputState,
	}
}

type AccountAliasOutput struct{ *pulumi.OutputState }

func (AccountAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAlias)(nil)).Elem()
}

func (o AccountAliasOutput) ToAccountAliasOutput() AccountAliasOutput {
	return o
}

func (o AccountAliasOutput) ToAccountAliasOutputWithContext(ctx context.Context) AccountAliasOutput {
	return o
}

func (o AccountAliasOutput) ToOutput(ctx context.Context) pulumix.Output[*AccountAlias] {
	return pulumix.Output[*AccountAlias]{
		OutputState: o.OutputState,
	}
}

// An account alias associated with a customer's account.
func (o AccountAliasOutput) AccountAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAlias) pulumi.StringOutput { return v.AccountAlias }).(pulumi.StringOutput)
}

// Unique identifier representing an alias tied to an account
func (o AccountAliasOutput) AccountAliasResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAlias) pulumi.StringOutput { return v.AccountAliasResourceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAliasInput)(nil)).Elem(), &AccountAlias{})
	pulumi.RegisterOutputType(AccountAliasOutput{})
}
