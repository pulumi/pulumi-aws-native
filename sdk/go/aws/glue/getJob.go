// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Glue::Job
func LookupJob(ctx *pulumi.Context, args *LookupJobArgs, opts ...pulumi.InvokeOption) (*LookupJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupJobResult
	err := ctx.Invoke("aws-native:glue:getJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJobArgs struct {
	// The name you assign to the job definition
	Name string `pulumi:"name"`
}

type LookupJobResult struct {
	// The number of capacity units that are allocated to this job.
	AllocatedCapacity *float64 `pulumi:"allocatedCapacity"`
	// The code that executes a job.
	Command *JobCommand `pulumi:"command"`
	// Specifies the connections used by a job
	Connections *JobConnectionsList `pulumi:"connections"`
	// The default arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	DefaultArguments interface{} `pulumi:"defaultArguments"`
	// A description of the job.
	Description *string `pulumi:"description"`
	// Indicates whether the job is run with a standard or flexible execution class.
	ExecutionClass *string `pulumi:"executionClass"`
	// The maximum number of concurrent runs that are allowed for this job.
	ExecutionProperty *JobExecutionProperty `pulumi:"executionProperty"`
	// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
	GlueVersion *string `pulumi:"glueVersion"`
	// Property description not available.
	JobMode *string `pulumi:"jobMode"`
	// Property description not available.
	JobRunQueuingEnabled *bool `pulumi:"jobRunQueuingEnabled"`
	// This field is reserved for future use.
	LogUri *string `pulumi:"logUri"`
	// Property description not available.
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this job after a JobRun fails
	MaxRetries *float64 `pulumi:"maxRetries"`
	// Non-overridable arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	NonOverridableArguments interface{} `pulumi:"nonOverridableArguments"`
	// Specifies configuration properties of a notification.
	NotificationProperty *JobNotificationProperty `pulumi:"notificationProperty"`
	// The number of workers of a defined workerType that are allocated when a job runs.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
	Role *string `pulumi:"role"`
	// The name of the SecurityConfiguration structure to be used with this job.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// The tags to use with this job.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	Tags interface{} `pulumi:"tags"`
	// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
	Timeout *int `pulumi:"timeout"`
	// TThe type of predefined worker that is allocated when a job runs.
	WorkerType *JobWorkerType `pulumi:"workerType"`
}

func LookupJobOutput(ctx *pulumi.Context, args LookupJobOutputArgs, opts ...pulumi.InvokeOption) LookupJobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupJobResultOutput, error) {
			args := v.(LookupJobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:glue:getJob", args, LookupJobResultOutput{}, options).(LookupJobResultOutput), nil
		}).(LookupJobResultOutput)
}

type LookupJobOutputArgs struct {
	// The name you assign to the job definition
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobArgs)(nil)).Elem()
}

type LookupJobResultOutput struct{ *pulumi.OutputState }

func (LookupJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobResult)(nil)).Elem()
}

func (o LookupJobResultOutput) ToLookupJobResultOutput() LookupJobResultOutput {
	return o
}

func (o LookupJobResultOutput) ToLookupJobResultOutputWithContext(ctx context.Context) LookupJobResultOutput {
	return o
}

// The number of capacity units that are allocated to this job.
func (o LookupJobResultOutput) AllocatedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupJobResult) *float64 { return v.AllocatedCapacity }).(pulumi.Float64PtrOutput)
}

// The code that executes a job.
func (o LookupJobResultOutput) Command() JobCommandPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobCommand { return v.Command }).(JobCommandPtrOutput)
}

// Specifies the connections used by a job
func (o LookupJobResultOutput) Connections() JobConnectionsListPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobConnectionsList { return v.Connections }).(JobConnectionsListPtrOutput)
}

// The default arguments for this job, specified as name-value pairs.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o LookupJobResultOutput) DefaultArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupJobResult) interface{} { return v.DefaultArguments }).(pulumi.AnyOutput)
}

// A description of the job.
func (o LookupJobResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the job is run with a standard or flexible execution class.
func (o LookupJobResultOutput) ExecutionClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.ExecutionClass }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent runs that are allowed for this job.
func (o LookupJobResultOutput) ExecutionProperty() JobExecutionPropertyPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobExecutionProperty { return v.ExecutionProperty }).(JobExecutionPropertyPtrOutput)
}

// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
func (o LookupJobResultOutput) GlueVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.GlueVersion }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o LookupJobResultOutput) JobMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.JobMode }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o LookupJobResultOutput) JobRunQueuingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *bool { return v.JobRunQueuingEnabled }).(pulumi.BoolPtrOutput)
}

// This field is reserved for future use.
func (o LookupJobResultOutput) LogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.LogUri }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o LookupJobResultOutput) MaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.MaintenanceWindow }).(pulumi.StringPtrOutput)
}

// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
func (o LookupJobResultOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupJobResult) *float64 { return v.MaxCapacity }).(pulumi.Float64PtrOutput)
}

// The maximum number of times to retry this job after a JobRun fails
func (o LookupJobResultOutput) MaxRetries() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupJobResult) *float64 { return v.MaxRetries }).(pulumi.Float64PtrOutput)
}

// Non-overridable arguments for this job, specified as name-value pairs.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o LookupJobResultOutput) NonOverridableArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupJobResult) interface{} { return v.NonOverridableArguments }).(pulumi.AnyOutput)
}

// Specifies configuration properties of a notification.
func (o LookupJobResultOutput) NotificationProperty() JobNotificationPropertyPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobNotificationProperty { return v.NotificationProperty }).(JobNotificationPropertyPtrOutput)
}

// The number of workers of a defined workerType that are allocated when a job runs.
func (o LookupJobResultOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
func (o LookupJobResultOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The name of the SecurityConfiguration structure to be used with this job.
func (o LookupJobResultOutput) SecurityConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.SecurityConfiguration }).(pulumi.StringPtrOutput)
}

// The tags to use with this job.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o LookupJobResultOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupJobResult) interface{} { return v.Tags }).(pulumi.AnyOutput)
}

// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
func (o LookupJobResultOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// TThe type of predefined worker that is allocated when a job runs.
func (o LookupJobResultOutput) WorkerType() JobWorkerTypePtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobWorkerType { return v.WorkerType }).(JobWorkerTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobResultOutput{})
}
