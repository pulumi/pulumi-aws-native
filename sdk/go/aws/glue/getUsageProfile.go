// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This creates a Resource of UsageProfile type.
func LookupUsageProfile(ctx *pulumi.Context, args *LookupUsageProfileArgs, opts ...pulumi.InvokeOption) (*LookupUsageProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUsageProfileResult
	err := ctx.Invoke("aws-native:glue:getUsageProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUsageProfileArgs struct {
	// The name of the UsageProfile.
	Name string `pulumi:"name"`
}

type LookupUsageProfileResult struct {
	// UsageProfile configuration for supported service ex: (Jobs, Sessions).
	Configuration *UsageProfileProfileConfiguration `pulumi:"configuration"`
	// Creation time.
	CreatedOn *string `pulumi:"createdOn"`
	// The description of the UsageProfile.
	Description *string `pulumi:"description"`
	// The tags to be applied to this UsageProfiles.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupUsageProfileOutput(ctx *pulumi.Context, args LookupUsageProfileOutputArgs, opts ...pulumi.InvokeOption) LookupUsageProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUsageProfileResultOutput, error) {
			args := v.(LookupUsageProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:glue:getUsageProfile", args, LookupUsageProfileResultOutput{}, options).(LookupUsageProfileResultOutput), nil
		}).(LookupUsageProfileResultOutput)
}

type LookupUsageProfileOutputArgs struct {
	// The name of the UsageProfile.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupUsageProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsageProfileArgs)(nil)).Elem()
}

type LookupUsageProfileResultOutput struct{ *pulumi.OutputState }

func (LookupUsageProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsageProfileResult)(nil)).Elem()
}

func (o LookupUsageProfileResultOutput) ToLookupUsageProfileResultOutput() LookupUsageProfileResultOutput {
	return o
}

func (o LookupUsageProfileResultOutput) ToLookupUsageProfileResultOutputWithContext(ctx context.Context) LookupUsageProfileResultOutput {
	return o
}

// UsageProfile configuration for supported service ex: (Jobs, Sessions).
func (o LookupUsageProfileResultOutput) Configuration() UsageProfileProfileConfigurationPtrOutput {
	return o.ApplyT(func(v LookupUsageProfileResult) *UsageProfileProfileConfiguration { return v.Configuration }).(UsageProfileProfileConfigurationPtrOutput)
}

// Creation time.
func (o LookupUsageProfileResultOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUsageProfileResult) *string { return v.CreatedOn }).(pulumi.StringPtrOutput)
}

// The description of the UsageProfile.
func (o LookupUsageProfileResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUsageProfileResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The tags to be applied to this UsageProfiles.
func (o LookupUsageProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupUsageProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUsageProfileResultOutput{})
}
