// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Glue::Job
type Job struct {
	pulumi.CustomResourceState

	// The number of capacity units that are allocated to this job.
	AllocatedCapacity pulumi.Float64PtrOutput `pulumi:"allocatedCapacity"`
	// The code that executes a job.
	Command JobCommandOutput `pulumi:"command"`
	// Specifies the connections used by a job
	Connections JobConnectionsListPtrOutput `pulumi:"connections"`
	// The default arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	DefaultArguments pulumi.AnyOutput `pulumi:"defaultArguments"`
	// A description of the job.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates whether the job is run with a standard or flexible execution class.
	ExecutionClass pulumi.StringPtrOutput `pulumi:"executionClass"`
	// The maximum number of concurrent runs that are allowed for this job.
	ExecutionProperty JobExecutionPropertyPtrOutput `pulumi:"executionProperty"`
	// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
	GlueVersion pulumi.StringPtrOutput `pulumi:"glueVersion"`
	// Property description not available.
	JobMode pulumi.StringPtrOutput `pulumi:"jobMode"`
	// Property description not available.
	JobRunQueuingEnabled pulumi.BoolPtrOutput `pulumi:"jobRunQueuingEnabled"`
	// This field is reserved for future use.
	LogUri pulumi.StringPtrOutput `pulumi:"logUri"`
	// Property description not available.
	MaintenanceWindow pulumi.StringPtrOutput `pulumi:"maintenanceWindow"`
	// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity pulumi.Float64PtrOutput `pulumi:"maxCapacity"`
	// The maximum number of times to retry this job after a JobRun fails
	MaxRetries pulumi.Float64PtrOutput `pulumi:"maxRetries"`
	// The name you assign to the job definition
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Non-overridable arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	NonOverridableArguments pulumi.AnyOutput `pulumi:"nonOverridableArguments"`
	// Specifies configuration properties of a notification.
	NotificationProperty JobNotificationPropertyPtrOutput `pulumi:"notificationProperty"`
	// The number of workers of a defined workerType that are allocated when a job runs.
	NumberOfWorkers pulumi.IntPtrOutput `pulumi:"numberOfWorkers"`
	// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
	Role pulumi.StringOutput `pulumi:"role"`
	// The name of the SecurityConfiguration structure to be used with this job.
	SecurityConfiguration pulumi.StringPtrOutput `pulumi:"securityConfiguration"`
	// The tags to use with this job.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	Tags pulumi.AnyOutput `pulumi:"tags"`
	// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
	// TThe type of predefined worker that is allocated when a job runs.
	WorkerType JobWorkerTypePtrOutput `pulumi:"workerType"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Command == nil {
		return nil, errors.New("invalid value for required argument 'Command'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("aws-native:glue:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("aws-native:glue:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
}

type JobState struct {
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	// The number of capacity units that are allocated to this job.
	AllocatedCapacity *float64 `pulumi:"allocatedCapacity"`
	// The code that executes a job.
	Command JobCommand `pulumi:"command"`
	// Specifies the connections used by a job
	Connections *JobConnectionsList `pulumi:"connections"`
	// The default arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	DefaultArguments interface{} `pulumi:"defaultArguments"`
	// A description of the job.
	Description *string `pulumi:"description"`
	// Indicates whether the job is run with a standard or flexible execution class.
	ExecutionClass *string `pulumi:"executionClass"`
	// The maximum number of concurrent runs that are allowed for this job.
	ExecutionProperty *JobExecutionProperty `pulumi:"executionProperty"`
	// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
	GlueVersion *string `pulumi:"glueVersion"`
	// Property description not available.
	JobMode *string `pulumi:"jobMode"`
	// Property description not available.
	JobRunQueuingEnabled *bool `pulumi:"jobRunQueuingEnabled"`
	// This field is reserved for future use.
	LogUri *string `pulumi:"logUri"`
	// Property description not available.
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this job after a JobRun fails
	MaxRetries *float64 `pulumi:"maxRetries"`
	// The name you assign to the job definition
	Name *string `pulumi:"name"`
	// Non-overridable arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	NonOverridableArguments interface{} `pulumi:"nonOverridableArguments"`
	// Specifies configuration properties of a notification.
	NotificationProperty *JobNotificationProperty `pulumi:"notificationProperty"`
	// The number of workers of a defined workerType that are allocated when a job runs.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
	Role string `pulumi:"role"`
	// The name of the SecurityConfiguration structure to be used with this job.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// The tags to use with this job.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	Tags interface{} `pulumi:"tags"`
	// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
	Timeout *int `pulumi:"timeout"`
	// TThe type of predefined worker that is allocated when a job runs.
	WorkerType *JobWorkerType `pulumi:"workerType"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// The number of capacity units that are allocated to this job.
	AllocatedCapacity pulumi.Float64PtrInput
	// The code that executes a job.
	Command JobCommandInput
	// Specifies the connections used by a job
	Connections JobConnectionsListPtrInput
	// The default arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	DefaultArguments pulumi.Input
	// A description of the job.
	Description pulumi.StringPtrInput
	// Indicates whether the job is run with a standard or flexible execution class.
	ExecutionClass pulumi.StringPtrInput
	// The maximum number of concurrent runs that are allowed for this job.
	ExecutionProperty JobExecutionPropertyPtrInput
	// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
	GlueVersion pulumi.StringPtrInput
	// Property description not available.
	JobMode pulumi.StringPtrInput
	// Property description not available.
	JobRunQueuingEnabled pulumi.BoolPtrInput
	// This field is reserved for future use.
	LogUri pulumi.StringPtrInput
	// Property description not available.
	MaintenanceWindow pulumi.StringPtrInput
	// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity pulumi.Float64PtrInput
	// The maximum number of times to retry this job after a JobRun fails
	MaxRetries pulumi.Float64PtrInput
	// The name you assign to the job definition
	Name pulumi.StringPtrInput
	// Non-overridable arguments for this job, specified as name-value pairs.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	NonOverridableArguments pulumi.Input
	// Specifies configuration properties of a notification.
	NotificationProperty JobNotificationPropertyPtrInput
	// The number of workers of a defined workerType that are allocated when a job runs.
	NumberOfWorkers pulumi.IntPtrInput
	// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
	Role pulumi.StringInput
	// The name of the SecurityConfiguration structure to be used with this job.
	SecurityConfiguration pulumi.StringPtrInput
	// The tags to use with this job.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
	Tags pulumi.Input
	// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
	Timeout pulumi.IntPtrInput
	// TThe type of predefined worker that is allocated when a job runs.
	WorkerType JobWorkerTypePtrInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

// The number of capacity units that are allocated to this job.
func (o JobOutput) AllocatedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Job) pulumi.Float64PtrOutput { return v.AllocatedCapacity }).(pulumi.Float64PtrOutput)
}

// The code that executes a job.
func (o JobOutput) Command() JobCommandOutput {
	return o.ApplyT(func(v *Job) JobCommandOutput { return v.Command }).(JobCommandOutput)
}

// Specifies the connections used by a job
func (o JobOutput) Connections() JobConnectionsListPtrOutput {
	return o.ApplyT(func(v *Job) JobConnectionsListPtrOutput { return v.Connections }).(JobConnectionsListPtrOutput)
}

// The default arguments for this job, specified as name-value pairs.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o JobOutput) DefaultArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v *Job) pulumi.AnyOutput { return v.DefaultArguments }).(pulumi.AnyOutput)
}

// A description of the job.
func (o JobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the job is run with a standard or flexible execution class.
func (o JobOutput) ExecutionClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.ExecutionClass }).(pulumi.StringPtrOutput)
}

// The maximum number of concurrent runs that are allowed for this job.
func (o JobOutput) ExecutionProperty() JobExecutionPropertyPtrOutput {
	return o.ApplyT(func(v *Job) JobExecutionPropertyPtrOutput { return v.ExecutionProperty }).(JobExecutionPropertyPtrOutput)
}

// Glue version determines the versions of Apache Spark and Python that AWS Glue supports.
func (o JobOutput) GlueVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.GlueVersion }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o JobOutput) JobMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.JobMode }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o JobOutput) JobRunQueuingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.JobRunQueuingEnabled }).(pulumi.BoolPtrOutput)
}

// This field is reserved for future use.
func (o JobOutput) LogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.LogUri }).(pulumi.StringPtrOutput)
}

// Property description not available.
func (o JobOutput) MaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.MaintenanceWindow }).(pulumi.StringPtrOutput)
}

// The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
func (o JobOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Job) pulumi.Float64PtrOutput { return v.MaxCapacity }).(pulumi.Float64PtrOutput)
}

// The maximum number of times to retry this job after a JobRun fails
func (o JobOutput) MaxRetries() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Job) pulumi.Float64PtrOutput { return v.MaxRetries }).(pulumi.Float64PtrOutput)
}

// The name you assign to the job definition
func (o JobOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Non-overridable arguments for this job, specified as name-value pairs.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o JobOutput) NonOverridableArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v *Job) pulumi.AnyOutput { return v.NonOverridableArguments }).(pulumi.AnyOutput)
}

// Specifies configuration properties of a notification.
func (o JobOutput) NotificationProperty() JobNotificationPropertyPtrOutput {
	return o.ApplyT(func(v *Job) JobNotificationPropertyPtrOutput { return v.NotificationProperty }).(JobNotificationPropertyPtrOutput)
}

// The number of workers of a defined workerType that are allocated when a job runs.
func (o JobOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// The name or Amazon Resource Name (ARN) of the IAM role associated with this job.
func (o JobOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The name of the SecurityConfiguration structure to be used with this job.
func (o JobOutput) SecurityConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.SecurityConfiguration }).(pulumi.StringPtrOutput)
}

// The tags to use with this job.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Job` for more information about the expected schema for this property.
func (o JobOutput) Tags() pulumi.AnyOutput {
	return o.ApplyT(func(v *Job) pulumi.AnyOutput { return v.Tags }).(pulumi.AnyOutput)
}

// The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.
func (o JobOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

// TThe type of predefined worker that is allocated when a job runs.
func (o JobOutput) WorkerType() JobWorkerTypePtrOutput {
	return o.ApplyT(func(v *Job) JobWorkerTypePtrOutput { return v.WorkerType }).(JobWorkerTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterOutputType(JobOutput{})
}
