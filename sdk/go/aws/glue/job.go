// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Glue::Job
//
// Deprecated: Job is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Job struct {
	pulumi.CustomResourceState

	AllocatedCapacity     pulumi.Float64PtrOutput          `pulumi:"allocatedCapacity"`
	Command               JobCommandOutput                 `pulumi:"command"`
	Connections           JobConnectionsListPtrOutput      `pulumi:"connections"`
	DefaultArguments      pulumi.AnyOutput                 `pulumi:"defaultArguments"`
	Description           pulumi.StringPtrOutput           `pulumi:"description"`
	ExecutionProperty     JobExecutionPropertyPtrOutput    `pulumi:"executionProperty"`
	GlueVersion           pulumi.StringPtrOutput           `pulumi:"glueVersion"`
	LogUri                pulumi.StringPtrOutput           `pulumi:"logUri"`
	MaxCapacity           pulumi.Float64PtrOutput          `pulumi:"maxCapacity"`
	MaxRetries            pulumi.Float64PtrOutput          `pulumi:"maxRetries"`
	Name                  pulumi.StringPtrOutput           `pulumi:"name"`
	NotificationProperty  JobNotificationPropertyPtrOutput `pulumi:"notificationProperty"`
	NumberOfWorkers       pulumi.IntPtrOutput              `pulumi:"numberOfWorkers"`
	Role                  pulumi.StringOutput              `pulumi:"role"`
	SecurityConfiguration pulumi.StringPtrOutput           `pulumi:"securityConfiguration"`
	Tags                  pulumi.AnyOutput                 `pulumi:"tags"`
	Timeout               pulumi.IntPtrOutput              `pulumi:"timeout"`
	WorkerType            pulumi.StringPtrOutput           `pulumi:"workerType"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Command == nil {
		return nil, errors.New("invalid value for required argument 'Command'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource Job
	err := ctx.RegisterResource("aws-native:glue:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("aws-native:glue:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
}

type JobState struct {
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	AllocatedCapacity     *float64                 `pulumi:"allocatedCapacity"`
	Command               JobCommand               `pulumi:"command"`
	Connections           *JobConnectionsList      `pulumi:"connections"`
	DefaultArguments      interface{}              `pulumi:"defaultArguments"`
	Description           *string                  `pulumi:"description"`
	ExecutionProperty     *JobExecutionProperty    `pulumi:"executionProperty"`
	GlueVersion           *string                  `pulumi:"glueVersion"`
	LogUri                *string                  `pulumi:"logUri"`
	MaxCapacity           *float64                 `pulumi:"maxCapacity"`
	MaxRetries            *float64                 `pulumi:"maxRetries"`
	Name                  *string                  `pulumi:"name"`
	NotificationProperty  *JobNotificationProperty `pulumi:"notificationProperty"`
	NumberOfWorkers       *int                     `pulumi:"numberOfWorkers"`
	Role                  string                   `pulumi:"role"`
	SecurityConfiguration *string                  `pulumi:"securityConfiguration"`
	Tags                  interface{}              `pulumi:"tags"`
	Timeout               *int                     `pulumi:"timeout"`
	WorkerType            *string                  `pulumi:"workerType"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	AllocatedCapacity     pulumi.Float64PtrInput
	Command               JobCommandInput
	Connections           JobConnectionsListPtrInput
	DefaultArguments      pulumi.Input
	Description           pulumi.StringPtrInput
	ExecutionProperty     JobExecutionPropertyPtrInput
	GlueVersion           pulumi.StringPtrInput
	LogUri                pulumi.StringPtrInput
	MaxCapacity           pulumi.Float64PtrInput
	MaxRetries            pulumi.Float64PtrInput
	Name                  pulumi.StringPtrInput
	NotificationProperty  JobNotificationPropertyPtrInput
	NumberOfWorkers       pulumi.IntPtrInput
	Role                  pulumi.StringInput
	SecurityConfiguration pulumi.StringPtrInput
	Tags                  pulumi.Input
	Timeout               pulumi.IntPtrInput
	WorkerType            pulumi.StringPtrInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((*Job)(nil))
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Job)(nil))
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterOutputType(JobOutput{})
}
