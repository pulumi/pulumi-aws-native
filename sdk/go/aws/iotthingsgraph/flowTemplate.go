// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotthingsgraph

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoTThingsGraph::FlowTemplate
//
// Deprecated: FlowTemplate is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type FlowTemplate struct {
	pulumi.CustomResourceState

	CompatibleNamespaceVersion pulumi.Float64PtrOutput              `pulumi:"compatibleNamespaceVersion"`
	Definition                 FlowTemplateDefinitionDocumentOutput `pulumi:"definition"`
}

// NewFlowTemplate registers a new resource with the given unique name, arguments, and options.
func NewFlowTemplate(ctx *pulumi.Context,
	name string, args *FlowTemplateArgs, opts ...pulumi.ResourceOption) (*FlowTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	var resource FlowTemplate
	err := ctx.RegisterResource("aws-native:iotthingsgraph:FlowTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowTemplate gets an existing FlowTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowTemplateState, opts ...pulumi.ResourceOption) (*FlowTemplate, error) {
	var resource FlowTemplate
	err := ctx.ReadResource("aws-native:iotthingsgraph:FlowTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowTemplate resources.
type flowTemplateState struct {
}

type FlowTemplateState struct {
}

func (FlowTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowTemplateState)(nil)).Elem()
}

type flowTemplateArgs struct {
	CompatibleNamespaceVersion *float64                       `pulumi:"compatibleNamespaceVersion"`
	Definition                 FlowTemplateDefinitionDocument `pulumi:"definition"`
}

// The set of arguments for constructing a FlowTemplate resource.
type FlowTemplateArgs struct {
	CompatibleNamespaceVersion pulumi.Float64PtrInput
	Definition                 FlowTemplateDefinitionDocumentInput
}

func (FlowTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowTemplateArgs)(nil)).Elem()
}

type FlowTemplateInput interface {
	pulumi.Input

	ToFlowTemplateOutput() FlowTemplateOutput
	ToFlowTemplateOutputWithContext(ctx context.Context) FlowTemplateOutput
}

func (*FlowTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTemplate)(nil))
}

func (i *FlowTemplate) ToFlowTemplateOutput() FlowTemplateOutput {
	return i.ToFlowTemplateOutputWithContext(context.Background())
}

func (i *FlowTemplate) ToFlowTemplateOutputWithContext(ctx context.Context) FlowTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTemplateOutput)
}

type FlowTemplateOutput struct{ *pulumi.OutputState }

func (FlowTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTemplate)(nil))
}

func (o FlowTemplateOutput) ToFlowTemplateOutput() FlowTemplateOutput {
	return o
}

func (o FlowTemplateOutput) ToFlowTemplateOutputWithContext(ctx context.Context) FlowTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTemplateInput)(nil)).Elem(), &FlowTemplate{})
	pulumi.RegisterOutputType(FlowTemplateOutput{})
}
