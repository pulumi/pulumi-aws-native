// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arczonalshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
func LookupZonalAutoshiftConfiguration(ctx *pulumi.Context, args *LookupZonalAutoshiftConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupZonalAutoshiftConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZonalAutoshiftConfigurationResult
	err := ctx.Invoke("aws-native:arczonalshift:getZonalAutoshiftConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupZonalAutoshiftConfigurationArgs struct {
	// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
	//
	// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
	ResourceIdentifier string `pulumi:"resourceIdentifier"`
}

type LookupZonalAutoshiftConfigurationResult struct {
	// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run. When a resource has a practice run configuration, Route 53 ARC shifts traffic for the resource weekly for practice runs.
	//
	// Practice runs are required for zonal autoshift. The zonal shifts that Route 53 ARC starts for practice runs help you to ensure that shifting away traffic from an Availability Zone during an autoshift is safe for your application.
	//
	// You can update or delete a practice run configuration. Before you delete a practice run configuration, you must disable zonal autoshift for the resource. A practice run configuration is required when zonal autoshift is enabled.
	PracticeRunConfiguration *ZonalAutoshiftConfigurationPracticeRunConfiguration `pulumi:"practiceRunConfiguration"`
	// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
	ZonalAutoshiftStatus *ZonalAutoshiftConfigurationZonalAutoshiftStatus `pulumi:"zonalAutoshiftStatus"`
}

func LookupZonalAutoshiftConfigurationOutput(ctx *pulumi.Context, args LookupZonalAutoshiftConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupZonalAutoshiftConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZonalAutoshiftConfigurationResult, error) {
			args := v.(LookupZonalAutoshiftConfigurationArgs)
			r, err := LookupZonalAutoshiftConfiguration(ctx, &args, opts...)
			var s LookupZonalAutoshiftConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZonalAutoshiftConfigurationResultOutput)
}

type LookupZonalAutoshiftConfigurationOutputArgs struct {
	// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
	//
	// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
	ResourceIdentifier pulumi.StringInput `pulumi:"resourceIdentifier"`
}

func (LookupZonalAutoshiftConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZonalAutoshiftConfigurationArgs)(nil)).Elem()
}

type LookupZonalAutoshiftConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupZonalAutoshiftConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZonalAutoshiftConfigurationResult)(nil)).Elem()
}

func (o LookupZonalAutoshiftConfigurationResultOutput) ToLookupZonalAutoshiftConfigurationResultOutput() LookupZonalAutoshiftConfigurationResultOutput {
	return o
}

func (o LookupZonalAutoshiftConfigurationResultOutput) ToLookupZonalAutoshiftConfigurationResultOutputWithContext(ctx context.Context) LookupZonalAutoshiftConfigurationResultOutput {
	return o
}

// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run. When a resource has a practice run configuration, Route 53 ARC shifts traffic for the resource weekly for practice runs.
//
// Practice runs are required for zonal autoshift. The zonal shifts that Route 53 ARC starts for practice runs help you to ensure that shifting away traffic from an Availability Zone during an autoshift is safe for your application.
//
// You can update or delete a practice run configuration. Before you delete a practice run configuration, you must disable zonal autoshift for the resource. A practice run configuration is required when zonal autoshift is enabled.
func (o LookupZonalAutoshiftConfigurationResultOutput) PracticeRunConfiguration() ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput {
	return o.ApplyT(func(v LookupZonalAutoshiftConfigurationResult) *ZonalAutoshiftConfigurationPracticeRunConfiguration {
		return v.PracticeRunConfiguration
	}).(ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput)
}

// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
func (o LookupZonalAutoshiftConfigurationResultOutput) ZonalAutoshiftStatus() ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput {
	return o.ApplyT(func(v LookupZonalAutoshiftConfigurationResult) *ZonalAutoshiftConfigurationZonalAutoshiftStatus {
		return v.ZonalAutoshiftStatus
	}).(ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZonalAutoshiftConfigurationResultOutput{})
}
