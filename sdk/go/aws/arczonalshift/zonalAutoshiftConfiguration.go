// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arczonalshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
type ZonalAutoshiftConfiguration struct {
	pulumi.CustomResourceState

	// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run.
	//
	// When a resource has a practice run configuation, Route 53 ARC starts weekly zonal shifts for the resource, to shift traffic away from an Availability Zone. Weekly practice runs help you to make sure that your application can continue to operate normally with the loss of one Availability Zone.
	//
	// You can update or delete a practice run configuration. When you delete a practice run configuration, zonal autoshift is disabled for the resource. A practice run configuration is required when zonal autoshift is enabled.
	PracticeRunConfiguration ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput `pulumi:"practiceRunConfiguration"`
	// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
	//
	// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
	ResourceIdentifier pulumi.StringPtrOutput `pulumi:"resourceIdentifier"`
	// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
	ZonalAutoshiftStatus ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput `pulumi:"zonalAutoshiftStatus"`
}

// NewZonalAutoshiftConfiguration registers a new resource with the given unique name, arguments, and options.
func NewZonalAutoshiftConfiguration(ctx *pulumi.Context,
	name string, args *ZonalAutoshiftConfigurationArgs, opts ...pulumi.ResourceOption) (*ZonalAutoshiftConfiguration, error) {
	if args == nil {
		args = &ZonalAutoshiftConfigurationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"resourceIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZonalAutoshiftConfiguration
	err := ctx.RegisterResource("aws-native:arczonalshift:ZonalAutoshiftConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZonalAutoshiftConfiguration gets an existing ZonalAutoshiftConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZonalAutoshiftConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZonalAutoshiftConfigurationState, opts ...pulumi.ResourceOption) (*ZonalAutoshiftConfiguration, error) {
	var resource ZonalAutoshiftConfiguration
	err := ctx.ReadResource("aws-native:arczonalshift:ZonalAutoshiftConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZonalAutoshiftConfiguration resources.
type zonalAutoshiftConfigurationState struct {
}

type ZonalAutoshiftConfigurationState struct {
}

func (ZonalAutoshiftConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalAutoshiftConfigurationState)(nil)).Elem()
}

type zonalAutoshiftConfigurationArgs struct {
	// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run.
	//
	// When a resource has a practice run configuation, Route 53 ARC starts weekly zonal shifts for the resource, to shift traffic away from an Availability Zone. Weekly practice runs help you to make sure that your application can continue to operate normally with the loss of one Availability Zone.
	//
	// You can update or delete a practice run configuration. When you delete a practice run configuration, zonal autoshift is disabled for the resource. A practice run configuration is required when zonal autoshift is enabled.
	PracticeRunConfiguration *ZonalAutoshiftConfigurationPracticeRunConfiguration `pulumi:"practiceRunConfiguration"`
	// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
	//
	// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
	ResourceIdentifier *string `pulumi:"resourceIdentifier"`
	// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
	ZonalAutoshiftStatus *ZonalAutoshiftConfigurationZonalAutoshiftStatus `pulumi:"zonalAutoshiftStatus"`
}

// The set of arguments for constructing a ZonalAutoshiftConfiguration resource.
type ZonalAutoshiftConfigurationArgs struct {
	// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run.
	//
	// When a resource has a practice run configuation, Route 53 ARC starts weekly zonal shifts for the resource, to shift traffic away from an Availability Zone. Weekly practice runs help you to make sure that your application can continue to operate normally with the loss of one Availability Zone.
	//
	// You can update or delete a practice run configuration. When you delete a practice run configuration, zonal autoshift is disabled for the resource. A practice run configuration is required when zonal autoshift is enabled.
	PracticeRunConfiguration ZonalAutoshiftConfigurationPracticeRunConfigurationPtrInput
	// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
	//
	// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
	ResourceIdentifier pulumi.StringPtrInput
	// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
	ZonalAutoshiftStatus ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrInput
}

func (ZonalAutoshiftConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalAutoshiftConfigurationArgs)(nil)).Elem()
}

type ZonalAutoshiftConfigurationInput interface {
	pulumi.Input

	ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput
	ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput
}

func (*ZonalAutoshiftConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalAutoshiftConfiguration)(nil)).Elem()
}

func (i *ZonalAutoshiftConfiguration) ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput {
	return i.ToZonalAutoshiftConfigurationOutputWithContext(context.Background())
}

func (i *ZonalAutoshiftConfiguration) ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonalAutoshiftConfigurationOutput)
}

type ZonalAutoshiftConfigurationOutput struct{ *pulumi.OutputState }

func (ZonalAutoshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalAutoshiftConfiguration)(nil)).Elem()
}

func (o ZonalAutoshiftConfigurationOutput) ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput {
	return o
}

func (o ZonalAutoshiftConfigurationOutput) ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput {
	return o
}

// A practice run configuration for a resource includes the Amazon CloudWatch alarms that you've specified for a practice run, as well as any blocked dates or blocked windows for the practice run.
//
// When a resource has a practice run configuation, Route 53 ARC starts weekly zonal shifts for the resource, to shift traffic away from an Availability Zone. Weekly practice runs help you to make sure that your application can continue to operate normally with the loss of one Availability Zone.
//
// You can update or delete a practice run configuration. When you delete a practice run configuration, zonal autoshift is disabled for the resource. A practice run configuration is required when zonal autoshift is enabled.
func (o ZonalAutoshiftConfigurationOutput) PracticeRunConfiguration() ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput {
		return v.PracticeRunConfiguration
	}).(ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput)
}

// The identifier for the resource that AWS shifts traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.
//
// At this time, supported resources are Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.
func (o ZonalAutoshiftConfigurationOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) pulumi.StringPtrOutput { return v.ResourceIdentifier }).(pulumi.StringPtrOutput)
}

// When zonal autoshift is `ENABLED` , you authorize AWS to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
func (o ZonalAutoshiftConfigurationOutput) ZonalAutoshiftStatus() ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput {
		return v.ZonalAutoshiftStatus
	}).(ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZonalAutoshiftConfigurationInput)(nil)).Elem(), &ZonalAutoshiftConfiguration{})
	pulumi.RegisterOutputType(ZonalAutoshiftConfigurationOutput{})
}
