// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arczonalshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
type ZonalAutoshiftConfiguration struct {
	pulumi.CustomResourceState

	PracticeRunConfiguration ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput `pulumi:"practiceRunConfiguration"`
	ResourceIdentifier       pulumi.StringPtrOutput                                       `pulumi:"resourceIdentifier"`
	ZonalAutoshiftStatus     ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput     `pulumi:"zonalAutoshiftStatus"`
}

// NewZonalAutoshiftConfiguration registers a new resource with the given unique name, arguments, and options.
func NewZonalAutoshiftConfiguration(ctx *pulumi.Context,
	name string, args *ZonalAutoshiftConfigurationArgs, opts ...pulumi.ResourceOption) (*ZonalAutoshiftConfiguration, error) {
	if args == nil {
		args = &ZonalAutoshiftConfigurationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"resourceIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ZonalAutoshiftConfiguration
	err := ctx.RegisterResource("aws-native:arczonalshift:ZonalAutoshiftConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZonalAutoshiftConfiguration gets an existing ZonalAutoshiftConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZonalAutoshiftConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZonalAutoshiftConfigurationState, opts ...pulumi.ResourceOption) (*ZonalAutoshiftConfiguration, error) {
	var resource ZonalAutoshiftConfiguration
	err := ctx.ReadResource("aws-native:arczonalshift:ZonalAutoshiftConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ZonalAutoshiftConfiguration resources.
type zonalAutoshiftConfigurationState struct {
}

type ZonalAutoshiftConfigurationState struct {
}

func (ZonalAutoshiftConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalAutoshiftConfigurationState)(nil)).Elem()
}

type zonalAutoshiftConfigurationArgs struct {
	PracticeRunConfiguration *ZonalAutoshiftConfigurationPracticeRunConfiguration `pulumi:"practiceRunConfiguration"`
	ResourceIdentifier       *string                                              `pulumi:"resourceIdentifier"`
	ZonalAutoshiftStatus     *ZonalAutoshiftConfigurationZonalAutoshiftStatus     `pulumi:"zonalAutoshiftStatus"`
}

// The set of arguments for constructing a ZonalAutoshiftConfiguration resource.
type ZonalAutoshiftConfigurationArgs struct {
	PracticeRunConfiguration ZonalAutoshiftConfigurationPracticeRunConfigurationPtrInput
	ResourceIdentifier       pulumi.StringPtrInput
	ZonalAutoshiftStatus     ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrInput
}

func (ZonalAutoshiftConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zonalAutoshiftConfigurationArgs)(nil)).Elem()
}

type ZonalAutoshiftConfigurationInput interface {
	pulumi.Input

	ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput
	ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput
}

func (*ZonalAutoshiftConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalAutoshiftConfiguration)(nil)).Elem()
}

func (i *ZonalAutoshiftConfiguration) ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput {
	return i.ToZonalAutoshiftConfigurationOutputWithContext(context.Background())
}

func (i *ZonalAutoshiftConfiguration) ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonalAutoshiftConfigurationOutput)
}

func (i *ZonalAutoshiftConfiguration) ToOutput(ctx context.Context) pulumix.Output[*ZonalAutoshiftConfiguration] {
	return pulumix.Output[*ZonalAutoshiftConfiguration]{
		OutputState: i.ToZonalAutoshiftConfigurationOutputWithContext(ctx).OutputState,
	}
}

type ZonalAutoshiftConfigurationOutput struct{ *pulumi.OutputState }

func (ZonalAutoshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonalAutoshiftConfiguration)(nil)).Elem()
}

func (o ZonalAutoshiftConfigurationOutput) ToZonalAutoshiftConfigurationOutput() ZonalAutoshiftConfigurationOutput {
	return o
}

func (o ZonalAutoshiftConfigurationOutput) ToZonalAutoshiftConfigurationOutputWithContext(ctx context.Context) ZonalAutoshiftConfigurationOutput {
	return o
}

func (o ZonalAutoshiftConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[*ZonalAutoshiftConfiguration] {
	return pulumix.Output[*ZonalAutoshiftConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ZonalAutoshiftConfigurationOutput) PracticeRunConfiguration() ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput {
		return v.PracticeRunConfiguration
	}).(ZonalAutoshiftConfigurationPracticeRunConfigurationPtrOutput)
}

func (o ZonalAutoshiftConfigurationOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) pulumi.StringPtrOutput { return v.ResourceIdentifier }).(pulumi.StringPtrOutput)
}

func (o ZonalAutoshiftConfigurationOutput) ZonalAutoshiftStatus() ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput {
	return o.ApplyT(func(v *ZonalAutoshiftConfiguration) ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput {
		return v.ZonalAutoshiftStatus
	}).(ZonalAutoshiftConfigurationZonalAutoshiftStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZonalAutoshiftConfigurationInput)(nil)).Elem(), &ZonalAutoshiftConfiguration{})
	pulumi.RegisterOutputType(ZonalAutoshiftConfigurationOutput{})
}
