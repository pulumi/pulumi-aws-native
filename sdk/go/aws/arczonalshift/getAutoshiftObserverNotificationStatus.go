// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arczonalshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ARCZonalShift::AutoshiftObserverNotificationStatus Resource Type
func LookupAutoshiftObserverNotificationStatus(ctx *pulumi.Context, args *LookupAutoshiftObserverNotificationStatusArgs, opts ...pulumi.InvokeOption) (*LookupAutoshiftObserverNotificationStatusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutoshiftObserverNotificationStatusResult
	err := ctx.Invoke("aws-native:arczonalshift:getAutoshiftObserverNotificationStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAutoshiftObserverNotificationStatusArgs struct {
	AccountId string `pulumi:"accountId"`
	Region    string `pulumi:"region"`
}

type LookupAutoshiftObserverNotificationStatusResult struct {
	AccountId *string `pulumi:"accountId"`
	Region    *string `pulumi:"region"`
}

func LookupAutoshiftObserverNotificationStatusOutput(ctx *pulumi.Context, args LookupAutoshiftObserverNotificationStatusOutputArgs, opts ...pulumi.InvokeOption) LookupAutoshiftObserverNotificationStatusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAutoshiftObserverNotificationStatusResultOutput, error) {
			args := v.(LookupAutoshiftObserverNotificationStatusArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAutoshiftObserverNotificationStatusResult
			secret, err := ctx.InvokePackageRaw("aws-native:arczonalshift:getAutoshiftObserverNotificationStatus", args, &rv, "", opts...)
			if err != nil {
				return LookupAutoshiftObserverNotificationStatusResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAutoshiftObserverNotificationStatusResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAutoshiftObserverNotificationStatusResultOutput), nil
			}
			return output, nil
		}).(LookupAutoshiftObserverNotificationStatusResultOutput)
}

type LookupAutoshiftObserverNotificationStatusOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
	Region    pulumi.StringInput `pulumi:"region"`
}

func (LookupAutoshiftObserverNotificationStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutoshiftObserverNotificationStatusArgs)(nil)).Elem()
}

type LookupAutoshiftObserverNotificationStatusResultOutput struct{ *pulumi.OutputState }

func (LookupAutoshiftObserverNotificationStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutoshiftObserverNotificationStatusResult)(nil)).Elem()
}

func (o LookupAutoshiftObserverNotificationStatusResultOutput) ToLookupAutoshiftObserverNotificationStatusResultOutput() LookupAutoshiftObserverNotificationStatusResultOutput {
	return o
}

func (o LookupAutoshiftObserverNotificationStatusResultOutput) ToLookupAutoshiftObserverNotificationStatusResultOutputWithContext(ctx context.Context) LookupAutoshiftObserverNotificationStatusResultOutput {
	return o
}

func (o LookupAutoshiftObserverNotificationStatusResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAutoshiftObserverNotificationStatusResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o LookupAutoshiftObserverNotificationStatusResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAutoshiftObserverNotificationStatusResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutoshiftObserverNotificationStatusResultOutput{})
}
