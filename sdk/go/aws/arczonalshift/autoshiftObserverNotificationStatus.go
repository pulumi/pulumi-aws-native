// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arczonalshift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::ARCZonalShift::AutoshiftObserverNotificationStatus Resource Type
type AutoshiftObserverNotificationStatusEnum struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput                           `pulumi:"accountId"`
	Region    pulumi.StringOutput                           `pulumi:"region"`
	Status    AutoshiftObserverNotificationStatusEnumOutput `pulumi:"status"`
}

// NewAutoshiftObserverNotificationStatusEnum registers a new resource with the given unique name, arguments, and options.
func NewAutoshiftObserverNotificationStatusEnum(ctx *pulumi.Context,
	name string, args *AutoshiftObserverNotificationStatusEnumArgs, opts ...pulumi.ResourceOption) (*AutoshiftObserverNotificationStatusEnum, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"status",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutoshiftObserverNotificationStatusEnum
	err := ctx.RegisterResource("aws-native:arczonalshift:AutoshiftObserverNotificationStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoshiftObserverNotificationStatusEnum gets an existing AutoshiftObserverNotificationStatusEnum resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoshiftObserverNotificationStatusEnum(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoshiftObserverNotificationStatusEnumState, opts ...pulumi.ResourceOption) (*AutoshiftObserverNotificationStatusEnum, error) {
	var resource AutoshiftObserverNotificationStatusEnum
	err := ctx.ReadResource("aws-native:arczonalshift:AutoshiftObserverNotificationStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoshiftObserverNotificationStatusEnum resources.
type autoshiftObserverNotificationStatusEnumState struct {
}

type AutoshiftObserverNotificationStatusEnumState struct {
}

func (AutoshiftObserverNotificationStatusEnumState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoshiftObserverNotificationStatusEnumState)(nil)).Elem()
}

type autoshiftObserverNotificationStatusEnumArgs struct {
	Status AutoshiftObserverNotificationStatusEnum `pulumi:"status"`
}

// The set of arguments for constructing a AutoshiftObserverNotificationStatusEnum resource.
type AutoshiftObserverNotificationStatusEnumArgs struct {
	Status AutoshiftObserverNotificationStatusEnumInput
}

func (AutoshiftObserverNotificationStatusEnumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoshiftObserverNotificationStatusEnumArgs)(nil)).Elem()
}

type AutoshiftObserverNotificationStatusEnumInput interface {
	pulumi.Input

	ToAutoshiftObserverNotificationStatusEnumOutput() AutoshiftObserverNotificationStatusEnumOutput
	ToAutoshiftObserverNotificationStatusEnumOutputWithContext(ctx context.Context) AutoshiftObserverNotificationStatusEnumOutput
}

func (*AutoshiftObserverNotificationStatusEnum) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoshiftObserverNotificationStatusEnum)(nil)).Elem()
}

func (i *AutoshiftObserverNotificationStatusEnum) ToAutoshiftObserverNotificationStatusEnumOutput() AutoshiftObserverNotificationStatusEnumOutput {
	return i.ToAutoshiftObserverNotificationStatusEnumOutputWithContext(context.Background())
}

func (i *AutoshiftObserverNotificationStatusEnum) ToAutoshiftObserverNotificationStatusEnumOutputWithContext(ctx context.Context) AutoshiftObserverNotificationStatusEnumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoshiftObserverNotificationStatusEnumOutput)
}

type AutoshiftObserverNotificationStatusEnumOutput struct{ *pulumi.OutputState }

func (AutoshiftObserverNotificationStatusEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoshiftObserverNotificationStatusEnum)(nil)).Elem()
}

func (o AutoshiftObserverNotificationStatusEnumOutput) ToAutoshiftObserverNotificationStatusEnumOutput() AutoshiftObserverNotificationStatusEnumOutput {
	return o
}

func (o AutoshiftObserverNotificationStatusEnumOutput) ToAutoshiftObserverNotificationStatusEnumOutputWithContext(ctx context.Context) AutoshiftObserverNotificationStatusEnumOutput {
	return o
}

func (o AutoshiftObserverNotificationStatusEnumOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoshiftObserverNotificationStatusEnum) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o AutoshiftObserverNotificationStatusEnumOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoshiftObserverNotificationStatusEnum) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o AutoshiftObserverNotificationStatusEnumOutput) Status() AutoshiftObserverNotificationStatusEnumOutput {
	return o.ApplyT(func(v *AutoshiftObserverNotificationStatusEnum) AutoshiftObserverNotificationStatusEnumOutput {
		return v.Status
	}).(AutoshiftObserverNotificationStatusEnumOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoshiftObserverNotificationStatusEnumInput)(nil)).Elem(), &AutoshiftObserverNotificationStatusEnum{})
	pulumi.RegisterOutputType(AutoshiftObserverNotificationStatusEnumOutput{})
}
