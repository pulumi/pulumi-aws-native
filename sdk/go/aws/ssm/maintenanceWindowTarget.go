// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SSM::MaintenanceWindowTarget
//
// Deprecated: MaintenanceWindowTarget is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type MaintenanceWindowTarget struct {
	pulumi.CustomResourceState

	Description      pulumi.StringPtrOutput                    `pulumi:"description"`
	Name             pulumi.StringPtrOutput                    `pulumi:"name"`
	OwnerInformation pulumi.StringPtrOutput                    `pulumi:"ownerInformation"`
	ResourceType     pulumi.StringOutput                       `pulumi:"resourceType"`
	Targets          MaintenanceWindowTargetTargetsArrayOutput `pulumi:"targets"`
	WindowId         pulumi.StringOutput                       `pulumi:"windowId"`
}

// NewMaintenanceWindowTarget registers a new resource with the given unique name, arguments, and options.
func NewMaintenanceWindowTarget(ctx *pulumi.Context,
	name string, args *MaintenanceWindowTargetArgs, opts ...pulumi.ResourceOption) (*MaintenanceWindowTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	if args.Targets == nil {
		return nil, errors.New("invalid value for required argument 'Targets'")
	}
	if args.WindowId == nil {
		return nil, errors.New("invalid value for required argument 'WindowId'")
	}
	var resource MaintenanceWindowTarget
	err := ctx.RegisterResource("aws-native:ssm:MaintenanceWindowTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaintenanceWindowTarget gets an existing MaintenanceWindowTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaintenanceWindowTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaintenanceWindowTargetState, opts ...pulumi.ResourceOption) (*MaintenanceWindowTarget, error) {
	var resource MaintenanceWindowTarget
	err := ctx.ReadResource("aws-native:ssm:MaintenanceWindowTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaintenanceWindowTarget resources.
type maintenanceWindowTargetState struct {
}

type MaintenanceWindowTargetState struct {
}

func (MaintenanceWindowTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowTargetState)(nil)).Elem()
}

type maintenanceWindowTargetArgs struct {
	Description      *string                          `pulumi:"description"`
	Name             *string                          `pulumi:"name"`
	OwnerInformation *string                          `pulumi:"ownerInformation"`
	ResourceType     string                           `pulumi:"resourceType"`
	Targets          []MaintenanceWindowTargetTargets `pulumi:"targets"`
	WindowId         string                           `pulumi:"windowId"`
}

// The set of arguments for constructing a MaintenanceWindowTarget resource.
type MaintenanceWindowTargetArgs struct {
	Description      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	OwnerInformation pulumi.StringPtrInput
	ResourceType     pulumi.StringInput
	Targets          MaintenanceWindowTargetTargetsArrayInput
	WindowId         pulumi.StringInput
}

func (MaintenanceWindowTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowTargetArgs)(nil)).Elem()
}

type MaintenanceWindowTargetInput interface {
	pulumi.Input

	ToMaintenanceWindowTargetOutput() MaintenanceWindowTargetOutput
	ToMaintenanceWindowTargetOutputWithContext(ctx context.Context) MaintenanceWindowTargetOutput
}

func (*MaintenanceWindowTarget) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTarget)(nil))
}

func (i *MaintenanceWindowTarget) ToMaintenanceWindowTargetOutput() MaintenanceWindowTargetOutput {
	return i.ToMaintenanceWindowTargetOutputWithContext(context.Background())
}

func (i *MaintenanceWindowTarget) ToMaintenanceWindowTargetOutputWithContext(ctx context.Context) MaintenanceWindowTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTargetOutput)
}

type MaintenanceWindowTargetOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTarget)(nil))
}

func (o MaintenanceWindowTargetOutput) ToMaintenanceWindowTargetOutput() MaintenanceWindowTargetOutput {
	return o
}

func (o MaintenanceWindowTargetOutput) ToMaintenanceWindowTargetOutputWithContext(ctx context.Context) MaintenanceWindowTargetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MaintenanceWindowTargetOutput{})
}
