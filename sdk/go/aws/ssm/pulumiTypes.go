// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AssociationInstanceAssociationOutputLocation struct {
	// `S3OutputLocation` is a property of the [InstanceAssociationOutputLocation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-association-instanceassociationoutputlocation.html) property that specifies an Amazon S3 bucket where you want to store the results of this request.
	S3Location *AssociationS3OutputLocation `pulumi:"s3Location"`
}

// AssociationInstanceAssociationOutputLocationInput is an input type that accepts AssociationInstanceAssociationOutputLocationArgs and AssociationInstanceAssociationOutputLocationOutput values.
// You can construct a concrete instance of `AssociationInstanceAssociationOutputLocationInput` via:
//
//	AssociationInstanceAssociationOutputLocationArgs{...}
type AssociationInstanceAssociationOutputLocationInput interface {
	pulumi.Input

	ToAssociationInstanceAssociationOutputLocationOutput() AssociationInstanceAssociationOutputLocationOutput
	ToAssociationInstanceAssociationOutputLocationOutputWithContext(context.Context) AssociationInstanceAssociationOutputLocationOutput
}

type AssociationInstanceAssociationOutputLocationArgs struct {
	// `S3OutputLocation` is a property of the [InstanceAssociationOutputLocation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-association-instanceassociationoutputlocation.html) property that specifies an Amazon S3 bucket where you want to store the results of this request.
	S3Location AssociationS3OutputLocationPtrInput `pulumi:"s3Location"`
}

func (AssociationInstanceAssociationOutputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationInstanceAssociationOutputLocation)(nil)).Elem()
}

func (i AssociationInstanceAssociationOutputLocationArgs) ToAssociationInstanceAssociationOutputLocationOutput() AssociationInstanceAssociationOutputLocationOutput {
	return i.ToAssociationInstanceAssociationOutputLocationOutputWithContext(context.Background())
}

func (i AssociationInstanceAssociationOutputLocationArgs) ToAssociationInstanceAssociationOutputLocationOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationInstanceAssociationOutputLocationOutput)
}

func (i AssociationInstanceAssociationOutputLocationArgs) ToAssociationInstanceAssociationOutputLocationPtrOutput() AssociationInstanceAssociationOutputLocationPtrOutput {
	return i.ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (i AssociationInstanceAssociationOutputLocationArgs) ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationInstanceAssociationOutputLocationOutput).ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(ctx)
}

// AssociationInstanceAssociationOutputLocationPtrInput is an input type that accepts AssociationInstanceAssociationOutputLocationArgs, AssociationInstanceAssociationOutputLocationPtr and AssociationInstanceAssociationOutputLocationPtrOutput values.
// You can construct a concrete instance of `AssociationInstanceAssociationOutputLocationPtrInput` via:
//
//	        AssociationInstanceAssociationOutputLocationArgs{...}
//
//	or:
//
//	        nil
type AssociationInstanceAssociationOutputLocationPtrInput interface {
	pulumi.Input

	ToAssociationInstanceAssociationOutputLocationPtrOutput() AssociationInstanceAssociationOutputLocationPtrOutput
	ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(context.Context) AssociationInstanceAssociationOutputLocationPtrOutput
}

type associationInstanceAssociationOutputLocationPtrType AssociationInstanceAssociationOutputLocationArgs

func AssociationInstanceAssociationOutputLocationPtr(v *AssociationInstanceAssociationOutputLocationArgs) AssociationInstanceAssociationOutputLocationPtrInput {
	return (*associationInstanceAssociationOutputLocationPtrType)(v)
}

func (*associationInstanceAssociationOutputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationInstanceAssociationOutputLocation)(nil)).Elem()
}

func (i *associationInstanceAssociationOutputLocationPtrType) ToAssociationInstanceAssociationOutputLocationPtrOutput() AssociationInstanceAssociationOutputLocationPtrOutput {
	return i.ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (i *associationInstanceAssociationOutputLocationPtrType) ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationInstanceAssociationOutputLocationPtrOutput)
}

type AssociationInstanceAssociationOutputLocationOutput struct{ *pulumi.OutputState }

func (AssociationInstanceAssociationOutputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationInstanceAssociationOutputLocation)(nil)).Elem()
}

func (o AssociationInstanceAssociationOutputLocationOutput) ToAssociationInstanceAssociationOutputLocationOutput() AssociationInstanceAssociationOutputLocationOutput {
	return o
}

func (o AssociationInstanceAssociationOutputLocationOutput) ToAssociationInstanceAssociationOutputLocationOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationOutput {
	return o
}

func (o AssociationInstanceAssociationOutputLocationOutput) ToAssociationInstanceAssociationOutputLocationPtrOutput() AssociationInstanceAssociationOutputLocationPtrOutput {
	return o.ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (o AssociationInstanceAssociationOutputLocationOutput) ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssociationInstanceAssociationOutputLocation) *AssociationInstanceAssociationOutputLocation {
		return &v
	}).(AssociationInstanceAssociationOutputLocationPtrOutput)
}

// `S3OutputLocation` is a property of the [InstanceAssociationOutputLocation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-association-instanceassociationoutputlocation.html) property that specifies an Amazon S3 bucket where you want to store the results of this request.
func (o AssociationInstanceAssociationOutputLocationOutput) S3Location() AssociationS3OutputLocationPtrOutput {
	return o.ApplyT(func(v AssociationInstanceAssociationOutputLocation) *AssociationS3OutputLocation { return v.S3Location }).(AssociationS3OutputLocationPtrOutput)
}

type AssociationInstanceAssociationOutputLocationPtrOutput struct{ *pulumi.OutputState }

func (AssociationInstanceAssociationOutputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationInstanceAssociationOutputLocation)(nil)).Elem()
}

func (o AssociationInstanceAssociationOutputLocationPtrOutput) ToAssociationInstanceAssociationOutputLocationPtrOutput() AssociationInstanceAssociationOutputLocationPtrOutput {
	return o
}

func (o AssociationInstanceAssociationOutputLocationPtrOutput) ToAssociationInstanceAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationInstanceAssociationOutputLocationPtrOutput {
	return o
}

func (o AssociationInstanceAssociationOutputLocationPtrOutput) Elem() AssociationInstanceAssociationOutputLocationOutput {
	return o.ApplyT(func(v *AssociationInstanceAssociationOutputLocation) AssociationInstanceAssociationOutputLocation {
		if v != nil {
			return *v
		}
		var ret AssociationInstanceAssociationOutputLocation
		return ret
	}).(AssociationInstanceAssociationOutputLocationOutput)
}

// `S3OutputLocation` is a property of the [InstanceAssociationOutputLocation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-association-instanceassociationoutputlocation.html) property that specifies an Amazon S3 bucket where you want to store the results of this request.
func (o AssociationInstanceAssociationOutputLocationPtrOutput) S3Location() AssociationS3OutputLocationPtrOutput {
	return o.ApplyT(func(v *AssociationInstanceAssociationOutputLocation) *AssociationS3OutputLocation {
		if v == nil {
			return nil
		}
		return v.S3Location
	}).(AssociationS3OutputLocationPtrOutput)
}

type AssociationS3OutputLocation struct {
	// The name of the S3 bucket.
	OutputS3BucketName *string `pulumi:"outputS3BucketName"`
	// The S3 bucket subfolder.
	OutputS3KeyPrefix *string `pulumi:"outputS3KeyPrefix"`
	// The AWS Region of the S3 bucket.
	OutputS3Region *string `pulumi:"outputS3Region"`
}

// AssociationS3OutputLocationInput is an input type that accepts AssociationS3OutputLocationArgs and AssociationS3OutputLocationOutput values.
// You can construct a concrete instance of `AssociationS3OutputLocationInput` via:
//
//	AssociationS3OutputLocationArgs{...}
type AssociationS3OutputLocationInput interface {
	pulumi.Input

	ToAssociationS3OutputLocationOutput() AssociationS3OutputLocationOutput
	ToAssociationS3OutputLocationOutputWithContext(context.Context) AssociationS3OutputLocationOutput
}

type AssociationS3OutputLocationArgs struct {
	// The name of the S3 bucket.
	OutputS3BucketName pulumi.StringPtrInput `pulumi:"outputS3BucketName"`
	// The S3 bucket subfolder.
	OutputS3KeyPrefix pulumi.StringPtrInput `pulumi:"outputS3KeyPrefix"`
	// The AWS Region of the S3 bucket.
	OutputS3Region pulumi.StringPtrInput `pulumi:"outputS3Region"`
}

func (AssociationS3OutputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationS3OutputLocation)(nil)).Elem()
}

func (i AssociationS3OutputLocationArgs) ToAssociationS3OutputLocationOutput() AssociationS3OutputLocationOutput {
	return i.ToAssociationS3OutputLocationOutputWithContext(context.Background())
}

func (i AssociationS3OutputLocationArgs) ToAssociationS3OutputLocationOutputWithContext(ctx context.Context) AssociationS3OutputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationS3OutputLocationOutput)
}

func (i AssociationS3OutputLocationArgs) ToAssociationS3OutputLocationPtrOutput() AssociationS3OutputLocationPtrOutput {
	return i.ToAssociationS3OutputLocationPtrOutputWithContext(context.Background())
}

func (i AssociationS3OutputLocationArgs) ToAssociationS3OutputLocationPtrOutputWithContext(ctx context.Context) AssociationS3OutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationS3OutputLocationOutput).ToAssociationS3OutputLocationPtrOutputWithContext(ctx)
}

// AssociationS3OutputLocationPtrInput is an input type that accepts AssociationS3OutputLocationArgs, AssociationS3OutputLocationPtr and AssociationS3OutputLocationPtrOutput values.
// You can construct a concrete instance of `AssociationS3OutputLocationPtrInput` via:
//
//	        AssociationS3OutputLocationArgs{...}
//
//	or:
//
//	        nil
type AssociationS3OutputLocationPtrInput interface {
	pulumi.Input

	ToAssociationS3OutputLocationPtrOutput() AssociationS3OutputLocationPtrOutput
	ToAssociationS3OutputLocationPtrOutputWithContext(context.Context) AssociationS3OutputLocationPtrOutput
}

type associationS3OutputLocationPtrType AssociationS3OutputLocationArgs

func AssociationS3OutputLocationPtr(v *AssociationS3OutputLocationArgs) AssociationS3OutputLocationPtrInput {
	return (*associationS3OutputLocationPtrType)(v)
}

func (*associationS3OutputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationS3OutputLocation)(nil)).Elem()
}

func (i *associationS3OutputLocationPtrType) ToAssociationS3OutputLocationPtrOutput() AssociationS3OutputLocationPtrOutput {
	return i.ToAssociationS3OutputLocationPtrOutputWithContext(context.Background())
}

func (i *associationS3OutputLocationPtrType) ToAssociationS3OutputLocationPtrOutputWithContext(ctx context.Context) AssociationS3OutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationS3OutputLocationPtrOutput)
}

type AssociationS3OutputLocationOutput struct{ *pulumi.OutputState }

func (AssociationS3OutputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationS3OutputLocation)(nil)).Elem()
}

func (o AssociationS3OutputLocationOutput) ToAssociationS3OutputLocationOutput() AssociationS3OutputLocationOutput {
	return o
}

func (o AssociationS3OutputLocationOutput) ToAssociationS3OutputLocationOutputWithContext(ctx context.Context) AssociationS3OutputLocationOutput {
	return o
}

func (o AssociationS3OutputLocationOutput) ToAssociationS3OutputLocationPtrOutput() AssociationS3OutputLocationPtrOutput {
	return o.ToAssociationS3OutputLocationPtrOutputWithContext(context.Background())
}

func (o AssociationS3OutputLocationOutput) ToAssociationS3OutputLocationPtrOutputWithContext(ctx context.Context) AssociationS3OutputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssociationS3OutputLocation) *AssociationS3OutputLocation {
		return &v
	}).(AssociationS3OutputLocationPtrOutput)
}

// The name of the S3 bucket.
func (o AssociationS3OutputLocationOutput) OutputS3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociationS3OutputLocation) *string { return v.OutputS3BucketName }).(pulumi.StringPtrOutput)
}

// The S3 bucket subfolder.
func (o AssociationS3OutputLocationOutput) OutputS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociationS3OutputLocation) *string { return v.OutputS3KeyPrefix }).(pulumi.StringPtrOutput)
}

// The AWS Region of the S3 bucket.
func (o AssociationS3OutputLocationOutput) OutputS3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociationS3OutputLocation) *string { return v.OutputS3Region }).(pulumi.StringPtrOutput)
}

type AssociationS3OutputLocationPtrOutput struct{ *pulumi.OutputState }

func (AssociationS3OutputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationS3OutputLocation)(nil)).Elem()
}

func (o AssociationS3OutputLocationPtrOutput) ToAssociationS3OutputLocationPtrOutput() AssociationS3OutputLocationPtrOutput {
	return o
}

func (o AssociationS3OutputLocationPtrOutput) ToAssociationS3OutputLocationPtrOutputWithContext(ctx context.Context) AssociationS3OutputLocationPtrOutput {
	return o
}

func (o AssociationS3OutputLocationPtrOutput) Elem() AssociationS3OutputLocationOutput {
	return o.ApplyT(func(v *AssociationS3OutputLocation) AssociationS3OutputLocation {
		if v != nil {
			return *v
		}
		var ret AssociationS3OutputLocation
		return ret
	}).(AssociationS3OutputLocationOutput)
}

// The name of the S3 bucket.
func (o AssociationS3OutputLocationPtrOutput) OutputS3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationS3OutputLocation) *string {
		if v == nil {
			return nil
		}
		return v.OutputS3BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 bucket subfolder.
func (o AssociationS3OutputLocationPtrOutput) OutputS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationS3OutputLocation) *string {
		if v == nil {
			return nil
		}
		return v.OutputS3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The AWS Region of the S3 bucket.
func (o AssociationS3OutputLocationPtrOutput) OutputS3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationS3OutputLocation) *string {
		if v == nil {
			return nil
		}
		return v.OutputS3Region
	}).(pulumi.StringPtrOutput)
}

type AssociationTarget struct {
	// User-defined criteria for sending commands that target managed nodes that meet the criteria.
	Key string `pulumi:"key"`
	// User-defined criteria that maps to `Key` . For example, if you specified `tag:ServerRole` , you could specify `value:WebServer` to run a command on instances that include EC2 tags of `ServerRole,WebServer` .
	//
	// Depending on the type of target, the maximum number of values for a key might be lower than the global maximum of 50.
	Values []string `pulumi:"values"`
}

// AssociationTargetInput is an input type that accepts AssociationTargetArgs and AssociationTargetOutput values.
// You can construct a concrete instance of `AssociationTargetInput` via:
//
//	AssociationTargetArgs{...}
type AssociationTargetInput interface {
	pulumi.Input

	ToAssociationTargetOutput() AssociationTargetOutput
	ToAssociationTargetOutputWithContext(context.Context) AssociationTargetOutput
}

type AssociationTargetArgs struct {
	// User-defined criteria for sending commands that target managed nodes that meet the criteria.
	Key pulumi.StringInput `pulumi:"key"`
	// User-defined criteria that maps to `Key` . For example, if you specified `tag:ServerRole` , you could specify `value:WebServer` to run a command on instances that include EC2 tags of `ServerRole,WebServer` .
	//
	// Depending on the type of target, the maximum number of values for a key might be lower than the global maximum of 50.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AssociationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationTarget)(nil)).Elem()
}

func (i AssociationTargetArgs) ToAssociationTargetOutput() AssociationTargetOutput {
	return i.ToAssociationTargetOutputWithContext(context.Background())
}

func (i AssociationTargetArgs) ToAssociationTargetOutputWithContext(ctx context.Context) AssociationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationTargetOutput)
}

// AssociationTargetArrayInput is an input type that accepts AssociationTargetArray and AssociationTargetArrayOutput values.
// You can construct a concrete instance of `AssociationTargetArrayInput` via:
//
//	AssociationTargetArray{ AssociationTargetArgs{...} }
type AssociationTargetArrayInput interface {
	pulumi.Input

	ToAssociationTargetArrayOutput() AssociationTargetArrayOutput
	ToAssociationTargetArrayOutputWithContext(context.Context) AssociationTargetArrayOutput
}

type AssociationTargetArray []AssociationTargetInput

func (AssociationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssociationTarget)(nil)).Elem()
}

func (i AssociationTargetArray) ToAssociationTargetArrayOutput() AssociationTargetArrayOutput {
	return i.ToAssociationTargetArrayOutputWithContext(context.Background())
}

func (i AssociationTargetArray) ToAssociationTargetArrayOutputWithContext(ctx context.Context) AssociationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationTargetArrayOutput)
}

type AssociationTargetOutput struct{ *pulumi.OutputState }

func (AssociationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationTarget)(nil)).Elem()
}

func (o AssociationTargetOutput) ToAssociationTargetOutput() AssociationTargetOutput {
	return o
}

func (o AssociationTargetOutput) ToAssociationTargetOutputWithContext(ctx context.Context) AssociationTargetOutput {
	return o
}

// User-defined criteria for sending commands that target managed nodes that meet the criteria.
func (o AssociationTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AssociationTarget) string { return v.Key }).(pulumi.StringOutput)
}

// User-defined criteria that maps to `Key` . For example, if you specified `tag:ServerRole` , you could specify `value:WebServer` to run a command on instances that include EC2 tags of `ServerRole,WebServer` .
//
// Depending on the type of target, the maximum number of values for a key might be lower than the global maximum of 50.
func (o AssociationTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AssociationTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AssociationTargetArrayOutput struct{ *pulumi.OutputState }

func (AssociationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssociationTarget)(nil)).Elem()
}

func (o AssociationTargetArrayOutput) ToAssociationTargetArrayOutput() AssociationTargetArrayOutput {
	return o
}

func (o AssociationTargetArrayOutput) ToAssociationTargetArrayOutputWithContext(ctx context.Context) AssociationTargetArrayOutput {
	return o
}

func (o AssociationTargetArrayOutput) Index(i pulumi.IntInput) AssociationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssociationTarget {
		return vs[0].([]AssociationTarget)[vs[1].(int)]
	}).(AssociationTargetOutput)
}

type DocumentAttachmentsSource struct {
	// The key of a key-value pair that identifies the location of an attachment to a document.
	Key *DocumentAttachmentsSourceKey `pulumi:"key"`
	// The name of the document attachment file.
	Name *string `pulumi:"name"`
	// The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
	Values []string `pulumi:"values"`
}

// DocumentAttachmentsSourceInput is an input type that accepts DocumentAttachmentsSourceArgs and DocumentAttachmentsSourceOutput values.
// You can construct a concrete instance of `DocumentAttachmentsSourceInput` via:
//
//	DocumentAttachmentsSourceArgs{...}
type DocumentAttachmentsSourceInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput
	ToDocumentAttachmentsSourceOutputWithContext(context.Context) DocumentAttachmentsSourceOutput
}

type DocumentAttachmentsSourceArgs struct {
	// The key of a key-value pair that identifies the location of an attachment to a document.
	Key DocumentAttachmentsSourceKeyPtrInput `pulumi:"key"`
	// The name of the document attachment file.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DocumentAttachmentsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSource)(nil)).Elem()
}

func (i DocumentAttachmentsSourceArgs) ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput {
	return i.ToDocumentAttachmentsSourceOutputWithContext(context.Background())
}

func (i DocumentAttachmentsSourceArgs) ToDocumentAttachmentsSourceOutputWithContext(ctx context.Context) DocumentAttachmentsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAttachmentsSourceOutput)
}

// DocumentAttachmentsSourceArrayInput is an input type that accepts DocumentAttachmentsSourceArray and DocumentAttachmentsSourceArrayOutput values.
// You can construct a concrete instance of `DocumentAttachmentsSourceArrayInput` via:
//
//	DocumentAttachmentsSourceArray{ DocumentAttachmentsSourceArgs{...} }
type DocumentAttachmentsSourceArrayInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput
	ToDocumentAttachmentsSourceArrayOutputWithContext(context.Context) DocumentAttachmentsSourceArrayOutput
}

type DocumentAttachmentsSourceArray []DocumentAttachmentsSourceInput

func (DocumentAttachmentsSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentAttachmentsSource)(nil)).Elem()
}

func (i DocumentAttachmentsSourceArray) ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput {
	return i.ToDocumentAttachmentsSourceArrayOutputWithContext(context.Background())
}

func (i DocumentAttachmentsSourceArray) ToDocumentAttachmentsSourceArrayOutputWithContext(ctx context.Context) DocumentAttachmentsSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAttachmentsSourceArrayOutput)
}

type DocumentAttachmentsSourceOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSource)(nil)).Elem()
}

func (o DocumentAttachmentsSourceOutput) ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput {
	return o
}

func (o DocumentAttachmentsSourceOutput) ToDocumentAttachmentsSourceOutputWithContext(ctx context.Context) DocumentAttachmentsSourceOutput {
	return o
}

// The key of a key-value pair that identifies the location of an attachment to a document.
func (o DocumentAttachmentsSourceOutput) Key() DocumentAttachmentsSourceKeyPtrOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) *DocumentAttachmentsSourceKey { return v.Key }).(DocumentAttachmentsSourceKeyPtrOutput)
}

// The name of the document attachment file.
func (o DocumentAttachmentsSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
func (o DocumentAttachmentsSourceOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DocumentAttachmentsSourceArrayOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentAttachmentsSource)(nil)).Elem()
}

func (o DocumentAttachmentsSourceArrayOutput) ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput {
	return o
}

func (o DocumentAttachmentsSourceArrayOutput) ToDocumentAttachmentsSourceArrayOutputWithContext(ctx context.Context) DocumentAttachmentsSourceArrayOutput {
	return o
}

func (o DocumentAttachmentsSourceArrayOutput) Index(i pulumi.IntInput) DocumentAttachmentsSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentAttachmentsSource {
		return vs[0].([]DocumentAttachmentsSource)[vs[1].(int)]
	}).(DocumentAttachmentsSourceOutput)
}

type DocumentRequires struct {
	// The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
	Name *string `pulumi:"name"`
	// The document version required by the current document.
	Version *string `pulumi:"version"`
}

// DocumentRequiresInput is an input type that accepts DocumentRequiresArgs and DocumentRequiresOutput values.
// You can construct a concrete instance of `DocumentRequiresInput` via:
//
//	DocumentRequiresArgs{...}
type DocumentRequiresInput interface {
	pulumi.Input

	ToDocumentRequiresOutput() DocumentRequiresOutput
	ToDocumentRequiresOutputWithContext(context.Context) DocumentRequiresOutput
}

type DocumentRequiresArgs struct {
	// The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The document version required by the current document.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DocumentRequiresArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentRequires)(nil)).Elem()
}

func (i DocumentRequiresArgs) ToDocumentRequiresOutput() DocumentRequiresOutput {
	return i.ToDocumentRequiresOutputWithContext(context.Background())
}

func (i DocumentRequiresArgs) ToDocumentRequiresOutputWithContext(ctx context.Context) DocumentRequiresOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentRequiresOutput)
}

// DocumentRequiresArrayInput is an input type that accepts DocumentRequiresArray and DocumentRequiresArrayOutput values.
// You can construct a concrete instance of `DocumentRequiresArrayInput` via:
//
//	DocumentRequiresArray{ DocumentRequiresArgs{...} }
type DocumentRequiresArrayInput interface {
	pulumi.Input

	ToDocumentRequiresArrayOutput() DocumentRequiresArrayOutput
	ToDocumentRequiresArrayOutputWithContext(context.Context) DocumentRequiresArrayOutput
}

type DocumentRequiresArray []DocumentRequiresInput

func (DocumentRequiresArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentRequires)(nil)).Elem()
}

func (i DocumentRequiresArray) ToDocumentRequiresArrayOutput() DocumentRequiresArrayOutput {
	return i.ToDocumentRequiresArrayOutputWithContext(context.Background())
}

func (i DocumentRequiresArray) ToDocumentRequiresArrayOutputWithContext(ctx context.Context) DocumentRequiresArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentRequiresArrayOutput)
}

type DocumentRequiresOutput struct{ *pulumi.OutputState }

func (DocumentRequiresOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentRequires)(nil)).Elem()
}

func (o DocumentRequiresOutput) ToDocumentRequiresOutput() DocumentRequiresOutput {
	return o
}

func (o DocumentRequiresOutput) ToDocumentRequiresOutputWithContext(ctx context.Context) DocumentRequiresOutput {
	return o
}

// The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
func (o DocumentRequiresOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentRequires) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The document version required by the current document.
func (o DocumentRequiresOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentRequires) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DocumentRequiresArrayOutput struct{ *pulumi.OutputState }

func (DocumentRequiresArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentRequires)(nil)).Elem()
}

func (o DocumentRequiresArrayOutput) ToDocumentRequiresArrayOutput() DocumentRequiresArrayOutput {
	return o
}

func (o DocumentRequiresArrayOutput) ToDocumentRequiresArrayOutputWithContext(ctx context.Context) DocumentRequiresArrayOutput {
	return o
}

func (o DocumentRequiresArrayOutput) Index(i pulumi.IntInput) DocumentRequiresOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentRequires {
		return vs[0].([]DocumentRequires)[vs[1].(int)]
	}).(DocumentRequiresOutput)
}

type DocumentTag struct {
	// The name of the tag.
	Key *string `pulumi:"key"`
	// The value of the tag.
	Value *string `pulumi:"value"`
}

// Defines which patches should be included in a patch baseline.
type PatchBaselinePatchFilter struct {
	// The key for the filter.
	//
	// For information about valid keys, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Key *PatchBaselinePatchFilterKey `pulumi:"key"`
	// The value for the filter key.
	//
	// For information about valid values for each key based on operating system type, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Values []string `pulumi:"values"`
}

// PatchBaselinePatchFilterInput is an input type that accepts PatchBaselinePatchFilterArgs and PatchBaselinePatchFilterOutput values.
// You can construct a concrete instance of `PatchBaselinePatchFilterInput` via:
//
//	PatchBaselinePatchFilterArgs{...}
type PatchBaselinePatchFilterInput interface {
	pulumi.Input

	ToPatchBaselinePatchFilterOutput() PatchBaselinePatchFilterOutput
	ToPatchBaselinePatchFilterOutputWithContext(context.Context) PatchBaselinePatchFilterOutput
}

// Defines which patches should be included in a patch baseline.
type PatchBaselinePatchFilterArgs struct {
	// The key for the filter.
	//
	// For information about valid keys, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Key PatchBaselinePatchFilterKeyPtrInput `pulumi:"key"`
	// The value for the filter key.
	//
	// For information about valid values for each key based on operating system type, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PatchBaselinePatchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchFilter)(nil)).Elem()
}

func (i PatchBaselinePatchFilterArgs) ToPatchBaselinePatchFilterOutput() PatchBaselinePatchFilterOutput {
	return i.ToPatchBaselinePatchFilterOutputWithContext(context.Background())
}

func (i PatchBaselinePatchFilterArgs) ToPatchBaselinePatchFilterOutputWithContext(ctx context.Context) PatchBaselinePatchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchFilterOutput)
}

// PatchBaselinePatchFilterArrayInput is an input type that accepts PatchBaselinePatchFilterArray and PatchBaselinePatchFilterArrayOutput values.
// You can construct a concrete instance of `PatchBaselinePatchFilterArrayInput` via:
//
//	PatchBaselinePatchFilterArray{ PatchBaselinePatchFilterArgs{...} }
type PatchBaselinePatchFilterArrayInput interface {
	pulumi.Input

	ToPatchBaselinePatchFilterArrayOutput() PatchBaselinePatchFilterArrayOutput
	ToPatchBaselinePatchFilterArrayOutputWithContext(context.Context) PatchBaselinePatchFilterArrayOutput
}

type PatchBaselinePatchFilterArray []PatchBaselinePatchFilterInput

func (PatchBaselinePatchFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselinePatchFilter)(nil)).Elem()
}

func (i PatchBaselinePatchFilterArray) ToPatchBaselinePatchFilterArrayOutput() PatchBaselinePatchFilterArrayOutput {
	return i.ToPatchBaselinePatchFilterArrayOutputWithContext(context.Background())
}

func (i PatchBaselinePatchFilterArray) ToPatchBaselinePatchFilterArrayOutputWithContext(ctx context.Context) PatchBaselinePatchFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchFilterArrayOutput)
}

// Defines which patches should be included in a patch baseline.
type PatchBaselinePatchFilterOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchFilter)(nil)).Elem()
}

func (o PatchBaselinePatchFilterOutput) ToPatchBaselinePatchFilterOutput() PatchBaselinePatchFilterOutput {
	return o
}

func (o PatchBaselinePatchFilterOutput) ToPatchBaselinePatchFilterOutputWithContext(ctx context.Context) PatchBaselinePatchFilterOutput {
	return o
}

// The key for the filter.
//
// For information about valid keys, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
func (o PatchBaselinePatchFilterOutput) Key() PatchBaselinePatchFilterKeyPtrOutput {
	return o.ApplyT(func(v PatchBaselinePatchFilter) *PatchBaselinePatchFilterKey { return v.Key }).(PatchBaselinePatchFilterKeyPtrOutput)
}

// The value for the filter key.
//
// For information about valid values for each key based on operating system type, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
func (o PatchBaselinePatchFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchBaselinePatchFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PatchBaselinePatchFilterArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselinePatchFilter)(nil)).Elem()
}

func (o PatchBaselinePatchFilterArrayOutput) ToPatchBaselinePatchFilterArrayOutput() PatchBaselinePatchFilterArrayOutput {
	return o
}

func (o PatchBaselinePatchFilterArrayOutput) ToPatchBaselinePatchFilterArrayOutputWithContext(ctx context.Context) PatchBaselinePatchFilterArrayOutput {
	return o
}

func (o PatchBaselinePatchFilterArrayOutput) Index(i pulumi.IntInput) PatchBaselinePatchFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselinePatchFilter {
		return vs[0].([]PatchBaselinePatchFilter)[vs[1].(int)]
	}).(PatchBaselinePatchFilterOutput)
}

// The patch filter group that defines the criteria for the rule.
type PatchBaselinePatchFilterGroup struct {
	// The set of patch filters that make up the group.
	PatchFilters []PatchBaselinePatchFilter `pulumi:"patchFilters"`
}

// PatchBaselinePatchFilterGroupInput is an input type that accepts PatchBaselinePatchFilterGroupArgs and PatchBaselinePatchFilterGroupOutput values.
// You can construct a concrete instance of `PatchBaselinePatchFilterGroupInput` via:
//
//	PatchBaselinePatchFilterGroupArgs{...}
type PatchBaselinePatchFilterGroupInput interface {
	pulumi.Input

	ToPatchBaselinePatchFilterGroupOutput() PatchBaselinePatchFilterGroupOutput
	ToPatchBaselinePatchFilterGroupOutputWithContext(context.Context) PatchBaselinePatchFilterGroupOutput
}

// The patch filter group that defines the criteria for the rule.
type PatchBaselinePatchFilterGroupArgs struct {
	// The set of patch filters that make up the group.
	PatchFilters PatchBaselinePatchFilterArrayInput `pulumi:"patchFilters"`
}

func (PatchBaselinePatchFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchFilterGroup)(nil)).Elem()
}

func (i PatchBaselinePatchFilterGroupArgs) ToPatchBaselinePatchFilterGroupOutput() PatchBaselinePatchFilterGroupOutput {
	return i.ToPatchBaselinePatchFilterGroupOutputWithContext(context.Background())
}

func (i PatchBaselinePatchFilterGroupArgs) ToPatchBaselinePatchFilterGroupOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchFilterGroupOutput)
}

func (i PatchBaselinePatchFilterGroupArgs) ToPatchBaselinePatchFilterGroupPtrOutput() PatchBaselinePatchFilterGroupPtrOutput {
	return i.ToPatchBaselinePatchFilterGroupPtrOutputWithContext(context.Background())
}

func (i PatchBaselinePatchFilterGroupArgs) ToPatchBaselinePatchFilterGroupPtrOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchFilterGroupOutput).ToPatchBaselinePatchFilterGroupPtrOutputWithContext(ctx)
}

// PatchBaselinePatchFilterGroupPtrInput is an input type that accepts PatchBaselinePatchFilterGroupArgs, PatchBaselinePatchFilterGroupPtr and PatchBaselinePatchFilterGroupPtrOutput values.
// You can construct a concrete instance of `PatchBaselinePatchFilterGroupPtrInput` via:
//
//	        PatchBaselinePatchFilterGroupArgs{...}
//
//	or:
//
//	        nil
type PatchBaselinePatchFilterGroupPtrInput interface {
	pulumi.Input

	ToPatchBaselinePatchFilterGroupPtrOutput() PatchBaselinePatchFilterGroupPtrOutput
	ToPatchBaselinePatchFilterGroupPtrOutputWithContext(context.Context) PatchBaselinePatchFilterGroupPtrOutput
}

type patchBaselinePatchFilterGroupPtrType PatchBaselinePatchFilterGroupArgs

func PatchBaselinePatchFilterGroupPtr(v *PatchBaselinePatchFilterGroupArgs) PatchBaselinePatchFilterGroupPtrInput {
	return (*patchBaselinePatchFilterGroupPtrType)(v)
}

func (*patchBaselinePatchFilterGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaselinePatchFilterGroup)(nil)).Elem()
}

func (i *patchBaselinePatchFilterGroupPtrType) ToPatchBaselinePatchFilterGroupPtrOutput() PatchBaselinePatchFilterGroupPtrOutput {
	return i.ToPatchBaselinePatchFilterGroupPtrOutputWithContext(context.Background())
}

func (i *patchBaselinePatchFilterGroupPtrType) ToPatchBaselinePatchFilterGroupPtrOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchFilterGroupPtrOutput)
}

// The patch filter group that defines the criteria for the rule.
type PatchBaselinePatchFilterGroupOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchFilterGroup)(nil)).Elem()
}

func (o PatchBaselinePatchFilterGroupOutput) ToPatchBaselinePatchFilterGroupOutput() PatchBaselinePatchFilterGroupOutput {
	return o
}

func (o PatchBaselinePatchFilterGroupOutput) ToPatchBaselinePatchFilterGroupOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupOutput {
	return o
}

func (o PatchBaselinePatchFilterGroupOutput) ToPatchBaselinePatchFilterGroupPtrOutput() PatchBaselinePatchFilterGroupPtrOutput {
	return o.ToPatchBaselinePatchFilterGroupPtrOutputWithContext(context.Background())
}

func (o PatchBaselinePatchFilterGroupOutput) ToPatchBaselinePatchFilterGroupPtrOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchBaselinePatchFilterGroup) *PatchBaselinePatchFilterGroup {
		return &v
	}).(PatchBaselinePatchFilterGroupPtrOutput)
}

// The set of patch filters that make up the group.
func (o PatchBaselinePatchFilterGroupOutput) PatchFilters() PatchBaselinePatchFilterArrayOutput {
	return o.ApplyT(func(v PatchBaselinePatchFilterGroup) []PatchBaselinePatchFilter { return v.PatchFilters }).(PatchBaselinePatchFilterArrayOutput)
}

type PatchBaselinePatchFilterGroupPtrOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchFilterGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaselinePatchFilterGroup)(nil)).Elem()
}

func (o PatchBaselinePatchFilterGroupPtrOutput) ToPatchBaselinePatchFilterGroupPtrOutput() PatchBaselinePatchFilterGroupPtrOutput {
	return o
}

func (o PatchBaselinePatchFilterGroupPtrOutput) ToPatchBaselinePatchFilterGroupPtrOutputWithContext(ctx context.Context) PatchBaselinePatchFilterGroupPtrOutput {
	return o
}

func (o PatchBaselinePatchFilterGroupPtrOutput) Elem() PatchBaselinePatchFilterGroupOutput {
	return o.ApplyT(func(v *PatchBaselinePatchFilterGroup) PatchBaselinePatchFilterGroup {
		if v != nil {
			return *v
		}
		var ret PatchBaselinePatchFilterGroup
		return ret
	}).(PatchBaselinePatchFilterGroupOutput)
}

// The set of patch filters that make up the group.
func (o PatchBaselinePatchFilterGroupPtrOutput) PatchFilters() PatchBaselinePatchFilterArrayOutput {
	return o.ApplyT(func(v *PatchBaselinePatchFilterGroup) []PatchBaselinePatchFilter {
		if v == nil {
			return nil
		}
		return v.PatchFilters
	}).(PatchBaselinePatchFilterArrayOutput)
}

// Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
type PatchBaselinePatchSource struct {
	// The value of the repo configuration.
	//
	// *Example for yum repositories*
	//
	// `[main]`
	//
	// `name=MyCustomRepository`
	//
	// `baseurl=https://my-custom-repository`
	//
	// `enabled=1`
	//
	// For information about other options available for your yum repository configuration, see [dnf.conf(5)](https://docs.aws.amazon.com/https://man7.org/linux/man-pages/man5/dnf.conf.5.html) on the *man7.org* website.
	//
	// *Examples for Ubuntu Server and Debian Server*
	//
	// `deb http://security.ubuntu.com/ubuntu jammy main`
	//
	// `deb https://site.example.com/debian distribution component1 component2 component3`
	//
	// Repo information for Ubuntu Server repositories must be specifed in a single line. For more examples and information, see [jammy (5) sources.list.5.gz](https://docs.aws.amazon.com/https://manpages.ubuntu.com/manpages/jammy/man5/sources.list.5.html) on the *Ubuntu Server Manuals* website and [sources.list format](https://docs.aws.amazon.com/https://wiki.debian.org/SourcesList#sources.list_format) on the *Debian Wiki* .
	Configuration *string `pulumi:"configuration"`
	// The name specified to identify the patch source.
	Name *string `pulumi:"name"`
	// The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Products []string `pulumi:"products"`
}

// PatchBaselinePatchSourceInput is an input type that accepts PatchBaselinePatchSourceArgs and PatchBaselinePatchSourceOutput values.
// You can construct a concrete instance of `PatchBaselinePatchSourceInput` via:
//
//	PatchBaselinePatchSourceArgs{...}
type PatchBaselinePatchSourceInput interface {
	pulumi.Input

	ToPatchBaselinePatchSourceOutput() PatchBaselinePatchSourceOutput
	ToPatchBaselinePatchSourceOutputWithContext(context.Context) PatchBaselinePatchSourceOutput
}

// Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
type PatchBaselinePatchSourceArgs struct {
	// The value of the repo configuration.
	//
	// *Example for yum repositories*
	//
	// `[main]`
	//
	// `name=MyCustomRepository`
	//
	// `baseurl=https://my-custom-repository`
	//
	// `enabled=1`
	//
	// For information about other options available for your yum repository configuration, see [dnf.conf(5)](https://docs.aws.amazon.com/https://man7.org/linux/man-pages/man5/dnf.conf.5.html) on the *man7.org* website.
	//
	// *Examples for Ubuntu Server and Debian Server*
	//
	// `deb http://security.ubuntu.com/ubuntu jammy main`
	//
	// `deb https://site.example.com/debian distribution component1 component2 component3`
	//
	// Repo information for Ubuntu Server repositories must be specifed in a single line. For more examples and information, see [jammy (5) sources.list.5.gz](https://docs.aws.amazon.com/https://manpages.ubuntu.com/manpages/jammy/man5/sources.list.5.html) on the *Ubuntu Server Manuals* website and [sources.list format](https://docs.aws.amazon.com/https://wiki.debian.org/SourcesList#sources.list_format) on the *Debian Wiki* .
	Configuration pulumi.StringPtrInput `pulumi:"configuration"`
	// The name specified to identify the patch source.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
	Products pulumi.StringArrayInput `pulumi:"products"`
}

func (PatchBaselinePatchSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchSource)(nil)).Elem()
}

func (i PatchBaselinePatchSourceArgs) ToPatchBaselinePatchSourceOutput() PatchBaselinePatchSourceOutput {
	return i.ToPatchBaselinePatchSourceOutputWithContext(context.Background())
}

func (i PatchBaselinePatchSourceArgs) ToPatchBaselinePatchSourceOutputWithContext(ctx context.Context) PatchBaselinePatchSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchSourceOutput)
}

// PatchBaselinePatchSourceArrayInput is an input type that accepts PatchBaselinePatchSourceArray and PatchBaselinePatchSourceArrayOutput values.
// You can construct a concrete instance of `PatchBaselinePatchSourceArrayInput` via:
//
//	PatchBaselinePatchSourceArray{ PatchBaselinePatchSourceArgs{...} }
type PatchBaselinePatchSourceArrayInput interface {
	pulumi.Input

	ToPatchBaselinePatchSourceArrayOutput() PatchBaselinePatchSourceArrayOutput
	ToPatchBaselinePatchSourceArrayOutputWithContext(context.Context) PatchBaselinePatchSourceArrayOutput
}

type PatchBaselinePatchSourceArray []PatchBaselinePatchSourceInput

func (PatchBaselinePatchSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselinePatchSource)(nil)).Elem()
}

func (i PatchBaselinePatchSourceArray) ToPatchBaselinePatchSourceArrayOutput() PatchBaselinePatchSourceArrayOutput {
	return i.ToPatchBaselinePatchSourceArrayOutputWithContext(context.Background())
}

func (i PatchBaselinePatchSourceArray) ToPatchBaselinePatchSourceArrayOutputWithContext(ctx context.Context) PatchBaselinePatchSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselinePatchSourceArrayOutput)
}

// Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
type PatchBaselinePatchSourceOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselinePatchSource)(nil)).Elem()
}

func (o PatchBaselinePatchSourceOutput) ToPatchBaselinePatchSourceOutput() PatchBaselinePatchSourceOutput {
	return o
}

func (o PatchBaselinePatchSourceOutput) ToPatchBaselinePatchSourceOutputWithContext(ctx context.Context) PatchBaselinePatchSourceOutput {
	return o
}

// The value of the repo configuration.
//
// *Example for yum repositories*
//
// `[main]`
//
// `name=MyCustomRepository`
//
// `baseurl=https://my-custom-repository`
//
// `enabled=1`
//
// For information about other options available for your yum repository configuration, see [dnf.conf(5)](https://docs.aws.amazon.com/https://man7.org/linux/man-pages/man5/dnf.conf.5.html) on the *man7.org* website.
//
// *Examples for Ubuntu Server and Debian Server*
//
// `deb http://security.ubuntu.com/ubuntu jammy main`
//
// `deb https://site.example.com/debian distribution component1 component2 component3`
//
// Repo information for Ubuntu Server repositories must be specifed in a single line. For more examples and information, see [jammy (5) sources.list.5.gz](https://docs.aws.amazon.com/https://manpages.ubuntu.com/manpages/jammy/man5/sources.list.5.html) on the *Ubuntu Server Manuals* website and [sources.list format](https://docs.aws.amazon.com/https://wiki.debian.org/SourcesList#sources.list_format) on the *Debian Wiki* .
func (o PatchBaselinePatchSourceOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchBaselinePatchSource) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// The name specified to identify the patch source.
func (o PatchBaselinePatchSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchBaselinePatchSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html) in the *AWS Systems Manager API Reference* .
func (o PatchBaselinePatchSourceOutput) Products() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchBaselinePatchSource) []string { return v.Products }).(pulumi.StringArrayOutput)
}

type PatchBaselinePatchSourceArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselinePatchSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselinePatchSource)(nil)).Elem()
}

func (o PatchBaselinePatchSourceArrayOutput) ToPatchBaselinePatchSourceArrayOutput() PatchBaselinePatchSourceArrayOutput {
	return o
}

func (o PatchBaselinePatchSourceArrayOutput) ToPatchBaselinePatchSourceArrayOutputWithContext(ctx context.Context) PatchBaselinePatchSourceArrayOutput {
	return o
}

func (o PatchBaselinePatchSourceArrayOutput) Index(i pulumi.IntInput) PatchBaselinePatchSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselinePatchSource {
		return vs[0].([]PatchBaselinePatchSource)[vs[1].(int)]
	}).(PatchBaselinePatchSourceOutput)
}

// Defines an approval rule for a patch baseline.
type PatchBaselineRule struct {
	// The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of `7` means that patches are approved seven days after they are released.
	//
	// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveAfterDays` or `ApproveUntilDate` .
	//
	// Not supported for Debian Server or Ubuntu Server.
	//
	// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
	ApproveAfterDays *int `pulumi:"approveAfterDays"`
	// The cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically.
	//
	// Enter dates in the format `YYYY-MM-DD` . For example, `2024-12-31` .
	//
	// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveUntilDate` or `ApproveAfterDays` .
	//
	// Not supported for Debian Server or Ubuntu Server.
	//
	// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
	ApproveUntilDate *string `pulumi:"approveUntilDate"`
	// A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: `UNSPECIFIED` , `CRITICAL` , `HIGH` , `MEDIUM` , `LOW` , and `INFORMATIONAL` .
	ComplianceLevel *PatchBaselineRuleComplianceLevel `pulumi:"complianceLevel"`
	// For managed nodes identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is `false` . Applies to Linux managed nodes only.
	EnableNonSecurity *bool `pulumi:"enableNonSecurity"`
	// The patch filter group that defines the criteria for the rule.
	PatchFilterGroup *PatchBaselinePatchFilterGroup `pulumi:"patchFilterGroup"`
}

// PatchBaselineRuleInput is an input type that accepts PatchBaselineRuleArgs and PatchBaselineRuleOutput values.
// You can construct a concrete instance of `PatchBaselineRuleInput` via:
//
//	PatchBaselineRuleArgs{...}
type PatchBaselineRuleInput interface {
	pulumi.Input

	ToPatchBaselineRuleOutput() PatchBaselineRuleOutput
	ToPatchBaselineRuleOutputWithContext(context.Context) PatchBaselineRuleOutput
}

// Defines an approval rule for a patch baseline.
type PatchBaselineRuleArgs struct {
	// The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of `7` means that patches are approved seven days after they are released.
	//
	// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveAfterDays` or `ApproveUntilDate` .
	//
	// Not supported for Debian Server or Ubuntu Server.
	//
	// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
	ApproveAfterDays pulumi.IntPtrInput `pulumi:"approveAfterDays"`
	// The cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically.
	//
	// Enter dates in the format `YYYY-MM-DD` . For example, `2024-12-31` .
	//
	// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveUntilDate` or `ApproveAfterDays` .
	//
	// Not supported for Debian Server or Ubuntu Server.
	//
	// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
	ApproveUntilDate pulumi.StringPtrInput `pulumi:"approveUntilDate"`
	// A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: `UNSPECIFIED` , `CRITICAL` , `HIGH` , `MEDIUM` , `LOW` , and `INFORMATIONAL` .
	ComplianceLevel PatchBaselineRuleComplianceLevelPtrInput `pulumi:"complianceLevel"`
	// For managed nodes identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is `false` . Applies to Linux managed nodes only.
	EnableNonSecurity pulumi.BoolPtrInput `pulumi:"enableNonSecurity"`
	// The patch filter group that defines the criteria for the rule.
	PatchFilterGroup PatchBaselinePatchFilterGroupPtrInput `pulumi:"patchFilterGroup"`
}

func (PatchBaselineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineRule)(nil)).Elem()
}

func (i PatchBaselineRuleArgs) ToPatchBaselineRuleOutput() PatchBaselineRuleOutput {
	return i.ToPatchBaselineRuleOutputWithContext(context.Background())
}

func (i PatchBaselineRuleArgs) ToPatchBaselineRuleOutputWithContext(ctx context.Context) PatchBaselineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineRuleOutput)
}

// PatchBaselineRuleArrayInput is an input type that accepts PatchBaselineRuleArray and PatchBaselineRuleArrayOutput values.
// You can construct a concrete instance of `PatchBaselineRuleArrayInput` via:
//
//	PatchBaselineRuleArray{ PatchBaselineRuleArgs{...} }
type PatchBaselineRuleArrayInput interface {
	pulumi.Input

	ToPatchBaselineRuleArrayOutput() PatchBaselineRuleArrayOutput
	ToPatchBaselineRuleArrayOutputWithContext(context.Context) PatchBaselineRuleArrayOutput
}

type PatchBaselineRuleArray []PatchBaselineRuleInput

func (PatchBaselineRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineRule)(nil)).Elem()
}

func (i PatchBaselineRuleArray) ToPatchBaselineRuleArrayOutput() PatchBaselineRuleArrayOutput {
	return i.ToPatchBaselineRuleArrayOutputWithContext(context.Background())
}

func (i PatchBaselineRuleArray) ToPatchBaselineRuleArrayOutputWithContext(ctx context.Context) PatchBaselineRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineRuleArrayOutput)
}

// Defines an approval rule for a patch baseline.
type PatchBaselineRuleOutput struct{ *pulumi.OutputState }

func (PatchBaselineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineRule)(nil)).Elem()
}

func (o PatchBaselineRuleOutput) ToPatchBaselineRuleOutput() PatchBaselineRuleOutput {
	return o
}

func (o PatchBaselineRuleOutput) ToPatchBaselineRuleOutputWithContext(ctx context.Context) PatchBaselineRuleOutput {
	return o
}

// The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of `7` means that patches are approved seven days after they are released.
//
// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveAfterDays` or `ApproveUntilDate` .
//
// Not supported for Debian Server or Ubuntu Server.
//
// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
func (o PatchBaselineRuleOutput) ApproveAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchBaselineRule) *int { return v.ApproveAfterDays }).(pulumi.IntPtrOutput)
}

// The cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically.
//
// Enter dates in the format `YYYY-MM-DD` . For example, `2024-12-31` .
//
// This parameter is marked as `Required: No` , but your request must include a value for either `ApproveUntilDate` or `ApproveAfterDays` .
//
// Not supported for Debian Server or Ubuntu Server.
//
// > Use caution when setting this value for Windows Server patch baselines. Because patch updates that are replaced by later updates are removed, setting too broad a value for this parameter can result in crucial patches not being installed. For more information, see the *Windows Server* tab in the topic [How security patches are selected](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-selecting-patches.html) in the *AWS Systems Manager User Guide* .
func (o PatchBaselineRuleOutput) ApproveUntilDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchBaselineRule) *string { return v.ApproveUntilDate }).(pulumi.StringPtrOutput)
}

// A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: `UNSPECIFIED` , `CRITICAL` , `HIGH` , `MEDIUM` , `LOW` , and `INFORMATIONAL` .
func (o PatchBaselineRuleOutput) ComplianceLevel() PatchBaselineRuleComplianceLevelPtrOutput {
	return o.ApplyT(func(v PatchBaselineRule) *PatchBaselineRuleComplianceLevel { return v.ComplianceLevel }).(PatchBaselineRuleComplianceLevelPtrOutput)
}

// For managed nodes identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is `false` . Applies to Linux managed nodes only.
func (o PatchBaselineRuleOutput) EnableNonSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchBaselineRule) *bool { return v.EnableNonSecurity }).(pulumi.BoolPtrOutput)
}

// The patch filter group that defines the criteria for the rule.
func (o PatchBaselineRuleOutput) PatchFilterGroup() PatchBaselinePatchFilterGroupPtrOutput {
	return o.ApplyT(func(v PatchBaselineRule) *PatchBaselinePatchFilterGroup { return v.PatchFilterGroup }).(PatchBaselinePatchFilterGroupPtrOutput)
}

type PatchBaselineRuleArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselineRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineRule)(nil)).Elem()
}

func (o PatchBaselineRuleArrayOutput) ToPatchBaselineRuleArrayOutput() PatchBaselineRuleArrayOutput {
	return o
}

func (o PatchBaselineRuleArrayOutput) ToPatchBaselineRuleArrayOutputWithContext(ctx context.Context) PatchBaselineRuleArrayOutput {
	return o
}

func (o PatchBaselineRuleArrayOutput) Index(i pulumi.IntInput) PatchBaselineRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselineRule {
		return vs[0].([]PatchBaselineRule)[vs[1].(int)]
	}).(PatchBaselineRuleOutput)
}

// A set of rules defining the approval rules for a patch baseline.
type PatchBaselineRuleGroup struct {
	// The rules that make up the rule group.
	PatchRules []PatchBaselineRule `pulumi:"patchRules"`
}

// PatchBaselineRuleGroupInput is an input type that accepts PatchBaselineRuleGroupArgs and PatchBaselineRuleGroupOutput values.
// You can construct a concrete instance of `PatchBaselineRuleGroupInput` via:
//
//	PatchBaselineRuleGroupArgs{...}
type PatchBaselineRuleGroupInput interface {
	pulumi.Input

	ToPatchBaselineRuleGroupOutput() PatchBaselineRuleGroupOutput
	ToPatchBaselineRuleGroupOutputWithContext(context.Context) PatchBaselineRuleGroupOutput
}

// A set of rules defining the approval rules for a patch baseline.
type PatchBaselineRuleGroupArgs struct {
	// The rules that make up the rule group.
	PatchRules PatchBaselineRuleArrayInput `pulumi:"patchRules"`
}

func (PatchBaselineRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineRuleGroup)(nil)).Elem()
}

func (i PatchBaselineRuleGroupArgs) ToPatchBaselineRuleGroupOutput() PatchBaselineRuleGroupOutput {
	return i.ToPatchBaselineRuleGroupOutputWithContext(context.Background())
}

func (i PatchBaselineRuleGroupArgs) ToPatchBaselineRuleGroupOutputWithContext(ctx context.Context) PatchBaselineRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineRuleGroupOutput)
}

func (i PatchBaselineRuleGroupArgs) ToPatchBaselineRuleGroupPtrOutput() PatchBaselineRuleGroupPtrOutput {
	return i.ToPatchBaselineRuleGroupPtrOutputWithContext(context.Background())
}

func (i PatchBaselineRuleGroupArgs) ToPatchBaselineRuleGroupPtrOutputWithContext(ctx context.Context) PatchBaselineRuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineRuleGroupOutput).ToPatchBaselineRuleGroupPtrOutputWithContext(ctx)
}

// PatchBaselineRuleGroupPtrInput is an input type that accepts PatchBaselineRuleGroupArgs, PatchBaselineRuleGroupPtr and PatchBaselineRuleGroupPtrOutput values.
// You can construct a concrete instance of `PatchBaselineRuleGroupPtrInput` via:
//
//	        PatchBaselineRuleGroupArgs{...}
//
//	or:
//
//	        nil
type PatchBaselineRuleGroupPtrInput interface {
	pulumi.Input

	ToPatchBaselineRuleGroupPtrOutput() PatchBaselineRuleGroupPtrOutput
	ToPatchBaselineRuleGroupPtrOutputWithContext(context.Context) PatchBaselineRuleGroupPtrOutput
}

type patchBaselineRuleGroupPtrType PatchBaselineRuleGroupArgs

func PatchBaselineRuleGroupPtr(v *PatchBaselineRuleGroupArgs) PatchBaselineRuleGroupPtrInput {
	return (*patchBaselineRuleGroupPtrType)(v)
}

func (*patchBaselineRuleGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaselineRuleGroup)(nil)).Elem()
}

func (i *patchBaselineRuleGroupPtrType) ToPatchBaselineRuleGroupPtrOutput() PatchBaselineRuleGroupPtrOutput {
	return i.ToPatchBaselineRuleGroupPtrOutputWithContext(context.Background())
}

func (i *patchBaselineRuleGroupPtrType) ToPatchBaselineRuleGroupPtrOutputWithContext(ctx context.Context) PatchBaselineRuleGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineRuleGroupPtrOutput)
}

// A set of rules defining the approval rules for a patch baseline.
type PatchBaselineRuleGroupOutput struct{ *pulumi.OutputState }

func (PatchBaselineRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineRuleGroup)(nil)).Elem()
}

func (o PatchBaselineRuleGroupOutput) ToPatchBaselineRuleGroupOutput() PatchBaselineRuleGroupOutput {
	return o
}

func (o PatchBaselineRuleGroupOutput) ToPatchBaselineRuleGroupOutputWithContext(ctx context.Context) PatchBaselineRuleGroupOutput {
	return o
}

func (o PatchBaselineRuleGroupOutput) ToPatchBaselineRuleGroupPtrOutput() PatchBaselineRuleGroupPtrOutput {
	return o.ToPatchBaselineRuleGroupPtrOutputWithContext(context.Background())
}

func (o PatchBaselineRuleGroupOutput) ToPatchBaselineRuleGroupPtrOutputWithContext(ctx context.Context) PatchBaselineRuleGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PatchBaselineRuleGroup) *PatchBaselineRuleGroup {
		return &v
	}).(PatchBaselineRuleGroupPtrOutput)
}

// The rules that make up the rule group.
func (o PatchBaselineRuleGroupOutput) PatchRules() PatchBaselineRuleArrayOutput {
	return o.ApplyT(func(v PatchBaselineRuleGroup) []PatchBaselineRule { return v.PatchRules }).(PatchBaselineRuleArrayOutput)
}

type PatchBaselineRuleGroupPtrOutput struct{ *pulumi.OutputState }

func (PatchBaselineRuleGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaselineRuleGroup)(nil)).Elem()
}

func (o PatchBaselineRuleGroupPtrOutput) ToPatchBaselineRuleGroupPtrOutput() PatchBaselineRuleGroupPtrOutput {
	return o
}

func (o PatchBaselineRuleGroupPtrOutput) ToPatchBaselineRuleGroupPtrOutputWithContext(ctx context.Context) PatchBaselineRuleGroupPtrOutput {
	return o
}

func (o PatchBaselineRuleGroupPtrOutput) Elem() PatchBaselineRuleGroupOutput {
	return o.ApplyT(func(v *PatchBaselineRuleGroup) PatchBaselineRuleGroup {
		if v != nil {
			return *v
		}
		var ret PatchBaselineRuleGroup
		return ret
	}).(PatchBaselineRuleGroupOutput)
}

// The rules that make up the rule group.
func (o PatchBaselineRuleGroupPtrOutput) PatchRules() PatchBaselineRuleArrayOutput {
	return o.ApplyT(func(v *PatchBaselineRuleGroup) []PatchBaselineRule {
		if v == nil {
			return nil
		}
		return v.PatchRules
	}).(PatchBaselineRuleArrayOutput)
}

// Metadata that you assign to your AWS resources.
type PatchBaselineTag struct {
	// The name of the tag.
	Key string `pulumi:"key"`
	// The value of the tag.
	Value string `pulumi:"value"`
}

type ResourceDataSyncAwsOrganizationsSource struct {
	// If an AWS organization is present, this is either `OrganizationalUnits` or `EntireOrganization` . For `OrganizationalUnits` , the data is aggregated from a set of organization units. For `EntireOrganization` , the data is aggregated from the entire AWS organization.
	OrganizationSourceType string `pulumi:"organizationSourceType"`
	// The AWS Organizations organization units included in the sync.
	OrganizationalUnits []string `pulumi:"organizationalUnits"`
}

// ResourceDataSyncAwsOrganizationsSourceInput is an input type that accepts ResourceDataSyncAwsOrganizationsSourceArgs and ResourceDataSyncAwsOrganizationsSourceOutput values.
// You can construct a concrete instance of `ResourceDataSyncAwsOrganizationsSourceInput` via:
//
//	ResourceDataSyncAwsOrganizationsSourceArgs{...}
type ResourceDataSyncAwsOrganizationsSourceInput interface {
	pulumi.Input

	ToResourceDataSyncAwsOrganizationsSourceOutput() ResourceDataSyncAwsOrganizationsSourceOutput
	ToResourceDataSyncAwsOrganizationsSourceOutputWithContext(context.Context) ResourceDataSyncAwsOrganizationsSourceOutput
}

type ResourceDataSyncAwsOrganizationsSourceArgs struct {
	// If an AWS organization is present, this is either `OrganizationalUnits` or `EntireOrganization` . For `OrganizationalUnits` , the data is aggregated from a set of organization units. For `EntireOrganization` , the data is aggregated from the entire AWS organization.
	OrganizationSourceType pulumi.StringInput `pulumi:"organizationSourceType"`
	// The AWS Organizations organization units included in the sync.
	OrganizationalUnits pulumi.StringArrayInput `pulumi:"organizationalUnits"`
}

func (ResourceDataSyncAwsOrganizationsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncAwsOrganizationsSource)(nil)).Elem()
}

func (i ResourceDataSyncAwsOrganizationsSourceArgs) ToResourceDataSyncAwsOrganizationsSourceOutput() ResourceDataSyncAwsOrganizationsSourceOutput {
	return i.ToResourceDataSyncAwsOrganizationsSourceOutputWithContext(context.Background())
}

func (i ResourceDataSyncAwsOrganizationsSourceArgs) ToResourceDataSyncAwsOrganizationsSourceOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncAwsOrganizationsSourceOutput)
}

func (i ResourceDataSyncAwsOrganizationsSourceArgs) ToResourceDataSyncAwsOrganizationsSourcePtrOutput() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return i.ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(context.Background())
}

func (i ResourceDataSyncAwsOrganizationsSourceArgs) ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncAwsOrganizationsSourceOutput).ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(ctx)
}

// ResourceDataSyncAwsOrganizationsSourcePtrInput is an input type that accepts ResourceDataSyncAwsOrganizationsSourceArgs, ResourceDataSyncAwsOrganizationsSourcePtr and ResourceDataSyncAwsOrganizationsSourcePtrOutput values.
// You can construct a concrete instance of `ResourceDataSyncAwsOrganizationsSourcePtrInput` via:
//
//	        ResourceDataSyncAwsOrganizationsSourceArgs{...}
//
//	or:
//
//	        nil
type ResourceDataSyncAwsOrganizationsSourcePtrInput interface {
	pulumi.Input

	ToResourceDataSyncAwsOrganizationsSourcePtrOutput() ResourceDataSyncAwsOrganizationsSourcePtrOutput
	ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(context.Context) ResourceDataSyncAwsOrganizationsSourcePtrOutput
}

type resourceDataSyncAwsOrganizationsSourcePtrType ResourceDataSyncAwsOrganizationsSourceArgs

func ResourceDataSyncAwsOrganizationsSourcePtr(v *ResourceDataSyncAwsOrganizationsSourceArgs) ResourceDataSyncAwsOrganizationsSourcePtrInput {
	return (*resourceDataSyncAwsOrganizationsSourcePtrType)(v)
}

func (*resourceDataSyncAwsOrganizationsSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncAwsOrganizationsSource)(nil)).Elem()
}

func (i *resourceDataSyncAwsOrganizationsSourcePtrType) ToResourceDataSyncAwsOrganizationsSourcePtrOutput() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return i.ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(context.Background())
}

func (i *resourceDataSyncAwsOrganizationsSourcePtrType) ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncAwsOrganizationsSourcePtrOutput)
}

type ResourceDataSyncAwsOrganizationsSourceOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncAwsOrganizationsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncAwsOrganizationsSource)(nil)).Elem()
}

func (o ResourceDataSyncAwsOrganizationsSourceOutput) ToResourceDataSyncAwsOrganizationsSourceOutput() ResourceDataSyncAwsOrganizationsSourceOutput {
	return o
}

func (o ResourceDataSyncAwsOrganizationsSourceOutput) ToResourceDataSyncAwsOrganizationsSourceOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourceOutput {
	return o
}

func (o ResourceDataSyncAwsOrganizationsSourceOutput) ToResourceDataSyncAwsOrganizationsSourcePtrOutput() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o.ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(context.Background())
}

func (o ResourceDataSyncAwsOrganizationsSourceOutput) ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDataSyncAwsOrganizationsSource) *ResourceDataSyncAwsOrganizationsSource {
		return &v
	}).(ResourceDataSyncAwsOrganizationsSourcePtrOutput)
}

// If an AWS organization is present, this is either `OrganizationalUnits` or `EntireOrganization` . For `OrganizationalUnits` , the data is aggregated from a set of organization units. For `EntireOrganization` , the data is aggregated from the entire AWS organization.
func (o ResourceDataSyncAwsOrganizationsSourceOutput) OrganizationSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncAwsOrganizationsSource) string { return v.OrganizationSourceType }).(pulumi.StringOutput)
}

// The AWS Organizations organization units included in the sync.
func (o ResourceDataSyncAwsOrganizationsSourceOutput) OrganizationalUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceDataSyncAwsOrganizationsSource) []string { return v.OrganizationalUnits }).(pulumi.StringArrayOutput)
}

type ResourceDataSyncAwsOrganizationsSourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncAwsOrganizationsSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncAwsOrganizationsSource)(nil)).Elem()
}

func (o ResourceDataSyncAwsOrganizationsSourcePtrOutput) ToResourceDataSyncAwsOrganizationsSourcePtrOutput() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o
}

func (o ResourceDataSyncAwsOrganizationsSourcePtrOutput) ToResourceDataSyncAwsOrganizationsSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o
}

func (o ResourceDataSyncAwsOrganizationsSourcePtrOutput) Elem() ResourceDataSyncAwsOrganizationsSourceOutput {
	return o.ApplyT(func(v *ResourceDataSyncAwsOrganizationsSource) ResourceDataSyncAwsOrganizationsSource {
		if v != nil {
			return *v
		}
		var ret ResourceDataSyncAwsOrganizationsSource
		return ret
	}).(ResourceDataSyncAwsOrganizationsSourceOutput)
}

// If an AWS organization is present, this is either `OrganizationalUnits` or `EntireOrganization` . For `OrganizationalUnits` , the data is aggregated from a set of organization units. For `EntireOrganization` , the data is aggregated from the entire AWS organization.
func (o ResourceDataSyncAwsOrganizationsSourcePtrOutput) OrganizationSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncAwsOrganizationsSource) *string {
		if v == nil {
			return nil
		}
		return &v.OrganizationSourceType
	}).(pulumi.StringPtrOutput)
}

// The AWS Organizations organization units included in the sync.
func (o ResourceDataSyncAwsOrganizationsSourcePtrOutput) OrganizationalUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceDataSyncAwsOrganizationsSource) []string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnits
	}).(pulumi.StringArrayOutput)
}

type ResourceDataSyncS3Destination struct {
	// The name of the S3 bucket where the aggregated data is stored.
	BucketName string `pulumi:"bucketName"`
	// An Amazon S3 prefix for the bucket.
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// The AWS Region with the S3 bucket targeted by the resource data sync.
	BucketRegion string `pulumi:"bucketRegion"`
	// The ARN of an encryption key for a destination in Amazon S3. Must belong to the same Region as the destination S3 bucket.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// A supported sync format. The following format is currently supported: JsonSerDe
	SyncFormat string `pulumi:"syncFormat"`
}

// ResourceDataSyncS3DestinationInput is an input type that accepts ResourceDataSyncS3DestinationArgs and ResourceDataSyncS3DestinationOutput values.
// You can construct a concrete instance of `ResourceDataSyncS3DestinationInput` via:
//
//	ResourceDataSyncS3DestinationArgs{...}
type ResourceDataSyncS3DestinationInput interface {
	pulumi.Input

	ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput
	ToResourceDataSyncS3DestinationOutputWithContext(context.Context) ResourceDataSyncS3DestinationOutput
}

type ResourceDataSyncS3DestinationArgs struct {
	// The name of the S3 bucket where the aggregated data is stored.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// An Amazon S3 prefix for the bucket.
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// The AWS Region with the S3 bucket targeted by the resource data sync.
	BucketRegion pulumi.StringInput `pulumi:"bucketRegion"`
	// The ARN of an encryption key for a destination in Amazon S3. Must belong to the same Region as the destination S3 bucket.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// A supported sync format. The following format is currently supported: JsonSerDe
	SyncFormat pulumi.StringInput `pulumi:"syncFormat"`
}

func (ResourceDataSyncS3DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncS3Destination)(nil)).Elem()
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput {
	return i.ToResourceDataSyncS3DestinationOutputWithContext(context.Background())
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationOutput)
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return i.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationOutput).ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx)
}

// ResourceDataSyncS3DestinationPtrInput is an input type that accepts ResourceDataSyncS3DestinationArgs, ResourceDataSyncS3DestinationPtr and ResourceDataSyncS3DestinationPtrOutput values.
// You can construct a concrete instance of `ResourceDataSyncS3DestinationPtrInput` via:
//
//	        ResourceDataSyncS3DestinationArgs{...}
//
//	or:
//
//	        nil
type ResourceDataSyncS3DestinationPtrInput interface {
	pulumi.Input

	ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput
	ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Context) ResourceDataSyncS3DestinationPtrOutput
}

type resourceDataSyncS3DestinationPtrType ResourceDataSyncS3DestinationArgs

func ResourceDataSyncS3DestinationPtr(v *ResourceDataSyncS3DestinationArgs) ResourceDataSyncS3DestinationPtrInput {
	return (*resourceDataSyncS3DestinationPtrType)(v)
}

func (*resourceDataSyncS3DestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncS3Destination)(nil)).Elem()
}

func (i *resourceDataSyncS3DestinationPtrType) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return i.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (i *resourceDataSyncS3DestinationPtrType) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationPtrOutput)
}

type ResourceDataSyncS3DestinationOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncS3DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncS3Destination)(nil)).Elem()
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput {
	return o
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationOutput {
	return o
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return o.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDataSyncS3Destination) *ResourceDataSyncS3Destination {
		return &v
	}).(ResourceDataSyncS3DestinationPtrOutput)
}

// The name of the S3 bucket where the aggregated data is stored.
func (o ResourceDataSyncS3DestinationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) string { return v.BucketName }).(pulumi.StringOutput)
}

// An Amazon S3 prefix for the bucket.
func (o ResourceDataSyncS3DestinationOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// The AWS Region with the S3 bucket targeted by the resource data sync.
func (o ResourceDataSyncS3DestinationOutput) BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) string { return v.BucketRegion }).(pulumi.StringOutput)
}

// The ARN of an encryption key for a destination in Amazon S3. Must belong to the same Region as the destination S3 bucket.
func (o ResourceDataSyncS3DestinationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// A supported sync format. The following format is currently supported: JsonSerDe
func (o ResourceDataSyncS3DestinationOutput) SyncFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) string { return v.SyncFormat }).(pulumi.StringOutput)
}

type ResourceDataSyncS3DestinationPtrOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncS3DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncS3Destination)(nil)).Elem()
}

func (o ResourceDataSyncS3DestinationPtrOutput) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return o
}

func (o ResourceDataSyncS3DestinationPtrOutput) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return o
}

func (o ResourceDataSyncS3DestinationPtrOutput) Elem() ResourceDataSyncS3DestinationOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) ResourceDataSyncS3Destination {
		if v != nil {
			return *v
		}
		var ret ResourceDataSyncS3Destination
		return ret
	}).(ResourceDataSyncS3DestinationOutput)
}

// The name of the S3 bucket where the aggregated data is stored.
func (o ResourceDataSyncS3DestinationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// An Amazon S3 prefix for the bucket.
func (o ResourceDataSyncS3DestinationPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The AWS Region with the S3 bucket targeted by the resource data sync.
func (o ResourceDataSyncS3DestinationPtrOutput) BucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.BucketRegion
	}).(pulumi.StringPtrOutput)
}

// The ARN of an encryption key for a destination in Amazon S3. Must belong to the same Region as the destination S3 bucket.
func (o ResourceDataSyncS3DestinationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// A supported sync format. The following format is currently supported: JsonSerDe
func (o ResourceDataSyncS3DestinationPtrOutput) SyncFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.SyncFormat
	}).(pulumi.StringPtrOutput)
}

type ResourceDataSyncSyncSource struct {
	// Information about the AwsOrganizationsSource resource data sync source. A sync source of this type can synchronize data from AWS Organizations .
	AwsOrganizationsSource *ResourceDataSyncAwsOrganizationsSource `pulumi:"awsOrganizationsSource"`
	// Whether to automatically synchronize and aggregate data from new AWS Regions when those Regions come online.
	IncludeFutureRegions *bool `pulumi:"includeFutureRegions"`
	// The `SyncSource` AWS Regions included in the resource data sync.
	SourceRegions []string `pulumi:"sourceRegions"`
	// The type of data source for the resource data sync. `SourceType` is either `AwsOrganizations` (if an organization is present in AWS Organizations ) or `SingleAccountMultiRegions` .
	SourceType string `pulumi:"sourceType"`
}

// ResourceDataSyncSyncSourceInput is an input type that accepts ResourceDataSyncSyncSourceArgs and ResourceDataSyncSyncSourceOutput values.
// You can construct a concrete instance of `ResourceDataSyncSyncSourceInput` via:
//
//	ResourceDataSyncSyncSourceArgs{...}
type ResourceDataSyncSyncSourceInput interface {
	pulumi.Input

	ToResourceDataSyncSyncSourceOutput() ResourceDataSyncSyncSourceOutput
	ToResourceDataSyncSyncSourceOutputWithContext(context.Context) ResourceDataSyncSyncSourceOutput
}

type ResourceDataSyncSyncSourceArgs struct {
	// Information about the AwsOrganizationsSource resource data sync source. A sync source of this type can synchronize data from AWS Organizations .
	AwsOrganizationsSource ResourceDataSyncAwsOrganizationsSourcePtrInput `pulumi:"awsOrganizationsSource"`
	// Whether to automatically synchronize and aggregate data from new AWS Regions when those Regions come online.
	IncludeFutureRegions pulumi.BoolPtrInput `pulumi:"includeFutureRegions"`
	// The `SyncSource` AWS Regions included in the resource data sync.
	SourceRegions pulumi.StringArrayInput `pulumi:"sourceRegions"`
	// The type of data source for the resource data sync. `SourceType` is either `AwsOrganizations` (if an organization is present in AWS Organizations ) or `SingleAccountMultiRegions` .
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (ResourceDataSyncSyncSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncSyncSource)(nil)).Elem()
}

func (i ResourceDataSyncSyncSourceArgs) ToResourceDataSyncSyncSourceOutput() ResourceDataSyncSyncSourceOutput {
	return i.ToResourceDataSyncSyncSourceOutputWithContext(context.Background())
}

func (i ResourceDataSyncSyncSourceArgs) ToResourceDataSyncSyncSourceOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncSyncSourceOutput)
}

func (i ResourceDataSyncSyncSourceArgs) ToResourceDataSyncSyncSourcePtrOutput() ResourceDataSyncSyncSourcePtrOutput {
	return i.ToResourceDataSyncSyncSourcePtrOutputWithContext(context.Background())
}

func (i ResourceDataSyncSyncSourceArgs) ToResourceDataSyncSyncSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncSyncSourceOutput).ToResourceDataSyncSyncSourcePtrOutputWithContext(ctx)
}

// ResourceDataSyncSyncSourcePtrInput is an input type that accepts ResourceDataSyncSyncSourceArgs, ResourceDataSyncSyncSourcePtr and ResourceDataSyncSyncSourcePtrOutput values.
// You can construct a concrete instance of `ResourceDataSyncSyncSourcePtrInput` via:
//
//	        ResourceDataSyncSyncSourceArgs{...}
//
//	or:
//
//	        nil
type ResourceDataSyncSyncSourcePtrInput interface {
	pulumi.Input

	ToResourceDataSyncSyncSourcePtrOutput() ResourceDataSyncSyncSourcePtrOutput
	ToResourceDataSyncSyncSourcePtrOutputWithContext(context.Context) ResourceDataSyncSyncSourcePtrOutput
}

type resourceDataSyncSyncSourcePtrType ResourceDataSyncSyncSourceArgs

func ResourceDataSyncSyncSourcePtr(v *ResourceDataSyncSyncSourceArgs) ResourceDataSyncSyncSourcePtrInput {
	return (*resourceDataSyncSyncSourcePtrType)(v)
}

func (*resourceDataSyncSyncSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncSyncSource)(nil)).Elem()
}

func (i *resourceDataSyncSyncSourcePtrType) ToResourceDataSyncSyncSourcePtrOutput() ResourceDataSyncSyncSourcePtrOutput {
	return i.ToResourceDataSyncSyncSourcePtrOutputWithContext(context.Background())
}

func (i *resourceDataSyncSyncSourcePtrType) ToResourceDataSyncSyncSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncSyncSourcePtrOutput)
}

type ResourceDataSyncSyncSourceOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncSyncSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncSyncSource)(nil)).Elem()
}

func (o ResourceDataSyncSyncSourceOutput) ToResourceDataSyncSyncSourceOutput() ResourceDataSyncSyncSourceOutput {
	return o
}

func (o ResourceDataSyncSyncSourceOutput) ToResourceDataSyncSyncSourceOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourceOutput {
	return o
}

func (o ResourceDataSyncSyncSourceOutput) ToResourceDataSyncSyncSourcePtrOutput() ResourceDataSyncSyncSourcePtrOutput {
	return o.ToResourceDataSyncSyncSourcePtrOutputWithContext(context.Background())
}

func (o ResourceDataSyncSyncSourceOutput) ToResourceDataSyncSyncSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDataSyncSyncSource) *ResourceDataSyncSyncSource {
		return &v
	}).(ResourceDataSyncSyncSourcePtrOutput)
}

// Information about the AwsOrganizationsSource resource data sync source. A sync source of this type can synchronize data from AWS Organizations .
func (o ResourceDataSyncSyncSourceOutput) AwsOrganizationsSource() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o.ApplyT(func(v ResourceDataSyncSyncSource) *ResourceDataSyncAwsOrganizationsSource {
		return v.AwsOrganizationsSource
	}).(ResourceDataSyncAwsOrganizationsSourcePtrOutput)
}

// Whether to automatically synchronize and aggregate data from new AWS Regions when those Regions come online.
func (o ResourceDataSyncSyncSourceOutput) IncludeFutureRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncSyncSource) *bool { return v.IncludeFutureRegions }).(pulumi.BoolPtrOutput)
}

// The `SyncSource` AWS Regions included in the resource data sync.
func (o ResourceDataSyncSyncSourceOutput) SourceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceDataSyncSyncSource) []string { return v.SourceRegions }).(pulumi.StringArrayOutput)
}

// The type of data source for the resource data sync. `SourceType` is either `AwsOrganizations` (if an organization is present in AWS Organizations ) or `SingleAccountMultiRegions` .
func (o ResourceDataSyncSyncSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncSyncSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type ResourceDataSyncSyncSourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncSyncSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncSyncSource)(nil)).Elem()
}

func (o ResourceDataSyncSyncSourcePtrOutput) ToResourceDataSyncSyncSourcePtrOutput() ResourceDataSyncSyncSourcePtrOutput {
	return o
}

func (o ResourceDataSyncSyncSourcePtrOutput) ToResourceDataSyncSyncSourcePtrOutputWithContext(ctx context.Context) ResourceDataSyncSyncSourcePtrOutput {
	return o
}

func (o ResourceDataSyncSyncSourcePtrOutput) Elem() ResourceDataSyncSyncSourceOutput {
	return o.ApplyT(func(v *ResourceDataSyncSyncSource) ResourceDataSyncSyncSource {
		if v != nil {
			return *v
		}
		var ret ResourceDataSyncSyncSource
		return ret
	}).(ResourceDataSyncSyncSourceOutput)
}

// Information about the AwsOrganizationsSource resource data sync source. A sync source of this type can synchronize data from AWS Organizations .
func (o ResourceDataSyncSyncSourcePtrOutput) AwsOrganizationsSource() ResourceDataSyncAwsOrganizationsSourcePtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncSyncSource) *ResourceDataSyncAwsOrganizationsSource {
		if v == nil {
			return nil
		}
		return v.AwsOrganizationsSource
	}).(ResourceDataSyncAwsOrganizationsSourcePtrOutput)
}

// Whether to automatically synchronize and aggregate data from new AWS Regions when those Regions come online.
func (o ResourceDataSyncSyncSourcePtrOutput) IncludeFutureRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncSyncSource) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeFutureRegions
	}).(pulumi.BoolPtrOutput)
}

// The `SyncSource` AWS Regions included in the resource data sync.
func (o ResourceDataSyncSyncSourcePtrOutput) SourceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceDataSyncSyncSource) []string {
		if v == nil {
			return nil
		}
		return v.SourceRegions
	}).(pulumi.StringArrayOutput)
}

// The type of data source for the resource data sync. `SourceType` is either `AwsOrganizations` (if an organization is present in AWS Organizations ) or `SingleAccountMultiRegions` .
func (o ResourceDataSyncSyncSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncSyncSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationInstanceAssociationOutputLocationInput)(nil)).Elem(), AssociationInstanceAssociationOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationInstanceAssociationOutputLocationPtrInput)(nil)).Elem(), AssociationInstanceAssociationOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationS3OutputLocationInput)(nil)).Elem(), AssociationS3OutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationS3OutputLocationPtrInput)(nil)).Elem(), AssociationS3OutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationTargetInput)(nil)).Elem(), AssociationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationTargetArrayInput)(nil)).Elem(), AssociationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAttachmentsSourceInput)(nil)).Elem(), DocumentAttachmentsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAttachmentsSourceArrayInput)(nil)).Elem(), DocumentAttachmentsSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentRequiresInput)(nil)).Elem(), DocumentRequiresArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentRequiresArrayInput)(nil)).Elem(), DocumentRequiresArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchFilterInput)(nil)).Elem(), PatchBaselinePatchFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchFilterArrayInput)(nil)).Elem(), PatchBaselinePatchFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchFilterGroupInput)(nil)).Elem(), PatchBaselinePatchFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchFilterGroupPtrInput)(nil)).Elem(), PatchBaselinePatchFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchSourceInput)(nil)).Elem(), PatchBaselinePatchSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselinePatchSourceArrayInput)(nil)).Elem(), PatchBaselinePatchSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineRuleInput)(nil)).Elem(), PatchBaselineRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineRuleArrayInput)(nil)).Elem(), PatchBaselineRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineRuleGroupInput)(nil)).Elem(), PatchBaselineRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineRuleGroupPtrInput)(nil)).Elem(), PatchBaselineRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncAwsOrganizationsSourceInput)(nil)).Elem(), ResourceDataSyncAwsOrganizationsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncAwsOrganizationsSourcePtrInput)(nil)).Elem(), ResourceDataSyncAwsOrganizationsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncS3DestinationInput)(nil)).Elem(), ResourceDataSyncS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncS3DestinationPtrInput)(nil)).Elem(), ResourceDataSyncS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncSyncSourceInput)(nil)).Elem(), ResourceDataSyncSyncSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncSyncSourcePtrInput)(nil)).Elem(), ResourceDataSyncSyncSourceArgs{})
	pulumi.RegisterOutputType(AssociationInstanceAssociationOutputLocationOutput{})
	pulumi.RegisterOutputType(AssociationInstanceAssociationOutputLocationPtrOutput{})
	pulumi.RegisterOutputType(AssociationS3OutputLocationOutput{})
	pulumi.RegisterOutputType(AssociationS3OutputLocationPtrOutput{})
	pulumi.RegisterOutputType(AssociationTargetOutput{})
	pulumi.RegisterOutputType(AssociationTargetArrayOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceArrayOutput{})
	pulumi.RegisterOutputType(DocumentRequiresOutput{})
	pulumi.RegisterOutputType(DocumentRequiresArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchFilterOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchFilterArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchFilterGroupOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchFilterGroupPtrOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchSourceOutput{})
	pulumi.RegisterOutputType(PatchBaselinePatchSourceArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselineRuleOutput{})
	pulumi.RegisterOutputType(PatchBaselineRuleArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselineRuleGroupOutput{})
	pulumi.RegisterOutputType(PatchBaselineRuleGroupPtrOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncAwsOrganizationsSourceOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncAwsOrganizationsSourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncS3DestinationOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncS3DestinationPtrOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncSyncSourceOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncSyncSourcePtrOutput{})
}
