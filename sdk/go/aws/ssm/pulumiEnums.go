// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AssociationComplianceSeverity string

const (
	AssociationComplianceSeverityCritical    = AssociationComplianceSeverity("CRITICAL")
	AssociationComplianceSeverityHigh        = AssociationComplianceSeverity("HIGH")
	AssociationComplianceSeverityMedium      = AssociationComplianceSeverity("MEDIUM")
	AssociationComplianceSeverityLow         = AssociationComplianceSeverity("LOW")
	AssociationComplianceSeverityUnspecified = AssociationComplianceSeverity("UNSPECIFIED")
)

func (AssociationComplianceSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationComplianceSeverity)(nil)).Elem()
}

func (e AssociationComplianceSeverity) ToAssociationComplianceSeverityOutput() AssociationComplianceSeverityOutput {
	return pulumi.ToOutput(e).(AssociationComplianceSeverityOutput)
}

func (e AssociationComplianceSeverity) ToAssociationComplianceSeverityOutputWithContext(ctx context.Context) AssociationComplianceSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssociationComplianceSeverityOutput)
}

func (e AssociationComplianceSeverity) ToAssociationComplianceSeverityPtrOutput() AssociationComplianceSeverityPtrOutput {
	return e.ToAssociationComplianceSeverityPtrOutputWithContext(context.Background())
}

func (e AssociationComplianceSeverity) ToAssociationComplianceSeverityPtrOutputWithContext(ctx context.Context) AssociationComplianceSeverityPtrOutput {
	return AssociationComplianceSeverity(e).ToAssociationComplianceSeverityOutputWithContext(ctx).ToAssociationComplianceSeverityPtrOutputWithContext(ctx)
}

func (e AssociationComplianceSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssociationComplianceSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssociationComplianceSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssociationComplianceSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssociationComplianceSeverityOutput struct{ *pulumi.OutputState }

func (AssociationComplianceSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationComplianceSeverity)(nil)).Elem()
}

func (o AssociationComplianceSeverityOutput) ToAssociationComplianceSeverityOutput() AssociationComplianceSeverityOutput {
	return o
}

func (o AssociationComplianceSeverityOutput) ToAssociationComplianceSeverityOutputWithContext(ctx context.Context) AssociationComplianceSeverityOutput {
	return o
}

func (o AssociationComplianceSeverityOutput) ToAssociationComplianceSeverityPtrOutput() AssociationComplianceSeverityPtrOutput {
	return o.ToAssociationComplianceSeverityPtrOutputWithContext(context.Background())
}

func (o AssociationComplianceSeverityOutput) ToAssociationComplianceSeverityPtrOutputWithContext(ctx context.Context) AssociationComplianceSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssociationComplianceSeverity) *AssociationComplianceSeverity {
		return &v
	}).(AssociationComplianceSeverityPtrOutput)
}

func (o AssociationComplianceSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssociationComplianceSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssociationComplianceSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssociationComplianceSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssociationComplianceSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssociationComplianceSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssociationComplianceSeverityPtrOutput struct{ *pulumi.OutputState }

func (AssociationComplianceSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationComplianceSeverity)(nil)).Elem()
}

func (o AssociationComplianceSeverityPtrOutput) ToAssociationComplianceSeverityPtrOutput() AssociationComplianceSeverityPtrOutput {
	return o
}

func (o AssociationComplianceSeverityPtrOutput) ToAssociationComplianceSeverityPtrOutputWithContext(ctx context.Context) AssociationComplianceSeverityPtrOutput {
	return o
}

func (o AssociationComplianceSeverityPtrOutput) Elem() AssociationComplianceSeverityOutput {
	return o.ApplyT(func(v *AssociationComplianceSeverity) AssociationComplianceSeverity {
		if v != nil {
			return *v
		}
		var ret AssociationComplianceSeverity
		return ret
	}).(AssociationComplianceSeverityOutput)
}

func (o AssociationComplianceSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssociationComplianceSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssociationComplianceSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssociationComplianceSeverityInput is an input type that accepts AssociationComplianceSeverityArgs and AssociationComplianceSeverityOutput values.
// You can construct a concrete instance of `AssociationComplianceSeverityInput` via:
//
//          AssociationComplianceSeverityArgs{...}
type AssociationComplianceSeverityInput interface {
	pulumi.Input

	ToAssociationComplianceSeverityOutput() AssociationComplianceSeverityOutput
	ToAssociationComplianceSeverityOutputWithContext(context.Context) AssociationComplianceSeverityOutput
}

var associationComplianceSeverityPtrType = reflect.TypeOf((**AssociationComplianceSeverity)(nil)).Elem()

type AssociationComplianceSeverityPtrInput interface {
	pulumi.Input

	ToAssociationComplianceSeverityPtrOutput() AssociationComplianceSeverityPtrOutput
	ToAssociationComplianceSeverityPtrOutputWithContext(context.Context) AssociationComplianceSeverityPtrOutput
}

type associationComplianceSeverityPtr string

func AssociationComplianceSeverityPtr(v string) AssociationComplianceSeverityPtrInput {
	return (*associationComplianceSeverityPtr)(&v)
}

func (*associationComplianceSeverityPtr) ElementType() reflect.Type {
	return associationComplianceSeverityPtrType
}

func (in *associationComplianceSeverityPtr) ToAssociationComplianceSeverityPtrOutput() AssociationComplianceSeverityPtrOutput {
	return pulumi.ToOutput(in).(AssociationComplianceSeverityPtrOutput)
}

func (in *associationComplianceSeverityPtr) ToAssociationComplianceSeverityPtrOutputWithContext(ctx context.Context) AssociationComplianceSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssociationComplianceSeverityPtrOutput)
}

type AssociationSyncCompliance string

const (
	AssociationSyncComplianceAuto   = AssociationSyncCompliance("AUTO")
	AssociationSyncComplianceManual = AssociationSyncCompliance("MANUAL")
)

func (AssociationSyncCompliance) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationSyncCompliance)(nil)).Elem()
}

func (e AssociationSyncCompliance) ToAssociationSyncComplianceOutput() AssociationSyncComplianceOutput {
	return pulumi.ToOutput(e).(AssociationSyncComplianceOutput)
}

func (e AssociationSyncCompliance) ToAssociationSyncComplianceOutputWithContext(ctx context.Context) AssociationSyncComplianceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssociationSyncComplianceOutput)
}

func (e AssociationSyncCompliance) ToAssociationSyncCompliancePtrOutput() AssociationSyncCompliancePtrOutput {
	return e.ToAssociationSyncCompliancePtrOutputWithContext(context.Background())
}

func (e AssociationSyncCompliance) ToAssociationSyncCompliancePtrOutputWithContext(ctx context.Context) AssociationSyncCompliancePtrOutput {
	return AssociationSyncCompliance(e).ToAssociationSyncComplianceOutputWithContext(ctx).ToAssociationSyncCompliancePtrOutputWithContext(ctx)
}

func (e AssociationSyncCompliance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssociationSyncCompliance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssociationSyncCompliance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssociationSyncCompliance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssociationSyncComplianceOutput struct{ *pulumi.OutputState }

func (AssociationSyncComplianceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationSyncCompliance)(nil)).Elem()
}

func (o AssociationSyncComplianceOutput) ToAssociationSyncComplianceOutput() AssociationSyncComplianceOutput {
	return o
}

func (o AssociationSyncComplianceOutput) ToAssociationSyncComplianceOutputWithContext(ctx context.Context) AssociationSyncComplianceOutput {
	return o
}

func (o AssociationSyncComplianceOutput) ToAssociationSyncCompliancePtrOutput() AssociationSyncCompliancePtrOutput {
	return o.ToAssociationSyncCompliancePtrOutputWithContext(context.Background())
}

func (o AssociationSyncComplianceOutput) ToAssociationSyncCompliancePtrOutputWithContext(ctx context.Context) AssociationSyncCompliancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssociationSyncCompliance) *AssociationSyncCompliance {
		return &v
	}).(AssociationSyncCompliancePtrOutput)
}

func (o AssociationSyncComplianceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssociationSyncComplianceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssociationSyncCompliance) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssociationSyncComplianceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssociationSyncComplianceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssociationSyncCompliance) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssociationSyncCompliancePtrOutput struct{ *pulumi.OutputState }

func (AssociationSyncCompliancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationSyncCompliance)(nil)).Elem()
}

func (o AssociationSyncCompliancePtrOutput) ToAssociationSyncCompliancePtrOutput() AssociationSyncCompliancePtrOutput {
	return o
}

func (o AssociationSyncCompliancePtrOutput) ToAssociationSyncCompliancePtrOutputWithContext(ctx context.Context) AssociationSyncCompliancePtrOutput {
	return o
}

func (o AssociationSyncCompliancePtrOutput) Elem() AssociationSyncComplianceOutput {
	return o.ApplyT(func(v *AssociationSyncCompliance) AssociationSyncCompliance {
		if v != nil {
			return *v
		}
		var ret AssociationSyncCompliance
		return ret
	}).(AssociationSyncComplianceOutput)
}

func (o AssociationSyncCompliancePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssociationSyncCompliancePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssociationSyncCompliance) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssociationSyncComplianceInput is an input type that accepts AssociationSyncComplianceArgs and AssociationSyncComplianceOutput values.
// You can construct a concrete instance of `AssociationSyncComplianceInput` via:
//
//          AssociationSyncComplianceArgs{...}
type AssociationSyncComplianceInput interface {
	pulumi.Input

	ToAssociationSyncComplianceOutput() AssociationSyncComplianceOutput
	ToAssociationSyncComplianceOutputWithContext(context.Context) AssociationSyncComplianceOutput
}

var associationSyncCompliancePtrType = reflect.TypeOf((**AssociationSyncCompliance)(nil)).Elem()

type AssociationSyncCompliancePtrInput interface {
	pulumi.Input

	ToAssociationSyncCompliancePtrOutput() AssociationSyncCompliancePtrOutput
	ToAssociationSyncCompliancePtrOutputWithContext(context.Context) AssociationSyncCompliancePtrOutput
}

type associationSyncCompliancePtr string

func AssociationSyncCompliancePtr(v string) AssociationSyncCompliancePtrInput {
	return (*associationSyncCompliancePtr)(&v)
}

func (*associationSyncCompliancePtr) ElementType() reflect.Type {
	return associationSyncCompliancePtrType
}

func (in *associationSyncCompliancePtr) ToAssociationSyncCompliancePtrOutput() AssociationSyncCompliancePtrOutput {
	return pulumi.ToOutput(in).(AssociationSyncCompliancePtrOutput)
}

func (in *associationSyncCompliancePtr) ToAssociationSyncCompliancePtrOutputWithContext(ctx context.Context) AssociationSyncCompliancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssociationSyncCompliancePtrOutput)
}

// The key of a key-value pair that identifies the location of an attachment to a document.
type DocumentAttachmentsSourceKey string

const (
	DocumentAttachmentsSourceKeySourceUrl           = DocumentAttachmentsSourceKey("SourceUrl")
	DocumentAttachmentsSourceKeyS3FileUrl           = DocumentAttachmentsSourceKey("S3FileUrl")
	DocumentAttachmentsSourceKeyAttachmentReference = DocumentAttachmentsSourceKey("AttachmentReference")
)

func (DocumentAttachmentsSourceKey) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSourceKey)(nil)).Elem()
}

func (e DocumentAttachmentsSourceKey) ToDocumentAttachmentsSourceKeyOutput() DocumentAttachmentsSourceKeyOutput {
	return pulumi.ToOutput(e).(DocumentAttachmentsSourceKeyOutput)
}

func (e DocumentAttachmentsSourceKey) ToDocumentAttachmentsSourceKeyOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentAttachmentsSourceKeyOutput)
}

func (e DocumentAttachmentsSourceKey) ToDocumentAttachmentsSourceKeyPtrOutput() DocumentAttachmentsSourceKeyPtrOutput {
	return e.ToDocumentAttachmentsSourceKeyPtrOutputWithContext(context.Background())
}

func (e DocumentAttachmentsSourceKey) ToDocumentAttachmentsSourceKeyPtrOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyPtrOutput {
	return DocumentAttachmentsSourceKey(e).ToDocumentAttachmentsSourceKeyOutputWithContext(ctx).ToDocumentAttachmentsSourceKeyPtrOutputWithContext(ctx)
}

func (e DocumentAttachmentsSourceKey) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentAttachmentsSourceKey) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentAttachmentsSourceKey) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentAttachmentsSourceKey) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentAttachmentsSourceKeyOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSourceKey)(nil)).Elem()
}

func (o DocumentAttachmentsSourceKeyOutput) ToDocumentAttachmentsSourceKeyOutput() DocumentAttachmentsSourceKeyOutput {
	return o
}

func (o DocumentAttachmentsSourceKeyOutput) ToDocumentAttachmentsSourceKeyOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyOutput {
	return o
}

func (o DocumentAttachmentsSourceKeyOutput) ToDocumentAttachmentsSourceKeyPtrOutput() DocumentAttachmentsSourceKeyPtrOutput {
	return o.ToDocumentAttachmentsSourceKeyPtrOutputWithContext(context.Background())
}

func (o DocumentAttachmentsSourceKeyOutput) ToDocumentAttachmentsSourceKeyPtrOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentAttachmentsSourceKey) *DocumentAttachmentsSourceKey {
		return &v
	}).(DocumentAttachmentsSourceKeyPtrOutput)
}

func (o DocumentAttachmentsSourceKeyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentAttachmentsSourceKeyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentAttachmentsSourceKey) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentAttachmentsSourceKeyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentAttachmentsSourceKeyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentAttachmentsSourceKey) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentAttachmentsSourceKeyPtrOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentAttachmentsSourceKey)(nil)).Elem()
}

func (o DocumentAttachmentsSourceKeyPtrOutput) ToDocumentAttachmentsSourceKeyPtrOutput() DocumentAttachmentsSourceKeyPtrOutput {
	return o
}

func (o DocumentAttachmentsSourceKeyPtrOutput) ToDocumentAttachmentsSourceKeyPtrOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyPtrOutput {
	return o
}

func (o DocumentAttachmentsSourceKeyPtrOutput) Elem() DocumentAttachmentsSourceKeyOutput {
	return o.ApplyT(func(v *DocumentAttachmentsSourceKey) DocumentAttachmentsSourceKey {
		if v != nil {
			return *v
		}
		var ret DocumentAttachmentsSourceKey
		return ret
	}).(DocumentAttachmentsSourceKeyOutput)
}

func (o DocumentAttachmentsSourceKeyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentAttachmentsSourceKeyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentAttachmentsSourceKey) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentAttachmentsSourceKeyInput is an input type that accepts DocumentAttachmentsSourceKeyArgs and DocumentAttachmentsSourceKeyOutput values.
// You can construct a concrete instance of `DocumentAttachmentsSourceKeyInput` via:
//
//          DocumentAttachmentsSourceKeyArgs{...}
type DocumentAttachmentsSourceKeyInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceKeyOutput() DocumentAttachmentsSourceKeyOutput
	ToDocumentAttachmentsSourceKeyOutputWithContext(context.Context) DocumentAttachmentsSourceKeyOutput
}

var documentAttachmentsSourceKeyPtrType = reflect.TypeOf((**DocumentAttachmentsSourceKey)(nil)).Elem()

type DocumentAttachmentsSourceKeyPtrInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceKeyPtrOutput() DocumentAttachmentsSourceKeyPtrOutput
	ToDocumentAttachmentsSourceKeyPtrOutputWithContext(context.Context) DocumentAttachmentsSourceKeyPtrOutput
}

type documentAttachmentsSourceKeyPtr string

func DocumentAttachmentsSourceKeyPtr(v string) DocumentAttachmentsSourceKeyPtrInput {
	return (*documentAttachmentsSourceKeyPtr)(&v)
}

func (*documentAttachmentsSourceKeyPtr) ElementType() reflect.Type {
	return documentAttachmentsSourceKeyPtrType
}

func (in *documentAttachmentsSourceKeyPtr) ToDocumentAttachmentsSourceKeyPtrOutput() DocumentAttachmentsSourceKeyPtrOutput {
	return pulumi.ToOutput(in).(DocumentAttachmentsSourceKeyPtrOutput)
}

func (in *documentAttachmentsSourceKeyPtr) ToDocumentAttachmentsSourceKeyPtrOutputWithContext(ctx context.Context) DocumentAttachmentsSourceKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentAttachmentsSourceKeyPtrOutput)
}

// Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
type DocumentDocumentFormat string

const (
	DocumentDocumentFormatYaml = DocumentDocumentFormat("YAML")
	DocumentDocumentFormatJson = DocumentDocumentFormat("JSON")
	DocumentDocumentFormatText = DocumentDocumentFormat("TEXT")
)

func (DocumentDocumentFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDocumentFormat)(nil)).Elem()
}

func (e DocumentDocumentFormat) ToDocumentDocumentFormatOutput() DocumentDocumentFormatOutput {
	return pulumi.ToOutput(e).(DocumentDocumentFormatOutput)
}

func (e DocumentDocumentFormat) ToDocumentDocumentFormatOutputWithContext(ctx context.Context) DocumentDocumentFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentDocumentFormatOutput)
}

func (e DocumentDocumentFormat) ToDocumentDocumentFormatPtrOutput() DocumentDocumentFormatPtrOutput {
	return e.ToDocumentDocumentFormatPtrOutputWithContext(context.Background())
}

func (e DocumentDocumentFormat) ToDocumentDocumentFormatPtrOutputWithContext(ctx context.Context) DocumentDocumentFormatPtrOutput {
	return DocumentDocumentFormat(e).ToDocumentDocumentFormatOutputWithContext(ctx).ToDocumentDocumentFormatPtrOutputWithContext(ctx)
}

func (e DocumentDocumentFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentDocumentFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentDocumentFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentDocumentFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentDocumentFormatOutput struct{ *pulumi.OutputState }

func (DocumentDocumentFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDocumentFormat)(nil)).Elem()
}

func (o DocumentDocumentFormatOutput) ToDocumentDocumentFormatOutput() DocumentDocumentFormatOutput {
	return o
}

func (o DocumentDocumentFormatOutput) ToDocumentDocumentFormatOutputWithContext(ctx context.Context) DocumentDocumentFormatOutput {
	return o
}

func (o DocumentDocumentFormatOutput) ToDocumentDocumentFormatPtrOutput() DocumentDocumentFormatPtrOutput {
	return o.ToDocumentDocumentFormatPtrOutputWithContext(context.Background())
}

func (o DocumentDocumentFormatOutput) ToDocumentDocumentFormatPtrOutputWithContext(ctx context.Context) DocumentDocumentFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentDocumentFormat) *DocumentDocumentFormat {
		return &v
	}).(DocumentDocumentFormatPtrOutput)
}

func (o DocumentDocumentFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentDocumentFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentDocumentFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentDocumentFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentDocumentFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentDocumentFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentDocumentFormatPtrOutput struct{ *pulumi.OutputState }

func (DocumentDocumentFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentDocumentFormat)(nil)).Elem()
}

func (o DocumentDocumentFormatPtrOutput) ToDocumentDocumentFormatPtrOutput() DocumentDocumentFormatPtrOutput {
	return o
}

func (o DocumentDocumentFormatPtrOutput) ToDocumentDocumentFormatPtrOutputWithContext(ctx context.Context) DocumentDocumentFormatPtrOutput {
	return o
}

func (o DocumentDocumentFormatPtrOutput) Elem() DocumentDocumentFormatOutput {
	return o.ApplyT(func(v *DocumentDocumentFormat) DocumentDocumentFormat {
		if v != nil {
			return *v
		}
		var ret DocumentDocumentFormat
		return ret
	}).(DocumentDocumentFormatOutput)
}

func (o DocumentDocumentFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentDocumentFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentDocumentFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentDocumentFormatInput is an input type that accepts DocumentDocumentFormatArgs and DocumentDocumentFormatOutput values.
// You can construct a concrete instance of `DocumentDocumentFormatInput` via:
//
//          DocumentDocumentFormatArgs{...}
type DocumentDocumentFormatInput interface {
	pulumi.Input

	ToDocumentDocumentFormatOutput() DocumentDocumentFormatOutput
	ToDocumentDocumentFormatOutputWithContext(context.Context) DocumentDocumentFormatOutput
}

var documentDocumentFormatPtrType = reflect.TypeOf((**DocumentDocumentFormat)(nil)).Elem()

type DocumentDocumentFormatPtrInput interface {
	pulumi.Input

	ToDocumentDocumentFormatPtrOutput() DocumentDocumentFormatPtrOutput
	ToDocumentDocumentFormatPtrOutputWithContext(context.Context) DocumentDocumentFormatPtrOutput
}

type documentDocumentFormatPtr string

func DocumentDocumentFormatPtr(v string) DocumentDocumentFormatPtrInput {
	return (*documentDocumentFormatPtr)(&v)
}

func (*documentDocumentFormatPtr) ElementType() reflect.Type {
	return documentDocumentFormatPtrType
}

func (in *documentDocumentFormatPtr) ToDocumentDocumentFormatPtrOutput() DocumentDocumentFormatPtrOutput {
	return pulumi.ToOutput(in).(DocumentDocumentFormatPtrOutput)
}

func (in *documentDocumentFormatPtr) ToDocumentDocumentFormatPtrOutputWithContext(ctx context.Context) DocumentDocumentFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentDocumentFormatPtrOutput)
}

// The type of document to create.
type DocumentDocumentType string

const (
	DocumentDocumentTypeApplicationConfiguration       = DocumentDocumentType("ApplicationConfiguration")
	DocumentDocumentTypeApplicationConfigurationSchema = DocumentDocumentType("ApplicationConfigurationSchema")
	DocumentDocumentTypeAutomation                     = DocumentDocumentType("Automation")
	DocumentDocumentTypeAutomationChangeTemplate       = DocumentDocumentType("Automation.ChangeTemplate")
	DocumentDocumentTypeChangeCalendar                 = DocumentDocumentType("ChangeCalendar")
	DocumentDocumentTypeCloudFormation                 = DocumentDocumentType("CloudFormation")
	DocumentDocumentTypeCommand                        = DocumentDocumentType("Command")
	DocumentDocumentTypeDeploymentStrategy             = DocumentDocumentType("DeploymentStrategy")
	DocumentDocumentTypePackage                        = DocumentDocumentType("Package")
	DocumentDocumentTypePolicy                         = DocumentDocumentType("Policy")
	DocumentDocumentTypeProblemAnalysis                = DocumentDocumentType("ProblemAnalysis")
	DocumentDocumentTypeProblemAnalysisTemplate        = DocumentDocumentType("ProblemAnalysisTemplate")
	DocumentDocumentTypeSession                        = DocumentDocumentType("Session")
)

func (DocumentDocumentType) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDocumentType)(nil)).Elem()
}

func (e DocumentDocumentType) ToDocumentDocumentTypeOutput() DocumentDocumentTypeOutput {
	return pulumi.ToOutput(e).(DocumentDocumentTypeOutput)
}

func (e DocumentDocumentType) ToDocumentDocumentTypeOutputWithContext(ctx context.Context) DocumentDocumentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DocumentDocumentTypeOutput)
}

func (e DocumentDocumentType) ToDocumentDocumentTypePtrOutput() DocumentDocumentTypePtrOutput {
	return e.ToDocumentDocumentTypePtrOutputWithContext(context.Background())
}

func (e DocumentDocumentType) ToDocumentDocumentTypePtrOutputWithContext(ctx context.Context) DocumentDocumentTypePtrOutput {
	return DocumentDocumentType(e).ToDocumentDocumentTypeOutputWithContext(ctx).ToDocumentDocumentTypePtrOutputWithContext(ctx)
}

func (e DocumentDocumentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentDocumentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DocumentDocumentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DocumentDocumentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DocumentDocumentTypeOutput struct{ *pulumi.OutputState }

func (DocumentDocumentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDocumentType)(nil)).Elem()
}

func (o DocumentDocumentTypeOutput) ToDocumentDocumentTypeOutput() DocumentDocumentTypeOutput {
	return o
}

func (o DocumentDocumentTypeOutput) ToDocumentDocumentTypeOutputWithContext(ctx context.Context) DocumentDocumentTypeOutput {
	return o
}

func (o DocumentDocumentTypeOutput) ToDocumentDocumentTypePtrOutput() DocumentDocumentTypePtrOutput {
	return o.ToDocumentDocumentTypePtrOutputWithContext(context.Background())
}

func (o DocumentDocumentTypeOutput) ToDocumentDocumentTypePtrOutputWithContext(ctx context.Context) DocumentDocumentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentDocumentType) *DocumentDocumentType {
		return &v
	}).(DocumentDocumentTypePtrOutput)
}

func (o DocumentDocumentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DocumentDocumentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentDocumentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DocumentDocumentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentDocumentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DocumentDocumentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DocumentDocumentTypePtrOutput struct{ *pulumi.OutputState }

func (DocumentDocumentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentDocumentType)(nil)).Elem()
}

func (o DocumentDocumentTypePtrOutput) ToDocumentDocumentTypePtrOutput() DocumentDocumentTypePtrOutput {
	return o
}

func (o DocumentDocumentTypePtrOutput) ToDocumentDocumentTypePtrOutputWithContext(ctx context.Context) DocumentDocumentTypePtrOutput {
	return o
}

func (o DocumentDocumentTypePtrOutput) Elem() DocumentDocumentTypeOutput {
	return o.ApplyT(func(v *DocumentDocumentType) DocumentDocumentType {
		if v != nil {
			return *v
		}
		var ret DocumentDocumentType
		return ret
	}).(DocumentDocumentTypeOutput)
}

func (o DocumentDocumentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DocumentDocumentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DocumentDocumentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DocumentDocumentTypeInput is an input type that accepts DocumentDocumentTypeArgs and DocumentDocumentTypeOutput values.
// You can construct a concrete instance of `DocumentDocumentTypeInput` via:
//
//          DocumentDocumentTypeArgs{...}
type DocumentDocumentTypeInput interface {
	pulumi.Input

	ToDocumentDocumentTypeOutput() DocumentDocumentTypeOutput
	ToDocumentDocumentTypeOutputWithContext(context.Context) DocumentDocumentTypeOutput
}

var documentDocumentTypePtrType = reflect.TypeOf((**DocumentDocumentType)(nil)).Elem()

type DocumentDocumentTypePtrInput interface {
	pulumi.Input

	ToDocumentDocumentTypePtrOutput() DocumentDocumentTypePtrOutput
	ToDocumentDocumentTypePtrOutputWithContext(context.Context) DocumentDocumentTypePtrOutput
}

type documentDocumentTypePtr string

func DocumentDocumentTypePtr(v string) DocumentDocumentTypePtrInput {
	return (*documentDocumentTypePtr)(&v)
}

func (*documentDocumentTypePtr) ElementType() reflect.Type {
	return documentDocumentTypePtrType
}

func (in *documentDocumentTypePtr) ToDocumentDocumentTypePtrOutput() DocumentDocumentTypePtrOutput {
	return pulumi.ToOutput(in).(DocumentDocumentTypePtrOutput)
}

func (in *documentDocumentTypePtr) ToDocumentDocumentTypePtrOutputWithContext(ctx context.Context) DocumentDocumentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DocumentDocumentTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssociationComplianceSeverityOutput{})
	pulumi.RegisterOutputType(AssociationComplianceSeverityPtrOutput{})
	pulumi.RegisterOutputType(AssociationSyncComplianceOutput{})
	pulumi.RegisterOutputType(AssociationSyncCompliancePtrOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceKeyOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceKeyPtrOutput{})
	pulumi.RegisterOutputType(DocumentDocumentFormatOutput{})
	pulumi.RegisterOutputType(DocumentDocumentFormatPtrOutput{})
	pulumi.RegisterOutputType(DocumentDocumentTypeOutput{})
	pulumi.RegisterOutputType(DocumentDocumentTypePtrOutput{})
}
