// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
type Association struct {
	pulumi.CustomResourceState

	ApplyOnlyAtCronInterval pulumi.BoolPtrOutput `pulumi:"applyOnlyAtCronInterval"`
	// Unique identifier of the association.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The name of the association.
	AssociationName               pulumi.StringPtrOutput                 `pulumi:"associationName"`
	AutomationTargetParameterName pulumi.StringPtrOutput                 `pulumi:"automationTargetParameterName"`
	CalendarNames                 pulumi.StringArrayOutput               `pulumi:"calendarNames"`
	ComplianceSeverity            AssociationComplianceSeverityPtrOutput `pulumi:"complianceSeverity"`
	// The version of the SSM document to associate with the target.
	DocumentVersion pulumi.StringPtrOutput `pulumi:"documentVersion"`
	// The ID of the instance that the SSM document is associated with.
	InstanceId     pulumi.StringPtrOutput `pulumi:"instanceId"`
	MaxConcurrency pulumi.StringPtrOutput `pulumi:"maxConcurrency"`
	MaxErrors      pulumi.StringPtrOutput `pulumi:"maxErrors"`
	// The name of the SSM document.
	Name           pulumi.StringOutput                                   `pulumi:"name"`
	OutputLocation AssociationInstanceAssociationOutputLocationPtrOutput `pulumi:"outputLocation"`
	// Parameter values that the SSM document uses at runtime.
	Parameters pulumi.AnyOutput `pulumi:"parameters"`
	// A Cron or Rate expression that specifies when the association is applied to the target.
	ScheduleExpression pulumi.StringPtrOutput             `pulumi:"scheduleExpression"`
	SyncCompliance     AssociationSyncCompliancePtrOutput `pulumi:"syncCompliance"`
	// The targets that the SSM document sends commands to.
	Targets                      AssociationTargetArrayOutput `pulumi:"targets"`
	WaitForSuccessTimeoutSeconds pulumi.IntPtrOutput          `pulumi:"waitForSuccessTimeoutSeconds"`
}

// NewAssociation registers a new resource with the given unique name, arguments, and options.
func NewAssociation(ctx *pulumi.Context,
	name string, args *AssociationArgs, opts ...pulumi.ResourceOption) (*Association, error) {
	if args == nil {
		args = &AssociationArgs{}
	}

	var resource Association
	err := ctx.RegisterResource("aws-native:ssm:Association", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssociation gets an existing Association resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssociationState, opts ...pulumi.ResourceOption) (*Association, error) {
	var resource Association
	err := ctx.ReadResource("aws-native:ssm:Association", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Association resources.
type associationState struct {
}

type AssociationState struct {
}

func (AssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*associationState)(nil)).Elem()
}

type associationArgs struct {
	ApplyOnlyAtCronInterval *bool `pulumi:"applyOnlyAtCronInterval"`
	// The name of the association.
	AssociationName               *string                        `pulumi:"associationName"`
	AutomationTargetParameterName *string                        `pulumi:"automationTargetParameterName"`
	CalendarNames                 []string                       `pulumi:"calendarNames"`
	ComplianceSeverity            *AssociationComplianceSeverity `pulumi:"complianceSeverity"`
	// The version of the SSM document to associate with the target.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The ID of the instance that the SSM document is associated with.
	InstanceId     *string `pulumi:"instanceId"`
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	MaxErrors      *string `pulumi:"maxErrors"`
	// The name of the SSM document.
	Name           *string                                       `pulumi:"name"`
	OutputLocation *AssociationInstanceAssociationOutputLocation `pulumi:"outputLocation"`
	// Parameter values that the SSM document uses at runtime.
	Parameters interface{} `pulumi:"parameters"`
	// A Cron or Rate expression that specifies when the association is applied to the target.
	ScheduleExpression *string                    `pulumi:"scheduleExpression"`
	SyncCompliance     *AssociationSyncCompliance `pulumi:"syncCompliance"`
	// The targets that the SSM document sends commands to.
	Targets                      []AssociationTarget `pulumi:"targets"`
	WaitForSuccessTimeoutSeconds *int                `pulumi:"waitForSuccessTimeoutSeconds"`
}

// The set of arguments for constructing a Association resource.
type AssociationArgs struct {
	ApplyOnlyAtCronInterval pulumi.BoolPtrInput
	// The name of the association.
	AssociationName               pulumi.StringPtrInput
	AutomationTargetParameterName pulumi.StringPtrInput
	CalendarNames                 pulumi.StringArrayInput
	ComplianceSeverity            AssociationComplianceSeverityPtrInput
	// The version of the SSM document to associate with the target.
	DocumentVersion pulumi.StringPtrInput
	// The ID of the instance that the SSM document is associated with.
	InstanceId     pulumi.StringPtrInput
	MaxConcurrency pulumi.StringPtrInput
	MaxErrors      pulumi.StringPtrInput
	// The name of the SSM document.
	Name           pulumi.StringPtrInput
	OutputLocation AssociationInstanceAssociationOutputLocationPtrInput
	// Parameter values that the SSM document uses at runtime.
	Parameters pulumi.Input
	// A Cron or Rate expression that specifies when the association is applied to the target.
	ScheduleExpression pulumi.StringPtrInput
	SyncCompliance     AssociationSyncCompliancePtrInput
	// The targets that the SSM document sends commands to.
	Targets                      AssociationTargetArrayInput
	WaitForSuccessTimeoutSeconds pulumi.IntPtrInput
}

func (AssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*associationArgs)(nil)).Elem()
}

type AssociationInput interface {
	pulumi.Input

	ToAssociationOutput() AssociationOutput
	ToAssociationOutputWithContext(ctx context.Context) AssociationOutput
}

func (*Association) ElementType() reflect.Type {
	return reflect.TypeOf((*Association)(nil))
}

func (i *Association) ToAssociationOutput() AssociationOutput {
	return i.ToAssociationOutputWithContext(context.Background())
}

func (i *Association) ToAssociationOutputWithContext(ctx context.Context) AssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationOutput)
}

type AssociationOutput struct{ *pulumi.OutputState }

func (AssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Association)(nil))
}

func (o AssociationOutput) ToAssociationOutput() AssociationOutput {
	return o
}

func (o AssociationOutput) ToAssociationOutputWithContext(ctx context.Context) AssociationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationInput)(nil)).Elem(), &Association{})
	pulumi.RegisterOutputType(AssociationOutput{})
}
