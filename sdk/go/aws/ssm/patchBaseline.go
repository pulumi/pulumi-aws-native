// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SSM::PatchBaseline
//
// Deprecated: PatchBaseline is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type PatchBaseline struct {
	pulumi.CustomResourceState

	ApprovalRules                    PatchBaselineRuleGroupPtrOutput        `pulumi:"approvalRules"`
	ApprovedPatches                  pulumi.StringArrayOutput               `pulumi:"approvedPatches"`
	ApprovedPatchesComplianceLevel   pulumi.StringPtrOutput                 `pulumi:"approvedPatchesComplianceLevel"`
	ApprovedPatchesEnableNonSecurity pulumi.BoolPtrOutput                   `pulumi:"approvedPatchesEnableNonSecurity"`
	Description                      pulumi.StringPtrOutput                 `pulumi:"description"`
	GlobalFilters                    PatchBaselinePatchFilterGroupPtrOutput `pulumi:"globalFilters"`
	Name                             pulumi.StringOutput                    `pulumi:"name"`
	OperatingSystem                  pulumi.StringPtrOutput                 `pulumi:"operatingSystem"`
	PatchGroups                      pulumi.StringArrayOutput               `pulumi:"patchGroups"`
	RejectedPatches                  pulumi.StringArrayOutput               `pulumi:"rejectedPatches"`
	RejectedPatchesAction            pulumi.StringPtrOutput                 `pulumi:"rejectedPatchesAction"`
	Sources                          PatchBaselinePatchSourceArrayOutput    `pulumi:"sources"`
	Tags                             PatchBaselineTagArrayOutput            `pulumi:"tags"`
}

// NewPatchBaseline registers a new resource with the given unique name, arguments, and options.
func NewPatchBaseline(ctx *pulumi.Context,
	name string, args *PatchBaselineArgs, opts ...pulumi.ResourceOption) (*PatchBaseline, error) {
	if args == nil {
		args = &PatchBaselineArgs{}
	}

	var resource PatchBaseline
	err := ctx.RegisterResource("aws-native:ssm:PatchBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPatchBaseline gets an existing PatchBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPatchBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PatchBaselineState, opts ...pulumi.ResourceOption) (*PatchBaseline, error) {
	var resource PatchBaseline
	err := ctx.ReadResource("aws-native:ssm:PatchBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PatchBaseline resources.
type patchBaselineState struct {
}

type PatchBaselineState struct {
}

func (PatchBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*patchBaselineState)(nil)).Elem()
}

type patchBaselineArgs struct {
	ApprovalRules                    *PatchBaselineRuleGroup        `pulumi:"approvalRules"`
	ApprovedPatches                  []string                       `pulumi:"approvedPatches"`
	ApprovedPatchesComplianceLevel   *string                        `pulumi:"approvedPatchesComplianceLevel"`
	ApprovedPatchesEnableNonSecurity *bool                          `pulumi:"approvedPatchesEnableNonSecurity"`
	Description                      *string                        `pulumi:"description"`
	GlobalFilters                    *PatchBaselinePatchFilterGroup `pulumi:"globalFilters"`
	Name                             *string                        `pulumi:"name"`
	OperatingSystem                  *string                        `pulumi:"operatingSystem"`
	PatchGroups                      []string                       `pulumi:"patchGroups"`
	RejectedPatches                  []string                       `pulumi:"rejectedPatches"`
	RejectedPatchesAction            *string                        `pulumi:"rejectedPatchesAction"`
	Sources                          []PatchBaselinePatchSource     `pulumi:"sources"`
	Tags                             []PatchBaselineTag             `pulumi:"tags"`
}

// The set of arguments for constructing a PatchBaseline resource.
type PatchBaselineArgs struct {
	ApprovalRules                    PatchBaselineRuleGroupPtrInput
	ApprovedPatches                  pulumi.StringArrayInput
	ApprovedPatchesComplianceLevel   pulumi.StringPtrInput
	ApprovedPatchesEnableNonSecurity pulumi.BoolPtrInput
	Description                      pulumi.StringPtrInput
	GlobalFilters                    PatchBaselinePatchFilterGroupPtrInput
	Name                             pulumi.StringPtrInput
	OperatingSystem                  pulumi.StringPtrInput
	PatchGroups                      pulumi.StringArrayInput
	RejectedPatches                  pulumi.StringArrayInput
	RejectedPatchesAction            pulumi.StringPtrInput
	Sources                          PatchBaselinePatchSourceArrayInput
	Tags                             PatchBaselineTagArrayInput
}

func (PatchBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*patchBaselineArgs)(nil)).Elem()
}

type PatchBaselineInput interface {
	pulumi.Input

	ToPatchBaselineOutput() PatchBaselineOutput
	ToPatchBaselineOutputWithContext(ctx context.Context) PatchBaselineOutput
}

func (*PatchBaseline) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaseline)(nil)).Elem()
}

func (i *PatchBaseline) ToPatchBaselineOutput() PatchBaselineOutput {
	return i.ToPatchBaselineOutputWithContext(context.Background())
}

func (i *PatchBaseline) ToPatchBaselineOutputWithContext(ctx context.Context) PatchBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineOutput)
}

type PatchBaselineOutput struct{ *pulumi.OutputState }

func (PatchBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchBaseline)(nil)).Elem()
}

func (o PatchBaselineOutput) ToPatchBaselineOutput() PatchBaselineOutput {
	return o
}

func (o PatchBaselineOutput) ToPatchBaselineOutputWithContext(ctx context.Context) PatchBaselineOutput {
	return o
}

func (o PatchBaselineOutput) ApprovalRules() PatchBaselineRuleGroupPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) PatchBaselineRuleGroupPtrOutput { return v.ApprovalRules }).(PatchBaselineRuleGroupPtrOutput)
}

func (o PatchBaselineOutput) ApprovedPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringArrayOutput { return v.ApprovedPatches }).(pulumi.StringArrayOutput)
}

func (o PatchBaselineOutput) ApprovedPatchesComplianceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringPtrOutput { return v.ApprovedPatchesComplianceLevel }).(pulumi.StringPtrOutput)
}

func (o PatchBaselineOutput) ApprovedPatchesEnableNonSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.BoolPtrOutput { return v.ApprovedPatchesEnableNonSecurity }).(pulumi.BoolPtrOutput)
}

func (o PatchBaselineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PatchBaselineOutput) GlobalFilters() PatchBaselinePatchFilterGroupPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) PatchBaselinePatchFilterGroupPtrOutput { return v.GlobalFilters }).(PatchBaselinePatchFilterGroupPtrOutput)
}

func (o PatchBaselineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PatchBaselineOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringPtrOutput { return v.OperatingSystem }).(pulumi.StringPtrOutput)
}

func (o PatchBaselineOutput) PatchGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringArrayOutput { return v.PatchGroups }).(pulumi.StringArrayOutput)
}

func (o PatchBaselineOutput) RejectedPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringArrayOutput { return v.RejectedPatches }).(pulumi.StringArrayOutput)
}

func (o PatchBaselineOutput) RejectedPatchesAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PatchBaseline) pulumi.StringPtrOutput { return v.RejectedPatchesAction }).(pulumi.StringPtrOutput)
}

func (o PatchBaselineOutput) Sources() PatchBaselinePatchSourceArrayOutput {
	return o.ApplyT(func(v *PatchBaseline) PatchBaselinePatchSourceArrayOutput { return v.Sources }).(PatchBaselinePatchSourceArrayOutput)
}

func (o PatchBaselineOutput) Tags() PatchBaselineTagArrayOutput {
	return o.ApplyT(func(v *PatchBaseline) PatchBaselineTagArrayOutput { return v.Tags }).(PatchBaselineTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineInput)(nil)).Elem(), &PatchBaseline{})
	pulumi.RegisterOutputType(PatchBaselineOutput{})
}
