// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SNS::Topic
func LookupTopic(ctx *pulumi.Context, args *LookupTopicArgs, opts ...pulumi.InvokeOption) (*LookupTopicResult, error) {
	var rv LookupTopicResult
	err := ctx.Invoke("aws-native:sns:getTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTopicArgs struct {
	Id string `pulumi:"id"`
}

type LookupTopicResult struct {
	ContentBasedDeduplication *bool               `pulumi:"contentBasedDeduplication"`
	DisplayName               *string             `pulumi:"displayName"`
	Id                        *string             `pulumi:"id"`
	KmsMasterKeyId            *string             `pulumi:"kmsMasterKeyId"`
	Subscription              []TopicSubscription `pulumi:"subscription"`
	Tags                      []TopicTag          `pulumi:"tags"`
}

func LookupTopicOutput(ctx *pulumi.Context, args LookupTopicOutputArgs, opts ...pulumi.InvokeOption) LookupTopicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTopicResult, error) {
			args := v.(LookupTopicArgs)
			r, err := LookupTopic(ctx, &args, opts...)
			return *r, err
		}).(LookupTopicResultOutput)
}

type LookupTopicOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicArgs)(nil)).Elem()
}

type LookupTopicResultOutput struct{ *pulumi.OutputState }

func (LookupTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicResult)(nil)).Elem()
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutput() LookupTopicResultOutput {
	return o
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutputWithContext(ctx context.Context) LookupTopicResultOutput {
	return o
}

func (o LookupTopicResultOutput) ContentBasedDeduplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *bool { return v.ContentBasedDeduplication }).(pulumi.BoolPtrOutput)
}

func (o LookupTopicResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupTopicResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupTopicResultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

func (o LookupTopicResultOutput) Subscription() TopicSubscriptionArrayOutput {
	return o.ApplyT(func(v LookupTopicResult) []TopicSubscription { return v.Subscription }).(TopicSubscriptionArrayOutput)
}

func (o LookupTopicResultOutput) Tags() TopicTagArrayOutput {
	return o.ApplyT(func(v LookupTopicResult) []TopicTag { return v.Tags }).(TopicTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTopicResultOutput{})
}
