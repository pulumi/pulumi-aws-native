// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::SNS::Topic“ resource creates a topic to which notifications can be published.
//
//	One account can create a maximum of 100,000 standard topics and 1,000 FIFO topics. For more information, see [endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/sns.html) in the *General Reference*.
//	 The structure of ``AUTHPARAMS`` depends on the .signature of the API request. For more information, see [Examples of the complete Signature Version 4 signing process](https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html) in the *General Reference*.
func LookupTopic(ctx *pulumi.Context, args *LookupTopicArgs, opts ...pulumi.InvokeOption) (*LookupTopicResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTopicResult
	err := ctx.Invoke("aws-native:sns:getTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTopicArgs struct {
	TopicArn string `pulumi:"topicArn"`
}

type LookupTopicResult struct {
	// The archive policy determines the number of days SNS retains messages. You can set a retention period from 1 to 365 days.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
	ArchivePolicy interface{} `pulumi:"archivePolicy"`
	// Enables content-based deduplication for FIFO topics.
	//   +  By default, ``ContentBasedDeduplication`` is set to ``false``. If you create a FIFO topic and this attribute is ``false``, you must specify a value for the ``MessageDeduplicationId`` parameter for the [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action.
	//   +  When you set ``ContentBasedDeduplication`` to ``true``, SNS uses a SHA-256 hash to generate the ``MessageDeduplicationId`` using the body of the message (but not the attributes of the message).
	//       (Optional) To override the generated value, you can specify a value for the the ``MessageDeduplicationId`` parameter for the ``Publish`` action.
	ContentBasedDeduplication *bool `pulumi:"contentBasedDeduplication"`
	// The body of the policy document you want to use for this topic.
	//  You can only add one policy per topic.
	//  The policy must be in JSON string format.
	//  Length Constraints: Maximum length of 30,720.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
	DataProtectionPolicy  interface{}          `pulumi:"dataProtectionPolicy"`
	DeliveryStatusLogging []TopicLoggingConfig `pulumi:"deliveryStatusLogging"`
	// The display name to use for an SNS topic with SMS subscriptions. The display name must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.
	DisplayName *string `pulumi:"displayName"`
	// The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For more information, see [Key terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more examples, see ``KeyId`` in the *API Reference*.
	//  This property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS. By default, ``SignatureVersion`` is set to ``1``.
	SignatureVersion *string `pulumi:"signatureVersion"`
	// The SNS subscriptions (endpoints) for this topic.
	//   If you specify the ``Subscription`` property in the ``AWS::SNS::Topic`` resource and it creates an associated subscription resource, the associated subscription is not deleted when the ``AWS::SNS::Topic`` resource is deleted.
	Subscription []TopicSubscription `pulumi:"subscription"`
	// The list of tags to add to a new topic.
	//   To be able to tag a topic on creation, you must have the ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
	Tags     []aws.Tag `pulumi:"tags"`
	TopicArn *string   `pulumi:"topicArn"`
	// Tracing mode of an SNS topic. By default ``TracingConfig`` is set to ``PassThrough``, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to ``Active``, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true.
	TracingConfig *string `pulumi:"tracingConfig"`
}

func LookupTopicOutput(ctx *pulumi.Context, args LookupTopicOutputArgs, opts ...pulumi.InvokeOption) LookupTopicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTopicResult, error) {
			args := v.(LookupTopicArgs)
			r, err := LookupTopic(ctx, &args, opts...)
			var s LookupTopicResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTopicResultOutput)
}

type LookupTopicOutputArgs struct {
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (LookupTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicArgs)(nil)).Elem()
}

type LookupTopicResultOutput struct{ *pulumi.OutputState }

func (LookupTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicResult)(nil)).Elem()
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutput() LookupTopicResultOutput {
	return o
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutputWithContext(ctx context.Context) LookupTopicResultOutput {
	return o
}

// The archive policy determines the number of days SNS retains messages. You can set a retention period from 1 to 365 days.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
func (o LookupTopicResultOutput) ArchivePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupTopicResult) interface{} { return v.ArchivePolicy }).(pulumi.AnyOutput)
}

// Enables content-based deduplication for FIFO topics.
//   - By default, “ContentBasedDeduplication“ is set to “false“. If you create a FIFO topic and this attribute is “false“, you must specify a value for the “MessageDeduplicationId“ parameter for the [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) action.
//   - When you set “ContentBasedDeduplication“ to “true“, SNS uses a SHA-256 hash to generate the “MessageDeduplicationId“ using the body of the message (but not the attributes of the message).
//     (Optional) To override the generated value, you can specify a value for the the “MessageDeduplicationId“ parameter for the “Publish“ action.
func (o LookupTopicResultOutput) ContentBasedDeduplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *bool { return v.ContentBasedDeduplication }).(pulumi.BoolPtrOutput)
}

// The body of the policy document you want to use for this topic.
//
//	You can only add one policy per topic.
//	The policy must be in JSON string format.
//	Length Constraints: Maximum length of 30,720.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::SNS::Topic` for more information about the expected schema for this property.
func (o LookupTopicResultOutput) DataProtectionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupTopicResult) interface{} { return v.DataProtectionPolicy }).(pulumi.AnyOutput)
}

func (o LookupTopicResultOutput) DeliveryStatusLogging() TopicLoggingConfigArrayOutput {
	return o.ApplyT(func(v LookupTopicResult) []TopicLoggingConfig { return v.DeliveryStatusLogging }).(TopicLoggingConfigArrayOutput)
}

// The display name to use for an SNS topic with SMS subscriptions. The display name must be maximum 100 characters long, including hyphens (-), underscores (_), spaces, and tabs.
func (o LookupTopicResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of an AWS managed customer master key (CMK) for SNS or a custom CMK. For more information, see [Key terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms). For more examples, see “KeyId“ in the *API Reference*.
//
//	This property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).
func (o LookupTopicResultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS. By default, “SignatureVersion“ is set to “1“.
func (o LookupTopicResultOutput) SignatureVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.SignatureVersion }).(pulumi.StringPtrOutput)
}

// The SNS subscriptions (endpoints) for this topic.
//
//	If you specify the ``Subscription`` property in the ``AWS::SNS::Topic`` resource and it creates an associated subscription resource, the associated subscription is not deleted when the ``AWS::SNS::Topic`` resource is deleted.
func (o LookupTopicResultOutput) Subscription() TopicSubscriptionArrayOutput {
	return o.ApplyT(func(v LookupTopicResult) []TopicSubscription { return v.Subscription }).(TopicSubscriptionArrayOutput)
}

// The list of tags to add to a new topic.
//
//	To be able to tag a topic on creation, you must have the ``sns:CreateTopic`` and ``sns:TagResource`` permissions.
func (o LookupTopicResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTopicResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupTopicResultOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

// Tracing mode of an SNS topic. By default “TracingConfig“ is set to “PassThrough“, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to “Active“, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true.
func (o LookupTopicResultOutput) TracingConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicResult) *string { return v.TracingConfig }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTopicResultOutput{})
}
