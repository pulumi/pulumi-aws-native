// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Schema for AWS::SNS::TopicPolicy
func LookupTopicPolicy(ctx *pulumi.Context, args *LookupTopicPolicyArgs, opts ...pulumi.InvokeOption) (*LookupTopicPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTopicPolicyResult
	err := ctx.Invoke("aws-native:sns:getTopicPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTopicPolicyArgs struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

type LookupTopicPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// A policy document that contains permissions to add to the specified SNS topics.
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html)` function to specify an [AWS::SNS::Topic](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html) resource.
	Topics []string `pulumi:"topics"`
}

func LookupTopicPolicyOutput(ctx *pulumi.Context, args LookupTopicPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupTopicPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTopicPolicyResult, error) {
			args := v.(LookupTopicPolicyArgs)
			r, err := LookupTopicPolicy(ctx, &args, opts...)
			var s LookupTopicPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTopicPolicyResultOutput)
}

type LookupTopicPolicyOutputArgs struct {
	// The provider-assigned unique ID for this managed resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTopicPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicPolicyArgs)(nil)).Elem()
}

type LookupTopicPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupTopicPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicPolicyResult)(nil)).Elem()
}

func (o LookupTopicPolicyResultOutput) ToLookupTopicPolicyResultOutput() LookupTopicPolicyResultOutput {
	return o
}

func (o LookupTopicPolicyResultOutput) ToLookupTopicPolicyResultOutputWithContext(ctx context.Context) LookupTopicPolicyResultOutput {
	return o
}

func (o LookupTopicPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTopicPolicyResult] {
	return pulumix.Output[LookupTopicPolicyResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTopicPolicyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTopicPolicyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A policy document that contains permissions to add to the specified SNS topics.
func (o LookupTopicPolicyResultOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupTopicPolicyResult) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the [Ref](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html)` function to specify an [AWS::SNS::Topic](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html) resource.
func (o LookupTopicPolicyResultOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTopicPolicyResult) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTopicPolicyResultOutput{})
}
