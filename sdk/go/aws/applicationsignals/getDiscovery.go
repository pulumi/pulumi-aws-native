// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationsignals

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApplicationSignals::Discovery
func LookupDiscovery(ctx *pulumi.Context, args *LookupDiscoveryArgs, opts ...pulumi.InvokeOption) (*LookupDiscoveryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscoveryResult
	err := ctx.Invoke("aws-native:applicationsignals:getDiscovery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiscoveryArgs struct {
	AccountId string `pulumi:"accountId"`
}

type LookupDiscoveryResult struct {
	AccountId *string `pulumi:"accountId"`
}

func LookupDiscoveryOutput(ctx *pulumi.Context, args LookupDiscoveryOutputArgs, opts ...pulumi.InvokeOption) LookupDiscoveryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDiscoveryResultOutput, error) {
			args := v.(LookupDiscoveryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:applicationsignals:getDiscovery", args, LookupDiscoveryResultOutput{}, options).(LookupDiscoveryResultOutput), nil
		}).(LookupDiscoveryResultOutput)
}

type LookupDiscoveryOutputArgs struct {
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (LookupDiscoveryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryArgs)(nil)).Elem()
}

type LookupDiscoveryResultOutput struct{ *pulumi.OutputState }

func (LookupDiscoveryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryResult)(nil)).Elem()
}

func (o LookupDiscoveryResultOutput) ToLookupDiscoveryResultOutput() LookupDiscoveryResultOutput {
	return o
}

func (o LookupDiscoveryResultOutput) ToLookupDiscoveryResultOutputWithContext(ctx context.Context) LookupDiscoveryResultOutput {
	return o
}

func (o LookupDiscoveryResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscoveryResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscoveryResultOutput{})
}
