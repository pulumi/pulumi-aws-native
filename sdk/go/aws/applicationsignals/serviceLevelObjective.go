// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationsignals

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
type ServiceLevelObjective struct {
	pulumi.CustomResourceState

	// The ARN of this SLO.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Epoch time in seconds of the time that this SLO was created
	CreatedTime pulumi.IntOutput `pulumi:"createdTime"`
	// An optional description for this SLO. Default is 'No description'
	Description pulumi.StringPtrOutput             `pulumi:"description"`
	Goal        ServiceLevelObjectiveGoalPtrOutput `pulumi:"goal"`
	// Epoch time in seconds of the time that this SLO was most recently updated
	LastUpdatedTime pulumi.IntOutput `pulumi:"lastUpdatedTime"`
	// The name of this SLO.
	Name pulumi.StringOutput            `pulumi:"name"`
	Sli  ServiceLevelObjectiveSliOutput `pulumi:"sli"`
	Tags aws.TagArrayOutput             `pulumi:"tags"`
}

// NewServiceLevelObjective registers a new resource with the given unique name, arguments, and options.
func NewServiceLevelObjective(ctx *pulumi.Context,
	name string, args *ServiceLevelObjectiveArgs, opts ...pulumi.ResourceOption) (*ServiceLevelObjective, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Sli == nil {
		return nil, errors.New("invalid value for required argument 'Sli'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLevelObjective
	err := ctx.RegisterResource("aws-native:applicationsignals:ServiceLevelObjective", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLevelObjective gets an existing ServiceLevelObjective resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLevelObjective(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLevelObjectiveState, opts ...pulumi.ResourceOption) (*ServiceLevelObjective, error) {
	var resource ServiceLevelObjective
	err := ctx.ReadResource("aws-native:applicationsignals:ServiceLevelObjective", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLevelObjective resources.
type serviceLevelObjectiveState struct {
}

type ServiceLevelObjectiveState struct {
}

func (ServiceLevelObjectiveState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLevelObjectiveState)(nil)).Elem()
}

type serviceLevelObjectiveArgs struct {
	// An optional description for this SLO. Default is 'No description'
	Description *string                    `pulumi:"description"`
	Goal        *ServiceLevelObjectiveGoal `pulumi:"goal"`
	// The name of this SLO.
	Name *string                  `pulumi:"name"`
	Sli  ServiceLevelObjectiveSli `pulumi:"sli"`
	Tags []aws.Tag                `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceLevelObjective resource.
type ServiceLevelObjectiveArgs struct {
	// An optional description for this SLO. Default is 'No description'
	Description pulumi.StringPtrInput
	Goal        ServiceLevelObjectiveGoalPtrInput
	// The name of this SLO.
	Name pulumi.StringPtrInput
	Sli  ServiceLevelObjectiveSliInput
	Tags aws.TagArrayInput
}

func (ServiceLevelObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLevelObjectiveArgs)(nil)).Elem()
}

type ServiceLevelObjectiveInput interface {
	pulumi.Input

	ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput
	ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput
}

func (*ServiceLevelObjective) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (i *ServiceLevelObjective) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return i.ToServiceLevelObjectiveOutputWithContext(context.Background())
}

func (i *ServiceLevelObjective) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveOutput)
}

type ServiceLevelObjectiveOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return o
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return o
}

// The ARN of this SLO.
func (o ServiceLevelObjectiveOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Epoch time in seconds of the time that this SLO was created
func (o ServiceLevelObjectiveOutput) CreatedTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.IntOutput { return v.CreatedTime }).(pulumi.IntOutput)
}

// An optional description for this SLO. Default is 'No description'
func (o ServiceLevelObjectiveOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceLevelObjectiveOutput) Goal() ServiceLevelObjectiveGoalPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) ServiceLevelObjectiveGoalPtrOutput { return v.Goal }).(ServiceLevelObjectiveGoalPtrOutput)
}

// Epoch time in seconds of the time that this SLO was most recently updated
func (o ServiceLevelObjectiveOutput) LastUpdatedTime() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.IntOutput { return v.LastUpdatedTime }).(pulumi.IntOutput)
}

// The name of this SLO.
func (o ServiceLevelObjectiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveOutput) Sli() ServiceLevelObjectiveSliOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) ServiceLevelObjectiveSliOutput { return v.Sli }).(ServiceLevelObjectiveSliOutput)
}

func (o ServiceLevelObjectiveOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveInput)(nil)).Elem(), &ServiceLevelObjective{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveOutput{})
}
