// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationsignals

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the calendar interval unit.
type ServiceLevelObjectiveDurationUnit string

const (
	ServiceLevelObjectiveDurationUnitDay   = ServiceLevelObjectiveDurationUnit("DAY")
	ServiceLevelObjectiveDurationUnitMonth = ServiceLevelObjectiveDurationUnit("MONTH")
)

func (ServiceLevelObjectiveDurationUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveDurationUnit)(nil)).Elem()
}

func (e ServiceLevelObjectiveDurationUnit) ToServiceLevelObjectiveDurationUnitOutput() ServiceLevelObjectiveDurationUnitOutput {
	return pulumi.ToOutput(e).(ServiceLevelObjectiveDurationUnitOutput)
}

func (e ServiceLevelObjectiveDurationUnit) ToServiceLevelObjectiveDurationUnitOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLevelObjectiveDurationUnitOutput)
}

func (e ServiceLevelObjectiveDurationUnit) ToServiceLevelObjectiveDurationUnitPtrOutput() ServiceLevelObjectiveDurationUnitPtrOutput {
	return e.ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveDurationUnit) ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitPtrOutput {
	return ServiceLevelObjectiveDurationUnit(e).ToServiceLevelObjectiveDurationUnitOutputWithContext(ctx).ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(ctx)
}

func (e ServiceLevelObjectiveDurationUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveDurationUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveDurationUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveDurationUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLevelObjectiveDurationUnitOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveDurationUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveDurationUnit)(nil)).Elem()
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToServiceLevelObjectiveDurationUnitOutput() ServiceLevelObjectiveDurationUnitOutput {
	return o
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToServiceLevelObjectiveDurationUnitOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitOutput {
	return o
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToServiceLevelObjectiveDurationUnitPtrOutput() ServiceLevelObjectiveDurationUnitPtrOutput {
	return o.ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveDurationUnit) *ServiceLevelObjectiveDurationUnit {
		return &v
	}).(ServiceLevelObjectiveDurationUnitPtrOutput)
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveDurationUnit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveDurationUnitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveDurationUnit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveDurationUnitPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveDurationUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveDurationUnit)(nil)).Elem()
}

func (o ServiceLevelObjectiveDurationUnitPtrOutput) ToServiceLevelObjectiveDurationUnitPtrOutput() ServiceLevelObjectiveDurationUnitPtrOutput {
	return o
}

func (o ServiceLevelObjectiveDurationUnitPtrOutput) ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitPtrOutput {
	return o
}

func (o ServiceLevelObjectiveDurationUnitPtrOutput) Elem() ServiceLevelObjectiveDurationUnitOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveDurationUnit) ServiceLevelObjectiveDurationUnit {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveDurationUnit
		return ret
	}).(ServiceLevelObjectiveDurationUnitOutput)
}

func (o ServiceLevelObjectiveDurationUnitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveDurationUnitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLevelObjectiveDurationUnit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLevelObjectiveDurationUnitInput is an input type that accepts values of the ServiceLevelObjectiveDurationUnit enum
// A concrete instance of `ServiceLevelObjectiveDurationUnitInput` can be one of the following:
//
//	ServiceLevelObjectiveDurationUnitDay
//	ServiceLevelObjectiveDurationUnitMonth
type ServiceLevelObjectiveDurationUnitInput interface {
	pulumi.Input

	ToServiceLevelObjectiveDurationUnitOutput() ServiceLevelObjectiveDurationUnitOutput
	ToServiceLevelObjectiveDurationUnitOutputWithContext(context.Context) ServiceLevelObjectiveDurationUnitOutput
}

var serviceLevelObjectiveDurationUnitPtrType = reflect.TypeOf((**ServiceLevelObjectiveDurationUnit)(nil)).Elem()

type ServiceLevelObjectiveDurationUnitPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveDurationUnitPtrOutput() ServiceLevelObjectiveDurationUnitPtrOutput
	ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(context.Context) ServiceLevelObjectiveDurationUnitPtrOutput
}

type serviceLevelObjectiveDurationUnitPtr string

func ServiceLevelObjectiveDurationUnitPtr(v string) ServiceLevelObjectiveDurationUnitPtrInput {
	return (*serviceLevelObjectiveDurationUnitPtr)(&v)
}

func (*serviceLevelObjectiveDurationUnitPtr) ElementType() reflect.Type {
	return serviceLevelObjectiveDurationUnitPtrType
}

func (in *serviceLevelObjectiveDurationUnitPtr) ToServiceLevelObjectiveDurationUnitPtrOutput() ServiceLevelObjectiveDurationUnitPtrOutput {
	return pulumi.ToOutput(in).(ServiceLevelObjectiveDurationUnitPtrOutput)
}

func (in *serviceLevelObjectiveDurationUnitPtr) ToServiceLevelObjectiveDurationUnitPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveDurationUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLevelObjectiveDurationUnitPtrOutput)
}

// The arithmetic operation used when comparing the specified metric to the threshold.
type ServiceLevelObjectiveSliComparisonOperator string

const (
	ServiceLevelObjectiveSliComparisonOperatorGreaterThanOrEqualTo = ServiceLevelObjectiveSliComparisonOperator("GreaterThanOrEqualTo")
	ServiceLevelObjectiveSliComparisonOperatorLessThanOrEqualTo    = ServiceLevelObjectiveSliComparisonOperator("LessThanOrEqualTo")
	ServiceLevelObjectiveSliComparisonOperatorLessThan             = ServiceLevelObjectiveSliComparisonOperator("LessThan")
	ServiceLevelObjectiveSliComparisonOperatorGreaterThan          = ServiceLevelObjectiveSliComparisonOperator("GreaterThan")
)

func (ServiceLevelObjectiveSliComparisonOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliComparisonOperator)(nil)).Elem()
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToServiceLevelObjectiveSliComparisonOperatorOutput() ServiceLevelObjectiveSliComparisonOperatorOutput {
	return pulumi.ToOutput(e).(ServiceLevelObjectiveSliComparisonOperatorOutput)
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToServiceLevelObjectiveSliComparisonOperatorOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLevelObjectiveSliComparisonOperatorOutput)
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToServiceLevelObjectiveSliComparisonOperatorPtrOutput() ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return e.ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return ServiceLevelObjectiveSliComparisonOperator(e).ToServiceLevelObjectiveSliComparisonOperatorOutputWithContext(ctx).ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(ctx)
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveSliComparisonOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLevelObjectiveSliComparisonOperatorOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliComparisonOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliComparisonOperator)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToServiceLevelObjectiveSliComparisonOperatorOutput() ServiceLevelObjectiveSliComparisonOperatorOutput {
	return o
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToServiceLevelObjectiveSliComparisonOperatorOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorOutput {
	return o
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToServiceLevelObjectiveSliComparisonOperatorPtrOutput() ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return o.ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliComparisonOperator) *ServiceLevelObjectiveSliComparisonOperator {
		return &v
	}).(ServiceLevelObjectiveSliComparisonOperatorPtrOutput)
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveSliComparisonOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliComparisonOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveSliComparisonOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveSliComparisonOperatorPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliComparisonOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliComparisonOperator)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliComparisonOperatorPtrOutput) ToServiceLevelObjectiveSliComparisonOperatorPtrOutput() ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliComparisonOperatorPtrOutput) ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliComparisonOperatorPtrOutput) Elem() ServiceLevelObjectiveSliComparisonOperatorOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliComparisonOperator) ServiceLevelObjectiveSliComparisonOperator {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliComparisonOperator
		return ret
	}).(ServiceLevelObjectiveSliComparisonOperatorOutput)
}

func (o ServiceLevelObjectiveSliComparisonOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliComparisonOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLevelObjectiveSliComparisonOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLevelObjectiveSliComparisonOperatorInput is an input type that accepts values of the ServiceLevelObjectiveSliComparisonOperator enum
// A concrete instance of `ServiceLevelObjectiveSliComparisonOperatorInput` can be one of the following:
//
//	ServiceLevelObjectiveSliComparisonOperatorGreaterThanOrEqualTo
//	ServiceLevelObjectiveSliComparisonOperatorLessThanOrEqualTo
//	ServiceLevelObjectiveSliComparisonOperatorLessThan
//	ServiceLevelObjectiveSliComparisonOperatorGreaterThan
type ServiceLevelObjectiveSliComparisonOperatorInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliComparisonOperatorOutput() ServiceLevelObjectiveSliComparisonOperatorOutput
	ToServiceLevelObjectiveSliComparisonOperatorOutputWithContext(context.Context) ServiceLevelObjectiveSliComparisonOperatorOutput
}

var serviceLevelObjectiveSliComparisonOperatorPtrType = reflect.TypeOf((**ServiceLevelObjectiveSliComparisonOperator)(nil)).Elem()

type ServiceLevelObjectiveSliComparisonOperatorPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliComparisonOperatorPtrOutput() ServiceLevelObjectiveSliComparisonOperatorPtrOutput
	ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliComparisonOperatorPtrOutput
}

type serviceLevelObjectiveSliComparisonOperatorPtr string

func ServiceLevelObjectiveSliComparisonOperatorPtr(v string) ServiceLevelObjectiveSliComparisonOperatorPtrInput {
	return (*serviceLevelObjectiveSliComparisonOperatorPtr)(&v)
}

func (*serviceLevelObjectiveSliComparisonOperatorPtr) ElementType() reflect.Type {
	return serviceLevelObjectiveSliComparisonOperatorPtrType
}

func (in *serviceLevelObjectiveSliComparisonOperatorPtr) ToServiceLevelObjectiveSliComparisonOperatorPtrOutput() ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return pulumi.ToOutput(in).(ServiceLevelObjectiveSliComparisonOperatorPtrOutput)
}

func (in *serviceLevelObjectiveSliComparisonOperatorPtr) ToServiceLevelObjectiveSliComparisonOperatorPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliComparisonOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLevelObjectiveSliComparisonOperatorPtrOutput)
}

// If the SLO monitors either the LATENCY or AVAILABILITY metric that Application Signals collects, this field displays which of those metrics is used.
type ServiceLevelObjectiveSliMetricMetricType string

const (
	ServiceLevelObjectiveSliMetricMetricTypeLatency      = ServiceLevelObjectiveSliMetricMetricType("LATENCY")
	ServiceLevelObjectiveSliMetricMetricTypeAvailability = ServiceLevelObjectiveSliMetricMetricType("AVAILABILITY")
)

func (ServiceLevelObjectiveSliMetricMetricType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliMetricMetricType)(nil)).Elem()
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToServiceLevelObjectiveSliMetricMetricTypeOutput() ServiceLevelObjectiveSliMetricMetricTypeOutput {
	return pulumi.ToOutput(e).(ServiceLevelObjectiveSliMetricMetricTypeOutput)
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToServiceLevelObjectiveSliMetricMetricTypeOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLevelObjectiveSliMetricMetricTypeOutput)
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToServiceLevelObjectiveSliMetricMetricTypePtrOutput() ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return e.ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return ServiceLevelObjectiveSliMetricMetricType(e).ToServiceLevelObjectiveSliMetricMetricTypeOutputWithContext(ctx).ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(ctx)
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLevelObjectiveSliMetricMetricType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLevelObjectiveSliMetricMetricTypeOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliMetricMetricTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliMetricMetricType)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToServiceLevelObjectiveSliMetricMetricTypeOutput() ServiceLevelObjectiveSliMetricMetricTypeOutput {
	return o
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToServiceLevelObjectiveSliMetricMetricTypeOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypeOutput {
	return o
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToServiceLevelObjectiveSliMetricMetricTypePtrOutput() ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return o.ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliMetricMetricType) *ServiceLevelObjectiveSliMetricMetricType {
		return &v
	}).(ServiceLevelObjectiveSliMetricMetricTypePtrOutput)
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveSliMetricMetricType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliMetricMetricTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevelObjectiveSliMetricMetricType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveSliMetricMetricTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliMetricMetricTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliMetricMetricType)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliMetricMetricTypePtrOutput) ToServiceLevelObjectiveSliMetricMetricTypePtrOutput() ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliMetricMetricTypePtrOutput) ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliMetricMetricTypePtrOutput) Elem() ServiceLevelObjectiveSliMetricMetricTypeOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliMetricMetricType) ServiceLevelObjectiveSliMetricMetricType {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliMetricMetricType
		return ret
	}).(ServiceLevelObjectiveSliMetricMetricTypeOutput)
}

func (o ServiceLevelObjectiveSliMetricMetricTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliMetricMetricTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLevelObjectiveSliMetricMetricType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLevelObjectiveSliMetricMetricTypeInput is an input type that accepts values of the ServiceLevelObjectiveSliMetricMetricType enum
// A concrete instance of `ServiceLevelObjectiveSliMetricMetricTypeInput` can be one of the following:
//
//	ServiceLevelObjectiveSliMetricMetricTypeLatency
//	ServiceLevelObjectiveSliMetricMetricTypeAvailability
type ServiceLevelObjectiveSliMetricMetricTypeInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliMetricMetricTypeOutput() ServiceLevelObjectiveSliMetricMetricTypeOutput
	ToServiceLevelObjectiveSliMetricMetricTypeOutputWithContext(context.Context) ServiceLevelObjectiveSliMetricMetricTypeOutput
}

var serviceLevelObjectiveSliMetricMetricTypePtrType = reflect.TypeOf((**ServiceLevelObjectiveSliMetricMetricType)(nil)).Elem()

type ServiceLevelObjectiveSliMetricMetricTypePtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliMetricMetricTypePtrOutput() ServiceLevelObjectiveSliMetricMetricTypePtrOutput
	ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(context.Context) ServiceLevelObjectiveSliMetricMetricTypePtrOutput
}

type serviceLevelObjectiveSliMetricMetricTypePtr string

func ServiceLevelObjectiveSliMetricMetricTypePtr(v string) ServiceLevelObjectiveSliMetricMetricTypePtrInput {
	return (*serviceLevelObjectiveSliMetricMetricTypePtr)(&v)
}

func (*serviceLevelObjectiveSliMetricMetricTypePtr) ElementType() reflect.Type {
	return serviceLevelObjectiveSliMetricMetricTypePtrType
}

func (in *serviceLevelObjectiveSliMetricMetricTypePtr) ToServiceLevelObjectiveSliMetricMetricTypePtrOutput() ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceLevelObjectiveSliMetricMetricTypePtrOutput)
}

func (in *serviceLevelObjectiveSliMetricMetricTypePtr) ToServiceLevelObjectiveSliMetricMetricTypePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliMetricMetricTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLevelObjectiveSliMetricMetricTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveDurationUnitInput)(nil)).Elem(), ServiceLevelObjectiveDurationUnit("DAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveDurationUnitPtrInput)(nil)).Elem(), ServiceLevelObjectiveDurationUnit("DAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliComparisonOperatorInput)(nil)).Elem(), ServiceLevelObjectiveSliComparisonOperator("GreaterThanOrEqualTo"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliComparisonOperatorPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliComparisonOperator("GreaterThanOrEqualTo"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliMetricMetricTypeInput)(nil)).Elem(), ServiceLevelObjectiveSliMetricMetricType("LATENCY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliMetricMetricTypePtrInput)(nil)).Elem(), ServiceLevelObjectiveSliMetricMetricType("LATENCY"))
	pulumi.RegisterOutputType(ServiceLevelObjectiveDurationUnitOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveDurationUnitPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliComparisonOperatorOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliComparisonOperatorPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliMetricMetricTypeOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliMetricMetricTypePtrOutput{})
}
