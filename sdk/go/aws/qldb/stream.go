// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qldb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::QLDB::Stream.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/qldb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qldb.NewStream(ctx, "myQLDBStream", &qldb.StreamArgs{
//				ExclusiveEndTime:   pulumi.String("2020-05-29T22:59:59Z"),
//				InclusiveStartTime: pulumi.String("2020-05-29T00:00:00Z"),
//				KinesisConfiguration: &qldb.StreamKinesisConfigurationArgs{
//					AggregationEnabled: pulumi.Bool(true),
//					StreamArn:          pulumi.String("arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb"),
//				},
//				LedgerName: pulumi.String("exampleLedger"),
//				RoleArn:    pulumi.String("arn:aws:iam::123456789012:role/my-kinesis-stream-role"),
//				StreamName: pulumi.String("exampleLedger-stream"),
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("Domain"),
//						Value: pulumi.String("Test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/qldb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qldb.NewStream(ctx, "myQLDBStream", &qldb.StreamArgs{
//				ExclusiveEndTime:   pulumi.String("2020-05-29T22:59:59Z"),
//				InclusiveStartTime: pulumi.String("2020-05-29T00:00:00Z"),
//				KinesisConfiguration: &qldb.StreamKinesisConfigurationArgs{
//					AggregationEnabled: pulumi.Bool(true),
//					StreamArn:          pulumi.String("arn:aws:kinesis:us-east-1:123456789012:stream/stream-for-qldb"),
//				},
//				LedgerName: pulumi.String("exampleLedger"),
//				RoleArn:    pulumi.String("arn:aws:iam::123456789012:role/my-kinesis-stream-role"),
//				StreamName: pulumi.String("exampleLedger-stream"),
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("Domain"),
//						Value: pulumi.String("Test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Stream struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the QLDB journal stream. For example: `arn:aws:qldb:us-east-1:123456789012:stream/exampleLedger/IiPT4brpZCqCq3f4MTHbYy` .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The unique ID that QLDB assigns to each QLDB journal stream. For example: `IiPT4brpZCqCq3f4MTHbYy` .
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
	//
	// The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	ExclusiveEndTime pulumi.StringPtrOutput `pulumi:"exclusiveEndTime"`
	// The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	//
	// The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
	//
	// If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
	InclusiveStartTime pulumi.StringOutput `pulumi:"inclusiveStartTime"`
	// The configuration settings of the Kinesis Data Streams destination for your stream request.
	KinesisConfiguration StreamKinesisConfigurationOutput `pulumi:"kinesisConfiguration"`
	// The name of the ledger.
	LedgerName pulumi.StringOutput `pulumi:"ledgerName"`
	// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
	//
	// To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
	//
	// Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
	StreamName pulumi.StringOutput `pulumi:"streamName"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewStream registers a new resource with the given unique name, arguments, and options.
func NewStream(ctx *pulumi.Context,
	name string, args *StreamArgs, opts ...pulumi.ResourceOption) (*Stream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InclusiveStartTime == nil {
		return nil, errors.New("invalid value for required argument 'InclusiveStartTime'")
	}
	if args.KinesisConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'KinesisConfiguration'")
	}
	if args.LedgerName == nil {
		return nil, errors.New("invalid value for required argument 'LedgerName'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"exclusiveEndTime",
		"inclusiveStartTime",
		"kinesisConfiguration",
		"ledgerName",
		"roleArn",
		"streamName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Stream
	err := ctx.RegisterResource("aws-native:qldb:Stream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStream gets an existing Stream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StreamState, opts ...pulumi.ResourceOption) (*Stream, error) {
	var resource Stream
	err := ctx.ReadResource("aws-native:qldb:Stream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stream resources.
type streamState struct {
}

type StreamState struct {
}

func (StreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*streamState)(nil)).Elem()
}

type streamArgs struct {
	// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
	//
	// The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	ExclusiveEndTime *string `pulumi:"exclusiveEndTime"`
	// The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	//
	// The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
	//
	// If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
	InclusiveStartTime string `pulumi:"inclusiveStartTime"`
	// The configuration settings of the Kinesis Data Streams destination for your stream request.
	KinesisConfiguration StreamKinesisConfiguration `pulumi:"kinesisConfiguration"`
	// The name of the ledger.
	LedgerName string `pulumi:"ledgerName"`
	// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
	//
	// To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
	RoleArn string `pulumi:"roleArn"`
	// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
	//
	// Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
	StreamName *string `pulumi:"streamName"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Stream resource.
type StreamArgs struct {
	// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
	//
	// The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	ExclusiveEndTime pulumi.StringPtrInput
	// The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
	//
	// The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
	//
	// If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
	InclusiveStartTime pulumi.StringInput
	// The configuration settings of the Kinesis Data Streams destination for your stream request.
	KinesisConfiguration StreamKinesisConfigurationInput
	// The name of the ledger.
	LedgerName pulumi.StringInput
	// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
	//
	// To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
	RoleArn pulumi.StringInput
	// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
	//
	// Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
	StreamName pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (StreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*streamArgs)(nil)).Elem()
}

type StreamInput interface {
	pulumi.Input

	ToStreamOutput() StreamOutput
	ToStreamOutputWithContext(ctx context.Context) StreamOutput
}

func (*Stream) ElementType() reflect.Type {
	return reflect.TypeOf((**Stream)(nil)).Elem()
}

func (i *Stream) ToStreamOutput() StreamOutput {
	return i.ToStreamOutputWithContext(context.Background())
}

func (i *Stream) ToStreamOutputWithContext(ctx context.Context) StreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamOutput)
}

type StreamOutput struct{ *pulumi.OutputState }

func (StreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Stream)(nil)).Elem()
}

func (o StreamOutput) ToStreamOutput() StreamOutput {
	return o
}

func (o StreamOutput) ToStreamOutputWithContext(ctx context.Context) StreamOutput {
	return o
}

// The Amazon Resource Name (ARN) of the QLDB journal stream. For example: `arn:aws:qldb:us-east-1:123456789012:stream/exampleLedger/IiPT4brpZCqCq3f4MTHbYy` .
func (o StreamOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The unique ID that QLDB assigns to each QLDB journal stream. For example: `IiPT4brpZCqCq3f4MTHbYy` .
func (o StreamOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it.
//
// The `ExclusiveEndTime` must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
func (o StreamOutput) ExclusiveEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringPtrOutput { return v.ExclusiveEndTime }).(pulumi.StringPtrOutput)
}

// The inclusive start date and time from which to start streaming journal data. This parameter must be in `ISO 8601` date and time format and in Universal Coordinated Time (UTC). For example: `2019-06-13T21:36:34Z` .
//
// The `InclusiveStartTime` cannot be in the future and must be before `ExclusiveEndTime` .
//
// If you provide an `InclusiveStartTime` that is before the ledger's `CreationDateTime` , QLDB effectively defaults it to the ledger's `CreationDateTime` .
func (o StreamOutput) InclusiveStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.InclusiveStartTime }).(pulumi.StringOutput)
}

// The configuration settings of the Kinesis Data Streams destination for your stream request.
func (o StreamOutput) KinesisConfiguration() StreamKinesisConfigurationOutput {
	return o.ApplyT(func(v *Stream) StreamKinesisConfigurationOutput { return v.KinesisConfiguration }).(StreamKinesisConfigurationOutput)
}

// The name of the ledger.
func (o StreamOutput) LedgerName() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.LedgerName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
//
// To pass a role to QLDB when requesting a journal stream, you must have permissions to perform the `iam:PassRole` action on the IAM role resource. This is required for all journal stream requests.
func (o StreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.
//
// Your stream name must be unique among other *active* streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in [Quotas in Amazon QLDB](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming) in the *Amazon QLDB Developer Guide* .
func (o StreamOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v *Stream) pulumi.StringOutput { return v.StreamName }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o StreamOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Stream) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StreamInput)(nil)).Elem(), &Stream{})
	pulumi.RegisterOutputType(StreamOutput{})
}
