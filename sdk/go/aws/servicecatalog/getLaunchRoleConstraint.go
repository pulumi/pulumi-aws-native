// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ServiceCatalog::LaunchRoleConstraint
func LookupLaunchRoleConstraint(ctx *pulumi.Context, args *LookupLaunchRoleConstraintArgs, opts ...pulumi.InvokeOption) (*LookupLaunchRoleConstraintResult, error) {
	var rv LookupLaunchRoleConstraintResult
	err := ctx.Invoke("aws-native:servicecatalog:getLaunchRoleConstraint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLaunchRoleConstraintArgs struct {
	Id string `pulumi:"id"`
}

type LookupLaunchRoleConstraintResult struct {
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	Description    *string `pulumi:"description"`
	Id             *string `pulumi:"id"`
	LocalRoleName  *string `pulumi:"localRoleName"`
	RoleArn        *string `pulumi:"roleArn"`
}

func LookupLaunchRoleConstraintOutput(ctx *pulumi.Context, args LookupLaunchRoleConstraintOutputArgs, opts ...pulumi.InvokeOption) LookupLaunchRoleConstraintResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLaunchRoleConstraintResult, error) {
			args := v.(LookupLaunchRoleConstraintArgs)
			r, err := LookupLaunchRoleConstraint(ctx, &args, opts...)
			return *r, err
		}).(LookupLaunchRoleConstraintResultOutput)
}

type LookupLaunchRoleConstraintOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupLaunchRoleConstraintOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLaunchRoleConstraintArgs)(nil)).Elem()
}

type LookupLaunchRoleConstraintResultOutput struct{ *pulumi.OutputState }

func (LookupLaunchRoleConstraintResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLaunchRoleConstraintResult)(nil)).Elem()
}

func (o LookupLaunchRoleConstraintResultOutput) ToLookupLaunchRoleConstraintResultOutput() LookupLaunchRoleConstraintResultOutput {
	return o
}

func (o LookupLaunchRoleConstraintResultOutput) ToLookupLaunchRoleConstraintResultOutputWithContext(ctx context.Context) LookupLaunchRoleConstraintResultOutput {
	return o
}

func (o LookupLaunchRoleConstraintResultOutput) AcceptLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchRoleConstraintResult) *string { return v.AcceptLanguage }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchRoleConstraintResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchRoleConstraintResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchRoleConstraintResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchRoleConstraintResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchRoleConstraintResultOutput) LocalRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchRoleConstraintResult) *string { return v.LocalRoleName }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchRoleConstraintResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchRoleConstraintResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLaunchRoleConstraintResultOutput{})
}
