// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ServiceCatalog::PortfolioProductAssociation
//
// Deprecated: PortfolioProductAssociation is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type PortfolioProductAssociation struct {
	pulumi.CustomResourceState

	AcceptLanguage    pulumi.StringPtrOutput `pulumi:"acceptLanguage"`
	PortfolioId       pulumi.StringOutput    `pulumi:"portfolioId"`
	ProductId         pulumi.StringOutput    `pulumi:"productId"`
	SourcePortfolioId pulumi.StringPtrOutput `pulumi:"sourcePortfolioId"`
}

// NewPortfolioProductAssociation registers a new resource with the given unique name, arguments, and options.
func NewPortfolioProductAssociation(ctx *pulumi.Context,
	name string, args *PortfolioProductAssociationArgs, opts ...pulumi.ResourceOption) (*PortfolioProductAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PortfolioId == nil {
		return nil, errors.New("invalid value for required argument 'PortfolioId'")
	}
	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	var resource PortfolioProductAssociation
	err := ctx.RegisterResource("aws-native:servicecatalog:PortfolioProductAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPortfolioProductAssociation gets an existing PortfolioProductAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortfolioProductAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortfolioProductAssociationState, opts ...pulumi.ResourceOption) (*PortfolioProductAssociation, error) {
	var resource PortfolioProductAssociation
	err := ctx.ReadResource("aws-native:servicecatalog:PortfolioProductAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PortfolioProductAssociation resources.
type portfolioProductAssociationState struct {
}

type PortfolioProductAssociationState struct {
}

func (PortfolioProductAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*portfolioProductAssociationState)(nil)).Elem()
}

type portfolioProductAssociationArgs struct {
	AcceptLanguage    *string `pulumi:"acceptLanguage"`
	PortfolioId       string  `pulumi:"portfolioId"`
	ProductId         string  `pulumi:"productId"`
	SourcePortfolioId *string `pulumi:"sourcePortfolioId"`
}

// The set of arguments for constructing a PortfolioProductAssociation resource.
type PortfolioProductAssociationArgs struct {
	AcceptLanguage    pulumi.StringPtrInput
	PortfolioId       pulumi.StringInput
	ProductId         pulumi.StringInput
	SourcePortfolioId pulumi.StringPtrInput
}

func (PortfolioProductAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portfolioProductAssociationArgs)(nil)).Elem()
}

type PortfolioProductAssociationInput interface {
	pulumi.Input

	ToPortfolioProductAssociationOutput() PortfolioProductAssociationOutput
	ToPortfolioProductAssociationOutputWithContext(ctx context.Context) PortfolioProductAssociationOutput
}

func (*PortfolioProductAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*PortfolioProductAssociation)(nil))
}

func (i *PortfolioProductAssociation) ToPortfolioProductAssociationOutput() PortfolioProductAssociationOutput {
	return i.ToPortfolioProductAssociationOutputWithContext(context.Background())
}

func (i *PortfolioProductAssociation) ToPortfolioProductAssociationOutputWithContext(ctx context.Context) PortfolioProductAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortfolioProductAssociationOutput)
}

type PortfolioProductAssociationOutput struct{ *pulumi.OutputState }

func (PortfolioProductAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortfolioProductAssociation)(nil))
}

func (o PortfolioProductAssociationOutput) ToPortfolioProductAssociationOutput() PortfolioProductAssociationOutput {
	return o
}

func (o PortfolioProductAssociationOutput) ToPortfolioProductAssociationOutputWithContext(ctx context.Context) PortfolioProductAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PortfolioProductAssociationOutput{})
}
