// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html
type ServiceAction struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-acceptlanguage
	AcceptLanguage pulumi.StringPtrOutput `pulumi:"acceptLanguage"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definition
	Definition ServiceActionDefinitionParameterArrayOutput `pulumi:"definition"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definitiontype
	DefinitionType pulumi.StringOutput `pulumi:"definitionType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Id          pulumi.StringOutput    `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewServiceAction registers a new resource with the given unique name, arguments, and options.
func NewServiceAction(ctx *pulumi.Context,
	name string, args *ServiceActionArgs, opts ...pulumi.ResourceOption) (*ServiceAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	if args.DefinitionType == nil {
		return nil, errors.New("invalid value for required argument 'DefinitionType'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource ServiceAction
	err := ctx.RegisterResource("aws-native:ServiceCatalog:ServiceAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAction gets an existing ServiceAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceActionState, opts ...pulumi.ResourceOption) (*ServiceAction, error) {
	var resource ServiceAction
	err := ctx.ReadResource("aws-native:ServiceCatalog:ServiceAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAction resources.
type serviceActionState struct {
}

type ServiceActionState struct {
}

func (ServiceActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceActionState)(nil)).Elem()
}

type serviceActionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-acceptlanguage
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definition
	Definition []ServiceActionDefinitionParameter `pulumi:"definition"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definitiontype
	DefinitionType string `pulumi:"definitionType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-name
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a ServiceAction resource.
type ServiceActionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-acceptlanguage
	AcceptLanguage pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definition
	Definition ServiceActionDefinitionParameterArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definitiontype
	DefinitionType pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-name
	Name pulumi.StringInput
}

func (ServiceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceActionArgs)(nil)).Elem()
}

type ServiceActionInput interface {
	pulumi.Input

	ToServiceActionOutput() ServiceActionOutput
	ToServiceActionOutputWithContext(ctx context.Context) ServiceActionOutput
}

func (*ServiceAction) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAction)(nil))
}

func (i *ServiceAction) ToServiceActionOutput() ServiceActionOutput {
	return i.ToServiceActionOutputWithContext(context.Background())
}

func (i *ServiceAction) ToServiceActionOutputWithContext(ctx context.Context) ServiceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceActionOutput)
}

type ServiceActionOutput struct{ *pulumi.OutputState }

func (ServiceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAction)(nil))
}

func (o ServiceActionOutput) ToServiceActionOutput() ServiceActionOutput {
	return o
}

func (o ServiceActionOutput) ToServiceActionOutputWithContext(ctx context.Context) ServiceActionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceActionOutput{})
}
