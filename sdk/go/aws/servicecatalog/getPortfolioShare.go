// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ServiceCatalog::PortfolioShare
func LookupPortfolioShare(ctx *pulumi.Context, args *LookupPortfolioShareArgs, opts ...pulumi.InvokeOption) (*LookupPortfolioShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPortfolioShareResult
	err := ctx.Invoke("aws-native:servicecatalog:getPortfolioShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPortfolioShareArgs struct {
	// The AWS account ID.
	AccountId string `pulumi:"accountId"`
	// The portfolio identifier.
	PortfolioId string `pulumi:"portfolioId"`
}

type LookupPortfolioShareResult struct {
	// Enables or disables TagOptions sharing when creating the portfolio share.
	ShareTagOptions *bool `pulumi:"shareTagOptions"`
}

func LookupPortfolioShareOutput(ctx *pulumi.Context, args LookupPortfolioShareOutputArgs, opts ...pulumi.InvokeOption) LookupPortfolioShareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPortfolioShareResultOutput, error) {
			args := v.(LookupPortfolioShareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:servicecatalog:getPortfolioShare", args, LookupPortfolioShareResultOutput{}, options).(LookupPortfolioShareResultOutput), nil
		}).(LookupPortfolioShareResultOutput)
}

type LookupPortfolioShareOutputArgs struct {
	// The AWS account ID.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The portfolio identifier.
	PortfolioId pulumi.StringInput `pulumi:"portfolioId"`
}

func (LookupPortfolioShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPortfolioShareArgs)(nil)).Elem()
}

type LookupPortfolioShareResultOutput struct{ *pulumi.OutputState }

func (LookupPortfolioShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPortfolioShareResult)(nil)).Elem()
}

func (o LookupPortfolioShareResultOutput) ToLookupPortfolioShareResultOutput() LookupPortfolioShareResultOutput {
	return o
}

func (o LookupPortfolioShareResultOutput) ToLookupPortfolioShareResultOutputWithContext(ctx context.Context) LookupPortfolioShareResultOutput {
	return o
}

// Enables or disables TagOptions sharing when creating the portfolio share.
func (o LookupPortfolioShareResultOutput) ShareTagOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPortfolioShareResult) *bool { return v.ShareTagOptions }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPortfolioShareResultOutput{})
}
