// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package paymentcryptography

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KeyAlgorithm string

const (
	KeyAlgorithmTdes2key    = KeyAlgorithm("TDES_2KEY")
	KeyAlgorithmTdes3key    = KeyAlgorithm("TDES_3KEY")
	KeyAlgorithmAes128      = KeyAlgorithm("AES_128")
	KeyAlgorithmAes192      = KeyAlgorithm("AES_192")
	KeyAlgorithmAes256      = KeyAlgorithm("AES_256")
	KeyAlgorithmHmacSha256  = KeyAlgorithm("HMAC_SHA256")
	KeyAlgorithmHmacSha384  = KeyAlgorithm("HMAC_SHA384")
	KeyAlgorithmHmacSha512  = KeyAlgorithm("HMAC_SHA512")
	KeyAlgorithmHmacSha224  = KeyAlgorithm("HMAC_SHA224")
	KeyAlgorithmRsa2048     = KeyAlgorithm("RSA_2048")
	KeyAlgorithmRsa3072     = KeyAlgorithm("RSA_3072")
	KeyAlgorithmRsa4096     = KeyAlgorithm("RSA_4096")
	KeyAlgorithmEccNistP256 = KeyAlgorithm("ECC_NIST_P256")
	KeyAlgorithmEccNistP384 = KeyAlgorithm("ECC_NIST_P384")
	KeyAlgorithmEccNistP521 = KeyAlgorithm("ECC_NIST_P521")
)

func (KeyAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyAlgorithm)(nil)).Elem()
}

func (e KeyAlgorithm) ToKeyAlgorithmOutput() KeyAlgorithmOutput {
	return pulumi.ToOutput(e).(KeyAlgorithmOutput)
}

func (e KeyAlgorithm) ToKeyAlgorithmOutputWithContext(ctx context.Context) KeyAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeyAlgorithmOutput)
}

func (e KeyAlgorithm) ToKeyAlgorithmPtrOutput() KeyAlgorithmPtrOutput {
	return e.ToKeyAlgorithmPtrOutputWithContext(context.Background())
}

func (e KeyAlgorithm) ToKeyAlgorithmPtrOutputWithContext(ctx context.Context) KeyAlgorithmPtrOutput {
	return KeyAlgorithm(e).ToKeyAlgorithmOutputWithContext(ctx).ToKeyAlgorithmPtrOutputWithContext(ctx)
}

func (e KeyAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyAlgorithmOutput struct{ *pulumi.OutputState }

func (KeyAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyAlgorithm)(nil)).Elem()
}

func (o KeyAlgorithmOutput) ToKeyAlgorithmOutput() KeyAlgorithmOutput {
	return o
}

func (o KeyAlgorithmOutput) ToKeyAlgorithmOutputWithContext(ctx context.Context) KeyAlgorithmOutput {
	return o
}

func (o KeyAlgorithmOutput) ToKeyAlgorithmPtrOutput() KeyAlgorithmPtrOutput {
	return o.ToKeyAlgorithmPtrOutputWithContext(context.Background())
}

func (o KeyAlgorithmOutput) ToKeyAlgorithmPtrOutputWithContext(ctx context.Context) KeyAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyAlgorithm) *KeyAlgorithm {
		return &v
	}).(KeyAlgorithmPtrOutput)
}

func (o KeyAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (KeyAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyAlgorithm)(nil)).Elem()
}

func (o KeyAlgorithmPtrOutput) ToKeyAlgorithmPtrOutput() KeyAlgorithmPtrOutput {
	return o
}

func (o KeyAlgorithmPtrOutput) ToKeyAlgorithmPtrOutputWithContext(ctx context.Context) KeyAlgorithmPtrOutput {
	return o
}

func (o KeyAlgorithmPtrOutput) Elem() KeyAlgorithmOutput {
	return o.ApplyT(func(v *KeyAlgorithm) KeyAlgorithm {
		if v != nil {
			return *v
		}
		var ret KeyAlgorithm
		return ret
	}).(KeyAlgorithmOutput)
}

func (o KeyAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeyAlgorithmInput is an input type that accepts values of the KeyAlgorithm enum
// A concrete instance of `KeyAlgorithmInput` can be one of the following:
//
//	KeyAlgorithmTdes2key
//	KeyAlgorithmTdes3key
//	KeyAlgorithmAes128
//	KeyAlgorithmAes192
//	KeyAlgorithmAes256
//	KeyAlgorithmHmacSha256
//	KeyAlgorithmHmacSha384
//	KeyAlgorithmHmacSha512
//	KeyAlgorithmHmacSha224
//	KeyAlgorithmRsa2048
//	KeyAlgorithmRsa3072
//	KeyAlgorithmRsa4096
//	KeyAlgorithmEccNistP256
//	KeyAlgorithmEccNistP384
//	KeyAlgorithmEccNistP521
type KeyAlgorithmInput interface {
	pulumi.Input

	ToKeyAlgorithmOutput() KeyAlgorithmOutput
	ToKeyAlgorithmOutputWithContext(context.Context) KeyAlgorithmOutput
}

var keyAlgorithmPtrType = reflect.TypeOf((**KeyAlgorithm)(nil)).Elem()

type KeyAlgorithmPtrInput interface {
	pulumi.Input

	ToKeyAlgorithmPtrOutput() KeyAlgorithmPtrOutput
	ToKeyAlgorithmPtrOutputWithContext(context.Context) KeyAlgorithmPtrOutput
}

type keyAlgorithmPtr string

func KeyAlgorithmPtr(v string) KeyAlgorithmPtrInput {
	return (*keyAlgorithmPtr)(&v)
}

func (*keyAlgorithmPtr) ElementType() reflect.Type {
	return keyAlgorithmPtrType
}

func (in *keyAlgorithmPtr) ToKeyAlgorithmPtrOutput() KeyAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(KeyAlgorithmPtrOutput)
}

func (in *keyAlgorithmPtr) ToKeyAlgorithmPtrOutputWithContext(ctx context.Context) KeyAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeyAlgorithmPtrOutput)
}

type KeyCheckValueAlgorithm string

const (
	KeyCheckValueAlgorithmCmac     = KeyCheckValueAlgorithm("CMAC")
	KeyCheckValueAlgorithmAnsiX924 = KeyCheckValueAlgorithm("ANSI_X9_24")
)

func (KeyCheckValueAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyCheckValueAlgorithm)(nil)).Elem()
}

func (e KeyCheckValueAlgorithm) ToKeyCheckValueAlgorithmOutput() KeyCheckValueAlgorithmOutput {
	return pulumi.ToOutput(e).(KeyCheckValueAlgorithmOutput)
}

func (e KeyCheckValueAlgorithm) ToKeyCheckValueAlgorithmOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeyCheckValueAlgorithmOutput)
}

func (e KeyCheckValueAlgorithm) ToKeyCheckValueAlgorithmPtrOutput() KeyCheckValueAlgorithmPtrOutput {
	return e.ToKeyCheckValueAlgorithmPtrOutputWithContext(context.Background())
}

func (e KeyCheckValueAlgorithm) ToKeyCheckValueAlgorithmPtrOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmPtrOutput {
	return KeyCheckValueAlgorithm(e).ToKeyCheckValueAlgorithmOutputWithContext(ctx).ToKeyCheckValueAlgorithmPtrOutputWithContext(ctx)
}

func (e KeyCheckValueAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyCheckValueAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyCheckValueAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyCheckValueAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyCheckValueAlgorithmOutput struct{ *pulumi.OutputState }

func (KeyCheckValueAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyCheckValueAlgorithm)(nil)).Elem()
}

func (o KeyCheckValueAlgorithmOutput) ToKeyCheckValueAlgorithmOutput() KeyCheckValueAlgorithmOutput {
	return o
}

func (o KeyCheckValueAlgorithmOutput) ToKeyCheckValueAlgorithmOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmOutput {
	return o
}

func (o KeyCheckValueAlgorithmOutput) ToKeyCheckValueAlgorithmPtrOutput() KeyCheckValueAlgorithmPtrOutput {
	return o.ToKeyCheckValueAlgorithmPtrOutputWithContext(context.Background())
}

func (o KeyCheckValueAlgorithmOutput) ToKeyCheckValueAlgorithmPtrOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyCheckValueAlgorithm) *KeyCheckValueAlgorithm {
		return &v
	}).(KeyCheckValueAlgorithmPtrOutput)
}

func (o KeyCheckValueAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyCheckValueAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyCheckValueAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyCheckValueAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyCheckValueAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyCheckValueAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyCheckValueAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (KeyCheckValueAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyCheckValueAlgorithm)(nil)).Elem()
}

func (o KeyCheckValueAlgorithmPtrOutput) ToKeyCheckValueAlgorithmPtrOutput() KeyCheckValueAlgorithmPtrOutput {
	return o
}

func (o KeyCheckValueAlgorithmPtrOutput) ToKeyCheckValueAlgorithmPtrOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmPtrOutput {
	return o
}

func (o KeyCheckValueAlgorithmPtrOutput) Elem() KeyCheckValueAlgorithmOutput {
	return o.ApplyT(func(v *KeyCheckValueAlgorithm) KeyCheckValueAlgorithm {
		if v != nil {
			return *v
		}
		var ret KeyCheckValueAlgorithm
		return ret
	}).(KeyCheckValueAlgorithmOutput)
}

func (o KeyCheckValueAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyCheckValueAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyCheckValueAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeyCheckValueAlgorithmInput is an input type that accepts values of the KeyCheckValueAlgorithm enum
// A concrete instance of `KeyCheckValueAlgorithmInput` can be one of the following:
//
//	KeyCheckValueAlgorithmCmac
//	KeyCheckValueAlgorithmAnsiX924
type KeyCheckValueAlgorithmInput interface {
	pulumi.Input

	ToKeyCheckValueAlgorithmOutput() KeyCheckValueAlgorithmOutput
	ToKeyCheckValueAlgorithmOutputWithContext(context.Context) KeyCheckValueAlgorithmOutput
}

var keyCheckValueAlgorithmPtrType = reflect.TypeOf((**KeyCheckValueAlgorithm)(nil)).Elem()

type KeyCheckValueAlgorithmPtrInput interface {
	pulumi.Input

	ToKeyCheckValueAlgorithmPtrOutput() KeyCheckValueAlgorithmPtrOutput
	ToKeyCheckValueAlgorithmPtrOutputWithContext(context.Context) KeyCheckValueAlgorithmPtrOutput
}

type keyCheckValueAlgorithmPtr string

func KeyCheckValueAlgorithmPtr(v string) KeyCheckValueAlgorithmPtrInput {
	return (*keyCheckValueAlgorithmPtr)(&v)
}

func (*keyCheckValueAlgorithmPtr) ElementType() reflect.Type {
	return keyCheckValueAlgorithmPtrType
}

func (in *keyCheckValueAlgorithmPtr) ToKeyCheckValueAlgorithmPtrOutput() KeyCheckValueAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(KeyCheckValueAlgorithmPtrOutput)
}

func (in *keyCheckValueAlgorithmPtr) ToKeyCheckValueAlgorithmPtrOutputWithContext(ctx context.Context) KeyCheckValueAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeyCheckValueAlgorithmPtrOutput)
}

type KeyClass string

const (
	KeyClassSymmetricKey      = KeyClass("SYMMETRIC_KEY")
	KeyClassAsymmetricKeyPair = KeyClass("ASYMMETRIC_KEY_PAIR")
	KeyClassPrivateKey        = KeyClass("PRIVATE_KEY")
	KeyClassPublicKey         = KeyClass("PUBLIC_KEY")
)

func (KeyClass) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyClass)(nil)).Elem()
}

func (e KeyClass) ToKeyClassOutput() KeyClassOutput {
	return pulumi.ToOutput(e).(KeyClassOutput)
}

func (e KeyClass) ToKeyClassOutputWithContext(ctx context.Context) KeyClassOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeyClassOutput)
}

func (e KeyClass) ToKeyClassPtrOutput() KeyClassPtrOutput {
	return e.ToKeyClassPtrOutputWithContext(context.Background())
}

func (e KeyClass) ToKeyClassPtrOutputWithContext(ctx context.Context) KeyClassPtrOutput {
	return KeyClass(e).ToKeyClassOutputWithContext(ctx).ToKeyClassPtrOutputWithContext(ctx)
}

func (e KeyClass) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyClass) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyClass) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyClass) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyClassOutput struct{ *pulumi.OutputState }

func (KeyClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyClass)(nil)).Elem()
}

func (o KeyClassOutput) ToKeyClassOutput() KeyClassOutput {
	return o
}

func (o KeyClassOutput) ToKeyClassOutputWithContext(ctx context.Context) KeyClassOutput {
	return o
}

func (o KeyClassOutput) ToKeyClassPtrOutput() KeyClassPtrOutput {
	return o.ToKeyClassPtrOutputWithContext(context.Background())
}

func (o KeyClassOutput) ToKeyClassPtrOutputWithContext(ctx context.Context) KeyClassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyClass) *KeyClass {
		return &v
	}).(KeyClassPtrOutput)
}

func (o KeyClassOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyClassOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyClass) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyClassOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyClassOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyClass) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyClassPtrOutput struct{ *pulumi.OutputState }

func (KeyClassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyClass)(nil)).Elem()
}

func (o KeyClassPtrOutput) ToKeyClassPtrOutput() KeyClassPtrOutput {
	return o
}

func (o KeyClassPtrOutput) ToKeyClassPtrOutputWithContext(ctx context.Context) KeyClassPtrOutput {
	return o
}

func (o KeyClassPtrOutput) Elem() KeyClassOutput {
	return o.ApplyT(func(v *KeyClass) KeyClass {
		if v != nil {
			return *v
		}
		var ret KeyClass
		return ret
	}).(KeyClassOutput)
}

func (o KeyClassPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyClassPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyClass) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeyClassInput is an input type that accepts values of the KeyClass enum
// A concrete instance of `KeyClassInput` can be one of the following:
//
//	KeyClassSymmetricKey
//	KeyClassAsymmetricKeyPair
//	KeyClassPrivateKey
//	KeyClassPublicKey
type KeyClassInput interface {
	pulumi.Input

	ToKeyClassOutput() KeyClassOutput
	ToKeyClassOutputWithContext(context.Context) KeyClassOutput
}

var keyClassPtrType = reflect.TypeOf((**KeyClass)(nil)).Elem()

type KeyClassPtrInput interface {
	pulumi.Input

	ToKeyClassPtrOutput() KeyClassPtrOutput
	ToKeyClassPtrOutputWithContext(context.Context) KeyClassPtrOutput
}

type keyClassPtr string

func KeyClassPtr(v string) KeyClassPtrInput {
	return (*keyClassPtr)(&v)
}

func (*keyClassPtr) ElementType() reflect.Type {
	return keyClassPtrType
}

func (in *keyClassPtr) ToKeyClassPtrOutput() KeyClassPtrOutput {
	return pulumi.ToOutput(in).(KeyClassPtrOutput)
}

func (in *keyClassPtr) ToKeyClassPtrOutputWithContext(ctx context.Context) KeyClassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeyClassPtrOutput)
}

// Defines the source of a key
type KeyOrigin string

const (
	KeyOriginExternal               = KeyOrigin("EXTERNAL")
	KeyOriginAwsPaymentCryptography = KeyOrigin("AWS_PAYMENT_CRYPTOGRAPHY")
)

type KeyOriginOutput struct{ *pulumi.OutputState }

func (KeyOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyOrigin)(nil)).Elem()
}

func (o KeyOriginOutput) ToKeyOriginOutput() KeyOriginOutput {
	return o
}

func (o KeyOriginOutput) ToKeyOriginOutputWithContext(ctx context.Context) KeyOriginOutput {
	return o
}

func (o KeyOriginOutput) ToKeyOriginPtrOutput() KeyOriginPtrOutput {
	return o.ToKeyOriginPtrOutputWithContext(context.Background())
}

func (o KeyOriginOutput) ToKeyOriginPtrOutputWithContext(ctx context.Context) KeyOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyOrigin) *KeyOrigin {
		return &v
	}).(KeyOriginPtrOutput)
}

func (o KeyOriginOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyOriginOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyOrigin) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyOriginOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyOriginOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyOrigin) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyOriginPtrOutput struct{ *pulumi.OutputState }

func (KeyOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyOrigin)(nil)).Elem()
}

func (o KeyOriginPtrOutput) ToKeyOriginPtrOutput() KeyOriginPtrOutput {
	return o
}

func (o KeyOriginPtrOutput) ToKeyOriginPtrOutputWithContext(ctx context.Context) KeyOriginPtrOutput {
	return o
}

func (o KeyOriginPtrOutput) Elem() KeyOriginOutput {
	return o.ApplyT(func(v *KeyOrigin) KeyOrigin {
		if v != nil {
			return *v
		}
		var ret KeyOrigin
		return ret
	}).(KeyOriginOutput)
}

func (o KeyOriginPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyOriginPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyOrigin) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Defines the state of a key
type KeyStateEnum string

const (
	KeyStateEnumCreateInProgress = KeyStateEnum("CREATE_IN_PROGRESS")
	KeyStateEnumCreateComplete   = KeyStateEnum("CREATE_COMPLETE")
	KeyStateEnumDeletePending    = KeyStateEnum("DELETE_PENDING")
	KeyStateEnumDeleteComplete   = KeyStateEnum("DELETE_COMPLETE")
)

type KeyStateEnumOutput struct{ *pulumi.OutputState }

func (KeyStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyStateEnum)(nil)).Elem()
}

func (o KeyStateEnumOutput) ToKeyStateEnumOutput() KeyStateEnumOutput {
	return o
}

func (o KeyStateEnumOutput) ToKeyStateEnumOutputWithContext(ctx context.Context) KeyStateEnumOutput {
	return o
}

func (o KeyStateEnumOutput) ToKeyStateEnumPtrOutput() KeyStateEnumPtrOutput {
	return o.ToKeyStateEnumPtrOutputWithContext(context.Background())
}

func (o KeyStateEnumOutput) ToKeyStateEnumPtrOutputWithContext(ctx context.Context) KeyStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyStateEnum) *KeyStateEnum {
		return &v
	}).(KeyStateEnumPtrOutput)
}

func (o KeyStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyStateEnumPtrOutput struct{ *pulumi.OutputState }

func (KeyStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyStateEnum)(nil)).Elem()
}

func (o KeyStateEnumPtrOutput) ToKeyStateEnumPtrOutput() KeyStateEnumPtrOutput {
	return o
}

func (o KeyStateEnumPtrOutput) ToKeyStateEnumPtrOutputWithContext(ctx context.Context) KeyStateEnumPtrOutput {
	return o
}

func (o KeyStateEnumPtrOutput) Elem() KeyStateEnumOutput {
	return o.ApplyT(func(v *KeyStateEnum) KeyStateEnum {
		if v != nil {
			return *v
		}
		var ret KeyStateEnum
		return ret
	}).(KeyStateEnumOutput)
}

func (o KeyStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyUsage string

const (
	KeyUsageTr31b0BaseDerivationKey                = KeyUsage("TR31_B0_BASE_DERIVATION_KEY")
	KeyUsageTr31c0CardVerificationKey              = KeyUsage("TR31_C0_CARD_VERIFICATION_KEY")
	KeyUsageTr31d0SymmetricDataEncryptionKey       = KeyUsage("TR31_D0_SYMMETRIC_DATA_ENCRYPTION_KEY")
	KeyUsageTr31d1AsymmetricKeyForDataEncryption   = KeyUsage("TR31_D1_ASYMMETRIC_KEY_FOR_DATA_ENCRYPTION")
	KeyUsageTr31e0EmvMkeyAppCryptograms            = KeyUsage("TR31_E0_EMV_MKEY_APP_CRYPTOGRAMS")
	KeyUsageTr31e1EmvMkeyConfidentiality           = KeyUsage("TR31_E1_EMV_MKEY_CONFIDENTIALITY")
	KeyUsageTr31e2EmvMkeyIntegrity                 = KeyUsage("TR31_E2_EMV_MKEY_INTEGRITY")
	KeyUsageTr31e4EmvMkeyDynamicNumbers            = KeyUsage("TR31_E4_EMV_MKEY_DYNAMIC_NUMBERS")
	KeyUsageTr31e5EmvMkeyCardPersonalization       = KeyUsage("TR31_E5_EMV_MKEY_CARD_PERSONALIZATION")
	KeyUsageTr31e6EmvMkeyOther                     = KeyUsage("TR31_E6_EMV_MKEY_OTHER")
	KeyUsageTr31k0KeyEncryptionKey                 = KeyUsage("TR31_K0_KEY_ENCRYPTION_KEY")
	KeyUsageTr31k1KeyBlockProtectionKey            = KeyUsage("TR31_K1_KEY_BLOCK_PROTECTION_KEY")
	KeyUsageTr31k3AsymmetricKeyForKeyAgreement     = KeyUsage("TR31_K3_ASYMMETRIC_KEY_FOR_KEY_AGREEMENT")
	KeyUsageTr31m3Iso97973MacKey                   = KeyUsage("TR31_M3_ISO_9797_3_MAC_KEY")
	KeyUsageTr31m1Iso97971MacKey                   = KeyUsage("TR31_M1_ISO_9797_1_MAC_KEY")
	KeyUsageTr31m6Iso97975CmacKey                  = KeyUsage("TR31_M6_ISO_9797_5_CMAC_KEY")
	KeyUsageTr31m7HmacKey                          = KeyUsage("TR31_M7_HMAC_KEY")
	KeyUsageTr31p0PinEncryptionKey                 = KeyUsage("TR31_P0_PIN_ENCRYPTION_KEY")
	KeyUsageTr31p1PinGenerationKey                 = KeyUsage("TR31_P1_PIN_GENERATION_KEY")
	KeyUsageTr31s0AsymmetricKeyForDigitalSignature = KeyUsage("TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE")
	KeyUsageTr31v1Ibm3624PinVerificationKey        = KeyUsage("TR31_V1_IBM3624_PIN_VERIFICATION_KEY")
	KeyUsageTr31v2VisaPinVerificationKey           = KeyUsage("TR31_V2_VISA_PIN_VERIFICATION_KEY")
	KeyUsageTr31k2Tr34AsymmetricKey                = KeyUsage("TR31_K2_TR34_ASYMMETRIC_KEY")
)

func (KeyUsage) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyUsage)(nil)).Elem()
}

func (e KeyUsage) ToKeyUsageOutput() KeyUsageOutput {
	return pulumi.ToOutput(e).(KeyUsageOutput)
}

func (e KeyUsage) ToKeyUsageOutputWithContext(ctx context.Context) KeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeyUsageOutput)
}

func (e KeyUsage) ToKeyUsagePtrOutput() KeyUsagePtrOutput {
	return e.ToKeyUsagePtrOutputWithContext(context.Background())
}

func (e KeyUsage) ToKeyUsagePtrOutputWithContext(ctx context.Context) KeyUsagePtrOutput {
	return KeyUsage(e).ToKeyUsageOutputWithContext(ctx).ToKeyUsagePtrOutputWithContext(ctx)
}

func (e KeyUsage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyUsage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyUsage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyUsage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyUsageOutput struct{ *pulumi.OutputState }

func (KeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyUsage)(nil)).Elem()
}

func (o KeyUsageOutput) ToKeyUsageOutput() KeyUsageOutput {
	return o
}

func (o KeyUsageOutput) ToKeyUsageOutputWithContext(ctx context.Context) KeyUsageOutput {
	return o
}

func (o KeyUsageOutput) ToKeyUsagePtrOutput() KeyUsagePtrOutput {
	return o.ToKeyUsagePtrOutputWithContext(context.Background())
}

func (o KeyUsageOutput) ToKeyUsagePtrOutputWithContext(ctx context.Context) KeyUsagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyUsage) *KeyUsage {
		return &v
	}).(KeyUsagePtrOutput)
}

func (o KeyUsageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeyUsageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyUsage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeyUsageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyUsageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeyUsage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeyUsagePtrOutput struct{ *pulumi.OutputState }

func (KeyUsagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyUsage)(nil)).Elem()
}

func (o KeyUsagePtrOutput) ToKeyUsagePtrOutput() KeyUsagePtrOutput {
	return o
}

func (o KeyUsagePtrOutput) ToKeyUsagePtrOutputWithContext(ctx context.Context) KeyUsagePtrOutput {
	return o
}

func (o KeyUsagePtrOutput) Elem() KeyUsageOutput {
	return o.ApplyT(func(v *KeyUsage) KeyUsage {
		if v != nil {
			return *v
		}
		var ret KeyUsage
		return ret
	}).(KeyUsageOutput)
}

func (o KeyUsagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeyUsagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeyUsage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeyUsageInput is an input type that accepts values of the KeyUsage enum
// A concrete instance of `KeyUsageInput` can be one of the following:
//
//	KeyUsageTr31b0BaseDerivationKey
//	KeyUsageTr31c0CardVerificationKey
//	KeyUsageTr31d0SymmetricDataEncryptionKey
//	KeyUsageTr31d1AsymmetricKeyForDataEncryption
//	KeyUsageTr31e0EmvMkeyAppCryptograms
//	KeyUsageTr31e1EmvMkeyConfidentiality
//	KeyUsageTr31e2EmvMkeyIntegrity
//	KeyUsageTr31e4EmvMkeyDynamicNumbers
//	KeyUsageTr31e5EmvMkeyCardPersonalization
//	KeyUsageTr31e6EmvMkeyOther
//	KeyUsageTr31k0KeyEncryptionKey
//	KeyUsageTr31k1KeyBlockProtectionKey
//	KeyUsageTr31k3AsymmetricKeyForKeyAgreement
//	KeyUsageTr31m3Iso97973MacKey
//	KeyUsageTr31m1Iso97971MacKey
//	KeyUsageTr31m6Iso97975CmacKey
//	KeyUsageTr31m7HmacKey
//	KeyUsageTr31p0PinEncryptionKey
//	KeyUsageTr31p1PinGenerationKey
//	KeyUsageTr31s0AsymmetricKeyForDigitalSignature
//	KeyUsageTr31v1Ibm3624PinVerificationKey
//	KeyUsageTr31v2VisaPinVerificationKey
//	KeyUsageTr31k2Tr34AsymmetricKey
type KeyUsageInput interface {
	pulumi.Input

	ToKeyUsageOutput() KeyUsageOutput
	ToKeyUsageOutputWithContext(context.Context) KeyUsageOutput
}

var keyUsagePtrType = reflect.TypeOf((**KeyUsage)(nil)).Elem()

type KeyUsagePtrInput interface {
	pulumi.Input

	ToKeyUsagePtrOutput() KeyUsagePtrOutput
	ToKeyUsagePtrOutputWithContext(context.Context) KeyUsagePtrOutput
}

type keyUsagePtr string

func KeyUsagePtr(v string) KeyUsagePtrInput {
	return (*keyUsagePtr)(&v)
}

func (*keyUsagePtr) ElementType() reflect.Type {
	return keyUsagePtrType
}

func (in *keyUsagePtr) ToKeyUsagePtrOutput() KeyUsagePtrOutput {
	return pulumi.ToOutput(in).(KeyUsagePtrOutput)
}

func (in *keyUsagePtr) ToKeyUsagePtrOutputWithContext(ctx context.Context) KeyUsagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeyUsagePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeyAlgorithmInput)(nil)).Elem(), KeyAlgorithm("TDES_2KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyAlgorithmPtrInput)(nil)).Elem(), KeyAlgorithm("TDES_2KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyCheckValueAlgorithmInput)(nil)).Elem(), KeyCheckValueAlgorithm("CMAC"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyCheckValueAlgorithmPtrInput)(nil)).Elem(), KeyCheckValueAlgorithm("CMAC"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyClassInput)(nil)).Elem(), KeyClass("SYMMETRIC_KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyClassPtrInput)(nil)).Elem(), KeyClass("SYMMETRIC_KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyUsageInput)(nil)).Elem(), KeyUsage("TR31_B0_BASE_DERIVATION_KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*KeyUsagePtrInput)(nil)).Elem(), KeyUsage("TR31_B0_BASE_DERIVATION_KEY"))
	pulumi.RegisterOutputType(KeyAlgorithmOutput{})
	pulumi.RegisterOutputType(KeyAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(KeyCheckValueAlgorithmOutput{})
	pulumi.RegisterOutputType(KeyCheckValueAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(KeyClassOutput{})
	pulumi.RegisterOutputType(KeyClassPtrOutput{})
	pulumi.RegisterOutputType(KeyOriginOutput{})
	pulumi.RegisterOutputType(KeyOriginPtrOutput{})
	pulumi.RegisterOutputType(KeyStateEnumOutput{})
	pulumi.RegisterOutputType(KeyStateEnumPtrOutput{})
	pulumi.RegisterOutputType(KeyUsageOutput{})
	pulumi.RegisterOutputType(KeyUsagePtrOutput{})
}
