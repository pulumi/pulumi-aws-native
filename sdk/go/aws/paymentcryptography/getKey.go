// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package paymentcryptography

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::PaymentCryptography::Key Resource Type
func LookupKey(ctx *pulumi.Context, args *LookupKeyArgs, opts ...pulumi.InvokeOption) (*LookupKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyResult
	err := ctx.Invoke("aws-native:paymentcryptography:getKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKeyArgs struct {
	KeyIdentifier string `pulumi:"keyIdentifier"`
}

type LookupKeyResult struct {
	Enabled                *bool                   `pulumi:"enabled"`
	Exportable             *bool                   `pulumi:"exportable"`
	KeyAttributes          *KeyAttributes          `pulumi:"keyAttributes"`
	KeyCheckValueAlgorithm *KeyCheckValueAlgorithm `pulumi:"keyCheckValueAlgorithm"`
	KeyIdentifier          *string                 `pulumi:"keyIdentifier"`
	KeyOrigin              *KeyOrigin              `pulumi:"keyOrigin"`
	KeyState               *KeyStateEnum           `pulumi:"keyState"`
	Tags                   []aws.Tag               `pulumi:"tags"`
}

func LookupKeyOutput(ctx *pulumi.Context, args LookupKeyOutputArgs, opts ...pulumi.InvokeOption) LookupKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyResult, error) {
			args := v.(LookupKeyArgs)
			r, err := LookupKey(ctx, &args, opts...)
			var s LookupKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyResultOutput)
}

type LookupKeyOutputArgs struct {
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
}

func (LookupKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyArgs)(nil)).Elem()
}

type LookupKeyResultOutput struct{ *pulumi.OutputState }

func (LookupKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyResult)(nil)).Elem()
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutput() LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutputWithContext(ctx context.Context) LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LookupKeyResultOutput) Exportable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *bool { return v.Exportable }).(pulumi.BoolPtrOutput)
}

func (o LookupKeyResultOutput) KeyAttributes() KeyAttributesPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *KeyAttributes { return v.KeyAttributes }).(KeyAttributesPtrOutput)
}

func (o LookupKeyResultOutput) KeyCheckValueAlgorithm() KeyCheckValueAlgorithmPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *KeyCheckValueAlgorithm { return v.KeyCheckValueAlgorithm }).(KeyCheckValueAlgorithmPtrOutput)
}

func (o LookupKeyResultOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupKeyResultOutput) KeyOrigin() KeyOriginPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *KeyOrigin { return v.KeyOrigin }).(KeyOriginPtrOutput)
}

func (o LookupKeyResultOutput) KeyState() KeyStateEnumPtrOutput {
	return o.ApplyT(func(v LookupKeyResult) *KeyStateEnum { return v.KeyState }).(KeyStateEnumPtrOutput)
}

func (o LookupKeyResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupKeyResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyResultOutput{})
}
