// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::B2BI::Capability Resource Type
func LookupCapability(ctx *pulumi.Context, args *LookupCapabilityArgs, opts ...pulumi.InvokeOption) (*LookupCapabilityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCapabilityResult
	err := ctx.Invoke("aws-native:b2bi:getCapability", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCapabilityArgs struct {
	// Returns a system-assigned unique identifier for the capability.
	CapabilityId string `pulumi:"capabilityId"`
}

type LookupCapabilityResult struct {
	// Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
	CapabilityArn *string `pulumi:"capabilityArn"`
	// Returns a system-assigned unique identifier for the capability.
	CapabilityId *string `pulumi:"capabilityId"`
	// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
	Configuration *CapabilityConfigurationProperties `pulumi:"configuration"`
	// Returns a timestamp for creation date and time of the capability.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
	InstructionsDocuments []CapabilityS3Location `pulumi:"instructionsDocuments"`
	// Returns a timestamp that identifies the most recent date and time that the capability was modified.
	ModifiedAt *string `pulumi:"modifiedAt"`
	// The display name of the capability.
	Name *string `pulumi:"name"`
	// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCapabilityOutput(ctx *pulumi.Context, args LookupCapabilityOutputArgs, opts ...pulumi.InvokeOption) LookupCapabilityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCapabilityResult, error) {
			args := v.(LookupCapabilityArgs)
			r, err := LookupCapability(ctx, &args, opts...)
			var s LookupCapabilityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCapabilityResultOutput)
}

type LookupCapabilityOutputArgs struct {
	// Returns a system-assigned unique identifier for the capability.
	CapabilityId pulumi.StringInput `pulumi:"capabilityId"`
}

func (LookupCapabilityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapabilityArgs)(nil)).Elem()
}

type LookupCapabilityResultOutput struct{ *pulumi.OutputState }

func (LookupCapabilityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapabilityResult)(nil)).Elem()
}

func (o LookupCapabilityResultOutput) ToLookupCapabilityResultOutput() LookupCapabilityResultOutput {
	return o
}

func (o LookupCapabilityResultOutput) ToLookupCapabilityResultOutputWithContext(ctx context.Context) LookupCapabilityResultOutput {
	return o
}

// Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
func (o LookupCapabilityResultOutput) CapabilityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *string { return v.CapabilityArn }).(pulumi.StringPtrOutput)
}

// Returns a system-assigned unique identifier for the capability.
func (o LookupCapabilityResultOutput) CapabilityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *string { return v.CapabilityId }).(pulumi.StringPtrOutput)
}

// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
func (o LookupCapabilityResultOutput) Configuration() CapabilityConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *CapabilityConfigurationProperties { return v.Configuration }).(CapabilityConfigurationPropertiesPtrOutput)
}

// Returns a timestamp for creation date and time of the capability.
func (o LookupCapabilityResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
func (o LookupCapabilityResultOutput) InstructionsDocuments() CapabilityS3LocationArrayOutput {
	return o.ApplyT(func(v LookupCapabilityResult) []CapabilityS3Location { return v.InstructionsDocuments }).(CapabilityS3LocationArrayOutput)
}

// Returns a timestamp that identifies the most recent date and time that the capability was modified.
func (o LookupCapabilityResultOutput) ModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *string { return v.ModifiedAt }).(pulumi.StringPtrOutput)
}

// The display name of the capability.
func (o LookupCapabilityResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapabilityResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
func (o LookupCapabilityResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCapabilityResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCapabilityResultOutput{})
}
