// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::B2BI::Profile Resource Type
func LookupProfile(ctx *pulumi.Context, args *LookupProfileArgs, opts ...pulumi.InvokeOption) (*LookupProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProfileResult
	err := ctx.Invoke("aws-native:b2bi:getProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProfileArgs struct {
	ProfileId string `pulumi:"profileId"`
}

type LookupProfileResult struct {
	// Returns the name for the business associated with this profile.
	BusinessName *string `pulumi:"businessName"`
	// Returns the timestamp for creation date and time of the profile.
	CreatedAt *string `pulumi:"createdAt"`
	Email     *string `pulumi:"email"`
	// Returns the name of the logging group.
	LogGroupName *string `pulumi:"logGroupName"`
	// Returns the timestamp that identifies the most recent date and time that the profile was modified.
	ModifiedAt *string `pulumi:"modifiedAt"`
	// Returns the display name for profile.
	Name  *string `pulumi:"name"`
	Phone *string `pulumi:"phone"`
	// Returns an Amazon Resource Name (ARN) for the profile.
	ProfileArn *string `pulumi:"profileArn"`
	ProfileId  *string `pulumi:"profileId"`
	// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupProfileOutput(ctx *pulumi.Context, args LookupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfileResult, error) {
			args := v.(LookupProfileArgs)
			r, err := LookupProfile(ctx, &args, opts...)
			var s LookupProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfileResultOutput)
}

type LookupProfileOutputArgs struct {
	ProfileId pulumi.StringInput `pulumi:"profileId"`
}

func (LookupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileArgs)(nil)).Elem()
}

type LookupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileResult)(nil)).Elem()
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutput() LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutputWithContext(ctx context.Context) LookupProfileResultOutput {
	return o
}

// Returns the name for the business associated with this profile.
func (o LookupProfileResultOutput) BusinessName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.BusinessName }).(pulumi.StringPtrOutput)
}

// Returns the timestamp for creation date and time of the profile.
func (o LookupProfileResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupProfileResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Returns the name of the logging group.
func (o LookupProfileResultOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// Returns the timestamp that identifies the most recent date and time that the profile was modified.
func (o LookupProfileResultOutput) ModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.ModifiedAt }).(pulumi.StringPtrOutput)
}

// Returns the display name for profile.
func (o LookupProfileResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupProfileResultOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

// Returns an Amazon Resource Name (ARN) for the profile.
func (o LookupProfileResultOutput) ProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.ProfileArn }).(pulumi.StringPtrOutput)
}

func (o LookupProfileResultOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
func (o LookupProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfileResultOutput{})
}
