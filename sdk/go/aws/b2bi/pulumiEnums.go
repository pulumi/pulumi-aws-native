// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CapabilityDirection string

const (
	CapabilityDirectionInbound  = CapabilityDirection("INBOUND")
	CapabilityDirectionOutbound = CapabilityDirection("OUTBOUND")
)

func (CapabilityDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityDirection)(nil)).Elem()
}

func (e CapabilityDirection) ToCapabilityDirectionOutput() CapabilityDirectionOutput {
	return pulumi.ToOutput(e).(CapabilityDirectionOutput)
}

func (e CapabilityDirection) ToCapabilityDirectionOutputWithContext(ctx context.Context) CapabilityDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapabilityDirectionOutput)
}

func (e CapabilityDirection) ToCapabilityDirectionPtrOutput() CapabilityDirectionPtrOutput {
	return e.ToCapabilityDirectionPtrOutputWithContext(context.Background())
}

func (e CapabilityDirection) ToCapabilityDirectionPtrOutputWithContext(ctx context.Context) CapabilityDirectionPtrOutput {
	return CapabilityDirection(e).ToCapabilityDirectionOutputWithContext(ctx).ToCapabilityDirectionPtrOutputWithContext(ctx)
}

func (e CapabilityDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapabilityDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapabilityDirectionOutput struct{ *pulumi.OutputState }

func (CapabilityDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityDirection)(nil)).Elem()
}

func (o CapabilityDirectionOutput) ToCapabilityDirectionOutput() CapabilityDirectionOutput {
	return o
}

func (o CapabilityDirectionOutput) ToCapabilityDirectionOutputWithContext(ctx context.Context) CapabilityDirectionOutput {
	return o
}

func (o CapabilityDirectionOutput) ToCapabilityDirectionPtrOutput() CapabilityDirectionPtrOutput {
	return o.ToCapabilityDirectionPtrOutputWithContext(context.Background())
}

func (o CapabilityDirectionOutput) ToCapabilityDirectionPtrOutputWithContext(ctx context.Context) CapabilityDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapabilityDirection) *CapabilityDirection {
		return &v
	}).(CapabilityDirectionPtrOutput)
}

func (o CapabilityDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapabilityDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapabilityDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapabilityDirectionPtrOutput struct{ *pulumi.OutputState }

func (CapabilityDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapabilityDirection)(nil)).Elem()
}

func (o CapabilityDirectionPtrOutput) ToCapabilityDirectionPtrOutput() CapabilityDirectionPtrOutput {
	return o
}

func (o CapabilityDirectionPtrOutput) ToCapabilityDirectionPtrOutputWithContext(ctx context.Context) CapabilityDirectionPtrOutput {
	return o
}

func (o CapabilityDirectionPtrOutput) Elem() CapabilityDirectionOutput {
	return o.ApplyT(func(v *CapabilityDirection) CapabilityDirection {
		if v != nil {
			return *v
		}
		var ret CapabilityDirection
		return ret
	}).(CapabilityDirectionOutput)
}

func (o CapabilityDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapabilityDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapabilityDirectionInput is an input type that accepts values of the CapabilityDirection enum
// A concrete instance of `CapabilityDirectionInput` can be one of the following:
//
//	CapabilityDirectionInbound
//	CapabilityDirectionOutbound
type CapabilityDirectionInput interface {
	pulumi.Input

	ToCapabilityDirectionOutput() CapabilityDirectionOutput
	ToCapabilityDirectionOutputWithContext(context.Context) CapabilityDirectionOutput
}

var capabilityDirectionPtrType = reflect.TypeOf((**CapabilityDirection)(nil)).Elem()

type CapabilityDirectionPtrInput interface {
	pulumi.Input

	ToCapabilityDirectionPtrOutput() CapabilityDirectionPtrOutput
	ToCapabilityDirectionPtrOutputWithContext(context.Context) CapabilityDirectionPtrOutput
}

type capabilityDirectionPtr string

func CapabilityDirectionPtr(v string) CapabilityDirectionPtrInput {
	return (*capabilityDirectionPtr)(&v)
}

func (*capabilityDirectionPtr) ElementType() reflect.Type {
	return capabilityDirectionPtrType
}

func (in *capabilityDirectionPtr) ToCapabilityDirectionPtrOutput() CapabilityDirectionPtrOutput {
	return pulumi.ToOutput(in).(CapabilityDirectionPtrOutput)
}

func (in *capabilityDirectionPtr) ToCapabilityDirectionPtrOutputWithContext(ctx context.Context) CapabilityDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapabilityDirectionPtrOutput)
}

type CapabilityType string

const (
	CapabilityTypeEdi = CapabilityType("edi")
)

func (CapabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityType)(nil)).Elem()
}

func (e CapabilityType) ToCapabilityTypeOutput() CapabilityTypeOutput {
	return pulumi.ToOutput(e).(CapabilityTypeOutput)
}

func (e CapabilityType) ToCapabilityTypeOutputWithContext(ctx context.Context) CapabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapabilityTypeOutput)
}

func (e CapabilityType) ToCapabilityTypePtrOutput() CapabilityTypePtrOutput {
	return e.ToCapabilityTypePtrOutputWithContext(context.Background())
}

func (e CapabilityType) ToCapabilityTypePtrOutputWithContext(ctx context.Context) CapabilityTypePtrOutput {
	return CapabilityType(e).ToCapabilityTypeOutputWithContext(ctx).ToCapabilityTypePtrOutputWithContext(ctx)
}

func (e CapabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapabilityTypeOutput struct{ *pulumi.OutputState }

func (CapabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityType)(nil)).Elem()
}

func (o CapabilityTypeOutput) ToCapabilityTypeOutput() CapabilityTypeOutput {
	return o
}

func (o CapabilityTypeOutput) ToCapabilityTypeOutputWithContext(ctx context.Context) CapabilityTypeOutput {
	return o
}

func (o CapabilityTypeOutput) ToCapabilityTypePtrOutput() CapabilityTypePtrOutput {
	return o.ToCapabilityTypePtrOutputWithContext(context.Background())
}

func (o CapabilityTypeOutput) ToCapabilityTypePtrOutputWithContext(ctx context.Context) CapabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapabilityType) *CapabilityType {
		return &v
	}).(CapabilityTypePtrOutput)
}

func (o CapabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapabilityTypePtrOutput struct{ *pulumi.OutputState }

func (CapabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapabilityType)(nil)).Elem()
}

func (o CapabilityTypePtrOutput) ToCapabilityTypePtrOutput() CapabilityTypePtrOutput {
	return o
}

func (o CapabilityTypePtrOutput) ToCapabilityTypePtrOutputWithContext(ctx context.Context) CapabilityTypePtrOutput {
	return o
}

func (o CapabilityTypePtrOutput) Elem() CapabilityTypeOutput {
	return o.ApplyT(func(v *CapabilityType) CapabilityType {
		if v != nil {
			return *v
		}
		var ret CapabilityType
		return ret
	}).(CapabilityTypeOutput)
}

func (o CapabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapabilityTypeInput is an input type that accepts values of the CapabilityType enum
// A concrete instance of `CapabilityTypeInput` can be one of the following:
//
//	CapabilityTypeEdi
type CapabilityTypeInput interface {
	pulumi.Input

	ToCapabilityTypeOutput() CapabilityTypeOutput
	ToCapabilityTypeOutputWithContext(context.Context) CapabilityTypeOutput
}

var capabilityTypePtrType = reflect.TypeOf((**CapabilityType)(nil)).Elem()

type CapabilityTypePtrInput interface {
	pulumi.Input

	ToCapabilityTypePtrOutput() CapabilityTypePtrOutput
	ToCapabilityTypePtrOutputWithContext(context.Context) CapabilityTypePtrOutput
}

type capabilityTypePtr string

func CapabilityTypePtr(v string) CapabilityTypePtrInput {
	return (*capabilityTypePtr)(&v)
}

func (*capabilityTypePtr) ElementType() reflect.Type {
	return capabilityTypePtrType
}

func (in *capabilityTypePtr) ToCapabilityTypePtrOutput() CapabilityTypePtrOutput {
	return pulumi.ToOutput(in).(CapabilityTypePtrOutput)
}

func (in *capabilityTypePtr) ToCapabilityTypePtrOutputWithContext(ctx context.Context) CapabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapabilityTypePtrOutput)
}

type CapabilityX12TransactionSet string

const (
	CapabilityX12TransactionSetX12100     = CapabilityX12TransactionSet("X12_100")
	CapabilityX12TransactionSetX12101     = CapabilityX12TransactionSet("X12_101")
	CapabilityX12TransactionSetX12102     = CapabilityX12TransactionSet("X12_102")
	CapabilityX12TransactionSetX12103     = CapabilityX12TransactionSet("X12_103")
	CapabilityX12TransactionSetX12104     = CapabilityX12TransactionSet("X12_104")
	CapabilityX12TransactionSetX12105     = CapabilityX12TransactionSet("X12_105")
	CapabilityX12TransactionSetX12106     = CapabilityX12TransactionSet("X12_106")
	CapabilityX12TransactionSetX12107     = CapabilityX12TransactionSet("X12_107")
	CapabilityX12TransactionSetX12108     = CapabilityX12TransactionSet("X12_108")
	CapabilityX12TransactionSetX12109     = CapabilityX12TransactionSet("X12_109")
	CapabilityX12TransactionSetX12110     = CapabilityX12TransactionSet("X12_110")
	CapabilityX12TransactionSetX12111     = CapabilityX12TransactionSet("X12_111")
	CapabilityX12TransactionSetX12112     = CapabilityX12TransactionSet("X12_112")
	CapabilityX12TransactionSetX12113     = CapabilityX12TransactionSet("X12_113")
	CapabilityX12TransactionSetX12120     = CapabilityX12TransactionSet("X12_120")
	CapabilityX12TransactionSetX12121     = CapabilityX12TransactionSet("X12_121")
	CapabilityX12TransactionSetX12124     = CapabilityX12TransactionSet("X12_124")
	CapabilityX12TransactionSetX12125     = CapabilityX12TransactionSet("X12_125")
	CapabilityX12TransactionSetX12126     = CapabilityX12TransactionSet("X12_126")
	CapabilityX12TransactionSetX12127     = CapabilityX12TransactionSet("X12_127")
	CapabilityX12TransactionSetX12128     = CapabilityX12TransactionSet("X12_128")
	CapabilityX12TransactionSetX12129     = CapabilityX12TransactionSet("X12_129")
	CapabilityX12TransactionSetX12130     = CapabilityX12TransactionSet("X12_130")
	CapabilityX12TransactionSetX12131     = CapabilityX12TransactionSet("X12_131")
	CapabilityX12TransactionSetX12132     = CapabilityX12TransactionSet("X12_132")
	CapabilityX12TransactionSetX12133     = CapabilityX12TransactionSet("X12_133")
	CapabilityX12TransactionSetX12135     = CapabilityX12TransactionSet("X12_135")
	CapabilityX12TransactionSetX12138     = CapabilityX12TransactionSet("X12_138")
	CapabilityX12TransactionSetX12139     = CapabilityX12TransactionSet("X12_139")
	CapabilityX12TransactionSetX12140     = CapabilityX12TransactionSet("X12_140")
	CapabilityX12TransactionSetX12141     = CapabilityX12TransactionSet("X12_141")
	CapabilityX12TransactionSetX12142     = CapabilityX12TransactionSet("X12_142")
	CapabilityX12TransactionSetX12143     = CapabilityX12TransactionSet("X12_143")
	CapabilityX12TransactionSetX12144     = CapabilityX12TransactionSet("X12_144")
	CapabilityX12TransactionSetX12146     = CapabilityX12TransactionSet("X12_146")
	CapabilityX12TransactionSetX12147     = CapabilityX12TransactionSet("X12_147")
	CapabilityX12TransactionSetX12148     = CapabilityX12TransactionSet("X12_148")
	CapabilityX12TransactionSetX12149     = CapabilityX12TransactionSet("X12_149")
	CapabilityX12TransactionSetX12150     = CapabilityX12TransactionSet("X12_150")
	CapabilityX12TransactionSetX12151     = CapabilityX12TransactionSet("X12_151")
	CapabilityX12TransactionSetX12152     = CapabilityX12TransactionSet("X12_152")
	CapabilityX12TransactionSetX12153     = CapabilityX12TransactionSet("X12_153")
	CapabilityX12TransactionSetX12154     = CapabilityX12TransactionSet("X12_154")
	CapabilityX12TransactionSetX12155     = CapabilityX12TransactionSet("X12_155")
	CapabilityX12TransactionSetX12157     = CapabilityX12TransactionSet("X12_157")
	CapabilityX12TransactionSetX12158     = CapabilityX12TransactionSet("X12_158")
	CapabilityX12TransactionSetX12159     = CapabilityX12TransactionSet("X12_159")
	CapabilityX12TransactionSetX12160     = CapabilityX12TransactionSet("X12_160")
	CapabilityX12TransactionSetX12161     = CapabilityX12TransactionSet("X12_161")
	CapabilityX12TransactionSetX12163     = CapabilityX12TransactionSet("X12_163")
	CapabilityX12TransactionSetX12170     = CapabilityX12TransactionSet("X12_170")
	CapabilityX12TransactionSetX12175     = CapabilityX12TransactionSet("X12_175")
	CapabilityX12TransactionSetX12176     = CapabilityX12TransactionSet("X12_176")
	CapabilityX12TransactionSetX12179     = CapabilityX12TransactionSet("X12_179")
	CapabilityX12TransactionSetX12180     = CapabilityX12TransactionSet("X12_180")
	CapabilityX12TransactionSetX12185     = CapabilityX12TransactionSet("X12_185")
	CapabilityX12TransactionSetX12186     = CapabilityX12TransactionSet("X12_186")
	CapabilityX12TransactionSetX12187     = CapabilityX12TransactionSet("X12_187")
	CapabilityX12TransactionSetX12188     = CapabilityX12TransactionSet("X12_188")
	CapabilityX12TransactionSetX12189     = CapabilityX12TransactionSet("X12_189")
	CapabilityX12TransactionSetX12190     = CapabilityX12TransactionSet("X12_190")
	CapabilityX12TransactionSetX12191     = CapabilityX12TransactionSet("X12_191")
	CapabilityX12TransactionSetX12194     = CapabilityX12TransactionSet("X12_194")
	CapabilityX12TransactionSetX12195     = CapabilityX12TransactionSet("X12_195")
	CapabilityX12TransactionSetX12196     = CapabilityX12TransactionSet("X12_196")
	CapabilityX12TransactionSetX12197     = CapabilityX12TransactionSet("X12_197")
	CapabilityX12TransactionSetX12198     = CapabilityX12TransactionSet("X12_198")
	CapabilityX12TransactionSetX12199     = CapabilityX12TransactionSet("X12_199")
	CapabilityX12TransactionSetX12200     = CapabilityX12TransactionSet("X12_200")
	CapabilityX12TransactionSetX12201     = CapabilityX12TransactionSet("X12_201")
	CapabilityX12TransactionSetX12202     = CapabilityX12TransactionSet("X12_202")
	CapabilityX12TransactionSetX12203     = CapabilityX12TransactionSet("X12_203")
	CapabilityX12TransactionSetX12204     = CapabilityX12TransactionSet("X12_204")
	CapabilityX12TransactionSetX12205     = CapabilityX12TransactionSet("X12_205")
	CapabilityX12TransactionSetX12206     = CapabilityX12TransactionSet("X12_206")
	CapabilityX12TransactionSetX12210     = CapabilityX12TransactionSet("X12_210")
	CapabilityX12TransactionSetX12211     = CapabilityX12TransactionSet("X12_211")
	CapabilityX12TransactionSetX12212     = CapabilityX12TransactionSet("X12_212")
	CapabilityX12TransactionSetX12213     = CapabilityX12TransactionSet("X12_213")
	CapabilityX12TransactionSetX12214     = CapabilityX12TransactionSet("X12_214")
	CapabilityX12TransactionSetX12215     = CapabilityX12TransactionSet("X12_215")
	CapabilityX12TransactionSetX12216     = CapabilityX12TransactionSet("X12_216")
	CapabilityX12TransactionSetX12217     = CapabilityX12TransactionSet("X12_217")
	CapabilityX12TransactionSetX12218     = CapabilityX12TransactionSet("X12_218")
	CapabilityX12TransactionSetX12219     = CapabilityX12TransactionSet("X12_219")
	CapabilityX12TransactionSetX12220     = CapabilityX12TransactionSet("X12_220")
	CapabilityX12TransactionSetX12222     = CapabilityX12TransactionSet("X12_222")
	CapabilityX12TransactionSetX12223     = CapabilityX12TransactionSet("X12_223")
	CapabilityX12TransactionSetX12224     = CapabilityX12TransactionSet("X12_224")
	CapabilityX12TransactionSetX12225     = CapabilityX12TransactionSet("X12_225")
	CapabilityX12TransactionSetX12227     = CapabilityX12TransactionSet("X12_227")
	CapabilityX12TransactionSetX12228     = CapabilityX12TransactionSet("X12_228")
	CapabilityX12TransactionSetX12240     = CapabilityX12TransactionSet("X12_240")
	CapabilityX12TransactionSetX12242     = CapabilityX12TransactionSet("X12_242")
	CapabilityX12TransactionSetX12244     = CapabilityX12TransactionSet("X12_244")
	CapabilityX12TransactionSetX12245     = CapabilityX12TransactionSet("X12_245")
	CapabilityX12TransactionSetX12248     = CapabilityX12TransactionSet("X12_248")
	CapabilityX12TransactionSetX12249     = CapabilityX12TransactionSet("X12_249")
	CapabilityX12TransactionSetX12250     = CapabilityX12TransactionSet("X12_250")
	CapabilityX12TransactionSetX12251     = CapabilityX12TransactionSet("X12_251")
	CapabilityX12TransactionSetX12252     = CapabilityX12TransactionSet("X12_252")
	CapabilityX12TransactionSetX12255     = CapabilityX12TransactionSet("X12_255")
	CapabilityX12TransactionSetX12256     = CapabilityX12TransactionSet("X12_256")
	CapabilityX12TransactionSetX12259     = CapabilityX12TransactionSet("X12_259")
	CapabilityX12TransactionSetX12260     = CapabilityX12TransactionSet("X12_260")
	CapabilityX12TransactionSetX12261     = CapabilityX12TransactionSet("X12_261")
	CapabilityX12TransactionSetX12262     = CapabilityX12TransactionSet("X12_262")
	CapabilityX12TransactionSetX12263     = CapabilityX12TransactionSet("X12_263")
	CapabilityX12TransactionSetX12264     = CapabilityX12TransactionSet("X12_264")
	CapabilityX12TransactionSetX12265     = CapabilityX12TransactionSet("X12_265")
	CapabilityX12TransactionSetX12266     = CapabilityX12TransactionSet("X12_266")
	CapabilityX12TransactionSetX12267     = CapabilityX12TransactionSet("X12_267")
	CapabilityX12TransactionSetX12268     = CapabilityX12TransactionSet("X12_268")
	CapabilityX12TransactionSetX12269     = CapabilityX12TransactionSet("X12_269")
	CapabilityX12TransactionSetX12270     = CapabilityX12TransactionSet("X12_270")
	CapabilityX12TransactionSetX12271     = CapabilityX12TransactionSet("X12_271")
	CapabilityX12TransactionSetX12272     = CapabilityX12TransactionSet("X12_272")
	CapabilityX12TransactionSetX12273     = CapabilityX12TransactionSet("X12_273")
	CapabilityX12TransactionSetX12274     = CapabilityX12TransactionSet("X12_274")
	CapabilityX12TransactionSetX12275     = CapabilityX12TransactionSet("X12_275")
	CapabilityX12TransactionSetX12276     = CapabilityX12TransactionSet("X12_276")
	CapabilityX12TransactionSetX12277     = CapabilityX12TransactionSet("X12_277")
	CapabilityX12TransactionSetX12278     = CapabilityX12TransactionSet("X12_278")
	CapabilityX12TransactionSetX12280     = CapabilityX12TransactionSet("X12_280")
	CapabilityX12TransactionSetX12283     = CapabilityX12TransactionSet("X12_283")
	CapabilityX12TransactionSetX12284     = CapabilityX12TransactionSet("X12_284")
	CapabilityX12TransactionSetX12285     = CapabilityX12TransactionSet("X12_285")
	CapabilityX12TransactionSetX12286     = CapabilityX12TransactionSet("X12_286")
	CapabilityX12TransactionSetX12288     = CapabilityX12TransactionSet("X12_288")
	CapabilityX12TransactionSetX12290     = CapabilityX12TransactionSet("X12_290")
	CapabilityX12TransactionSetX12300     = CapabilityX12TransactionSet("X12_300")
	CapabilityX12TransactionSetX12301     = CapabilityX12TransactionSet("X12_301")
	CapabilityX12TransactionSetX12303     = CapabilityX12TransactionSet("X12_303")
	CapabilityX12TransactionSetX12304     = CapabilityX12TransactionSet("X12_304")
	CapabilityX12TransactionSetX12309     = CapabilityX12TransactionSet("X12_309")
	CapabilityX12TransactionSetX12310     = CapabilityX12TransactionSet("X12_310")
	CapabilityX12TransactionSetX12311     = CapabilityX12TransactionSet("X12_311")
	CapabilityX12TransactionSetX12312     = CapabilityX12TransactionSet("X12_312")
	CapabilityX12TransactionSetX12313     = CapabilityX12TransactionSet("X12_313")
	CapabilityX12TransactionSetX12315     = CapabilityX12TransactionSet("X12_315")
	CapabilityX12TransactionSetX12317     = CapabilityX12TransactionSet("X12_317")
	CapabilityX12TransactionSetX12319     = CapabilityX12TransactionSet("X12_319")
	CapabilityX12TransactionSetX12322     = CapabilityX12TransactionSet("X12_322")
	CapabilityX12TransactionSetX12323     = CapabilityX12TransactionSet("X12_323")
	CapabilityX12TransactionSetX12324     = CapabilityX12TransactionSet("X12_324")
	CapabilityX12TransactionSetX12325     = CapabilityX12TransactionSet("X12_325")
	CapabilityX12TransactionSetX12326     = CapabilityX12TransactionSet("X12_326")
	CapabilityX12TransactionSetX12350     = CapabilityX12TransactionSet("X12_350")
	CapabilityX12TransactionSetX12352     = CapabilityX12TransactionSet("X12_352")
	CapabilityX12TransactionSetX12353     = CapabilityX12TransactionSet("X12_353")
	CapabilityX12TransactionSetX12354     = CapabilityX12TransactionSet("X12_354")
	CapabilityX12TransactionSetX12355     = CapabilityX12TransactionSet("X12_355")
	CapabilityX12TransactionSetX12356     = CapabilityX12TransactionSet("X12_356")
	CapabilityX12TransactionSetX12357     = CapabilityX12TransactionSet("X12_357")
	CapabilityX12TransactionSetX12358     = CapabilityX12TransactionSet("X12_358")
	CapabilityX12TransactionSetX12361     = CapabilityX12TransactionSet("X12_361")
	CapabilityX12TransactionSetX12362     = CapabilityX12TransactionSet("X12_362")
	CapabilityX12TransactionSetX12404     = CapabilityX12TransactionSet("X12_404")
	CapabilityX12TransactionSetX12410     = CapabilityX12TransactionSet("X12_410")
	CapabilityX12TransactionSetX12412     = CapabilityX12TransactionSet("X12_412")
	CapabilityX12TransactionSetX12414     = CapabilityX12TransactionSet("X12_414")
	CapabilityX12TransactionSetX12417     = CapabilityX12TransactionSet("X12_417")
	CapabilityX12TransactionSetX12418     = CapabilityX12TransactionSet("X12_418")
	CapabilityX12TransactionSetX12419     = CapabilityX12TransactionSet("X12_419")
	CapabilityX12TransactionSetX12420     = CapabilityX12TransactionSet("X12_420")
	CapabilityX12TransactionSetX12421     = CapabilityX12TransactionSet("X12_421")
	CapabilityX12TransactionSetX12422     = CapabilityX12TransactionSet("X12_422")
	CapabilityX12TransactionSetX12423     = CapabilityX12TransactionSet("X12_423")
	CapabilityX12TransactionSetX12424     = CapabilityX12TransactionSet("X12_424")
	CapabilityX12TransactionSetX12425     = CapabilityX12TransactionSet("X12_425")
	CapabilityX12TransactionSetX12426     = CapabilityX12TransactionSet("X12_426")
	CapabilityX12TransactionSetX12429     = CapabilityX12TransactionSet("X12_429")
	CapabilityX12TransactionSetX12431     = CapabilityX12TransactionSet("X12_431")
	CapabilityX12TransactionSetX12432     = CapabilityX12TransactionSet("X12_432")
	CapabilityX12TransactionSetX12433     = CapabilityX12TransactionSet("X12_433")
	CapabilityX12TransactionSetX12434     = CapabilityX12TransactionSet("X12_434")
	CapabilityX12TransactionSetX12435     = CapabilityX12TransactionSet("X12_435")
	CapabilityX12TransactionSetX12436     = CapabilityX12TransactionSet("X12_436")
	CapabilityX12TransactionSetX12437     = CapabilityX12TransactionSet("X12_437")
	CapabilityX12TransactionSetX12440     = CapabilityX12TransactionSet("X12_440")
	CapabilityX12TransactionSetX12451     = CapabilityX12TransactionSet("X12_451")
	CapabilityX12TransactionSetX12452     = CapabilityX12TransactionSet("X12_452")
	CapabilityX12TransactionSetX12453     = CapabilityX12TransactionSet("X12_453")
	CapabilityX12TransactionSetX12455     = CapabilityX12TransactionSet("X12_455")
	CapabilityX12TransactionSetX12456     = CapabilityX12TransactionSet("X12_456")
	CapabilityX12TransactionSetX12460     = CapabilityX12TransactionSet("X12_460")
	CapabilityX12TransactionSetX12463     = CapabilityX12TransactionSet("X12_463")
	CapabilityX12TransactionSetX12466     = CapabilityX12TransactionSet("X12_466")
	CapabilityX12TransactionSetX12468     = CapabilityX12TransactionSet("X12_468")
	CapabilityX12TransactionSetX12470     = CapabilityX12TransactionSet("X12_470")
	CapabilityX12TransactionSetX12475     = CapabilityX12TransactionSet("X12_475")
	CapabilityX12TransactionSetX12485     = CapabilityX12TransactionSet("X12_485")
	CapabilityX12TransactionSetX12486     = CapabilityX12TransactionSet("X12_486")
	CapabilityX12TransactionSetX12490     = CapabilityX12TransactionSet("X12_490")
	CapabilityX12TransactionSetX12492     = CapabilityX12TransactionSet("X12_492")
	CapabilityX12TransactionSetX12494     = CapabilityX12TransactionSet("X12_494")
	CapabilityX12TransactionSetX12500     = CapabilityX12TransactionSet("X12_500")
	CapabilityX12TransactionSetX12501     = CapabilityX12TransactionSet("X12_501")
	CapabilityX12TransactionSetX12503     = CapabilityX12TransactionSet("X12_503")
	CapabilityX12TransactionSetX12504     = CapabilityX12TransactionSet("X12_504")
	CapabilityX12TransactionSetX12511     = CapabilityX12TransactionSet("X12_511")
	CapabilityX12TransactionSetX12517     = CapabilityX12TransactionSet("X12_517")
	CapabilityX12TransactionSetX12521     = CapabilityX12TransactionSet("X12_521")
	CapabilityX12TransactionSetX12527     = CapabilityX12TransactionSet("X12_527")
	CapabilityX12TransactionSetX12536     = CapabilityX12TransactionSet("X12_536")
	CapabilityX12TransactionSetX12540     = CapabilityX12TransactionSet("X12_540")
	CapabilityX12TransactionSetX12561     = CapabilityX12TransactionSet("X12_561")
	CapabilityX12TransactionSetX12567     = CapabilityX12TransactionSet("X12_567")
	CapabilityX12TransactionSetX12568     = CapabilityX12TransactionSet("X12_568")
	CapabilityX12TransactionSetX12601     = CapabilityX12TransactionSet("X12_601")
	CapabilityX12TransactionSetX12602     = CapabilityX12TransactionSet("X12_602")
	CapabilityX12TransactionSetX12620     = CapabilityX12TransactionSet("X12_620")
	CapabilityX12TransactionSetX12625     = CapabilityX12TransactionSet("X12_625")
	CapabilityX12TransactionSetX12650     = CapabilityX12TransactionSet("X12_650")
	CapabilityX12TransactionSetX12715     = CapabilityX12TransactionSet("X12_715")
	CapabilityX12TransactionSetX12753     = CapabilityX12TransactionSet("X12_753")
	CapabilityX12TransactionSetX12754     = CapabilityX12TransactionSet("X12_754")
	CapabilityX12TransactionSetX12805     = CapabilityX12TransactionSet("X12_805")
	CapabilityX12TransactionSetX12806     = CapabilityX12TransactionSet("X12_806")
	CapabilityX12TransactionSetX12810     = CapabilityX12TransactionSet("X12_810")
	CapabilityX12TransactionSetX12811     = CapabilityX12TransactionSet("X12_811")
	CapabilityX12TransactionSetX12812     = CapabilityX12TransactionSet("X12_812")
	CapabilityX12TransactionSetX12813     = CapabilityX12TransactionSet("X12_813")
	CapabilityX12TransactionSetX12814     = CapabilityX12TransactionSet("X12_814")
	CapabilityX12TransactionSetX12815     = CapabilityX12TransactionSet("X12_815")
	CapabilityX12TransactionSetX12816     = CapabilityX12TransactionSet("X12_816")
	CapabilityX12TransactionSetX12818     = CapabilityX12TransactionSet("X12_818")
	CapabilityX12TransactionSetX12819     = CapabilityX12TransactionSet("X12_819")
	CapabilityX12TransactionSetX12820     = CapabilityX12TransactionSet("X12_820")
	CapabilityX12TransactionSetX12821     = CapabilityX12TransactionSet("X12_821")
	CapabilityX12TransactionSetX12822     = CapabilityX12TransactionSet("X12_822")
	CapabilityX12TransactionSetX12823     = CapabilityX12TransactionSet("X12_823")
	CapabilityX12TransactionSetX12824     = CapabilityX12TransactionSet("X12_824")
	CapabilityX12TransactionSetX12826     = CapabilityX12TransactionSet("X12_826")
	CapabilityX12TransactionSetX12827     = CapabilityX12TransactionSet("X12_827")
	CapabilityX12TransactionSetX12828     = CapabilityX12TransactionSet("X12_828")
	CapabilityX12TransactionSetX12829     = CapabilityX12TransactionSet("X12_829")
	CapabilityX12TransactionSetX12830     = CapabilityX12TransactionSet("X12_830")
	CapabilityX12TransactionSetX12831     = CapabilityX12TransactionSet("X12_831")
	CapabilityX12TransactionSetX12832     = CapabilityX12TransactionSet("X12_832")
	CapabilityX12TransactionSetX12833     = CapabilityX12TransactionSet("X12_833")
	CapabilityX12TransactionSetX12834     = CapabilityX12TransactionSet("X12_834")
	CapabilityX12TransactionSetX12835     = CapabilityX12TransactionSet("X12_835")
	CapabilityX12TransactionSetX12836     = CapabilityX12TransactionSet("X12_836")
	CapabilityX12TransactionSetX12837     = CapabilityX12TransactionSet("X12_837")
	CapabilityX12TransactionSetX12838     = CapabilityX12TransactionSet("X12_838")
	CapabilityX12TransactionSetX12839     = CapabilityX12TransactionSet("X12_839")
	CapabilityX12TransactionSetX12840     = CapabilityX12TransactionSet("X12_840")
	CapabilityX12TransactionSetX12841     = CapabilityX12TransactionSet("X12_841")
	CapabilityX12TransactionSetX12842     = CapabilityX12TransactionSet("X12_842")
	CapabilityX12TransactionSetX12843     = CapabilityX12TransactionSet("X12_843")
	CapabilityX12TransactionSetX12844     = CapabilityX12TransactionSet("X12_844")
	CapabilityX12TransactionSetX12845     = CapabilityX12TransactionSet("X12_845")
	CapabilityX12TransactionSetX12846     = CapabilityX12TransactionSet("X12_846")
	CapabilityX12TransactionSetX12847     = CapabilityX12TransactionSet("X12_847")
	CapabilityX12TransactionSetX12848     = CapabilityX12TransactionSet("X12_848")
	CapabilityX12TransactionSetX12849     = CapabilityX12TransactionSet("X12_849")
	CapabilityX12TransactionSetX12850     = CapabilityX12TransactionSet("X12_850")
	CapabilityX12TransactionSetX12851     = CapabilityX12TransactionSet("X12_851")
	CapabilityX12TransactionSetX12852     = CapabilityX12TransactionSet("X12_852")
	CapabilityX12TransactionSetX12853     = CapabilityX12TransactionSet("X12_853")
	CapabilityX12TransactionSetX12854     = CapabilityX12TransactionSet("X12_854")
	CapabilityX12TransactionSetX12855     = CapabilityX12TransactionSet("X12_855")
	CapabilityX12TransactionSetX12856     = CapabilityX12TransactionSet("X12_856")
	CapabilityX12TransactionSetX12857     = CapabilityX12TransactionSet("X12_857")
	CapabilityX12TransactionSetX12858     = CapabilityX12TransactionSet("X12_858")
	CapabilityX12TransactionSetX12859     = CapabilityX12TransactionSet("X12_859")
	CapabilityX12TransactionSetX12860     = CapabilityX12TransactionSet("X12_860")
	CapabilityX12TransactionSetX12861     = CapabilityX12TransactionSet("X12_861")
	CapabilityX12TransactionSetX12862     = CapabilityX12TransactionSet("X12_862")
	CapabilityX12TransactionSetX12863     = CapabilityX12TransactionSet("X12_863")
	CapabilityX12TransactionSetX12864     = CapabilityX12TransactionSet("X12_864")
	CapabilityX12TransactionSetX12865     = CapabilityX12TransactionSet("X12_865")
	CapabilityX12TransactionSetX12866     = CapabilityX12TransactionSet("X12_866")
	CapabilityX12TransactionSetX12867     = CapabilityX12TransactionSet("X12_867")
	CapabilityX12TransactionSetX12868     = CapabilityX12TransactionSet("X12_868")
	CapabilityX12TransactionSetX12869     = CapabilityX12TransactionSet("X12_869")
	CapabilityX12TransactionSetX12870     = CapabilityX12TransactionSet("X12_870")
	CapabilityX12TransactionSetX12871     = CapabilityX12TransactionSet("X12_871")
	CapabilityX12TransactionSetX12872     = CapabilityX12TransactionSet("X12_872")
	CapabilityX12TransactionSetX12873     = CapabilityX12TransactionSet("X12_873")
	CapabilityX12TransactionSetX12874     = CapabilityX12TransactionSet("X12_874")
	CapabilityX12TransactionSetX12875     = CapabilityX12TransactionSet("X12_875")
	CapabilityX12TransactionSetX12876     = CapabilityX12TransactionSet("X12_876")
	CapabilityX12TransactionSetX12877     = CapabilityX12TransactionSet("X12_877")
	CapabilityX12TransactionSetX12878     = CapabilityX12TransactionSet("X12_878")
	CapabilityX12TransactionSetX12879     = CapabilityX12TransactionSet("X12_879")
	CapabilityX12TransactionSetX12880     = CapabilityX12TransactionSet("X12_880")
	CapabilityX12TransactionSetX12881     = CapabilityX12TransactionSet("X12_881")
	CapabilityX12TransactionSetX12882     = CapabilityX12TransactionSet("X12_882")
	CapabilityX12TransactionSetX12883     = CapabilityX12TransactionSet("X12_883")
	CapabilityX12TransactionSetX12884     = CapabilityX12TransactionSet("X12_884")
	CapabilityX12TransactionSetX12885     = CapabilityX12TransactionSet("X12_885")
	CapabilityX12TransactionSetX12886     = CapabilityX12TransactionSet("X12_886")
	CapabilityX12TransactionSetX12887     = CapabilityX12TransactionSet("X12_887")
	CapabilityX12TransactionSetX12888     = CapabilityX12TransactionSet("X12_888")
	CapabilityX12TransactionSetX12889     = CapabilityX12TransactionSet("X12_889")
	CapabilityX12TransactionSetX12891     = CapabilityX12TransactionSet("X12_891")
	CapabilityX12TransactionSetX12893     = CapabilityX12TransactionSet("X12_893")
	CapabilityX12TransactionSetX12894     = CapabilityX12TransactionSet("X12_894")
	CapabilityX12TransactionSetX12895     = CapabilityX12TransactionSet("X12_895")
	CapabilityX12TransactionSetX12896     = CapabilityX12TransactionSet("X12_896")
	CapabilityX12TransactionSetX12920     = CapabilityX12TransactionSet("X12_920")
	CapabilityX12TransactionSetX12924     = CapabilityX12TransactionSet("X12_924")
	CapabilityX12TransactionSetX12925     = CapabilityX12TransactionSet("X12_925")
	CapabilityX12TransactionSetX12926     = CapabilityX12TransactionSet("X12_926")
	CapabilityX12TransactionSetX12928     = CapabilityX12TransactionSet("X12_928")
	CapabilityX12TransactionSetX12940     = CapabilityX12TransactionSet("X12_940")
	CapabilityX12TransactionSetX12943     = CapabilityX12TransactionSet("X12_943")
	CapabilityX12TransactionSetX12944     = CapabilityX12TransactionSet("X12_944")
	CapabilityX12TransactionSetX12945     = CapabilityX12TransactionSet("X12_945")
	CapabilityX12TransactionSetX12947     = CapabilityX12TransactionSet("X12_947")
	CapabilityX12TransactionSetX12980     = CapabilityX12TransactionSet("X12_980")
	CapabilityX12TransactionSetX12990     = CapabilityX12TransactionSet("X12_990")
	CapabilityX12TransactionSetX12993     = CapabilityX12TransactionSet("X12_993")
	CapabilityX12TransactionSetX12996     = CapabilityX12TransactionSet("X12_996")
	CapabilityX12TransactionSetX12997     = CapabilityX12TransactionSet("X12_997")
	CapabilityX12TransactionSetX12998     = CapabilityX12TransactionSet("X12_998")
	CapabilityX12TransactionSetX12999     = CapabilityX12TransactionSet("X12_999")
	CapabilityX12TransactionSetX12270x279 = CapabilityX12TransactionSet("X12_270_X279")
	CapabilityX12TransactionSetX12271x279 = CapabilityX12TransactionSet("X12_271_X279")
	CapabilityX12TransactionSetX12275x210 = CapabilityX12TransactionSet("X12_275_X210")
	CapabilityX12TransactionSetX12275x211 = CapabilityX12TransactionSet("X12_275_X211")
	CapabilityX12TransactionSetX12276x212 = CapabilityX12TransactionSet("X12_276_X212")
	CapabilityX12TransactionSetX12277x212 = CapabilityX12TransactionSet("X12_277_X212")
	CapabilityX12TransactionSetX12277x214 = CapabilityX12TransactionSet("X12_277_X214")
	CapabilityX12TransactionSetX12277x364 = CapabilityX12TransactionSet("X12_277_X364")
	CapabilityX12TransactionSetX12278x217 = CapabilityX12TransactionSet("X12_278_X217")
	CapabilityX12TransactionSetX12820x218 = CapabilityX12TransactionSet("X12_820_X218")
	CapabilityX12TransactionSetX12820x306 = CapabilityX12TransactionSet("X12_820_X306")
	CapabilityX12TransactionSetX12824x186 = CapabilityX12TransactionSet("X12_824_X186")
	CapabilityX12TransactionSetX12834x220 = CapabilityX12TransactionSet("X12_834_X220")
	CapabilityX12TransactionSetX12834x307 = CapabilityX12TransactionSet("X12_834_X307")
	CapabilityX12TransactionSetX12834x318 = CapabilityX12TransactionSet("X12_834_X318")
	CapabilityX12TransactionSetX12835x221 = CapabilityX12TransactionSet("X12_835_X221")
	CapabilityX12TransactionSetX12837x222 = CapabilityX12TransactionSet("X12_837_X222")
	CapabilityX12TransactionSetX12837x223 = CapabilityX12TransactionSet("X12_837_X223")
	CapabilityX12TransactionSetX12837x224 = CapabilityX12TransactionSet("X12_837_X224")
	CapabilityX12TransactionSetX12837x291 = CapabilityX12TransactionSet("X12_837_X291")
	CapabilityX12TransactionSetX12837x292 = CapabilityX12TransactionSet("X12_837_X292")
	CapabilityX12TransactionSetX12837x298 = CapabilityX12TransactionSet("X12_837_X298")
	CapabilityX12TransactionSetX12999x231 = CapabilityX12TransactionSet("X12_999_X231")
)

func (CapabilityX12TransactionSet) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityX12TransactionSet)(nil)).Elem()
}

func (e CapabilityX12TransactionSet) ToCapabilityX12TransactionSetOutput() CapabilityX12TransactionSetOutput {
	return pulumi.ToOutput(e).(CapabilityX12TransactionSetOutput)
}

func (e CapabilityX12TransactionSet) ToCapabilityX12TransactionSetOutputWithContext(ctx context.Context) CapabilityX12TransactionSetOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapabilityX12TransactionSetOutput)
}

func (e CapabilityX12TransactionSet) ToCapabilityX12TransactionSetPtrOutput() CapabilityX12TransactionSetPtrOutput {
	return e.ToCapabilityX12TransactionSetPtrOutputWithContext(context.Background())
}

func (e CapabilityX12TransactionSet) ToCapabilityX12TransactionSetPtrOutputWithContext(ctx context.Context) CapabilityX12TransactionSetPtrOutput {
	return CapabilityX12TransactionSet(e).ToCapabilityX12TransactionSetOutputWithContext(ctx).ToCapabilityX12TransactionSetPtrOutputWithContext(ctx)
}

func (e CapabilityX12TransactionSet) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityX12TransactionSet) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityX12TransactionSet) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapabilityX12TransactionSet) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapabilityX12TransactionSetOutput struct{ *pulumi.OutputState }

func (CapabilityX12TransactionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityX12TransactionSet)(nil)).Elem()
}

func (o CapabilityX12TransactionSetOutput) ToCapabilityX12TransactionSetOutput() CapabilityX12TransactionSetOutput {
	return o
}

func (o CapabilityX12TransactionSetOutput) ToCapabilityX12TransactionSetOutputWithContext(ctx context.Context) CapabilityX12TransactionSetOutput {
	return o
}

func (o CapabilityX12TransactionSetOutput) ToCapabilityX12TransactionSetPtrOutput() CapabilityX12TransactionSetPtrOutput {
	return o.ToCapabilityX12TransactionSetPtrOutputWithContext(context.Background())
}

func (o CapabilityX12TransactionSetOutput) ToCapabilityX12TransactionSetPtrOutputWithContext(ctx context.Context) CapabilityX12TransactionSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapabilityX12TransactionSet) *CapabilityX12TransactionSet {
		return &v
	}).(CapabilityX12TransactionSetPtrOutput)
}

func (o CapabilityX12TransactionSetOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapabilityX12TransactionSetOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityX12TransactionSet) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapabilityX12TransactionSetOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityX12TransactionSetOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityX12TransactionSet) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapabilityX12TransactionSetPtrOutput struct{ *pulumi.OutputState }

func (CapabilityX12TransactionSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapabilityX12TransactionSet)(nil)).Elem()
}

func (o CapabilityX12TransactionSetPtrOutput) ToCapabilityX12TransactionSetPtrOutput() CapabilityX12TransactionSetPtrOutput {
	return o
}

func (o CapabilityX12TransactionSetPtrOutput) ToCapabilityX12TransactionSetPtrOutputWithContext(ctx context.Context) CapabilityX12TransactionSetPtrOutput {
	return o
}

func (o CapabilityX12TransactionSetPtrOutput) Elem() CapabilityX12TransactionSetOutput {
	return o.ApplyT(func(v *CapabilityX12TransactionSet) CapabilityX12TransactionSet {
		if v != nil {
			return *v
		}
		var ret CapabilityX12TransactionSet
		return ret
	}).(CapabilityX12TransactionSetOutput)
}

func (o CapabilityX12TransactionSetPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityX12TransactionSetPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapabilityX12TransactionSet) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapabilityX12TransactionSetInput is an input type that accepts values of the CapabilityX12TransactionSet enum
// A concrete instance of `CapabilityX12TransactionSetInput` can be one of the following:
//
//	CapabilityX12TransactionSetX12100
//	CapabilityX12TransactionSetX12101
//	CapabilityX12TransactionSetX12102
//	CapabilityX12TransactionSetX12103
//	CapabilityX12TransactionSetX12104
//	CapabilityX12TransactionSetX12105
//	CapabilityX12TransactionSetX12106
//	CapabilityX12TransactionSetX12107
//	CapabilityX12TransactionSetX12108
//	CapabilityX12TransactionSetX12109
//	CapabilityX12TransactionSetX12110
//	CapabilityX12TransactionSetX12111
//	CapabilityX12TransactionSetX12112
//	CapabilityX12TransactionSetX12113
//	CapabilityX12TransactionSetX12120
//	CapabilityX12TransactionSetX12121
//	CapabilityX12TransactionSetX12124
//	CapabilityX12TransactionSetX12125
//	CapabilityX12TransactionSetX12126
//	CapabilityX12TransactionSetX12127
//	CapabilityX12TransactionSetX12128
//	CapabilityX12TransactionSetX12129
//	CapabilityX12TransactionSetX12130
//	CapabilityX12TransactionSetX12131
//	CapabilityX12TransactionSetX12132
//	CapabilityX12TransactionSetX12133
//	CapabilityX12TransactionSetX12135
//	CapabilityX12TransactionSetX12138
//	CapabilityX12TransactionSetX12139
//	CapabilityX12TransactionSetX12140
//	CapabilityX12TransactionSetX12141
//	CapabilityX12TransactionSetX12142
//	CapabilityX12TransactionSetX12143
//	CapabilityX12TransactionSetX12144
//	CapabilityX12TransactionSetX12146
//	CapabilityX12TransactionSetX12147
//	CapabilityX12TransactionSetX12148
//	CapabilityX12TransactionSetX12149
//	CapabilityX12TransactionSetX12150
//	CapabilityX12TransactionSetX12151
//	CapabilityX12TransactionSetX12152
//	CapabilityX12TransactionSetX12153
//	CapabilityX12TransactionSetX12154
//	CapabilityX12TransactionSetX12155
//	CapabilityX12TransactionSetX12157
//	CapabilityX12TransactionSetX12158
//	CapabilityX12TransactionSetX12159
//	CapabilityX12TransactionSetX12160
//	CapabilityX12TransactionSetX12161
//	CapabilityX12TransactionSetX12163
//	CapabilityX12TransactionSetX12170
//	CapabilityX12TransactionSetX12175
//	CapabilityX12TransactionSetX12176
//	CapabilityX12TransactionSetX12179
//	CapabilityX12TransactionSetX12180
//	CapabilityX12TransactionSetX12185
//	CapabilityX12TransactionSetX12186
//	CapabilityX12TransactionSetX12187
//	CapabilityX12TransactionSetX12188
//	CapabilityX12TransactionSetX12189
//	CapabilityX12TransactionSetX12190
//	CapabilityX12TransactionSetX12191
//	CapabilityX12TransactionSetX12194
//	CapabilityX12TransactionSetX12195
//	CapabilityX12TransactionSetX12196
//	CapabilityX12TransactionSetX12197
//	CapabilityX12TransactionSetX12198
//	CapabilityX12TransactionSetX12199
//	CapabilityX12TransactionSetX12200
//	CapabilityX12TransactionSetX12201
//	CapabilityX12TransactionSetX12202
//	CapabilityX12TransactionSetX12203
//	CapabilityX12TransactionSetX12204
//	CapabilityX12TransactionSetX12205
//	CapabilityX12TransactionSetX12206
//	CapabilityX12TransactionSetX12210
//	CapabilityX12TransactionSetX12211
//	CapabilityX12TransactionSetX12212
//	CapabilityX12TransactionSetX12213
//	CapabilityX12TransactionSetX12214
//	CapabilityX12TransactionSetX12215
//	CapabilityX12TransactionSetX12216
//	CapabilityX12TransactionSetX12217
//	CapabilityX12TransactionSetX12218
//	CapabilityX12TransactionSetX12219
//	CapabilityX12TransactionSetX12220
//	CapabilityX12TransactionSetX12222
//	CapabilityX12TransactionSetX12223
//	CapabilityX12TransactionSetX12224
//	CapabilityX12TransactionSetX12225
//	CapabilityX12TransactionSetX12227
//	CapabilityX12TransactionSetX12228
//	CapabilityX12TransactionSetX12240
//	CapabilityX12TransactionSetX12242
//	CapabilityX12TransactionSetX12244
//	CapabilityX12TransactionSetX12245
//	CapabilityX12TransactionSetX12248
//	CapabilityX12TransactionSetX12249
//	CapabilityX12TransactionSetX12250
//	CapabilityX12TransactionSetX12251
//	CapabilityX12TransactionSetX12252
//	CapabilityX12TransactionSetX12255
//	CapabilityX12TransactionSetX12256
//	CapabilityX12TransactionSetX12259
//	CapabilityX12TransactionSetX12260
//	CapabilityX12TransactionSetX12261
//	CapabilityX12TransactionSetX12262
//	CapabilityX12TransactionSetX12263
//	CapabilityX12TransactionSetX12264
//	CapabilityX12TransactionSetX12265
//	CapabilityX12TransactionSetX12266
//	CapabilityX12TransactionSetX12267
//	CapabilityX12TransactionSetX12268
//	CapabilityX12TransactionSetX12269
//	CapabilityX12TransactionSetX12270
//	CapabilityX12TransactionSetX12271
//	CapabilityX12TransactionSetX12272
//	CapabilityX12TransactionSetX12273
//	CapabilityX12TransactionSetX12274
//	CapabilityX12TransactionSetX12275
//	CapabilityX12TransactionSetX12276
//	CapabilityX12TransactionSetX12277
//	CapabilityX12TransactionSetX12278
//	CapabilityX12TransactionSetX12280
//	CapabilityX12TransactionSetX12283
//	CapabilityX12TransactionSetX12284
//	CapabilityX12TransactionSetX12285
//	CapabilityX12TransactionSetX12286
//	CapabilityX12TransactionSetX12288
//	CapabilityX12TransactionSetX12290
//	CapabilityX12TransactionSetX12300
//	CapabilityX12TransactionSetX12301
//	CapabilityX12TransactionSetX12303
//	CapabilityX12TransactionSetX12304
//	CapabilityX12TransactionSetX12309
//	CapabilityX12TransactionSetX12310
//	CapabilityX12TransactionSetX12311
//	CapabilityX12TransactionSetX12312
//	CapabilityX12TransactionSetX12313
//	CapabilityX12TransactionSetX12315
//	CapabilityX12TransactionSetX12317
//	CapabilityX12TransactionSetX12319
//	CapabilityX12TransactionSetX12322
//	CapabilityX12TransactionSetX12323
//	CapabilityX12TransactionSetX12324
//	CapabilityX12TransactionSetX12325
//	CapabilityX12TransactionSetX12326
//	CapabilityX12TransactionSetX12350
//	CapabilityX12TransactionSetX12352
//	CapabilityX12TransactionSetX12353
//	CapabilityX12TransactionSetX12354
//	CapabilityX12TransactionSetX12355
//	CapabilityX12TransactionSetX12356
//	CapabilityX12TransactionSetX12357
//	CapabilityX12TransactionSetX12358
//	CapabilityX12TransactionSetX12361
//	CapabilityX12TransactionSetX12362
//	CapabilityX12TransactionSetX12404
//	CapabilityX12TransactionSetX12410
//	CapabilityX12TransactionSetX12412
//	CapabilityX12TransactionSetX12414
//	CapabilityX12TransactionSetX12417
//	CapabilityX12TransactionSetX12418
//	CapabilityX12TransactionSetX12419
//	CapabilityX12TransactionSetX12420
//	CapabilityX12TransactionSetX12421
//	CapabilityX12TransactionSetX12422
//	CapabilityX12TransactionSetX12423
//	CapabilityX12TransactionSetX12424
//	CapabilityX12TransactionSetX12425
//	CapabilityX12TransactionSetX12426
//	CapabilityX12TransactionSetX12429
//	CapabilityX12TransactionSetX12431
//	CapabilityX12TransactionSetX12432
//	CapabilityX12TransactionSetX12433
//	CapabilityX12TransactionSetX12434
//	CapabilityX12TransactionSetX12435
//	CapabilityX12TransactionSetX12436
//	CapabilityX12TransactionSetX12437
//	CapabilityX12TransactionSetX12440
//	CapabilityX12TransactionSetX12451
//	CapabilityX12TransactionSetX12452
//	CapabilityX12TransactionSetX12453
//	CapabilityX12TransactionSetX12455
//	CapabilityX12TransactionSetX12456
//	CapabilityX12TransactionSetX12460
//	CapabilityX12TransactionSetX12463
//	CapabilityX12TransactionSetX12466
//	CapabilityX12TransactionSetX12468
//	CapabilityX12TransactionSetX12470
//	CapabilityX12TransactionSetX12475
//	CapabilityX12TransactionSetX12485
//	CapabilityX12TransactionSetX12486
//	CapabilityX12TransactionSetX12490
//	CapabilityX12TransactionSetX12492
//	CapabilityX12TransactionSetX12494
//	CapabilityX12TransactionSetX12500
//	CapabilityX12TransactionSetX12501
//	CapabilityX12TransactionSetX12503
//	CapabilityX12TransactionSetX12504
//	CapabilityX12TransactionSetX12511
//	CapabilityX12TransactionSetX12517
//	CapabilityX12TransactionSetX12521
//	CapabilityX12TransactionSetX12527
//	CapabilityX12TransactionSetX12536
//	CapabilityX12TransactionSetX12540
//	CapabilityX12TransactionSetX12561
//	CapabilityX12TransactionSetX12567
//	CapabilityX12TransactionSetX12568
//	CapabilityX12TransactionSetX12601
//	CapabilityX12TransactionSetX12602
//	CapabilityX12TransactionSetX12620
//	CapabilityX12TransactionSetX12625
//	CapabilityX12TransactionSetX12650
//	CapabilityX12TransactionSetX12715
//	CapabilityX12TransactionSetX12753
//	CapabilityX12TransactionSetX12754
//	CapabilityX12TransactionSetX12805
//	CapabilityX12TransactionSetX12806
//	CapabilityX12TransactionSetX12810
//	CapabilityX12TransactionSetX12811
//	CapabilityX12TransactionSetX12812
//	CapabilityX12TransactionSetX12813
//	CapabilityX12TransactionSetX12814
//	CapabilityX12TransactionSetX12815
//	CapabilityX12TransactionSetX12816
//	CapabilityX12TransactionSetX12818
//	CapabilityX12TransactionSetX12819
//	CapabilityX12TransactionSetX12820
//	CapabilityX12TransactionSetX12821
//	CapabilityX12TransactionSetX12822
//	CapabilityX12TransactionSetX12823
//	CapabilityX12TransactionSetX12824
//	CapabilityX12TransactionSetX12826
//	CapabilityX12TransactionSetX12827
//	CapabilityX12TransactionSetX12828
//	CapabilityX12TransactionSetX12829
//	CapabilityX12TransactionSetX12830
//	CapabilityX12TransactionSetX12831
//	CapabilityX12TransactionSetX12832
//	CapabilityX12TransactionSetX12833
//	CapabilityX12TransactionSetX12834
//	CapabilityX12TransactionSetX12835
//	CapabilityX12TransactionSetX12836
//	CapabilityX12TransactionSetX12837
//	CapabilityX12TransactionSetX12838
//	CapabilityX12TransactionSetX12839
//	CapabilityX12TransactionSetX12840
//	CapabilityX12TransactionSetX12841
//	CapabilityX12TransactionSetX12842
//	CapabilityX12TransactionSetX12843
//	CapabilityX12TransactionSetX12844
//	CapabilityX12TransactionSetX12845
//	CapabilityX12TransactionSetX12846
//	CapabilityX12TransactionSetX12847
//	CapabilityX12TransactionSetX12848
//	CapabilityX12TransactionSetX12849
//	CapabilityX12TransactionSetX12850
//	CapabilityX12TransactionSetX12851
//	CapabilityX12TransactionSetX12852
//	CapabilityX12TransactionSetX12853
//	CapabilityX12TransactionSetX12854
//	CapabilityX12TransactionSetX12855
//	CapabilityX12TransactionSetX12856
//	CapabilityX12TransactionSetX12857
//	CapabilityX12TransactionSetX12858
//	CapabilityX12TransactionSetX12859
//	CapabilityX12TransactionSetX12860
//	CapabilityX12TransactionSetX12861
//	CapabilityX12TransactionSetX12862
//	CapabilityX12TransactionSetX12863
//	CapabilityX12TransactionSetX12864
//	CapabilityX12TransactionSetX12865
//	CapabilityX12TransactionSetX12866
//	CapabilityX12TransactionSetX12867
//	CapabilityX12TransactionSetX12868
//	CapabilityX12TransactionSetX12869
//	CapabilityX12TransactionSetX12870
//	CapabilityX12TransactionSetX12871
//	CapabilityX12TransactionSetX12872
//	CapabilityX12TransactionSetX12873
//	CapabilityX12TransactionSetX12874
//	CapabilityX12TransactionSetX12875
//	CapabilityX12TransactionSetX12876
//	CapabilityX12TransactionSetX12877
//	CapabilityX12TransactionSetX12878
//	CapabilityX12TransactionSetX12879
//	CapabilityX12TransactionSetX12880
//	CapabilityX12TransactionSetX12881
//	CapabilityX12TransactionSetX12882
//	CapabilityX12TransactionSetX12883
//	CapabilityX12TransactionSetX12884
//	CapabilityX12TransactionSetX12885
//	CapabilityX12TransactionSetX12886
//	CapabilityX12TransactionSetX12887
//	CapabilityX12TransactionSetX12888
//	CapabilityX12TransactionSetX12889
//	CapabilityX12TransactionSetX12891
//	CapabilityX12TransactionSetX12893
//	CapabilityX12TransactionSetX12894
//	CapabilityX12TransactionSetX12895
//	CapabilityX12TransactionSetX12896
//	CapabilityX12TransactionSetX12920
//	CapabilityX12TransactionSetX12924
//	CapabilityX12TransactionSetX12925
//	CapabilityX12TransactionSetX12926
//	CapabilityX12TransactionSetX12928
//	CapabilityX12TransactionSetX12940
//	CapabilityX12TransactionSetX12943
//	CapabilityX12TransactionSetX12944
//	CapabilityX12TransactionSetX12945
//	CapabilityX12TransactionSetX12947
//	CapabilityX12TransactionSetX12980
//	CapabilityX12TransactionSetX12990
//	CapabilityX12TransactionSetX12993
//	CapabilityX12TransactionSetX12996
//	CapabilityX12TransactionSetX12997
//	CapabilityX12TransactionSetX12998
//	CapabilityX12TransactionSetX12999
//	CapabilityX12TransactionSetX12270x279
//	CapabilityX12TransactionSetX12271x279
//	CapabilityX12TransactionSetX12275x210
//	CapabilityX12TransactionSetX12275x211
//	CapabilityX12TransactionSetX12276x212
//	CapabilityX12TransactionSetX12277x212
//	CapabilityX12TransactionSetX12277x214
//	CapabilityX12TransactionSetX12277x364
//	CapabilityX12TransactionSetX12278x217
//	CapabilityX12TransactionSetX12820x218
//	CapabilityX12TransactionSetX12820x306
//	CapabilityX12TransactionSetX12824x186
//	CapabilityX12TransactionSetX12834x220
//	CapabilityX12TransactionSetX12834x307
//	CapabilityX12TransactionSetX12834x318
//	CapabilityX12TransactionSetX12835x221
//	CapabilityX12TransactionSetX12837x222
//	CapabilityX12TransactionSetX12837x223
//	CapabilityX12TransactionSetX12837x224
//	CapabilityX12TransactionSetX12837x291
//	CapabilityX12TransactionSetX12837x292
//	CapabilityX12TransactionSetX12837x298
//	CapabilityX12TransactionSetX12999x231
type CapabilityX12TransactionSetInput interface {
	pulumi.Input

	ToCapabilityX12TransactionSetOutput() CapabilityX12TransactionSetOutput
	ToCapabilityX12TransactionSetOutputWithContext(context.Context) CapabilityX12TransactionSetOutput
}

var capabilityX12TransactionSetPtrType = reflect.TypeOf((**CapabilityX12TransactionSet)(nil)).Elem()

type CapabilityX12TransactionSetPtrInput interface {
	pulumi.Input

	ToCapabilityX12TransactionSetPtrOutput() CapabilityX12TransactionSetPtrOutput
	ToCapabilityX12TransactionSetPtrOutputWithContext(context.Context) CapabilityX12TransactionSetPtrOutput
}

type capabilityX12TransactionSetPtr string

func CapabilityX12TransactionSetPtr(v string) CapabilityX12TransactionSetPtrInput {
	return (*capabilityX12TransactionSetPtr)(&v)
}

func (*capabilityX12TransactionSetPtr) ElementType() reflect.Type {
	return capabilityX12TransactionSetPtrType
}

func (in *capabilityX12TransactionSetPtr) ToCapabilityX12TransactionSetPtrOutput() CapabilityX12TransactionSetPtrOutput {
	return pulumi.ToOutput(in).(CapabilityX12TransactionSetPtrOutput)
}

func (in *capabilityX12TransactionSetPtr) ToCapabilityX12TransactionSetPtrOutputWithContext(ctx context.Context) CapabilityX12TransactionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapabilityX12TransactionSetPtrOutput)
}

type CapabilityX12Version string

const (
	CapabilityX12VersionVersion4010      = CapabilityX12Version("VERSION_4010")
	CapabilityX12VersionVersion4030      = CapabilityX12Version("VERSION_4030")
	CapabilityX12VersionVersion4050      = CapabilityX12Version("VERSION_4050")
	CapabilityX12VersionVersion4060      = CapabilityX12Version("VERSION_4060")
	CapabilityX12VersionVersion5010      = CapabilityX12Version("VERSION_5010")
	CapabilityX12VersionVersion5010Hipaa = CapabilityX12Version("VERSION_5010_HIPAA")
)

func (CapabilityX12Version) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityX12Version)(nil)).Elem()
}

func (e CapabilityX12Version) ToCapabilityX12VersionOutput() CapabilityX12VersionOutput {
	return pulumi.ToOutput(e).(CapabilityX12VersionOutput)
}

func (e CapabilityX12Version) ToCapabilityX12VersionOutputWithContext(ctx context.Context) CapabilityX12VersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapabilityX12VersionOutput)
}

func (e CapabilityX12Version) ToCapabilityX12VersionPtrOutput() CapabilityX12VersionPtrOutput {
	return e.ToCapabilityX12VersionPtrOutputWithContext(context.Background())
}

func (e CapabilityX12Version) ToCapabilityX12VersionPtrOutputWithContext(ctx context.Context) CapabilityX12VersionPtrOutput {
	return CapabilityX12Version(e).ToCapabilityX12VersionOutputWithContext(ctx).ToCapabilityX12VersionPtrOutputWithContext(ctx)
}

func (e CapabilityX12Version) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityX12Version) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapabilityX12Version) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapabilityX12Version) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapabilityX12VersionOutput struct{ *pulumi.OutputState }

func (CapabilityX12VersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityX12Version)(nil)).Elem()
}

func (o CapabilityX12VersionOutput) ToCapabilityX12VersionOutput() CapabilityX12VersionOutput {
	return o
}

func (o CapabilityX12VersionOutput) ToCapabilityX12VersionOutputWithContext(ctx context.Context) CapabilityX12VersionOutput {
	return o
}

func (o CapabilityX12VersionOutput) ToCapabilityX12VersionPtrOutput() CapabilityX12VersionPtrOutput {
	return o.ToCapabilityX12VersionPtrOutputWithContext(context.Background())
}

func (o CapabilityX12VersionOutput) ToCapabilityX12VersionPtrOutputWithContext(ctx context.Context) CapabilityX12VersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapabilityX12Version) *CapabilityX12Version {
		return &v
	}).(CapabilityX12VersionPtrOutput)
}

func (o CapabilityX12VersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapabilityX12VersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityX12Version) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapabilityX12VersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityX12VersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapabilityX12Version) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapabilityX12VersionPtrOutput struct{ *pulumi.OutputState }

func (CapabilityX12VersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapabilityX12Version)(nil)).Elem()
}

func (o CapabilityX12VersionPtrOutput) ToCapabilityX12VersionPtrOutput() CapabilityX12VersionPtrOutput {
	return o
}

func (o CapabilityX12VersionPtrOutput) ToCapabilityX12VersionPtrOutputWithContext(ctx context.Context) CapabilityX12VersionPtrOutput {
	return o
}

func (o CapabilityX12VersionPtrOutput) Elem() CapabilityX12VersionOutput {
	return o.ApplyT(func(v *CapabilityX12Version) CapabilityX12Version {
		if v != nil {
			return *v
		}
		var ret CapabilityX12Version
		return ret
	}).(CapabilityX12VersionOutput)
}

func (o CapabilityX12VersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapabilityX12VersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapabilityX12Version) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapabilityX12VersionInput is an input type that accepts values of the CapabilityX12Version enum
// A concrete instance of `CapabilityX12VersionInput` can be one of the following:
//
//	CapabilityX12VersionVersion4010
//	CapabilityX12VersionVersion4030
//	CapabilityX12VersionVersion4050
//	CapabilityX12VersionVersion4060
//	CapabilityX12VersionVersion5010
//	CapabilityX12VersionVersion5010Hipaa
type CapabilityX12VersionInput interface {
	pulumi.Input

	ToCapabilityX12VersionOutput() CapabilityX12VersionOutput
	ToCapabilityX12VersionOutputWithContext(context.Context) CapabilityX12VersionOutput
}

var capabilityX12VersionPtrType = reflect.TypeOf((**CapabilityX12Version)(nil)).Elem()

type CapabilityX12VersionPtrInput interface {
	pulumi.Input

	ToCapabilityX12VersionPtrOutput() CapabilityX12VersionPtrOutput
	ToCapabilityX12VersionPtrOutputWithContext(context.Context) CapabilityX12VersionPtrOutput
}

type capabilityX12VersionPtr string

func CapabilityX12VersionPtr(v string) CapabilityX12VersionPtrInput {
	return (*capabilityX12VersionPtr)(&v)
}

func (*capabilityX12VersionPtr) ElementType() reflect.Type {
	return capabilityX12VersionPtrType
}

func (in *capabilityX12VersionPtr) ToCapabilityX12VersionPtrOutput() CapabilityX12VersionPtrOutput {
	return pulumi.ToOutput(in).(CapabilityX12VersionPtrOutput)
}

func (in *capabilityX12VersionPtr) ToCapabilityX12VersionPtrOutputWithContext(ctx context.Context) CapabilityX12VersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapabilityX12VersionPtrOutput)
}

type PartnershipLineTerminator string

const (
	PartnershipLineTerminatorCrlf = PartnershipLineTerminator("CRLF")
	PartnershipLineTerminatorLf   = PartnershipLineTerminator("LF")
	PartnershipLineTerminatorCr   = PartnershipLineTerminator("CR")
)

func (PartnershipLineTerminator) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipLineTerminator)(nil)).Elem()
}

func (e PartnershipLineTerminator) ToPartnershipLineTerminatorOutput() PartnershipLineTerminatorOutput {
	return pulumi.ToOutput(e).(PartnershipLineTerminatorOutput)
}

func (e PartnershipLineTerminator) ToPartnershipLineTerminatorOutputWithContext(ctx context.Context) PartnershipLineTerminatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnershipLineTerminatorOutput)
}

func (e PartnershipLineTerminator) ToPartnershipLineTerminatorPtrOutput() PartnershipLineTerminatorPtrOutput {
	return e.ToPartnershipLineTerminatorPtrOutputWithContext(context.Background())
}

func (e PartnershipLineTerminator) ToPartnershipLineTerminatorPtrOutputWithContext(ctx context.Context) PartnershipLineTerminatorPtrOutput {
	return PartnershipLineTerminator(e).ToPartnershipLineTerminatorOutputWithContext(ctx).ToPartnershipLineTerminatorPtrOutputWithContext(ctx)
}

func (e PartnershipLineTerminator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipLineTerminator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipLineTerminator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnershipLineTerminator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnershipLineTerminatorOutput struct{ *pulumi.OutputState }

func (PartnershipLineTerminatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipLineTerminator)(nil)).Elem()
}

func (o PartnershipLineTerminatorOutput) ToPartnershipLineTerminatorOutput() PartnershipLineTerminatorOutput {
	return o
}

func (o PartnershipLineTerminatorOutput) ToPartnershipLineTerminatorOutputWithContext(ctx context.Context) PartnershipLineTerminatorOutput {
	return o
}

func (o PartnershipLineTerminatorOutput) ToPartnershipLineTerminatorPtrOutput() PartnershipLineTerminatorPtrOutput {
	return o.ToPartnershipLineTerminatorPtrOutputWithContext(context.Background())
}

func (o PartnershipLineTerminatorOutput) ToPartnershipLineTerminatorPtrOutputWithContext(ctx context.Context) PartnershipLineTerminatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnershipLineTerminator) *PartnershipLineTerminator {
		return &v
	}).(PartnershipLineTerminatorPtrOutput)
}

func (o PartnershipLineTerminatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnershipLineTerminatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipLineTerminator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnershipLineTerminatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipLineTerminatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipLineTerminator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnershipLineTerminatorPtrOutput struct{ *pulumi.OutputState }

func (PartnershipLineTerminatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnershipLineTerminator)(nil)).Elem()
}

func (o PartnershipLineTerminatorPtrOutput) ToPartnershipLineTerminatorPtrOutput() PartnershipLineTerminatorPtrOutput {
	return o
}

func (o PartnershipLineTerminatorPtrOutput) ToPartnershipLineTerminatorPtrOutputWithContext(ctx context.Context) PartnershipLineTerminatorPtrOutput {
	return o
}

func (o PartnershipLineTerminatorPtrOutput) Elem() PartnershipLineTerminatorOutput {
	return o.ApplyT(func(v *PartnershipLineTerminator) PartnershipLineTerminator {
		if v != nil {
			return *v
		}
		var ret PartnershipLineTerminator
		return ret
	}).(PartnershipLineTerminatorOutput)
}

func (o PartnershipLineTerminatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipLineTerminatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnershipLineTerminator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnershipLineTerminatorInput is an input type that accepts values of the PartnershipLineTerminator enum
// A concrete instance of `PartnershipLineTerminatorInput` can be one of the following:
//
//	PartnershipLineTerminatorCrlf
//	PartnershipLineTerminatorLf
//	PartnershipLineTerminatorCr
type PartnershipLineTerminatorInput interface {
	pulumi.Input

	ToPartnershipLineTerminatorOutput() PartnershipLineTerminatorOutput
	ToPartnershipLineTerminatorOutputWithContext(context.Context) PartnershipLineTerminatorOutput
}

var partnershipLineTerminatorPtrType = reflect.TypeOf((**PartnershipLineTerminator)(nil)).Elem()

type PartnershipLineTerminatorPtrInput interface {
	pulumi.Input

	ToPartnershipLineTerminatorPtrOutput() PartnershipLineTerminatorPtrOutput
	ToPartnershipLineTerminatorPtrOutputWithContext(context.Context) PartnershipLineTerminatorPtrOutput
}

type partnershipLineTerminatorPtr string

func PartnershipLineTerminatorPtr(v string) PartnershipLineTerminatorPtrInput {
	return (*partnershipLineTerminatorPtr)(&v)
}

func (*partnershipLineTerminatorPtr) ElementType() reflect.Type {
	return partnershipLineTerminatorPtrType
}

func (in *partnershipLineTerminatorPtr) ToPartnershipLineTerminatorPtrOutput() PartnershipLineTerminatorPtrOutput {
	return pulumi.ToOutput(in).(PartnershipLineTerminatorPtrOutput)
}

func (in *partnershipLineTerminatorPtr) ToPartnershipLineTerminatorPtrOutputWithContext(ctx context.Context) PartnershipLineTerminatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnershipLineTerminatorPtrOutput)
}

type PartnershipWrapFormat string

const (
	PartnershipWrapFormatSegment    = PartnershipWrapFormat("SEGMENT")
	PartnershipWrapFormatOneLine    = PartnershipWrapFormat("ONE_LINE")
	PartnershipWrapFormatLineLength = PartnershipWrapFormat("LINE_LENGTH")
)

func (PartnershipWrapFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipWrapFormat)(nil)).Elem()
}

func (e PartnershipWrapFormat) ToPartnershipWrapFormatOutput() PartnershipWrapFormatOutput {
	return pulumi.ToOutput(e).(PartnershipWrapFormatOutput)
}

func (e PartnershipWrapFormat) ToPartnershipWrapFormatOutputWithContext(ctx context.Context) PartnershipWrapFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnershipWrapFormatOutput)
}

func (e PartnershipWrapFormat) ToPartnershipWrapFormatPtrOutput() PartnershipWrapFormatPtrOutput {
	return e.ToPartnershipWrapFormatPtrOutputWithContext(context.Background())
}

func (e PartnershipWrapFormat) ToPartnershipWrapFormatPtrOutputWithContext(ctx context.Context) PartnershipWrapFormatPtrOutput {
	return PartnershipWrapFormat(e).ToPartnershipWrapFormatOutputWithContext(ctx).ToPartnershipWrapFormatPtrOutputWithContext(ctx)
}

func (e PartnershipWrapFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipWrapFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipWrapFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnershipWrapFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnershipWrapFormatOutput struct{ *pulumi.OutputState }

func (PartnershipWrapFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipWrapFormat)(nil)).Elem()
}

func (o PartnershipWrapFormatOutput) ToPartnershipWrapFormatOutput() PartnershipWrapFormatOutput {
	return o
}

func (o PartnershipWrapFormatOutput) ToPartnershipWrapFormatOutputWithContext(ctx context.Context) PartnershipWrapFormatOutput {
	return o
}

func (o PartnershipWrapFormatOutput) ToPartnershipWrapFormatPtrOutput() PartnershipWrapFormatPtrOutput {
	return o.ToPartnershipWrapFormatPtrOutputWithContext(context.Background())
}

func (o PartnershipWrapFormatOutput) ToPartnershipWrapFormatPtrOutputWithContext(ctx context.Context) PartnershipWrapFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnershipWrapFormat) *PartnershipWrapFormat {
		return &v
	}).(PartnershipWrapFormatPtrOutput)
}

func (o PartnershipWrapFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnershipWrapFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipWrapFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnershipWrapFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipWrapFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipWrapFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnershipWrapFormatPtrOutput struct{ *pulumi.OutputState }

func (PartnershipWrapFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnershipWrapFormat)(nil)).Elem()
}

func (o PartnershipWrapFormatPtrOutput) ToPartnershipWrapFormatPtrOutput() PartnershipWrapFormatPtrOutput {
	return o
}

func (o PartnershipWrapFormatPtrOutput) ToPartnershipWrapFormatPtrOutputWithContext(ctx context.Context) PartnershipWrapFormatPtrOutput {
	return o
}

func (o PartnershipWrapFormatPtrOutput) Elem() PartnershipWrapFormatOutput {
	return o.ApplyT(func(v *PartnershipWrapFormat) PartnershipWrapFormat {
		if v != nil {
			return *v
		}
		var ret PartnershipWrapFormat
		return ret
	}).(PartnershipWrapFormatOutput)
}

func (o PartnershipWrapFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipWrapFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnershipWrapFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnershipWrapFormatInput is an input type that accepts values of the PartnershipWrapFormat enum
// A concrete instance of `PartnershipWrapFormatInput` can be one of the following:
//
//	PartnershipWrapFormatSegment
//	PartnershipWrapFormatOneLine
//	PartnershipWrapFormatLineLength
type PartnershipWrapFormatInput interface {
	pulumi.Input

	ToPartnershipWrapFormatOutput() PartnershipWrapFormatOutput
	ToPartnershipWrapFormatOutputWithContext(context.Context) PartnershipWrapFormatOutput
}

var partnershipWrapFormatPtrType = reflect.TypeOf((**PartnershipWrapFormat)(nil)).Elem()

type PartnershipWrapFormatPtrInput interface {
	pulumi.Input

	ToPartnershipWrapFormatPtrOutput() PartnershipWrapFormatPtrOutput
	ToPartnershipWrapFormatPtrOutputWithContext(context.Context) PartnershipWrapFormatPtrOutput
}

type partnershipWrapFormatPtr string

func PartnershipWrapFormatPtr(v string) PartnershipWrapFormatPtrInput {
	return (*partnershipWrapFormatPtr)(&v)
}

func (*partnershipWrapFormatPtr) ElementType() reflect.Type {
	return partnershipWrapFormatPtrType
}

func (in *partnershipWrapFormatPtr) ToPartnershipWrapFormatPtrOutput() PartnershipWrapFormatPtrOutput {
	return pulumi.ToOutput(in).(PartnershipWrapFormatPtrOutput)
}

func (in *partnershipWrapFormatPtr) ToPartnershipWrapFormatPtrOutputWithContext(ctx context.Context) PartnershipWrapFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnershipWrapFormatPtrOutput)
}

type PartnershipX12FunctionalAcknowledgment string

const (
	PartnershipX12FunctionalAcknowledgmentDoNotGenerate                             = PartnershipX12FunctionalAcknowledgment("DO_NOT_GENERATE")
	PartnershipX12FunctionalAcknowledgmentGenerateAllSegments                       = PartnershipX12FunctionalAcknowledgment("GENERATE_ALL_SEGMENTS")
	PartnershipX12FunctionalAcknowledgmentGenerateWithoutTransactionSetResponseLoop = PartnershipX12FunctionalAcknowledgment("GENERATE_WITHOUT_TRANSACTION_SET_RESPONSE_LOOP")
)

func (PartnershipX12FunctionalAcknowledgment) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12FunctionalAcknowledgment)(nil)).Elem()
}

func (e PartnershipX12FunctionalAcknowledgment) ToPartnershipX12FunctionalAcknowledgmentOutput() PartnershipX12FunctionalAcknowledgmentOutput {
	return pulumi.ToOutput(e).(PartnershipX12FunctionalAcknowledgmentOutput)
}

func (e PartnershipX12FunctionalAcknowledgment) ToPartnershipX12FunctionalAcknowledgmentOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnershipX12FunctionalAcknowledgmentOutput)
}

func (e PartnershipX12FunctionalAcknowledgment) ToPartnershipX12FunctionalAcknowledgmentPtrOutput() PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return e.ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(context.Background())
}

func (e PartnershipX12FunctionalAcknowledgment) ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return PartnershipX12FunctionalAcknowledgment(e).ToPartnershipX12FunctionalAcknowledgmentOutputWithContext(ctx).ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(ctx)
}

func (e PartnershipX12FunctionalAcknowledgment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12FunctionalAcknowledgment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12FunctionalAcknowledgment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnershipX12FunctionalAcknowledgment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnershipX12FunctionalAcknowledgmentOutput struct{ *pulumi.OutputState }

func (PartnershipX12FunctionalAcknowledgmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12FunctionalAcknowledgment)(nil)).Elem()
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToPartnershipX12FunctionalAcknowledgmentOutput() PartnershipX12FunctionalAcknowledgmentOutput {
	return o
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToPartnershipX12FunctionalAcknowledgmentOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentOutput {
	return o
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToPartnershipX12FunctionalAcknowledgmentPtrOutput() PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return o.ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(context.Background())
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnershipX12FunctionalAcknowledgment) *PartnershipX12FunctionalAcknowledgment {
		return &v
	}).(PartnershipX12FunctionalAcknowledgmentPtrOutput)
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12FunctionalAcknowledgment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12FunctionalAcknowledgmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12FunctionalAcknowledgment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnershipX12FunctionalAcknowledgmentPtrOutput struct{ *pulumi.OutputState }

func (PartnershipX12FunctionalAcknowledgmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnershipX12FunctionalAcknowledgment)(nil)).Elem()
}

func (o PartnershipX12FunctionalAcknowledgmentPtrOutput) ToPartnershipX12FunctionalAcknowledgmentPtrOutput() PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return o
}

func (o PartnershipX12FunctionalAcknowledgmentPtrOutput) ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return o
}

func (o PartnershipX12FunctionalAcknowledgmentPtrOutput) Elem() PartnershipX12FunctionalAcknowledgmentOutput {
	return o.ApplyT(func(v *PartnershipX12FunctionalAcknowledgment) PartnershipX12FunctionalAcknowledgment {
		if v != nil {
			return *v
		}
		var ret PartnershipX12FunctionalAcknowledgment
		return ret
	}).(PartnershipX12FunctionalAcknowledgmentOutput)
}

func (o PartnershipX12FunctionalAcknowledgmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12FunctionalAcknowledgmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnershipX12FunctionalAcknowledgment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnershipX12FunctionalAcknowledgmentInput is an input type that accepts values of the PartnershipX12FunctionalAcknowledgment enum
// A concrete instance of `PartnershipX12FunctionalAcknowledgmentInput` can be one of the following:
//
//	PartnershipX12FunctionalAcknowledgmentDoNotGenerate
//	PartnershipX12FunctionalAcknowledgmentGenerateAllSegments
//	PartnershipX12FunctionalAcknowledgmentGenerateWithoutTransactionSetResponseLoop
type PartnershipX12FunctionalAcknowledgmentInput interface {
	pulumi.Input

	ToPartnershipX12FunctionalAcknowledgmentOutput() PartnershipX12FunctionalAcknowledgmentOutput
	ToPartnershipX12FunctionalAcknowledgmentOutputWithContext(context.Context) PartnershipX12FunctionalAcknowledgmentOutput
}

var partnershipX12FunctionalAcknowledgmentPtrType = reflect.TypeOf((**PartnershipX12FunctionalAcknowledgment)(nil)).Elem()

type PartnershipX12FunctionalAcknowledgmentPtrInput interface {
	pulumi.Input

	ToPartnershipX12FunctionalAcknowledgmentPtrOutput() PartnershipX12FunctionalAcknowledgmentPtrOutput
	ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(context.Context) PartnershipX12FunctionalAcknowledgmentPtrOutput
}

type partnershipX12FunctionalAcknowledgmentPtr string

func PartnershipX12FunctionalAcknowledgmentPtr(v string) PartnershipX12FunctionalAcknowledgmentPtrInput {
	return (*partnershipX12FunctionalAcknowledgmentPtr)(&v)
}

func (*partnershipX12FunctionalAcknowledgmentPtr) ElementType() reflect.Type {
	return partnershipX12FunctionalAcknowledgmentPtrType
}

func (in *partnershipX12FunctionalAcknowledgmentPtr) ToPartnershipX12FunctionalAcknowledgmentPtrOutput() PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return pulumi.ToOutput(in).(PartnershipX12FunctionalAcknowledgmentPtrOutput)
}

func (in *partnershipX12FunctionalAcknowledgmentPtr) ToPartnershipX12FunctionalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12FunctionalAcknowledgmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnershipX12FunctionalAcknowledgmentPtrOutput)
}

type PartnershipX12TechnicalAcknowledgment string

const (
	PartnershipX12TechnicalAcknowledgmentDoNotGenerate       = PartnershipX12TechnicalAcknowledgment("DO_NOT_GENERATE")
	PartnershipX12TechnicalAcknowledgmentGenerateAllSegments = PartnershipX12TechnicalAcknowledgment("GENERATE_ALL_SEGMENTS")
)

func (PartnershipX12TechnicalAcknowledgment) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12TechnicalAcknowledgment)(nil)).Elem()
}

func (e PartnershipX12TechnicalAcknowledgment) ToPartnershipX12TechnicalAcknowledgmentOutput() PartnershipX12TechnicalAcknowledgmentOutput {
	return pulumi.ToOutput(e).(PartnershipX12TechnicalAcknowledgmentOutput)
}

func (e PartnershipX12TechnicalAcknowledgment) ToPartnershipX12TechnicalAcknowledgmentOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnershipX12TechnicalAcknowledgmentOutput)
}

func (e PartnershipX12TechnicalAcknowledgment) ToPartnershipX12TechnicalAcknowledgmentPtrOutput() PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return e.ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(context.Background())
}

func (e PartnershipX12TechnicalAcknowledgment) ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return PartnershipX12TechnicalAcknowledgment(e).ToPartnershipX12TechnicalAcknowledgmentOutputWithContext(ctx).ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(ctx)
}

func (e PartnershipX12TechnicalAcknowledgment) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12TechnicalAcknowledgment) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12TechnicalAcknowledgment) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnershipX12TechnicalAcknowledgment) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnershipX12TechnicalAcknowledgmentOutput struct{ *pulumi.OutputState }

func (PartnershipX12TechnicalAcknowledgmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12TechnicalAcknowledgment)(nil)).Elem()
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToPartnershipX12TechnicalAcknowledgmentOutput() PartnershipX12TechnicalAcknowledgmentOutput {
	return o
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToPartnershipX12TechnicalAcknowledgmentOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentOutput {
	return o
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToPartnershipX12TechnicalAcknowledgmentPtrOutput() PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return o.ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(context.Background())
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnershipX12TechnicalAcknowledgment) *PartnershipX12TechnicalAcknowledgment {
		return &v
	}).(PartnershipX12TechnicalAcknowledgmentPtrOutput)
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12TechnicalAcknowledgment) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12TechnicalAcknowledgmentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12TechnicalAcknowledgment) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnershipX12TechnicalAcknowledgmentPtrOutput struct{ *pulumi.OutputState }

func (PartnershipX12TechnicalAcknowledgmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnershipX12TechnicalAcknowledgment)(nil)).Elem()
}

func (o PartnershipX12TechnicalAcknowledgmentPtrOutput) ToPartnershipX12TechnicalAcknowledgmentPtrOutput() PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return o
}

func (o PartnershipX12TechnicalAcknowledgmentPtrOutput) ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return o
}

func (o PartnershipX12TechnicalAcknowledgmentPtrOutput) Elem() PartnershipX12TechnicalAcknowledgmentOutput {
	return o.ApplyT(func(v *PartnershipX12TechnicalAcknowledgment) PartnershipX12TechnicalAcknowledgment {
		if v != nil {
			return *v
		}
		var ret PartnershipX12TechnicalAcknowledgment
		return ret
	}).(PartnershipX12TechnicalAcknowledgmentOutput)
}

func (o PartnershipX12TechnicalAcknowledgmentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12TechnicalAcknowledgmentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnershipX12TechnicalAcknowledgment) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnershipX12TechnicalAcknowledgmentInput is an input type that accepts values of the PartnershipX12TechnicalAcknowledgment enum
// A concrete instance of `PartnershipX12TechnicalAcknowledgmentInput` can be one of the following:
//
//	PartnershipX12TechnicalAcknowledgmentDoNotGenerate
//	PartnershipX12TechnicalAcknowledgmentGenerateAllSegments
type PartnershipX12TechnicalAcknowledgmentInput interface {
	pulumi.Input

	ToPartnershipX12TechnicalAcknowledgmentOutput() PartnershipX12TechnicalAcknowledgmentOutput
	ToPartnershipX12TechnicalAcknowledgmentOutputWithContext(context.Context) PartnershipX12TechnicalAcknowledgmentOutput
}

var partnershipX12TechnicalAcknowledgmentPtrType = reflect.TypeOf((**PartnershipX12TechnicalAcknowledgment)(nil)).Elem()

type PartnershipX12TechnicalAcknowledgmentPtrInput interface {
	pulumi.Input

	ToPartnershipX12TechnicalAcknowledgmentPtrOutput() PartnershipX12TechnicalAcknowledgmentPtrOutput
	ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(context.Context) PartnershipX12TechnicalAcknowledgmentPtrOutput
}

type partnershipX12TechnicalAcknowledgmentPtr string

func PartnershipX12TechnicalAcknowledgmentPtr(v string) PartnershipX12TechnicalAcknowledgmentPtrInput {
	return (*partnershipX12TechnicalAcknowledgmentPtr)(&v)
}

func (*partnershipX12TechnicalAcknowledgmentPtr) ElementType() reflect.Type {
	return partnershipX12TechnicalAcknowledgmentPtrType
}

func (in *partnershipX12TechnicalAcknowledgmentPtr) ToPartnershipX12TechnicalAcknowledgmentPtrOutput() PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return pulumi.ToOutput(in).(PartnershipX12TechnicalAcknowledgmentPtrOutput)
}

func (in *partnershipX12TechnicalAcknowledgmentPtr) ToPartnershipX12TechnicalAcknowledgmentPtrOutputWithContext(ctx context.Context) PartnershipX12TechnicalAcknowledgmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnershipX12TechnicalAcknowledgmentPtrOutput)
}

type PartnershipX12gs05TimeFormat string

const (
	PartnershipX12gs05TimeFormatHhmm     = PartnershipX12gs05TimeFormat("HHMM")
	PartnershipX12gs05TimeFormatHhmmss   = PartnershipX12gs05TimeFormat("HHMMSS")
	PartnershipX12gs05TimeFormatHhmmssdd = PartnershipX12gs05TimeFormat("HHMMSSDD")
)

func (PartnershipX12gs05TimeFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12gs05TimeFormat)(nil)).Elem()
}

func (e PartnershipX12gs05TimeFormat) ToPartnershipX12gs05TimeFormatOutput() PartnershipX12gs05TimeFormatOutput {
	return pulumi.ToOutput(e).(PartnershipX12gs05TimeFormatOutput)
}

func (e PartnershipX12gs05TimeFormat) ToPartnershipX12gs05TimeFormatOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartnershipX12gs05TimeFormatOutput)
}

func (e PartnershipX12gs05TimeFormat) ToPartnershipX12gs05TimeFormatPtrOutput() PartnershipX12gs05TimeFormatPtrOutput {
	return e.ToPartnershipX12gs05TimeFormatPtrOutputWithContext(context.Background())
}

func (e PartnershipX12gs05TimeFormat) ToPartnershipX12gs05TimeFormatPtrOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatPtrOutput {
	return PartnershipX12gs05TimeFormat(e).ToPartnershipX12gs05TimeFormatOutputWithContext(ctx).ToPartnershipX12gs05TimeFormatPtrOutputWithContext(ctx)
}

func (e PartnershipX12gs05TimeFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12gs05TimeFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartnershipX12gs05TimeFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartnershipX12gs05TimeFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartnershipX12gs05TimeFormatOutput struct{ *pulumi.OutputState }

func (PartnershipX12gs05TimeFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnershipX12gs05TimeFormat)(nil)).Elem()
}

func (o PartnershipX12gs05TimeFormatOutput) ToPartnershipX12gs05TimeFormatOutput() PartnershipX12gs05TimeFormatOutput {
	return o
}

func (o PartnershipX12gs05TimeFormatOutput) ToPartnershipX12gs05TimeFormatOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatOutput {
	return o
}

func (o PartnershipX12gs05TimeFormatOutput) ToPartnershipX12gs05TimeFormatPtrOutput() PartnershipX12gs05TimeFormatPtrOutput {
	return o.ToPartnershipX12gs05TimeFormatPtrOutputWithContext(context.Background())
}

func (o PartnershipX12gs05TimeFormatOutput) ToPartnershipX12gs05TimeFormatPtrOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartnershipX12gs05TimeFormat) *PartnershipX12gs05TimeFormat {
		return &v
	}).(PartnershipX12gs05TimeFormatPtrOutput)
}

func (o PartnershipX12gs05TimeFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartnershipX12gs05TimeFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12gs05TimeFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartnershipX12gs05TimeFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12gs05TimeFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartnershipX12gs05TimeFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartnershipX12gs05TimeFormatPtrOutput struct{ *pulumi.OutputState }

func (PartnershipX12gs05TimeFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnershipX12gs05TimeFormat)(nil)).Elem()
}

func (o PartnershipX12gs05TimeFormatPtrOutput) ToPartnershipX12gs05TimeFormatPtrOutput() PartnershipX12gs05TimeFormatPtrOutput {
	return o
}

func (o PartnershipX12gs05TimeFormatPtrOutput) ToPartnershipX12gs05TimeFormatPtrOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatPtrOutput {
	return o
}

func (o PartnershipX12gs05TimeFormatPtrOutput) Elem() PartnershipX12gs05TimeFormatOutput {
	return o.ApplyT(func(v *PartnershipX12gs05TimeFormat) PartnershipX12gs05TimeFormat {
		if v != nil {
			return *v
		}
		var ret PartnershipX12gs05TimeFormat
		return ret
	}).(PartnershipX12gs05TimeFormatOutput)
}

func (o PartnershipX12gs05TimeFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartnershipX12gs05TimeFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartnershipX12gs05TimeFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PartnershipX12gs05TimeFormatInput is an input type that accepts values of the PartnershipX12gs05TimeFormat enum
// A concrete instance of `PartnershipX12gs05TimeFormatInput` can be one of the following:
//
//	PartnershipX12gs05TimeFormatHhmm
//	PartnershipX12gs05TimeFormatHhmmss
//	PartnershipX12gs05TimeFormatHhmmssdd
type PartnershipX12gs05TimeFormatInput interface {
	pulumi.Input

	ToPartnershipX12gs05TimeFormatOutput() PartnershipX12gs05TimeFormatOutput
	ToPartnershipX12gs05TimeFormatOutputWithContext(context.Context) PartnershipX12gs05TimeFormatOutput
}

var partnershipX12gs05TimeFormatPtrType = reflect.TypeOf((**PartnershipX12gs05TimeFormat)(nil)).Elem()

type PartnershipX12gs05TimeFormatPtrInput interface {
	pulumi.Input

	ToPartnershipX12gs05TimeFormatPtrOutput() PartnershipX12gs05TimeFormatPtrOutput
	ToPartnershipX12gs05TimeFormatPtrOutputWithContext(context.Context) PartnershipX12gs05TimeFormatPtrOutput
}

type partnershipX12gs05TimeFormatPtr string

func PartnershipX12gs05TimeFormatPtr(v string) PartnershipX12gs05TimeFormatPtrInput {
	return (*partnershipX12gs05TimeFormatPtr)(&v)
}

func (*partnershipX12gs05TimeFormatPtr) ElementType() reflect.Type {
	return partnershipX12gs05TimeFormatPtrType
}

func (in *partnershipX12gs05TimeFormatPtr) ToPartnershipX12gs05TimeFormatPtrOutput() PartnershipX12gs05TimeFormatPtrOutput {
	return pulumi.ToOutput(in).(PartnershipX12gs05TimeFormatPtrOutput)
}

func (in *partnershipX12gs05TimeFormatPtr) ToPartnershipX12gs05TimeFormatPtrOutputWithContext(ctx context.Context) PartnershipX12gs05TimeFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartnershipX12gs05TimeFormatPtrOutput)
}

type ProfileLogging string

const (
	ProfileLoggingEnabled  = ProfileLogging("ENABLED")
	ProfileLoggingDisabled = ProfileLogging("DISABLED")
)

func (ProfileLogging) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLogging)(nil)).Elem()
}

func (e ProfileLogging) ToProfileLoggingOutput() ProfileLoggingOutput {
	return pulumi.ToOutput(e).(ProfileLoggingOutput)
}

func (e ProfileLogging) ToProfileLoggingOutputWithContext(ctx context.Context) ProfileLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProfileLoggingOutput)
}

func (e ProfileLogging) ToProfileLoggingPtrOutput() ProfileLoggingPtrOutput {
	return e.ToProfileLoggingPtrOutputWithContext(context.Background())
}

func (e ProfileLogging) ToProfileLoggingPtrOutputWithContext(ctx context.Context) ProfileLoggingPtrOutput {
	return ProfileLogging(e).ToProfileLoggingOutputWithContext(ctx).ToProfileLoggingPtrOutputWithContext(ctx)
}

func (e ProfileLogging) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileLogging) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileLogging) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProfileLogging) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProfileLoggingOutput struct{ *pulumi.OutputState }

func (ProfileLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileLogging)(nil)).Elem()
}

func (o ProfileLoggingOutput) ToProfileLoggingOutput() ProfileLoggingOutput {
	return o
}

func (o ProfileLoggingOutput) ToProfileLoggingOutputWithContext(ctx context.Context) ProfileLoggingOutput {
	return o
}

func (o ProfileLoggingOutput) ToProfileLoggingPtrOutput() ProfileLoggingPtrOutput {
	return o.ToProfileLoggingPtrOutputWithContext(context.Background())
}

func (o ProfileLoggingOutput) ToProfileLoggingPtrOutputWithContext(ctx context.Context) ProfileLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileLogging) *ProfileLogging {
		return &v
	}).(ProfileLoggingPtrOutput)
}

func (o ProfileLoggingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProfileLoggingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileLogging) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProfileLoggingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileLoggingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileLogging) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProfileLoggingPtrOutput struct{ *pulumi.OutputState }

func (ProfileLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileLogging)(nil)).Elem()
}

func (o ProfileLoggingPtrOutput) ToProfileLoggingPtrOutput() ProfileLoggingPtrOutput {
	return o
}

func (o ProfileLoggingPtrOutput) ToProfileLoggingPtrOutputWithContext(ctx context.Context) ProfileLoggingPtrOutput {
	return o
}

func (o ProfileLoggingPtrOutput) Elem() ProfileLoggingOutput {
	return o.ApplyT(func(v *ProfileLogging) ProfileLogging {
		if v != nil {
			return *v
		}
		var ret ProfileLogging
		return ret
	}).(ProfileLoggingOutput)
}

func (o ProfileLoggingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileLoggingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProfileLogging) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProfileLoggingInput is an input type that accepts values of the ProfileLogging enum
// A concrete instance of `ProfileLoggingInput` can be one of the following:
//
//	ProfileLoggingEnabled
//	ProfileLoggingDisabled
type ProfileLoggingInput interface {
	pulumi.Input

	ToProfileLoggingOutput() ProfileLoggingOutput
	ToProfileLoggingOutputWithContext(context.Context) ProfileLoggingOutput
}

var profileLoggingPtrType = reflect.TypeOf((**ProfileLogging)(nil)).Elem()

type ProfileLoggingPtrInput interface {
	pulumi.Input

	ToProfileLoggingPtrOutput() ProfileLoggingPtrOutput
	ToProfileLoggingPtrOutputWithContext(context.Context) ProfileLoggingPtrOutput
}

type profileLoggingPtr string

func ProfileLoggingPtr(v string) ProfileLoggingPtrInput {
	return (*profileLoggingPtr)(&v)
}

func (*profileLoggingPtr) ElementType() reflect.Type {
	return profileLoggingPtrType
}

func (in *profileLoggingPtr) ToProfileLoggingPtrOutput() ProfileLoggingPtrOutput {
	return pulumi.ToOutput(in).(ProfileLoggingPtrOutput)
}

func (in *profileLoggingPtr) ToProfileLoggingPtrOutputWithContext(ctx context.Context) ProfileLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProfileLoggingPtrOutput)
}

type TransformerElementRequirement string

const (
	TransformerElementRequirementOptional  = TransformerElementRequirement("OPTIONAL")
	TransformerElementRequirementMandatory = TransformerElementRequirement("MANDATORY")
)

func (TransformerElementRequirement) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerElementRequirement)(nil)).Elem()
}

func (e TransformerElementRequirement) ToTransformerElementRequirementOutput() TransformerElementRequirementOutput {
	return pulumi.ToOutput(e).(TransformerElementRequirementOutput)
}

func (e TransformerElementRequirement) ToTransformerElementRequirementOutputWithContext(ctx context.Context) TransformerElementRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerElementRequirementOutput)
}

func (e TransformerElementRequirement) ToTransformerElementRequirementPtrOutput() TransformerElementRequirementPtrOutput {
	return e.ToTransformerElementRequirementPtrOutputWithContext(context.Background())
}

func (e TransformerElementRequirement) ToTransformerElementRequirementPtrOutputWithContext(ctx context.Context) TransformerElementRequirementPtrOutput {
	return TransformerElementRequirement(e).ToTransformerElementRequirementOutputWithContext(ctx).ToTransformerElementRequirementPtrOutputWithContext(ctx)
}

func (e TransformerElementRequirement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerElementRequirement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerElementRequirement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerElementRequirement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerElementRequirementOutput struct{ *pulumi.OutputState }

func (TransformerElementRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerElementRequirement)(nil)).Elem()
}

func (o TransformerElementRequirementOutput) ToTransformerElementRequirementOutput() TransformerElementRequirementOutput {
	return o
}

func (o TransformerElementRequirementOutput) ToTransformerElementRequirementOutputWithContext(ctx context.Context) TransformerElementRequirementOutput {
	return o
}

func (o TransformerElementRequirementOutput) ToTransformerElementRequirementPtrOutput() TransformerElementRequirementPtrOutput {
	return o.ToTransformerElementRequirementPtrOutputWithContext(context.Background())
}

func (o TransformerElementRequirementOutput) ToTransformerElementRequirementPtrOutputWithContext(ctx context.Context) TransformerElementRequirementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerElementRequirement) *TransformerElementRequirement {
		return &v
	}).(TransformerElementRequirementPtrOutput)
}

func (o TransformerElementRequirementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerElementRequirementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerElementRequirement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerElementRequirementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerElementRequirementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerElementRequirement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerElementRequirementPtrOutput struct{ *pulumi.OutputState }

func (TransformerElementRequirementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerElementRequirement)(nil)).Elem()
}

func (o TransformerElementRequirementPtrOutput) ToTransformerElementRequirementPtrOutput() TransformerElementRequirementPtrOutput {
	return o
}

func (o TransformerElementRequirementPtrOutput) ToTransformerElementRequirementPtrOutputWithContext(ctx context.Context) TransformerElementRequirementPtrOutput {
	return o
}

func (o TransformerElementRequirementPtrOutput) Elem() TransformerElementRequirementOutput {
	return o.ApplyT(func(v *TransformerElementRequirement) TransformerElementRequirement {
		if v != nil {
			return *v
		}
		var ret TransformerElementRequirement
		return ret
	}).(TransformerElementRequirementOutput)
}

func (o TransformerElementRequirementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerElementRequirementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerElementRequirement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerElementRequirementInput is an input type that accepts values of the TransformerElementRequirement enum
// A concrete instance of `TransformerElementRequirementInput` can be one of the following:
//
//	TransformerElementRequirementOptional
//	TransformerElementRequirementMandatory
type TransformerElementRequirementInput interface {
	pulumi.Input

	ToTransformerElementRequirementOutput() TransformerElementRequirementOutput
	ToTransformerElementRequirementOutputWithContext(context.Context) TransformerElementRequirementOutput
}

var transformerElementRequirementPtrType = reflect.TypeOf((**TransformerElementRequirement)(nil)).Elem()

type TransformerElementRequirementPtrInput interface {
	pulumi.Input

	ToTransformerElementRequirementPtrOutput() TransformerElementRequirementPtrOutput
	ToTransformerElementRequirementPtrOutputWithContext(context.Context) TransformerElementRequirementPtrOutput
}

type transformerElementRequirementPtr string

func TransformerElementRequirementPtr(v string) TransformerElementRequirementPtrInput {
	return (*transformerElementRequirementPtr)(&v)
}

func (*transformerElementRequirementPtr) ElementType() reflect.Type {
	return transformerElementRequirementPtrType
}

func (in *transformerElementRequirementPtr) ToTransformerElementRequirementPtrOutput() TransformerElementRequirementPtrOutput {
	return pulumi.ToOutput(in).(TransformerElementRequirementPtrOutput)
}

func (in *transformerElementRequirementPtr) ToTransformerElementRequirementPtrOutputWithContext(ctx context.Context) TransformerElementRequirementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerElementRequirementPtrOutput)
}

type TransformerFileFormat string

const (
	TransformerFileFormatXml     = TransformerFileFormat("XML")
	TransformerFileFormatJson    = TransformerFileFormat("JSON")
	TransformerFileFormatNotUsed = TransformerFileFormat("NOT_USED")
)

func (TransformerFileFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerFileFormat)(nil)).Elem()
}

func (e TransformerFileFormat) ToTransformerFileFormatOutput() TransformerFileFormatOutput {
	return pulumi.ToOutput(e).(TransformerFileFormatOutput)
}

func (e TransformerFileFormat) ToTransformerFileFormatOutputWithContext(ctx context.Context) TransformerFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerFileFormatOutput)
}

func (e TransformerFileFormat) ToTransformerFileFormatPtrOutput() TransformerFileFormatPtrOutput {
	return e.ToTransformerFileFormatPtrOutputWithContext(context.Background())
}

func (e TransformerFileFormat) ToTransformerFileFormatPtrOutputWithContext(ctx context.Context) TransformerFileFormatPtrOutput {
	return TransformerFileFormat(e).ToTransformerFileFormatOutputWithContext(ctx).ToTransformerFileFormatPtrOutputWithContext(ctx)
}

func (e TransformerFileFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerFileFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerFileFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerFileFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerFileFormatOutput struct{ *pulumi.OutputState }

func (TransformerFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerFileFormat)(nil)).Elem()
}

func (o TransformerFileFormatOutput) ToTransformerFileFormatOutput() TransformerFileFormatOutput {
	return o
}

func (o TransformerFileFormatOutput) ToTransformerFileFormatOutputWithContext(ctx context.Context) TransformerFileFormatOutput {
	return o
}

func (o TransformerFileFormatOutput) ToTransformerFileFormatPtrOutput() TransformerFileFormatPtrOutput {
	return o.ToTransformerFileFormatPtrOutputWithContext(context.Background())
}

func (o TransformerFileFormatOutput) ToTransformerFileFormatPtrOutputWithContext(ctx context.Context) TransformerFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerFileFormat) *TransformerFileFormat {
		return &v
	}).(TransformerFileFormatPtrOutput)
}

func (o TransformerFileFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerFileFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerFileFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerFileFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerFileFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerFileFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerFileFormatPtrOutput struct{ *pulumi.OutputState }

func (TransformerFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerFileFormat)(nil)).Elem()
}

func (o TransformerFileFormatPtrOutput) ToTransformerFileFormatPtrOutput() TransformerFileFormatPtrOutput {
	return o
}

func (o TransformerFileFormatPtrOutput) ToTransformerFileFormatPtrOutputWithContext(ctx context.Context) TransformerFileFormatPtrOutput {
	return o
}

func (o TransformerFileFormatPtrOutput) Elem() TransformerFileFormatOutput {
	return o.ApplyT(func(v *TransformerFileFormat) TransformerFileFormat {
		if v != nil {
			return *v
		}
		var ret TransformerFileFormat
		return ret
	}).(TransformerFileFormatOutput)
}

func (o TransformerFileFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerFileFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerFileFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerFileFormatInput is an input type that accepts values of the TransformerFileFormat enum
// A concrete instance of `TransformerFileFormatInput` can be one of the following:
//
//	TransformerFileFormatXml
//	TransformerFileFormatJson
//	TransformerFileFormatNotUsed
type TransformerFileFormatInput interface {
	pulumi.Input

	ToTransformerFileFormatOutput() TransformerFileFormatOutput
	ToTransformerFileFormatOutputWithContext(context.Context) TransformerFileFormatOutput
}

var transformerFileFormatPtrType = reflect.TypeOf((**TransformerFileFormat)(nil)).Elem()

type TransformerFileFormatPtrInput interface {
	pulumi.Input

	ToTransformerFileFormatPtrOutput() TransformerFileFormatPtrOutput
	ToTransformerFileFormatPtrOutputWithContext(context.Context) TransformerFileFormatPtrOutput
}

type transformerFileFormatPtr string

func TransformerFileFormatPtr(v string) TransformerFileFormatPtrInput {
	return (*transformerFileFormatPtr)(&v)
}

func (*transformerFileFormatPtr) ElementType() reflect.Type {
	return transformerFileFormatPtrType
}

func (in *transformerFileFormatPtr) ToTransformerFileFormatPtrOutput() TransformerFileFormatPtrOutput {
	return pulumi.ToOutput(in).(TransformerFileFormatPtrOutput)
}

func (in *transformerFileFormatPtr) ToTransformerFileFormatPtrOutputWithContext(ctx context.Context) TransformerFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerFileFormatPtrOutput)
}

type TransformerFromFormat string

const (
	TransformerFromFormatX12 = TransformerFromFormat("X12")
)

func (TransformerFromFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerFromFormat)(nil)).Elem()
}

func (e TransformerFromFormat) ToTransformerFromFormatOutput() TransformerFromFormatOutput {
	return pulumi.ToOutput(e).(TransformerFromFormatOutput)
}

func (e TransformerFromFormat) ToTransformerFromFormatOutputWithContext(ctx context.Context) TransformerFromFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerFromFormatOutput)
}

func (e TransformerFromFormat) ToTransformerFromFormatPtrOutput() TransformerFromFormatPtrOutput {
	return e.ToTransformerFromFormatPtrOutputWithContext(context.Background())
}

func (e TransformerFromFormat) ToTransformerFromFormatPtrOutputWithContext(ctx context.Context) TransformerFromFormatPtrOutput {
	return TransformerFromFormat(e).ToTransformerFromFormatOutputWithContext(ctx).ToTransformerFromFormatPtrOutputWithContext(ctx)
}

func (e TransformerFromFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerFromFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerFromFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerFromFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerFromFormatOutput struct{ *pulumi.OutputState }

func (TransformerFromFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerFromFormat)(nil)).Elem()
}

func (o TransformerFromFormatOutput) ToTransformerFromFormatOutput() TransformerFromFormatOutput {
	return o
}

func (o TransformerFromFormatOutput) ToTransformerFromFormatOutputWithContext(ctx context.Context) TransformerFromFormatOutput {
	return o
}

func (o TransformerFromFormatOutput) ToTransformerFromFormatPtrOutput() TransformerFromFormatPtrOutput {
	return o.ToTransformerFromFormatPtrOutputWithContext(context.Background())
}

func (o TransformerFromFormatOutput) ToTransformerFromFormatPtrOutputWithContext(ctx context.Context) TransformerFromFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerFromFormat) *TransformerFromFormat {
		return &v
	}).(TransformerFromFormatPtrOutput)
}

func (o TransformerFromFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerFromFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerFromFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerFromFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerFromFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerFromFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerFromFormatPtrOutput struct{ *pulumi.OutputState }

func (TransformerFromFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerFromFormat)(nil)).Elem()
}

func (o TransformerFromFormatPtrOutput) ToTransformerFromFormatPtrOutput() TransformerFromFormatPtrOutput {
	return o
}

func (o TransformerFromFormatPtrOutput) ToTransformerFromFormatPtrOutputWithContext(ctx context.Context) TransformerFromFormatPtrOutput {
	return o
}

func (o TransformerFromFormatPtrOutput) Elem() TransformerFromFormatOutput {
	return o.ApplyT(func(v *TransformerFromFormat) TransformerFromFormat {
		if v != nil {
			return *v
		}
		var ret TransformerFromFormat
		return ret
	}).(TransformerFromFormatOutput)
}

func (o TransformerFromFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerFromFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerFromFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerFromFormatInput is an input type that accepts values of the TransformerFromFormat enum
// A concrete instance of `TransformerFromFormatInput` can be one of the following:
//
//	TransformerFromFormatX12
type TransformerFromFormatInput interface {
	pulumi.Input

	ToTransformerFromFormatOutput() TransformerFromFormatOutput
	ToTransformerFromFormatOutputWithContext(context.Context) TransformerFromFormatOutput
}

var transformerFromFormatPtrType = reflect.TypeOf((**TransformerFromFormat)(nil)).Elem()

type TransformerFromFormatPtrInput interface {
	pulumi.Input

	ToTransformerFromFormatPtrOutput() TransformerFromFormatPtrOutput
	ToTransformerFromFormatPtrOutputWithContext(context.Context) TransformerFromFormatPtrOutput
}

type transformerFromFormatPtr string

func TransformerFromFormatPtr(v string) TransformerFromFormatPtrInput {
	return (*transformerFromFormatPtr)(&v)
}

func (*transformerFromFormatPtr) ElementType() reflect.Type {
	return transformerFromFormatPtrType
}

func (in *transformerFromFormatPtr) ToTransformerFromFormatPtrOutput() TransformerFromFormatPtrOutput {
	return pulumi.ToOutput(in).(TransformerFromFormatPtrOutput)
}

func (in *transformerFromFormatPtr) ToTransformerFromFormatPtrOutputWithContext(ctx context.Context) TransformerFromFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerFromFormatPtrOutput)
}

type TransformerMappingTemplateLanguage string

const (
	TransformerMappingTemplateLanguageXslt    = TransformerMappingTemplateLanguage("XSLT")
	TransformerMappingTemplateLanguageJsonata = TransformerMappingTemplateLanguage("JSONATA")
)

func (TransformerMappingTemplateLanguage) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerMappingTemplateLanguage)(nil)).Elem()
}

func (e TransformerMappingTemplateLanguage) ToTransformerMappingTemplateLanguageOutput() TransformerMappingTemplateLanguageOutput {
	return pulumi.ToOutput(e).(TransformerMappingTemplateLanguageOutput)
}

func (e TransformerMappingTemplateLanguage) ToTransformerMappingTemplateLanguageOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerMappingTemplateLanguageOutput)
}

func (e TransformerMappingTemplateLanguage) ToTransformerMappingTemplateLanguagePtrOutput() TransformerMappingTemplateLanguagePtrOutput {
	return e.ToTransformerMappingTemplateLanguagePtrOutputWithContext(context.Background())
}

func (e TransformerMappingTemplateLanguage) ToTransformerMappingTemplateLanguagePtrOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguagePtrOutput {
	return TransformerMappingTemplateLanguage(e).ToTransformerMappingTemplateLanguageOutputWithContext(ctx).ToTransformerMappingTemplateLanguagePtrOutputWithContext(ctx)
}

func (e TransformerMappingTemplateLanguage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerMappingTemplateLanguage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerMappingTemplateLanguage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerMappingTemplateLanguage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerMappingTemplateLanguageOutput struct{ *pulumi.OutputState }

func (TransformerMappingTemplateLanguageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerMappingTemplateLanguage)(nil)).Elem()
}

func (o TransformerMappingTemplateLanguageOutput) ToTransformerMappingTemplateLanguageOutput() TransformerMappingTemplateLanguageOutput {
	return o
}

func (o TransformerMappingTemplateLanguageOutput) ToTransformerMappingTemplateLanguageOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguageOutput {
	return o
}

func (o TransformerMappingTemplateLanguageOutput) ToTransformerMappingTemplateLanguagePtrOutput() TransformerMappingTemplateLanguagePtrOutput {
	return o.ToTransformerMappingTemplateLanguagePtrOutputWithContext(context.Background())
}

func (o TransformerMappingTemplateLanguageOutput) ToTransformerMappingTemplateLanguagePtrOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerMappingTemplateLanguage) *TransformerMappingTemplateLanguage {
		return &v
	}).(TransformerMappingTemplateLanguagePtrOutput)
}

func (o TransformerMappingTemplateLanguageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerMappingTemplateLanguageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerMappingTemplateLanguage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerMappingTemplateLanguageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerMappingTemplateLanguageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerMappingTemplateLanguage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerMappingTemplateLanguagePtrOutput struct{ *pulumi.OutputState }

func (TransformerMappingTemplateLanguagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerMappingTemplateLanguage)(nil)).Elem()
}

func (o TransformerMappingTemplateLanguagePtrOutput) ToTransformerMappingTemplateLanguagePtrOutput() TransformerMappingTemplateLanguagePtrOutput {
	return o
}

func (o TransformerMappingTemplateLanguagePtrOutput) ToTransformerMappingTemplateLanguagePtrOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguagePtrOutput {
	return o
}

func (o TransformerMappingTemplateLanguagePtrOutput) Elem() TransformerMappingTemplateLanguageOutput {
	return o.ApplyT(func(v *TransformerMappingTemplateLanguage) TransformerMappingTemplateLanguage {
		if v != nil {
			return *v
		}
		var ret TransformerMappingTemplateLanguage
		return ret
	}).(TransformerMappingTemplateLanguageOutput)
}

func (o TransformerMappingTemplateLanguagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerMappingTemplateLanguagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerMappingTemplateLanguage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerMappingTemplateLanguageInput is an input type that accepts values of the TransformerMappingTemplateLanguage enum
// A concrete instance of `TransformerMappingTemplateLanguageInput` can be one of the following:
//
//	TransformerMappingTemplateLanguageXslt
//	TransformerMappingTemplateLanguageJsonata
type TransformerMappingTemplateLanguageInput interface {
	pulumi.Input

	ToTransformerMappingTemplateLanguageOutput() TransformerMappingTemplateLanguageOutput
	ToTransformerMappingTemplateLanguageOutputWithContext(context.Context) TransformerMappingTemplateLanguageOutput
}

var transformerMappingTemplateLanguagePtrType = reflect.TypeOf((**TransformerMappingTemplateLanguage)(nil)).Elem()

type TransformerMappingTemplateLanguagePtrInput interface {
	pulumi.Input

	ToTransformerMappingTemplateLanguagePtrOutput() TransformerMappingTemplateLanguagePtrOutput
	ToTransformerMappingTemplateLanguagePtrOutputWithContext(context.Context) TransformerMappingTemplateLanguagePtrOutput
}

type transformerMappingTemplateLanguagePtr string

func TransformerMappingTemplateLanguagePtr(v string) TransformerMappingTemplateLanguagePtrInput {
	return (*transformerMappingTemplateLanguagePtr)(&v)
}

func (*transformerMappingTemplateLanguagePtr) ElementType() reflect.Type {
	return transformerMappingTemplateLanguagePtrType
}

func (in *transformerMappingTemplateLanguagePtr) ToTransformerMappingTemplateLanguagePtrOutput() TransformerMappingTemplateLanguagePtrOutput {
	return pulumi.ToOutput(in).(TransformerMappingTemplateLanguagePtrOutput)
}

func (in *transformerMappingTemplateLanguagePtr) ToTransformerMappingTemplateLanguagePtrOutputWithContext(ctx context.Context) TransformerMappingTemplateLanguagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerMappingTemplateLanguagePtrOutput)
}

type TransformerStatus string

const (
	TransformerStatusActive   = TransformerStatus("active")
	TransformerStatusInactive = TransformerStatus("inactive")
)

func (TransformerStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerStatus)(nil)).Elem()
}

func (e TransformerStatus) ToTransformerStatusOutput() TransformerStatusOutput {
	return pulumi.ToOutput(e).(TransformerStatusOutput)
}

func (e TransformerStatus) ToTransformerStatusOutputWithContext(ctx context.Context) TransformerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerStatusOutput)
}

func (e TransformerStatus) ToTransformerStatusPtrOutput() TransformerStatusPtrOutput {
	return e.ToTransformerStatusPtrOutputWithContext(context.Background())
}

func (e TransformerStatus) ToTransformerStatusPtrOutputWithContext(ctx context.Context) TransformerStatusPtrOutput {
	return TransformerStatus(e).ToTransformerStatusOutputWithContext(ctx).ToTransformerStatusPtrOutputWithContext(ctx)
}

func (e TransformerStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerStatusOutput struct{ *pulumi.OutputState }

func (TransformerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerStatus)(nil)).Elem()
}

func (o TransformerStatusOutput) ToTransformerStatusOutput() TransformerStatusOutput {
	return o
}

func (o TransformerStatusOutput) ToTransformerStatusOutputWithContext(ctx context.Context) TransformerStatusOutput {
	return o
}

func (o TransformerStatusOutput) ToTransformerStatusPtrOutput() TransformerStatusPtrOutput {
	return o.ToTransformerStatusPtrOutputWithContext(context.Background())
}

func (o TransformerStatusOutput) ToTransformerStatusPtrOutputWithContext(ctx context.Context) TransformerStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerStatus) *TransformerStatus {
		return &v
	}).(TransformerStatusPtrOutput)
}

func (o TransformerStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerStatusPtrOutput struct{ *pulumi.OutputState }

func (TransformerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerStatus)(nil)).Elem()
}

func (o TransformerStatusPtrOutput) ToTransformerStatusPtrOutput() TransformerStatusPtrOutput {
	return o
}

func (o TransformerStatusPtrOutput) ToTransformerStatusPtrOutputWithContext(ctx context.Context) TransformerStatusPtrOutput {
	return o
}

func (o TransformerStatusPtrOutput) Elem() TransformerStatusOutput {
	return o.ApplyT(func(v *TransformerStatus) TransformerStatus {
		if v != nil {
			return *v
		}
		var ret TransformerStatus
		return ret
	}).(TransformerStatusOutput)
}

func (o TransformerStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerStatusInput is an input type that accepts values of the TransformerStatus enum
// A concrete instance of `TransformerStatusInput` can be one of the following:
//
//	TransformerStatusActive
//	TransformerStatusInactive
type TransformerStatusInput interface {
	pulumi.Input

	ToTransformerStatusOutput() TransformerStatusOutput
	ToTransformerStatusOutputWithContext(context.Context) TransformerStatusOutput
}

var transformerStatusPtrType = reflect.TypeOf((**TransformerStatus)(nil)).Elem()

type TransformerStatusPtrInput interface {
	pulumi.Input

	ToTransformerStatusPtrOutput() TransformerStatusPtrOutput
	ToTransformerStatusPtrOutputWithContext(context.Context) TransformerStatusPtrOutput
}

type transformerStatusPtr string

func TransformerStatusPtr(v string) TransformerStatusPtrInput {
	return (*transformerStatusPtr)(&v)
}

func (*transformerStatusPtr) ElementType() reflect.Type {
	return transformerStatusPtrType
}

func (in *transformerStatusPtr) ToTransformerStatusPtrOutput() TransformerStatusPtrOutput {
	return pulumi.ToOutput(in).(TransformerStatusPtrOutput)
}

func (in *transformerStatusPtr) ToTransformerStatusPtrOutputWithContext(ctx context.Context) TransformerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerStatusPtrOutput)
}

type TransformerToFormat string

const (
	TransformerToFormatX12 = TransformerToFormat("X12")
)

func (TransformerToFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerToFormat)(nil)).Elem()
}

func (e TransformerToFormat) ToTransformerToFormatOutput() TransformerToFormatOutput {
	return pulumi.ToOutput(e).(TransformerToFormatOutput)
}

func (e TransformerToFormat) ToTransformerToFormatOutputWithContext(ctx context.Context) TransformerToFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerToFormatOutput)
}

func (e TransformerToFormat) ToTransformerToFormatPtrOutput() TransformerToFormatPtrOutput {
	return e.ToTransformerToFormatPtrOutputWithContext(context.Background())
}

func (e TransformerToFormat) ToTransformerToFormatPtrOutputWithContext(ctx context.Context) TransformerToFormatPtrOutput {
	return TransformerToFormat(e).ToTransformerToFormatOutputWithContext(ctx).ToTransformerToFormatPtrOutputWithContext(ctx)
}

func (e TransformerToFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerToFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerToFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerToFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerToFormatOutput struct{ *pulumi.OutputState }

func (TransformerToFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerToFormat)(nil)).Elem()
}

func (o TransformerToFormatOutput) ToTransformerToFormatOutput() TransformerToFormatOutput {
	return o
}

func (o TransformerToFormatOutput) ToTransformerToFormatOutputWithContext(ctx context.Context) TransformerToFormatOutput {
	return o
}

func (o TransformerToFormatOutput) ToTransformerToFormatPtrOutput() TransformerToFormatPtrOutput {
	return o.ToTransformerToFormatPtrOutputWithContext(context.Background())
}

func (o TransformerToFormatOutput) ToTransformerToFormatPtrOutputWithContext(ctx context.Context) TransformerToFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerToFormat) *TransformerToFormat {
		return &v
	}).(TransformerToFormatPtrOutput)
}

func (o TransformerToFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerToFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerToFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerToFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerToFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerToFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerToFormatPtrOutput struct{ *pulumi.OutputState }

func (TransformerToFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerToFormat)(nil)).Elem()
}

func (o TransformerToFormatPtrOutput) ToTransformerToFormatPtrOutput() TransformerToFormatPtrOutput {
	return o
}

func (o TransformerToFormatPtrOutput) ToTransformerToFormatPtrOutputWithContext(ctx context.Context) TransformerToFormatPtrOutput {
	return o
}

func (o TransformerToFormatPtrOutput) Elem() TransformerToFormatOutput {
	return o.ApplyT(func(v *TransformerToFormat) TransformerToFormat {
		if v != nil {
			return *v
		}
		var ret TransformerToFormat
		return ret
	}).(TransformerToFormatOutput)
}

func (o TransformerToFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerToFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerToFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerToFormatInput is an input type that accepts values of the TransformerToFormat enum
// A concrete instance of `TransformerToFormatInput` can be one of the following:
//
//	TransformerToFormatX12
type TransformerToFormatInput interface {
	pulumi.Input

	ToTransformerToFormatOutput() TransformerToFormatOutput
	ToTransformerToFormatOutputWithContext(context.Context) TransformerToFormatOutput
}

var transformerToFormatPtrType = reflect.TypeOf((**TransformerToFormat)(nil)).Elem()

type TransformerToFormatPtrInput interface {
	pulumi.Input

	ToTransformerToFormatPtrOutput() TransformerToFormatPtrOutput
	ToTransformerToFormatPtrOutputWithContext(context.Context) TransformerToFormatPtrOutput
}

type transformerToFormatPtr string

func TransformerToFormatPtr(v string) TransformerToFormatPtrInput {
	return (*transformerToFormatPtr)(&v)
}

func (*transformerToFormatPtr) ElementType() reflect.Type {
	return transformerToFormatPtrType
}

func (in *transformerToFormatPtr) ToTransformerToFormatPtrOutput() TransformerToFormatPtrOutput {
	return pulumi.ToOutput(in).(TransformerToFormatPtrOutput)
}

func (in *transformerToFormatPtr) ToTransformerToFormatPtrOutputWithContext(ctx context.Context) TransformerToFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerToFormatPtrOutput)
}

type TransformerX12SplitBy string

const (
	TransformerX12SplitByNone        = TransformerX12SplitBy("NONE")
	TransformerX12SplitByTransaction = TransformerX12SplitBy("TRANSACTION")
)

func (TransformerX12SplitBy) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12SplitBy)(nil)).Elem()
}

func (e TransformerX12SplitBy) ToTransformerX12SplitByOutput() TransformerX12SplitByOutput {
	return pulumi.ToOutput(e).(TransformerX12SplitByOutput)
}

func (e TransformerX12SplitBy) ToTransformerX12SplitByOutputWithContext(ctx context.Context) TransformerX12SplitByOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerX12SplitByOutput)
}

func (e TransformerX12SplitBy) ToTransformerX12SplitByPtrOutput() TransformerX12SplitByPtrOutput {
	return e.ToTransformerX12SplitByPtrOutputWithContext(context.Background())
}

func (e TransformerX12SplitBy) ToTransformerX12SplitByPtrOutputWithContext(ctx context.Context) TransformerX12SplitByPtrOutput {
	return TransformerX12SplitBy(e).ToTransformerX12SplitByOutputWithContext(ctx).ToTransformerX12SplitByPtrOutputWithContext(ctx)
}

func (e TransformerX12SplitBy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12SplitBy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12SplitBy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerX12SplitBy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerX12SplitByOutput struct{ *pulumi.OutputState }

func (TransformerX12SplitByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12SplitBy)(nil)).Elem()
}

func (o TransformerX12SplitByOutput) ToTransformerX12SplitByOutput() TransformerX12SplitByOutput {
	return o
}

func (o TransformerX12SplitByOutput) ToTransformerX12SplitByOutputWithContext(ctx context.Context) TransformerX12SplitByOutput {
	return o
}

func (o TransformerX12SplitByOutput) ToTransformerX12SplitByPtrOutput() TransformerX12SplitByPtrOutput {
	return o.ToTransformerX12SplitByPtrOutputWithContext(context.Background())
}

func (o TransformerX12SplitByOutput) ToTransformerX12SplitByPtrOutputWithContext(ctx context.Context) TransformerX12SplitByPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerX12SplitBy) *TransformerX12SplitBy {
		return &v
	}).(TransformerX12SplitByPtrOutput)
}

func (o TransformerX12SplitByOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerX12SplitByOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12SplitBy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerX12SplitByOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12SplitByOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12SplitBy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerX12SplitByPtrOutput struct{ *pulumi.OutputState }

func (TransformerX12SplitByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerX12SplitBy)(nil)).Elem()
}

func (o TransformerX12SplitByPtrOutput) ToTransformerX12SplitByPtrOutput() TransformerX12SplitByPtrOutput {
	return o
}

func (o TransformerX12SplitByPtrOutput) ToTransformerX12SplitByPtrOutputWithContext(ctx context.Context) TransformerX12SplitByPtrOutput {
	return o
}

func (o TransformerX12SplitByPtrOutput) Elem() TransformerX12SplitByOutput {
	return o.ApplyT(func(v *TransformerX12SplitBy) TransformerX12SplitBy {
		if v != nil {
			return *v
		}
		var ret TransformerX12SplitBy
		return ret
	}).(TransformerX12SplitByOutput)
}

func (o TransformerX12SplitByPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12SplitByPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerX12SplitBy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerX12SplitByInput is an input type that accepts values of the TransformerX12SplitBy enum
// A concrete instance of `TransformerX12SplitByInput` can be one of the following:
//
//	TransformerX12SplitByNone
//	TransformerX12SplitByTransaction
type TransformerX12SplitByInput interface {
	pulumi.Input

	ToTransformerX12SplitByOutput() TransformerX12SplitByOutput
	ToTransformerX12SplitByOutputWithContext(context.Context) TransformerX12SplitByOutput
}

var transformerX12SplitByPtrType = reflect.TypeOf((**TransformerX12SplitBy)(nil)).Elem()

type TransformerX12SplitByPtrInput interface {
	pulumi.Input

	ToTransformerX12SplitByPtrOutput() TransformerX12SplitByPtrOutput
	ToTransformerX12SplitByPtrOutputWithContext(context.Context) TransformerX12SplitByPtrOutput
}

type transformerX12SplitByPtr string

func TransformerX12SplitByPtr(v string) TransformerX12SplitByPtrInput {
	return (*transformerX12SplitByPtr)(&v)
}

func (*transformerX12SplitByPtr) ElementType() reflect.Type {
	return transformerX12SplitByPtrType
}

func (in *transformerX12SplitByPtr) ToTransformerX12SplitByPtrOutput() TransformerX12SplitByPtrOutput {
	return pulumi.ToOutput(in).(TransformerX12SplitByPtrOutput)
}

func (in *transformerX12SplitByPtr) ToTransformerX12SplitByPtrOutputWithContext(ctx context.Context) TransformerX12SplitByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerX12SplitByPtrOutput)
}

type TransformerX12TransactionSet string

const (
	TransformerX12TransactionSetX12100     = TransformerX12TransactionSet("X12_100")
	TransformerX12TransactionSetX12101     = TransformerX12TransactionSet("X12_101")
	TransformerX12TransactionSetX12102     = TransformerX12TransactionSet("X12_102")
	TransformerX12TransactionSetX12103     = TransformerX12TransactionSet("X12_103")
	TransformerX12TransactionSetX12104     = TransformerX12TransactionSet("X12_104")
	TransformerX12TransactionSetX12105     = TransformerX12TransactionSet("X12_105")
	TransformerX12TransactionSetX12106     = TransformerX12TransactionSet("X12_106")
	TransformerX12TransactionSetX12107     = TransformerX12TransactionSet("X12_107")
	TransformerX12TransactionSetX12108     = TransformerX12TransactionSet("X12_108")
	TransformerX12TransactionSetX12109     = TransformerX12TransactionSet("X12_109")
	TransformerX12TransactionSetX12110     = TransformerX12TransactionSet("X12_110")
	TransformerX12TransactionSetX12111     = TransformerX12TransactionSet("X12_111")
	TransformerX12TransactionSetX12112     = TransformerX12TransactionSet("X12_112")
	TransformerX12TransactionSetX12113     = TransformerX12TransactionSet("X12_113")
	TransformerX12TransactionSetX12120     = TransformerX12TransactionSet("X12_120")
	TransformerX12TransactionSetX12121     = TransformerX12TransactionSet("X12_121")
	TransformerX12TransactionSetX12124     = TransformerX12TransactionSet("X12_124")
	TransformerX12TransactionSetX12125     = TransformerX12TransactionSet("X12_125")
	TransformerX12TransactionSetX12126     = TransformerX12TransactionSet("X12_126")
	TransformerX12TransactionSetX12127     = TransformerX12TransactionSet("X12_127")
	TransformerX12TransactionSetX12128     = TransformerX12TransactionSet("X12_128")
	TransformerX12TransactionSetX12129     = TransformerX12TransactionSet("X12_129")
	TransformerX12TransactionSetX12130     = TransformerX12TransactionSet("X12_130")
	TransformerX12TransactionSetX12131     = TransformerX12TransactionSet("X12_131")
	TransformerX12TransactionSetX12132     = TransformerX12TransactionSet("X12_132")
	TransformerX12TransactionSetX12133     = TransformerX12TransactionSet("X12_133")
	TransformerX12TransactionSetX12135     = TransformerX12TransactionSet("X12_135")
	TransformerX12TransactionSetX12138     = TransformerX12TransactionSet("X12_138")
	TransformerX12TransactionSetX12139     = TransformerX12TransactionSet("X12_139")
	TransformerX12TransactionSetX12140     = TransformerX12TransactionSet("X12_140")
	TransformerX12TransactionSetX12141     = TransformerX12TransactionSet("X12_141")
	TransformerX12TransactionSetX12142     = TransformerX12TransactionSet("X12_142")
	TransformerX12TransactionSetX12143     = TransformerX12TransactionSet("X12_143")
	TransformerX12TransactionSetX12144     = TransformerX12TransactionSet("X12_144")
	TransformerX12TransactionSetX12146     = TransformerX12TransactionSet("X12_146")
	TransformerX12TransactionSetX12147     = TransformerX12TransactionSet("X12_147")
	TransformerX12TransactionSetX12148     = TransformerX12TransactionSet("X12_148")
	TransformerX12TransactionSetX12149     = TransformerX12TransactionSet("X12_149")
	TransformerX12TransactionSetX12150     = TransformerX12TransactionSet("X12_150")
	TransformerX12TransactionSetX12151     = TransformerX12TransactionSet("X12_151")
	TransformerX12TransactionSetX12152     = TransformerX12TransactionSet("X12_152")
	TransformerX12TransactionSetX12153     = TransformerX12TransactionSet("X12_153")
	TransformerX12TransactionSetX12154     = TransformerX12TransactionSet("X12_154")
	TransformerX12TransactionSetX12155     = TransformerX12TransactionSet("X12_155")
	TransformerX12TransactionSetX12157     = TransformerX12TransactionSet("X12_157")
	TransformerX12TransactionSetX12158     = TransformerX12TransactionSet("X12_158")
	TransformerX12TransactionSetX12159     = TransformerX12TransactionSet("X12_159")
	TransformerX12TransactionSetX12160     = TransformerX12TransactionSet("X12_160")
	TransformerX12TransactionSetX12161     = TransformerX12TransactionSet("X12_161")
	TransformerX12TransactionSetX12163     = TransformerX12TransactionSet("X12_163")
	TransformerX12TransactionSetX12170     = TransformerX12TransactionSet("X12_170")
	TransformerX12TransactionSetX12175     = TransformerX12TransactionSet("X12_175")
	TransformerX12TransactionSetX12176     = TransformerX12TransactionSet("X12_176")
	TransformerX12TransactionSetX12179     = TransformerX12TransactionSet("X12_179")
	TransformerX12TransactionSetX12180     = TransformerX12TransactionSet("X12_180")
	TransformerX12TransactionSetX12185     = TransformerX12TransactionSet("X12_185")
	TransformerX12TransactionSetX12186     = TransformerX12TransactionSet("X12_186")
	TransformerX12TransactionSetX12187     = TransformerX12TransactionSet("X12_187")
	TransformerX12TransactionSetX12188     = TransformerX12TransactionSet("X12_188")
	TransformerX12TransactionSetX12189     = TransformerX12TransactionSet("X12_189")
	TransformerX12TransactionSetX12190     = TransformerX12TransactionSet("X12_190")
	TransformerX12TransactionSetX12191     = TransformerX12TransactionSet("X12_191")
	TransformerX12TransactionSetX12194     = TransformerX12TransactionSet("X12_194")
	TransformerX12TransactionSetX12195     = TransformerX12TransactionSet("X12_195")
	TransformerX12TransactionSetX12196     = TransformerX12TransactionSet("X12_196")
	TransformerX12TransactionSetX12197     = TransformerX12TransactionSet("X12_197")
	TransformerX12TransactionSetX12198     = TransformerX12TransactionSet("X12_198")
	TransformerX12TransactionSetX12199     = TransformerX12TransactionSet("X12_199")
	TransformerX12TransactionSetX12200     = TransformerX12TransactionSet("X12_200")
	TransformerX12TransactionSetX12201     = TransformerX12TransactionSet("X12_201")
	TransformerX12TransactionSetX12202     = TransformerX12TransactionSet("X12_202")
	TransformerX12TransactionSetX12203     = TransformerX12TransactionSet("X12_203")
	TransformerX12TransactionSetX12204     = TransformerX12TransactionSet("X12_204")
	TransformerX12TransactionSetX12205     = TransformerX12TransactionSet("X12_205")
	TransformerX12TransactionSetX12206     = TransformerX12TransactionSet("X12_206")
	TransformerX12TransactionSetX12210     = TransformerX12TransactionSet("X12_210")
	TransformerX12TransactionSetX12211     = TransformerX12TransactionSet("X12_211")
	TransformerX12TransactionSetX12212     = TransformerX12TransactionSet("X12_212")
	TransformerX12TransactionSetX12213     = TransformerX12TransactionSet("X12_213")
	TransformerX12TransactionSetX12214     = TransformerX12TransactionSet("X12_214")
	TransformerX12TransactionSetX12215     = TransformerX12TransactionSet("X12_215")
	TransformerX12TransactionSetX12216     = TransformerX12TransactionSet("X12_216")
	TransformerX12TransactionSetX12217     = TransformerX12TransactionSet("X12_217")
	TransformerX12TransactionSetX12218     = TransformerX12TransactionSet("X12_218")
	TransformerX12TransactionSetX12219     = TransformerX12TransactionSet("X12_219")
	TransformerX12TransactionSetX12220     = TransformerX12TransactionSet("X12_220")
	TransformerX12TransactionSetX12222     = TransformerX12TransactionSet("X12_222")
	TransformerX12TransactionSetX12223     = TransformerX12TransactionSet("X12_223")
	TransformerX12TransactionSetX12224     = TransformerX12TransactionSet("X12_224")
	TransformerX12TransactionSetX12225     = TransformerX12TransactionSet("X12_225")
	TransformerX12TransactionSetX12227     = TransformerX12TransactionSet("X12_227")
	TransformerX12TransactionSetX12228     = TransformerX12TransactionSet("X12_228")
	TransformerX12TransactionSetX12240     = TransformerX12TransactionSet("X12_240")
	TransformerX12TransactionSetX12242     = TransformerX12TransactionSet("X12_242")
	TransformerX12TransactionSetX12244     = TransformerX12TransactionSet("X12_244")
	TransformerX12TransactionSetX12245     = TransformerX12TransactionSet("X12_245")
	TransformerX12TransactionSetX12248     = TransformerX12TransactionSet("X12_248")
	TransformerX12TransactionSetX12249     = TransformerX12TransactionSet("X12_249")
	TransformerX12TransactionSetX12250     = TransformerX12TransactionSet("X12_250")
	TransformerX12TransactionSetX12251     = TransformerX12TransactionSet("X12_251")
	TransformerX12TransactionSetX12252     = TransformerX12TransactionSet("X12_252")
	TransformerX12TransactionSetX12255     = TransformerX12TransactionSet("X12_255")
	TransformerX12TransactionSetX12256     = TransformerX12TransactionSet("X12_256")
	TransformerX12TransactionSetX12259     = TransformerX12TransactionSet("X12_259")
	TransformerX12TransactionSetX12260     = TransformerX12TransactionSet("X12_260")
	TransformerX12TransactionSetX12261     = TransformerX12TransactionSet("X12_261")
	TransformerX12TransactionSetX12262     = TransformerX12TransactionSet("X12_262")
	TransformerX12TransactionSetX12263     = TransformerX12TransactionSet("X12_263")
	TransformerX12TransactionSetX12264     = TransformerX12TransactionSet("X12_264")
	TransformerX12TransactionSetX12265     = TransformerX12TransactionSet("X12_265")
	TransformerX12TransactionSetX12266     = TransformerX12TransactionSet("X12_266")
	TransformerX12TransactionSetX12267     = TransformerX12TransactionSet("X12_267")
	TransformerX12TransactionSetX12268     = TransformerX12TransactionSet("X12_268")
	TransformerX12TransactionSetX12269     = TransformerX12TransactionSet("X12_269")
	TransformerX12TransactionSetX12270     = TransformerX12TransactionSet("X12_270")
	TransformerX12TransactionSetX12271     = TransformerX12TransactionSet("X12_271")
	TransformerX12TransactionSetX12272     = TransformerX12TransactionSet("X12_272")
	TransformerX12TransactionSetX12273     = TransformerX12TransactionSet("X12_273")
	TransformerX12TransactionSetX12274     = TransformerX12TransactionSet("X12_274")
	TransformerX12TransactionSetX12275     = TransformerX12TransactionSet("X12_275")
	TransformerX12TransactionSetX12276     = TransformerX12TransactionSet("X12_276")
	TransformerX12TransactionSetX12277     = TransformerX12TransactionSet("X12_277")
	TransformerX12TransactionSetX12278     = TransformerX12TransactionSet("X12_278")
	TransformerX12TransactionSetX12280     = TransformerX12TransactionSet("X12_280")
	TransformerX12TransactionSetX12283     = TransformerX12TransactionSet("X12_283")
	TransformerX12TransactionSetX12284     = TransformerX12TransactionSet("X12_284")
	TransformerX12TransactionSetX12285     = TransformerX12TransactionSet("X12_285")
	TransformerX12TransactionSetX12286     = TransformerX12TransactionSet("X12_286")
	TransformerX12TransactionSetX12288     = TransformerX12TransactionSet("X12_288")
	TransformerX12TransactionSetX12290     = TransformerX12TransactionSet("X12_290")
	TransformerX12TransactionSetX12300     = TransformerX12TransactionSet("X12_300")
	TransformerX12TransactionSetX12301     = TransformerX12TransactionSet("X12_301")
	TransformerX12TransactionSetX12303     = TransformerX12TransactionSet("X12_303")
	TransformerX12TransactionSetX12304     = TransformerX12TransactionSet("X12_304")
	TransformerX12TransactionSetX12309     = TransformerX12TransactionSet("X12_309")
	TransformerX12TransactionSetX12310     = TransformerX12TransactionSet("X12_310")
	TransformerX12TransactionSetX12311     = TransformerX12TransactionSet("X12_311")
	TransformerX12TransactionSetX12312     = TransformerX12TransactionSet("X12_312")
	TransformerX12TransactionSetX12313     = TransformerX12TransactionSet("X12_313")
	TransformerX12TransactionSetX12315     = TransformerX12TransactionSet("X12_315")
	TransformerX12TransactionSetX12317     = TransformerX12TransactionSet("X12_317")
	TransformerX12TransactionSetX12319     = TransformerX12TransactionSet("X12_319")
	TransformerX12TransactionSetX12322     = TransformerX12TransactionSet("X12_322")
	TransformerX12TransactionSetX12323     = TransformerX12TransactionSet("X12_323")
	TransformerX12TransactionSetX12324     = TransformerX12TransactionSet("X12_324")
	TransformerX12TransactionSetX12325     = TransformerX12TransactionSet("X12_325")
	TransformerX12TransactionSetX12326     = TransformerX12TransactionSet("X12_326")
	TransformerX12TransactionSetX12350     = TransformerX12TransactionSet("X12_350")
	TransformerX12TransactionSetX12352     = TransformerX12TransactionSet("X12_352")
	TransformerX12TransactionSetX12353     = TransformerX12TransactionSet("X12_353")
	TransformerX12TransactionSetX12354     = TransformerX12TransactionSet("X12_354")
	TransformerX12TransactionSetX12355     = TransformerX12TransactionSet("X12_355")
	TransformerX12TransactionSetX12356     = TransformerX12TransactionSet("X12_356")
	TransformerX12TransactionSetX12357     = TransformerX12TransactionSet("X12_357")
	TransformerX12TransactionSetX12358     = TransformerX12TransactionSet("X12_358")
	TransformerX12TransactionSetX12361     = TransformerX12TransactionSet("X12_361")
	TransformerX12TransactionSetX12362     = TransformerX12TransactionSet("X12_362")
	TransformerX12TransactionSetX12404     = TransformerX12TransactionSet("X12_404")
	TransformerX12TransactionSetX12410     = TransformerX12TransactionSet("X12_410")
	TransformerX12TransactionSetX12412     = TransformerX12TransactionSet("X12_412")
	TransformerX12TransactionSetX12414     = TransformerX12TransactionSet("X12_414")
	TransformerX12TransactionSetX12417     = TransformerX12TransactionSet("X12_417")
	TransformerX12TransactionSetX12418     = TransformerX12TransactionSet("X12_418")
	TransformerX12TransactionSetX12419     = TransformerX12TransactionSet("X12_419")
	TransformerX12TransactionSetX12420     = TransformerX12TransactionSet("X12_420")
	TransformerX12TransactionSetX12421     = TransformerX12TransactionSet("X12_421")
	TransformerX12TransactionSetX12422     = TransformerX12TransactionSet("X12_422")
	TransformerX12TransactionSetX12423     = TransformerX12TransactionSet("X12_423")
	TransformerX12TransactionSetX12424     = TransformerX12TransactionSet("X12_424")
	TransformerX12TransactionSetX12425     = TransformerX12TransactionSet("X12_425")
	TransformerX12TransactionSetX12426     = TransformerX12TransactionSet("X12_426")
	TransformerX12TransactionSetX12429     = TransformerX12TransactionSet("X12_429")
	TransformerX12TransactionSetX12431     = TransformerX12TransactionSet("X12_431")
	TransformerX12TransactionSetX12432     = TransformerX12TransactionSet("X12_432")
	TransformerX12TransactionSetX12433     = TransformerX12TransactionSet("X12_433")
	TransformerX12TransactionSetX12434     = TransformerX12TransactionSet("X12_434")
	TransformerX12TransactionSetX12435     = TransformerX12TransactionSet("X12_435")
	TransformerX12TransactionSetX12436     = TransformerX12TransactionSet("X12_436")
	TransformerX12TransactionSetX12437     = TransformerX12TransactionSet("X12_437")
	TransformerX12TransactionSetX12440     = TransformerX12TransactionSet("X12_440")
	TransformerX12TransactionSetX12451     = TransformerX12TransactionSet("X12_451")
	TransformerX12TransactionSetX12452     = TransformerX12TransactionSet("X12_452")
	TransformerX12TransactionSetX12453     = TransformerX12TransactionSet("X12_453")
	TransformerX12TransactionSetX12455     = TransformerX12TransactionSet("X12_455")
	TransformerX12TransactionSetX12456     = TransformerX12TransactionSet("X12_456")
	TransformerX12TransactionSetX12460     = TransformerX12TransactionSet("X12_460")
	TransformerX12TransactionSetX12463     = TransformerX12TransactionSet("X12_463")
	TransformerX12TransactionSetX12466     = TransformerX12TransactionSet("X12_466")
	TransformerX12TransactionSetX12468     = TransformerX12TransactionSet("X12_468")
	TransformerX12TransactionSetX12470     = TransformerX12TransactionSet("X12_470")
	TransformerX12TransactionSetX12475     = TransformerX12TransactionSet("X12_475")
	TransformerX12TransactionSetX12485     = TransformerX12TransactionSet("X12_485")
	TransformerX12TransactionSetX12486     = TransformerX12TransactionSet("X12_486")
	TransformerX12TransactionSetX12490     = TransformerX12TransactionSet("X12_490")
	TransformerX12TransactionSetX12492     = TransformerX12TransactionSet("X12_492")
	TransformerX12TransactionSetX12494     = TransformerX12TransactionSet("X12_494")
	TransformerX12TransactionSetX12500     = TransformerX12TransactionSet("X12_500")
	TransformerX12TransactionSetX12501     = TransformerX12TransactionSet("X12_501")
	TransformerX12TransactionSetX12503     = TransformerX12TransactionSet("X12_503")
	TransformerX12TransactionSetX12504     = TransformerX12TransactionSet("X12_504")
	TransformerX12TransactionSetX12511     = TransformerX12TransactionSet("X12_511")
	TransformerX12TransactionSetX12517     = TransformerX12TransactionSet("X12_517")
	TransformerX12TransactionSetX12521     = TransformerX12TransactionSet("X12_521")
	TransformerX12TransactionSetX12527     = TransformerX12TransactionSet("X12_527")
	TransformerX12TransactionSetX12536     = TransformerX12TransactionSet("X12_536")
	TransformerX12TransactionSetX12540     = TransformerX12TransactionSet("X12_540")
	TransformerX12TransactionSetX12561     = TransformerX12TransactionSet("X12_561")
	TransformerX12TransactionSetX12567     = TransformerX12TransactionSet("X12_567")
	TransformerX12TransactionSetX12568     = TransformerX12TransactionSet("X12_568")
	TransformerX12TransactionSetX12601     = TransformerX12TransactionSet("X12_601")
	TransformerX12TransactionSetX12602     = TransformerX12TransactionSet("X12_602")
	TransformerX12TransactionSetX12620     = TransformerX12TransactionSet("X12_620")
	TransformerX12TransactionSetX12625     = TransformerX12TransactionSet("X12_625")
	TransformerX12TransactionSetX12650     = TransformerX12TransactionSet("X12_650")
	TransformerX12TransactionSetX12715     = TransformerX12TransactionSet("X12_715")
	TransformerX12TransactionSetX12753     = TransformerX12TransactionSet("X12_753")
	TransformerX12TransactionSetX12754     = TransformerX12TransactionSet("X12_754")
	TransformerX12TransactionSetX12805     = TransformerX12TransactionSet("X12_805")
	TransformerX12TransactionSetX12806     = TransformerX12TransactionSet("X12_806")
	TransformerX12TransactionSetX12810     = TransformerX12TransactionSet("X12_810")
	TransformerX12TransactionSetX12811     = TransformerX12TransactionSet("X12_811")
	TransformerX12TransactionSetX12812     = TransformerX12TransactionSet("X12_812")
	TransformerX12TransactionSetX12813     = TransformerX12TransactionSet("X12_813")
	TransformerX12TransactionSetX12814     = TransformerX12TransactionSet("X12_814")
	TransformerX12TransactionSetX12815     = TransformerX12TransactionSet("X12_815")
	TransformerX12TransactionSetX12816     = TransformerX12TransactionSet("X12_816")
	TransformerX12TransactionSetX12818     = TransformerX12TransactionSet("X12_818")
	TransformerX12TransactionSetX12819     = TransformerX12TransactionSet("X12_819")
	TransformerX12TransactionSetX12820     = TransformerX12TransactionSet("X12_820")
	TransformerX12TransactionSetX12821     = TransformerX12TransactionSet("X12_821")
	TransformerX12TransactionSetX12822     = TransformerX12TransactionSet("X12_822")
	TransformerX12TransactionSetX12823     = TransformerX12TransactionSet("X12_823")
	TransformerX12TransactionSetX12824     = TransformerX12TransactionSet("X12_824")
	TransformerX12TransactionSetX12826     = TransformerX12TransactionSet("X12_826")
	TransformerX12TransactionSetX12827     = TransformerX12TransactionSet("X12_827")
	TransformerX12TransactionSetX12828     = TransformerX12TransactionSet("X12_828")
	TransformerX12TransactionSetX12829     = TransformerX12TransactionSet("X12_829")
	TransformerX12TransactionSetX12830     = TransformerX12TransactionSet("X12_830")
	TransformerX12TransactionSetX12831     = TransformerX12TransactionSet("X12_831")
	TransformerX12TransactionSetX12832     = TransformerX12TransactionSet("X12_832")
	TransformerX12TransactionSetX12833     = TransformerX12TransactionSet("X12_833")
	TransformerX12TransactionSetX12834     = TransformerX12TransactionSet("X12_834")
	TransformerX12TransactionSetX12835     = TransformerX12TransactionSet("X12_835")
	TransformerX12TransactionSetX12836     = TransformerX12TransactionSet("X12_836")
	TransformerX12TransactionSetX12837     = TransformerX12TransactionSet("X12_837")
	TransformerX12TransactionSetX12838     = TransformerX12TransactionSet("X12_838")
	TransformerX12TransactionSetX12839     = TransformerX12TransactionSet("X12_839")
	TransformerX12TransactionSetX12840     = TransformerX12TransactionSet("X12_840")
	TransformerX12TransactionSetX12841     = TransformerX12TransactionSet("X12_841")
	TransformerX12TransactionSetX12842     = TransformerX12TransactionSet("X12_842")
	TransformerX12TransactionSetX12843     = TransformerX12TransactionSet("X12_843")
	TransformerX12TransactionSetX12844     = TransformerX12TransactionSet("X12_844")
	TransformerX12TransactionSetX12845     = TransformerX12TransactionSet("X12_845")
	TransformerX12TransactionSetX12846     = TransformerX12TransactionSet("X12_846")
	TransformerX12TransactionSetX12847     = TransformerX12TransactionSet("X12_847")
	TransformerX12TransactionSetX12848     = TransformerX12TransactionSet("X12_848")
	TransformerX12TransactionSetX12849     = TransformerX12TransactionSet("X12_849")
	TransformerX12TransactionSetX12850     = TransformerX12TransactionSet("X12_850")
	TransformerX12TransactionSetX12851     = TransformerX12TransactionSet("X12_851")
	TransformerX12TransactionSetX12852     = TransformerX12TransactionSet("X12_852")
	TransformerX12TransactionSetX12853     = TransformerX12TransactionSet("X12_853")
	TransformerX12TransactionSetX12854     = TransformerX12TransactionSet("X12_854")
	TransformerX12TransactionSetX12855     = TransformerX12TransactionSet("X12_855")
	TransformerX12TransactionSetX12856     = TransformerX12TransactionSet("X12_856")
	TransformerX12TransactionSetX12857     = TransformerX12TransactionSet("X12_857")
	TransformerX12TransactionSetX12858     = TransformerX12TransactionSet("X12_858")
	TransformerX12TransactionSetX12859     = TransformerX12TransactionSet("X12_859")
	TransformerX12TransactionSetX12860     = TransformerX12TransactionSet("X12_860")
	TransformerX12TransactionSetX12861     = TransformerX12TransactionSet("X12_861")
	TransformerX12TransactionSetX12862     = TransformerX12TransactionSet("X12_862")
	TransformerX12TransactionSetX12863     = TransformerX12TransactionSet("X12_863")
	TransformerX12TransactionSetX12864     = TransformerX12TransactionSet("X12_864")
	TransformerX12TransactionSetX12865     = TransformerX12TransactionSet("X12_865")
	TransformerX12TransactionSetX12866     = TransformerX12TransactionSet("X12_866")
	TransformerX12TransactionSetX12867     = TransformerX12TransactionSet("X12_867")
	TransformerX12TransactionSetX12868     = TransformerX12TransactionSet("X12_868")
	TransformerX12TransactionSetX12869     = TransformerX12TransactionSet("X12_869")
	TransformerX12TransactionSetX12870     = TransformerX12TransactionSet("X12_870")
	TransformerX12TransactionSetX12871     = TransformerX12TransactionSet("X12_871")
	TransformerX12TransactionSetX12872     = TransformerX12TransactionSet("X12_872")
	TransformerX12TransactionSetX12873     = TransformerX12TransactionSet("X12_873")
	TransformerX12TransactionSetX12874     = TransformerX12TransactionSet("X12_874")
	TransformerX12TransactionSetX12875     = TransformerX12TransactionSet("X12_875")
	TransformerX12TransactionSetX12876     = TransformerX12TransactionSet("X12_876")
	TransformerX12TransactionSetX12877     = TransformerX12TransactionSet("X12_877")
	TransformerX12TransactionSetX12878     = TransformerX12TransactionSet("X12_878")
	TransformerX12TransactionSetX12879     = TransformerX12TransactionSet("X12_879")
	TransformerX12TransactionSetX12880     = TransformerX12TransactionSet("X12_880")
	TransformerX12TransactionSetX12881     = TransformerX12TransactionSet("X12_881")
	TransformerX12TransactionSetX12882     = TransformerX12TransactionSet("X12_882")
	TransformerX12TransactionSetX12883     = TransformerX12TransactionSet("X12_883")
	TransformerX12TransactionSetX12884     = TransformerX12TransactionSet("X12_884")
	TransformerX12TransactionSetX12885     = TransformerX12TransactionSet("X12_885")
	TransformerX12TransactionSetX12886     = TransformerX12TransactionSet("X12_886")
	TransformerX12TransactionSetX12887     = TransformerX12TransactionSet("X12_887")
	TransformerX12TransactionSetX12888     = TransformerX12TransactionSet("X12_888")
	TransformerX12TransactionSetX12889     = TransformerX12TransactionSet("X12_889")
	TransformerX12TransactionSetX12891     = TransformerX12TransactionSet("X12_891")
	TransformerX12TransactionSetX12893     = TransformerX12TransactionSet("X12_893")
	TransformerX12TransactionSetX12894     = TransformerX12TransactionSet("X12_894")
	TransformerX12TransactionSetX12895     = TransformerX12TransactionSet("X12_895")
	TransformerX12TransactionSetX12896     = TransformerX12TransactionSet("X12_896")
	TransformerX12TransactionSetX12920     = TransformerX12TransactionSet("X12_920")
	TransformerX12TransactionSetX12924     = TransformerX12TransactionSet("X12_924")
	TransformerX12TransactionSetX12925     = TransformerX12TransactionSet("X12_925")
	TransformerX12TransactionSetX12926     = TransformerX12TransactionSet("X12_926")
	TransformerX12TransactionSetX12928     = TransformerX12TransactionSet("X12_928")
	TransformerX12TransactionSetX12940     = TransformerX12TransactionSet("X12_940")
	TransformerX12TransactionSetX12943     = TransformerX12TransactionSet("X12_943")
	TransformerX12TransactionSetX12944     = TransformerX12TransactionSet("X12_944")
	TransformerX12TransactionSetX12945     = TransformerX12TransactionSet("X12_945")
	TransformerX12TransactionSetX12947     = TransformerX12TransactionSet("X12_947")
	TransformerX12TransactionSetX12980     = TransformerX12TransactionSet("X12_980")
	TransformerX12TransactionSetX12990     = TransformerX12TransactionSet("X12_990")
	TransformerX12TransactionSetX12993     = TransformerX12TransactionSet("X12_993")
	TransformerX12TransactionSetX12996     = TransformerX12TransactionSet("X12_996")
	TransformerX12TransactionSetX12997     = TransformerX12TransactionSet("X12_997")
	TransformerX12TransactionSetX12998     = TransformerX12TransactionSet("X12_998")
	TransformerX12TransactionSetX12999     = TransformerX12TransactionSet("X12_999")
	TransformerX12TransactionSetX12270x279 = TransformerX12TransactionSet("X12_270_X279")
	TransformerX12TransactionSetX12271x279 = TransformerX12TransactionSet("X12_271_X279")
	TransformerX12TransactionSetX12275x210 = TransformerX12TransactionSet("X12_275_X210")
	TransformerX12TransactionSetX12275x211 = TransformerX12TransactionSet("X12_275_X211")
	TransformerX12TransactionSetX12276x212 = TransformerX12TransactionSet("X12_276_X212")
	TransformerX12TransactionSetX12277x212 = TransformerX12TransactionSet("X12_277_X212")
	TransformerX12TransactionSetX12277x214 = TransformerX12TransactionSet("X12_277_X214")
	TransformerX12TransactionSetX12277x364 = TransformerX12TransactionSet("X12_277_X364")
	TransformerX12TransactionSetX12278x217 = TransformerX12TransactionSet("X12_278_X217")
	TransformerX12TransactionSetX12820x218 = TransformerX12TransactionSet("X12_820_X218")
	TransformerX12TransactionSetX12820x306 = TransformerX12TransactionSet("X12_820_X306")
	TransformerX12TransactionSetX12824x186 = TransformerX12TransactionSet("X12_824_X186")
	TransformerX12TransactionSetX12834x220 = TransformerX12TransactionSet("X12_834_X220")
	TransformerX12TransactionSetX12834x307 = TransformerX12TransactionSet("X12_834_X307")
	TransformerX12TransactionSetX12834x318 = TransformerX12TransactionSet("X12_834_X318")
	TransformerX12TransactionSetX12835x221 = TransformerX12TransactionSet("X12_835_X221")
	TransformerX12TransactionSetX12837x222 = TransformerX12TransactionSet("X12_837_X222")
	TransformerX12TransactionSetX12837x223 = TransformerX12TransactionSet("X12_837_X223")
	TransformerX12TransactionSetX12837x224 = TransformerX12TransactionSet("X12_837_X224")
	TransformerX12TransactionSetX12837x291 = TransformerX12TransactionSet("X12_837_X291")
	TransformerX12TransactionSetX12837x292 = TransformerX12TransactionSet("X12_837_X292")
	TransformerX12TransactionSetX12837x298 = TransformerX12TransactionSet("X12_837_X298")
	TransformerX12TransactionSetX12999x231 = TransformerX12TransactionSet("X12_999_X231")
)

func (TransformerX12TransactionSet) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12TransactionSet)(nil)).Elem()
}

func (e TransformerX12TransactionSet) ToTransformerX12TransactionSetOutput() TransformerX12TransactionSetOutput {
	return pulumi.ToOutput(e).(TransformerX12TransactionSetOutput)
}

func (e TransformerX12TransactionSet) ToTransformerX12TransactionSetOutputWithContext(ctx context.Context) TransformerX12TransactionSetOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerX12TransactionSetOutput)
}

func (e TransformerX12TransactionSet) ToTransformerX12TransactionSetPtrOutput() TransformerX12TransactionSetPtrOutput {
	return e.ToTransformerX12TransactionSetPtrOutputWithContext(context.Background())
}

func (e TransformerX12TransactionSet) ToTransformerX12TransactionSetPtrOutputWithContext(ctx context.Context) TransformerX12TransactionSetPtrOutput {
	return TransformerX12TransactionSet(e).ToTransformerX12TransactionSetOutputWithContext(ctx).ToTransformerX12TransactionSetPtrOutputWithContext(ctx)
}

func (e TransformerX12TransactionSet) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12TransactionSet) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12TransactionSet) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerX12TransactionSet) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerX12TransactionSetOutput struct{ *pulumi.OutputState }

func (TransformerX12TransactionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12TransactionSet)(nil)).Elem()
}

func (o TransformerX12TransactionSetOutput) ToTransformerX12TransactionSetOutput() TransformerX12TransactionSetOutput {
	return o
}

func (o TransformerX12TransactionSetOutput) ToTransformerX12TransactionSetOutputWithContext(ctx context.Context) TransformerX12TransactionSetOutput {
	return o
}

func (o TransformerX12TransactionSetOutput) ToTransformerX12TransactionSetPtrOutput() TransformerX12TransactionSetPtrOutput {
	return o.ToTransformerX12TransactionSetPtrOutputWithContext(context.Background())
}

func (o TransformerX12TransactionSetOutput) ToTransformerX12TransactionSetPtrOutputWithContext(ctx context.Context) TransformerX12TransactionSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerX12TransactionSet) *TransformerX12TransactionSet {
		return &v
	}).(TransformerX12TransactionSetPtrOutput)
}

func (o TransformerX12TransactionSetOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerX12TransactionSetOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12TransactionSet) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerX12TransactionSetOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12TransactionSetOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12TransactionSet) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerX12TransactionSetPtrOutput struct{ *pulumi.OutputState }

func (TransformerX12TransactionSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerX12TransactionSet)(nil)).Elem()
}

func (o TransformerX12TransactionSetPtrOutput) ToTransformerX12TransactionSetPtrOutput() TransformerX12TransactionSetPtrOutput {
	return o
}

func (o TransformerX12TransactionSetPtrOutput) ToTransformerX12TransactionSetPtrOutputWithContext(ctx context.Context) TransformerX12TransactionSetPtrOutput {
	return o
}

func (o TransformerX12TransactionSetPtrOutput) Elem() TransformerX12TransactionSetOutput {
	return o.ApplyT(func(v *TransformerX12TransactionSet) TransformerX12TransactionSet {
		if v != nil {
			return *v
		}
		var ret TransformerX12TransactionSet
		return ret
	}).(TransformerX12TransactionSetOutput)
}

func (o TransformerX12TransactionSetPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12TransactionSetPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerX12TransactionSet) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerX12TransactionSetInput is an input type that accepts values of the TransformerX12TransactionSet enum
// A concrete instance of `TransformerX12TransactionSetInput` can be one of the following:
//
//	TransformerX12TransactionSetX12100
//	TransformerX12TransactionSetX12101
//	TransformerX12TransactionSetX12102
//	TransformerX12TransactionSetX12103
//	TransformerX12TransactionSetX12104
//	TransformerX12TransactionSetX12105
//	TransformerX12TransactionSetX12106
//	TransformerX12TransactionSetX12107
//	TransformerX12TransactionSetX12108
//	TransformerX12TransactionSetX12109
//	TransformerX12TransactionSetX12110
//	TransformerX12TransactionSetX12111
//	TransformerX12TransactionSetX12112
//	TransformerX12TransactionSetX12113
//	TransformerX12TransactionSetX12120
//	TransformerX12TransactionSetX12121
//	TransformerX12TransactionSetX12124
//	TransformerX12TransactionSetX12125
//	TransformerX12TransactionSetX12126
//	TransformerX12TransactionSetX12127
//	TransformerX12TransactionSetX12128
//	TransformerX12TransactionSetX12129
//	TransformerX12TransactionSetX12130
//	TransformerX12TransactionSetX12131
//	TransformerX12TransactionSetX12132
//	TransformerX12TransactionSetX12133
//	TransformerX12TransactionSetX12135
//	TransformerX12TransactionSetX12138
//	TransformerX12TransactionSetX12139
//	TransformerX12TransactionSetX12140
//	TransformerX12TransactionSetX12141
//	TransformerX12TransactionSetX12142
//	TransformerX12TransactionSetX12143
//	TransformerX12TransactionSetX12144
//	TransformerX12TransactionSetX12146
//	TransformerX12TransactionSetX12147
//	TransformerX12TransactionSetX12148
//	TransformerX12TransactionSetX12149
//	TransformerX12TransactionSetX12150
//	TransformerX12TransactionSetX12151
//	TransformerX12TransactionSetX12152
//	TransformerX12TransactionSetX12153
//	TransformerX12TransactionSetX12154
//	TransformerX12TransactionSetX12155
//	TransformerX12TransactionSetX12157
//	TransformerX12TransactionSetX12158
//	TransformerX12TransactionSetX12159
//	TransformerX12TransactionSetX12160
//	TransformerX12TransactionSetX12161
//	TransformerX12TransactionSetX12163
//	TransformerX12TransactionSetX12170
//	TransformerX12TransactionSetX12175
//	TransformerX12TransactionSetX12176
//	TransformerX12TransactionSetX12179
//	TransformerX12TransactionSetX12180
//	TransformerX12TransactionSetX12185
//	TransformerX12TransactionSetX12186
//	TransformerX12TransactionSetX12187
//	TransformerX12TransactionSetX12188
//	TransformerX12TransactionSetX12189
//	TransformerX12TransactionSetX12190
//	TransformerX12TransactionSetX12191
//	TransformerX12TransactionSetX12194
//	TransformerX12TransactionSetX12195
//	TransformerX12TransactionSetX12196
//	TransformerX12TransactionSetX12197
//	TransformerX12TransactionSetX12198
//	TransformerX12TransactionSetX12199
//	TransformerX12TransactionSetX12200
//	TransformerX12TransactionSetX12201
//	TransformerX12TransactionSetX12202
//	TransformerX12TransactionSetX12203
//	TransformerX12TransactionSetX12204
//	TransformerX12TransactionSetX12205
//	TransformerX12TransactionSetX12206
//	TransformerX12TransactionSetX12210
//	TransformerX12TransactionSetX12211
//	TransformerX12TransactionSetX12212
//	TransformerX12TransactionSetX12213
//	TransformerX12TransactionSetX12214
//	TransformerX12TransactionSetX12215
//	TransformerX12TransactionSetX12216
//	TransformerX12TransactionSetX12217
//	TransformerX12TransactionSetX12218
//	TransformerX12TransactionSetX12219
//	TransformerX12TransactionSetX12220
//	TransformerX12TransactionSetX12222
//	TransformerX12TransactionSetX12223
//	TransformerX12TransactionSetX12224
//	TransformerX12TransactionSetX12225
//	TransformerX12TransactionSetX12227
//	TransformerX12TransactionSetX12228
//	TransformerX12TransactionSetX12240
//	TransformerX12TransactionSetX12242
//	TransformerX12TransactionSetX12244
//	TransformerX12TransactionSetX12245
//	TransformerX12TransactionSetX12248
//	TransformerX12TransactionSetX12249
//	TransformerX12TransactionSetX12250
//	TransformerX12TransactionSetX12251
//	TransformerX12TransactionSetX12252
//	TransformerX12TransactionSetX12255
//	TransformerX12TransactionSetX12256
//	TransformerX12TransactionSetX12259
//	TransformerX12TransactionSetX12260
//	TransformerX12TransactionSetX12261
//	TransformerX12TransactionSetX12262
//	TransformerX12TransactionSetX12263
//	TransformerX12TransactionSetX12264
//	TransformerX12TransactionSetX12265
//	TransformerX12TransactionSetX12266
//	TransformerX12TransactionSetX12267
//	TransformerX12TransactionSetX12268
//	TransformerX12TransactionSetX12269
//	TransformerX12TransactionSetX12270
//	TransformerX12TransactionSetX12271
//	TransformerX12TransactionSetX12272
//	TransformerX12TransactionSetX12273
//	TransformerX12TransactionSetX12274
//	TransformerX12TransactionSetX12275
//	TransformerX12TransactionSetX12276
//	TransformerX12TransactionSetX12277
//	TransformerX12TransactionSetX12278
//	TransformerX12TransactionSetX12280
//	TransformerX12TransactionSetX12283
//	TransformerX12TransactionSetX12284
//	TransformerX12TransactionSetX12285
//	TransformerX12TransactionSetX12286
//	TransformerX12TransactionSetX12288
//	TransformerX12TransactionSetX12290
//	TransformerX12TransactionSetX12300
//	TransformerX12TransactionSetX12301
//	TransformerX12TransactionSetX12303
//	TransformerX12TransactionSetX12304
//	TransformerX12TransactionSetX12309
//	TransformerX12TransactionSetX12310
//	TransformerX12TransactionSetX12311
//	TransformerX12TransactionSetX12312
//	TransformerX12TransactionSetX12313
//	TransformerX12TransactionSetX12315
//	TransformerX12TransactionSetX12317
//	TransformerX12TransactionSetX12319
//	TransformerX12TransactionSetX12322
//	TransformerX12TransactionSetX12323
//	TransformerX12TransactionSetX12324
//	TransformerX12TransactionSetX12325
//	TransformerX12TransactionSetX12326
//	TransformerX12TransactionSetX12350
//	TransformerX12TransactionSetX12352
//	TransformerX12TransactionSetX12353
//	TransformerX12TransactionSetX12354
//	TransformerX12TransactionSetX12355
//	TransformerX12TransactionSetX12356
//	TransformerX12TransactionSetX12357
//	TransformerX12TransactionSetX12358
//	TransformerX12TransactionSetX12361
//	TransformerX12TransactionSetX12362
//	TransformerX12TransactionSetX12404
//	TransformerX12TransactionSetX12410
//	TransformerX12TransactionSetX12412
//	TransformerX12TransactionSetX12414
//	TransformerX12TransactionSetX12417
//	TransformerX12TransactionSetX12418
//	TransformerX12TransactionSetX12419
//	TransformerX12TransactionSetX12420
//	TransformerX12TransactionSetX12421
//	TransformerX12TransactionSetX12422
//	TransformerX12TransactionSetX12423
//	TransformerX12TransactionSetX12424
//	TransformerX12TransactionSetX12425
//	TransformerX12TransactionSetX12426
//	TransformerX12TransactionSetX12429
//	TransformerX12TransactionSetX12431
//	TransformerX12TransactionSetX12432
//	TransformerX12TransactionSetX12433
//	TransformerX12TransactionSetX12434
//	TransformerX12TransactionSetX12435
//	TransformerX12TransactionSetX12436
//	TransformerX12TransactionSetX12437
//	TransformerX12TransactionSetX12440
//	TransformerX12TransactionSetX12451
//	TransformerX12TransactionSetX12452
//	TransformerX12TransactionSetX12453
//	TransformerX12TransactionSetX12455
//	TransformerX12TransactionSetX12456
//	TransformerX12TransactionSetX12460
//	TransformerX12TransactionSetX12463
//	TransformerX12TransactionSetX12466
//	TransformerX12TransactionSetX12468
//	TransformerX12TransactionSetX12470
//	TransformerX12TransactionSetX12475
//	TransformerX12TransactionSetX12485
//	TransformerX12TransactionSetX12486
//	TransformerX12TransactionSetX12490
//	TransformerX12TransactionSetX12492
//	TransformerX12TransactionSetX12494
//	TransformerX12TransactionSetX12500
//	TransformerX12TransactionSetX12501
//	TransformerX12TransactionSetX12503
//	TransformerX12TransactionSetX12504
//	TransformerX12TransactionSetX12511
//	TransformerX12TransactionSetX12517
//	TransformerX12TransactionSetX12521
//	TransformerX12TransactionSetX12527
//	TransformerX12TransactionSetX12536
//	TransformerX12TransactionSetX12540
//	TransformerX12TransactionSetX12561
//	TransformerX12TransactionSetX12567
//	TransformerX12TransactionSetX12568
//	TransformerX12TransactionSetX12601
//	TransformerX12TransactionSetX12602
//	TransformerX12TransactionSetX12620
//	TransformerX12TransactionSetX12625
//	TransformerX12TransactionSetX12650
//	TransformerX12TransactionSetX12715
//	TransformerX12TransactionSetX12753
//	TransformerX12TransactionSetX12754
//	TransformerX12TransactionSetX12805
//	TransformerX12TransactionSetX12806
//	TransformerX12TransactionSetX12810
//	TransformerX12TransactionSetX12811
//	TransformerX12TransactionSetX12812
//	TransformerX12TransactionSetX12813
//	TransformerX12TransactionSetX12814
//	TransformerX12TransactionSetX12815
//	TransformerX12TransactionSetX12816
//	TransformerX12TransactionSetX12818
//	TransformerX12TransactionSetX12819
//	TransformerX12TransactionSetX12820
//	TransformerX12TransactionSetX12821
//	TransformerX12TransactionSetX12822
//	TransformerX12TransactionSetX12823
//	TransformerX12TransactionSetX12824
//	TransformerX12TransactionSetX12826
//	TransformerX12TransactionSetX12827
//	TransformerX12TransactionSetX12828
//	TransformerX12TransactionSetX12829
//	TransformerX12TransactionSetX12830
//	TransformerX12TransactionSetX12831
//	TransformerX12TransactionSetX12832
//	TransformerX12TransactionSetX12833
//	TransformerX12TransactionSetX12834
//	TransformerX12TransactionSetX12835
//	TransformerX12TransactionSetX12836
//	TransformerX12TransactionSetX12837
//	TransformerX12TransactionSetX12838
//	TransformerX12TransactionSetX12839
//	TransformerX12TransactionSetX12840
//	TransformerX12TransactionSetX12841
//	TransformerX12TransactionSetX12842
//	TransformerX12TransactionSetX12843
//	TransformerX12TransactionSetX12844
//	TransformerX12TransactionSetX12845
//	TransformerX12TransactionSetX12846
//	TransformerX12TransactionSetX12847
//	TransformerX12TransactionSetX12848
//	TransformerX12TransactionSetX12849
//	TransformerX12TransactionSetX12850
//	TransformerX12TransactionSetX12851
//	TransformerX12TransactionSetX12852
//	TransformerX12TransactionSetX12853
//	TransformerX12TransactionSetX12854
//	TransformerX12TransactionSetX12855
//	TransformerX12TransactionSetX12856
//	TransformerX12TransactionSetX12857
//	TransformerX12TransactionSetX12858
//	TransformerX12TransactionSetX12859
//	TransformerX12TransactionSetX12860
//	TransformerX12TransactionSetX12861
//	TransformerX12TransactionSetX12862
//	TransformerX12TransactionSetX12863
//	TransformerX12TransactionSetX12864
//	TransformerX12TransactionSetX12865
//	TransformerX12TransactionSetX12866
//	TransformerX12TransactionSetX12867
//	TransformerX12TransactionSetX12868
//	TransformerX12TransactionSetX12869
//	TransformerX12TransactionSetX12870
//	TransformerX12TransactionSetX12871
//	TransformerX12TransactionSetX12872
//	TransformerX12TransactionSetX12873
//	TransformerX12TransactionSetX12874
//	TransformerX12TransactionSetX12875
//	TransformerX12TransactionSetX12876
//	TransformerX12TransactionSetX12877
//	TransformerX12TransactionSetX12878
//	TransformerX12TransactionSetX12879
//	TransformerX12TransactionSetX12880
//	TransformerX12TransactionSetX12881
//	TransformerX12TransactionSetX12882
//	TransformerX12TransactionSetX12883
//	TransformerX12TransactionSetX12884
//	TransformerX12TransactionSetX12885
//	TransformerX12TransactionSetX12886
//	TransformerX12TransactionSetX12887
//	TransformerX12TransactionSetX12888
//	TransformerX12TransactionSetX12889
//	TransformerX12TransactionSetX12891
//	TransformerX12TransactionSetX12893
//	TransformerX12TransactionSetX12894
//	TransformerX12TransactionSetX12895
//	TransformerX12TransactionSetX12896
//	TransformerX12TransactionSetX12920
//	TransformerX12TransactionSetX12924
//	TransformerX12TransactionSetX12925
//	TransformerX12TransactionSetX12926
//	TransformerX12TransactionSetX12928
//	TransformerX12TransactionSetX12940
//	TransformerX12TransactionSetX12943
//	TransformerX12TransactionSetX12944
//	TransformerX12TransactionSetX12945
//	TransformerX12TransactionSetX12947
//	TransformerX12TransactionSetX12980
//	TransformerX12TransactionSetX12990
//	TransformerX12TransactionSetX12993
//	TransformerX12TransactionSetX12996
//	TransformerX12TransactionSetX12997
//	TransformerX12TransactionSetX12998
//	TransformerX12TransactionSetX12999
//	TransformerX12TransactionSetX12270x279
//	TransformerX12TransactionSetX12271x279
//	TransformerX12TransactionSetX12275x210
//	TransformerX12TransactionSetX12275x211
//	TransformerX12TransactionSetX12276x212
//	TransformerX12TransactionSetX12277x212
//	TransformerX12TransactionSetX12277x214
//	TransformerX12TransactionSetX12277x364
//	TransformerX12TransactionSetX12278x217
//	TransformerX12TransactionSetX12820x218
//	TransformerX12TransactionSetX12820x306
//	TransformerX12TransactionSetX12824x186
//	TransformerX12TransactionSetX12834x220
//	TransformerX12TransactionSetX12834x307
//	TransformerX12TransactionSetX12834x318
//	TransformerX12TransactionSetX12835x221
//	TransformerX12TransactionSetX12837x222
//	TransformerX12TransactionSetX12837x223
//	TransformerX12TransactionSetX12837x224
//	TransformerX12TransactionSetX12837x291
//	TransformerX12TransactionSetX12837x292
//	TransformerX12TransactionSetX12837x298
//	TransformerX12TransactionSetX12999x231
type TransformerX12TransactionSetInput interface {
	pulumi.Input

	ToTransformerX12TransactionSetOutput() TransformerX12TransactionSetOutput
	ToTransformerX12TransactionSetOutputWithContext(context.Context) TransformerX12TransactionSetOutput
}

var transformerX12TransactionSetPtrType = reflect.TypeOf((**TransformerX12TransactionSet)(nil)).Elem()

type TransformerX12TransactionSetPtrInput interface {
	pulumi.Input

	ToTransformerX12TransactionSetPtrOutput() TransformerX12TransactionSetPtrOutput
	ToTransformerX12TransactionSetPtrOutputWithContext(context.Context) TransformerX12TransactionSetPtrOutput
}

type transformerX12TransactionSetPtr string

func TransformerX12TransactionSetPtr(v string) TransformerX12TransactionSetPtrInput {
	return (*transformerX12TransactionSetPtr)(&v)
}

func (*transformerX12TransactionSetPtr) ElementType() reflect.Type {
	return transformerX12TransactionSetPtrType
}

func (in *transformerX12TransactionSetPtr) ToTransformerX12TransactionSetPtrOutput() TransformerX12TransactionSetPtrOutput {
	return pulumi.ToOutput(in).(TransformerX12TransactionSetPtrOutput)
}

func (in *transformerX12TransactionSetPtr) ToTransformerX12TransactionSetPtrOutputWithContext(ctx context.Context) TransformerX12TransactionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerX12TransactionSetPtrOutput)
}

type TransformerX12Version string

const (
	TransformerX12VersionVersion4010      = TransformerX12Version("VERSION_4010")
	TransformerX12VersionVersion4030      = TransformerX12Version("VERSION_4030")
	TransformerX12VersionVersion4050      = TransformerX12Version("VERSION_4050")
	TransformerX12VersionVersion4060      = TransformerX12Version("VERSION_4060")
	TransformerX12VersionVersion5010      = TransformerX12Version("VERSION_5010")
	TransformerX12VersionVersion5010Hipaa = TransformerX12Version("VERSION_5010_HIPAA")
)

func (TransformerX12Version) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12Version)(nil)).Elem()
}

func (e TransformerX12Version) ToTransformerX12VersionOutput() TransformerX12VersionOutput {
	return pulumi.ToOutput(e).(TransformerX12VersionOutput)
}

func (e TransformerX12Version) ToTransformerX12VersionOutputWithContext(ctx context.Context) TransformerX12VersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransformerX12VersionOutput)
}

func (e TransformerX12Version) ToTransformerX12VersionPtrOutput() TransformerX12VersionPtrOutput {
	return e.ToTransformerX12VersionPtrOutputWithContext(context.Background())
}

func (e TransformerX12Version) ToTransformerX12VersionPtrOutputWithContext(ctx context.Context) TransformerX12VersionPtrOutput {
	return TransformerX12Version(e).ToTransformerX12VersionOutputWithContext(ctx).ToTransformerX12VersionPtrOutputWithContext(ctx)
}

func (e TransformerX12Version) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12Version) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransformerX12Version) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransformerX12Version) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransformerX12VersionOutput struct{ *pulumi.OutputState }

func (TransformerX12VersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformerX12Version)(nil)).Elem()
}

func (o TransformerX12VersionOutput) ToTransformerX12VersionOutput() TransformerX12VersionOutput {
	return o
}

func (o TransformerX12VersionOutput) ToTransformerX12VersionOutputWithContext(ctx context.Context) TransformerX12VersionOutput {
	return o
}

func (o TransformerX12VersionOutput) ToTransformerX12VersionPtrOutput() TransformerX12VersionPtrOutput {
	return o.ToTransformerX12VersionPtrOutputWithContext(context.Background())
}

func (o TransformerX12VersionOutput) ToTransformerX12VersionPtrOutputWithContext(ctx context.Context) TransformerX12VersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransformerX12Version) *TransformerX12Version {
		return &v
	}).(TransformerX12VersionPtrOutput)
}

func (o TransformerX12VersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransformerX12VersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12Version) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransformerX12VersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12VersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransformerX12Version) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransformerX12VersionPtrOutput struct{ *pulumi.OutputState }

func (TransformerX12VersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformerX12Version)(nil)).Elem()
}

func (o TransformerX12VersionPtrOutput) ToTransformerX12VersionPtrOutput() TransformerX12VersionPtrOutput {
	return o
}

func (o TransformerX12VersionPtrOutput) ToTransformerX12VersionPtrOutputWithContext(ctx context.Context) TransformerX12VersionPtrOutput {
	return o
}

func (o TransformerX12VersionPtrOutput) Elem() TransformerX12VersionOutput {
	return o.ApplyT(func(v *TransformerX12Version) TransformerX12Version {
		if v != nil {
			return *v
		}
		var ret TransformerX12Version
		return ret
	}).(TransformerX12VersionOutput)
}

func (o TransformerX12VersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransformerX12VersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransformerX12Version) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransformerX12VersionInput is an input type that accepts values of the TransformerX12Version enum
// A concrete instance of `TransformerX12VersionInput` can be one of the following:
//
//	TransformerX12VersionVersion4010
//	TransformerX12VersionVersion4030
//	TransformerX12VersionVersion4050
//	TransformerX12VersionVersion4060
//	TransformerX12VersionVersion5010
//	TransformerX12VersionVersion5010Hipaa
type TransformerX12VersionInput interface {
	pulumi.Input

	ToTransformerX12VersionOutput() TransformerX12VersionOutput
	ToTransformerX12VersionOutputWithContext(context.Context) TransformerX12VersionOutput
}

var transformerX12VersionPtrType = reflect.TypeOf((**TransformerX12Version)(nil)).Elem()

type TransformerX12VersionPtrInput interface {
	pulumi.Input

	ToTransformerX12VersionPtrOutput() TransformerX12VersionPtrOutput
	ToTransformerX12VersionPtrOutputWithContext(context.Context) TransformerX12VersionPtrOutput
}

type transformerX12VersionPtr string

func TransformerX12VersionPtr(v string) TransformerX12VersionPtrInput {
	return (*transformerX12VersionPtr)(&v)
}

func (*transformerX12VersionPtr) ElementType() reflect.Type {
	return transformerX12VersionPtrType
}

func (in *transformerX12VersionPtr) ToTransformerX12VersionPtrOutput() TransformerX12VersionPtrOutput {
	return pulumi.ToOutput(in).(TransformerX12VersionPtrOutput)
}

func (in *transformerX12VersionPtr) ToTransformerX12VersionPtrOutputWithContext(ctx context.Context) TransformerX12VersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransformerX12VersionPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityDirectionInput)(nil)).Elem(), CapabilityDirection("INBOUND"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityDirectionPtrInput)(nil)).Elem(), CapabilityDirection("INBOUND"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityTypeInput)(nil)).Elem(), CapabilityType("edi"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityTypePtrInput)(nil)).Elem(), CapabilityType("edi"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityX12TransactionSetInput)(nil)).Elem(), CapabilityX12TransactionSet("X12_100"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityX12TransactionSetPtrInput)(nil)).Elem(), CapabilityX12TransactionSet("X12_100"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityX12VersionInput)(nil)).Elem(), CapabilityX12Version("VERSION_4010"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityX12VersionPtrInput)(nil)).Elem(), CapabilityX12Version("VERSION_4010"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipLineTerminatorInput)(nil)).Elem(), PartnershipLineTerminator("CRLF"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipLineTerminatorPtrInput)(nil)).Elem(), PartnershipLineTerminator("CRLF"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipWrapFormatInput)(nil)).Elem(), PartnershipWrapFormat("SEGMENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipWrapFormatPtrInput)(nil)).Elem(), PartnershipWrapFormat("SEGMENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12FunctionalAcknowledgmentInput)(nil)).Elem(), PartnershipX12FunctionalAcknowledgment("DO_NOT_GENERATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12FunctionalAcknowledgmentPtrInput)(nil)).Elem(), PartnershipX12FunctionalAcknowledgment("DO_NOT_GENERATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12TechnicalAcknowledgmentInput)(nil)).Elem(), PartnershipX12TechnicalAcknowledgment("DO_NOT_GENERATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12TechnicalAcknowledgmentPtrInput)(nil)).Elem(), PartnershipX12TechnicalAcknowledgment("DO_NOT_GENERATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12gs05TimeFormatInput)(nil)).Elem(), PartnershipX12gs05TimeFormat("HHMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*PartnershipX12gs05TimeFormatPtrInput)(nil)).Elem(), PartnershipX12gs05TimeFormat("HHMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLoggingInput)(nil)).Elem(), ProfileLogging("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileLoggingPtrInput)(nil)).Elem(), ProfileLogging("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerElementRequirementInput)(nil)).Elem(), TransformerElementRequirement("OPTIONAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerElementRequirementPtrInput)(nil)).Elem(), TransformerElementRequirement("OPTIONAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerFileFormatInput)(nil)).Elem(), TransformerFileFormat("XML"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerFileFormatPtrInput)(nil)).Elem(), TransformerFileFormat("XML"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerFromFormatInput)(nil)).Elem(), TransformerFromFormat("X12"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerFromFormatPtrInput)(nil)).Elem(), TransformerFromFormat("X12"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerMappingTemplateLanguageInput)(nil)).Elem(), TransformerMappingTemplateLanguage("XSLT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerMappingTemplateLanguagePtrInput)(nil)).Elem(), TransformerMappingTemplateLanguage("XSLT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerStatusInput)(nil)).Elem(), TransformerStatus("active"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerStatusPtrInput)(nil)).Elem(), TransformerStatus("active"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerToFormatInput)(nil)).Elem(), TransformerToFormat("X12"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerToFormatPtrInput)(nil)).Elem(), TransformerToFormat("X12"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12SplitByInput)(nil)).Elem(), TransformerX12SplitBy("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12SplitByPtrInput)(nil)).Elem(), TransformerX12SplitBy("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12TransactionSetInput)(nil)).Elem(), TransformerX12TransactionSet("X12_100"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12TransactionSetPtrInput)(nil)).Elem(), TransformerX12TransactionSet("X12_100"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12VersionInput)(nil)).Elem(), TransformerX12Version("VERSION_4010"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransformerX12VersionPtrInput)(nil)).Elem(), TransformerX12Version("VERSION_4010"))
	pulumi.RegisterOutputType(CapabilityDirectionOutput{})
	pulumi.RegisterOutputType(CapabilityDirectionPtrOutput{})
	pulumi.RegisterOutputType(CapabilityTypeOutput{})
	pulumi.RegisterOutputType(CapabilityTypePtrOutput{})
	pulumi.RegisterOutputType(CapabilityX12TransactionSetOutput{})
	pulumi.RegisterOutputType(CapabilityX12TransactionSetPtrOutput{})
	pulumi.RegisterOutputType(CapabilityX12VersionOutput{})
	pulumi.RegisterOutputType(CapabilityX12VersionPtrOutput{})
	pulumi.RegisterOutputType(PartnershipLineTerminatorOutput{})
	pulumi.RegisterOutputType(PartnershipLineTerminatorPtrOutput{})
	pulumi.RegisterOutputType(PartnershipWrapFormatOutput{})
	pulumi.RegisterOutputType(PartnershipWrapFormatPtrOutput{})
	pulumi.RegisterOutputType(PartnershipX12FunctionalAcknowledgmentOutput{})
	pulumi.RegisterOutputType(PartnershipX12FunctionalAcknowledgmentPtrOutput{})
	pulumi.RegisterOutputType(PartnershipX12TechnicalAcknowledgmentOutput{})
	pulumi.RegisterOutputType(PartnershipX12TechnicalAcknowledgmentPtrOutput{})
	pulumi.RegisterOutputType(PartnershipX12gs05TimeFormatOutput{})
	pulumi.RegisterOutputType(PartnershipX12gs05TimeFormatPtrOutput{})
	pulumi.RegisterOutputType(ProfileLoggingOutput{})
	pulumi.RegisterOutputType(ProfileLoggingPtrOutput{})
	pulumi.RegisterOutputType(TransformerElementRequirementOutput{})
	pulumi.RegisterOutputType(TransformerElementRequirementPtrOutput{})
	pulumi.RegisterOutputType(TransformerFileFormatOutput{})
	pulumi.RegisterOutputType(TransformerFileFormatPtrOutput{})
	pulumi.RegisterOutputType(TransformerFromFormatOutput{})
	pulumi.RegisterOutputType(TransformerFromFormatPtrOutput{})
	pulumi.RegisterOutputType(TransformerMappingTemplateLanguageOutput{})
	pulumi.RegisterOutputType(TransformerMappingTemplateLanguagePtrOutput{})
	pulumi.RegisterOutputType(TransformerStatusOutput{})
	pulumi.RegisterOutputType(TransformerStatusPtrOutput{})
	pulumi.RegisterOutputType(TransformerToFormatOutput{})
	pulumi.RegisterOutputType(TransformerToFormatPtrOutput{})
	pulumi.RegisterOutputType(TransformerX12SplitByOutput{})
	pulumi.RegisterOutputType(TransformerX12SplitByPtrOutput{})
	pulumi.RegisterOutputType(TransformerX12TransactionSetOutput{})
	pulumi.RegisterOutputType(TransformerX12TransactionSetPtrOutput{})
	pulumi.RegisterOutputType(TransformerX12VersionOutput{})
	pulumi.RegisterOutputType(TransformerX12VersionPtrOutput{})
}
