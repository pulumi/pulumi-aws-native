// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::B2BI::Partnership Resource Type
func LookupPartnership(ctx *pulumi.Context, args *LookupPartnershipArgs, opts ...pulumi.InvokeOption) (*LookupPartnershipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPartnershipResult
	err := ctx.Invoke("aws-native:b2bi:getPartnership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPartnershipArgs struct {
	PartnershipId string `pulumi:"partnershipId"`
}

type LookupPartnershipResult struct {
	Capabilities     []string  `pulumi:"capabilities"`
	CreatedAt        *string   `pulumi:"createdAt"`
	ModifiedAt       *string   `pulumi:"modifiedAt"`
	Name             *string   `pulumi:"name"`
	PartnershipArn   *string   `pulumi:"partnershipArn"`
	PartnershipId    *string   `pulumi:"partnershipId"`
	Tags             []aws.Tag `pulumi:"tags"`
	TradingPartnerId *string   `pulumi:"tradingPartnerId"`
}

func LookupPartnershipOutput(ctx *pulumi.Context, args LookupPartnershipOutputArgs, opts ...pulumi.InvokeOption) LookupPartnershipResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPartnershipResult, error) {
			args := v.(LookupPartnershipArgs)
			r, err := LookupPartnership(ctx, &args, opts...)
			var s LookupPartnershipResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPartnershipResultOutput)
}

type LookupPartnershipOutputArgs struct {
	PartnershipId pulumi.StringInput `pulumi:"partnershipId"`
}

func (LookupPartnershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPartnershipArgs)(nil)).Elem()
}

type LookupPartnershipResultOutput struct{ *pulumi.OutputState }

func (LookupPartnershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPartnershipResult)(nil)).Elem()
}

func (o LookupPartnershipResultOutput) ToLookupPartnershipResultOutput() LookupPartnershipResultOutput {
	return o
}

func (o LookupPartnershipResultOutput) ToLookupPartnershipResultOutputWithContext(ctx context.Context) LookupPartnershipResultOutput {
	return o
}

func (o LookupPartnershipResultOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPartnershipResult) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

func (o LookupPartnershipResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupPartnershipResultOutput) ModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.ModifiedAt }).(pulumi.StringPtrOutput)
}

func (o LookupPartnershipResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupPartnershipResultOutput) PartnershipArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.PartnershipArn }).(pulumi.StringPtrOutput)
}

func (o LookupPartnershipResultOutput) PartnershipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.PartnershipId }).(pulumi.StringPtrOutput)
}

func (o LookupPartnershipResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPartnershipResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupPartnershipResultOutput) TradingPartnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPartnershipResult) *string { return v.TradingPartnerId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPartnershipResultOutput{})
}
