// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::B2BI::Profile Resource Type
type Profile struct {
	pulumi.CustomResourceState

	// Returns the name for the business associated with this profile.
	BusinessName pulumi.StringOutput `pulumi:"businessName"`
	// Returns the timestamp for creation date and time of the profile.
	CreatedAt pulumi.StringOutput    `pulumi:"createdAt"`
	Email     pulumi.StringPtrOutput `pulumi:"email"`
	// Returns the name of the logging group.
	LogGroupName pulumi.StringOutput `pulumi:"logGroupName"`
	// Specifies whether or not logging is enabled for this profile.
	Logging ProfileLoggingOutput `pulumi:"logging"`
	// Returns the timestamp that identifies the most recent date and time that the profile was modified.
	ModifiedAt pulumi.StringOutput `pulumi:"modifiedAt"`
	// Returns the display name for profile.
	Name  pulumi.StringOutput `pulumi:"name"`
	Phone pulumi.StringOutput `pulumi:"phone"`
	// Returns an Amazon Resource Name (ARN) for the profile.
	ProfileArn pulumi.StringOutput `pulumi:"profileArn"`
	ProfileId  pulumi.StringOutput `pulumi:"profileId"`
	// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BusinessName == nil {
		return nil, errors.New("invalid value for required argument 'BusinessName'")
	}
	if args.Logging == nil {
		return nil, errors.New("invalid value for required argument 'Logging'")
	}
	if args.Phone == nil {
		return nil, errors.New("invalid value for required argument 'Phone'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"logging",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("aws-native:b2bi:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("aws-native:b2bi:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
}

type ProfileState struct {
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// Returns the name for the business associated with this profile.
	BusinessName string  `pulumi:"businessName"`
	Email        *string `pulumi:"email"`
	// Specifies whether or not logging is enabled for this profile.
	Logging ProfileLogging `pulumi:"logging"`
	// Returns the display name for profile.
	Name  *string `pulumi:"name"`
	Phone string  `pulumi:"phone"`
	// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// Returns the name for the business associated with this profile.
	BusinessName pulumi.StringInput
	Email        pulumi.StringPtrInput
	// Specifies whether or not logging is enabled for this profile.
	Logging ProfileLoggingInput
	// Returns the display name for profile.
	Name  pulumi.StringPtrInput
	Phone pulumi.StringInput
	// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
	Tags aws.TagArrayInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// Returns the name for the business associated with this profile.
func (o ProfileOutput) BusinessName() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.BusinessName }).(pulumi.StringOutput)
}

// Returns the timestamp for creation date and time of the profile.
func (o ProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ProfileOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

// Returns the name of the logging group.
func (o ProfileOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.LogGroupName }).(pulumi.StringOutput)
}

// Specifies whether or not logging is enabled for this profile.
func (o ProfileOutput) Logging() ProfileLoggingOutput {
	return o.ApplyT(func(v *Profile) ProfileLoggingOutput { return v.Logging }).(ProfileLoggingOutput)
}

// Returns the timestamp that identifies the most recent date and time that the profile was modified.
func (o ProfileOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ModifiedAt }).(pulumi.StringOutput)
}

// Returns the display name for profile.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProfileOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Phone }).(pulumi.StringOutput)
}

// Returns an Amazon Resource Name (ARN) for the profile.
func (o ProfileOutput) ProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ProfileArn }).(pulumi.StringOutput)
}

func (o ProfileOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
func (o ProfileOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Profile) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterOutputType(ProfileOutput{})
}
