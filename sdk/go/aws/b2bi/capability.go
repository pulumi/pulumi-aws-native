// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package b2bi

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::B2BI::Capability Resource Type
type Capability struct {
	pulumi.CustomResourceState

	// Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
	CapabilityArn pulumi.StringOutput `pulumi:"capabilityArn"`
	// Returns a system-assigned unique identifier for the capability.
	CapabilityId pulumi.StringOutput `pulumi:"capabilityId"`
	// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
	Configuration CapabilityConfigurationPropertiesOutput `pulumi:"configuration"`
	// Returns a timestamp for creation date and time of the capability.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
	InstructionsDocuments CapabilityS3LocationArrayOutput `pulumi:"instructionsDocuments"`
	// Returns a timestamp that identifies the most recent date and time that the capability was modified.
	ModifiedAt pulumi.StringOutput `pulumi:"modifiedAt"`
	// The display name of the capability.
	Name pulumi.StringOutput `pulumi:"name"`
	// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Returns the type of the capability. Currently, only `edi` is supported.
	Type CapabilityTypeOutput `pulumi:"type"`
}

// NewCapability registers a new resource with the given unique name, arguments, and options.
func NewCapability(ctx *pulumi.Context,
	name string, args *CapabilityArgs, opts ...pulumi.ResourceOption) (*Capability, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"type",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Capability
	err := ctx.RegisterResource("aws-native:b2bi:Capability", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapability gets an existing Capability resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapability(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapabilityState, opts ...pulumi.ResourceOption) (*Capability, error) {
	var resource Capability
	err := ctx.ReadResource("aws-native:b2bi:Capability", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Capability resources.
type capabilityState struct {
}

type CapabilityState struct {
}

func (CapabilityState) ElementType() reflect.Type {
	return reflect.TypeOf((*capabilityState)(nil)).Elem()
}

type capabilityArgs struct {
	// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
	Configuration CapabilityConfigurationProperties `pulumi:"configuration"`
	// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
	InstructionsDocuments []CapabilityS3Location `pulumi:"instructionsDocuments"`
	// The display name of the capability.
	Name *string `pulumi:"name"`
	// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
	Tags []aws.Tag `pulumi:"tags"`
	// Returns the type of the capability. Currently, only `edi` is supported.
	Type CapabilityType `pulumi:"type"`
}

// The set of arguments for constructing a Capability resource.
type CapabilityArgs struct {
	// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
	Configuration CapabilityConfigurationPropertiesInput
	// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
	InstructionsDocuments CapabilityS3LocationArrayInput
	// The display name of the capability.
	Name pulumi.StringPtrInput
	// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
	Tags aws.TagArrayInput
	// Returns the type of the capability. Currently, only `edi` is supported.
	Type CapabilityTypeInput
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capabilityArgs)(nil)).Elem()
}

type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput
}

func (*Capability) ElementType() reflect.Type {
	return reflect.TypeOf((**Capability)(nil)).Elem()
}

func (i *Capability) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i *Capability) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
func (o CapabilityOutput) CapabilityArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Capability) pulumi.StringOutput { return v.CapabilityArn }).(pulumi.StringOutput)
}

// Returns a system-assigned unique identifier for the capability.
func (o CapabilityOutput) CapabilityId() pulumi.StringOutput {
	return o.ApplyT(func(v *Capability) pulumi.StringOutput { return v.CapabilityId }).(pulumi.StringOutput)
}

// A capability object. Currently, only EDI (electronic data interchange) capabilities are supported. A trading capability contains the information required to transform incoming EDI documents into JSON or XML outputs.
func (o CapabilityOutput) Configuration() CapabilityConfigurationPropertiesOutput {
	return o.ApplyT(func(v *Capability) CapabilityConfigurationPropertiesOutput { return v.Configuration }).(CapabilityConfigurationPropertiesOutput)
}

// Returns a timestamp for creation date and time of the capability.
func (o CapabilityOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Capability) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the details for the Amazon S3 file location that is being used with AWS B2BI Data Interchange. File locations in Amazon S3 are identified using a combination of the bucket and key.
func (o CapabilityOutput) InstructionsDocuments() CapabilityS3LocationArrayOutput {
	return o.ApplyT(func(v *Capability) CapabilityS3LocationArrayOutput { return v.InstructionsDocuments }).(CapabilityS3LocationArrayOutput)
}

// Returns a timestamp that identifies the most recent date and time that the capability was modified.
func (o CapabilityOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Capability) pulumi.StringOutput { return v.ModifiedAt }).(pulumi.StringOutput)
}

// The display name of the capability.
func (o CapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Capability) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A key-value pair for a specific capability. Tags are metadata that you can use to search for and group capabilities for various purposes.
func (o CapabilityOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Capability) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Returns the type of the capability. Currently, only `edi` is supported.
func (o CapabilityOutput) Type() CapabilityTypeOutput {
	return o.ApplyT(func(v *Capability) CapabilityTypeOutput { return v.Type }).(CapabilityTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilityInput)(nil)).Elem(), &Capability{})
	pulumi.RegisterOutputType(CapabilityOutput{})
}
