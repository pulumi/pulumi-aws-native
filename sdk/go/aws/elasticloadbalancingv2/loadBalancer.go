// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElasticLoadBalancingV2::LoadBalancer
//
// Deprecated: LoadBalancer is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type LoadBalancer struct {
	pulumi.CustomResourceState

	CanonicalHostedZoneID  pulumi.StringOutput                          `pulumi:"canonicalHostedZoneID"`
	DNSName                pulumi.StringOutput                          `pulumi:"dNSName"`
	IpAddressType          pulumi.StringPtrOutput                       `pulumi:"ipAddressType"`
	LoadBalancerAttributes LoadBalancerLoadBalancerAttributeArrayOutput `pulumi:"loadBalancerAttributes"`
	LoadBalancerFullName   pulumi.StringOutput                          `pulumi:"loadBalancerFullName"`
	LoadBalancerName       pulumi.StringOutput                          `pulumi:"loadBalancerName"`
	Name                   pulumi.StringPtrOutput                       `pulumi:"name"`
	Scheme                 pulumi.StringPtrOutput                       `pulumi:"scheme"`
	SecurityGroups         pulumi.StringArrayOutput                     `pulumi:"securityGroups"`
	SubnetMappings         LoadBalancerSubnetMappingArrayOutput         `pulumi:"subnetMappings"`
	Subnets                pulumi.StringArrayOutput                     `pulumi:"subnets"`
	Tags                   LoadBalancerTagArrayOutput                   `pulumi:"tags"`
	Type                   pulumi.StringPtrOutput                       `pulumi:"type"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		args = &LoadBalancerArgs{}
	}

	var resource LoadBalancer
	err := ctx.RegisterResource("aws-native:elasticloadbalancingv2:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("aws-native:elasticloadbalancingv2:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
}

type LoadBalancerState struct {
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	IpAddressType          *string                             `pulumi:"ipAddressType"`
	LoadBalancerAttributes []LoadBalancerLoadBalancerAttribute `pulumi:"loadBalancerAttributes"`
	Name                   *string                             `pulumi:"name"`
	Scheme                 *string                             `pulumi:"scheme"`
	SecurityGroups         []string                            `pulumi:"securityGroups"`
	SubnetMappings         []LoadBalancerSubnetMapping         `pulumi:"subnetMappings"`
	Subnets                []string                            `pulumi:"subnets"`
	Tags                   []LoadBalancerTag                   `pulumi:"tags"`
	Type                   *string                             `pulumi:"type"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	IpAddressType          pulumi.StringPtrInput
	LoadBalancerAttributes LoadBalancerLoadBalancerAttributeArrayInput
	Name                   pulumi.StringPtrInput
	Scheme                 pulumi.StringPtrInput
	SecurityGroups         pulumi.StringArrayInput
	SubnetMappings         LoadBalancerSubnetMappingArrayInput
	Subnets                pulumi.StringArrayInput
	Tags                   LoadBalancerTagArrayInput
	Type                   pulumi.StringPtrInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancer)(nil))
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

type LoadBalancerOutput struct{ *pulumi.OutputState }

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancer)(nil))
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LoadBalancerOutput{})
}
