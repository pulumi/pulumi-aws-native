// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElasticLoadBalancingV2::TrustStoreRevocation
type TrustStoreRevocation struct {
	pulumi.CustomResourceState

	// The attributes required to create a trust store revocation.
	RevocationContents TrustStoreRevocationRevocationContentArrayOutput `pulumi:"revocationContents"`
	// The ID associated with the revocation.
	RevocationId pulumi.IntOutput `pulumi:"revocationId"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn pulumi.StringPtrOutput `pulumi:"trustStoreArn"`
	// The data associated with a trust store revocation
	TrustStoreRevocations TrustStoreRevocationTypeArrayOutput `pulumi:"trustStoreRevocations"`
}

// NewTrustStoreRevocation registers a new resource with the given unique name, arguments, and options.
func NewTrustStoreRevocation(ctx *pulumi.Context,
	name string, args *TrustStoreRevocationArgs, opts ...pulumi.ResourceOption) (*TrustStoreRevocation, error) {
	if args == nil {
		args = &TrustStoreRevocationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"revocationContents[*]",
		"trustStoreArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrustStoreRevocation
	err := ctx.RegisterResource("aws-native:elasticloadbalancingv2:TrustStoreRevocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrustStoreRevocation gets an existing TrustStoreRevocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrustStoreRevocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrustStoreRevocationState, opts ...pulumi.ResourceOption) (*TrustStoreRevocation, error) {
	var resource TrustStoreRevocation
	err := ctx.ReadResource("aws-native:elasticloadbalancingv2:TrustStoreRevocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrustStoreRevocation resources.
type trustStoreRevocationState struct {
}

type TrustStoreRevocationState struct {
}

func (TrustStoreRevocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*trustStoreRevocationState)(nil)).Elem()
}

type trustStoreRevocationArgs struct {
	// The attributes required to create a trust store revocation.
	RevocationContents []TrustStoreRevocationRevocationContent `pulumi:"revocationContents"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn *string `pulumi:"trustStoreArn"`
}

// The set of arguments for constructing a TrustStoreRevocation resource.
type TrustStoreRevocationArgs struct {
	// The attributes required to create a trust store revocation.
	RevocationContents TrustStoreRevocationRevocationContentArrayInput
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn pulumi.StringPtrInput
}

func (TrustStoreRevocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trustStoreRevocationArgs)(nil)).Elem()
}

type TrustStoreRevocationInput interface {
	pulumi.Input

	ToTrustStoreRevocationOutput() TrustStoreRevocationOutput
	ToTrustStoreRevocationOutputWithContext(ctx context.Context) TrustStoreRevocationOutput
}

func (*TrustStoreRevocation) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustStoreRevocation)(nil)).Elem()
}

func (i *TrustStoreRevocation) ToTrustStoreRevocationOutput() TrustStoreRevocationOutput {
	return i.ToTrustStoreRevocationOutputWithContext(context.Background())
}

func (i *TrustStoreRevocation) ToTrustStoreRevocationOutputWithContext(ctx context.Context) TrustStoreRevocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustStoreRevocationOutput)
}

type TrustStoreRevocationOutput struct{ *pulumi.OutputState }

func (TrustStoreRevocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustStoreRevocation)(nil)).Elem()
}

func (o TrustStoreRevocationOutput) ToTrustStoreRevocationOutput() TrustStoreRevocationOutput {
	return o
}

func (o TrustStoreRevocationOutput) ToTrustStoreRevocationOutputWithContext(ctx context.Context) TrustStoreRevocationOutput {
	return o
}

// The attributes required to create a trust store revocation.
func (o TrustStoreRevocationOutput) RevocationContents() TrustStoreRevocationRevocationContentArrayOutput {
	return o.ApplyT(func(v *TrustStoreRevocation) TrustStoreRevocationRevocationContentArrayOutput {
		return v.RevocationContents
	}).(TrustStoreRevocationRevocationContentArrayOutput)
}

// The ID associated with the revocation.
func (o TrustStoreRevocationOutput) RevocationId() pulumi.IntOutput {
	return o.ApplyT(func(v *TrustStoreRevocation) pulumi.IntOutput { return v.RevocationId }).(pulumi.IntOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o TrustStoreRevocationOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustStoreRevocation) pulumi.StringPtrOutput { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

// The data associated with a trust store revocation
func (o TrustStoreRevocationOutput) TrustStoreRevocations() TrustStoreRevocationTypeArrayOutput {
	return o.ApplyT(func(v *TrustStoreRevocation) TrustStoreRevocationTypeArrayOutput { return v.TrustStoreRevocations }).(TrustStoreRevocationTypeArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrustStoreRevocationInput)(nil)).Elem(), &TrustStoreRevocation{})
	pulumi.RegisterOutputType(TrustStoreRevocationOutput{})
}
