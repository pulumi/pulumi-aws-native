// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElasticLoadBalancingV2::TrustStoreRevocation
func LookupTrustStoreRevocation(ctx *pulumi.Context, args *LookupTrustStoreRevocationArgs, opts ...pulumi.InvokeOption) (*LookupTrustStoreRevocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTrustStoreRevocationResult
	err := ctx.Invoke("aws-native:elasticloadbalancingv2:getTrustStoreRevocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTrustStoreRevocationArgs struct {
	// The ID associated with the revocation.
	RevocationId int `pulumi:"revocationId"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn string `pulumi:"trustStoreArn"`
}

type LookupTrustStoreRevocationResult struct {
	// The ID associated with the revocation.
	RevocationId *int `pulumi:"revocationId"`
	// The data associated with a trust store revocation
	TrustStoreRevocations []TrustStoreRevocationType `pulumi:"trustStoreRevocations"`
}

func LookupTrustStoreRevocationOutput(ctx *pulumi.Context, args LookupTrustStoreRevocationOutputArgs, opts ...pulumi.InvokeOption) LookupTrustStoreRevocationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrustStoreRevocationResult, error) {
			args := v.(LookupTrustStoreRevocationArgs)
			r, err := LookupTrustStoreRevocation(ctx, &args, opts...)
			var s LookupTrustStoreRevocationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrustStoreRevocationResultOutput)
}

type LookupTrustStoreRevocationOutputArgs struct {
	// The ID associated with the revocation.
	RevocationId pulumi.IntInput `pulumi:"revocationId"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn pulumi.StringInput `pulumi:"trustStoreArn"`
}

func (LookupTrustStoreRevocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreRevocationArgs)(nil)).Elem()
}

type LookupTrustStoreRevocationResultOutput struct{ *pulumi.OutputState }

func (LookupTrustStoreRevocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreRevocationResult)(nil)).Elem()
}

func (o LookupTrustStoreRevocationResultOutput) ToLookupTrustStoreRevocationResultOutput() LookupTrustStoreRevocationResultOutput {
	return o
}

func (o LookupTrustStoreRevocationResultOutput) ToLookupTrustStoreRevocationResultOutputWithContext(ctx context.Context) LookupTrustStoreRevocationResultOutput {
	return o
}

// The ID associated with the revocation.
func (o LookupTrustStoreRevocationResultOutput) RevocationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupTrustStoreRevocationResult) *int { return v.RevocationId }).(pulumi.IntPtrOutput)
}

// The data associated with a trust store revocation
func (o LookupTrustStoreRevocationResultOutput) TrustStoreRevocations() TrustStoreRevocationTypeArrayOutput {
	return o.ApplyT(func(v LookupTrustStoreRevocationResult) []TrustStoreRevocationType { return v.TrustStoreRevocations }).(TrustStoreRevocationTypeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrustStoreRevocationResultOutput{})
}
