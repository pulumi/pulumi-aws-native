// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElasticLoadBalancingV2::TrustStore
func LookupTrustStore(ctx *pulumi.Context, args *LookupTrustStoreArgs, opts ...pulumi.InvokeOption) (*LookupTrustStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTrustStoreResult
	err := ctx.Invoke("aws-native:elasticloadbalancingv2:getTrustStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTrustStoreArgs struct {
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn string `pulumi:"trustStoreArn"`
}

type LookupTrustStoreResult struct {
	// The number of certificates associated with the trust store.
	NumberOfCaCertificates *int `pulumi:"numberOfCaCertificates"`
	// The status of the trust store, could be either of ACTIVE or CREATING.
	Status *string `pulumi:"status"`
	// The tags to assign to the trust store.
	Tags []aws.Tag `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn *string `pulumi:"trustStoreArn"`
}

func LookupTrustStoreOutput(ctx *pulumi.Context, args LookupTrustStoreOutputArgs, opts ...pulumi.InvokeOption) LookupTrustStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrustStoreResult, error) {
			args := v.(LookupTrustStoreArgs)
			r, err := LookupTrustStore(ctx, &args, opts...)
			var s LookupTrustStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrustStoreResultOutput)
}

type LookupTrustStoreOutputArgs struct {
	// The Amazon Resource Name (ARN) of the trust store.
	TrustStoreArn pulumi.StringInput `pulumi:"trustStoreArn"`
}

func (LookupTrustStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreArgs)(nil)).Elem()
}

type LookupTrustStoreResultOutput struct{ *pulumi.OutputState }

func (LookupTrustStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrustStoreResult)(nil)).Elem()
}

func (o LookupTrustStoreResultOutput) ToLookupTrustStoreResultOutput() LookupTrustStoreResultOutput {
	return o
}

func (o LookupTrustStoreResultOutput) ToLookupTrustStoreResultOutputWithContext(ctx context.Context) LookupTrustStoreResultOutput {
	return o
}

// The number of certificates associated with the trust store.
func (o LookupTrustStoreResultOutput) NumberOfCaCertificates() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) *int { return v.NumberOfCaCertificates }).(pulumi.IntPtrOutput)
}

// The status of the trust store, could be either of ACTIVE or CREATING.
func (o LookupTrustStoreResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The tags to assign to the trust store.
func (o LookupTrustStoreResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The Amazon Resource Name (ARN) of the trust store.
func (o LookupTrustStoreResultOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTrustStoreResult) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrustStoreResultOutput{})
}
