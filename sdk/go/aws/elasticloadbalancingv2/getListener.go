// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElasticLoadBalancingV2::Listener
func LookupListener(ctx *pulumi.Context, args *LookupListenerArgs, opts ...pulumi.InvokeOption) (*LookupListenerResult, error) {
	var rv LookupListenerResult
	err := ctx.Invoke("aws-native:elasticloadbalancingv2:getListener", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupListenerArgs struct {
	ListenerArn string `pulumi:"listenerArn"`
}

type LookupListenerResult struct {
	AlpnPolicy     []string                  `pulumi:"alpnPolicy"`
	Certificates   []ListenerCertificateType `pulumi:"certificates"`
	DefaultActions []ListenerAction          `pulumi:"defaultActions"`
	ListenerArn    *string                   `pulumi:"listenerArn"`
	Port           *int                      `pulumi:"port"`
	Protocol       *string                   `pulumi:"protocol"`
	SslPolicy      *string                   `pulumi:"sslPolicy"`
}

func LookupListenerOutput(ctx *pulumi.Context, args LookupListenerOutputArgs, opts ...pulumi.InvokeOption) LookupListenerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupListenerResult, error) {
			args := v.(LookupListenerArgs)
			r, err := LookupListener(ctx, &args, opts...)
			var s LookupListenerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupListenerResultOutput)
}

type LookupListenerOutputArgs struct {
	ListenerArn pulumi.StringInput `pulumi:"listenerArn"`
}

func (LookupListenerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerArgs)(nil)).Elem()
}

type LookupListenerResultOutput struct{ *pulumi.OutputState }

func (LookupListenerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerResult)(nil)).Elem()
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutput() LookupListenerResultOutput {
	return o
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutputWithContext(ctx context.Context) LookupListenerResultOutput {
	return o
}

func (o LookupListenerResultOutput) AlpnPolicy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []string { return v.AlpnPolicy }).(pulumi.StringArrayOutput)
}

func (o LookupListenerResultOutput) Certificates() ListenerCertificateTypeArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []ListenerCertificateType { return v.Certificates }).(ListenerCertificateTypeArrayOutput)
}

func (o LookupListenerResultOutput) DefaultActions() ListenerActionArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []ListenerAction { return v.DefaultActions }).(ListenerActionArrayOutput)
}

func (o LookupListenerResultOutput) ListenerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.ListenerArn }).(pulumi.StringPtrOutput)
}

func (o LookupListenerResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o LookupListenerResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o LookupListenerResultOutput) SslPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.SslPolicy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListenerResultOutput{})
}
