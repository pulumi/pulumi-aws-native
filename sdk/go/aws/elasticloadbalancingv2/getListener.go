// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies a listener for an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer.
func LookupListener(ctx *pulumi.Context, args *LookupListenerArgs, opts ...pulumi.InvokeOption) (*LookupListenerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupListenerResult
	err := ctx.Invoke("aws-native:elasticloadbalancingv2:getListener", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupListenerArgs struct {
	// The Amazon Resource Name (ARN) of the listener.
	ListenerArn string `pulumi:"listenerArn"`
}

type LookupListenerResult struct {
	// [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
	AlpnPolicy []string `pulumi:"alpnPolicy"`
	// The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.
	//  For an HTTPS listener, update requires some interruptions. For a TLS listener, update requires no interruption.
	//  To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).
	Certificates []ListenerCertificate `pulumi:"certificates"`
	// The actions for the default rule. You cannot define a condition for a default rule.
	//  To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).
	DefaultActions []ListenerAction `pulumi:"defaultActions"`
	// The Amazon Resource Name (ARN) of the listener.
	ListenerArn *string `pulumi:"listenerArn"`
	// The listener attributes. Attributes that you do not modify retain their current values.
	ListenerAttributes []ListenerAttribute `pulumi:"listenerAttributes"`
	// The mutual authentication configuration information.
	MutualAuthentication *ListenerMutualAuthentication `pulumi:"mutualAuthentication"`
	// The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer.
	Port *int `pulumi:"port"`
	// The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer.
	Protocol *string `pulumi:"protocol"`
	// [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/describe-ssl-policies.html) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/describe-ssl-policies.html) in the *Network Load Balancers Guide*.
	//  [HTTPS listeners] Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic. To decrease the possibility of an interruption if your load balancer is handling a high volume of traffic, create an additional load balancer or request an LCU reservation.
	SslPolicy *string `pulumi:"sslPolicy"`
}

func LookupListenerOutput(ctx *pulumi.Context, args LookupListenerOutputArgs, opts ...pulumi.InvokeOption) LookupListenerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupListenerResultOutput, error) {
			args := v.(LookupListenerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:elasticloadbalancingv2:getListener", args, LookupListenerResultOutput{}, options).(LookupListenerResultOutput), nil
		}).(LookupListenerResultOutput)
}

type LookupListenerOutputArgs struct {
	// The Amazon Resource Name (ARN) of the listener.
	ListenerArn pulumi.StringInput `pulumi:"listenerArn"`
}

func (LookupListenerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerArgs)(nil)).Elem()
}

type LookupListenerResultOutput struct{ *pulumi.OutputState }

func (LookupListenerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupListenerResult)(nil)).Elem()
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutput() LookupListenerResultOutput {
	return o
}

func (o LookupListenerResultOutput) ToLookupListenerResultOutputWithContext(ctx context.Context) LookupListenerResultOutput {
	return o
}

// [TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.
func (o LookupListenerResultOutput) AlpnPolicy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []string { return v.AlpnPolicy }).(pulumi.StringArrayOutput)
}

// The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.
//
//	For an HTTPS listener, update requires some interruptions. For a TLS listener, update requires no interruption.
//	To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).
func (o LookupListenerResultOutput) Certificates() ListenerCertificateArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []ListenerCertificate { return v.Certificates }).(ListenerCertificateArrayOutput)
}

// The actions for the default rule. You cannot define a condition for a default rule.
//
//	To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).
func (o LookupListenerResultOutput) DefaultActions() ListenerActionArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []ListenerAction { return v.DefaultActions }).(ListenerActionArrayOutput)
}

// The Amazon Resource Name (ARN) of the listener.
func (o LookupListenerResultOutput) ListenerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.ListenerArn }).(pulumi.StringPtrOutput)
}

// The listener attributes. Attributes that you do not modify retain their current values.
func (o LookupListenerResultOutput) ListenerAttributes() ListenerAttributeArrayOutput {
	return o.ApplyT(func(v LookupListenerResult) []ListenerAttribute { return v.ListenerAttributes }).(ListenerAttributeArrayOutput)
}

// The mutual authentication configuration information.
func (o LookupListenerResultOutput) MutualAuthentication() ListenerMutualAuthenticationPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *ListenerMutualAuthentication { return v.MutualAuthentication }).(ListenerMutualAuthenticationPtrOutput)
}

// The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer.
func (o LookupListenerResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer.
func (o LookupListenerResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/describe-ssl-policies.html) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/describe-ssl-policies.html) in the *Network Load Balancers Guide*.
//
//	[HTTPS listeners] Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic. To decrease the possibility of an interruption if your load balancer is handling a high volume of traffic, create an additional load balancer or request an LCU reservation.
func (o LookupListenerResultOutput) SslPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupListenerResult) *string { return v.SslPolicy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupListenerResultOutput{})
}
