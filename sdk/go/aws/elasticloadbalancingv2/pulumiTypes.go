// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ListenerAction struct {
	AuthenticateCognitoConfig *ListenerAuthenticateCognitoConfig `pulumi:"authenticateCognitoConfig"`
	AuthenticateOidcConfig    *ListenerAuthenticateOidcConfig    `pulumi:"authenticateOidcConfig"`
	FixedResponseConfig       *ListenerFixedResponseConfig       `pulumi:"fixedResponseConfig"`
	ForwardConfig             *ListenerForwardConfig             `pulumi:"forwardConfig"`
	Order                     *int                               `pulumi:"order"`
	RedirectConfig            *ListenerRedirectConfig            `pulumi:"redirectConfig"`
	TargetGroupArn            *string                            `pulumi:"targetGroupArn"`
	Type                      string                             `pulumi:"type"`
}

// ListenerActionInput is an input type that accepts ListenerActionArgs and ListenerActionOutput values.
// You can construct a concrete instance of `ListenerActionInput` via:
//
//	ListenerActionArgs{...}
type ListenerActionInput interface {
	pulumi.Input

	ToListenerActionOutput() ListenerActionOutput
	ToListenerActionOutputWithContext(context.Context) ListenerActionOutput
}

type ListenerActionArgs struct {
	AuthenticateCognitoConfig ListenerAuthenticateCognitoConfigPtrInput `pulumi:"authenticateCognitoConfig"`
	AuthenticateOidcConfig    ListenerAuthenticateOidcConfigPtrInput    `pulumi:"authenticateOidcConfig"`
	FixedResponseConfig       ListenerFixedResponseConfigPtrInput       `pulumi:"fixedResponseConfig"`
	ForwardConfig             ListenerForwardConfigPtrInput             `pulumi:"forwardConfig"`
	Order                     pulumi.IntPtrInput                        `pulumi:"order"`
	RedirectConfig            ListenerRedirectConfigPtrInput            `pulumi:"redirectConfig"`
	TargetGroupArn            pulumi.StringPtrInput                     `pulumi:"targetGroupArn"`
	Type                      pulumi.StringInput                        `pulumi:"type"`
}

func (ListenerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAction)(nil)).Elem()
}

func (i ListenerActionArgs) ToListenerActionOutput() ListenerActionOutput {
	return i.ToListenerActionOutputWithContext(context.Background())
}

func (i ListenerActionArgs) ToListenerActionOutputWithContext(ctx context.Context) ListenerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerActionOutput)
}

func (i ListenerActionArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerAction] {
	return pulumix.Output[ListenerAction]{
		OutputState: i.ToListenerActionOutputWithContext(ctx).OutputState,
	}
}

// ListenerActionArrayInput is an input type that accepts ListenerActionArray and ListenerActionArrayOutput values.
// You can construct a concrete instance of `ListenerActionArrayInput` via:
//
//	ListenerActionArray{ ListenerActionArgs{...} }
type ListenerActionArrayInput interface {
	pulumi.Input

	ToListenerActionArrayOutput() ListenerActionArrayOutput
	ToListenerActionArrayOutputWithContext(context.Context) ListenerActionArrayOutput
}

type ListenerActionArray []ListenerActionInput

func (ListenerActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerAction)(nil)).Elem()
}

func (i ListenerActionArray) ToListenerActionArrayOutput() ListenerActionArrayOutput {
	return i.ToListenerActionArrayOutputWithContext(context.Background())
}

func (i ListenerActionArray) ToListenerActionArrayOutputWithContext(ctx context.Context) ListenerActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerActionArrayOutput)
}

func (i ListenerActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerAction] {
	return pulumix.Output[[]ListenerAction]{
		OutputState: i.ToListenerActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerActionOutput struct{ *pulumi.OutputState }

func (ListenerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAction)(nil)).Elem()
}

func (o ListenerActionOutput) ToListenerActionOutput() ListenerActionOutput {
	return o
}

func (o ListenerActionOutput) ToListenerActionOutputWithContext(ctx context.Context) ListenerActionOutput {
	return o
}

func (o ListenerActionOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerAction] {
	return pulumix.Output[ListenerAction]{
		OutputState: o.OutputState,
	}
}

func (o ListenerActionOutput) AuthenticateCognitoConfig() ListenerAuthenticateCognitoConfigPtrOutput {
	return o.ApplyT(func(v ListenerAction) *ListenerAuthenticateCognitoConfig { return v.AuthenticateCognitoConfig }).(ListenerAuthenticateCognitoConfigPtrOutput)
}

func (o ListenerActionOutput) AuthenticateOidcConfig() ListenerAuthenticateOidcConfigPtrOutput {
	return o.ApplyT(func(v ListenerAction) *ListenerAuthenticateOidcConfig { return v.AuthenticateOidcConfig }).(ListenerAuthenticateOidcConfigPtrOutput)
}

func (o ListenerActionOutput) FixedResponseConfig() ListenerFixedResponseConfigPtrOutput {
	return o.ApplyT(func(v ListenerAction) *ListenerFixedResponseConfig { return v.FixedResponseConfig }).(ListenerFixedResponseConfigPtrOutput)
}

func (o ListenerActionOutput) ForwardConfig() ListenerForwardConfigPtrOutput {
	return o.ApplyT(func(v ListenerAction) *ListenerForwardConfig { return v.ForwardConfig }).(ListenerForwardConfigPtrOutput)
}

func (o ListenerActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o ListenerActionOutput) RedirectConfig() ListenerRedirectConfigPtrOutput {
	return o.ApplyT(func(v ListenerAction) *ListenerRedirectConfig { return v.RedirectConfig }).(ListenerRedirectConfigPtrOutput)
}

func (o ListenerActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

func (o ListenerActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerAction)(nil)).Elem()
}

func (o ListenerActionArrayOutput) ToListenerActionArrayOutput() ListenerActionArrayOutput {
	return o
}

func (o ListenerActionArrayOutput) ToListenerActionArrayOutputWithContext(ctx context.Context) ListenerActionArrayOutput {
	return o
}

func (o ListenerActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerAction] {
	return pulumix.Output[[]ListenerAction]{
		OutputState: o.OutputState,
	}
}

func (o ListenerActionArrayOutput) Index(i pulumi.IntInput) ListenerActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerAction {
		return vs[0].([]ListenerAction)[vs[1].(int)]
	}).(ListenerActionOutput)
}

type ListenerAuthenticateCognitoConfig struct {
	AuthenticationRequestExtraParams interface{} `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         *string     `pulumi:"onUnauthenticatedRequest"`
	Scope                            *string     `pulumi:"scope"`
	SessionCookieName                *string     `pulumi:"sessionCookieName"`
	SessionTimeout                   *string     `pulumi:"sessionTimeout"`
	UserPoolArn                      string      `pulumi:"userPoolArn"`
	UserPoolClientId                 string      `pulumi:"userPoolClientId"`
	UserPoolDomain                   string      `pulumi:"userPoolDomain"`
}

// ListenerAuthenticateCognitoConfigInput is an input type that accepts ListenerAuthenticateCognitoConfigArgs and ListenerAuthenticateCognitoConfigOutput values.
// You can construct a concrete instance of `ListenerAuthenticateCognitoConfigInput` via:
//
//	ListenerAuthenticateCognitoConfigArgs{...}
type ListenerAuthenticateCognitoConfigInput interface {
	pulumi.Input

	ToListenerAuthenticateCognitoConfigOutput() ListenerAuthenticateCognitoConfigOutput
	ToListenerAuthenticateCognitoConfigOutputWithContext(context.Context) ListenerAuthenticateCognitoConfigOutput
}

type ListenerAuthenticateCognitoConfigArgs struct {
	AuthenticationRequestExtraParams pulumi.Input          `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringPtrInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.StringPtrInput `pulumi:"sessionTimeout"`
	UserPoolArn                      pulumi.StringInput    `pulumi:"userPoolArn"`
	UserPoolClientId                 pulumi.StringInput    `pulumi:"userPoolClientId"`
	UserPoolDomain                   pulumi.StringInput    `pulumi:"userPoolDomain"`
}

func (ListenerAuthenticateCognitoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAuthenticateCognitoConfig)(nil)).Elem()
}

func (i ListenerAuthenticateCognitoConfigArgs) ToListenerAuthenticateCognitoConfigOutput() ListenerAuthenticateCognitoConfigOutput {
	return i.ToListenerAuthenticateCognitoConfigOutputWithContext(context.Background())
}

func (i ListenerAuthenticateCognitoConfigArgs) ToListenerAuthenticateCognitoConfigOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateCognitoConfigOutput)
}

func (i ListenerAuthenticateCognitoConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerAuthenticateCognitoConfig] {
	return pulumix.Output[ListenerAuthenticateCognitoConfig]{
		OutputState: i.ToListenerAuthenticateCognitoConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerAuthenticateCognitoConfigArgs) ToListenerAuthenticateCognitoConfigPtrOutput() ListenerAuthenticateCognitoConfigPtrOutput {
	return i.ToListenerAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (i ListenerAuthenticateCognitoConfigArgs) ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateCognitoConfigOutput).ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx)
}

// ListenerAuthenticateCognitoConfigPtrInput is an input type that accepts ListenerAuthenticateCognitoConfigArgs, ListenerAuthenticateCognitoConfigPtr and ListenerAuthenticateCognitoConfigPtrOutput values.
// You can construct a concrete instance of `ListenerAuthenticateCognitoConfigPtrInput` via:
//
//	        ListenerAuthenticateCognitoConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerAuthenticateCognitoConfigPtrInput interface {
	pulumi.Input

	ToListenerAuthenticateCognitoConfigPtrOutput() ListenerAuthenticateCognitoConfigPtrOutput
	ToListenerAuthenticateCognitoConfigPtrOutputWithContext(context.Context) ListenerAuthenticateCognitoConfigPtrOutput
}

type listenerAuthenticateCognitoConfigPtrType ListenerAuthenticateCognitoConfigArgs

func ListenerAuthenticateCognitoConfigPtr(v *ListenerAuthenticateCognitoConfigArgs) ListenerAuthenticateCognitoConfigPtrInput {
	return (*listenerAuthenticateCognitoConfigPtrType)(v)
}

func (*listenerAuthenticateCognitoConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerAuthenticateCognitoConfig)(nil)).Elem()
}

func (i *listenerAuthenticateCognitoConfigPtrType) ToListenerAuthenticateCognitoConfigPtrOutput() ListenerAuthenticateCognitoConfigPtrOutput {
	return i.ToListenerAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (i *listenerAuthenticateCognitoConfigPtrType) ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateCognitoConfigPtrOutput)
}

func (i *listenerAuthenticateCognitoConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerAuthenticateCognitoConfig] {
	return pulumix.Output[*ListenerAuthenticateCognitoConfig]{
		OutputState: i.ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerAuthenticateCognitoConfigOutput struct{ *pulumi.OutputState }

func (ListenerAuthenticateCognitoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAuthenticateCognitoConfig)(nil)).Elem()
}

func (o ListenerAuthenticateCognitoConfigOutput) ToListenerAuthenticateCognitoConfigOutput() ListenerAuthenticateCognitoConfigOutput {
	return o
}

func (o ListenerAuthenticateCognitoConfigOutput) ToListenerAuthenticateCognitoConfigOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigOutput {
	return o
}

func (o ListenerAuthenticateCognitoConfigOutput) ToListenerAuthenticateCognitoConfigPtrOutput() ListenerAuthenticateCognitoConfigPtrOutput {
	return o.ToListenerAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (o ListenerAuthenticateCognitoConfigOutput) ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerAuthenticateCognitoConfig) *ListenerAuthenticateCognitoConfig {
		return &v
	}).(ListenerAuthenticateCognitoConfigPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerAuthenticateCognitoConfig] {
	return pulumix.Output[ListenerAuthenticateCognitoConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerAuthenticateCognitoConfigOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) interface{} { return v.AuthenticationRequestExtraParams }).(pulumi.AnyOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) SessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) *string { return v.SessionTimeout }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateCognitoConfigOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateCognitoConfig) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerAuthenticateCognitoConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerAuthenticateCognitoConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerAuthenticateCognitoConfig)(nil)).Elem()
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) ToListenerAuthenticateCognitoConfigPtrOutput() ListenerAuthenticateCognitoConfigPtrOutput {
	return o
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) ToListenerAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateCognitoConfigPtrOutput {
	return o
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerAuthenticateCognitoConfig] {
	return pulumix.Output[*ListenerAuthenticateCognitoConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) Elem() ListenerAuthenticateCognitoConfigOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) ListenerAuthenticateCognitoConfig {
		if v != nil {
			return *v
		}
		var ret ListenerAuthenticateCognitoConfig
		return ret
	}).(ListenerAuthenticateCognitoConfigOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.AnyOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) SessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) UserPoolClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolClientId
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateCognitoConfigPtrOutput) UserPoolDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolDomain
	}).(pulumi.StringPtrOutput)
}

type ListenerAuthenticateOidcConfig struct {
	AuthenticationRequestExtraParams interface{} `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            string      `pulumi:"authorizationEndpoint"`
	ClientId                         string      `pulumi:"clientId"`
	ClientSecret                     *string     `pulumi:"clientSecret"`
	Issuer                           string      `pulumi:"issuer"`
	OnUnauthenticatedRequest         *string     `pulumi:"onUnauthenticatedRequest"`
	Scope                            *string     `pulumi:"scope"`
	SessionCookieName                *string     `pulumi:"sessionCookieName"`
	SessionTimeout                   *string     `pulumi:"sessionTimeout"`
	TokenEndpoint                    string      `pulumi:"tokenEndpoint"`
	UseExistingClientSecret          *bool       `pulumi:"useExistingClientSecret"`
	UserInfoEndpoint                 string      `pulumi:"userInfoEndpoint"`
}

// ListenerAuthenticateOidcConfigInput is an input type that accepts ListenerAuthenticateOidcConfigArgs and ListenerAuthenticateOidcConfigOutput values.
// You can construct a concrete instance of `ListenerAuthenticateOidcConfigInput` via:
//
//	ListenerAuthenticateOidcConfigArgs{...}
type ListenerAuthenticateOidcConfigInput interface {
	pulumi.Input

	ToListenerAuthenticateOidcConfigOutput() ListenerAuthenticateOidcConfigOutput
	ToListenerAuthenticateOidcConfigOutputWithContext(context.Context) ListenerAuthenticateOidcConfigOutput
}

type ListenerAuthenticateOidcConfigArgs struct {
	AuthenticationRequestExtraParams pulumi.Input          `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            pulumi.StringInput    `pulumi:"authorizationEndpoint"`
	ClientId                         pulumi.StringInput    `pulumi:"clientId"`
	ClientSecret                     pulumi.StringPtrInput `pulumi:"clientSecret"`
	Issuer                           pulumi.StringInput    `pulumi:"issuer"`
	OnUnauthenticatedRequest         pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringPtrInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.StringPtrInput `pulumi:"sessionTimeout"`
	TokenEndpoint                    pulumi.StringInput    `pulumi:"tokenEndpoint"`
	UseExistingClientSecret          pulumi.BoolPtrInput   `pulumi:"useExistingClientSecret"`
	UserInfoEndpoint                 pulumi.StringInput    `pulumi:"userInfoEndpoint"`
}

func (ListenerAuthenticateOidcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAuthenticateOidcConfig)(nil)).Elem()
}

func (i ListenerAuthenticateOidcConfigArgs) ToListenerAuthenticateOidcConfigOutput() ListenerAuthenticateOidcConfigOutput {
	return i.ToListenerAuthenticateOidcConfigOutputWithContext(context.Background())
}

func (i ListenerAuthenticateOidcConfigArgs) ToListenerAuthenticateOidcConfigOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateOidcConfigOutput)
}

func (i ListenerAuthenticateOidcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerAuthenticateOidcConfig] {
	return pulumix.Output[ListenerAuthenticateOidcConfig]{
		OutputState: i.ToListenerAuthenticateOidcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerAuthenticateOidcConfigArgs) ToListenerAuthenticateOidcConfigPtrOutput() ListenerAuthenticateOidcConfigPtrOutput {
	return i.ToListenerAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (i ListenerAuthenticateOidcConfigArgs) ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateOidcConfigOutput).ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx)
}

// ListenerAuthenticateOidcConfigPtrInput is an input type that accepts ListenerAuthenticateOidcConfigArgs, ListenerAuthenticateOidcConfigPtr and ListenerAuthenticateOidcConfigPtrOutput values.
// You can construct a concrete instance of `ListenerAuthenticateOidcConfigPtrInput` via:
//
//	        ListenerAuthenticateOidcConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerAuthenticateOidcConfigPtrInput interface {
	pulumi.Input

	ToListenerAuthenticateOidcConfigPtrOutput() ListenerAuthenticateOidcConfigPtrOutput
	ToListenerAuthenticateOidcConfigPtrOutputWithContext(context.Context) ListenerAuthenticateOidcConfigPtrOutput
}

type listenerAuthenticateOidcConfigPtrType ListenerAuthenticateOidcConfigArgs

func ListenerAuthenticateOidcConfigPtr(v *ListenerAuthenticateOidcConfigArgs) ListenerAuthenticateOidcConfigPtrInput {
	return (*listenerAuthenticateOidcConfigPtrType)(v)
}

func (*listenerAuthenticateOidcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerAuthenticateOidcConfig)(nil)).Elem()
}

func (i *listenerAuthenticateOidcConfigPtrType) ToListenerAuthenticateOidcConfigPtrOutput() ListenerAuthenticateOidcConfigPtrOutput {
	return i.ToListenerAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (i *listenerAuthenticateOidcConfigPtrType) ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerAuthenticateOidcConfigPtrOutput)
}

func (i *listenerAuthenticateOidcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerAuthenticateOidcConfig] {
	return pulumix.Output[*ListenerAuthenticateOidcConfig]{
		OutputState: i.ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerAuthenticateOidcConfigOutput struct{ *pulumi.OutputState }

func (ListenerAuthenticateOidcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerAuthenticateOidcConfig)(nil)).Elem()
}

func (o ListenerAuthenticateOidcConfigOutput) ToListenerAuthenticateOidcConfigOutput() ListenerAuthenticateOidcConfigOutput {
	return o
}

func (o ListenerAuthenticateOidcConfigOutput) ToListenerAuthenticateOidcConfigOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigOutput {
	return o
}

func (o ListenerAuthenticateOidcConfigOutput) ToListenerAuthenticateOidcConfigPtrOutput() ListenerAuthenticateOidcConfigPtrOutput {
	return o.ToListenerAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (o ListenerAuthenticateOidcConfigOutput) ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerAuthenticateOidcConfig) *ListenerAuthenticateOidcConfig {
		return &v
	}).(ListenerAuthenticateOidcConfigPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerAuthenticateOidcConfig] {
	return pulumix.Output[ListenerAuthenticateOidcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerAuthenticateOidcConfigOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) interface{} { return v.AuthenticationRequestExtraParams }).(pulumi.AnyOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) SessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *string { return v.SessionTimeout }).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) UseExistingClientSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) *bool { return v.UseExistingClientSecret }).(pulumi.BoolPtrOutput)
}

func (o ListenerAuthenticateOidcConfigOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerAuthenticateOidcConfig) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerAuthenticateOidcConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerAuthenticateOidcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerAuthenticateOidcConfig)(nil)).Elem()
}

func (o ListenerAuthenticateOidcConfigPtrOutput) ToListenerAuthenticateOidcConfigPtrOutput() ListenerAuthenticateOidcConfigPtrOutput {
	return o
}

func (o ListenerAuthenticateOidcConfigPtrOutput) ToListenerAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerAuthenticateOidcConfigPtrOutput {
	return o
}

func (o ListenerAuthenticateOidcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerAuthenticateOidcConfig] {
	return pulumix.Output[*ListenerAuthenticateOidcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerAuthenticateOidcConfigPtrOutput) Elem() ListenerAuthenticateOidcConfigOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) ListenerAuthenticateOidcConfig {
		if v != nil {
			return *v
		}
		var ret ListenerAuthenticateOidcConfig
		return ret
	}).(ListenerAuthenticateOidcConfigOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.AnyOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) SessionTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) UseExistingClientSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseExistingClientSecret
	}).(pulumi.BoolPtrOutput)
}

func (o ListenerAuthenticateOidcConfigPtrOutput) UserInfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserInfoEndpoint
	}).(pulumi.StringPtrOutput)
}

type ListenerCertificateType struct {
	CertificateArn *string `pulumi:"certificateArn"`
}

// ListenerCertificateTypeInput is an input type that accepts ListenerCertificateTypeArgs and ListenerCertificateTypeOutput values.
// You can construct a concrete instance of `ListenerCertificateTypeInput` via:
//
//	ListenerCertificateTypeArgs{...}
type ListenerCertificateTypeInput interface {
	pulumi.Input

	ToListenerCertificateTypeOutput() ListenerCertificateTypeOutput
	ToListenerCertificateTypeOutputWithContext(context.Context) ListenerCertificateTypeOutput
}

type ListenerCertificateTypeArgs struct {
	CertificateArn pulumi.StringPtrInput `pulumi:"certificateArn"`
}

func (ListenerCertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificateType)(nil)).Elem()
}

func (i ListenerCertificateTypeArgs) ToListenerCertificateTypeOutput() ListenerCertificateTypeOutput {
	return i.ToListenerCertificateTypeOutputWithContext(context.Background())
}

func (i ListenerCertificateTypeArgs) ToListenerCertificateTypeOutputWithContext(ctx context.Context) ListenerCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateTypeOutput)
}

func (i ListenerCertificateTypeArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerCertificateType] {
	return pulumix.Output[ListenerCertificateType]{
		OutputState: i.ToListenerCertificateTypeOutputWithContext(ctx).OutputState,
	}
}

// ListenerCertificateTypeArrayInput is an input type that accepts ListenerCertificateTypeArray and ListenerCertificateTypeArrayOutput values.
// You can construct a concrete instance of `ListenerCertificateTypeArrayInput` via:
//
//	ListenerCertificateTypeArray{ ListenerCertificateTypeArgs{...} }
type ListenerCertificateTypeArrayInput interface {
	pulumi.Input

	ToListenerCertificateTypeArrayOutput() ListenerCertificateTypeArrayOutput
	ToListenerCertificateTypeArrayOutputWithContext(context.Context) ListenerCertificateTypeArrayOutput
}

type ListenerCertificateTypeArray []ListenerCertificateTypeInput

func (ListenerCertificateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificateType)(nil)).Elem()
}

func (i ListenerCertificateTypeArray) ToListenerCertificateTypeArrayOutput() ListenerCertificateTypeArrayOutput {
	return i.ToListenerCertificateTypeArrayOutputWithContext(context.Background())
}

func (i ListenerCertificateTypeArray) ToListenerCertificateTypeArrayOutputWithContext(ctx context.Context) ListenerCertificateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateTypeArrayOutput)
}

func (i ListenerCertificateTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerCertificateType] {
	return pulumix.Output[[]ListenerCertificateType]{
		OutputState: i.ToListenerCertificateTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerCertificateTypeOutput struct{ *pulumi.OutputState }

func (ListenerCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificateType)(nil)).Elem()
}

func (o ListenerCertificateTypeOutput) ToListenerCertificateTypeOutput() ListenerCertificateTypeOutput {
	return o
}

func (o ListenerCertificateTypeOutput) ToListenerCertificateTypeOutputWithContext(ctx context.Context) ListenerCertificateTypeOutput {
	return o
}

func (o ListenerCertificateTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerCertificateType] {
	return pulumix.Output[ListenerCertificateType]{
		OutputState: o.OutputState,
	}
}

func (o ListenerCertificateTypeOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerCertificateType) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

type ListenerCertificateTypeArrayOutput struct{ *pulumi.OutputState }

func (ListenerCertificateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificateType)(nil)).Elem()
}

func (o ListenerCertificateTypeArrayOutput) ToListenerCertificateTypeArrayOutput() ListenerCertificateTypeArrayOutput {
	return o
}

func (o ListenerCertificateTypeArrayOutput) ToListenerCertificateTypeArrayOutputWithContext(ctx context.Context) ListenerCertificateTypeArrayOutput {
	return o
}

func (o ListenerCertificateTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerCertificateType] {
	return pulumix.Output[[]ListenerCertificateType]{
		OutputState: o.OutputState,
	}
}

func (o ListenerCertificateTypeArrayOutput) Index(i pulumi.IntInput) ListenerCertificateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerCertificateType {
		return vs[0].([]ListenerCertificateType)[vs[1].(int)]
	}).(ListenerCertificateTypeOutput)
}

type ListenerCertificateCertificate struct {
	CertificateArn *string `pulumi:"certificateArn"`
}

// ListenerCertificateCertificateInput is an input type that accepts ListenerCertificateCertificateArgs and ListenerCertificateCertificateOutput values.
// You can construct a concrete instance of `ListenerCertificateCertificateInput` via:
//
//	ListenerCertificateCertificateArgs{...}
type ListenerCertificateCertificateInput interface {
	pulumi.Input

	ToListenerCertificateCertificateOutput() ListenerCertificateCertificateOutput
	ToListenerCertificateCertificateOutputWithContext(context.Context) ListenerCertificateCertificateOutput
}

type ListenerCertificateCertificateArgs struct {
	CertificateArn pulumi.StringPtrInput `pulumi:"certificateArn"`
}

func (ListenerCertificateCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificateCertificate)(nil)).Elem()
}

func (i ListenerCertificateCertificateArgs) ToListenerCertificateCertificateOutput() ListenerCertificateCertificateOutput {
	return i.ToListenerCertificateCertificateOutputWithContext(context.Background())
}

func (i ListenerCertificateCertificateArgs) ToListenerCertificateCertificateOutputWithContext(ctx context.Context) ListenerCertificateCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateCertificateOutput)
}

func (i ListenerCertificateCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerCertificateCertificate] {
	return pulumix.Output[ListenerCertificateCertificate]{
		OutputState: i.ToListenerCertificateCertificateOutputWithContext(ctx).OutputState,
	}
}

// ListenerCertificateCertificateArrayInput is an input type that accepts ListenerCertificateCertificateArray and ListenerCertificateCertificateArrayOutput values.
// You can construct a concrete instance of `ListenerCertificateCertificateArrayInput` via:
//
//	ListenerCertificateCertificateArray{ ListenerCertificateCertificateArgs{...} }
type ListenerCertificateCertificateArrayInput interface {
	pulumi.Input

	ToListenerCertificateCertificateArrayOutput() ListenerCertificateCertificateArrayOutput
	ToListenerCertificateCertificateArrayOutputWithContext(context.Context) ListenerCertificateCertificateArrayOutput
}

type ListenerCertificateCertificateArray []ListenerCertificateCertificateInput

func (ListenerCertificateCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificateCertificate)(nil)).Elem()
}

func (i ListenerCertificateCertificateArray) ToListenerCertificateCertificateArrayOutput() ListenerCertificateCertificateArrayOutput {
	return i.ToListenerCertificateCertificateArrayOutputWithContext(context.Background())
}

func (i ListenerCertificateCertificateArray) ToListenerCertificateCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateCertificateArrayOutput)
}

func (i ListenerCertificateCertificateArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerCertificateCertificate] {
	return pulumix.Output[[]ListenerCertificateCertificate]{
		OutputState: i.ToListenerCertificateCertificateArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerCertificateCertificateOutput struct{ *pulumi.OutputState }

func (ListenerCertificateCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificateCertificate)(nil)).Elem()
}

func (o ListenerCertificateCertificateOutput) ToListenerCertificateCertificateOutput() ListenerCertificateCertificateOutput {
	return o
}

func (o ListenerCertificateCertificateOutput) ToListenerCertificateCertificateOutputWithContext(ctx context.Context) ListenerCertificateCertificateOutput {
	return o
}

func (o ListenerCertificateCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerCertificateCertificate] {
	return pulumix.Output[ListenerCertificateCertificate]{
		OutputState: o.OutputState,
	}
}

func (o ListenerCertificateCertificateOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerCertificateCertificate) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

type ListenerCertificateCertificateArrayOutput struct{ *pulumi.OutputState }

func (ListenerCertificateCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificateCertificate)(nil)).Elem()
}

func (o ListenerCertificateCertificateArrayOutput) ToListenerCertificateCertificateArrayOutput() ListenerCertificateCertificateArrayOutput {
	return o
}

func (o ListenerCertificateCertificateArrayOutput) ToListenerCertificateCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateCertificateArrayOutput {
	return o
}

func (o ListenerCertificateCertificateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerCertificateCertificate] {
	return pulumix.Output[[]ListenerCertificateCertificate]{
		OutputState: o.OutputState,
	}
}

func (o ListenerCertificateCertificateArrayOutput) Index(i pulumi.IntInput) ListenerCertificateCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerCertificateCertificate {
		return vs[0].([]ListenerCertificateCertificate)[vs[1].(int)]
	}).(ListenerCertificateCertificateOutput)
}

type ListenerFixedResponseConfig struct {
	ContentType *string `pulumi:"contentType"`
	MessageBody *string `pulumi:"messageBody"`
	StatusCode  string  `pulumi:"statusCode"`
}

// ListenerFixedResponseConfigInput is an input type that accepts ListenerFixedResponseConfigArgs and ListenerFixedResponseConfigOutput values.
// You can construct a concrete instance of `ListenerFixedResponseConfigInput` via:
//
//	ListenerFixedResponseConfigArgs{...}
type ListenerFixedResponseConfigInput interface {
	pulumi.Input

	ToListenerFixedResponseConfigOutput() ListenerFixedResponseConfigOutput
	ToListenerFixedResponseConfigOutputWithContext(context.Context) ListenerFixedResponseConfigOutput
}

type ListenerFixedResponseConfigArgs struct {
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	StatusCode  pulumi.StringInput    `pulumi:"statusCode"`
}

func (ListenerFixedResponseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerFixedResponseConfig)(nil)).Elem()
}

func (i ListenerFixedResponseConfigArgs) ToListenerFixedResponseConfigOutput() ListenerFixedResponseConfigOutput {
	return i.ToListenerFixedResponseConfigOutputWithContext(context.Background())
}

func (i ListenerFixedResponseConfigArgs) ToListenerFixedResponseConfigOutputWithContext(ctx context.Context) ListenerFixedResponseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerFixedResponseConfigOutput)
}

func (i ListenerFixedResponseConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerFixedResponseConfig] {
	return pulumix.Output[ListenerFixedResponseConfig]{
		OutputState: i.ToListenerFixedResponseConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerFixedResponseConfigArgs) ToListenerFixedResponseConfigPtrOutput() ListenerFixedResponseConfigPtrOutput {
	return i.ToListenerFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i ListenerFixedResponseConfigArgs) ToListenerFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerFixedResponseConfigOutput).ToListenerFixedResponseConfigPtrOutputWithContext(ctx)
}

// ListenerFixedResponseConfigPtrInput is an input type that accepts ListenerFixedResponseConfigArgs, ListenerFixedResponseConfigPtr and ListenerFixedResponseConfigPtrOutput values.
// You can construct a concrete instance of `ListenerFixedResponseConfigPtrInput` via:
//
//	        ListenerFixedResponseConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerFixedResponseConfigPtrInput interface {
	pulumi.Input

	ToListenerFixedResponseConfigPtrOutput() ListenerFixedResponseConfigPtrOutput
	ToListenerFixedResponseConfigPtrOutputWithContext(context.Context) ListenerFixedResponseConfigPtrOutput
}

type listenerFixedResponseConfigPtrType ListenerFixedResponseConfigArgs

func ListenerFixedResponseConfigPtr(v *ListenerFixedResponseConfigArgs) ListenerFixedResponseConfigPtrInput {
	return (*listenerFixedResponseConfigPtrType)(v)
}

func (*listenerFixedResponseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerFixedResponseConfig)(nil)).Elem()
}

func (i *listenerFixedResponseConfigPtrType) ToListenerFixedResponseConfigPtrOutput() ListenerFixedResponseConfigPtrOutput {
	return i.ToListenerFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i *listenerFixedResponseConfigPtrType) ToListenerFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerFixedResponseConfigPtrOutput)
}

func (i *listenerFixedResponseConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerFixedResponseConfig] {
	return pulumix.Output[*ListenerFixedResponseConfig]{
		OutputState: i.ToListenerFixedResponseConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerFixedResponseConfigOutput struct{ *pulumi.OutputState }

func (ListenerFixedResponseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerFixedResponseConfig)(nil)).Elem()
}

func (o ListenerFixedResponseConfigOutput) ToListenerFixedResponseConfigOutput() ListenerFixedResponseConfigOutput {
	return o
}

func (o ListenerFixedResponseConfigOutput) ToListenerFixedResponseConfigOutputWithContext(ctx context.Context) ListenerFixedResponseConfigOutput {
	return o
}

func (o ListenerFixedResponseConfigOutput) ToListenerFixedResponseConfigPtrOutput() ListenerFixedResponseConfigPtrOutput {
	return o.ToListenerFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (o ListenerFixedResponseConfigOutput) ToListenerFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerFixedResponseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerFixedResponseConfig) *ListenerFixedResponseConfig {
		return &v
	}).(ListenerFixedResponseConfigPtrOutput)
}

func (o ListenerFixedResponseConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerFixedResponseConfig] {
	return pulumix.Output[ListenerFixedResponseConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerFixedResponseConfigOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerFixedResponseConfig) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o ListenerFixedResponseConfigOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerFixedResponseConfig) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o ListenerFixedResponseConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerFixedResponseConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerFixedResponseConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerFixedResponseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerFixedResponseConfig)(nil)).Elem()
}

func (o ListenerFixedResponseConfigPtrOutput) ToListenerFixedResponseConfigPtrOutput() ListenerFixedResponseConfigPtrOutput {
	return o
}

func (o ListenerFixedResponseConfigPtrOutput) ToListenerFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerFixedResponseConfigPtrOutput {
	return o
}

func (o ListenerFixedResponseConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerFixedResponseConfig] {
	return pulumix.Output[*ListenerFixedResponseConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerFixedResponseConfigPtrOutput) Elem() ListenerFixedResponseConfigOutput {
	return o.ApplyT(func(v *ListenerFixedResponseConfig) ListenerFixedResponseConfig {
		if v != nil {
			return *v
		}
		var ret ListenerFixedResponseConfig
		return ret
	}).(ListenerFixedResponseConfigOutput)
}

func (o ListenerFixedResponseConfigPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o ListenerFixedResponseConfigPtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

func (o ListenerFixedResponseConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerForwardConfig struct {
	TargetGroupStickinessConfig *ListenerTargetGroupStickinessConfig `pulumi:"targetGroupStickinessConfig"`
	TargetGroups                []ListenerTargetGroupTuple           `pulumi:"targetGroups"`
}

// ListenerForwardConfigInput is an input type that accepts ListenerForwardConfigArgs and ListenerForwardConfigOutput values.
// You can construct a concrete instance of `ListenerForwardConfigInput` via:
//
//	ListenerForwardConfigArgs{...}
type ListenerForwardConfigInput interface {
	pulumi.Input

	ToListenerForwardConfigOutput() ListenerForwardConfigOutput
	ToListenerForwardConfigOutputWithContext(context.Context) ListenerForwardConfigOutput
}

type ListenerForwardConfigArgs struct {
	TargetGroupStickinessConfig ListenerTargetGroupStickinessConfigPtrInput `pulumi:"targetGroupStickinessConfig"`
	TargetGroups                ListenerTargetGroupTupleArrayInput          `pulumi:"targetGroups"`
}

func (ListenerForwardConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerForwardConfig)(nil)).Elem()
}

func (i ListenerForwardConfigArgs) ToListenerForwardConfigOutput() ListenerForwardConfigOutput {
	return i.ToListenerForwardConfigOutputWithContext(context.Background())
}

func (i ListenerForwardConfigArgs) ToListenerForwardConfigOutputWithContext(ctx context.Context) ListenerForwardConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerForwardConfigOutput)
}

func (i ListenerForwardConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerForwardConfig] {
	return pulumix.Output[ListenerForwardConfig]{
		OutputState: i.ToListenerForwardConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerForwardConfigArgs) ToListenerForwardConfigPtrOutput() ListenerForwardConfigPtrOutput {
	return i.ToListenerForwardConfigPtrOutputWithContext(context.Background())
}

func (i ListenerForwardConfigArgs) ToListenerForwardConfigPtrOutputWithContext(ctx context.Context) ListenerForwardConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerForwardConfigOutput).ToListenerForwardConfigPtrOutputWithContext(ctx)
}

// ListenerForwardConfigPtrInput is an input type that accepts ListenerForwardConfigArgs, ListenerForwardConfigPtr and ListenerForwardConfigPtrOutput values.
// You can construct a concrete instance of `ListenerForwardConfigPtrInput` via:
//
//	        ListenerForwardConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerForwardConfigPtrInput interface {
	pulumi.Input

	ToListenerForwardConfigPtrOutput() ListenerForwardConfigPtrOutput
	ToListenerForwardConfigPtrOutputWithContext(context.Context) ListenerForwardConfigPtrOutput
}

type listenerForwardConfigPtrType ListenerForwardConfigArgs

func ListenerForwardConfigPtr(v *ListenerForwardConfigArgs) ListenerForwardConfigPtrInput {
	return (*listenerForwardConfigPtrType)(v)
}

func (*listenerForwardConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerForwardConfig)(nil)).Elem()
}

func (i *listenerForwardConfigPtrType) ToListenerForwardConfigPtrOutput() ListenerForwardConfigPtrOutput {
	return i.ToListenerForwardConfigPtrOutputWithContext(context.Background())
}

func (i *listenerForwardConfigPtrType) ToListenerForwardConfigPtrOutputWithContext(ctx context.Context) ListenerForwardConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerForwardConfigPtrOutput)
}

func (i *listenerForwardConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerForwardConfig] {
	return pulumix.Output[*ListenerForwardConfig]{
		OutputState: i.ToListenerForwardConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerForwardConfigOutput struct{ *pulumi.OutputState }

func (ListenerForwardConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerForwardConfig)(nil)).Elem()
}

func (o ListenerForwardConfigOutput) ToListenerForwardConfigOutput() ListenerForwardConfigOutput {
	return o
}

func (o ListenerForwardConfigOutput) ToListenerForwardConfigOutputWithContext(ctx context.Context) ListenerForwardConfigOutput {
	return o
}

func (o ListenerForwardConfigOutput) ToListenerForwardConfigPtrOutput() ListenerForwardConfigPtrOutput {
	return o.ToListenerForwardConfigPtrOutputWithContext(context.Background())
}

func (o ListenerForwardConfigOutput) ToListenerForwardConfigPtrOutputWithContext(ctx context.Context) ListenerForwardConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerForwardConfig) *ListenerForwardConfig {
		return &v
	}).(ListenerForwardConfigPtrOutput)
}

func (o ListenerForwardConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerForwardConfig] {
	return pulumix.Output[ListenerForwardConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerForwardConfigOutput) TargetGroupStickinessConfig() ListenerTargetGroupStickinessConfigPtrOutput {
	return o.ApplyT(func(v ListenerForwardConfig) *ListenerTargetGroupStickinessConfig {
		return v.TargetGroupStickinessConfig
	}).(ListenerTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerForwardConfigOutput) TargetGroups() ListenerTargetGroupTupleArrayOutput {
	return o.ApplyT(func(v ListenerForwardConfig) []ListenerTargetGroupTuple { return v.TargetGroups }).(ListenerTargetGroupTupleArrayOutput)
}

type ListenerForwardConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerForwardConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerForwardConfig)(nil)).Elem()
}

func (o ListenerForwardConfigPtrOutput) ToListenerForwardConfigPtrOutput() ListenerForwardConfigPtrOutput {
	return o
}

func (o ListenerForwardConfigPtrOutput) ToListenerForwardConfigPtrOutputWithContext(ctx context.Context) ListenerForwardConfigPtrOutput {
	return o
}

func (o ListenerForwardConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerForwardConfig] {
	return pulumix.Output[*ListenerForwardConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerForwardConfigPtrOutput) Elem() ListenerForwardConfigOutput {
	return o.ApplyT(func(v *ListenerForwardConfig) ListenerForwardConfig {
		if v != nil {
			return *v
		}
		var ret ListenerForwardConfig
		return ret
	}).(ListenerForwardConfigOutput)
}

func (o ListenerForwardConfigPtrOutput) TargetGroupStickinessConfig() ListenerTargetGroupStickinessConfigPtrOutput {
	return o.ApplyT(func(v *ListenerForwardConfig) *ListenerTargetGroupStickinessConfig {
		if v == nil {
			return nil
		}
		return v.TargetGroupStickinessConfig
	}).(ListenerTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerForwardConfigPtrOutput) TargetGroups() ListenerTargetGroupTupleArrayOutput {
	return o.ApplyT(func(v *ListenerForwardConfig) []ListenerTargetGroupTuple {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(ListenerTargetGroupTupleArrayOutput)
}

type ListenerMutualAuthentication struct {
	IgnoreClientCertificateExpiry *bool   `pulumi:"ignoreClientCertificateExpiry"`
	Mode                          *string `pulumi:"mode"`
	TrustStoreArn                 *string `pulumi:"trustStoreArn"`
}

// ListenerMutualAuthenticationInput is an input type that accepts ListenerMutualAuthenticationArgs and ListenerMutualAuthenticationOutput values.
// You can construct a concrete instance of `ListenerMutualAuthenticationInput` via:
//
//	ListenerMutualAuthenticationArgs{...}
type ListenerMutualAuthenticationInput interface {
	pulumi.Input

	ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput
	ToListenerMutualAuthenticationOutputWithContext(context.Context) ListenerMutualAuthenticationOutput
}

type ListenerMutualAuthenticationArgs struct {
	IgnoreClientCertificateExpiry pulumi.BoolPtrInput   `pulumi:"ignoreClientCertificateExpiry"`
	Mode                          pulumi.StringPtrInput `pulumi:"mode"`
	TrustStoreArn                 pulumi.StringPtrInput `pulumi:"trustStoreArn"`
}

func (ListenerMutualAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerMutualAuthentication)(nil)).Elem()
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput {
	return i.ToListenerMutualAuthenticationOutputWithContext(context.Background())
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationOutputWithContext(ctx context.Context) ListenerMutualAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationOutput)
}

func (i ListenerMutualAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerMutualAuthentication] {
	return pulumix.Output[ListenerMutualAuthentication]{
		OutputState: i.ToListenerMutualAuthenticationOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return i.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i ListenerMutualAuthenticationArgs) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationOutput).ToListenerMutualAuthenticationPtrOutputWithContext(ctx)
}

// ListenerMutualAuthenticationPtrInput is an input type that accepts ListenerMutualAuthenticationArgs, ListenerMutualAuthenticationPtr and ListenerMutualAuthenticationPtrOutput values.
// You can construct a concrete instance of `ListenerMutualAuthenticationPtrInput` via:
//
//	        ListenerMutualAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ListenerMutualAuthenticationPtrInput interface {
	pulumi.Input

	ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput
	ToListenerMutualAuthenticationPtrOutputWithContext(context.Context) ListenerMutualAuthenticationPtrOutput
}

type listenerMutualAuthenticationPtrType ListenerMutualAuthenticationArgs

func ListenerMutualAuthenticationPtr(v *ListenerMutualAuthenticationArgs) ListenerMutualAuthenticationPtrInput {
	return (*listenerMutualAuthenticationPtrType)(v)
}

func (*listenerMutualAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerMutualAuthentication)(nil)).Elem()
}

func (i *listenerMutualAuthenticationPtrType) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return i.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (i *listenerMutualAuthenticationPtrType) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerMutualAuthenticationPtrOutput)
}

func (i *listenerMutualAuthenticationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerMutualAuthentication] {
	return pulumix.Output[*ListenerMutualAuthentication]{
		OutputState: i.ToListenerMutualAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerMutualAuthenticationOutput struct{ *pulumi.OutputState }

func (ListenerMutualAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerMutualAuthentication)(nil)).Elem()
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationOutput() ListenerMutualAuthenticationOutput {
	return o
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationOutputWithContext(ctx context.Context) ListenerMutualAuthenticationOutput {
	return o
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return o.ToListenerMutualAuthenticationPtrOutputWithContext(context.Background())
}

func (o ListenerMutualAuthenticationOutput) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerMutualAuthentication) *ListenerMutualAuthentication {
		return &v
	}).(ListenerMutualAuthenticationPtrOutput)
}

func (o ListenerMutualAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerMutualAuthentication] {
	return pulumix.Output[ListenerMutualAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o ListenerMutualAuthenticationOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) *bool { return v.IgnoreClientCertificateExpiry }).(pulumi.BoolPtrOutput)
}

func (o ListenerMutualAuthenticationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ListenerMutualAuthenticationOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerMutualAuthentication) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

type ListenerMutualAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ListenerMutualAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerMutualAuthentication)(nil)).Elem()
}

func (o ListenerMutualAuthenticationPtrOutput) ToListenerMutualAuthenticationPtrOutput() ListenerMutualAuthenticationPtrOutput {
	return o
}

func (o ListenerMutualAuthenticationPtrOutput) ToListenerMutualAuthenticationPtrOutputWithContext(ctx context.Context) ListenerMutualAuthenticationPtrOutput {
	return o
}

func (o ListenerMutualAuthenticationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerMutualAuthentication] {
	return pulumix.Output[*ListenerMutualAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o ListenerMutualAuthenticationPtrOutput) Elem() ListenerMutualAuthenticationOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) ListenerMutualAuthentication {
		if v != nil {
			return *v
		}
		var ret ListenerMutualAuthentication
		return ret
	}).(ListenerMutualAuthenticationOutput)
}

func (o ListenerMutualAuthenticationPtrOutput) IgnoreClientCertificateExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreClientCertificateExpiry
	}).(pulumi.BoolPtrOutput)
}

func (o ListenerMutualAuthenticationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ListenerMutualAuthenticationPtrOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerMutualAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TrustStoreArn
	}).(pulumi.StringPtrOutput)
}

type ListenerRedirectConfig struct {
	Host       *string `pulumi:"host"`
	Path       *string `pulumi:"path"`
	Port       *string `pulumi:"port"`
	Protocol   *string `pulumi:"protocol"`
	Query      *string `pulumi:"query"`
	StatusCode string  `pulumi:"statusCode"`
}

// ListenerRedirectConfigInput is an input type that accepts ListenerRedirectConfigArgs and ListenerRedirectConfigOutput values.
// You can construct a concrete instance of `ListenerRedirectConfigInput` via:
//
//	ListenerRedirectConfigArgs{...}
type ListenerRedirectConfigInput interface {
	pulumi.Input

	ToListenerRedirectConfigOutput() ListenerRedirectConfigOutput
	ToListenerRedirectConfigOutputWithContext(context.Context) ListenerRedirectConfigOutput
}

type ListenerRedirectConfigArgs struct {
	Host       pulumi.StringPtrInput `pulumi:"host"`
	Path       pulumi.StringPtrInput `pulumi:"path"`
	Port       pulumi.StringPtrInput `pulumi:"port"`
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	Query      pulumi.StringPtrInput `pulumi:"query"`
	StatusCode pulumi.StringInput    `pulumi:"statusCode"`
}

func (ListenerRedirectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRedirectConfig)(nil)).Elem()
}

func (i ListenerRedirectConfigArgs) ToListenerRedirectConfigOutput() ListenerRedirectConfigOutput {
	return i.ToListenerRedirectConfigOutputWithContext(context.Background())
}

func (i ListenerRedirectConfigArgs) ToListenerRedirectConfigOutputWithContext(ctx context.Context) ListenerRedirectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRedirectConfigOutput)
}

func (i ListenerRedirectConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRedirectConfig] {
	return pulumix.Output[ListenerRedirectConfig]{
		OutputState: i.ToListenerRedirectConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRedirectConfigArgs) ToListenerRedirectConfigPtrOutput() ListenerRedirectConfigPtrOutput {
	return i.ToListenerRedirectConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRedirectConfigArgs) ToListenerRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRedirectConfigOutput).ToListenerRedirectConfigPtrOutputWithContext(ctx)
}

// ListenerRedirectConfigPtrInput is an input type that accepts ListenerRedirectConfigArgs, ListenerRedirectConfigPtr and ListenerRedirectConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRedirectConfigPtrInput` via:
//
//	        ListenerRedirectConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRedirectConfigPtrInput interface {
	pulumi.Input

	ToListenerRedirectConfigPtrOutput() ListenerRedirectConfigPtrOutput
	ToListenerRedirectConfigPtrOutputWithContext(context.Context) ListenerRedirectConfigPtrOutput
}

type listenerRedirectConfigPtrType ListenerRedirectConfigArgs

func ListenerRedirectConfigPtr(v *ListenerRedirectConfigArgs) ListenerRedirectConfigPtrInput {
	return (*listenerRedirectConfigPtrType)(v)
}

func (*listenerRedirectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRedirectConfig)(nil)).Elem()
}

func (i *listenerRedirectConfigPtrType) ToListenerRedirectConfigPtrOutput() ListenerRedirectConfigPtrOutput {
	return i.ToListenerRedirectConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRedirectConfigPtrType) ToListenerRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRedirectConfigPtrOutput)
}

func (i *listenerRedirectConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRedirectConfig] {
	return pulumix.Output[*ListenerRedirectConfig]{
		OutputState: i.ToListenerRedirectConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRedirectConfigOutput struct{ *pulumi.OutputState }

func (ListenerRedirectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRedirectConfig)(nil)).Elem()
}

func (o ListenerRedirectConfigOutput) ToListenerRedirectConfigOutput() ListenerRedirectConfigOutput {
	return o
}

func (o ListenerRedirectConfigOutput) ToListenerRedirectConfigOutputWithContext(ctx context.Context) ListenerRedirectConfigOutput {
	return o
}

func (o ListenerRedirectConfigOutput) ToListenerRedirectConfigPtrOutput() ListenerRedirectConfigPtrOutput {
	return o.ToListenerRedirectConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRedirectConfigOutput) ToListenerRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRedirectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRedirectConfig) *ListenerRedirectConfig {
		return &v
	}).(ListenerRedirectConfigPtrOutput)
}

func (o ListenerRedirectConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRedirectConfig] {
	return pulumix.Output[ListenerRedirectConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRedirectConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRedirectConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRedirectConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRedirectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRedirectConfig)(nil)).Elem()
}

func (o ListenerRedirectConfigPtrOutput) ToListenerRedirectConfigPtrOutput() ListenerRedirectConfigPtrOutput {
	return o
}

func (o ListenerRedirectConfigPtrOutput) ToListenerRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRedirectConfigPtrOutput {
	return o
}

func (o ListenerRedirectConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRedirectConfig] {
	return pulumix.Output[*ListenerRedirectConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRedirectConfigPtrOutput) Elem() ListenerRedirectConfigOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) ListenerRedirectConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRedirectConfig
		return ret
	}).(ListenerRedirectConfigOutput)
}

func (o ListenerRedirectConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRedirectConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleAction struct {
	AuthenticateCognitoConfig *ListenerRuleAuthenticateCognitoConfig `pulumi:"authenticateCognitoConfig"`
	AuthenticateOidcConfig    *ListenerRuleAuthenticateOidcConfig    `pulumi:"authenticateOidcConfig"`
	FixedResponseConfig       *ListenerRuleFixedResponseConfig       `pulumi:"fixedResponseConfig"`
	ForwardConfig             *ListenerRuleForwardConfig             `pulumi:"forwardConfig"`
	Order                     *int                                   `pulumi:"order"`
	RedirectConfig            *ListenerRuleRedirectConfig            `pulumi:"redirectConfig"`
	TargetGroupArn            *string                                `pulumi:"targetGroupArn"`
	Type                      string                                 `pulumi:"type"`
}

// ListenerRuleActionInput is an input type that accepts ListenerRuleActionArgs and ListenerRuleActionOutput values.
// You can construct a concrete instance of `ListenerRuleActionInput` via:
//
//	ListenerRuleActionArgs{...}
type ListenerRuleActionInput interface {
	pulumi.Input

	ToListenerRuleActionOutput() ListenerRuleActionOutput
	ToListenerRuleActionOutputWithContext(context.Context) ListenerRuleActionOutput
}

type ListenerRuleActionArgs struct {
	AuthenticateCognitoConfig ListenerRuleAuthenticateCognitoConfigPtrInput `pulumi:"authenticateCognitoConfig"`
	AuthenticateOidcConfig    ListenerRuleAuthenticateOidcConfigPtrInput    `pulumi:"authenticateOidcConfig"`
	FixedResponseConfig       ListenerRuleFixedResponseConfigPtrInput       `pulumi:"fixedResponseConfig"`
	ForwardConfig             ListenerRuleForwardConfigPtrInput             `pulumi:"forwardConfig"`
	Order                     pulumi.IntPtrInput                            `pulumi:"order"`
	RedirectConfig            ListenerRuleRedirectConfigPtrInput            `pulumi:"redirectConfig"`
	TargetGroupArn            pulumi.StringPtrInput                         `pulumi:"targetGroupArn"`
	Type                      pulumi.StringInput                            `pulumi:"type"`
}

func (ListenerRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return i.ToListenerRuleActionOutputWithContext(context.Background())
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionOutput)
}

func (i ListenerRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAction] {
	return pulumix.Output[ListenerRuleAction]{
		OutputState: i.ToListenerRuleActionOutputWithContext(ctx).OutputState,
	}
}

// ListenerRuleActionArrayInput is an input type that accepts ListenerRuleActionArray and ListenerRuleActionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleActionArrayInput` via:
//
//	ListenerRuleActionArray{ ListenerRuleActionArgs{...} }
type ListenerRuleActionArrayInput interface {
	pulumi.Input

	ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput
	ToListenerRuleActionArrayOutputWithContext(context.Context) ListenerRuleActionArrayOutput
}

type ListenerRuleActionArray []ListenerRuleActionInput

func (ListenerRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return i.ToListenerRuleActionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionArrayOutput)
}

func (i ListenerRuleActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleAction] {
	return pulumix.Output[[]ListenerRuleAction]{
		OutputState: i.ToListenerRuleActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleActionOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return o
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return o
}

func (o ListenerRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAction] {
	return pulumix.Output[ListenerRuleAction]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleActionOutput) AuthenticateCognitoConfig() ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleAuthenticateCognitoConfig { return v.AuthenticateCognitoConfig }).(ListenerRuleAuthenticateCognitoConfigPtrOutput)
}

func (o ListenerRuleActionOutput) AuthenticateOidcConfig() ListenerRuleAuthenticateOidcConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleAuthenticateOidcConfig { return v.AuthenticateOidcConfig }).(ListenerRuleAuthenticateOidcConfigPtrOutput)
}

func (o ListenerRuleActionOutput) FixedResponseConfig() ListenerRuleFixedResponseConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleFixedResponseConfig { return v.FixedResponseConfig }).(ListenerRuleFixedResponseConfigPtrOutput)
}

func (o ListenerRuleActionOutput) ForwardConfig() ListenerRuleForwardConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleForwardConfig { return v.ForwardConfig }).(ListenerRuleForwardConfigPtrOutput)
}

func (o ListenerRuleActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o ListenerRuleActionOutput) RedirectConfig() ListenerRuleRedirectConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleRedirectConfig { return v.RedirectConfig }).(ListenerRuleRedirectConfigPtrOutput)
}

func (o ListenerRuleActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleAction] {
	return pulumix.Output[[]ListenerRuleAction]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleActionArrayOutput) Index(i pulumi.IntInput) ListenerRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleAction {
		return vs[0].([]ListenerRuleAction)[vs[1].(int)]
	}).(ListenerRuleActionOutput)
}

type ListenerRuleAuthenticateCognitoConfig struct {
	AuthenticationRequestExtraParams interface{} `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         *string     `pulumi:"onUnauthenticatedRequest"`
	Scope                            *string     `pulumi:"scope"`
	SessionCookieName                *string     `pulumi:"sessionCookieName"`
	SessionTimeout                   *int        `pulumi:"sessionTimeout"`
	UserPoolArn                      string      `pulumi:"userPoolArn"`
	UserPoolClientId                 string      `pulumi:"userPoolClientId"`
	UserPoolDomain                   string      `pulumi:"userPoolDomain"`
}

// ListenerRuleAuthenticateCognitoConfigInput is an input type that accepts ListenerRuleAuthenticateCognitoConfigArgs and ListenerRuleAuthenticateCognitoConfigOutput values.
// You can construct a concrete instance of `ListenerRuleAuthenticateCognitoConfigInput` via:
//
//	ListenerRuleAuthenticateCognitoConfigArgs{...}
type ListenerRuleAuthenticateCognitoConfigInput interface {
	pulumi.Input

	ToListenerRuleAuthenticateCognitoConfigOutput() ListenerRuleAuthenticateCognitoConfigOutput
	ToListenerRuleAuthenticateCognitoConfigOutputWithContext(context.Context) ListenerRuleAuthenticateCognitoConfigOutput
}

type ListenerRuleAuthenticateCognitoConfigArgs struct {
	AuthenticationRequestExtraParams pulumi.Input          `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringPtrInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntPtrInput    `pulumi:"sessionTimeout"`
	UserPoolArn                      pulumi.StringInput    `pulumi:"userPoolArn"`
	UserPoolClientId                 pulumi.StringInput    `pulumi:"userPoolClientId"`
	UserPoolDomain                   pulumi.StringInput    `pulumi:"userPoolDomain"`
}

func (ListenerRuleAuthenticateCognitoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAuthenticateCognitoConfig)(nil)).Elem()
}

func (i ListenerRuleAuthenticateCognitoConfigArgs) ToListenerRuleAuthenticateCognitoConfigOutput() ListenerRuleAuthenticateCognitoConfigOutput {
	return i.ToListenerRuleAuthenticateCognitoConfigOutputWithContext(context.Background())
}

func (i ListenerRuleAuthenticateCognitoConfigArgs) ToListenerRuleAuthenticateCognitoConfigOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateCognitoConfigOutput)
}

func (i ListenerRuleAuthenticateCognitoConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAuthenticateCognitoConfig] {
	return pulumix.Output[ListenerRuleAuthenticateCognitoConfig]{
		OutputState: i.ToListenerRuleAuthenticateCognitoConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleAuthenticateCognitoConfigArgs) ToListenerRuleAuthenticateCognitoConfigPtrOutput() ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return i.ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleAuthenticateCognitoConfigArgs) ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateCognitoConfigOutput).ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx)
}

// ListenerRuleAuthenticateCognitoConfigPtrInput is an input type that accepts ListenerRuleAuthenticateCognitoConfigArgs, ListenerRuleAuthenticateCognitoConfigPtr and ListenerRuleAuthenticateCognitoConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleAuthenticateCognitoConfigPtrInput` via:
//
//	        ListenerRuleAuthenticateCognitoConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleAuthenticateCognitoConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleAuthenticateCognitoConfigPtrOutput() ListenerRuleAuthenticateCognitoConfigPtrOutput
	ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(context.Context) ListenerRuleAuthenticateCognitoConfigPtrOutput
}

type listenerRuleAuthenticateCognitoConfigPtrType ListenerRuleAuthenticateCognitoConfigArgs

func ListenerRuleAuthenticateCognitoConfigPtr(v *ListenerRuleAuthenticateCognitoConfigArgs) ListenerRuleAuthenticateCognitoConfigPtrInput {
	return (*listenerRuleAuthenticateCognitoConfigPtrType)(v)
}

func (*listenerRuleAuthenticateCognitoConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleAuthenticateCognitoConfig)(nil)).Elem()
}

func (i *listenerRuleAuthenticateCognitoConfigPtrType) ToListenerRuleAuthenticateCognitoConfigPtrOutput() ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return i.ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleAuthenticateCognitoConfigPtrType) ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateCognitoConfigPtrOutput)
}

func (i *listenerRuleAuthenticateCognitoConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleAuthenticateCognitoConfig] {
	return pulumix.Output[*ListenerRuleAuthenticateCognitoConfig]{
		OutputState: i.ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleAuthenticateCognitoConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleAuthenticateCognitoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAuthenticateCognitoConfig)(nil)).Elem()
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) ToListenerRuleAuthenticateCognitoConfigOutput() ListenerRuleAuthenticateCognitoConfigOutput {
	return o
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) ToListenerRuleAuthenticateCognitoConfigOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigOutput {
	return o
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) ToListenerRuleAuthenticateCognitoConfigPtrOutput() ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return o.ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleAuthenticateCognitoConfig) *ListenerRuleAuthenticateCognitoConfig {
		return &v
	}).(ListenerRuleAuthenticateCognitoConfigPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAuthenticateCognitoConfig] {
	return pulumix.Output[ListenerRuleAuthenticateCognitoConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) interface{} { return v.AuthenticationRequestExtraParams }).(pulumi.AnyOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateCognitoConfig) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerRuleAuthenticateCognitoConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleAuthenticateCognitoConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleAuthenticateCognitoConfig)(nil)).Elem()
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) ToListenerRuleAuthenticateCognitoConfigPtrOutput() ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return o
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) ToListenerRuleAuthenticateCognitoConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateCognitoConfigPtrOutput {
	return o
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleAuthenticateCognitoConfig] {
	return pulumix.Output[*ListenerRuleAuthenticateCognitoConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) Elem() ListenerRuleAuthenticateCognitoConfigOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) ListenerRuleAuthenticateCognitoConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleAuthenticateCognitoConfig
		return ret
	}).(ListenerRuleAuthenticateCognitoConfigOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.AnyOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) UserPoolArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolArn
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) UserPoolClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolClientId
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateCognitoConfigPtrOutput) UserPoolDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolDomain
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleAuthenticateOidcConfig struct {
	AuthenticationRequestExtraParams interface{} `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            string      `pulumi:"authorizationEndpoint"`
	ClientId                         string      `pulumi:"clientId"`
	ClientSecret                     *string     `pulumi:"clientSecret"`
	Issuer                           string      `pulumi:"issuer"`
	OnUnauthenticatedRequest         *string     `pulumi:"onUnauthenticatedRequest"`
	Scope                            *string     `pulumi:"scope"`
	SessionCookieName                *string     `pulumi:"sessionCookieName"`
	SessionTimeout                   *int        `pulumi:"sessionTimeout"`
	TokenEndpoint                    string      `pulumi:"tokenEndpoint"`
	UseExistingClientSecret          *bool       `pulumi:"useExistingClientSecret"`
	UserInfoEndpoint                 string      `pulumi:"userInfoEndpoint"`
}

// ListenerRuleAuthenticateOidcConfigInput is an input type that accepts ListenerRuleAuthenticateOidcConfigArgs and ListenerRuleAuthenticateOidcConfigOutput values.
// You can construct a concrete instance of `ListenerRuleAuthenticateOidcConfigInput` via:
//
//	ListenerRuleAuthenticateOidcConfigArgs{...}
type ListenerRuleAuthenticateOidcConfigInput interface {
	pulumi.Input

	ToListenerRuleAuthenticateOidcConfigOutput() ListenerRuleAuthenticateOidcConfigOutput
	ToListenerRuleAuthenticateOidcConfigOutputWithContext(context.Context) ListenerRuleAuthenticateOidcConfigOutput
}

type ListenerRuleAuthenticateOidcConfigArgs struct {
	AuthenticationRequestExtraParams pulumi.Input          `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            pulumi.StringInput    `pulumi:"authorizationEndpoint"`
	ClientId                         pulumi.StringInput    `pulumi:"clientId"`
	ClientSecret                     pulumi.StringPtrInput `pulumi:"clientSecret"`
	Issuer                           pulumi.StringInput    `pulumi:"issuer"`
	OnUnauthenticatedRequest         pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringPtrInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntPtrInput    `pulumi:"sessionTimeout"`
	TokenEndpoint                    pulumi.StringInput    `pulumi:"tokenEndpoint"`
	UseExistingClientSecret          pulumi.BoolPtrInput   `pulumi:"useExistingClientSecret"`
	UserInfoEndpoint                 pulumi.StringInput    `pulumi:"userInfoEndpoint"`
}

func (ListenerRuleAuthenticateOidcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAuthenticateOidcConfig)(nil)).Elem()
}

func (i ListenerRuleAuthenticateOidcConfigArgs) ToListenerRuleAuthenticateOidcConfigOutput() ListenerRuleAuthenticateOidcConfigOutput {
	return i.ToListenerRuleAuthenticateOidcConfigOutputWithContext(context.Background())
}

func (i ListenerRuleAuthenticateOidcConfigArgs) ToListenerRuleAuthenticateOidcConfigOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateOidcConfigOutput)
}

func (i ListenerRuleAuthenticateOidcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAuthenticateOidcConfig] {
	return pulumix.Output[ListenerRuleAuthenticateOidcConfig]{
		OutputState: i.ToListenerRuleAuthenticateOidcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleAuthenticateOidcConfigArgs) ToListenerRuleAuthenticateOidcConfigPtrOutput() ListenerRuleAuthenticateOidcConfigPtrOutput {
	return i.ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleAuthenticateOidcConfigArgs) ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateOidcConfigOutput).ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx)
}

// ListenerRuleAuthenticateOidcConfigPtrInput is an input type that accepts ListenerRuleAuthenticateOidcConfigArgs, ListenerRuleAuthenticateOidcConfigPtr and ListenerRuleAuthenticateOidcConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleAuthenticateOidcConfigPtrInput` via:
//
//	        ListenerRuleAuthenticateOidcConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleAuthenticateOidcConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleAuthenticateOidcConfigPtrOutput() ListenerRuleAuthenticateOidcConfigPtrOutput
	ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(context.Context) ListenerRuleAuthenticateOidcConfigPtrOutput
}

type listenerRuleAuthenticateOidcConfigPtrType ListenerRuleAuthenticateOidcConfigArgs

func ListenerRuleAuthenticateOidcConfigPtr(v *ListenerRuleAuthenticateOidcConfigArgs) ListenerRuleAuthenticateOidcConfigPtrInput {
	return (*listenerRuleAuthenticateOidcConfigPtrType)(v)
}

func (*listenerRuleAuthenticateOidcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleAuthenticateOidcConfig)(nil)).Elem()
}

func (i *listenerRuleAuthenticateOidcConfigPtrType) ToListenerRuleAuthenticateOidcConfigPtrOutput() ListenerRuleAuthenticateOidcConfigPtrOutput {
	return i.ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleAuthenticateOidcConfigPtrType) ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleAuthenticateOidcConfigPtrOutput)
}

func (i *listenerRuleAuthenticateOidcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleAuthenticateOidcConfig] {
	return pulumix.Output[*ListenerRuleAuthenticateOidcConfig]{
		OutputState: i.ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleAuthenticateOidcConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleAuthenticateOidcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAuthenticateOidcConfig)(nil)).Elem()
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ToListenerRuleAuthenticateOidcConfigOutput() ListenerRuleAuthenticateOidcConfigOutput {
	return o
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ToListenerRuleAuthenticateOidcConfigOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigOutput {
	return o
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ToListenerRuleAuthenticateOidcConfigPtrOutput() ListenerRuleAuthenticateOidcConfigPtrOutput {
	return o.ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleAuthenticateOidcConfig) *ListenerRuleAuthenticateOidcConfig {
		return &v
	}).(ListenerRuleAuthenticateOidcConfigPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleAuthenticateOidcConfig] {
	return pulumix.Output[ListenerRuleAuthenticateOidcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleAuthenticateOidcConfigOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) interface{} { return v.AuthenticationRequestExtraParams }).(pulumi.AnyOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) UseExistingClientSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) *bool { return v.UseExistingClientSecret }).(pulumi.BoolPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAuthenticateOidcConfig) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerRuleAuthenticateOidcConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleAuthenticateOidcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleAuthenticateOidcConfig)(nil)).Elem()
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) ToListenerRuleAuthenticateOidcConfigPtrOutput() ListenerRuleAuthenticateOidcConfigPtrOutput {
	return o
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) ToListenerRuleAuthenticateOidcConfigPtrOutputWithContext(ctx context.Context) ListenerRuleAuthenticateOidcConfigPtrOutput {
	return o
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleAuthenticateOidcConfig] {
	return pulumix.Output[*ListenerRuleAuthenticateOidcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) Elem() ListenerRuleAuthenticateOidcConfigOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) ListenerRuleAuthenticateOidcConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleAuthenticateOidcConfig
		return ret
	}).(ListenerRuleAuthenticateOidcConfigOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) AuthenticationRequestExtraParams() pulumi.AnyOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.AuthenticationRequestExtraParams
	}).(pulumi.AnyOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.OnUnauthenticatedRequest
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return v.SessionCookieName
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeout
	}).(pulumi.IntPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) UseExistingClientSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseExistingClientSecret
	}).(pulumi.BoolPtrOutput)
}

func (o ListenerRuleAuthenticateOidcConfigPtrOutput) UserInfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleAuthenticateOidcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserInfoEndpoint
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleFixedResponseConfig struct {
	ContentType *string `pulumi:"contentType"`
	MessageBody *string `pulumi:"messageBody"`
	StatusCode  string  `pulumi:"statusCode"`
}

// ListenerRuleFixedResponseConfigInput is an input type that accepts ListenerRuleFixedResponseConfigArgs and ListenerRuleFixedResponseConfigOutput values.
// You can construct a concrete instance of `ListenerRuleFixedResponseConfigInput` via:
//
//	ListenerRuleFixedResponseConfigArgs{...}
type ListenerRuleFixedResponseConfigInput interface {
	pulumi.Input

	ToListenerRuleFixedResponseConfigOutput() ListenerRuleFixedResponseConfigOutput
	ToListenerRuleFixedResponseConfigOutputWithContext(context.Context) ListenerRuleFixedResponseConfigOutput
}

type ListenerRuleFixedResponseConfigArgs struct {
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	StatusCode  pulumi.StringInput    `pulumi:"statusCode"`
}

func (ListenerRuleFixedResponseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleFixedResponseConfig)(nil)).Elem()
}

func (i ListenerRuleFixedResponseConfigArgs) ToListenerRuleFixedResponseConfigOutput() ListenerRuleFixedResponseConfigOutput {
	return i.ToListenerRuleFixedResponseConfigOutputWithContext(context.Background())
}

func (i ListenerRuleFixedResponseConfigArgs) ToListenerRuleFixedResponseConfigOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleFixedResponseConfigOutput)
}

func (i ListenerRuleFixedResponseConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleFixedResponseConfig] {
	return pulumix.Output[ListenerRuleFixedResponseConfig]{
		OutputState: i.ToListenerRuleFixedResponseConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleFixedResponseConfigArgs) ToListenerRuleFixedResponseConfigPtrOutput() ListenerRuleFixedResponseConfigPtrOutput {
	return i.ToListenerRuleFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleFixedResponseConfigArgs) ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleFixedResponseConfigOutput).ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx)
}

// ListenerRuleFixedResponseConfigPtrInput is an input type that accepts ListenerRuleFixedResponseConfigArgs, ListenerRuleFixedResponseConfigPtr and ListenerRuleFixedResponseConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleFixedResponseConfigPtrInput` via:
//
//	        ListenerRuleFixedResponseConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleFixedResponseConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleFixedResponseConfigPtrOutput() ListenerRuleFixedResponseConfigPtrOutput
	ToListenerRuleFixedResponseConfigPtrOutputWithContext(context.Context) ListenerRuleFixedResponseConfigPtrOutput
}

type listenerRuleFixedResponseConfigPtrType ListenerRuleFixedResponseConfigArgs

func ListenerRuleFixedResponseConfigPtr(v *ListenerRuleFixedResponseConfigArgs) ListenerRuleFixedResponseConfigPtrInput {
	return (*listenerRuleFixedResponseConfigPtrType)(v)
}

func (*listenerRuleFixedResponseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleFixedResponseConfig)(nil)).Elem()
}

func (i *listenerRuleFixedResponseConfigPtrType) ToListenerRuleFixedResponseConfigPtrOutput() ListenerRuleFixedResponseConfigPtrOutput {
	return i.ToListenerRuleFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleFixedResponseConfigPtrType) ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleFixedResponseConfigPtrOutput)
}

func (i *listenerRuleFixedResponseConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleFixedResponseConfig] {
	return pulumix.Output[*ListenerRuleFixedResponseConfig]{
		OutputState: i.ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleFixedResponseConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleFixedResponseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleFixedResponseConfig)(nil)).Elem()
}

func (o ListenerRuleFixedResponseConfigOutput) ToListenerRuleFixedResponseConfigOutput() ListenerRuleFixedResponseConfigOutput {
	return o
}

func (o ListenerRuleFixedResponseConfigOutput) ToListenerRuleFixedResponseConfigOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigOutput {
	return o
}

func (o ListenerRuleFixedResponseConfigOutput) ToListenerRuleFixedResponseConfigPtrOutput() ListenerRuleFixedResponseConfigPtrOutput {
	return o.ToListenerRuleFixedResponseConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleFixedResponseConfigOutput) ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleFixedResponseConfig) *ListenerRuleFixedResponseConfig {
		return &v
	}).(ListenerRuleFixedResponseConfigPtrOutput)
}

func (o ListenerRuleFixedResponseConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleFixedResponseConfig] {
	return pulumix.Output[ListenerRuleFixedResponseConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleFixedResponseConfigOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleFixedResponseConfig) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleFixedResponseConfigOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleFixedResponseConfig) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleFixedResponseConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleFixedResponseConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleFixedResponseConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleFixedResponseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleFixedResponseConfig)(nil)).Elem()
}

func (o ListenerRuleFixedResponseConfigPtrOutput) ToListenerRuleFixedResponseConfigPtrOutput() ListenerRuleFixedResponseConfigPtrOutput {
	return o
}

func (o ListenerRuleFixedResponseConfigPtrOutput) ToListenerRuleFixedResponseConfigPtrOutputWithContext(ctx context.Context) ListenerRuleFixedResponseConfigPtrOutput {
	return o
}

func (o ListenerRuleFixedResponseConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleFixedResponseConfig] {
	return pulumix.Output[*ListenerRuleFixedResponseConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleFixedResponseConfigPtrOutput) Elem() ListenerRuleFixedResponseConfigOutput {
	return o.ApplyT(func(v *ListenerRuleFixedResponseConfig) ListenerRuleFixedResponseConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleFixedResponseConfig
		return ret
	}).(ListenerRuleFixedResponseConfigOutput)
}

func (o ListenerRuleFixedResponseConfigPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleFixedResponseConfigPtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return v.MessageBody
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleFixedResponseConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleFixedResponseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleForwardConfig struct {
	TargetGroupStickinessConfig *ListenerRuleTargetGroupStickinessConfig `pulumi:"targetGroupStickinessConfig"`
	TargetGroups                []ListenerRuleTargetGroupTuple           `pulumi:"targetGroups"`
}

// ListenerRuleForwardConfigInput is an input type that accepts ListenerRuleForwardConfigArgs and ListenerRuleForwardConfigOutput values.
// You can construct a concrete instance of `ListenerRuleForwardConfigInput` via:
//
//	ListenerRuleForwardConfigArgs{...}
type ListenerRuleForwardConfigInput interface {
	pulumi.Input

	ToListenerRuleForwardConfigOutput() ListenerRuleForwardConfigOutput
	ToListenerRuleForwardConfigOutputWithContext(context.Context) ListenerRuleForwardConfigOutput
}

type ListenerRuleForwardConfigArgs struct {
	TargetGroupStickinessConfig ListenerRuleTargetGroupStickinessConfigPtrInput `pulumi:"targetGroupStickinessConfig"`
	TargetGroups                ListenerRuleTargetGroupTupleArrayInput          `pulumi:"targetGroups"`
}

func (ListenerRuleForwardConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleForwardConfig)(nil)).Elem()
}

func (i ListenerRuleForwardConfigArgs) ToListenerRuleForwardConfigOutput() ListenerRuleForwardConfigOutput {
	return i.ToListenerRuleForwardConfigOutputWithContext(context.Background())
}

func (i ListenerRuleForwardConfigArgs) ToListenerRuleForwardConfigOutputWithContext(ctx context.Context) ListenerRuleForwardConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleForwardConfigOutput)
}

func (i ListenerRuleForwardConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleForwardConfig] {
	return pulumix.Output[ListenerRuleForwardConfig]{
		OutputState: i.ToListenerRuleForwardConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleForwardConfigArgs) ToListenerRuleForwardConfigPtrOutput() ListenerRuleForwardConfigPtrOutput {
	return i.ToListenerRuleForwardConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleForwardConfigArgs) ToListenerRuleForwardConfigPtrOutputWithContext(ctx context.Context) ListenerRuleForwardConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleForwardConfigOutput).ToListenerRuleForwardConfigPtrOutputWithContext(ctx)
}

// ListenerRuleForwardConfigPtrInput is an input type that accepts ListenerRuleForwardConfigArgs, ListenerRuleForwardConfigPtr and ListenerRuleForwardConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleForwardConfigPtrInput` via:
//
//	        ListenerRuleForwardConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleForwardConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleForwardConfigPtrOutput() ListenerRuleForwardConfigPtrOutput
	ToListenerRuleForwardConfigPtrOutputWithContext(context.Context) ListenerRuleForwardConfigPtrOutput
}

type listenerRuleForwardConfigPtrType ListenerRuleForwardConfigArgs

func ListenerRuleForwardConfigPtr(v *ListenerRuleForwardConfigArgs) ListenerRuleForwardConfigPtrInput {
	return (*listenerRuleForwardConfigPtrType)(v)
}

func (*listenerRuleForwardConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleForwardConfig)(nil)).Elem()
}

func (i *listenerRuleForwardConfigPtrType) ToListenerRuleForwardConfigPtrOutput() ListenerRuleForwardConfigPtrOutput {
	return i.ToListenerRuleForwardConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleForwardConfigPtrType) ToListenerRuleForwardConfigPtrOutputWithContext(ctx context.Context) ListenerRuleForwardConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleForwardConfigPtrOutput)
}

func (i *listenerRuleForwardConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleForwardConfig] {
	return pulumix.Output[*ListenerRuleForwardConfig]{
		OutputState: i.ToListenerRuleForwardConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleForwardConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleForwardConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleForwardConfig)(nil)).Elem()
}

func (o ListenerRuleForwardConfigOutput) ToListenerRuleForwardConfigOutput() ListenerRuleForwardConfigOutput {
	return o
}

func (o ListenerRuleForwardConfigOutput) ToListenerRuleForwardConfigOutputWithContext(ctx context.Context) ListenerRuleForwardConfigOutput {
	return o
}

func (o ListenerRuleForwardConfigOutput) ToListenerRuleForwardConfigPtrOutput() ListenerRuleForwardConfigPtrOutput {
	return o.ToListenerRuleForwardConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleForwardConfigOutput) ToListenerRuleForwardConfigPtrOutputWithContext(ctx context.Context) ListenerRuleForwardConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleForwardConfig) *ListenerRuleForwardConfig {
		return &v
	}).(ListenerRuleForwardConfigPtrOutput)
}

func (o ListenerRuleForwardConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleForwardConfig] {
	return pulumix.Output[ListenerRuleForwardConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleForwardConfigOutput) TargetGroupStickinessConfig() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleForwardConfig) *ListenerRuleTargetGroupStickinessConfig {
		return v.TargetGroupStickinessConfig
	}).(ListenerRuleTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerRuleForwardConfigOutput) TargetGroups() ListenerRuleTargetGroupTupleArrayOutput {
	return o.ApplyT(func(v ListenerRuleForwardConfig) []ListenerRuleTargetGroupTuple { return v.TargetGroups }).(ListenerRuleTargetGroupTupleArrayOutput)
}

type ListenerRuleForwardConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleForwardConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleForwardConfig)(nil)).Elem()
}

func (o ListenerRuleForwardConfigPtrOutput) ToListenerRuleForwardConfigPtrOutput() ListenerRuleForwardConfigPtrOutput {
	return o
}

func (o ListenerRuleForwardConfigPtrOutput) ToListenerRuleForwardConfigPtrOutputWithContext(ctx context.Context) ListenerRuleForwardConfigPtrOutput {
	return o
}

func (o ListenerRuleForwardConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleForwardConfig] {
	return pulumix.Output[*ListenerRuleForwardConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleForwardConfigPtrOutput) Elem() ListenerRuleForwardConfigOutput {
	return o.ApplyT(func(v *ListenerRuleForwardConfig) ListenerRuleForwardConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleForwardConfig
		return ret
	}).(ListenerRuleForwardConfigOutput)
}

func (o ListenerRuleForwardConfigPtrOutput) TargetGroupStickinessConfig() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o.ApplyT(func(v *ListenerRuleForwardConfig) *ListenerRuleTargetGroupStickinessConfig {
		if v == nil {
			return nil
		}
		return v.TargetGroupStickinessConfig
	}).(ListenerRuleTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerRuleForwardConfigPtrOutput) TargetGroups() ListenerRuleTargetGroupTupleArrayOutput {
	return o.ApplyT(func(v *ListenerRuleForwardConfig) []ListenerRuleTargetGroupTuple {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(ListenerRuleTargetGroupTupleArrayOutput)
}

type ListenerRuleHostHeaderConfig struct {
	Values []string `pulumi:"values"`
}

// ListenerRuleHostHeaderConfigInput is an input type that accepts ListenerRuleHostHeaderConfigArgs and ListenerRuleHostHeaderConfigOutput values.
// You can construct a concrete instance of `ListenerRuleHostHeaderConfigInput` via:
//
//	ListenerRuleHostHeaderConfigArgs{...}
type ListenerRuleHostHeaderConfigInput interface {
	pulumi.Input

	ToListenerRuleHostHeaderConfigOutput() ListenerRuleHostHeaderConfigOutput
	ToListenerRuleHostHeaderConfigOutputWithContext(context.Context) ListenerRuleHostHeaderConfigOutput
}

type ListenerRuleHostHeaderConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleHostHeaderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHostHeaderConfig)(nil)).Elem()
}

func (i ListenerRuleHostHeaderConfigArgs) ToListenerRuleHostHeaderConfigOutput() ListenerRuleHostHeaderConfigOutput {
	return i.ToListenerRuleHostHeaderConfigOutputWithContext(context.Background())
}

func (i ListenerRuleHostHeaderConfigArgs) ToListenerRuleHostHeaderConfigOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHostHeaderConfigOutput)
}

func (i ListenerRuleHostHeaderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHostHeaderConfig] {
	return pulumix.Output[ListenerRuleHostHeaderConfig]{
		OutputState: i.ToListenerRuleHostHeaderConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleHostHeaderConfigArgs) ToListenerRuleHostHeaderConfigPtrOutput() ListenerRuleHostHeaderConfigPtrOutput {
	return i.ToListenerRuleHostHeaderConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleHostHeaderConfigArgs) ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHostHeaderConfigOutput).ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx)
}

// ListenerRuleHostHeaderConfigPtrInput is an input type that accepts ListenerRuleHostHeaderConfigArgs, ListenerRuleHostHeaderConfigPtr and ListenerRuleHostHeaderConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleHostHeaderConfigPtrInput` via:
//
//	        ListenerRuleHostHeaderConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleHostHeaderConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleHostHeaderConfigPtrOutput() ListenerRuleHostHeaderConfigPtrOutput
	ToListenerRuleHostHeaderConfigPtrOutputWithContext(context.Context) ListenerRuleHostHeaderConfigPtrOutput
}

type listenerRuleHostHeaderConfigPtrType ListenerRuleHostHeaderConfigArgs

func ListenerRuleHostHeaderConfigPtr(v *ListenerRuleHostHeaderConfigArgs) ListenerRuleHostHeaderConfigPtrInput {
	return (*listenerRuleHostHeaderConfigPtrType)(v)
}

func (*listenerRuleHostHeaderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHostHeaderConfig)(nil)).Elem()
}

func (i *listenerRuleHostHeaderConfigPtrType) ToListenerRuleHostHeaderConfigPtrOutput() ListenerRuleHostHeaderConfigPtrOutput {
	return i.ToListenerRuleHostHeaderConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleHostHeaderConfigPtrType) ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHostHeaderConfigPtrOutput)
}

func (i *listenerRuleHostHeaderConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHostHeaderConfig] {
	return pulumix.Output[*ListenerRuleHostHeaderConfig]{
		OutputState: i.ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleHostHeaderConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleHostHeaderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHostHeaderConfig)(nil)).Elem()
}

func (o ListenerRuleHostHeaderConfigOutput) ToListenerRuleHostHeaderConfigOutput() ListenerRuleHostHeaderConfigOutput {
	return o
}

func (o ListenerRuleHostHeaderConfigOutput) ToListenerRuleHostHeaderConfigOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigOutput {
	return o
}

func (o ListenerRuleHostHeaderConfigOutput) ToListenerRuleHostHeaderConfigPtrOutput() ListenerRuleHostHeaderConfigPtrOutput {
	return o.ToListenerRuleHostHeaderConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleHostHeaderConfigOutput) ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleHostHeaderConfig) *ListenerRuleHostHeaderConfig {
		return &v
	}).(ListenerRuleHostHeaderConfigPtrOutput)
}

func (o ListenerRuleHostHeaderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHostHeaderConfig] {
	return pulumix.Output[ListenerRuleHostHeaderConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHostHeaderConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleHostHeaderConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleHostHeaderConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleHostHeaderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHostHeaderConfig)(nil)).Elem()
}

func (o ListenerRuleHostHeaderConfigPtrOutput) ToListenerRuleHostHeaderConfigPtrOutput() ListenerRuleHostHeaderConfigPtrOutput {
	return o
}

func (o ListenerRuleHostHeaderConfigPtrOutput) ToListenerRuleHostHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHostHeaderConfigPtrOutput {
	return o
}

func (o ListenerRuleHostHeaderConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHostHeaderConfig] {
	return pulumix.Output[*ListenerRuleHostHeaderConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHostHeaderConfigPtrOutput) Elem() ListenerRuleHostHeaderConfigOutput {
	return o.ApplyT(func(v *ListenerRuleHostHeaderConfig) ListenerRuleHostHeaderConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleHostHeaderConfig
		return ret
	}).(ListenerRuleHostHeaderConfigOutput)
}

func (o ListenerRuleHostHeaderConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleHostHeaderConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleHttpHeaderConfig struct {
	HttpHeaderName *string  `pulumi:"httpHeaderName"`
	Values         []string `pulumi:"values"`
}

// ListenerRuleHttpHeaderConfigInput is an input type that accepts ListenerRuleHttpHeaderConfigArgs and ListenerRuleHttpHeaderConfigOutput values.
// You can construct a concrete instance of `ListenerRuleHttpHeaderConfigInput` via:
//
//	ListenerRuleHttpHeaderConfigArgs{...}
type ListenerRuleHttpHeaderConfigInput interface {
	pulumi.Input

	ToListenerRuleHttpHeaderConfigOutput() ListenerRuleHttpHeaderConfigOutput
	ToListenerRuleHttpHeaderConfigOutputWithContext(context.Context) ListenerRuleHttpHeaderConfigOutput
}

type ListenerRuleHttpHeaderConfigArgs struct {
	HttpHeaderName pulumi.StringPtrInput   `pulumi:"httpHeaderName"`
	Values         pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleHttpHeaderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHttpHeaderConfig)(nil)).Elem()
}

func (i ListenerRuleHttpHeaderConfigArgs) ToListenerRuleHttpHeaderConfigOutput() ListenerRuleHttpHeaderConfigOutput {
	return i.ToListenerRuleHttpHeaderConfigOutputWithContext(context.Background())
}

func (i ListenerRuleHttpHeaderConfigArgs) ToListenerRuleHttpHeaderConfigOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpHeaderConfigOutput)
}

func (i ListenerRuleHttpHeaderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHttpHeaderConfig] {
	return pulumix.Output[ListenerRuleHttpHeaderConfig]{
		OutputState: i.ToListenerRuleHttpHeaderConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleHttpHeaderConfigArgs) ToListenerRuleHttpHeaderConfigPtrOutput() ListenerRuleHttpHeaderConfigPtrOutput {
	return i.ToListenerRuleHttpHeaderConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleHttpHeaderConfigArgs) ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpHeaderConfigOutput).ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx)
}

// ListenerRuleHttpHeaderConfigPtrInput is an input type that accepts ListenerRuleHttpHeaderConfigArgs, ListenerRuleHttpHeaderConfigPtr and ListenerRuleHttpHeaderConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleHttpHeaderConfigPtrInput` via:
//
//	        ListenerRuleHttpHeaderConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleHttpHeaderConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleHttpHeaderConfigPtrOutput() ListenerRuleHttpHeaderConfigPtrOutput
	ToListenerRuleHttpHeaderConfigPtrOutputWithContext(context.Context) ListenerRuleHttpHeaderConfigPtrOutput
}

type listenerRuleHttpHeaderConfigPtrType ListenerRuleHttpHeaderConfigArgs

func ListenerRuleHttpHeaderConfigPtr(v *ListenerRuleHttpHeaderConfigArgs) ListenerRuleHttpHeaderConfigPtrInput {
	return (*listenerRuleHttpHeaderConfigPtrType)(v)
}

func (*listenerRuleHttpHeaderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHttpHeaderConfig)(nil)).Elem()
}

func (i *listenerRuleHttpHeaderConfigPtrType) ToListenerRuleHttpHeaderConfigPtrOutput() ListenerRuleHttpHeaderConfigPtrOutput {
	return i.ToListenerRuleHttpHeaderConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleHttpHeaderConfigPtrType) ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpHeaderConfigPtrOutput)
}

func (i *listenerRuleHttpHeaderConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHttpHeaderConfig] {
	return pulumix.Output[*ListenerRuleHttpHeaderConfig]{
		OutputState: i.ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleHttpHeaderConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleHttpHeaderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHttpHeaderConfig)(nil)).Elem()
}

func (o ListenerRuleHttpHeaderConfigOutput) ToListenerRuleHttpHeaderConfigOutput() ListenerRuleHttpHeaderConfigOutput {
	return o
}

func (o ListenerRuleHttpHeaderConfigOutput) ToListenerRuleHttpHeaderConfigOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigOutput {
	return o
}

func (o ListenerRuleHttpHeaderConfigOutput) ToListenerRuleHttpHeaderConfigPtrOutput() ListenerRuleHttpHeaderConfigPtrOutput {
	return o.ToListenerRuleHttpHeaderConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleHttpHeaderConfigOutput) ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleHttpHeaderConfig) *ListenerRuleHttpHeaderConfig {
		return &v
	}).(ListenerRuleHttpHeaderConfigPtrOutput)
}

func (o ListenerRuleHttpHeaderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHttpHeaderConfig] {
	return pulumix.Output[ListenerRuleHttpHeaderConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHttpHeaderConfigOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleHttpHeaderConfig) *string { return v.HttpHeaderName }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleHttpHeaderConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleHttpHeaderConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleHttpHeaderConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleHttpHeaderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHttpHeaderConfig)(nil)).Elem()
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) ToListenerRuleHttpHeaderConfigPtrOutput() ListenerRuleHttpHeaderConfigPtrOutput {
	return o
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) ToListenerRuleHttpHeaderConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpHeaderConfigPtrOutput {
	return o
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHttpHeaderConfig] {
	return pulumix.Output[*ListenerRuleHttpHeaderConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) Elem() ListenerRuleHttpHeaderConfigOutput {
	return o.ApplyT(func(v *ListenerRuleHttpHeaderConfig) ListenerRuleHttpHeaderConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleHttpHeaderConfig
		return ret
	}).(ListenerRuleHttpHeaderConfigOutput)
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) HttpHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleHttpHeaderConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpHeaderName
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleHttpHeaderConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleHttpHeaderConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleHttpRequestMethodConfig struct {
	Values []string `pulumi:"values"`
}

// ListenerRuleHttpRequestMethodConfigInput is an input type that accepts ListenerRuleHttpRequestMethodConfigArgs and ListenerRuleHttpRequestMethodConfigOutput values.
// You can construct a concrete instance of `ListenerRuleHttpRequestMethodConfigInput` via:
//
//	ListenerRuleHttpRequestMethodConfigArgs{...}
type ListenerRuleHttpRequestMethodConfigInput interface {
	pulumi.Input

	ToListenerRuleHttpRequestMethodConfigOutput() ListenerRuleHttpRequestMethodConfigOutput
	ToListenerRuleHttpRequestMethodConfigOutputWithContext(context.Context) ListenerRuleHttpRequestMethodConfigOutput
}

type ListenerRuleHttpRequestMethodConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleHttpRequestMethodConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHttpRequestMethodConfig)(nil)).Elem()
}

func (i ListenerRuleHttpRequestMethodConfigArgs) ToListenerRuleHttpRequestMethodConfigOutput() ListenerRuleHttpRequestMethodConfigOutput {
	return i.ToListenerRuleHttpRequestMethodConfigOutputWithContext(context.Background())
}

func (i ListenerRuleHttpRequestMethodConfigArgs) ToListenerRuleHttpRequestMethodConfigOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpRequestMethodConfigOutput)
}

func (i ListenerRuleHttpRequestMethodConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHttpRequestMethodConfig] {
	return pulumix.Output[ListenerRuleHttpRequestMethodConfig]{
		OutputState: i.ToListenerRuleHttpRequestMethodConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleHttpRequestMethodConfigArgs) ToListenerRuleHttpRequestMethodConfigPtrOutput() ListenerRuleHttpRequestMethodConfigPtrOutput {
	return i.ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleHttpRequestMethodConfigArgs) ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpRequestMethodConfigOutput).ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx)
}

// ListenerRuleHttpRequestMethodConfigPtrInput is an input type that accepts ListenerRuleHttpRequestMethodConfigArgs, ListenerRuleHttpRequestMethodConfigPtr and ListenerRuleHttpRequestMethodConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleHttpRequestMethodConfigPtrInput` via:
//
//	        ListenerRuleHttpRequestMethodConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleHttpRequestMethodConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleHttpRequestMethodConfigPtrOutput() ListenerRuleHttpRequestMethodConfigPtrOutput
	ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(context.Context) ListenerRuleHttpRequestMethodConfigPtrOutput
}

type listenerRuleHttpRequestMethodConfigPtrType ListenerRuleHttpRequestMethodConfigArgs

func ListenerRuleHttpRequestMethodConfigPtr(v *ListenerRuleHttpRequestMethodConfigArgs) ListenerRuleHttpRequestMethodConfigPtrInput {
	return (*listenerRuleHttpRequestMethodConfigPtrType)(v)
}

func (*listenerRuleHttpRequestMethodConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHttpRequestMethodConfig)(nil)).Elem()
}

func (i *listenerRuleHttpRequestMethodConfigPtrType) ToListenerRuleHttpRequestMethodConfigPtrOutput() ListenerRuleHttpRequestMethodConfigPtrOutput {
	return i.ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleHttpRequestMethodConfigPtrType) ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleHttpRequestMethodConfigPtrOutput)
}

func (i *listenerRuleHttpRequestMethodConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHttpRequestMethodConfig] {
	return pulumix.Output[*ListenerRuleHttpRequestMethodConfig]{
		OutputState: i.ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleHttpRequestMethodConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleHttpRequestMethodConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleHttpRequestMethodConfig)(nil)).Elem()
}

func (o ListenerRuleHttpRequestMethodConfigOutput) ToListenerRuleHttpRequestMethodConfigOutput() ListenerRuleHttpRequestMethodConfigOutput {
	return o
}

func (o ListenerRuleHttpRequestMethodConfigOutput) ToListenerRuleHttpRequestMethodConfigOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigOutput {
	return o
}

func (o ListenerRuleHttpRequestMethodConfigOutput) ToListenerRuleHttpRequestMethodConfigPtrOutput() ListenerRuleHttpRequestMethodConfigPtrOutput {
	return o.ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleHttpRequestMethodConfigOutput) ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleHttpRequestMethodConfig) *ListenerRuleHttpRequestMethodConfig {
		return &v
	}).(ListenerRuleHttpRequestMethodConfigPtrOutput)
}

func (o ListenerRuleHttpRequestMethodConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleHttpRequestMethodConfig] {
	return pulumix.Output[ListenerRuleHttpRequestMethodConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHttpRequestMethodConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleHttpRequestMethodConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleHttpRequestMethodConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleHttpRequestMethodConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleHttpRequestMethodConfig)(nil)).Elem()
}

func (o ListenerRuleHttpRequestMethodConfigPtrOutput) ToListenerRuleHttpRequestMethodConfigPtrOutput() ListenerRuleHttpRequestMethodConfigPtrOutput {
	return o
}

func (o ListenerRuleHttpRequestMethodConfigPtrOutput) ToListenerRuleHttpRequestMethodConfigPtrOutputWithContext(ctx context.Context) ListenerRuleHttpRequestMethodConfigPtrOutput {
	return o
}

func (o ListenerRuleHttpRequestMethodConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleHttpRequestMethodConfig] {
	return pulumix.Output[*ListenerRuleHttpRequestMethodConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleHttpRequestMethodConfigPtrOutput) Elem() ListenerRuleHttpRequestMethodConfigOutput {
	return o.ApplyT(func(v *ListenerRuleHttpRequestMethodConfig) ListenerRuleHttpRequestMethodConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleHttpRequestMethodConfig
		return ret
	}).(ListenerRuleHttpRequestMethodConfigOutput)
}

func (o ListenerRuleHttpRequestMethodConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleHttpRequestMethodConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRulePathPatternConfig struct {
	Values []string `pulumi:"values"`
}

// ListenerRulePathPatternConfigInput is an input type that accepts ListenerRulePathPatternConfigArgs and ListenerRulePathPatternConfigOutput values.
// You can construct a concrete instance of `ListenerRulePathPatternConfigInput` via:
//
//	ListenerRulePathPatternConfigArgs{...}
type ListenerRulePathPatternConfigInput interface {
	pulumi.Input

	ToListenerRulePathPatternConfigOutput() ListenerRulePathPatternConfigOutput
	ToListenerRulePathPatternConfigOutputWithContext(context.Context) ListenerRulePathPatternConfigOutput
}

type ListenerRulePathPatternConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRulePathPatternConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRulePathPatternConfig)(nil)).Elem()
}

func (i ListenerRulePathPatternConfigArgs) ToListenerRulePathPatternConfigOutput() ListenerRulePathPatternConfigOutput {
	return i.ToListenerRulePathPatternConfigOutputWithContext(context.Background())
}

func (i ListenerRulePathPatternConfigArgs) ToListenerRulePathPatternConfigOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRulePathPatternConfigOutput)
}

func (i ListenerRulePathPatternConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRulePathPatternConfig] {
	return pulumix.Output[ListenerRulePathPatternConfig]{
		OutputState: i.ToListenerRulePathPatternConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRulePathPatternConfigArgs) ToListenerRulePathPatternConfigPtrOutput() ListenerRulePathPatternConfigPtrOutput {
	return i.ToListenerRulePathPatternConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRulePathPatternConfigArgs) ToListenerRulePathPatternConfigPtrOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRulePathPatternConfigOutput).ToListenerRulePathPatternConfigPtrOutputWithContext(ctx)
}

// ListenerRulePathPatternConfigPtrInput is an input type that accepts ListenerRulePathPatternConfigArgs, ListenerRulePathPatternConfigPtr and ListenerRulePathPatternConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRulePathPatternConfigPtrInput` via:
//
//	        ListenerRulePathPatternConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRulePathPatternConfigPtrInput interface {
	pulumi.Input

	ToListenerRulePathPatternConfigPtrOutput() ListenerRulePathPatternConfigPtrOutput
	ToListenerRulePathPatternConfigPtrOutputWithContext(context.Context) ListenerRulePathPatternConfigPtrOutput
}

type listenerRulePathPatternConfigPtrType ListenerRulePathPatternConfigArgs

func ListenerRulePathPatternConfigPtr(v *ListenerRulePathPatternConfigArgs) ListenerRulePathPatternConfigPtrInput {
	return (*listenerRulePathPatternConfigPtrType)(v)
}

func (*listenerRulePathPatternConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRulePathPatternConfig)(nil)).Elem()
}

func (i *listenerRulePathPatternConfigPtrType) ToListenerRulePathPatternConfigPtrOutput() ListenerRulePathPatternConfigPtrOutput {
	return i.ToListenerRulePathPatternConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRulePathPatternConfigPtrType) ToListenerRulePathPatternConfigPtrOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRulePathPatternConfigPtrOutput)
}

func (i *listenerRulePathPatternConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRulePathPatternConfig] {
	return pulumix.Output[*ListenerRulePathPatternConfig]{
		OutputState: i.ToListenerRulePathPatternConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRulePathPatternConfigOutput struct{ *pulumi.OutputState }

func (ListenerRulePathPatternConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRulePathPatternConfig)(nil)).Elem()
}

func (o ListenerRulePathPatternConfigOutput) ToListenerRulePathPatternConfigOutput() ListenerRulePathPatternConfigOutput {
	return o
}

func (o ListenerRulePathPatternConfigOutput) ToListenerRulePathPatternConfigOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigOutput {
	return o
}

func (o ListenerRulePathPatternConfigOutput) ToListenerRulePathPatternConfigPtrOutput() ListenerRulePathPatternConfigPtrOutput {
	return o.ToListenerRulePathPatternConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRulePathPatternConfigOutput) ToListenerRulePathPatternConfigPtrOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRulePathPatternConfig) *ListenerRulePathPatternConfig {
		return &v
	}).(ListenerRulePathPatternConfigPtrOutput)
}

func (o ListenerRulePathPatternConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRulePathPatternConfig] {
	return pulumix.Output[ListenerRulePathPatternConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRulePathPatternConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRulePathPatternConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRulePathPatternConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRulePathPatternConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRulePathPatternConfig)(nil)).Elem()
}

func (o ListenerRulePathPatternConfigPtrOutput) ToListenerRulePathPatternConfigPtrOutput() ListenerRulePathPatternConfigPtrOutput {
	return o
}

func (o ListenerRulePathPatternConfigPtrOutput) ToListenerRulePathPatternConfigPtrOutputWithContext(ctx context.Context) ListenerRulePathPatternConfigPtrOutput {
	return o
}

func (o ListenerRulePathPatternConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRulePathPatternConfig] {
	return pulumix.Output[*ListenerRulePathPatternConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRulePathPatternConfigPtrOutput) Elem() ListenerRulePathPatternConfigOutput {
	return o.ApplyT(func(v *ListenerRulePathPatternConfig) ListenerRulePathPatternConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRulePathPatternConfig
		return ret
	}).(ListenerRulePathPatternConfigOutput)
}

func (o ListenerRulePathPatternConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRulePathPatternConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleQueryStringConfig struct {
	Values []ListenerRuleQueryStringKeyValue `pulumi:"values"`
}

// ListenerRuleQueryStringConfigInput is an input type that accepts ListenerRuleQueryStringConfigArgs and ListenerRuleQueryStringConfigOutput values.
// You can construct a concrete instance of `ListenerRuleQueryStringConfigInput` via:
//
//	ListenerRuleQueryStringConfigArgs{...}
type ListenerRuleQueryStringConfigInput interface {
	pulumi.Input

	ToListenerRuleQueryStringConfigOutput() ListenerRuleQueryStringConfigOutput
	ToListenerRuleQueryStringConfigOutputWithContext(context.Context) ListenerRuleQueryStringConfigOutput
}

type ListenerRuleQueryStringConfigArgs struct {
	Values ListenerRuleQueryStringKeyValueArrayInput `pulumi:"values"`
}

func (ListenerRuleQueryStringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleQueryStringConfig)(nil)).Elem()
}

func (i ListenerRuleQueryStringConfigArgs) ToListenerRuleQueryStringConfigOutput() ListenerRuleQueryStringConfigOutput {
	return i.ToListenerRuleQueryStringConfigOutputWithContext(context.Background())
}

func (i ListenerRuleQueryStringConfigArgs) ToListenerRuleQueryStringConfigOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleQueryStringConfigOutput)
}

func (i ListenerRuleQueryStringConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleQueryStringConfig] {
	return pulumix.Output[ListenerRuleQueryStringConfig]{
		OutputState: i.ToListenerRuleQueryStringConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleQueryStringConfigArgs) ToListenerRuleQueryStringConfigPtrOutput() ListenerRuleQueryStringConfigPtrOutput {
	return i.ToListenerRuleQueryStringConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleQueryStringConfigArgs) ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleQueryStringConfigOutput).ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx)
}

// ListenerRuleQueryStringConfigPtrInput is an input type that accepts ListenerRuleQueryStringConfigArgs, ListenerRuleQueryStringConfigPtr and ListenerRuleQueryStringConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleQueryStringConfigPtrInput` via:
//
//	        ListenerRuleQueryStringConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleQueryStringConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleQueryStringConfigPtrOutput() ListenerRuleQueryStringConfigPtrOutput
	ToListenerRuleQueryStringConfigPtrOutputWithContext(context.Context) ListenerRuleQueryStringConfigPtrOutput
}

type listenerRuleQueryStringConfigPtrType ListenerRuleQueryStringConfigArgs

func ListenerRuleQueryStringConfigPtr(v *ListenerRuleQueryStringConfigArgs) ListenerRuleQueryStringConfigPtrInput {
	return (*listenerRuleQueryStringConfigPtrType)(v)
}

func (*listenerRuleQueryStringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleQueryStringConfig)(nil)).Elem()
}

func (i *listenerRuleQueryStringConfigPtrType) ToListenerRuleQueryStringConfigPtrOutput() ListenerRuleQueryStringConfigPtrOutput {
	return i.ToListenerRuleQueryStringConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleQueryStringConfigPtrType) ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleQueryStringConfigPtrOutput)
}

func (i *listenerRuleQueryStringConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleQueryStringConfig] {
	return pulumix.Output[*ListenerRuleQueryStringConfig]{
		OutputState: i.ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleQueryStringConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleQueryStringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleQueryStringConfig)(nil)).Elem()
}

func (o ListenerRuleQueryStringConfigOutput) ToListenerRuleQueryStringConfigOutput() ListenerRuleQueryStringConfigOutput {
	return o
}

func (o ListenerRuleQueryStringConfigOutput) ToListenerRuleQueryStringConfigOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigOutput {
	return o
}

func (o ListenerRuleQueryStringConfigOutput) ToListenerRuleQueryStringConfigPtrOutput() ListenerRuleQueryStringConfigPtrOutput {
	return o.ToListenerRuleQueryStringConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleQueryStringConfigOutput) ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleQueryStringConfig) *ListenerRuleQueryStringConfig {
		return &v
	}).(ListenerRuleQueryStringConfigPtrOutput)
}

func (o ListenerRuleQueryStringConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleQueryStringConfig] {
	return pulumix.Output[ListenerRuleQueryStringConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleQueryStringConfigOutput) Values() ListenerRuleQueryStringKeyValueArrayOutput {
	return o.ApplyT(func(v ListenerRuleQueryStringConfig) []ListenerRuleQueryStringKeyValue { return v.Values }).(ListenerRuleQueryStringKeyValueArrayOutput)
}

type ListenerRuleQueryStringConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleQueryStringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleQueryStringConfig)(nil)).Elem()
}

func (o ListenerRuleQueryStringConfigPtrOutput) ToListenerRuleQueryStringConfigPtrOutput() ListenerRuleQueryStringConfigPtrOutput {
	return o
}

func (o ListenerRuleQueryStringConfigPtrOutput) ToListenerRuleQueryStringConfigPtrOutputWithContext(ctx context.Context) ListenerRuleQueryStringConfigPtrOutput {
	return o
}

func (o ListenerRuleQueryStringConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleQueryStringConfig] {
	return pulumix.Output[*ListenerRuleQueryStringConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleQueryStringConfigPtrOutput) Elem() ListenerRuleQueryStringConfigOutput {
	return o.ApplyT(func(v *ListenerRuleQueryStringConfig) ListenerRuleQueryStringConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleQueryStringConfig
		return ret
	}).(ListenerRuleQueryStringConfigOutput)
}

func (o ListenerRuleQueryStringConfigPtrOutput) Values() ListenerRuleQueryStringKeyValueArrayOutput {
	return o.ApplyT(func(v *ListenerRuleQueryStringConfig) []ListenerRuleQueryStringKeyValue {
		if v == nil {
			return nil
		}
		return v.Values
	}).(ListenerRuleQueryStringKeyValueArrayOutput)
}

type ListenerRuleQueryStringKeyValue struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// ListenerRuleQueryStringKeyValueInput is an input type that accepts ListenerRuleQueryStringKeyValueArgs and ListenerRuleQueryStringKeyValueOutput values.
// You can construct a concrete instance of `ListenerRuleQueryStringKeyValueInput` via:
//
//	ListenerRuleQueryStringKeyValueArgs{...}
type ListenerRuleQueryStringKeyValueInput interface {
	pulumi.Input

	ToListenerRuleQueryStringKeyValueOutput() ListenerRuleQueryStringKeyValueOutput
	ToListenerRuleQueryStringKeyValueOutputWithContext(context.Context) ListenerRuleQueryStringKeyValueOutput
}

type ListenerRuleQueryStringKeyValueArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ListenerRuleQueryStringKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleQueryStringKeyValue)(nil)).Elem()
}

func (i ListenerRuleQueryStringKeyValueArgs) ToListenerRuleQueryStringKeyValueOutput() ListenerRuleQueryStringKeyValueOutput {
	return i.ToListenerRuleQueryStringKeyValueOutputWithContext(context.Background())
}

func (i ListenerRuleQueryStringKeyValueArgs) ToListenerRuleQueryStringKeyValueOutputWithContext(ctx context.Context) ListenerRuleQueryStringKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleQueryStringKeyValueOutput)
}

func (i ListenerRuleQueryStringKeyValueArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleQueryStringKeyValue] {
	return pulumix.Output[ListenerRuleQueryStringKeyValue]{
		OutputState: i.ToListenerRuleQueryStringKeyValueOutputWithContext(ctx).OutputState,
	}
}

// ListenerRuleQueryStringKeyValueArrayInput is an input type that accepts ListenerRuleQueryStringKeyValueArray and ListenerRuleQueryStringKeyValueArrayOutput values.
// You can construct a concrete instance of `ListenerRuleQueryStringKeyValueArrayInput` via:
//
//	ListenerRuleQueryStringKeyValueArray{ ListenerRuleQueryStringKeyValueArgs{...} }
type ListenerRuleQueryStringKeyValueArrayInput interface {
	pulumi.Input

	ToListenerRuleQueryStringKeyValueArrayOutput() ListenerRuleQueryStringKeyValueArrayOutput
	ToListenerRuleQueryStringKeyValueArrayOutputWithContext(context.Context) ListenerRuleQueryStringKeyValueArrayOutput
}

type ListenerRuleQueryStringKeyValueArray []ListenerRuleQueryStringKeyValueInput

func (ListenerRuleQueryStringKeyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleQueryStringKeyValue)(nil)).Elem()
}

func (i ListenerRuleQueryStringKeyValueArray) ToListenerRuleQueryStringKeyValueArrayOutput() ListenerRuleQueryStringKeyValueArrayOutput {
	return i.ToListenerRuleQueryStringKeyValueArrayOutputWithContext(context.Background())
}

func (i ListenerRuleQueryStringKeyValueArray) ToListenerRuleQueryStringKeyValueArrayOutputWithContext(ctx context.Context) ListenerRuleQueryStringKeyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleQueryStringKeyValueArrayOutput)
}

func (i ListenerRuleQueryStringKeyValueArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleQueryStringKeyValue] {
	return pulumix.Output[[]ListenerRuleQueryStringKeyValue]{
		OutputState: i.ToListenerRuleQueryStringKeyValueArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleQueryStringKeyValueOutput struct{ *pulumi.OutputState }

func (ListenerRuleQueryStringKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleQueryStringKeyValue)(nil)).Elem()
}

func (o ListenerRuleQueryStringKeyValueOutput) ToListenerRuleQueryStringKeyValueOutput() ListenerRuleQueryStringKeyValueOutput {
	return o
}

func (o ListenerRuleQueryStringKeyValueOutput) ToListenerRuleQueryStringKeyValueOutputWithContext(ctx context.Context) ListenerRuleQueryStringKeyValueOutput {
	return o
}

func (o ListenerRuleQueryStringKeyValueOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleQueryStringKeyValue] {
	return pulumix.Output[ListenerRuleQueryStringKeyValue]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleQueryStringKeyValueOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleQueryStringKeyValue) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleQueryStringKeyValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleQueryStringKeyValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ListenerRuleQueryStringKeyValueArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleQueryStringKeyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleQueryStringKeyValue)(nil)).Elem()
}

func (o ListenerRuleQueryStringKeyValueArrayOutput) ToListenerRuleQueryStringKeyValueArrayOutput() ListenerRuleQueryStringKeyValueArrayOutput {
	return o
}

func (o ListenerRuleQueryStringKeyValueArrayOutput) ToListenerRuleQueryStringKeyValueArrayOutputWithContext(ctx context.Context) ListenerRuleQueryStringKeyValueArrayOutput {
	return o
}

func (o ListenerRuleQueryStringKeyValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleQueryStringKeyValue] {
	return pulumix.Output[[]ListenerRuleQueryStringKeyValue]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleQueryStringKeyValueArrayOutput) Index(i pulumi.IntInput) ListenerRuleQueryStringKeyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleQueryStringKeyValue {
		return vs[0].([]ListenerRuleQueryStringKeyValue)[vs[1].(int)]
	}).(ListenerRuleQueryStringKeyValueOutput)
}

type ListenerRuleRedirectConfig struct {
	Host       *string `pulumi:"host"`
	Path       *string `pulumi:"path"`
	Port       *string `pulumi:"port"`
	Protocol   *string `pulumi:"protocol"`
	Query      *string `pulumi:"query"`
	StatusCode string  `pulumi:"statusCode"`
}

// ListenerRuleRedirectConfigInput is an input type that accepts ListenerRuleRedirectConfigArgs and ListenerRuleRedirectConfigOutput values.
// You can construct a concrete instance of `ListenerRuleRedirectConfigInput` via:
//
//	ListenerRuleRedirectConfigArgs{...}
type ListenerRuleRedirectConfigInput interface {
	pulumi.Input

	ToListenerRuleRedirectConfigOutput() ListenerRuleRedirectConfigOutput
	ToListenerRuleRedirectConfigOutputWithContext(context.Context) ListenerRuleRedirectConfigOutput
}

type ListenerRuleRedirectConfigArgs struct {
	Host       pulumi.StringPtrInput `pulumi:"host"`
	Path       pulumi.StringPtrInput `pulumi:"path"`
	Port       pulumi.StringPtrInput `pulumi:"port"`
	Protocol   pulumi.StringPtrInput `pulumi:"protocol"`
	Query      pulumi.StringPtrInput `pulumi:"query"`
	StatusCode pulumi.StringInput    `pulumi:"statusCode"`
}

func (ListenerRuleRedirectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleRedirectConfig)(nil)).Elem()
}

func (i ListenerRuleRedirectConfigArgs) ToListenerRuleRedirectConfigOutput() ListenerRuleRedirectConfigOutput {
	return i.ToListenerRuleRedirectConfigOutputWithContext(context.Background())
}

func (i ListenerRuleRedirectConfigArgs) ToListenerRuleRedirectConfigOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleRedirectConfigOutput)
}

func (i ListenerRuleRedirectConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleRedirectConfig] {
	return pulumix.Output[ListenerRuleRedirectConfig]{
		OutputState: i.ToListenerRuleRedirectConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleRedirectConfigArgs) ToListenerRuleRedirectConfigPtrOutput() ListenerRuleRedirectConfigPtrOutput {
	return i.ToListenerRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleRedirectConfigArgs) ToListenerRuleRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleRedirectConfigOutput).ToListenerRuleRedirectConfigPtrOutputWithContext(ctx)
}

// ListenerRuleRedirectConfigPtrInput is an input type that accepts ListenerRuleRedirectConfigArgs, ListenerRuleRedirectConfigPtr and ListenerRuleRedirectConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleRedirectConfigPtrInput` via:
//
//	        ListenerRuleRedirectConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleRedirectConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleRedirectConfigPtrOutput() ListenerRuleRedirectConfigPtrOutput
	ToListenerRuleRedirectConfigPtrOutputWithContext(context.Context) ListenerRuleRedirectConfigPtrOutput
}

type listenerRuleRedirectConfigPtrType ListenerRuleRedirectConfigArgs

func ListenerRuleRedirectConfigPtr(v *ListenerRuleRedirectConfigArgs) ListenerRuleRedirectConfigPtrInput {
	return (*listenerRuleRedirectConfigPtrType)(v)
}

func (*listenerRuleRedirectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleRedirectConfig)(nil)).Elem()
}

func (i *listenerRuleRedirectConfigPtrType) ToListenerRuleRedirectConfigPtrOutput() ListenerRuleRedirectConfigPtrOutput {
	return i.ToListenerRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleRedirectConfigPtrType) ToListenerRuleRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleRedirectConfigPtrOutput)
}

func (i *listenerRuleRedirectConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleRedirectConfig] {
	return pulumix.Output[*ListenerRuleRedirectConfig]{
		OutputState: i.ToListenerRuleRedirectConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleRedirectConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleRedirectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleRedirectConfig)(nil)).Elem()
}

func (o ListenerRuleRedirectConfigOutput) ToListenerRuleRedirectConfigOutput() ListenerRuleRedirectConfigOutput {
	return o
}

func (o ListenerRuleRedirectConfigOutput) ToListenerRuleRedirectConfigOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigOutput {
	return o
}

func (o ListenerRuleRedirectConfigOutput) ToListenerRuleRedirectConfigPtrOutput() ListenerRuleRedirectConfigPtrOutput {
	return o.ToListenerRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleRedirectConfigOutput) ToListenerRuleRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleRedirectConfig) *ListenerRuleRedirectConfig {
		return &v
	}).(ListenerRuleRedirectConfigPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleRedirectConfig] {
	return pulumix.Output[ListenerRuleRedirectConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleRedirectConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleRedirectConfig) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleRedirectConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleRedirectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleRedirectConfig)(nil)).Elem()
}

func (o ListenerRuleRedirectConfigPtrOutput) ToListenerRuleRedirectConfigPtrOutput() ListenerRuleRedirectConfigPtrOutput {
	return o
}

func (o ListenerRuleRedirectConfigPtrOutput) ToListenerRuleRedirectConfigPtrOutputWithContext(ctx context.Context) ListenerRuleRedirectConfigPtrOutput {
	return o
}

func (o ListenerRuleRedirectConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleRedirectConfig] {
	return pulumix.Output[*ListenerRuleRedirectConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleRedirectConfigPtrOutput) Elem() ListenerRuleRedirectConfigOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) ListenerRuleRedirectConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleRedirectConfig
		return ret
	}).(ListenerRuleRedirectConfigOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRedirectConfigPtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerRuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StatusCode
	}).(pulumi.StringPtrOutput)
}

type ListenerRuleRuleCondition struct {
	Field                   *string                              `pulumi:"field"`
	HostHeaderConfig        *ListenerRuleHostHeaderConfig        `pulumi:"hostHeaderConfig"`
	HttpHeaderConfig        *ListenerRuleHttpHeaderConfig        `pulumi:"httpHeaderConfig"`
	HttpRequestMethodConfig *ListenerRuleHttpRequestMethodConfig `pulumi:"httpRequestMethodConfig"`
	PathPatternConfig       *ListenerRulePathPatternConfig       `pulumi:"pathPatternConfig"`
	QueryStringConfig       *ListenerRuleQueryStringConfig       `pulumi:"queryStringConfig"`
	SourceIpConfig          *ListenerRuleSourceIpConfig          `pulumi:"sourceIpConfig"`
	Values                  []string                             `pulumi:"values"`
}

// ListenerRuleRuleConditionInput is an input type that accepts ListenerRuleRuleConditionArgs and ListenerRuleRuleConditionOutput values.
// You can construct a concrete instance of `ListenerRuleRuleConditionInput` via:
//
//	ListenerRuleRuleConditionArgs{...}
type ListenerRuleRuleConditionInput interface {
	pulumi.Input

	ToListenerRuleRuleConditionOutput() ListenerRuleRuleConditionOutput
	ToListenerRuleRuleConditionOutputWithContext(context.Context) ListenerRuleRuleConditionOutput
}

type ListenerRuleRuleConditionArgs struct {
	Field                   pulumi.StringPtrInput                       `pulumi:"field"`
	HostHeaderConfig        ListenerRuleHostHeaderConfigPtrInput        `pulumi:"hostHeaderConfig"`
	HttpHeaderConfig        ListenerRuleHttpHeaderConfigPtrInput        `pulumi:"httpHeaderConfig"`
	HttpRequestMethodConfig ListenerRuleHttpRequestMethodConfigPtrInput `pulumi:"httpRequestMethodConfig"`
	PathPatternConfig       ListenerRulePathPatternConfigPtrInput       `pulumi:"pathPatternConfig"`
	QueryStringConfig       ListenerRuleQueryStringConfigPtrInput       `pulumi:"queryStringConfig"`
	SourceIpConfig          ListenerRuleSourceIpConfigPtrInput          `pulumi:"sourceIpConfig"`
	Values                  pulumi.StringArrayInput                     `pulumi:"values"`
}

func (ListenerRuleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleRuleCondition)(nil)).Elem()
}

func (i ListenerRuleRuleConditionArgs) ToListenerRuleRuleConditionOutput() ListenerRuleRuleConditionOutput {
	return i.ToListenerRuleRuleConditionOutputWithContext(context.Background())
}

func (i ListenerRuleRuleConditionArgs) ToListenerRuleRuleConditionOutputWithContext(ctx context.Context) ListenerRuleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleRuleConditionOutput)
}

func (i ListenerRuleRuleConditionArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleRuleCondition] {
	return pulumix.Output[ListenerRuleRuleCondition]{
		OutputState: i.ToListenerRuleRuleConditionOutputWithContext(ctx).OutputState,
	}
}

// ListenerRuleRuleConditionArrayInput is an input type that accepts ListenerRuleRuleConditionArray and ListenerRuleRuleConditionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleRuleConditionArrayInput` via:
//
//	ListenerRuleRuleConditionArray{ ListenerRuleRuleConditionArgs{...} }
type ListenerRuleRuleConditionArrayInput interface {
	pulumi.Input

	ToListenerRuleRuleConditionArrayOutput() ListenerRuleRuleConditionArrayOutput
	ToListenerRuleRuleConditionArrayOutputWithContext(context.Context) ListenerRuleRuleConditionArrayOutput
}

type ListenerRuleRuleConditionArray []ListenerRuleRuleConditionInput

func (ListenerRuleRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleRuleCondition)(nil)).Elem()
}

func (i ListenerRuleRuleConditionArray) ToListenerRuleRuleConditionArrayOutput() ListenerRuleRuleConditionArrayOutput {
	return i.ToListenerRuleRuleConditionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleRuleConditionArray) ToListenerRuleRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleRuleConditionArrayOutput)
}

func (i ListenerRuleRuleConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleRuleCondition] {
	return pulumix.Output[[]ListenerRuleRuleCondition]{
		OutputState: i.ToListenerRuleRuleConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleRuleConditionOutput struct{ *pulumi.OutputState }

func (ListenerRuleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleRuleCondition)(nil)).Elem()
}

func (o ListenerRuleRuleConditionOutput) ToListenerRuleRuleConditionOutput() ListenerRuleRuleConditionOutput {
	return o
}

func (o ListenerRuleRuleConditionOutput) ToListenerRuleRuleConditionOutputWithContext(ctx context.Context) ListenerRuleRuleConditionOutput {
	return o
}

func (o ListenerRuleRuleConditionOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleRuleCondition] {
	return pulumix.Output[ListenerRuleRuleCondition]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleRuleConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) HostHeaderConfig() ListenerRuleHostHeaderConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRuleHostHeaderConfig { return v.HostHeaderConfig }).(ListenerRuleHostHeaderConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) HttpHeaderConfig() ListenerRuleHttpHeaderConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRuleHttpHeaderConfig { return v.HttpHeaderConfig }).(ListenerRuleHttpHeaderConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) HttpRequestMethodConfig() ListenerRuleHttpRequestMethodConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRuleHttpRequestMethodConfig {
		return v.HttpRequestMethodConfig
	}).(ListenerRuleHttpRequestMethodConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) PathPatternConfig() ListenerRulePathPatternConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRulePathPatternConfig { return v.PathPatternConfig }).(ListenerRulePathPatternConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) QueryStringConfig() ListenerRuleQueryStringConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRuleQueryStringConfig { return v.QueryStringConfig }).(ListenerRuleQueryStringConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) SourceIpConfig() ListenerRuleSourceIpConfigPtrOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) *ListenerRuleSourceIpConfig { return v.SourceIpConfig }).(ListenerRuleSourceIpConfigPtrOutput)
}

func (o ListenerRuleRuleConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleRuleCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleRuleCondition)(nil)).Elem()
}

func (o ListenerRuleRuleConditionArrayOutput) ToListenerRuleRuleConditionArrayOutput() ListenerRuleRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleRuleConditionArrayOutput) ToListenerRuleRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleRuleConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleRuleCondition] {
	return pulumix.Output[[]ListenerRuleRuleCondition]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleRuleConditionArrayOutput) Index(i pulumi.IntInput) ListenerRuleRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleRuleCondition {
		return vs[0].([]ListenerRuleRuleCondition)[vs[1].(int)]
	}).(ListenerRuleRuleConditionOutput)
}

type ListenerRuleSourceIpConfig struct {
	Values []string `pulumi:"values"`
}

// ListenerRuleSourceIpConfigInput is an input type that accepts ListenerRuleSourceIpConfigArgs and ListenerRuleSourceIpConfigOutput values.
// You can construct a concrete instance of `ListenerRuleSourceIpConfigInput` via:
//
//	ListenerRuleSourceIpConfigArgs{...}
type ListenerRuleSourceIpConfigInput interface {
	pulumi.Input

	ToListenerRuleSourceIpConfigOutput() ListenerRuleSourceIpConfigOutput
	ToListenerRuleSourceIpConfigOutputWithContext(context.Context) ListenerRuleSourceIpConfigOutput
}

type ListenerRuleSourceIpConfigArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleSourceIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleSourceIpConfig)(nil)).Elem()
}

func (i ListenerRuleSourceIpConfigArgs) ToListenerRuleSourceIpConfigOutput() ListenerRuleSourceIpConfigOutput {
	return i.ToListenerRuleSourceIpConfigOutputWithContext(context.Background())
}

func (i ListenerRuleSourceIpConfigArgs) ToListenerRuleSourceIpConfigOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleSourceIpConfigOutput)
}

func (i ListenerRuleSourceIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleSourceIpConfig] {
	return pulumix.Output[ListenerRuleSourceIpConfig]{
		OutputState: i.ToListenerRuleSourceIpConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleSourceIpConfigArgs) ToListenerRuleSourceIpConfigPtrOutput() ListenerRuleSourceIpConfigPtrOutput {
	return i.ToListenerRuleSourceIpConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleSourceIpConfigArgs) ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleSourceIpConfigOutput).ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx)
}

// ListenerRuleSourceIpConfigPtrInput is an input type that accepts ListenerRuleSourceIpConfigArgs, ListenerRuleSourceIpConfigPtr and ListenerRuleSourceIpConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleSourceIpConfigPtrInput` via:
//
//	        ListenerRuleSourceIpConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleSourceIpConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleSourceIpConfigPtrOutput() ListenerRuleSourceIpConfigPtrOutput
	ToListenerRuleSourceIpConfigPtrOutputWithContext(context.Context) ListenerRuleSourceIpConfigPtrOutput
}

type listenerRuleSourceIpConfigPtrType ListenerRuleSourceIpConfigArgs

func ListenerRuleSourceIpConfigPtr(v *ListenerRuleSourceIpConfigArgs) ListenerRuleSourceIpConfigPtrInput {
	return (*listenerRuleSourceIpConfigPtrType)(v)
}

func (*listenerRuleSourceIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleSourceIpConfig)(nil)).Elem()
}

func (i *listenerRuleSourceIpConfigPtrType) ToListenerRuleSourceIpConfigPtrOutput() ListenerRuleSourceIpConfigPtrOutput {
	return i.ToListenerRuleSourceIpConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleSourceIpConfigPtrType) ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleSourceIpConfigPtrOutput)
}

func (i *listenerRuleSourceIpConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleSourceIpConfig] {
	return pulumix.Output[*ListenerRuleSourceIpConfig]{
		OutputState: i.ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleSourceIpConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleSourceIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleSourceIpConfig)(nil)).Elem()
}

func (o ListenerRuleSourceIpConfigOutput) ToListenerRuleSourceIpConfigOutput() ListenerRuleSourceIpConfigOutput {
	return o
}

func (o ListenerRuleSourceIpConfigOutput) ToListenerRuleSourceIpConfigOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigOutput {
	return o
}

func (o ListenerRuleSourceIpConfigOutput) ToListenerRuleSourceIpConfigPtrOutput() ListenerRuleSourceIpConfigPtrOutput {
	return o.ToListenerRuleSourceIpConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleSourceIpConfigOutput) ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleSourceIpConfig) *ListenerRuleSourceIpConfig {
		return &v
	}).(ListenerRuleSourceIpConfigPtrOutput)
}

func (o ListenerRuleSourceIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleSourceIpConfig] {
	return pulumix.Output[ListenerRuleSourceIpConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleSourceIpConfigOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleSourceIpConfig) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleSourceIpConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleSourceIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleSourceIpConfig)(nil)).Elem()
}

func (o ListenerRuleSourceIpConfigPtrOutput) ToListenerRuleSourceIpConfigPtrOutput() ListenerRuleSourceIpConfigPtrOutput {
	return o
}

func (o ListenerRuleSourceIpConfigPtrOutput) ToListenerRuleSourceIpConfigPtrOutputWithContext(ctx context.Context) ListenerRuleSourceIpConfigPtrOutput {
	return o
}

func (o ListenerRuleSourceIpConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleSourceIpConfig] {
	return pulumix.Output[*ListenerRuleSourceIpConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleSourceIpConfigPtrOutput) Elem() ListenerRuleSourceIpConfigOutput {
	return o.ApplyT(func(v *ListenerRuleSourceIpConfig) ListenerRuleSourceIpConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleSourceIpConfig
		return ret
	}).(ListenerRuleSourceIpConfigOutput)
}

func (o ListenerRuleSourceIpConfigPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerRuleSourceIpConfig) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ListenerRuleTargetGroupStickinessConfig struct {
	DurationSeconds *int  `pulumi:"durationSeconds"`
	Enabled         *bool `pulumi:"enabled"`
}

// ListenerRuleTargetGroupStickinessConfigInput is an input type that accepts ListenerRuleTargetGroupStickinessConfigArgs and ListenerRuleTargetGroupStickinessConfigOutput values.
// You can construct a concrete instance of `ListenerRuleTargetGroupStickinessConfigInput` via:
//
//	ListenerRuleTargetGroupStickinessConfigArgs{...}
type ListenerRuleTargetGroupStickinessConfigInput interface {
	pulumi.Input

	ToListenerRuleTargetGroupStickinessConfigOutput() ListenerRuleTargetGroupStickinessConfigOutput
	ToListenerRuleTargetGroupStickinessConfigOutputWithContext(context.Context) ListenerRuleTargetGroupStickinessConfigOutput
}

type ListenerRuleTargetGroupStickinessConfigArgs struct {
	DurationSeconds pulumi.IntPtrInput  `pulumi:"durationSeconds"`
	Enabled         pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ListenerRuleTargetGroupStickinessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleTargetGroupStickinessConfig)(nil)).Elem()
}

func (i ListenerRuleTargetGroupStickinessConfigArgs) ToListenerRuleTargetGroupStickinessConfigOutput() ListenerRuleTargetGroupStickinessConfigOutput {
	return i.ToListenerRuleTargetGroupStickinessConfigOutputWithContext(context.Background())
}

func (i ListenerRuleTargetGroupStickinessConfigArgs) ToListenerRuleTargetGroupStickinessConfigOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleTargetGroupStickinessConfigOutput)
}

func (i ListenerRuleTargetGroupStickinessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleTargetGroupStickinessConfig] {
	return pulumix.Output[ListenerRuleTargetGroupStickinessConfig]{
		OutputState: i.ToListenerRuleTargetGroupStickinessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerRuleTargetGroupStickinessConfigArgs) ToListenerRuleTargetGroupStickinessConfigPtrOutput() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return i.ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (i ListenerRuleTargetGroupStickinessConfigArgs) ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleTargetGroupStickinessConfigOutput).ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx)
}

// ListenerRuleTargetGroupStickinessConfigPtrInput is an input type that accepts ListenerRuleTargetGroupStickinessConfigArgs, ListenerRuleTargetGroupStickinessConfigPtr and ListenerRuleTargetGroupStickinessConfigPtrOutput values.
// You can construct a concrete instance of `ListenerRuleTargetGroupStickinessConfigPtrInput` via:
//
//	        ListenerRuleTargetGroupStickinessConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerRuleTargetGroupStickinessConfigPtrInput interface {
	pulumi.Input

	ToListenerRuleTargetGroupStickinessConfigPtrOutput() ListenerRuleTargetGroupStickinessConfigPtrOutput
	ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(context.Context) ListenerRuleTargetGroupStickinessConfigPtrOutput
}

type listenerRuleTargetGroupStickinessConfigPtrType ListenerRuleTargetGroupStickinessConfigArgs

func ListenerRuleTargetGroupStickinessConfigPtr(v *ListenerRuleTargetGroupStickinessConfigArgs) ListenerRuleTargetGroupStickinessConfigPtrInput {
	return (*listenerRuleTargetGroupStickinessConfigPtrType)(v)
}

func (*listenerRuleTargetGroupStickinessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleTargetGroupStickinessConfig)(nil)).Elem()
}

func (i *listenerRuleTargetGroupStickinessConfigPtrType) ToListenerRuleTargetGroupStickinessConfigPtrOutput() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return i.ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (i *listenerRuleTargetGroupStickinessConfigPtrType) ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleTargetGroupStickinessConfigPtrOutput)
}

func (i *listenerRuleTargetGroupStickinessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleTargetGroupStickinessConfig] {
	return pulumix.Output[*ListenerRuleTargetGroupStickinessConfig]{
		OutputState: i.ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleTargetGroupStickinessConfigOutput struct{ *pulumi.OutputState }

func (ListenerRuleTargetGroupStickinessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleTargetGroupStickinessConfig)(nil)).Elem()
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) ToListenerRuleTargetGroupStickinessConfigOutput() ListenerRuleTargetGroupStickinessConfigOutput {
	return o
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) ToListenerRuleTargetGroupStickinessConfigOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigOutput {
	return o
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) ToListenerRuleTargetGroupStickinessConfigPtrOutput() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o.ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerRuleTargetGroupStickinessConfig) *ListenerRuleTargetGroupStickinessConfig {
		return &v
	}).(ListenerRuleTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleTargetGroupStickinessConfig] {
	return pulumix.Output[ListenerRuleTargetGroupStickinessConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleTargetGroupStickinessConfig) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ListenerRuleTargetGroupStickinessConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerRuleTargetGroupStickinessConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ListenerRuleTargetGroupStickinessConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleTargetGroupStickinessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleTargetGroupStickinessConfig)(nil)).Elem()
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) ToListenerRuleTargetGroupStickinessConfigPtrOutput() ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) ToListenerRuleTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerRuleTargetGroupStickinessConfigPtrOutput {
	return o
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerRuleTargetGroupStickinessConfig] {
	return pulumix.Output[*ListenerRuleTargetGroupStickinessConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) Elem() ListenerRuleTargetGroupStickinessConfigOutput {
	return o.ApplyT(func(v *ListenerRuleTargetGroupStickinessConfig) ListenerRuleTargetGroupStickinessConfig {
		if v != nil {
			return *v
		}
		var ret ListenerRuleTargetGroupStickinessConfig
		return ret
	}).(ListenerRuleTargetGroupStickinessConfigOutput)
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerRuleTargetGroupStickinessConfig) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ListenerRuleTargetGroupStickinessConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerRuleTargetGroupStickinessConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ListenerRuleTargetGroupTuple struct {
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	Weight         *int    `pulumi:"weight"`
}

// ListenerRuleTargetGroupTupleInput is an input type that accepts ListenerRuleTargetGroupTupleArgs and ListenerRuleTargetGroupTupleOutput values.
// You can construct a concrete instance of `ListenerRuleTargetGroupTupleInput` via:
//
//	ListenerRuleTargetGroupTupleArgs{...}
type ListenerRuleTargetGroupTupleInput interface {
	pulumi.Input

	ToListenerRuleTargetGroupTupleOutput() ListenerRuleTargetGroupTupleOutput
	ToListenerRuleTargetGroupTupleOutputWithContext(context.Context) ListenerRuleTargetGroupTupleOutput
}

type ListenerRuleTargetGroupTupleArgs struct {
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	Weight         pulumi.IntPtrInput    `pulumi:"weight"`
}

func (ListenerRuleTargetGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleTargetGroupTuple)(nil)).Elem()
}

func (i ListenerRuleTargetGroupTupleArgs) ToListenerRuleTargetGroupTupleOutput() ListenerRuleTargetGroupTupleOutput {
	return i.ToListenerRuleTargetGroupTupleOutputWithContext(context.Background())
}

func (i ListenerRuleTargetGroupTupleArgs) ToListenerRuleTargetGroupTupleOutputWithContext(ctx context.Context) ListenerRuleTargetGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleTargetGroupTupleOutput)
}

func (i ListenerRuleTargetGroupTupleArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleTargetGroupTuple] {
	return pulumix.Output[ListenerRuleTargetGroupTuple]{
		OutputState: i.ToListenerRuleTargetGroupTupleOutputWithContext(ctx).OutputState,
	}
}

// ListenerRuleTargetGroupTupleArrayInput is an input type that accepts ListenerRuleTargetGroupTupleArray and ListenerRuleTargetGroupTupleArrayOutput values.
// You can construct a concrete instance of `ListenerRuleTargetGroupTupleArrayInput` via:
//
//	ListenerRuleTargetGroupTupleArray{ ListenerRuleTargetGroupTupleArgs{...} }
type ListenerRuleTargetGroupTupleArrayInput interface {
	pulumi.Input

	ToListenerRuleTargetGroupTupleArrayOutput() ListenerRuleTargetGroupTupleArrayOutput
	ToListenerRuleTargetGroupTupleArrayOutputWithContext(context.Context) ListenerRuleTargetGroupTupleArrayOutput
}

type ListenerRuleTargetGroupTupleArray []ListenerRuleTargetGroupTupleInput

func (ListenerRuleTargetGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleTargetGroupTuple)(nil)).Elem()
}

func (i ListenerRuleTargetGroupTupleArray) ToListenerRuleTargetGroupTupleArrayOutput() ListenerRuleTargetGroupTupleArrayOutput {
	return i.ToListenerRuleTargetGroupTupleArrayOutputWithContext(context.Background())
}

func (i ListenerRuleTargetGroupTupleArray) ToListenerRuleTargetGroupTupleArrayOutputWithContext(ctx context.Context) ListenerRuleTargetGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleTargetGroupTupleArrayOutput)
}

func (i ListenerRuleTargetGroupTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleTargetGroupTuple] {
	return pulumix.Output[[]ListenerRuleTargetGroupTuple]{
		OutputState: i.ToListenerRuleTargetGroupTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerRuleTargetGroupTupleOutput struct{ *pulumi.OutputState }

func (ListenerRuleTargetGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleTargetGroupTuple)(nil)).Elem()
}

func (o ListenerRuleTargetGroupTupleOutput) ToListenerRuleTargetGroupTupleOutput() ListenerRuleTargetGroupTupleOutput {
	return o
}

func (o ListenerRuleTargetGroupTupleOutput) ToListenerRuleTargetGroupTupleOutputWithContext(ctx context.Context) ListenerRuleTargetGroupTupleOutput {
	return o
}

func (o ListenerRuleTargetGroupTupleOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerRuleTargetGroupTuple] {
	return pulumix.Output[ListenerRuleTargetGroupTuple]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleTargetGroupTupleOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleTargetGroupTuple) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

func (o ListenerRuleTargetGroupTupleOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleTargetGroupTuple) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ListenerRuleTargetGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleTargetGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleTargetGroupTuple)(nil)).Elem()
}

func (o ListenerRuleTargetGroupTupleArrayOutput) ToListenerRuleTargetGroupTupleArrayOutput() ListenerRuleTargetGroupTupleArrayOutput {
	return o
}

func (o ListenerRuleTargetGroupTupleArrayOutput) ToListenerRuleTargetGroupTupleArrayOutputWithContext(ctx context.Context) ListenerRuleTargetGroupTupleArrayOutput {
	return o
}

func (o ListenerRuleTargetGroupTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerRuleTargetGroupTuple] {
	return pulumix.Output[[]ListenerRuleTargetGroupTuple]{
		OutputState: o.OutputState,
	}
}

func (o ListenerRuleTargetGroupTupleArrayOutput) Index(i pulumi.IntInput) ListenerRuleTargetGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleTargetGroupTuple {
		return vs[0].([]ListenerRuleTargetGroupTuple)[vs[1].(int)]
	}).(ListenerRuleTargetGroupTupleOutput)
}

type ListenerTargetGroupStickinessConfig struct {
	DurationSeconds *int  `pulumi:"durationSeconds"`
	Enabled         *bool `pulumi:"enabled"`
}

// ListenerTargetGroupStickinessConfigInput is an input type that accepts ListenerTargetGroupStickinessConfigArgs and ListenerTargetGroupStickinessConfigOutput values.
// You can construct a concrete instance of `ListenerTargetGroupStickinessConfigInput` via:
//
//	ListenerTargetGroupStickinessConfigArgs{...}
type ListenerTargetGroupStickinessConfigInput interface {
	pulumi.Input

	ToListenerTargetGroupStickinessConfigOutput() ListenerTargetGroupStickinessConfigOutput
	ToListenerTargetGroupStickinessConfigOutputWithContext(context.Context) ListenerTargetGroupStickinessConfigOutput
}

type ListenerTargetGroupStickinessConfigArgs struct {
	DurationSeconds pulumi.IntPtrInput  `pulumi:"durationSeconds"`
	Enabled         pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ListenerTargetGroupStickinessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTargetGroupStickinessConfig)(nil)).Elem()
}

func (i ListenerTargetGroupStickinessConfigArgs) ToListenerTargetGroupStickinessConfigOutput() ListenerTargetGroupStickinessConfigOutput {
	return i.ToListenerTargetGroupStickinessConfigOutputWithContext(context.Background())
}

func (i ListenerTargetGroupStickinessConfigArgs) ToListenerTargetGroupStickinessConfigOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTargetGroupStickinessConfigOutput)
}

func (i ListenerTargetGroupStickinessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerTargetGroupStickinessConfig] {
	return pulumix.Output[ListenerTargetGroupStickinessConfig]{
		OutputState: i.ToListenerTargetGroupStickinessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i ListenerTargetGroupStickinessConfigArgs) ToListenerTargetGroupStickinessConfigPtrOutput() ListenerTargetGroupStickinessConfigPtrOutput {
	return i.ToListenerTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (i ListenerTargetGroupStickinessConfigArgs) ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTargetGroupStickinessConfigOutput).ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx)
}

// ListenerTargetGroupStickinessConfigPtrInput is an input type that accepts ListenerTargetGroupStickinessConfigArgs, ListenerTargetGroupStickinessConfigPtr and ListenerTargetGroupStickinessConfigPtrOutput values.
// You can construct a concrete instance of `ListenerTargetGroupStickinessConfigPtrInput` via:
//
//	        ListenerTargetGroupStickinessConfigArgs{...}
//
//	or:
//
//	        nil
type ListenerTargetGroupStickinessConfigPtrInput interface {
	pulumi.Input

	ToListenerTargetGroupStickinessConfigPtrOutput() ListenerTargetGroupStickinessConfigPtrOutput
	ToListenerTargetGroupStickinessConfigPtrOutputWithContext(context.Context) ListenerTargetGroupStickinessConfigPtrOutput
}

type listenerTargetGroupStickinessConfigPtrType ListenerTargetGroupStickinessConfigArgs

func ListenerTargetGroupStickinessConfigPtr(v *ListenerTargetGroupStickinessConfigArgs) ListenerTargetGroupStickinessConfigPtrInput {
	return (*listenerTargetGroupStickinessConfigPtrType)(v)
}

func (*listenerTargetGroupStickinessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerTargetGroupStickinessConfig)(nil)).Elem()
}

func (i *listenerTargetGroupStickinessConfigPtrType) ToListenerTargetGroupStickinessConfigPtrOutput() ListenerTargetGroupStickinessConfigPtrOutput {
	return i.ToListenerTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (i *listenerTargetGroupStickinessConfigPtrType) ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTargetGroupStickinessConfigPtrOutput)
}

func (i *listenerTargetGroupStickinessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*ListenerTargetGroupStickinessConfig] {
	return pulumix.Output[*ListenerTargetGroupStickinessConfig]{
		OutputState: i.ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type ListenerTargetGroupStickinessConfigOutput struct{ *pulumi.OutputState }

func (ListenerTargetGroupStickinessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTargetGroupStickinessConfig)(nil)).Elem()
}

func (o ListenerTargetGroupStickinessConfigOutput) ToListenerTargetGroupStickinessConfigOutput() ListenerTargetGroupStickinessConfigOutput {
	return o
}

func (o ListenerTargetGroupStickinessConfigOutput) ToListenerTargetGroupStickinessConfigOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigOutput {
	return o
}

func (o ListenerTargetGroupStickinessConfigOutput) ToListenerTargetGroupStickinessConfigPtrOutput() ListenerTargetGroupStickinessConfigPtrOutput {
	return o.ToListenerTargetGroupStickinessConfigPtrOutputWithContext(context.Background())
}

func (o ListenerTargetGroupStickinessConfigOutput) ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerTargetGroupStickinessConfig) *ListenerTargetGroupStickinessConfig {
		return &v
	}).(ListenerTargetGroupStickinessConfigPtrOutput)
}

func (o ListenerTargetGroupStickinessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerTargetGroupStickinessConfig] {
	return pulumix.Output[ListenerTargetGroupStickinessConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerTargetGroupStickinessConfigOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerTargetGroupStickinessConfig) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ListenerTargetGroupStickinessConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListenerTargetGroupStickinessConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ListenerTargetGroupStickinessConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerTargetGroupStickinessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerTargetGroupStickinessConfig)(nil)).Elem()
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) ToListenerTargetGroupStickinessConfigPtrOutput() ListenerTargetGroupStickinessConfigPtrOutput {
	return o
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) ToListenerTargetGroupStickinessConfigPtrOutputWithContext(ctx context.Context) ListenerTargetGroupStickinessConfigPtrOutput {
	return o
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListenerTargetGroupStickinessConfig] {
	return pulumix.Output[*ListenerTargetGroupStickinessConfig]{
		OutputState: o.OutputState,
	}
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) Elem() ListenerTargetGroupStickinessConfigOutput {
	return o.ApplyT(func(v *ListenerTargetGroupStickinessConfig) ListenerTargetGroupStickinessConfig {
		if v != nil {
			return *v
		}
		var ret ListenerTargetGroupStickinessConfig
		return ret
	}).(ListenerTargetGroupStickinessConfigOutput)
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerTargetGroupStickinessConfig) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ListenerTargetGroupStickinessConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerTargetGroupStickinessConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ListenerTargetGroupTuple struct {
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	Weight         *int    `pulumi:"weight"`
}

// ListenerTargetGroupTupleInput is an input type that accepts ListenerTargetGroupTupleArgs and ListenerTargetGroupTupleOutput values.
// You can construct a concrete instance of `ListenerTargetGroupTupleInput` via:
//
//	ListenerTargetGroupTupleArgs{...}
type ListenerTargetGroupTupleInput interface {
	pulumi.Input

	ToListenerTargetGroupTupleOutput() ListenerTargetGroupTupleOutput
	ToListenerTargetGroupTupleOutputWithContext(context.Context) ListenerTargetGroupTupleOutput
}

type ListenerTargetGroupTupleArgs struct {
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	Weight         pulumi.IntPtrInput    `pulumi:"weight"`
}

func (ListenerTargetGroupTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTargetGroupTuple)(nil)).Elem()
}

func (i ListenerTargetGroupTupleArgs) ToListenerTargetGroupTupleOutput() ListenerTargetGroupTupleOutput {
	return i.ToListenerTargetGroupTupleOutputWithContext(context.Background())
}

func (i ListenerTargetGroupTupleArgs) ToListenerTargetGroupTupleOutputWithContext(ctx context.Context) ListenerTargetGroupTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTargetGroupTupleOutput)
}

func (i ListenerTargetGroupTupleArgs) ToOutput(ctx context.Context) pulumix.Output[ListenerTargetGroupTuple] {
	return pulumix.Output[ListenerTargetGroupTuple]{
		OutputState: i.ToListenerTargetGroupTupleOutputWithContext(ctx).OutputState,
	}
}

// ListenerTargetGroupTupleArrayInput is an input type that accepts ListenerTargetGroupTupleArray and ListenerTargetGroupTupleArrayOutput values.
// You can construct a concrete instance of `ListenerTargetGroupTupleArrayInput` via:
//
//	ListenerTargetGroupTupleArray{ ListenerTargetGroupTupleArgs{...} }
type ListenerTargetGroupTupleArrayInput interface {
	pulumi.Input

	ToListenerTargetGroupTupleArrayOutput() ListenerTargetGroupTupleArrayOutput
	ToListenerTargetGroupTupleArrayOutputWithContext(context.Context) ListenerTargetGroupTupleArrayOutput
}

type ListenerTargetGroupTupleArray []ListenerTargetGroupTupleInput

func (ListenerTargetGroupTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerTargetGroupTuple)(nil)).Elem()
}

func (i ListenerTargetGroupTupleArray) ToListenerTargetGroupTupleArrayOutput() ListenerTargetGroupTupleArrayOutput {
	return i.ToListenerTargetGroupTupleArrayOutputWithContext(context.Background())
}

func (i ListenerTargetGroupTupleArray) ToListenerTargetGroupTupleArrayOutputWithContext(ctx context.Context) ListenerTargetGroupTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTargetGroupTupleArrayOutput)
}

func (i ListenerTargetGroupTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]ListenerTargetGroupTuple] {
	return pulumix.Output[[]ListenerTargetGroupTuple]{
		OutputState: i.ToListenerTargetGroupTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type ListenerTargetGroupTupleOutput struct{ *pulumi.OutputState }

func (ListenerTargetGroupTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTargetGroupTuple)(nil)).Elem()
}

func (o ListenerTargetGroupTupleOutput) ToListenerTargetGroupTupleOutput() ListenerTargetGroupTupleOutput {
	return o
}

func (o ListenerTargetGroupTupleOutput) ToListenerTargetGroupTupleOutputWithContext(ctx context.Context) ListenerTargetGroupTupleOutput {
	return o
}

func (o ListenerTargetGroupTupleOutput) ToOutput(ctx context.Context) pulumix.Output[ListenerTargetGroupTuple] {
	return pulumix.Output[ListenerTargetGroupTuple]{
		OutputState: o.OutputState,
	}
}

func (o ListenerTargetGroupTupleOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerTargetGroupTuple) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

func (o ListenerTargetGroupTupleOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerTargetGroupTuple) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ListenerTargetGroupTupleArrayOutput struct{ *pulumi.OutputState }

func (ListenerTargetGroupTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerTargetGroupTuple)(nil)).Elem()
}

func (o ListenerTargetGroupTupleArrayOutput) ToListenerTargetGroupTupleArrayOutput() ListenerTargetGroupTupleArrayOutput {
	return o
}

func (o ListenerTargetGroupTupleArrayOutput) ToListenerTargetGroupTupleArrayOutputWithContext(ctx context.Context) ListenerTargetGroupTupleArrayOutput {
	return o
}

func (o ListenerTargetGroupTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListenerTargetGroupTuple] {
	return pulumix.Output[[]ListenerTargetGroupTuple]{
		OutputState: o.OutputState,
	}
}

func (o ListenerTargetGroupTupleArrayOutput) Index(i pulumi.IntInput) ListenerTargetGroupTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerTargetGroupTuple {
		return vs[0].([]ListenerTargetGroupTuple)[vs[1].(int)]
	}).(ListenerTargetGroupTupleOutput)
}

type LoadBalancerAttribute struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// LoadBalancerAttributeInput is an input type that accepts LoadBalancerAttributeArgs and LoadBalancerAttributeOutput values.
// You can construct a concrete instance of `LoadBalancerAttributeInput` via:
//
//	LoadBalancerAttributeArgs{...}
type LoadBalancerAttributeInput interface {
	pulumi.Input

	ToLoadBalancerAttributeOutput() LoadBalancerAttributeOutput
	ToLoadBalancerAttributeOutputWithContext(context.Context) LoadBalancerAttributeOutput
}

type LoadBalancerAttributeArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadBalancerAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttribute)(nil)).Elem()
}

func (i LoadBalancerAttributeArgs) ToLoadBalancerAttributeOutput() LoadBalancerAttributeOutput {
	return i.ToLoadBalancerAttributeOutputWithContext(context.Background())
}

func (i LoadBalancerAttributeArgs) ToLoadBalancerAttributeOutputWithContext(ctx context.Context) LoadBalancerAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributeOutput)
}

func (i LoadBalancerAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerAttribute] {
	return pulumix.Output[LoadBalancerAttribute]{
		OutputState: i.ToLoadBalancerAttributeOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerAttributeArrayInput is an input type that accepts LoadBalancerAttributeArray and LoadBalancerAttributeArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributeArrayInput` via:
//
//	LoadBalancerAttributeArray{ LoadBalancerAttributeArgs{...} }
type LoadBalancerAttributeArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributeArrayOutput() LoadBalancerAttributeArrayOutput
	ToLoadBalancerAttributeArrayOutputWithContext(context.Context) LoadBalancerAttributeArrayOutput
}

type LoadBalancerAttributeArray []LoadBalancerAttributeInput

func (LoadBalancerAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttribute)(nil)).Elem()
}

func (i LoadBalancerAttributeArray) ToLoadBalancerAttributeArrayOutput() LoadBalancerAttributeArrayOutput {
	return i.ToLoadBalancerAttributeArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributeArray) ToLoadBalancerAttributeArrayOutputWithContext(ctx context.Context) LoadBalancerAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributeArrayOutput)
}

func (i LoadBalancerAttributeArray) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerAttribute] {
	return pulumix.Output[[]LoadBalancerAttribute]{
		OutputState: i.ToLoadBalancerAttributeArrayOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerAttributeOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAttribute)(nil)).Elem()
}

func (o LoadBalancerAttributeOutput) ToLoadBalancerAttributeOutput() LoadBalancerAttributeOutput {
	return o
}

func (o LoadBalancerAttributeOutput) ToLoadBalancerAttributeOutputWithContext(ctx context.Context) LoadBalancerAttributeOutput {
	return o
}

func (o LoadBalancerAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerAttribute] {
	return pulumix.Output[LoadBalancerAttribute]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerAttributeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttribute) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadBalancerAttributeArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerAttribute)(nil)).Elem()
}

func (o LoadBalancerAttributeArrayOutput) ToLoadBalancerAttributeArrayOutput() LoadBalancerAttributeArrayOutput {
	return o
}

func (o LoadBalancerAttributeArrayOutput) ToLoadBalancerAttributeArrayOutputWithContext(ctx context.Context) LoadBalancerAttributeArrayOutput {
	return o
}

func (o LoadBalancerAttributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerAttribute] {
	return pulumix.Output[[]LoadBalancerAttribute]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerAttributeArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerAttribute {
		return vs[0].([]LoadBalancerAttribute)[vs[1].(int)]
	}).(LoadBalancerAttributeOutput)
}

type LoadBalancerSubnetMapping struct {
	AllocationId       *string `pulumi:"allocationId"`
	IPv6Address        *string `pulumi:"iPv6Address"`
	PrivateIPv4Address *string `pulumi:"privateIPv4Address"`
	SubnetId           string  `pulumi:"subnetId"`
}

// LoadBalancerSubnetMappingInput is an input type that accepts LoadBalancerSubnetMappingArgs and LoadBalancerSubnetMappingOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingInput` via:
//
//	LoadBalancerSubnetMappingArgs{...}
type LoadBalancerSubnetMappingInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput
	ToLoadBalancerSubnetMappingOutputWithContext(context.Context) LoadBalancerSubnetMappingOutput
}

type LoadBalancerSubnetMappingArgs struct {
	AllocationId       pulumi.StringPtrInput `pulumi:"allocationId"`
	IPv6Address        pulumi.StringPtrInput `pulumi:"iPv6Address"`
	PrivateIPv4Address pulumi.StringPtrInput `pulumi:"privateIPv4Address"`
	SubnetId           pulumi.StringInput    `pulumi:"subnetId"`
}

func (LoadBalancerSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return i.ToLoadBalancerSubnetMappingOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingOutput)
}

func (i LoadBalancerSubnetMappingArgs) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerSubnetMapping] {
	return pulumix.Output[LoadBalancerSubnetMapping]{
		OutputState: i.ToLoadBalancerSubnetMappingOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerSubnetMappingArrayInput is an input type that accepts LoadBalancerSubnetMappingArray and LoadBalancerSubnetMappingArrayOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingArrayInput` via:
//
//	LoadBalancerSubnetMappingArray{ LoadBalancerSubnetMappingArgs{...} }
type LoadBalancerSubnetMappingArrayInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput
	ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Context) LoadBalancerSubnetMappingArrayOutput
}

type LoadBalancerSubnetMappingArray []LoadBalancerSubnetMappingInput

func (LoadBalancerSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return i.ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingArrayOutput)
}

func (i LoadBalancerSubnetMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerSubnetMapping] {
	return pulumix.Output[[]LoadBalancerSubnetMapping]{
		OutputState: i.ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerSubnetMappingOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return o
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return o
}

func (o LoadBalancerSubnetMappingOutput) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerSubnetMapping] {
	return pulumix.Output[LoadBalancerSubnetMapping]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerSubnetMappingOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerSubnetMappingOutput) IPv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.IPv6Address }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerSubnetMappingOutput) PrivateIPv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.PrivateIPv4Address }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type LoadBalancerSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerSubnetMapping] {
	return pulumix.Output[[]LoadBalancerSubnetMapping]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerSubnetMappingArrayOutput) Index(i pulumi.IntInput) LoadBalancerSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerSubnetMapping {
		return vs[0].([]LoadBalancerSubnetMapping)[vs[1].(int)]
	}).(LoadBalancerSubnetMappingOutput)
}

type LoadBalancerTag struct {
	Key   string  `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// LoadBalancerTagInput is an input type that accepts LoadBalancerTagArgs and LoadBalancerTagOutput values.
// You can construct a concrete instance of `LoadBalancerTagInput` via:
//
//	LoadBalancerTagArgs{...}
type LoadBalancerTagInput interface {
	pulumi.Input

	ToLoadBalancerTagOutput() LoadBalancerTagOutput
	ToLoadBalancerTagOutputWithContext(context.Context) LoadBalancerTagOutput
}

type LoadBalancerTagArgs struct {
	Key   pulumi.StringInput    `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadBalancerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerTag)(nil)).Elem()
}

func (i LoadBalancerTagArgs) ToLoadBalancerTagOutput() LoadBalancerTagOutput {
	return i.ToLoadBalancerTagOutputWithContext(context.Background())
}

func (i LoadBalancerTagArgs) ToLoadBalancerTagOutputWithContext(ctx context.Context) LoadBalancerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerTagOutput)
}

func (i LoadBalancerTagArgs) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerTag] {
	return pulumix.Output[LoadBalancerTag]{
		OutputState: i.ToLoadBalancerTagOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerTagArrayInput is an input type that accepts LoadBalancerTagArray and LoadBalancerTagArrayOutput values.
// You can construct a concrete instance of `LoadBalancerTagArrayInput` via:
//
//	LoadBalancerTagArray{ LoadBalancerTagArgs{...} }
type LoadBalancerTagArrayInput interface {
	pulumi.Input

	ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput
	ToLoadBalancerTagArrayOutputWithContext(context.Context) LoadBalancerTagArrayOutput
}

type LoadBalancerTagArray []LoadBalancerTagInput

func (LoadBalancerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerTag)(nil)).Elem()
}

func (i LoadBalancerTagArray) ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput {
	return i.ToLoadBalancerTagArrayOutputWithContext(context.Background())
}

func (i LoadBalancerTagArray) ToLoadBalancerTagArrayOutputWithContext(ctx context.Context) LoadBalancerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerTagArrayOutput)
}

func (i LoadBalancerTagArray) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerTag] {
	return pulumix.Output[[]LoadBalancerTag]{
		OutputState: i.ToLoadBalancerTagArrayOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerTagOutput struct{ *pulumi.OutputState }

func (LoadBalancerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerTag)(nil)).Elem()
}

func (o LoadBalancerTagOutput) ToLoadBalancerTagOutput() LoadBalancerTagOutput {
	return o
}

func (o LoadBalancerTagOutput) ToLoadBalancerTagOutputWithContext(ctx context.Context) LoadBalancerTagOutput {
	return o
}

func (o LoadBalancerTagOutput) ToOutput(ctx context.Context) pulumix.Output[LoadBalancerTag] {
	return pulumix.Output[LoadBalancerTag]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o LoadBalancerTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadBalancerTagArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerTag)(nil)).Elem()
}

func (o LoadBalancerTagArrayOutput) ToLoadBalancerTagArrayOutput() LoadBalancerTagArrayOutput {
	return o
}

func (o LoadBalancerTagArrayOutput) ToLoadBalancerTagArrayOutputWithContext(ctx context.Context) LoadBalancerTagArrayOutput {
	return o
}

func (o LoadBalancerTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]LoadBalancerTag] {
	return pulumix.Output[[]LoadBalancerTag]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerTagArrayOutput) Index(i pulumi.IntInput) LoadBalancerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerTag {
		return vs[0].([]LoadBalancerTag)[vs[1].(int)]
	}).(LoadBalancerTagOutput)
}

type TargetGroupAttribute struct {
	// The value of the attribute.
	Key *string `pulumi:"key"`
	// The name of the attribute.
	Value *string `pulumi:"value"`
}

// TargetGroupAttributeInput is an input type that accepts TargetGroupAttributeArgs and TargetGroupAttributeOutput values.
// You can construct a concrete instance of `TargetGroupAttributeInput` via:
//
//	TargetGroupAttributeArgs{...}
type TargetGroupAttributeInput interface {
	pulumi.Input

	ToTargetGroupAttributeOutput() TargetGroupAttributeOutput
	ToTargetGroupAttributeOutputWithContext(context.Context) TargetGroupAttributeOutput
}

type TargetGroupAttributeArgs struct {
	// The value of the attribute.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the attribute.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetGroupAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttribute)(nil)).Elem()
}

func (i TargetGroupAttributeArgs) ToTargetGroupAttributeOutput() TargetGroupAttributeOutput {
	return i.ToTargetGroupAttributeOutputWithContext(context.Background())
}

func (i TargetGroupAttributeArgs) ToTargetGroupAttributeOutputWithContext(ctx context.Context) TargetGroupAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttributeOutput)
}

func (i TargetGroupAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[TargetGroupAttribute] {
	return pulumix.Output[TargetGroupAttribute]{
		OutputState: i.ToTargetGroupAttributeOutputWithContext(ctx).OutputState,
	}
}

// TargetGroupAttributeArrayInput is an input type that accepts TargetGroupAttributeArray and TargetGroupAttributeArrayOutput values.
// You can construct a concrete instance of `TargetGroupAttributeArrayInput` via:
//
//	TargetGroupAttributeArray{ TargetGroupAttributeArgs{...} }
type TargetGroupAttributeArrayInput interface {
	pulumi.Input

	ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput
	ToTargetGroupAttributeArrayOutputWithContext(context.Context) TargetGroupAttributeArrayOutput
}

type TargetGroupAttributeArray []TargetGroupAttributeInput

func (TargetGroupAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttribute)(nil)).Elem()
}

func (i TargetGroupAttributeArray) ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput {
	return i.ToTargetGroupAttributeArrayOutputWithContext(context.Background())
}

func (i TargetGroupAttributeArray) ToTargetGroupAttributeArrayOutputWithContext(ctx context.Context) TargetGroupAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupAttributeArrayOutput)
}

func (i TargetGroupAttributeArray) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupAttribute] {
	return pulumix.Output[[]TargetGroupAttribute]{
		OutputState: i.ToTargetGroupAttributeArrayOutputWithContext(ctx).OutputState,
	}
}

type TargetGroupAttributeOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttribute)(nil)).Elem()
}

func (o TargetGroupAttributeOutput) ToTargetGroupAttributeOutput() TargetGroupAttributeOutput {
	return o
}

func (o TargetGroupAttributeOutput) ToTargetGroupAttributeOutputWithContext(ctx context.Context) TargetGroupAttributeOutput {
	return o
}

func (o TargetGroupAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[TargetGroupAttribute] {
	return pulumix.Output[TargetGroupAttribute]{
		OutputState: o.OutputState,
	}
}

// The value of the attribute.
func (o TargetGroupAttributeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttribute) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the attribute.
func (o TargetGroupAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetGroupAttributeArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupAttribute)(nil)).Elem()
}

func (o TargetGroupAttributeArrayOutput) ToTargetGroupAttributeArrayOutput() TargetGroupAttributeArrayOutput {
	return o
}

func (o TargetGroupAttributeArrayOutput) ToTargetGroupAttributeArrayOutputWithContext(ctx context.Context) TargetGroupAttributeArrayOutput {
	return o
}

func (o TargetGroupAttributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupAttribute] {
	return pulumix.Output[[]TargetGroupAttribute]{
		OutputState: o.OutputState,
	}
}

func (o TargetGroupAttributeArrayOutput) Index(i pulumi.IntInput) TargetGroupAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupAttribute {
		return vs[0].([]TargetGroupAttribute)[vs[1].(int)]
	}).(TargetGroupAttributeOutput)
}

type TargetGroupMatcher struct {
	// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
	GrpcCode *string `pulumi:"grpcCode"`
	// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
	HttpCode *string `pulumi:"httpCode"`
}

// TargetGroupMatcherInput is an input type that accepts TargetGroupMatcherArgs and TargetGroupMatcherOutput values.
// You can construct a concrete instance of `TargetGroupMatcherInput` via:
//
//	TargetGroupMatcherArgs{...}
type TargetGroupMatcherInput interface {
	pulumi.Input

	ToTargetGroupMatcherOutput() TargetGroupMatcherOutput
	ToTargetGroupMatcherOutputWithContext(context.Context) TargetGroupMatcherOutput
}

type TargetGroupMatcherArgs struct {
	// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
	GrpcCode pulumi.StringPtrInput `pulumi:"grpcCode"`
	// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
	HttpCode pulumi.StringPtrInput `pulumi:"httpCode"`
}

func (TargetGroupMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupMatcher)(nil)).Elem()
}

func (i TargetGroupMatcherArgs) ToTargetGroupMatcherOutput() TargetGroupMatcherOutput {
	return i.ToTargetGroupMatcherOutputWithContext(context.Background())
}

func (i TargetGroupMatcherArgs) ToTargetGroupMatcherOutputWithContext(ctx context.Context) TargetGroupMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupMatcherOutput)
}

func (i TargetGroupMatcherArgs) ToOutput(ctx context.Context) pulumix.Output[TargetGroupMatcher] {
	return pulumix.Output[TargetGroupMatcher]{
		OutputState: i.ToTargetGroupMatcherOutputWithContext(ctx).OutputState,
	}
}

func (i TargetGroupMatcherArgs) ToTargetGroupMatcherPtrOutput() TargetGroupMatcherPtrOutput {
	return i.ToTargetGroupMatcherPtrOutputWithContext(context.Background())
}

func (i TargetGroupMatcherArgs) ToTargetGroupMatcherPtrOutputWithContext(ctx context.Context) TargetGroupMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupMatcherOutput).ToTargetGroupMatcherPtrOutputWithContext(ctx)
}

// TargetGroupMatcherPtrInput is an input type that accepts TargetGroupMatcherArgs, TargetGroupMatcherPtr and TargetGroupMatcherPtrOutput values.
// You can construct a concrete instance of `TargetGroupMatcherPtrInput` via:
//
//	        TargetGroupMatcherArgs{...}
//
//	or:
//
//	        nil
type TargetGroupMatcherPtrInput interface {
	pulumi.Input

	ToTargetGroupMatcherPtrOutput() TargetGroupMatcherPtrOutput
	ToTargetGroupMatcherPtrOutputWithContext(context.Context) TargetGroupMatcherPtrOutput
}

type targetGroupMatcherPtrType TargetGroupMatcherArgs

func TargetGroupMatcherPtr(v *TargetGroupMatcherArgs) TargetGroupMatcherPtrInput {
	return (*targetGroupMatcherPtrType)(v)
}

func (*targetGroupMatcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupMatcher)(nil)).Elem()
}

func (i *targetGroupMatcherPtrType) ToTargetGroupMatcherPtrOutput() TargetGroupMatcherPtrOutput {
	return i.ToTargetGroupMatcherPtrOutputWithContext(context.Background())
}

func (i *targetGroupMatcherPtrType) ToTargetGroupMatcherPtrOutputWithContext(ctx context.Context) TargetGroupMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupMatcherPtrOutput)
}

func (i *targetGroupMatcherPtrType) ToOutput(ctx context.Context) pulumix.Output[*TargetGroupMatcher] {
	return pulumix.Output[*TargetGroupMatcher]{
		OutputState: i.ToTargetGroupMatcherPtrOutputWithContext(ctx).OutputState,
	}
}

type TargetGroupMatcherOutput struct{ *pulumi.OutputState }

func (TargetGroupMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupMatcher)(nil)).Elem()
}

func (o TargetGroupMatcherOutput) ToTargetGroupMatcherOutput() TargetGroupMatcherOutput {
	return o
}

func (o TargetGroupMatcherOutput) ToTargetGroupMatcherOutputWithContext(ctx context.Context) TargetGroupMatcherOutput {
	return o
}

func (o TargetGroupMatcherOutput) ToTargetGroupMatcherPtrOutput() TargetGroupMatcherPtrOutput {
	return o.ToTargetGroupMatcherPtrOutputWithContext(context.Background())
}

func (o TargetGroupMatcherOutput) ToTargetGroupMatcherPtrOutputWithContext(ctx context.Context) TargetGroupMatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupMatcher) *TargetGroupMatcher {
		return &v
	}).(TargetGroupMatcherPtrOutput)
}

func (o TargetGroupMatcherOutput) ToOutput(ctx context.Context) pulumix.Output[TargetGroupMatcher] {
	return pulumix.Output[TargetGroupMatcher]{
		OutputState: o.OutputState,
	}
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o TargetGroupMatcherOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupMatcher) *string { return v.GrpcCode }).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o TargetGroupMatcherOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupMatcher) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

type TargetGroupMatcherPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupMatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupMatcher)(nil)).Elem()
}

func (o TargetGroupMatcherPtrOutput) ToTargetGroupMatcherPtrOutput() TargetGroupMatcherPtrOutput {
	return o
}

func (o TargetGroupMatcherPtrOutput) ToTargetGroupMatcherPtrOutputWithContext(ctx context.Context) TargetGroupMatcherPtrOutput {
	return o
}

func (o TargetGroupMatcherPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TargetGroupMatcher] {
	return pulumix.Output[*TargetGroupMatcher]{
		OutputState: o.OutputState,
	}
}

func (o TargetGroupMatcherPtrOutput) Elem() TargetGroupMatcherOutput {
	return o.ApplyT(func(v *TargetGroupMatcher) TargetGroupMatcher {
		if v != nil {
			return *v
		}
		var ret TargetGroupMatcher
		return ret
	}).(TargetGroupMatcherOutput)
}

// You can specify values between 0 and 99. You can specify multiple values, or a range of values. The default value is 12.
func (o TargetGroupMatcherPtrOutput) GrpcCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupMatcher) *string {
		if v == nil {
			return nil
		}
		return v.GrpcCode
	}).(pulumi.StringPtrOutput)
}

// For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values or a range of values.
func (o TargetGroupMatcherPtrOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupMatcher) *string {
		if v == nil {
			return nil
		}
		return v.HttpCode
	}).(pulumi.StringPtrOutput)
}

type TargetGroupTag struct {
	// The value for the tag.
	Key string `pulumi:"key"`
	// The key name of the tag.
	Value string `pulumi:"value"`
}

// TargetGroupTagInput is an input type that accepts TargetGroupTagArgs and TargetGroupTagOutput values.
// You can construct a concrete instance of `TargetGroupTagInput` via:
//
//	TargetGroupTagArgs{...}
type TargetGroupTagInput interface {
	pulumi.Input

	ToTargetGroupTagOutput() TargetGroupTagOutput
	ToTargetGroupTagOutputWithContext(context.Context) TargetGroupTagOutput
}

type TargetGroupTagArgs struct {
	// The value for the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The key name of the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TargetGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTag)(nil)).Elem()
}

func (i TargetGroupTagArgs) ToTargetGroupTagOutput() TargetGroupTagOutput {
	return i.ToTargetGroupTagOutputWithContext(context.Background())
}

func (i TargetGroupTagArgs) ToTargetGroupTagOutputWithContext(ctx context.Context) TargetGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTagOutput)
}

func (i TargetGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[TargetGroupTag] {
	return pulumix.Output[TargetGroupTag]{
		OutputState: i.ToTargetGroupTagOutputWithContext(ctx).OutputState,
	}
}

// TargetGroupTagArrayInput is an input type that accepts TargetGroupTagArray and TargetGroupTagArrayOutput values.
// You can construct a concrete instance of `TargetGroupTagArrayInput` via:
//
//	TargetGroupTagArray{ TargetGroupTagArgs{...} }
type TargetGroupTagArrayInput interface {
	pulumi.Input

	ToTargetGroupTagArrayOutput() TargetGroupTagArrayOutput
	ToTargetGroupTagArrayOutputWithContext(context.Context) TargetGroupTagArrayOutput
}

type TargetGroupTagArray []TargetGroupTagInput

func (TargetGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTag)(nil)).Elem()
}

func (i TargetGroupTagArray) ToTargetGroupTagArrayOutput() TargetGroupTagArrayOutput {
	return i.ToTargetGroupTagArrayOutputWithContext(context.Background())
}

func (i TargetGroupTagArray) ToTargetGroupTagArrayOutputWithContext(ctx context.Context) TargetGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTagArrayOutput)
}

func (i TargetGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupTag] {
	return pulumix.Output[[]TargetGroupTag]{
		OutputState: i.ToTargetGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

type TargetGroupTagOutput struct{ *pulumi.OutputState }

func (TargetGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTag)(nil)).Elem()
}

func (o TargetGroupTagOutput) ToTargetGroupTagOutput() TargetGroupTagOutput {
	return o
}

func (o TargetGroupTagOutput) ToTargetGroupTagOutputWithContext(ctx context.Context) TargetGroupTagOutput {
	return o
}

func (o TargetGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[TargetGroupTag] {
	return pulumix.Output[TargetGroupTag]{
		OutputState: o.OutputState,
	}
}

// The value for the tag.
func (o TargetGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The key name of the tag.
func (o TargetGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type TargetGroupTagArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTag)(nil)).Elem()
}

func (o TargetGroupTagArrayOutput) ToTargetGroupTagArrayOutput() TargetGroupTagArrayOutput {
	return o
}

func (o TargetGroupTagArrayOutput) ToTargetGroupTagArrayOutputWithContext(ctx context.Context) TargetGroupTagArrayOutput {
	return o
}

func (o TargetGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupTag] {
	return pulumix.Output[[]TargetGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o TargetGroupTagArrayOutput) Index(i pulumi.IntInput) TargetGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTag {
		return vs[0].([]TargetGroupTag)[vs[1].(int)]
	}).(TargetGroupTagOutput)
}

type TargetGroupTargetDescription struct {
	// An Availability Zone or all. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The ID of the target. If the target type of the target group is instance, specify an instance ID. If the target type is ip, specify an IP address. If the target type is lambda, specify the ARN of the Lambda function. If the target type is alb, specify the ARN of the Application Load Balancer target.
	Id string `pulumi:"id"`
	// The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is alb, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. Not used if the target is a Lambda function.
	Port *int `pulumi:"port"`
}

// TargetGroupTargetDescriptionInput is an input type that accepts TargetGroupTargetDescriptionArgs and TargetGroupTargetDescriptionOutput values.
// You can construct a concrete instance of `TargetGroupTargetDescriptionInput` via:
//
//	TargetGroupTargetDescriptionArgs{...}
type TargetGroupTargetDescriptionInput interface {
	pulumi.Input

	ToTargetGroupTargetDescriptionOutput() TargetGroupTargetDescriptionOutput
	ToTargetGroupTargetDescriptionOutputWithContext(context.Context) TargetGroupTargetDescriptionOutput
}

type TargetGroupTargetDescriptionArgs struct {
	// An Availability Zone or all. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The ID of the target. If the target type of the target group is instance, specify an instance ID. If the target type is ip, specify an IP address. If the target type is lambda, specify the ARN of the Lambda function. If the target type is alb, specify the ARN of the Application Load Balancer target.
	Id pulumi.StringInput `pulumi:"id"`
	// The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is alb, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. Not used if the target is a Lambda function.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (TargetGroupTargetDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetDescription)(nil)).Elem()
}

func (i TargetGroupTargetDescriptionArgs) ToTargetGroupTargetDescriptionOutput() TargetGroupTargetDescriptionOutput {
	return i.ToTargetGroupTargetDescriptionOutputWithContext(context.Background())
}

func (i TargetGroupTargetDescriptionArgs) ToTargetGroupTargetDescriptionOutputWithContext(ctx context.Context) TargetGroupTargetDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetDescriptionOutput)
}

func (i TargetGroupTargetDescriptionArgs) ToOutput(ctx context.Context) pulumix.Output[TargetGroupTargetDescription] {
	return pulumix.Output[TargetGroupTargetDescription]{
		OutputState: i.ToTargetGroupTargetDescriptionOutputWithContext(ctx).OutputState,
	}
}

// TargetGroupTargetDescriptionArrayInput is an input type that accepts TargetGroupTargetDescriptionArray and TargetGroupTargetDescriptionArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetDescriptionArrayInput` via:
//
//	TargetGroupTargetDescriptionArray{ TargetGroupTargetDescriptionArgs{...} }
type TargetGroupTargetDescriptionArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetDescriptionArrayOutput() TargetGroupTargetDescriptionArrayOutput
	ToTargetGroupTargetDescriptionArrayOutputWithContext(context.Context) TargetGroupTargetDescriptionArrayOutput
}

type TargetGroupTargetDescriptionArray []TargetGroupTargetDescriptionInput

func (TargetGroupTargetDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetDescription)(nil)).Elem()
}

func (i TargetGroupTargetDescriptionArray) ToTargetGroupTargetDescriptionArrayOutput() TargetGroupTargetDescriptionArrayOutput {
	return i.ToTargetGroupTargetDescriptionArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetDescriptionArray) ToTargetGroupTargetDescriptionArrayOutputWithContext(ctx context.Context) TargetGroupTargetDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetDescriptionArrayOutput)
}

func (i TargetGroupTargetDescriptionArray) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupTargetDescription] {
	return pulumix.Output[[]TargetGroupTargetDescription]{
		OutputState: i.ToTargetGroupTargetDescriptionArrayOutputWithContext(ctx).OutputState,
	}
}

type TargetGroupTargetDescriptionOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTargetDescription)(nil)).Elem()
}

func (o TargetGroupTargetDescriptionOutput) ToTargetGroupTargetDescriptionOutput() TargetGroupTargetDescriptionOutput {
	return o
}

func (o TargetGroupTargetDescriptionOutput) ToTargetGroupTargetDescriptionOutputWithContext(ctx context.Context) TargetGroupTargetDescriptionOutput {
	return o
}

func (o TargetGroupTargetDescriptionOutput) ToOutput(ctx context.Context) pulumix.Output[TargetGroupTargetDescription] {
	return pulumix.Output[TargetGroupTargetDescription]{
		OutputState: o.OutputState,
	}
}

// An Availability Zone or all. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.
func (o TargetGroupTargetDescriptionOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupTargetDescription) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The ID of the target. If the target type of the target group is instance, specify an instance ID. If the target type is ip, specify an IP address. If the target type is lambda, specify the ARN of the Lambda function. If the target type is alb, specify the ARN of the Application Load Balancer target.
func (o TargetGroupTargetDescriptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTargetDescription) string { return v.Id }).(pulumi.StringOutput)
}

// The port on which the target is listening. If the target group protocol is GENEVE, the supported port is 6081. If the target type is alb, the targeted Application Load Balancer must have at least one listener whose port matches the target group port. Not used if the target is a Lambda function.
func (o TargetGroupTargetDescriptionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupTargetDescription) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type TargetGroupTargetDescriptionArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTargetDescription)(nil)).Elem()
}

func (o TargetGroupTargetDescriptionArrayOutput) ToTargetGroupTargetDescriptionArrayOutput() TargetGroupTargetDescriptionArrayOutput {
	return o
}

func (o TargetGroupTargetDescriptionArrayOutput) ToTargetGroupTargetDescriptionArrayOutputWithContext(ctx context.Context) TargetGroupTargetDescriptionArrayOutput {
	return o
}

func (o TargetGroupTargetDescriptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TargetGroupTargetDescription] {
	return pulumix.Output[[]TargetGroupTargetDescription]{
		OutputState: o.OutputState,
	}
}

func (o TargetGroupTargetDescriptionArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTargetDescription {
		return vs[0].([]TargetGroupTargetDescription)[vs[1].(int)]
	}).(TargetGroupTargetDescriptionOutput)
}

type TrustStoreRevocationType struct {
	NumberOfRevokedEntries *int    `pulumi:"numberOfRevokedEntries"`
	RevocationId           *string `pulumi:"revocationId"`
	RevocationType         *string `pulumi:"revocationType"`
	TrustStoreArn          *string `pulumi:"trustStoreArn"`
}

type TrustStoreRevocationTypeOutput struct{ *pulumi.OutputState }

func (TrustStoreRevocationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustStoreRevocationType)(nil)).Elem()
}

func (o TrustStoreRevocationTypeOutput) ToTrustStoreRevocationTypeOutput() TrustStoreRevocationTypeOutput {
	return o
}

func (o TrustStoreRevocationTypeOutput) ToTrustStoreRevocationTypeOutputWithContext(ctx context.Context) TrustStoreRevocationTypeOutput {
	return o
}

func (o TrustStoreRevocationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[TrustStoreRevocationType] {
	return pulumix.Output[TrustStoreRevocationType]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreRevocationTypeOutput) NumberOfRevokedEntries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationType) *int { return v.NumberOfRevokedEntries }).(pulumi.IntPtrOutput)
}

func (o TrustStoreRevocationTypeOutput) RevocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationType) *string { return v.RevocationId }).(pulumi.StringPtrOutput)
}

func (o TrustStoreRevocationTypeOutput) RevocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationType) *string { return v.RevocationType }).(pulumi.StringPtrOutput)
}

func (o TrustStoreRevocationTypeOutput) TrustStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationType) *string { return v.TrustStoreArn }).(pulumi.StringPtrOutput)
}

type TrustStoreRevocationTypeArrayOutput struct{ *pulumi.OutputState }

func (TrustStoreRevocationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustStoreRevocationType)(nil)).Elem()
}

func (o TrustStoreRevocationTypeArrayOutput) ToTrustStoreRevocationTypeArrayOutput() TrustStoreRevocationTypeArrayOutput {
	return o
}

func (o TrustStoreRevocationTypeArrayOutput) ToTrustStoreRevocationTypeArrayOutputWithContext(ctx context.Context) TrustStoreRevocationTypeArrayOutput {
	return o
}

func (o TrustStoreRevocationTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TrustStoreRevocationType] {
	return pulumix.Output[[]TrustStoreRevocationType]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreRevocationTypeArrayOutput) Index(i pulumi.IntInput) TrustStoreRevocationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustStoreRevocationType {
		return vs[0].([]TrustStoreRevocationType)[vs[1].(int)]
	}).(TrustStoreRevocationTypeOutput)
}

type TrustStoreRevocationRevocationContent struct {
	RevocationType  *string `pulumi:"revocationType"`
	S3Bucket        *string `pulumi:"s3Bucket"`
	S3Key           *string `pulumi:"s3Key"`
	S3ObjectVersion *string `pulumi:"s3ObjectVersion"`
}

// TrustStoreRevocationRevocationContentInput is an input type that accepts TrustStoreRevocationRevocationContentArgs and TrustStoreRevocationRevocationContentOutput values.
// You can construct a concrete instance of `TrustStoreRevocationRevocationContentInput` via:
//
//	TrustStoreRevocationRevocationContentArgs{...}
type TrustStoreRevocationRevocationContentInput interface {
	pulumi.Input

	ToTrustStoreRevocationRevocationContentOutput() TrustStoreRevocationRevocationContentOutput
	ToTrustStoreRevocationRevocationContentOutputWithContext(context.Context) TrustStoreRevocationRevocationContentOutput
}

type TrustStoreRevocationRevocationContentArgs struct {
	RevocationType  pulumi.StringPtrInput `pulumi:"revocationType"`
	S3Bucket        pulumi.StringPtrInput `pulumi:"s3Bucket"`
	S3Key           pulumi.StringPtrInput `pulumi:"s3Key"`
	S3ObjectVersion pulumi.StringPtrInput `pulumi:"s3ObjectVersion"`
}

func (TrustStoreRevocationRevocationContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustStoreRevocationRevocationContent)(nil)).Elem()
}

func (i TrustStoreRevocationRevocationContentArgs) ToTrustStoreRevocationRevocationContentOutput() TrustStoreRevocationRevocationContentOutput {
	return i.ToTrustStoreRevocationRevocationContentOutputWithContext(context.Background())
}

func (i TrustStoreRevocationRevocationContentArgs) ToTrustStoreRevocationRevocationContentOutputWithContext(ctx context.Context) TrustStoreRevocationRevocationContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustStoreRevocationRevocationContentOutput)
}

func (i TrustStoreRevocationRevocationContentArgs) ToOutput(ctx context.Context) pulumix.Output[TrustStoreRevocationRevocationContent] {
	return pulumix.Output[TrustStoreRevocationRevocationContent]{
		OutputState: i.ToTrustStoreRevocationRevocationContentOutputWithContext(ctx).OutputState,
	}
}

// TrustStoreRevocationRevocationContentArrayInput is an input type that accepts TrustStoreRevocationRevocationContentArray and TrustStoreRevocationRevocationContentArrayOutput values.
// You can construct a concrete instance of `TrustStoreRevocationRevocationContentArrayInput` via:
//
//	TrustStoreRevocationRevocationContentArray{ TrustStoreRevocationRevocationContentArgs{...} }
type TrustStoreRevocationRevocationContentArrayInput interface {
	pulumi.Input

	ToTrustStoreRevocationRevocationContentArrayOutput() TrustStoreRevocationRevocationContentArrayOutput
	ToTrustStoreRevocationRevocationContentArrayOutputWithContext(context.Context) TrustStoreRevocationRevocationContentArrayOutput
}

type TrustStoreRevocationRevocationContentArray []TrustStoreRevocationRevocationContentInput

func (TrustStoreRevocationRevocationContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustStoreRevocationRevocationContent)(nil)).Elem()
}

func (i TrustStoreRevocationRevocationContentArray) ToTrustStoreRevocationRevocationContentArrayOutput() TrustStoreRevocationRevocationContentArrayOutput {
	return i.ToTrustStoreRevocationRevocationContentArrayOutputWithContext(context.Background())
}

func (i TrustStoreRevocationRevocationContentArray) ToTrustStoreRevocationRevocationContentArrayOutputWithContext(ctx context.Context) TrustStoreRevocationRevocationContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustStoreRevocationRevocationContentArrayOutput)
}

func (i TrustStoreRevocationRevocationContentArray) ToOutput(ctx context.Context) pulumix.Output[[]TrustStoreRevocationRevocationContent] {
	return pulumix.Output[[]TrustStoreRevocationRevocationContent]{
		OutputState: i.ToTrustStoreRevocationRevocationContentArrayOutputWithContext(ctx).OutputState,
	}
}

type TrustStoreRevocationRevocationContentOutput struct{ *pulumi.OutputState }

func (TrustStoreRevocationRevocationContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustStoreRevocationRevocationContent)(nil)).Elem()
}

func (o TrustStoreRevocationRevocationContentOutput) ToTrustStoreRevocationRevocationContentOutput() TrustStoreRevocationRevocationContentOutput {
	return o
}

func (o TrustStoreRevocationRevocationContentOutput) ToTrustStoreRevocationRevocationContentOutputWithContext(ctx context.Context) TrustStoreRevocationRevocationContentOutput {
	return o
}

func (o TrustStoreRevocationRevocationContentOutput) ToOutput(ctx context.Context) pulumix.Output[TrustStoreRevocationRevocationContent] {
	return pulumix.Output[TrustStoreRevocationRevocationContent]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreRevocationRevocationContentOutput) RevocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationRevocationContent) *string { return v.RevocationType }).(pulumi.StringPtrOutput)
}

func (o TrustStoreRevocationRevocationContentOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationRevocationContent) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

func (o TrustStoreRevocationRevocationContentOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationRevocationContent) *string { return v.S3Key }).(pulumi.StringPtrOutput)
}

func (o TrustStoreRevocationRevocationContentOutput) S3ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustStoreRevocationRevocationContent) *string { return v.S3ObjectVersion }).(pulumi.StringPtrOutput)
}

type TrustStoreRevocationRevocationContentArrayOutput struct{ *pulumi.OutputState }

func (TrustStoreRevocationRevocationContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustStoreRevocationRevocationContent)(nil)).Elem()
}

func (o TrustStoreRevocationRevocationContentArrayOutput) ToTrustStoreRevocationRevocationContentArrayOutput() TrustStoreRevocationRevocationContentArrayOutput {
	return o
}

func (o TrustStoreRevocationRevocationContentArrayOutput) ToTrustStoreRevocationRevocationContentArrayOutputWithContext(ctx context.Context) TrustStoreRevocationRevocationContentArrayOutput {
	return o
}

func (o TrustStoreRevocationRevocationContentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TrustStoreRevocationRevocationContent] {
	return pulumix.Output[[]TrustStoreRevocationRevocationContent]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreRevocationRevocationContentArrayOutput) Index(i pulumi.IntInput) TrustStoreRevocationRevocationContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustStoreRevocationRevocationContent {
		return vs[0].([]TrustStoreRevocationRevocationContent)[vs[1].(int)]
	}).(TrustStoreRevocationRevocationContentOutput)
}

type TrustStoreTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TrustStoreTagInput is an input type that accepts TrustStoreTagArgs and TrustStoreTagOutput values.
// You can construct a concrete instance of `TrustStoreTagInput` via:
//
//	TrustStoreTagArgs{...}
type TrustStoreTagInput interface {
	pulumi.Input

	ToTrustStoreTagOutput() TrustStoreTagOutput
	ToTrustStoreTagOutputWithContext(context.Context) TrustStoreTagOutput
}

type TrustStoreTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrustStoreTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustStoreTag)(nil)).Elem()
}

func (i TrustStoreTagArgs) ToTrustStoreTagOutput() TrustStoreTagOutput {
	return i.ToTrustStoreTagOutputWithContext(context.Background())
}

func (i TrustStoreTagArgs) ToTrustStoreTagOutputWithContext(ctx context.Context) TrustStoreTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustStoreTagOutput)
}

func (i TrustStoreTagArgs) ToOutput(ctx context.Context) pulumix.Output[TrustStoreTag] {
	return pulumix.Output[TrustStoreTag]{
		OutputState: i.ToTrustStoreTagOutputWithContext(ctx).OutputState,
	}
}

// TrustStoreTagArrayInput is an input type that accepts TrustStoreTagArray and TrustStoreTagArrayOutput values.
// You can construct a concrete instance of `TrustStoreTagArrayInput` via:
//
//	TrustStoreTagArray{ TrustStoreTagArgs{...} }
type TrustStoreTagArrayInput interface {
	pulumi.Input

	ToTrustStoreTagArrayOutput() TrustStoreTagArrayOutput
	ToTrustStoreTagArrayOutputWithContext(context.Context) TrustStoreTagArrayOutput
}

type TrustStoreTagArray []TrustStoreTagInput

func (TrustStoreTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustStoreTag)(nil)).Elem()
}

func (i TrustStoreTagArray) ToTrustStoreTagArrayOutput() TrustStoreTagArrayOutput {
	return i.ToTrustStoreTagArrayOutputWithContext(context.Background())
}

func (i TrustStoreTagArray) ToTrustStoreTagArrayOutputWithContext(ctx context.Context) TrustStoreTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustStoreTagArrayOutput)
}

func (i TrustStoreTagArray) ToOutput(ctx context.Context) pulumix.Output[[]TrustStoreTag] {
	return pulumix.Output[[]TrustStoreTag]{
		OutputState: i.ToTrustStoreTagArrayOutputWithContext(ctx).OutputState,
	}
}

type TrustStoreTagOutput struct{ *pulumi.OutputState }

func (TrustStoreTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustStoreTag)(nil)).Elem()
}

func (o TrustStoreTagOutput) ToTrustStoreTagOutput() TrustStoreTagOutput {
	return o
}

func (o TrustStoreTagOutput) ToTrustStoreTagOutputWithContext(ctx context.Context) TrustStoreTagOutput {
	return o
}

func (o TrustStoreTagOutput) ToOutput(ctx context.Context) pulumix.Output[TrustStoreTag] {
	return pulumix.Output[TrustStoreTag]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrustStoreTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o TrustStoreTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrustStoreTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrustStoreTagArrayOutput struct{ *pulumi.OutputState }

func (TrustStoreTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustStoreTag)(nil)).Elem()
}

func (o TrustStoreTagArrayOutput) ToTrustStoreTagArrayOutput() TrustStoreTagArrayOutput {
	return o
}

func (o TrustStoreTagArrayOutput) ToTrustStoreTagArrayOutputWithContext(ctx context.Context) TrustStoreTagArrayOutput {
	return o
}

func (o TrustStoreTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TrustStoreTag] {
	return pulumix.Output[[]TrustStoreTag]{
		OutputState: o.OutputState,
	}
}

func (o TrustStoreTagArrayOutput) Index(i pulumi.IntInput) TrustStoreTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustStoreTag {
		return vs[0].([]TrustStoreTag)[vs[1].(int)]
	}).(TrustStoreTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerActionInput)(nil)).Elem(), ListenerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerActionArrayInput)(nil)).Elem(), ListenerActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerAuthenticateCognitoConfigInput)(nil)).Elem(), ListenerAuthenticateCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerAuthenticateCognitoConfigPtrInput)(nil)).Elem(), ListenerAuthenticateCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerAuthenticateOidcConfigInput)(nil)).Elem(), ListenerAuthenticateOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerAuthenticateOidcConfigPtrInput)(nil)).Elem(), ListenerAuthenticateOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateTypeInput)(nil)).Elem(), ListenerCertificateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateTypeArrayInput)(nil)).Elem(), ListenerCertificateTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateCertificateInput)(nil)).Elem(), ListenerCertificateCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerCertificateCertificateArrayInput)(nil)).Elem(), ListenerCertificateCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerFixedResponseConfigInput)(nil)).Elem(), ListenerFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerFixedResponseConfigPtrInput)(nil)).Elem(), ListenerFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerForwardConfigInput)(nil)).Elem(), ListenerForwardConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerForwardConfigPtrInput)(nil)).Elem(), ListenerForwardConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMutualAuthenticationInput)(nil)).Elem(), ListenerMutualAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerMutualAuthenticationPtrInput)(nil)).Elem(), ListenerMutualAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRedirectConfigInput)(nil)).Elem(), ListenerRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRedirectConfigPtrInput)(nil)).Elem(), ListenerRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionInput)(nil)).Elem(), ListenerRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleActionArrayInput)(nil)).Elem(), ListenerRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleAuthenticateCognitoConfigInput)(nil)).Elem(), ListenerRuleAuthenticateCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleAuthenticateCognitoConfigPtrInput)(nil)).Elem(), ListenerRuleAuthenticateCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleAuthenticateOidcConfigInput)(nil)).Elem(), ListenerRuleAuthenticateOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleAuthenticateOidcConfigPtrInput)(nil)).Elem(), ListenerRuleAuthenticateOidcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleFixedResponseConfigInput)(nil)).Elem(), ListenerRuleFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleFixedResponseConfigPtrInput)(nil)).Elem(), ListenerRuleFixedResponseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleForwardConfigInput)(nil)).Elem(), ListenerRuleForwardConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleForwardConfigPtrInput)(nil)).Elem(), ListenerRuleForwardConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHostHeaderConfigInput)(nil)).Elem(), ListenerRuleHostHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHostHeaderConfigPtrInput)(nil)).Elem(), ListenerRuleHostHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHttpHeaderConfigInput)(nil)).Elem(), ListenerRuleHttpHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHttpHeaderConfigPtrInput)(nil)).Elem(), ListenerRuleHttpHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHttpRequestMethodConfigInput)(nil)).Elem(), ListenerRuleHttpRequestMethodConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleHttpRequestMethodConfigPtrInput)(nil)).Elem(), ListenerRuleHttpRequestMethodConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRulePathPatternConfigInput)(nil)).Elem(), ListenerRulePathPatternConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRulePathPatternConfigPtrInput)(nil)).Elem(), ListenerRulePathPatternConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleQueryStringConfigInput)(nil)).Elem(), ListenerRuleQueryStringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleQueryStringConfigPtrInput)(nil)).Elem(), ListenerRuleQueryStringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleQueryStringKeyValueInput)(nil)).Elem(), ListenerRuleQueryStringKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleQueryStringKeyValueArrayInput)(nil)).Elem(), ListenerRuleQueryStringKeyValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleRedirectConfigInput)(nil)).Elem(), ListenerRuleRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleRedirectConfigPtrInput)(nil)).Elem(), ListenerRuleRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleRuleConditionInput)(nil)).Elem(), ListenerRuleRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleRuleConditionArrayInput)(nil)).Elem(), ListenerRuleRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleSourceIpConfigInput)(nil)).Elem(), ListenerRuleSourceIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleSourceIpConfigPtrInput)(nil)).Elem(), ListenerRuleSourceIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleTargetGroupStickinessConfigInput)(nil)).Elem(), ListenerRuleTargetGroupStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleTargetGroupStickinessConfigPtrInput)(nil)).Elem(), ListenerRuleTargetGroupStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleTargetGroupTupleInput)(nil)).Elem(), ListenerRuleTargetGroupTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerRuleTargetGroupTupleArrayInput)(nil)).Elem(), ListenerRuleTargetGroupTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerTargetGroupStickinessConfigInput)(nil)).Elem(), ListenerTargetGroupStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerTargetGroupStickinessConfigPtrInput)(nil)).Elem(), ListenerTargetGroupStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerTargetGroupTupleInput)(nil)).Elem(), ListenerTargetGroupTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerTargetGroupTupleArrayInput)(nil)).Elem(), ListenerTargetGroupTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributeInput)(nil)).Elem(), LoadBalancerAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributeArrayInput)(nil)).Elem(), LoadBalancerAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSubnetMappingInput)(nil)).Elem(), LoadBalancerSubnetMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerSubnetMappingArrayInput)(nil)).Elem(), LoadBalancerSubnetMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerTagInput)(nil)).Elem(), LoadBalancerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerTagArrayInput)(nil)).Elem(), LoadBalancerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttributeInput)(nil)).Elem(), TargetGroupAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupAttributeArrayInput)(nil)).Elem(), TargetGroupAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupMatcherInput)(nil)).Elem(), TargetGroupMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupMatcherPtrInput)(nil)).Elem(), TargetGroupMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTagInput)(nil)).Elem(), TargetGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTagArrayInput)(nil)).Elem(), TargetGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetDescriptionInput)(nil)).Elem(), TargetGroupTargetDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetDescriptionArrayInput)(nil)).Elem(), TargetGroupTargetDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustStoreRevocationRevocationContentInput)(nil)).Elem(), TrustStoreRevocationRevocationContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustStoreRevocationRevocationContentArrayInput)(nil)).Elem(), TrustStoreRevocationRevocationContentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustStoreTagInput)(nil)).Elem(), TrustStoreTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustStoreTagArrayInput)(nil)).Elem(), TrustStoreTagArray{})
	pulumi.RegisterOutputType(ListenerActionOutput{})
	pulumi.RegisterOutputType(ListenerActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerAuthenticateCognitoConfigOutput{})
	pulumi.RegisterOutputType(ListenerAuthenticateCognitoConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerAuthenticateOidcConfigOutput{})
	pulumi.RegisterOutputType(ListenerAuthenticateOidcConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerCertificateTypeOutput{})
	pulumi.RegisterOutputType(ListenerCertificateTypeArrayOutput{})
	pulumi.RegisterOutputType(ListenerCertificateCertificateOutput{})
	pulumi.RegisterOutputType(ListenerCertificateCertificateArrayOutput{})
	pulumi.RegisterOutputType(ListenerFixedResponseConfigOutput{})
	pulumi.RegisterOutputType(ListenerFixedResponseConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerForwardConfigOutput{})
	pulumi.RegisterOutputType(ListenerForwardConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerMutualAuthenticationOutput{})
	pulumi.RegisterOutputType(ListenerMutualAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ListenerRedirectConfigOutput{})
	pulumi.RegisterOutputType(ListenerRedirectConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleAuthenticateCognitoConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleAuthenticateCognitoConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleAuthenticateOidcConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleAuthenticateOidcConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleFixedResponseConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleFixedResponseConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleForwardConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleForwardConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleHostHeaderConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleHostHeaderConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleHttpHeaderConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleHttpHeaderConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleHttpRequestMethodConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleHttpRequestMethodConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRulePathPatternConfigOutput{})
	pulumi.RegisterOutputType(ListenerRulePathPatternConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleQueryStringConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleQueryStringConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleQueryStringKeyValueOutput{})
	pulumi.RegisterOutputType(ListenerRuleQueryStringKeyValueArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleRedirectConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleRedirectConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleRuleConditionOutput{})
	pulumi.RegisterOutputType(ListenerRuleRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleSourceIpConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleSourceIpConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleTargetGroupStickinessConfigOutput{})
	pulumi.RegisterOutputType(ListenerRuleTargetGroupStickinessConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleTargetGroupTupleOutput{})
	pulumi.RegisterOutputType(ListenerRuleTargetGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(ListenerTargetGroupStickinessConfigOutput{})
	pulumi.RegisterOutputType(ListenerTargetGroupStickinessConfigPtrOutput{})
	pulumi.RegisterOutputType(ListenerTargetGroupTupleOutput{})
	pulumi.RegisterOutputType(ListenerTargetGroupTupleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributeOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributeArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerTagOutput{})
	pulumi.RegisterOutputType(LoadBalancerTagArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeOutput{})
	pulumi.RegisterOutputType(TargetGroupAttributeArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupMatcherOutput{})
	pulumi.RegisterOutputType(TargetGroupMatcherPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupTagOutput{})
	pulumi.RegisterOutputType(TargetGroupTagArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetDescriptionOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetDescriptionArrayOutput{})
	pulumi.RegisterOutputType(TrustStoreRevocationTypeOutput{})
	pulumi.RegisterOutputType(TrustStoreRevocationTypeArrayOutput{})
	pulumi.RegisterOutputType(TrustStoreRevocationRevocationContentOutput{})
	pulumi.RegisterOutputType(TrustStoreRevocationRevocationContentArrayOutput{})
	pulumi.RegisterOutputType(TrustStoreTagOutput{})
	pulumi.RegisterOutputType(TrustStoreTagArrayOutput{})
}
