// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type FleetComputeType string

const (
	FleetComputeTypeBuildGeneral1Small   = FleetComputeType("BUILD_GENERAL1_SMALL")
	FleetComputeTypeBuildGeneral1Medium  = FleetComputeType("BUILD_GENERAL1_MEDIUM")
	FleetComputeTypeBuildGeneral1Large   = FleetComputeType("BUILD_GENERAL1_LARGE")
	FleetComputeTypeBuildGeneral12xlarge = FleetComputeType("BUILD_GENERAL1_2XLARGE")
)

func (FleetComputeType) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetComputeType)(nil)).Elem()
}

func (e FleetComputeType) ToFleetComputeTypeOutput() FleetComputeTypeOutput {
	return pulumi.ToOutput(e).(FleetComputeTypeOutput)
}

func (e FleetComputeType) ToFleetComputeTypeOutputWithContext(ctx context.Context) FleetComputeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetComputeTypeOutput)
}

func (e FleetComputeType) ToFleetComputeTypePtrOutput() FleetComputeTypePtrOutput {
	return e.ToFleetComputeTypePtrOutputWithContext(context.Background())
}

func (e FleetComputeType) ToFleetComputeTypePtrOutputWithContext(ctx context.Context) FleetComputeTypePtrOutput {
	return FleetComputeType(e).ToFleetComputeTypeOutputWithContext(ctx).ToFleetComputeTypePtrOutputWithContext(ctx)
}

func (e FleetComputeType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetComputeType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetComputeType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetComputeType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetComputeTypeOutput struct{ *pulumi.OutputState }

func (FleetComputeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetComputeType)(nil)).Elem()
}

func (o FleetComputeTypeOutput) ToFleetComputeTypeOutput() FleetComputeTypeOutput {
	return o
}

func (o FleetComputeTypeOutput) ToFleetComputeTypeOutputWithContext(ctx context.Context) FleetComputeTypeOutput {
	return o
}

func (o FleetComputeTypeOutput) ToFleetComputeTypePtrOutput() FleetComputeTypePtrOutput {
	return o.ToFleetComputeTypePtrOutputWithContext(context.Background())
}

func (o FleetComputeTypeOutput) ToFleetComputeTypePtrOutputWithContext(ctx context.Context) FleetComputeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetComputeType) *FleetComputeType {
		return &v
	}).(FleetComputeTypePtrOutput)
}

func (o FleetComputeTypeOutput) ToOutput(ctx context.Context) pulumix.Output[FleetComputeType] {
	return pulumix.Output[FleetComputeType]{
		OutputState: o.OutputState,
	}
}

func (o FleetComputeTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetComputeTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetComputeType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetComputeTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetComputeTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetComputeType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetComputeTypePtrOutput struct{ *pulumi.OutputState }

func (FleetComputeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetComputeType)(nil)).Elem()
}

func (o FleetComputeTypePtrOutput) ToFleetComputeTypePtrOutput() FleetComputeTypePtrOutput {
	return o
}

func (o FleetComputeTypePtrOutput) ToFleetComputeTypePtrOutputWithContext(ctx context.Context) FleetComputeTypePtrOutput {
	return o
}

func (o FleetComputeTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FleetComputeType] {
	return pulumix.Output[*FleetComputeType]{
		OutputState: o.OutputState,
	}
}

func (o FleetComputeTypePtrOutput) Elem() FleetComputeTypeOutput {
	return o.ApplyT(func(v *FleetComputeType) FleetComputeType {
		if v != nil {
			return *v
		}
		var ret FleetComputeType
		return ret
	}).(FleetComputeTypeOutput)
}

func (o FleetComputeTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetComputeTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetComputeType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetComputeTypeInput is an input type that accepts FleetComputeTypeArgs and FleetComputeTypeOutput values.
// You can construct a concrete instance of `FleetComputeTypeInput` via:
//
//	FleetComputeTypeArgs{...}
type FleetComputeTypeInput interface {
	pulumi.Input

	ToFleetComputeTypeOutput() FleetComputeTypeOutput
	ToFleetComputeTypeOutputWithContext(context.Context) FleetComputeTypeOutput
}

var fleetComputeTypePtrType = reflect.TypeOf((**FleetComputeType)(nil)).Elem()

type FleetComputeTypePtrInput interface {
	pulumi.Input

	ToFleetComputeTypePtrOutput() FleetComputeTypePtrOutput
	ToFleetComputeTypePtrOutputWithContext(context.Context) FleetComputeTypePtrOutput
}

type fleetComputeTypePtr string

func FleetComputeTypePtr(v string) FleetComputeTypePtrInput {
	return (*fleetComputeTypePtr)(&v)
}

func (*fleetComputeTypePtr) ElementType() reflect.Type {
	return fleetComputeTypePtrType
}

func (in *fleetComputeTypePtr) ToFleetComputeTypePtrOutput() FleetComputeTypePtrOutput {
	return pulumi.ToOutput(in).(FleetComputeTypePtrOutput)
}

func (in *fleetComputeTypePtr) ToFleetComputeTypePtrOutputWithContext(ctx context.Context) FleetComputeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetComputeTypePtrOutput)
}

func (in *fleetComputeTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FleetComputeType] {
	return pulumix.Output[*FleetComputeType]{
		OutputState: in.ToFleetComputeTypePtrOutputWithContext(ctx).OutputState,
	}
}

type FleetEnvironmentType string

const (
	FleetEnvironmentTypeWindowsServer2019Container = FleetEnvironmentType("WINDOWS_SERVER_2019_CONTAINER")
	FleetEnvironmentTypeWindowsServer2022Container = FleetEnvironmentType("WINDOWS_SERVER_2022_CONTAINER")
	FleetEnvironmentTypeLinuxContainer             = FleetEnvironmentType("LINUX_CONTAINER")
	FleetEnvironmentTypeLinuxGpuContainer          = FleetEnvironmentType("LINUX_GPU_CONTAINER")
	FleetEnvironmentTypeArmContainer               = FleetEnvironmentType("ARM_CONTAINER")
)

func (FleetEnvironmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetEnvironmentType)(nil)).Elem()
}

func (e FleetEnvironmentType) ToFleetEnvironmentTypeOutput() FleetEnvironmentTypeOutput {
	return pulumi.ToOutput(e).(FleetEnvironmentTypeOutput)
}

func (e FleetEnvironmentType) ToFleetEnvironmentTypeOutputWithContext(ctx context.Context) FleetEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FleetEnvironmentTypeOutput)
}

func (e FleetEnvironmentType) ToFleetEnvironmentTypePtrOutput() FleetEnvironmentTypePtrOutput {
	return e.ToFleetEnvironmentTypePtrOutputWithContext(context.Background())
}

func (e FleetEnvironmentType) ToFleetEnvironmentTypePtrOutputWithContext(ctx context.Context) FleetEnvironmentTypePtrOutput {
	return FleetEnvironmentType(e).ToFleetEnvironmentTypeOutputWithContext(ctx).ToFleetEnvironmentTypePtrOutputWithContext(ctx)
}

func (e FleetEnvironmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetEnvironmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FleetEnvironmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FleetEnvironmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FleetEnvironmentTypeOutput struct{ *pulumi.OutputState }

func (FleetEnvironmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetEnvironmentType)(nil)).Elem()
}

func (o FleetEnvironmentTypeOutput) ToFleetEnvironmentTypeOutput() FleetEnvironmentTypeOutput {
	return o
}

func (o FleetEnvironmentTypeOutput) ToFleetEnvironmentTypeOutputWithContext(ctx context.Context) FleetEnvironmentTypeOutput {
	return o
}

func (o FleetEnvironmentTypeOutput) ToFleetEnvironmentTypePtrOutput() FleetEnvironmentTypePtrOutput {
	return o.ToFleetEnvironmentTypePtrOutputWithContext(context.Background())
}

func (o FleetEnvironmentTypeOutput) ToFleetEnvironmentTypePtrOutputWithContext(ctx context.Context) FleetEnvironmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetEnvironmentType) *FleetEnvironmentType {
		return &v
	}).(FleetEnvironmentTypePtrOutput)
}

func (o FleetEnvironmentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[FleetEnvironmentType] {
	return pulumix.Output[FleetEnvironmentType]{
		OutputState: o.OutputState,
	}
}

func (o FleetEnvironmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FleetEnvironmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetEnvironmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FleetEnvironmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetEnvironmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FleetEnvironmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FleetEnvironmentTypePtrOutput struct{ *pulumi.OutputState }

func (FleetEnvironmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetEnvironmentType)(nil)).Elem()
}

func (o FleetEnvironmentTypePtrOutput) ToFleetEnvironmentTypePtrOutput() FleetEnvironmentTypePtrOutput {
	return o
}

func (o FleetEnvironmentTypePtrOutput) ToFleetEnvironmentTypePtrOutputWithContext(ctx context.Context) FleetEnvironmentTypePtrOutput {
	return o
}

func (o FleetEnvironmentTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FleetEnvironmentType] {
	return pulumix.Output[*FleetEnvironmentType]{
		OutputState: o.OutputState,
	}
}

func (o FleetEnvironmentTypePtrOutput) Elem() FleetEnvironmentTypeOutput {
	return o.ApplyT(func(v *FleetEnvironmentType) FleetEnvironmentType {
		if v != nil {
			return *v
		}
		var ret FleetEnvironmentType
		return ret
	}).(FleetEnvironmentTypeOutput)
}

func (o FleetEnvironmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FleetEnvironmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FleetEnvironmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FleetEnvironmentTypeInput is an input type that accepts FleetEnvironmentTypeArgs and FleetEnvironmentTypeOutput values.
// You can construct a concrete instance of `FleetEnvironmentTypeInput` via:
//
//	FleetEnvironmentTypeArgs{...}
type FleetEnvironmentTypeInput interface {
	pulumi.Input

	ToFleetEnvironmentTypeOutput() FleetEnvironmentTypeOutput
	ToFleetEnvironmentTypeOutputWithContext(context.Context) FleetEnvironmentTypeOutput
}

var fleetEnvironmentTypePtrType = reflect.TypeOf((**FleetEnvironmentType)(nil)).Elem()

type FleetEnvironmentTypePtrInput interface {
	pulumi.Input

	ToFleetEnvironmentTypePtrOutput() FleetEnvironmentTypePtrOutput
	ToFleetEnvironmentTypePtrOutputWithContext(context.Context) FleetEnvironmentTypePtrOutput
}

type fleetEnvironmentTypePtr string

func FleetEnvironmentTypePtr(v string) FleetEnvironmentTypePtrInput {
	return (*fleetEnvironmentTypePtr)(&v)
}

func (*fleetEnvironmentTypePtr) ElementType() reflect.Type {
	return fleetEnvironmentTypePtrType
}

func (in *fleetEnvironmentTypePtr) ToFleetEnvironmentTypePtrOutput() FleetEnvironmentTypePtrOutput {
	return pulumi.ToOutput(in).(FleetEnvironmentTypePtrOutput)
}

func (in *fleetEnvironmentTypePtr) ToFleetEnvironmentTypePtrOutputWithContext(ctx context.Context) FleetEnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FleetEnvironmentTypePtrOutput)
}

func (in *fleetEnvironmentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*FleetEnvironmentType] {
	return pulumix.Output[*FleetEnvironmentType]{
		OutputState: in.ToFleetEnvironmentTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetComputeTypeInput)(nil)).Elem(), FleetComputeType("BUILD_GENERAL1_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetComputeTypePtrInput)(nil)).Elem(), FleetComputeType("BUILD_GENERAL1_SMALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetEnvironmentTypeInput)(nil)).Elem(), FleetEnvironmentType("WINDOWS_SERVER_2019_CONTAINER"))
	pulumi.RegisterInputType(reflect.TypeOf((*FleetEnvironmentTypePtrInput)(nil)).Elem(), FleetEnvironmentType("WINDOWS_SERVER_2019_CONTAINER"))
	pulumi.RegisterOutputType(FleetComputeTypeOutput{})
	pulumi.RegisterOutputType(FleetComputeTypePtrOutput{})
	pulumi.RegisterOutputType(FleetEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(FleetEnvironmentTypePtrOutput{})
}
