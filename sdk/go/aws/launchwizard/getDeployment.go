// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package launchwizard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::LaunchWizard::Deployment Resource Type
func LookupDeployment(ctx *pulumi.Context, args *LookupDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeploymentResult
	err := ctx.Invoke("aws-native:launchwizard:getDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeploymentArgs struct {
	// ARN of the LaunchWizard deployment
	Arn string `pulumi:"arn"`
}

type LookupDeploymentResult struct {
	// ARN of the LaunchWizard deployment
	Arn *string `pulumi:"arn"`
	// Timestamp of LaunchWizard deployment creation
	CreatedAt *string `pulumi:"createdAt"`
	// Timestamp of LaunchWizard deployment deletion
	DeletedAt *string `pulumi:"deletedAt"`
	// Deployment ID of the LaunchWizard deployment
	DeploymentId *string `pulumi:"deploymentId"`
	// Resource Group Name created for LaunchWizard deployment
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Status of LaunchWizard deployment
	Status *DeploymentStatus `pulumi:"status"`
	// Tags for LaunchWizard deployment
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDeploymentOutput(ctx *pulumi.Context, args LookupDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeploymentResult, error) {
			args := v.(LookupDeploymentArgs)
			r, err := LookupDeployment(ctx, &args, opts...)
			var s LookupDeploymentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeploymentResultOutput)
}

type LookupDeploymentOutputArgs struct {
	// ARN of the LaunchWizard deployment
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentArgs)(nil)).Elem()
}

type LookupDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentResult)(nil)).Elem()
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutput() LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutputWithContext(ctx context.Context) LookupDeploymentResultOutput {
	return o
}

// ARN of the LaunchWizard deployment
func (o LookupDeploymentResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Timestamp of LaunchWizard deployment creation
func (o LookupDeploymentResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Timestamp of LaunchWizard deployment deletion
func (o LookupDeploymentResultOutput) DeletedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.DeletedAt }).(pulumi.StringPtrOutput)
}

// Deployment ID of the LaunchWizard deployment
func (o LookupDeploymentResultOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// Resource Group Name created for LaunchWizard deployment
func (o LookupDeploymentResultOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Status of LaunchWizard deployment
func (o LookupDeploymentResultOutput) Status() DeploymentStatusPtrOutput {
	return o.ApplyT(func(v LookupDeploymentResult) *DeploymentStatus { return v.Status }).(DeploymentStatusPtrOutput)
}

// Tags for LaunchWizard deployment
func (o LookupDeploymentResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentResultOutput{})
}
