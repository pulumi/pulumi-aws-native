// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SecretsManager::Secret
type Secret struct {
	pulumi.CustomResourceState

	// (Optional) Specifies a user-provided description of the secret.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	GenerateSecretString SecretGenerateSecretStringPtrOutput `pulumi:"generateSecretString"`
	// (Optional) Specifies the ARN, Key ID, or alias of the AWS KMS customer master key (CMK) used to encrypt the SecretString.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// The friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// (Optional) A list of ReplicaRegion objects. The ReplicaRegion type consists of a Region (required) and the KmsKeyId which can be an ARN, Key ID, or Alias.
	ReplicaRegions SecretReplicaRegionArrayOutput `pulumi:"replicaRegions"`
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	SecretString pulumi.StringPtrOutput `pulumi:"secretString"`
	// The list of user-defined tags associated with the secret. Use tags to manage your AWS resources. For additional information about tags, see TagResource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewSecret registers a new resource with the given unique name, arguments, and options.
func NewSecret(ctx *pulumi.Context,
	name string, args *SecretArgs, opts ...pulumi.ResourceOption) (*Secret, error) {
	if args == nil {
		args = &SecretArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Secret
	err := ctx.RegisterResource("aws-native:secretsmanager:Secret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecret gets an existing Secret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretState, opts ...pulumi.ResourceOption) (*Secret, error) {
	var resource Secret
	err := ctx.ReadResource("aws-native:secretsmanager:Secret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Secret resources.
type secretState struct {
}

type SecretState struct {
}

func (SecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretState)(nil)).Elem()
}

type secretArgs struct {
	// (Optional) Specifies a user-provided description of the secret.
	Description *string `pulumi:"description"`
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	GenerateSecretString *SecretGenerateSecretString `pulumi:"generateSecretString"`
	// (Optional) Specifies the ARN, Key ID, or alias of the AWS KMS customer master key (CMK) used to encrypt the SecretString.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy.
	Name *string `pulumi:"name"`
	// (Optional) A list of ReplicaRegion objects. The ReplicaRegion type consists of a Region (required) and the KmsKeyId which can be an ARN, Key ID, or Alias.
	ReplicaRegions []SecretReplicaRegion `pulumi:"replicaRegions"`
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	SecretString *string `pulumi:"secretString"`
	// The list of user-defined tags associated with the secret. Use tags to manage your AWS resources. For additional information about tags, see TagResource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Secret resource.
type SecretArgs struct {
	// (Optional) Specifies a user-provided description of the secret.
	Description pulumi.StringPtrInput
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	GenerateSecretString SecretGenerateSecretStringPtrInput
	// (Optional) Specifies the ARN, Key ID, or alias of the AWS KMS customer master key (CMK) used to encrypt the SecretString.
	KmsKeyId pulumi.StringPtrInput
	// The friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy.
	Name pulumi.StringPtrInput
	// (Optional) A list of ReplicaRegion objects. The ReplicaRegion type consists of a Region (required) and the KmsKeyId which can be an ARN, Key ID, or Alias.
	ReplicaRegions SecretReplicaRegionArrayInput
	// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
	SecretString pulumi.StringPtrInput
	// The list of user-defined tags associated with the secret. Use tags to manage your AWS resources. For additional information about tags, see TagResource.
	Tags aws.TagArrayInput
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretArgs)(nil)).Elem()
}

type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(ctx context.Context) SecretOutput
}

func (*Secret) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (i *Secret) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i *Secret) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// (Optional) Specifies a user-provided description of the secret.
func (o SecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
func (o SecretOutput) GenerateSecretString() SecretGenerateSecretStringPtrOutput {
	return o.ApplyT(func(v *Secret) SecretGenerateSecretStringPtrOutput { return v.GenerateSecretString }).(SecretGenerateSecretStringPtrOutput)
}

// (Optional) Specifies the ARN, Key ID, or alias of the AWS KMS customer master key (CMK) used to encrypt the SecretString.
func (o SecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy.
func (o SecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// (Optional) A list of ReplicaRegion objects. The ReplicaRegion type consists of a Region (required) and the KmsKeyId which can be an ARN, Key ID, or Alias.
func (o SecretOutput) ReplicaRegions() SecretReplicaRegionArrayOutput {
	return o.ApplyT(func(v *Secret) SecretReplicaRegionArrayOutput { return v.ReplicaRegions }).(SecretReplicaRegionArrayOutput)
}

// (Optional) Specifies text data that you want to encrypt and store in this new version of the secret.
func (o SecretOutput) SecretString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secret) pulumi.StringPtrOutput { return v.SecretString }).(pulumi.StringPtrOutput)
}

// The list of user-defined tags associated with the secret. Use tags to manage your AWS resources. For additional information about tags, see TagResource.
func (o SecretOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Secret) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretInput)(nil)).Elem(), &Secret{})
	pulumi.RegisterOutputType(SecretOutput{})
}
