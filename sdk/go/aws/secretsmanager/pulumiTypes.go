// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RotationScheduleHostedRotationLambda struct {
	ExcludeCharacters        *string `pulumi:"excludeCharacters"`
	KmsKeyArn                *string `pulumi:"kmsKeyArn"`
	MasterSecretArn          *string `pulumi:"masterSecretArn"`
	MasterSecretKmsKeyArn    *string `pulumi:"masterSecretKmsKeyArn"`
	RotationLambdaName       *string `pulumi:"rotationLambdaName"`
	RotationType             string  `pulumi:"rotationType"`
	Runtime                  *string `pulumi:"runtime"`
	SuperuserSecretArn       *string `pulumi:"superuserSecretArn"`
	SuperuserSecretKmsKeyArn *string `pulumi:"superuserSecretKmsKeyArn"`
	VpcSecurityGroupIds      *string `pulumi:"vpcSecurityGroupIds"`
	VpcSubnetIds             *string `pulumi:"vpcSubnetIds"`
}

// RotationScheduleHostedRotationLambdaInput is an input type that accepts RotationScheduleHostedRotationLambdaArgs and RotationScheduleHostedRotationLambdaOutput values.
// You can construct a concrete instance of `RotationScheduleHostedRotationLambdaInput` via:
//
//	RotationScheduleHostedRotationLambdaArgs{...}
type RotationScheduleHostedRotationLambdaInput interface {
	pulumi.Input

	ToRotationScheduleHostedRotationLambdaOutput() RotationScheduleHostedRotationLambdaOutput
	ToRotationScheduleHostedRotationLambdaOutputWithContext(context.Context) RotationScheduleHostedRotationLambdaOutput
}

type RotationScheduleHostedRotationLambdaArgs struct {
	ExcludeCharacters        pulumi.StringPtrInput `pulumi:"excludeCharacters"`
	KmsKeyArn                pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	MasterSecretArn          pulumi.StringPtrInput `pulumi:"masterSecretArn"`
	MasterSecretKmsKeyArn    pulumi.StringPtrInput `pulumi:"masterSecretKmsKeyArn"`
	RotationLambdaName       pulumi.StringPtrInput `pulumi:"rotationLambdaName"`
	RotationType             pulumi.StringInput    `pulumi:"rotationType"`
	Runtime                  pulumi.StringPtrInput `pulumi:"runtime"`
	SuperuserSecretArn       pulumi.StringPtrInput `pulumi:"superuserSecretArn"`
	SuperuserSecretKmsKeyArn pulumi.StringPtrInput `pulumi:"superuserSecretKmsKeyArn"`
	VpcSecurityGroupIds      pulumi.StringPtrInput `pulumi:"vpcSecurityGroupIds"`
	VpcSubnetIds             pulumi.StringPtrInput `pulumi:"vpcSubnetIds"`
}

func (RotationScheduleHostedRotationLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RotationScheduleHostedRotationLambda)(nil)).Elem()
}

func (i RotationScheduleHostedRotationLambdaArgs) ToRotationScheduleHostedRotationLambdaOutput() RotationScheduleHostedRotationLambdaOutput {
	return i.ToRotationScheduleHostedRotationLambdaOutputWithContext(context.Background())
}

func (i RotationScheduleHostedRotationLambdaArgs) ToRotationScheduleHostedRotationLambdaOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleHostedRotationLambdaOutput)
}

func (i RotationScheduleHostedRotationLambdaArgs) ToRotationScheduleHostedRotationLambdaPtrOutput() RotationScheduleHostedRotationLambdaPtrOutput {
	return i.ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(context.Background())
}

func (i RotationScheduleHostedRotationLambdaArgs) ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleHostedRotationLambdaOutput).ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(ctx)
}

// RotationScheduleHostedRotationLambdaPtrInput is an input type that accepts RotationScheduleHostedRotationLambdaArgs, RotationScheduleHostedRotationLambdaPtr and RotationScheduleHostedRotationLambdaPtrOutput values.
// You can construct a concrete instance of `RotationScheduleHostedRotationLambdaPtrInput` via:
//
//	        RotationScheduleHostedRotationLambdaArgs{...}
//
//	or:
//
//	        nil
type RotationScheduleHostedRotationLambdaPtrInput interface {
	pulumi.Input

	ToRotationScheduleHostedRotationLambdaPtrOutput() RotationScheduleHostedRotationLambdaPtrOutput
	ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(context.Context) RotationScheduleHostedRotationLambdaPtrOutput
}

type rotationScheduleHostedRotationLambdaPtrType RotationScheduleHostedRotationLambdaArgs

func RotationScheduleHostedRotationLambdaPtr(v *RotationScheduleHostedRotationLambdaArgs) RotationScheduleHostedRotationLambdaPtrInput {
	return (*rotationScheduleHostedRotationLambdaPtrType)(v)
}

func (*rotationScheduleHostedRotationLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RotationScheduleHostedRotationLambda)(nil)).Elem()
}

func (i *rotationScheduleHostedRotationLambdaPtrType) ToRotationScheduleHostedRotationLambdaPtrOutput() RotationScheduleHostedRotationLambdaPtrOutput {
	return i.ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(context.Background())
}

func (i *rotationScheduleHostedRotationLambdaPtrType) ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleHostedRotationLambdaPtrOutput)
}

type RotationScheduleHostedRotationLambdaOutput struct{ *pulumi.OutputState }

func (RotationScheduleHostedRotationLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RotationScheduleHostedRotationLambda)(nil)).Elem()
}

func (o RotationScheduleHostedRotationLambdaOutput) ToRotationScheduleHostedRotationLambdaOutput() RotationScheduleHostedRotationLambdaOutput {
	return o
}

func (o RotationScheduleHostedRotationLambdaOutput) ToRotationScheduleHostedRotationLambdaOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaOutput {
	return o
}

func (o RotationScheduleHostedRotationLambdaOutput) ToRotationScheduleHostedRotationLambdaPtrOutput() RotationScheduleHostedRotationLambdaPtrOutput {
	return o.ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(context.Background())
}

func (o RotationScheduleHostedRotationLambdaOutput) ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RotationScheduleHostedRotationLambda) *RotationScheduleHostedRotationLambda {
		return &v
	}).(RotationScheduleHostedRotationLambdaPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) ExcludeCharacters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.ExcludeCharacters }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) MasterSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.MasterSecretArn }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) MasterSecretKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.MasterSecretKmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) RotationLambdaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.RotationLambdaName }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) SuperuserSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.SuperuserSecretArn }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) SuperuserSecretKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.SuperuserSecretKmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) VpcSecurityGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.VpcSecurityGroupIds }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaOutput) VpcSubnetIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleHostedRotationLambda) *string { return v.VpcSubnetIds }).(pulumi.StringPtrOutput)
}

type RotationScheduleHostedRotationLambdaPtrOutput struct{ *pulumi.OutputState }

func (RotationScheduleHostedRotationLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RotationScheduleHostedRotationLambda)(nil)).Elem()
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) ToRotationScheduleHostedRotationLambdaPtrOutput() RotationScheduleHostedRotationLambdaPtrOutput {
	return o
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) ToRotationScheduleHostedRotationLambdaPtrOutputWithContext(ctx context.Context) RotationScheduleHostedRotationLambdaPtrOutput {
	return o
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) Elem() RotationScheduleHostedRotationLambdaOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) RotationScheduleHostedRotationLambda {
		if v != nil {
			return *v
		}
		var ret RotationScheduleHostedRotationLambda
		return ret
	}).(RotationScheduleHostedRotationLambdaOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) ExcludeCharacters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeCharacters
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) MasterSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.MasterSecretArn
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) MasterSecretKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.MasterSecretKmsKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) RotationLambdaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.RotationLambdaName
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.Runtime
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) SuperuserSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.SuperuserSecretArn
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) SuperuserSecretKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.SuperuserSecretKmsKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) VpcSecurityGroupIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.VpcSecurityGroupIds
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleHostedRotationLambdaPtrOutput) VpcSubnetIds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleHostedRotationLambda) *string {
		if v == nil {
			return nil
		}
		return v.VpcSubnetIds
	}).(pulumi.StringPtrOutput)
}

type RotationScheduleRotationRules struct {
	AutomaticallyAfterDays *int    `pulumi:"automaticallyAfterDays"`
	Duration               *string `pulumi:"duration"`
	ScheduleExpression     *string `pulumi:"scheduleExpression"`
}

// RotationScheduleRotationRulesInput is an input type that accepts RotationScheduleRotationRulesArgs and RotationScheduleRotationRulesOutput values.
// You can construct a concrete instance of `RotationScheduleRotationRulesInput` via:
//
//	RotationScheduleRotationRulesArgs{...}
type RotationScheduleRotationRulesInput interface {
	pulumi.Input

	ToRotationScheduleRotationRulesOutput() RotationScheduleRotationRulesOutput
	ToRotationScheduleRotationRulesOutputWithContext(context.Context) RotationScheduleRotationRulesOutput
}

type RotationScheduleRotationRulesArgs struct {
	AutomaticallyAfterDays pulumi.IntPtrInput    `pulumi:"automaticallyAfterDays"`
	Duration               pulumi.StringPtrInput `pulumi:"duration"`
	ScheduleExpression     pulumi.StringPtrInput `pulumi:"scheduleExpression"`
}

func (RotationScheduleRotationRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RotationScheduleRotationRules)(nil)).Elem()
}

func (i RotationScheduleRotationRulesArgs) ToRotationScheduleRotationRulesOutput() RotationScheduleRotationRulesOutput {
	return i.ToRotationScheduleRotationRulesOutputWithContext(context.Background())
}

func (i RotationScheduleRotationRulesArgs) ToRotationScheduleRotationRulesOutputWithContext(ctx context.Context) RotationScheduleRotationRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleRotationRulesOutput)
}

func (i RotationScheduleRotationRulesArgs) ToRotationScheduleRotationRulesPtrOutput() RotationScheduleRotationRulesPtrOutput {
	return i.ToRotationScheduleRotationRulesPtrOutputWithContext(context.Background())
}

func (i RotationScheduleRotationRulesArgs) ToRotationScheduleRotationRulesPtrOutputWithContext(ctx context.Context) RotationScheduleRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleRotationRulesOutput).ToRotationScheduleRotationRulesPtrOutputWithContext(ctx)
}

// RotationScheduleRotationRulesPtrInput is an input type that accepts RotationScheduleRotationRulesArgs, RotationScheduleRotationRulesPtr and RotationScheduleRotationRulesPtrOutput values.
// You can construct a concrete instance of `RotationScheduleRotationRulesPtrInput` via:
//
//	        RotationScheduleRotationRulesArgs{...}
//
//	or:
//
//	        nil
type RotationScheduleRotationRulesPtrInput interface {
	pulumi.Input

	ToRotationScheduleRotationRulesPtrOutput() RotationScheduleRotationRulesPtrOutput
	ToRotationScheduleRotationRulesPtrOutputWithContext(context.Context) RotationScheduleRotationRulesPtrOutput
}

type rotationScheduleRotationRulesPtrType RotationScheduleRotationRulesArgs

func RotationScheduleRotationRulesPtr(v *RotationScheduleRotationRulesArgs) RotationScheduleRotationRulesPtrInput {
	return (*rotationScheduleRotationRulesPtrType)(v)
}

func (*rotationScheduleRotationRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RotationScheduleRotationRules)(nil)).Elem()
}

func (i *rotationScheduleRotationRulesPtrType) ToRotationScheduleRotationRulesPtrOutput() RotationScheduleRotationRulesPtrOutput {
	return i.ToRotationScheduleRotationRulesPtrOutputWithContext(context.Background())
}

func (i *rotationScheduleRotationRulesPtrType) ToRotationScheduleRotationRulesPtrOutputWithContext(ctx context.Context) RotationScheduleRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RotationScheduleRotationRulesPtrOutput)
}

type RotationScheduleRotationRulesOutput struct{ *pulumi.OutputState }

func (RotationScheduleRotationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RotationScheduleRotationRules)(nil)).Elem()
}

func (o RotationScheduleRotationRulesOutput) ToRotationScheduleRotationRulesOutput() RotationScheduleRotationRulesOutput {
	return o
}

func (o RotationScheduleRotationRulesOutput) ToRotationScheduleRotationRulesOutputWithContext(ctx context.Context) RotationScheduleRotationRulesOutput {
	return o
}

func (o RotationScheduleRotationRulesOutput) ToRotationScheduleRotationRulesPtrOutput() RotationScheduleRotationRulesPtrOutput {
	return o.ToRotationScheduleRotationRulesPtrOutputWithContext(context.Background())
}

func (o RotationScheduleRotationRulesOutput) ToRotationScheduleRotationRulesPtrOutputWithContext(ctx context.Context) RotationScheduleRotationRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RotationScheduleRotationRules) *RotationScheduleRotationRules {
		return &v
	}).(RotationScheduleRotationRulesPtrOutput)
}

func (o RotationScheduleRotationRulesOutput) AutomaticallyAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RotationScheduleRotationRules) *int { return v.AutomaticallyAfterDays }).(pulumi.IntPtrOutput)
}

func (o RotationScheduleRotationRulesOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleRotationRules) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o RotationScheduleRotationRulesOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RotationScheduleRotationRules) *string { return v.ScheduleExpression }).(pulumi.StringPtrOutput)
}

type RotationScheduleRotationRulesPtrOutput struct{ *pulumi.OutputState }

func (RotationScheduleRotationRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RotationScheduleRotationRules)(nil)).Elem()
}

func (o RotationScheduleRotationRulesPtrOutput) ToRotationScheduleRotationRulesPtrOutput() RotationScheduleRotationRulesPtrOutput {
	return o
}

func (o RotationScheduleRotationRulesPtrOutput) ToRotationScheduleRotationRulesPtrOutputWithContext(ctx context.Context) RotationScheduleRotationRulesPtrOutput {
	return o
}

func (o RotationScheduleRotationRulesPtrOutput) Elem() RotationScheduleRotationRulesOutput {
	return o.ApplyT(func(v *RotationScheduleRotationRules) RotationScheduleRotationRules {
		if v != nil {
			return *v
		}
		var ret RotationScheduleRotationRules
		return ret
	}).(RotationScheduleRotationRulesOutput)
}

func (o RotationScheduleRotationRulesPtrOutput) AutomaticallyAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RotationScheduleRotationRules) *int {
		if v == nil {
			return nil
		}
		return v.AutomaticallyAfterDays
	}).(pulumi.IntPtrOutput)
}

func (o RotationScheduleRotationRulesPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleRotationRules) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

func (o RotationScheduleRotationRulesPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RotationScheduleRotationRules) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

type SecretGenerateSecretString struct {
	// A string that excludes characters in the generated password. By default, all characters from the included sets can be used. The string can be a minimum length of 0 characters and a maximum length of 7168 characters.
	ExcludeCharacters *string `pulumi:"excludeCharacters"`
	// Specifies the generated password should not include lowercase letters. By default, ecrets Manager disables this parameter, and the generated password can include lowercase False, and the generated password can include lowercase letters.
	ExcludeLowercase *bool `pulumi:"excludeLowercase"`
	// Specifies that the generated password should exclude digits. By default, Secrets Manager does not enable the parameter, False, and the generated password can include digits.
	ExcludeNumbers *bool `pulumi:"excludeNumbers"`
	// Specifies that the generated password should not include punctuation characters. The default if you do not include this switch parameter is that punctuation characters can be included.
	ExcludePunctuation *bool `pulumi:"excludePunctuation"`
	// Specifies that the generated password should not include uppercase letters. The default behavior is False, and the generated password can include uppercase letters.
	ExcludeUppercase *bool `pulumi:"excludeUppercase"`
	// The JSON key name used to add the generated password to the JSON structure specified by the SecretStringTemplate parameter. If you specify this parameter, then you must also specify SecretStringTemplate.
	GenerateStringKey *string `pulumi:"generateStringKey"`
	// Specifies that the generated password can include the space character. By default, Secrets Manager disables this parameter, and the generated password doesn't include space
	IncludeSpace *bool `pulumi:"includeSpace"`
	// The desired length of the generated password. The default value if you do not include this parameter is 32 characters.
	PasswordLength *int `pulumi:"passwordLength"`
	// Specifies whether the generated password must include at least one of every allowed character type. By default, Secrets Manager enables this parameter, and the generated password includes at least one of every character type.
	RequireEachIncludedType *bool `pulumi:"requireEachIncludedType"`
	// A properly structured JSON string that the generated password can be added to. If you specify this parameter, then you must also specify GenerateStringKey.
	SecretStringTemplate *string `pulumi:"secretStringTemplate"`
}

// SecretGenerateSecretStringInput is an input type that accepts SecretGenerateSecretStringArgs and SecretGenerateSecretStringOutput values.
// You can construct a concrete instance of `SecretGenerateSecretStringInput` via:
//
//	SecretGenerateSecretStringArgs{...}
type SecretGenerateSecretStringInput interface {
	pulumi.Input

	ToSecretGenerateSecretStringOutput() SecretGenerateSecretStringOutput
	ToSecretGenerateSecretStringOutputWithContext(context.Context) SecretGenerateSecretStringOutput
}

type SecretGenerateSecretStringArgs struct {
	// A string that excludes characters in the generated password. By default, all characters from the included sets can be used. The string can be a minimum length of 0 characters and a maximum length of 7168 characters.
	ExcludeCharacters pulumi.StringPtrInput `pulumi:"excludeCharacters"`
	// Specifies the generated password should not include lowercase letters. By default, ecrets Manager disables this parameter, and the generated password can include lowercase False, and the generated password can include lowercase letters.
	ExcludeLowercase pulumi.BoolPtrInput `pulumi:"excludeLowercase"`
	// Specifies that the generated password should exclude digits. By default, Secrets Manager does not enable the parameter, False, and the generated password can include digits.
	ExcludeNumbers pulumi.BoolPtrInput `pulumi:"excludeNumbers"`
	// Specifies that the generated password should not include punctuation characters. The default if you do not include this switch parameter is that punctuation characters can be included.
	ExcludePunctuation pulumi.BoolPtrInput `pulumi:"excludePunctuation"`
	// Specifies that the generated password should not include uppercase letters. The default behavior is False, and the generated password can include uppercase letters.
	ExcludeUppercase pulumi.BoolPtrInput `pulumi:"excludeUppercase"`
	// The JSON key name used to add the generated password to the JSON structure specified by the SecretStringTemplate parameter. If you specify this parameter, then you must also specify SecretStringTemplate.
	GenerateStringKey pulumi.StringPtrInput `pulumi:"generateStringKey"`
	// Specifies that the generated password can include the space character. By default, Secrets Manager disables this parameter, and the generated password doesn't include space
	IncludeSpace pulumi.BoolPtrInput `pulumi:"includeSpace"`
	// The desired length of the generated password. The default value if you do not include this parameter is 32 characters.
	PasswordLength pulumi.IntPtrInput `pulumi:"passwordLength"`
	// Specifies whether the generated password must include at least one of every allowed character type. By default, Secrets Manager enables this parameter, and the generated password includes at least one of every character type.
	RequireEachIncludedType pulumi.BoolPtrInput `pulumi:"requireEachIncludedType"`
	// A properly structured JSON string that the generated password can be added to. If you specify this parameter, then you must also specify GenerateStringKey.
	SecretStringTemplate pulumi.StringPtrInput `pulumi:"secretStringTemplate"`
}

func (SecretGenerateSecretStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGenerateSecretString)(nil)).Elem()
}

func (i SecretGenerateSecretStringArgs) ToSecretGenerateSecretStringOutput() SecretGenerateSecretStringOutput {
	return i.ToSecretGenerateSecretStringOutputWithContext(context.Background())
}

func (i SecretGenerateSecretStringArgs) ToSecretGenerateSecretStringOutputWithContext(ctx context.Context) SecretGenerateSecretStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGenerateSecretStringOutput)
}

func (i SecretGenerateSecretStringArgs) ToSecretGenerateSecretStringPtrOutput() SecretGenerateSecretStringPtrOutput {
	return i.ToSecretGenerateSecretStringPtrOutputWithContext(context.Background())
}

func (i SecretGenerateSecretStringArgs) ToSecretGenerateSecretStringPtrOutputWithContext(ctx context.Context) SecretGenerateSecretStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGenerateSecretStringOutput).ToSecretGenerateSecretStringPtrOutputWithContext(ctx)
}

// SecretGenerateSecretStringPtrInput is an input type that accepts SecretGenerateSecretStringArgs, SecretGenerateSecretStringPtr and SecretGenerateSecretStringPtrOutput values.
// You can construct a concrete instance of `SecretGenerateSecretStringPtrInput` via:
//
//	        SecretGenerateSecretStringArgs{...}
//
//	or:
//
//	        nil
type SecretGenerateSecretStringPtrInput interface {
	pulumi.Input

	ToSecretGenerateSecretStringPtrOutput() SecretGenerateSecretStringPtrOutput
	ToSecretGenerateSecretStringPtrOutputWithContext(context.Context) SecretGenerateSecretStringPtrOutput
}

type secretGenerateSecretStringPtrType SecretGenerateSecretStringArgs

func SecretGenerateSecretStringPtr(v *SecretGenerateSecretStringArgs) SecretGenerateSecretStringPtrInput {
	return (*secretGenerateSecretStringPtrType)(v)
}

func (*secretGenerateSecretStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGenerateSecretString)(nil)).Elem()
}

func (i *secretGenerateSecretStringPtrType) ToSecretGenerateSecretStringPtrOutput() SecretGenerateSecretStringPtrOutput {
	return i.ToSecretGenerateSecretStringPtrOutputWithContext(context.Background())
}

func (i *secretGenerateSecretStringPtrType) ToSecretGenerateSecretStringPtrOutputWithContext(ctx context.Context) SecretGenerateSecretStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGenerateSecretStringPtrOutput)
}

type SecretGenerateSecretStringOutput struct{ *pulumi.OutputState }

func (SecretGenerateSecretStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGenerateSecretString)(nil)).Elem()
}

func (o SecretGenerateSecretStringOutput) ToSecretGenerateSecretStringOutput() SecretGenerateSecretStringOutput {
	return o
}

func (o SecretGenerateSecretStringOutput) ToSecretGenerateSecretStringOutputWithContext(ctx context.Context) SecretGenerateSecretStringOutput {
	return o
}

func (o SecretGenerateSecretStringOutput) ToSecretGenerateSecretStringPtrOutput() SecretGenerateSecretStringPtrOutput {
	return o.ToSecretGenerateSecretStringPtrOutputWithContext(context.Background())
}

func (o SecretGenerateSecretStringOutput) ToSecretGenerateSecretStringPtrOutputWithContext(ctx context.Context) SecretGenerateSecretStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretGenerateSecretString) *SecretGenerateSecretString {
		return &v
	}).(SecretGenerateSecretStringPtrOutput)
}

// A string that excludes characters in the generated password. By default, all characters from the included sets can be used. The string can be a minimum length of 0 characters and a maximum length of 7168 characters.
func (o SecretGenerateSecretStringOutput) ExcludeCharacters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *string { return v.ExcludeCharacters }).(pulumi.StringPtrOutput)
}

// Specifies the generated password should not include lowercase letters. By default, ecrets Manager disables this parameter, and the generated password can include lowercase False, and the generated password can include lowercase letters.
func (o SecretGenerateSecretStringOutput) ExcludeLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.ExcludeLowercase }).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should exclude digits. By default, Secrets Manager does not enable the parameter, False, and the generated password can include digits.
func (o SecretGenerateSecretStringOutput) ExcludeNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.ExcludeNumbers }).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should not include punctuation characters. The default if you do not include this switch parameter is that punctuation characters can be included.
func (o SecretGenerateSecretStringOutput) ExcludePunctuation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.ExcludePunctuation }).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should not include uppercase letters. The default behavior is False, and the generated password can include uppercase letters.
func (o SecretGenerateSecretStringOutput) ExcludeUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.ExcludeUppercase }).(pulumi.BoolPtrOutput)
}

// The JSON key name used to add the generated password to the JSON structure specified by the SecretStringTemplate parameter. If you specify this parameter, then you must also specify SecretStringTemplate.
func (o SecretGenerateSecretStringOutput) GenerateStringKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *string { return v.GenerateStringKey }).(pulumi.StringPtrOutput)
}

// Specifies that the generated password can include the space character. By default, Secrets Manager disables this parameter, and the generated password doesn't include space
func (o SecretGenerateSecretStringOutput) IncludeSpace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.IncludeSpace }).(pulumi.BoolPtrOutput)
}

// The desired length of the generated password. The default value if you do not include this parameter is 32 characters.
func (o SecretGenerateSecretStringOutput) PasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *int { return v.PasswordLength }).(pulumi.IntPtrOutput)
}

// Specifies whether the generated password must include at least one of every allowed character type. By default, Secrets Manager enables this parameter, and the generated password includes at least one of every character type.
func (o SecretGenerateSecretStringOutput) RequireEachIncludedType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *bool { return v.RequireEachIncludedType }).(pulumi.BoolPtrOutput)
}

// A properly structured JSON string that the generated password can be added to. If you specify this parameter, then you must also specify GenerateStringKey.
func (o SecretGenerateSecretStringOutput) SecretStringTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretGenerateSecretString) *string { return v.SecretStringTemplate }).(pulumi.StringPtrOutput)
}

type SecretGenerateSecretStringPtrOutput struct{ *pulumi.OutputState }

func (SecretGenerateSecretStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGenerateSecretString)(nil)).Elem()
}

func (o SecretGenerateSecretStringPtrOutput) ToSecretGenerateSecretStringPtrOutput() SecretGenerateSecretStringPtrOutput {
	return o
}

func (o SecretGenerateSecretStringPtrOutput) ToSecretGenerateSecretStringPtrOutputWithContext(ctx context.Context) SecretGenerateSecretStringPtrOutput {
	return o
}

func (o SecretGenerateSecretStringPtrOutput) Elem() SecretGenerateSecretStringOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) SecretGenerateSecretString {
		if v != nil {
			return *v
		}
		var ret SecretGenerateSecretString
		return ret
	}).(SecretGenerateSecretStringOutput)
}

// A string that excludes characters in the generated password. By default, all characters from the included sets can be used. The string can be a minimum length of 0 characters and a maximum length of 7168 characters.
func (o SecretGenerateSecretStringPtrOutput) ExcludeCharacters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeCharacters
	}).(pulumi.StringPtrOutput)
}

// Specifies the generated password should not include lowercase letters. By default, ecrets Manager disables this parameter, and the generated password can include lowercase False, and the generated password can include lowercase letters.
func (o SecretGenerateSecretStringPtrOutput) ExcludeLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeLowercase
	}).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should exclude digits. By default, Secrets Manager does not enable the parameter, False, and the generated password can include digits.
func (o SecretGenerateSecretStringPtrOutput) ExcludeNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeNumbers
	}).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should not include punctuation characters. The default if you do not include this switch parameter is that punctuation characters can be included.
func (o SecretGenerateSecretStringPtrOutput) ExcludePunctuation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludePunctuation
	}).(pulumi.BoolPtrOutput)
}

// Specifies that the generated password should not include uppercase letters. The default behavior is False, and the generated password can include uppercase letters.
func (o SecretGenerateSecretStringPtrOutput) ExcludeUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeUppercase
	}).(pulumi.BoolPtrOutput)
}

// The JSON key name used to add the generated password to the JSON structure specified by the SecretStringTemplate parameter. If you specify this parameter, then you must also specify SecretStringTemplate.
func (o SecretGenerateSecretStringPtrOutput) GenerateStringKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *string {
		if v == nil {
			return nil
		}
		return v.GenerateStringKey
	}).(pulumi.StringPtrOutput)
}

// Specifies that the generated password can include the space character. By default, Secrets Manager disables this parameter, and the generated password doesn't include space
func (o SecretGenerateSecretStringPtrOutput) IncludeSpace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSpace
	}).(pulumi.BoolPtrOutput)
}

// The desired length of the generated password. The default value if you do not include this parameter is 32 characters.
func (o SecretGenerateSecretStringPtrOutput) PasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *int {
		if v == nil {
			return nil
		}
		return v.PasswordLength
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the generated password must include at least one of every allowed character type. By default, Secrets Manager enables this parameter, and the generated password includes at least one of every character type.
func (o SecretGenerateSecretStringPtrOutput) RequireEachIncludedType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *bool {
		if v == nil {
			return nil
		}
		return v.RequireEachIncludedType
	}).(pulumi.BoolPtrOutput)
}

// A properly structured JSON string that the generated password can be added to. If you specify this parameter, then you must also specify GenerateStringKey.
func (o SecretGenerateSecretStringPtrOutput) SecretStringTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGenerateSecretString) *string {
		if v == nil {
			return nil
		}
		return v.SecretStringTemplate
	}).(pulumi.StringPtrOutput)
}

// A custom type that specifies a Region and the KmsKeyId for a replica secret.
type SecretReplicaRegion struct {
	// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses aws/secretsmanager.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// (Optional) A string that represents a Region, for example "us-east-1".
	Region string `pulumi:"region"`
}

// SecretReplicaRegionInput is an input type that accepts SecretReplicaRegionArgs and SecretReplicaRegionOutput values.
// You can construct a concrete instance of `SecretReplicaRegionInput` via:
//
//	SecretReplicaRegionArgs{...}
type SecretReplicaRegionInput interface {
	pulumi.Input

	ToSecretReplicaRegionOutput() SecretReplicaRegionOutput
	ToSecretReplicaRegionOutputWithContext(context.Context) SecretReplicaRegionOutput
}

// A custom type that specifies a Region and the KmsKeyId for a replica secret.
type SecretReplicaRegionArgs struct {
	// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses aws/secretsmanager.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// (Optional) A string that represents a Region, for example "us-east-1".
	Region pulumi.StringInput `pulumi:"region"`
}

func (SecretReplicaRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicaRegion)(nil)).Elem()
}

func (i SecretReplicaRegionArgs) ToSecretReplicaRegionOutput() SecretReplicaRegionOutput {
	return i.ToSecretReplicaRegionOutputWithContext(context.Background())
}

func (i SecretReplicaRegionArgs) ToSecretReplicaRegionOutputWithContext(ctx context.Context) SecretReplicaRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicaRegionOutput)
}

// SecretReplicaRegionArrayInput is an input type that accepts SecretReplicaRegionArray and SecretReplicaRegionArrayOutput values.
// You can construct a concrete instance of `SecretReplicaRegionArrayInput` via:
//
//	SecretReplicaRegionArray{ SecretReplicaRegionArgs{...} }
type SecretReplicaRegionArrayInput interface {
	pulumi.Input

	ToSecretReplicaRegionArrayOutput() SecretReplicaRegionArrayOutput
	ToSecretReplicaRegionArrayOutputWithContext(context.Context) SecretReplicaRegionArrayOutput
}

type SecretReplicaRegionArray []SecretReplicaRegionInput

func (SecretReplicaRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretReplicaRegion)(nil)).Elem()
}

func (i SecretReplicaRegionArray) ToSecretReplicaRegionArrayOutput() SecretReplicaRegionArrayOutput {
	return i.ToSecretReplicaRegionArrayOutputWithContext(context.Background())
}

func (i SecretReplicaRegionArray) ToSecretReplicaRegionArrayOutputWithContext(ctx context.Context) SecretReplicaRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretReplicaRegionArrayOutput)
}

// A custom type that specifies a Region and the KmsKeyId for a replica secret.
type SecretReplicaRegionOutput struct{ *pulumi.OutputState }

func (SecretReplicaRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretReplicaRegion)(nil)).Elem()
}

func (o SecretReplicaRegionOutput) ToSecretReplicaRegionOutput() SecretReplicaRegionOutput {
	return o
}

func (o SecretReplicaRegionOutput) ToSecretReplicaRegionOutputWithContext(ctx context.Context) SecretReplicaRegionOutput {
	return o
}

// The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses aws/secretsmanager.
func (o SecretReplicaRegionOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretReplicaRegion) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// (Optional) A string that represents a Region, for example "us-east-1".
func (o SecretReplicaRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SecretReplicaRegion) string { return v.Region }).(pulumi.StringOutput)
}

type SecretReplicaRegionArrayOutput struct{ *pulumi.OutputState }

func (SecretReplicaRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretReplicaRegion)(nil)).Elem()
}

func (o SecretReplicaRegionArrayOutput) ToSecretReplicaRegionArrayOutput() SecretReplicaRegionArrayOutput {
	return o
}

func (o SecretReplicaRegionArrayOutput) ToSecretReplicaRegionArrayOutputWithContext(ctx context.Context) SecretReplicaRegionArrayOutput {
	return o
}

func (o SecretReplicaRegionArrayOutput) Index(i pulumi.IntInput) SecretReplicaRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretReplicaRegion {
		return vs[0].([]SecretReplicaRegion)[vs[1].(int)]
	}).(SecretReplicaRegionOutput)
}

// A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string.
type SecretTag struct {
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Key string `pulumi:"key"`
	// The key name of the tag. You can specify a value that's 1 to 128 Unicode characters in length and can't be prefixed with aws.
	Value string `pulumi:"value"`
}

// SecretTagInput is an input type that accepts SecretTagArgs and SecretTagOutput values.
// You can construct a concrete instance of `SecretTagInput` via:
//
//	SecretTagArgs{...}
type SecretTagInput interface {
	pulumi.Input

	ToSecretTagOutput() SecretTagOutput
	ToSecretTagOutputWithContext(context.Context) SecretTagOutput
}

// A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string.
type SecretTagArgs struct {
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Key pulumi.StringInput `pulumi:"key"`
	// The key name of the tag. You can specify a value that's 1 to 128 Unicode characters in length and can't be prefixed with aws.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecretTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTag)(nil)).Elem()
}

func (i SecretTagArgs) ToSecretTagOutput() SecretTagOutput {
	return i.ToSecretTagOutputWithContext(context.Background())
}

func (i SecretTagArgs) ToSecretTagOutputWithContext(ctx context.Context) SecretTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTagOutput)
}

// SecretTagArrayInput is an input type that accepts SecretTagArray and SecretTagArrayOutput values.
// You can construct a concrete instance of `SecretTagArrayInput` via:
//
//	SecretTagArray{ SecretTagArgs{...} }
type SecretTagArrayInput interface {
	pulumi.Input

	ToSecretTagArrayOutput() SecretTagArrayOutput
	ToSecretTagArrayOutputWithContext(context.Context) SecretTagArrayOutput
}

type SecretTagArray []SecretTagInput

func (SecretTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTag)(nil)).Elem()
}

func (i SecretTagArray) ToSecretTagArrayOutput() SecretTagArrayOutput {
	return i.ToSecretTagArrayOutputWithContext(context.Background())
}

func (i SecretTagArray) ToSecretTagArrayOutputWithContext(ctx context.Context) SecretTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretTagArrayOutput)
}

// A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string.
type SecretTagOutput struct{ *pulumi.OutputState }

func (SecretTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretTag)(nil)).Elem()
}

func (o SecretTagOutput) ToSecretTagOutput() SecretTagOutput {
	return o
}

func (o SecretTagOutput) ToSecretTagOutputWithContext(ctx context.Context) SecretTagOutput {
	return o
}

// The value for the tag. You can specify a value that's 1 to 256 characters in length.
func (o SecretTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTag) string { return v.Key }).(pulumi.StringOutput)
}

// The key name of the tag. You can specify a value that's 1 to 128 Unicode characters in length and can't be prefixed with aws.
func (o SecretTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecretTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecretTagArrayOutput struct{ *pulumi.OutputState }

func (SecretTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretTag)(nil)).Elem()
}

func (o SecretTagArrayOutput) ToSecretTagArrayOutput() SecretTagArrayOutput {
	return o
}

func (o SecretTagArrayOutput) ToSecretTagArrayOutputWithContext(ctx context.Context) SecretTagArrayOutput {
	return o
}

func (o SecretTagArrayOutput) Index(i pulumi.IntInput) SecretTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretTag {
		return vs[0].([]SecretTag)[vs[1].(int)]
	}).(SecretTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RotationScheduleHostedRotationLambdaInput)(nil)).Elem(), RotationScheduleHostedRotationLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RotationScheduleHostedRotationLambdaPtrInput)(nil)).Elem(), RotationScheduleHostedRotationLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RotationScheduleRotationRulesInput)(nil)).Elem(), RotationScheduleRotationRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RotationScheduleRotationRulesPtrInput)(nil)).Elem(), RotationScheduleRotationRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGenerateSecretStringInput)(nil)).Elem(), SecretGenerateSecretStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGenerateSecretStringPtrInput)(nil)).Elem(), SecretGenerateSecretStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretReplicaRegionInput)(nil)).Elem(), SecretReplicaRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretReplicaRegionArrayInput)(nil)).Elem(), SecretReplicaRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTagInput)(nil)).Elem(), SecretTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretTagArrayInput)(nil)).Elem(), SecretTagArray{})
	pulumi.RegisterOutputType(RotationScheduleHostedRotationLambdaOutput{})
	pulumi.RegisterOutputType(RotationScheduleHostedRotationLambdaPtrOutput{})
	pulumi.RegisterOutputType(RotationScheduleRotationRulesOutput{})
	pulumi.RegisterOutputType(RotationScheduleRotationRulesPtrOutput{})
	pulumi.RegisterOutputType(SecretGenerateSecretStringOutput{})
	pulumi.RegisterOutputType(SecretGenerateSecretStringPtrOutput{})
	pulumi.RegisterOutputType(SecretReplicaRegionOutput{})
	pulumi.RegisterOutputType(SecretReplicaRegionArrayOutput{})
	pulumi.RegisterOutputType(SecretTagOutput{})
	pulumi.RegisterOutputType(SecretTagArrayOutput{})
}
