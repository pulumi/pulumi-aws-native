// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventschemas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EventSchemas::Discoverer
func LookupDiscoverer(ctx *pulumi.Context, args *LookupDiscovererArgs, opts ...pulumi.InvokeOption) (*LookupDiscovererResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscovererResult
	err := ctx.Invoke("aws-native:eventschemas:getDiscoverer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiscovererArgs struct {
	// The ARN of the discoverer.
	DiscovererArn string `pulumi:"discovererArn"`
}

type LookupDiscovererResult struct {
	// Defines whether event schemas from other accounts are discovered. Default is True.
	CrossAccount *bool `pulumi:"crossAccount"`
	// A description for the discoverer.
	Description *string `pulumi:"description"`
	// The ARN of the discoverer.
	DiscovererArn *string `pulumi:"discovererArn"`
	// The Id of the discoverer.
	DiscovererId *string `pulumi:"discovererId"`
	// Defines the current state of the discoverer.
	State *string `pulumi:"state"`
	// Tags associated with the resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDiscovererOutput(ctx *pulumi.Context, args LookupDiscovererOutputArgs, opts ...pulumi.InvokeOption) LookupDiscovererResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDiscovererResult, error) {
			args := v.(LookupDiscovererArgs)
			r, err := LookupDiscoverer(ctx, &args, opts...)
			var s LookupDiscovererResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDiscovererResultOutput)
}

type LookupDiscovererOutputArgs struct {
	// The ARN of the discoverer.
	DiscovererArn pulumi.StringInput `pulumi:"discovererArn"`
}

func (LookupDiscovererOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscovererArgs)(nil)).Elem()
}

type LookupDiscovererResultOutput struct{ *pulumi.OutputState }

func (LookupDiscovererResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscovererResult)(nil)).Elem()
}

func (o LookupDiscovererResultOutput) ToLookupDiscovererResultOutput() LookupDiscovererResultOutput {
	return o
}

func (o LookupDiscovererResultOutput) ToLookupDiscovererResultOutputWithContext(ctx context.Context) LookupDiscovererResultOutput {
	return o
}

// Defines whether event schemas from other accounts are discovered. Default is True.
func (o LookupDiscovererResultOutput) CrossAccount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDiscovererResult) *bool { return v.CrossAccount }).(pulumi.BoolPtrOutput)
}

// A description for the discoverer.
func (o LookupDiscovererResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscovererResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ARN of the discoverer.
func (o LookupDiscovererResultOutput) DiscovererArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscovererResult) *string { return v.DiscovererArn }).(pulumi.StringPtrOutput)
}

// The Id of the discoverer.
func (o LookupDiscovererResultOutput) DiscovererId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscovererResult) *string { return v.DiscovererId }).(pulumi.StringPtrOutput)
}

// Defines the current state of the discoverer.
func (o LookupDiscovererResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiscovererResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Tags associated with the resource.
func (o LookupDiscovererResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDiscovererResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscovererResultOutput{})
}
