// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventschemas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::EventSchemas::Schema
func LookupSchema(ctx *pulumi.Context, args *LookupSchemaArgs, opts ...pulumi.InvokeOption) (*LookupSchemaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSchemaResult
	err := ctx.Invoke("aws-native:eventschemas:getSchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSchemaArgs struct {
	// The ARN of the schema.
	SchemaArn string `pulumi:"schemaArn"`
}

type LookupSchemaResult struct {
	// The source of the schema definition.
	Content *string `pulumi:"content"`
	// A description of the schema.
	Description *string `pulumi:"description"`
	// The last modified time of the schema.
	LastModified *string `pulumi:"lastModified"`
	// The ARN of the schema.
	SchemaArn *string `pulumi:"schemaArn"`
	// The version number of the schema.
	SchemaVersion *string `pulumi:"schemaVersion"`
	// Tags associated with the resource.
	Tags []SchemaTagsEntry `pulumi:"tags"`
	// The type of schema. Valid types include OpenApi3 and JSONSchemaDraft4.
	Type *string `pulumi:"type"`
	// The date the schema version was created.
	VersionCreatedDate *string `pulumi:"versionCreatedDate"`
}

func LookupSchemaOutput(ctx *pulumi.Context, args LookupSchemaOutputArgs, opts ...pulumi.InvokeOption) LookupSchemaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSchemaResult, error) {
			args := v.(LookupSchemaArgs)
			r, err := LookupSchema(ctx, &args, opts...)
			var s LookupSchemaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSchemaResultOutput)
}

type LookupSchemaOutputArgs struct {
	// The ARN of the schema.
	SchemaArn pulumi.StringInput `pulumi:"schemaArn"`
}

func (LookupSchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaArgs)(nil)).Elem()
}

type LookupSchemaResultOutput struct{ *pulumi.OutputState }

func (LookupSchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaResult)(nil)).Elem()
}

func (o LookupSchemaResultOutput) ToLookupSchemaResultOutput() LookupSchemaResultOutput {
	return o
}

func (o LookupSchemaResultOutput) ToLookupSchemaResultOutputWithContext(ctx context.Context) LookupSchemaResultOutput {
	return o
}

func (o LookupSchemaResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSchemaResult] {
	return pulumix.Output[LookupSchemaResult]{
		OutputState: o.OutputState,
	}
}

// The source of the schema definition.
func (o LookupSchemaResultOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// A description of the schema.
func (o LookupSchemaResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The last modified time of the schema.
func (o LookupSchemaResultOutput) LastModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.LastModified }).(pulumi.StringPtrOutput)
}

// The ARN of the schema.
func (o LookupSchemaResultOutput) SchemaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.SchemaArn }).(pulumi.StringPtrOutput)
}

// The version number of the schema.
func (o LookupSchemaResultOutput) SchemaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.SchemaVersion }).(pulumi.StringPtrOutput)
}

// Tags associated with the resource.
func (o LookupSchemaResultOutput) Tags() SchemaTagsEntryArrayOutput {
	return o.ApplyT(func(v LookupSchemaResult) []SchemaTagsEntry { return v.Tags }).(SchemaTagsEntryArrayOutput)
}

// The type of schema. Valid types include OpenApi3 and JSONSchemaDraft4.
func (o LookupSchemaResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The date the schema version was created.
func (o LookupSchemaResultOutput) VersionCreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaResult) *string { return v.VersionCreatedDate }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchemaResultOutput{})
}
