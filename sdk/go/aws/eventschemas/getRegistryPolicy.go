// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventschemas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EventSchemas::RegistryPolicy
func LookupRegistryPolicy(ctx *pulumi.Context, args *LookupRegistryPolicyArgs, opts ...pulumi.InvokeOption) (*LookupRegistryPolicyResult, error) {
	var rv LookupRegistryPolicyResult
	err := ctx.Invoke("aws-native:eventschemas:getRegistryPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRegistryPolicyArgs struct {
	Id string `pulumi:"id"`
}

type LookupRegistryPolicyResult struct {
	Id           *string     `pulumi:"id"`
	Policy       interface{} `pulumi:"policy"`
	RegistryName *string     `pulumi:"registryName"`
	RevisionId   *string     `pulumi:"revisionId"`
}

func LookupRegistryPolicyOutput(ctx *pulumi.Context, args LookupRegistryPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegistryPolicyResult, error) {
			args := v.(LookupRegistryPolicyArgs)
			r, err := LookupRegistryPolicy(ctx, &args, opts...)
			return *r, err
		}).(LookupRegistryPolicyResultOutput)
}

type LookupRegistryPolicyOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRegistryPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryPolicyArgs)(nil)).Elem()
}

type LookupRegistryPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryPolicyResult)(nil)).Elem()
}

func (o LookupRegistryPolicyResultOutput) ToLookupRegistryPolicyResultOutput() LookupRegistryPolicyResultOutput {
	return o
}

func (o LookupRegistryPolicyResultOutput) ToLookupRegistryPolicyResultOutputWithContext(ctx context.Context) LookupRegistryPolicyResultOutput {
	return o
}

func (o LookupRegistryPolicyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryPolicyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryPolicyResultOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupRegistryPolicyResult) interface{} { return v.Policy }).(pulumi.AnyOutput)
}

func (o LookupRegistryPolicyResultOutput) RegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryPolicyResult) *string { return v.RegistryName }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryPolicyResultOutput) RevisionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryPolicyResult) *string { return v.RevisionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryPolicyResultOutput{})
}
