// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package inspectorv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// CIS Scan Configuration resource schema
func LookupCisScanConfiguration(ctx *pulumi.Context, args *LookupCisScanConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupCisScanConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCisScanConfigurationResult
	err := ctx.Invoke("aws-native:inspectorv2:getCisScanConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCisScanConfigurationArgs struct {
	// CIS Scan configuration unique identifier
	Arn string `pulumi:"arn"`
}

type LookupCisScanConfigurationResult struct {
	// CIS Scan configuration unique identifier
	Arn *string `pulumi:"arn"`
	// Name of the scan
	ScanName      *string                               `pulumi:"scanName"`
	Schedule      *CisScanConfigurationSchedule         `pulumi:"schedule"`
	SecurityLevel *CisScanConfigurationCisSecurityLevel `pulumi:"securityLevel"`
	Tags          *CisScanConfigurationCisTagMap        `pulumi:"tags"`
	Targets       *CisScanConfigurationCisTargets       `pulumi:"targets"`
}

func LookupCisScanConfigurationOutput(ctx *pulumi.Context, args LookupCisScanConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupCisScanConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCisScanConfigurationResult, error) {
			args := v.(LookupCisScanConfigurationArgs)
			r, err := LookupCisScanConfiguration(ctx, &args, opts...)
			var s LookupCisScanConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCisScanConfigurationResultOutput)
}

type LookupCisScanConfigurationOutputArgs struct {
	// CIS Scan configuration unique identifier
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupCisScanConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCisScanConfigurationArgs)(nil)).Elem()
}

type LookupCisScanConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupCisScanConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCisScanConfigurationResult)(nil)).Elem()
}

func (o LookupCisScanConfigurationResultOutput) ToLookupCisScanConfigurationResultOutput() LookupCisScanConfigurationResultOutput {
	return o
}

func (o LookupCisScanConfigurationResultOutput) ToLookupCisScanConfigurationResultOutputWithContext(ctx context.Context) LookupCisScanConfigurationResultOutput {
	return o
}

func (o LookupCisScanConfigurationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCisScanConfigurationResult] {
	return pulumix.Output[LookupCisScanConfigurationResult]{
		OutputState: o.OutputState,
	}
}

// CIS Scan configuration unique identifier
func (o LookupCisScanConfigurationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Name of the scan
func (o LookupCisScanConfigurationResultOutput) ScanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *string { return v.ScanName }).(pulumi.StringPtrOutput)
}

func (o LookupCisScanConfigurationResultOutput) Schedule() CisScanConfigurationSchedulePtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *CisScanConfigurationSchedule { return v.Schedule }).(CisScanConfigurationSchedulePtrOutput)
}

func (o LookupCisScanConfigurationResultOutput) SecurityLevel() CisScanConfigurationCisSecurityLevelPtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *CisScanConfigurationCisSecurityLevel { return v.SecurityLevel }).(CisScanConfigurationCisSecurityLevelPtrOutput)
}

func (o LookupCisScanConfigurationResultOutput) Tags() CisScanConfigurationCisTagMapPtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *CisScanConfigurationCisTagMap { return v.Tags }).(CisScanConfigurationCisTagMapPtrOutput)
}

func (o LookupCisScanConfigurationResultOutput) Targets() CisScanConfigurationCisTargetsPtrOutput {
	return o.ApplyT(func(v LookupCisScanConfigurationResult) *CisScanConfigurationCisTargets { return v.Targets }).(CisScanConfigurationCisTargetsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCisScanConfigurationResultOutput{})
}
