// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package inspectorv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FilterCriteria struct {
	AwsAccountId           []FilterStringFilter    `pulumi:"awsAccountId"`
	ComponentId            []FilterStringFilter    `pulumi:"componentId"`
	ComponentType          []FilterStringFilter    `pulumi:"componentType"`
	Ec2InstanceImageId     []FilterStringFilter    `pulumi:"ec2InstanceImageId"`
	Ec2InstanceSubnetId    []FilterStringFilter    `pulumi:"ec2InstanceSubnetId"`
	Ec2InstanceVpcId       []FilterStringFilter    `pulumi:"ec2InstanceVpcId"`
	EcrImageArchitecture   []FilterStringFilter    `pulumi:"ecrImageArchitecture"`
	EcrImageHash           []FilterStringFilter    `pulumi:"ecrImageHash"`
	EcrImagePushedAt       []FilterDateFilter      `pulumi:"ecrImagePushedAt"`
	EcrImageRegistry       []FilterStringFilter    `pulumi:"ecrImageRegistry"`
	EcrImageRepositoryName []FilterStringFilter    `pulumi:"ecrImageRepositoryName"`
	EcrImageTags           []FilterStringFilter    `pulumi:"ecrImageTags"`
	FindingArn             []FilterStringFilter    `pulumi:"findingArn"`
	FindingStatus          []FilterStringFilter    `pulumi:"findingStatus"`
	FindingType            []FilterStringFilter    `pulumi:"findingType"`
	FirstObservedAt        []FilterDateFilter      `pulumi:"firstObservedAt"`
	InspectorScore         []FilterNumberFilter    `pulumi:"inspectorScore"`
	LastObservedAt         []FilterDateFilter      `pulumi:"lastObservedAt"`
	NetworkProtocol        []FilterStringFilter    `pulumi:"networkProtocol"`
	PortRange              []FilterPortRangeFilter `pulumi:"portRange"`
	RelatedVulnerabilities []FilterStringFilter    `pulumi:"relatedVulnerabilities"`
	ResourceId             []FilterStringFilter    `pulumi:"resourceId"`
	ResourceTags           []FilterMapFilter       `pulumi:"resourceTags"`
	ResourceType           []FilterStringFilter    `pulumi:"resourceType"`
	Severity               []FilterStringFilter    `pulumi:"severity"`
	Title                  []FilterStringFilter    `pulumi:"title"`
	UpdatedAt              []FilterDateFilter      `pulumi:"updatedAt"`
	VendorSeverity         []FilterStringFilter    `pulumi:"vendorSeverity"`
	VulnerabilityId        []FilterStringFilter    `pulumi:"vulnerabilityId"`
	VulnerabilitySource    []FilterStringFilter    `pulumi:"vulnerabilitySource"`
	VulnerablePackages     []FilterPackageFilter   `pulumi:"vulnerablePackages"`
}

// FilterCriteriaInput is an input type that accepts FilterCriteriaArgs and FilterCriteriaOutput values.
// You can construct a concrete instance of `FilterCriteriaInput` via:
//
//          FilterCriteriaArgs{...}
type FilterCriteriaInput interface {
	pulumi.Input

	ToFilterCriteriaOutput() FilterCriteriaOutput
	ToFilterCriteriaOutputWithContext(context.Context) FilterCriteriaOutput
}

type FilterCriteriaArgs struct {
	AwsAccountId           FilterStringFilterArrayInput    `pulumi:"awsAccountId"`
	ComponentId            FilterStringFilterArrayInput    `pulumi:"componentId"`
	ComponentType          FilterStringFilterArrayInput    `pulumi:"componentType"`
	Ec2InstanceImageId     FilterStringFilterArrayInput    `pulumi:"ec2InstanceImageId"`
	Ec2InstanceSubnetId    FilterStringFilterArrayInput    `pulumi:"ec2InstanceSubnetId"`
	Ec2InstanceVpcId       FilterStringFilterArrayInput    `pulumi:"ec2InstanceVpcId"`
	EcrImageArchitecture   FilterStringFilterArrayInput    `pulumi:"ecrImageArchitecture"`
	EcrImageHash           FilterStringFilterArrayInput    `pulumi:"ecrImageHash"`
	EcrImagePushedAt       FilterDateFilterArrayInput      `pulumi:"ecrImagePushedAt"`
	EcrImageRegistry       FilterStringFilterArrayInput    `pulumi:"ecrImageRegistry"`
	EcrImageRepositoryName FilterStringFilterArrayInput    `pulumi:"ecrImageRepositoryName"`
	EcrImageTags           FilterStringFilterArrayInput    `pulumi:"ecrImageTags"`
	FindingArn             FilterStringFilterArrayInput    `pulumi:"findingArn"`
	FindingStatus          FilterStringFilterArrayInput    `pulumi:"findingStatus"`
	FindingType            FilterStringFilterArrayInput    `pulumi:"findingType"`
	FirstObservedAt        FilterDateFilterArrayInput      `pulumi:"firstObservedAt"`
	InspectorScore         FilterNumberFilterArrayInput    `pulumi:"inspectorScore"`
	LastObservedAt         FilterDateFilterArrayInput      `pulumi:"lastObservedAt"`
	NetworkProtocol        FilterStringFilterArrayInput    `pulumi:"networkProtocol"`
	PortRange              FilterPortRangeFilterArrayInput `pulumi:"portRange"`
	RelatedVulnerabilities FilterStringFilterArrayInput    `pulumi:"relatedVulnerabilities"`
	ResourceId             FilterStringFilterArrayInput    `pulumi:"resourceId"`
	ResourceTags           FilterMapFilterArrayInput       `pulumi:"resourceTags"`
	ResourceType           FilterStringFilterArrayInput    `pulumi:"resourceType"`
	Severity               FilterStringFilterArrayInput    `pulumi:"severity"`
	Title                  FilterStringFilterArrayInput    `pulumi:"title"`
	UpdatedAt              FilterDateFilterArrayInput      `pulumi:"updatedAt"`
	VendorSeverity         FilterStringFilterArrayInput    `pulumi:"vendorSeverity"`
	VulnerabilityId        FilterStringFilterArrayInput    `pulumi:"vulnerabilityId"`
	VulnerabilitySource    FilterStringFilterArrayInput    `pulumi:"vulnerabilitySource"`
	VulnerablePackages     FilterPackageFilterArrayInput   `pulumi:"vulnerablePackages"`
}

func (FilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCriteria)(nil)).Elem()
}

func (i FilterCriteriaArgs) ToFilterCriteriaOutput() FilterCriteriaOutput {
	return i.ToFilterCriteriaOutputWithContext(context.Background())
}

func (i FilterCriteriaArgs) ToFilterCriteriaOutputWithContext(ctx context.Context) FilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterCriteriaOutput)
}

func (i FilterCriteriaArgs) ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput {
	return i.ToFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i FilterCriteriaArgs) ToFilterCriteriaPtrOutputWithContext(ctx context.Context) FilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterCriteriaOutput).ToFilterCriteriaPtrOutputWithContext(ctx)
}

// FilterCriteriaPtrInput is an input type that accepts FilterCriteriaArgs, FilterCriteriaPtr and FilterCriteriaPtrOutput values.
// You can construct a concrete instance of `FilterCriteriaPtrInput` via:
//
//          FilterCriteriaArgs{...}
//
//  or:
//
//          nil
type FilterCriteriaPtrInput interface {
	pulumi.Input

	ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput
	ToFilterCriteriaPtrOutputWithContext(context.Context) FilterCriteriaPtrOutput
}

type filterCriteriaPtrType FilterCriteriaArgs

func FilterCriteriaPtr(v *FilterCriteriaArgs) FilterCriteriaPtrInput {
	return (*filterCriteriaPtrType)(v)
}

func (*filterCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCriteria)(nil)).Elem()
}

func (i *filterCriteriaPtrType) ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput {
	return i.ToFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i *filterCriteriaPtrType) ToFilterCriteriaPtrOutputWithContext(ctx context.Context) FilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterCriteriaPtrOutput)
}

type FilterCriteriaOutput struct{ *pulumi.OutputState }

func (FilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCriteria)(nil)).Elem()
}

func (o FilterCriteriaOutput) ToFilterCriteriaOutput() FilterCriteriaOutput {
	return o
}

func (o FilterCriteriaOutput) ToFilterCriteriaOutputWithContext(ctx context.Context) FilterCriteriaOutput {
	return o
}

func (o FilterCriteriaOutput) ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput {
	return o.ToFilterCriteriaPtrOutputWithContext(context.Background())
}

func (o FilterCriteriaOutput) ToFilterCriteriaPtrOutputWithContext(ctx context.Context) FilterCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterCriteria) *FilterCriteria {
		return &v
	}).(FilterCriteriaPtrOutput)
}

func (o FilterCriteriaOutput) AwsAccountId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.AwsAccountId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ComponentId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ComponentId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ComponentType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ComponentType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceImageId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceImageId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceSubnetId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceSubnetId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceVpcId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceVpcId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageArchitecture() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageArchitecture }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageHash() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageHash }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImagePushedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.EcrImagePushedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageRegistry() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageRegistry }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageRepositoryName() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageRepositoryName }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageTags() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageTags }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingArn() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingArn }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingStatus() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingStatus }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FirstObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.FirstObservedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) InspectorScore() FilterNumberFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterNumberFilter { return v.InspectorScore }).(FilterNumberFilterArrayOutput)
}

func (o FilterCriteriaOutput) LastObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.LastObservedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) NetworkProtocol() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.NetworkProtocol }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) PortRange() FilterPortRangeFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterPortRangeFilter { return v.PortRange }).(FilterPortRangeFilterArrayOutput)
}

func (o FilterCriteriaOutput) RelatedVulnerabilities() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.RelatedVulnerabilities }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ResourceId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceTags() FilterMapFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterMapFilter { return v.ResourceTags }).(FilterMapFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ResourceType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Severity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Severity }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Title() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Title }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) UpdatedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.UpdatedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) VendorSeverity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VendorSeverity }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerabilityId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VulnerabilityId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerabilitySource() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VulnerabilitySource }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerablePackages() FilterPackageFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterPackageFilter { return v.VulnerablePackages }).(FilterPackageFilterArrayOutput)
}

type FilterCriteriaPtrOutput struct{ *pulumi.OutputState }

func (FilterCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCriteria)(nil)).Elem()
}

func (o FilterCriteriaPtrOutput) ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput {
	return o
}

func (o FilterCriteriaPtrOutput) ToFilterCriteriaPtrOutputWithContext(ctx context.Context) FilterCriteriaPtrOutput {
	return o
}

func (o FilterCriteriaPtrOutput) Elem() FilterCriteriaOutput {
	return o.ApplyT(func(v *FilterCriteria) FilterCriteria {
		if v != nil {
			return *v
		}
		var ret FilterCriteria
		return ret
	}).(FilterCriteriaOutput)
}

func (o FilterCriteriaPtrOutput) AwsAccountId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ComponentId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ComponentId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ComponentType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ComponentType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceImageId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceImageId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceSubnetId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceSubnetId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceVpcId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceVpcId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageArchitecture() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageArchitecture
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageHash() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageHash
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImagePushedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.EcrImagePushedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageRegistry() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageRegistry
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageRepositoryName() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageRepositoryName
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageTags() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageTags
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingArn() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingArn
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingStatus() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingStatus
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FirstObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) InspectorScore() FilterNumberFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterNumberFilter {
		if v == nil {
			return nil
		}
		return v.InspectorScore
	}).(FilterNumberFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) LastObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) NetworkProtocol() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkProtocol
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) PortRange() FilterPortRangeFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterPortRangeFilter {
		if v == nil {
			return nil
		}
		return v.PortRange
	}).(FilterPortRangeFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) RelatedVulnerabilities() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedVulnerabilities
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceTags() FilterMapFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(FilterMapFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Severity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Title() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) UpdatedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VendorSeverity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VendorSeverity
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerabilityId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilityId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerabilitySource() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitySource
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerablePackages() FilterPackageFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterPackageFilter {
		if v == nil {
			return nil
		}
		return v.VulnerablePackages
	}).(FilterPackageFilterArrayOutput)
}

type FilterDateFilter struct {
	EndInclusive   *int `pulumi:"endInclusive"`
	StartInclusive *int `pulumi:"startInclusive"`
}

// FilterDateFilterInput is an input type that accepts FilterDateFilterArgs and FilterDateFilterOutput values.
// You can construct a concrete instance of `FilterDateFilterInput` via:
//
//          FilterDateFilterArgs{...}
type FilterDateFilterInput interface {
	pulumi.Input

	ToFilterDateFilterOutput() FilterDateFilterOutput
	ToFilterDateFilterOutputWithContext(context.Context) FilterDateFilterOutput
}

type FilterDateFilterArgs struct {
	EndInclusive   pulumi.IntPtrInput `pulumi:"endInclusive"`
	StartInclusive pulumi.IntPtrInput `pulumi:"startInclusive"`
}

func (FilterDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterDateFilter)(nil)).Elem()
}

func (i FilterDateFilterArgs) ToFilterDateFilterOutput() FilterDateFilterOutput {
	return i.ToFilterDateFilterOutputWithContext(context.Background())
}

func (i FilterDateFilterArgs) ToFilterDateFilterOutputWithContext(ctx context.Context) FilterDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterDateFilterOutput)
}

// FilterDateFilterArrayInput is an input type that accepts FilterDateFilterArray and FilterDateFilterArrayOutput values.
// You can construct a concrete instance of `FilterDateFilterArrayInput` via:
//
//          FilterDateFilterArray{ FilterDateFilterArgs{...} }
type FilterDateFilterArrayInput interface {
	pulumi.Input

	ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput
	ToFilterDateFilterArrayOutputWithContext(context.Context) FilterDateFilterArrayOutput
}

type FilterDateFilterArray []FilterDateFilterInput

func (FilterDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterDateFilter)(nil)).Elem()
}

func (i FilterDateFilterArray) ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput {
	return i.ToFilterDateFilterArrayOutputWithContext(context.Background())
}

func (i FilterDateFilterArray) ToFilterDateFilterArrayOutputWithContext(ctx context.Context) FilterDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterDateFilterArrayOutput)
}

type FilterDateFilterOutput struct{ *pulumi.OutputState }

func (FilterDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterDateFilter)(nil)).Elem()
}

func (o FilterDateFilterOutput) ToFilterDateFilterOutput() FilterDateFilterOutput {
	return o
}

func (o FilterDateFilterOutput) ToFilterDateFilterOutputWithContext(ctx context.Context) FilterDateFilterOutput {
	return o
}

func (o FilterDateFilterOutput) EndInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterDateFilter) *int { return v.EndInclusive }).(pulumi.IntPtrOutput)
}

func (o FilterDateFilterOutput) StartInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterDateFilter) *int { return v.StartInclusive }).(pulumi.IntPtrOutput)
}

type FilterDateFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterDateFilter)(nil)).Elem()
}

func (o FilterDateFilterArrayOutput) ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput {
	return o
}

func (o FilterDateFilterArrayOutput) ToFilterDateFilterArrayOutputWithContext(ctx context.Context) FilterDateFilterArrayOutput {
	return o
}

func (o FilterDateFilterArrayOutput) Index(i pulumi.IntInput) FilterDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterDateFilter {
		return vs[0].([]FilterDateFilter)[vs[1].(int)]
	}).(FilterDateFilterOutput)
}

type FilterMapFilter struct {
	Comparison FilterMapComparison `pulumi:"comparison"`
	Key        *string             `pulumi:"key"`
	Value      *string             `pulumi:"value"`
}

// FilterMapFilterInput is an input type that accepts FilterMapFilterArgs and FilterMapFilterOutput values.
// You can construct a concrete instance of `FilterMapFilterInput` via:
//
//          FilterMapFilterArgs{...}
type FilterMapFilterInput interface {
	pulumi.Input

	ToFilterMapFilterOutput() FilterMapFilterOutput
	ToFilterMapFilterOutputWithContext(context.Context) FilterMapFilterOutput
}

type FilterMapFilterArgs struct {
	Comparison FilterMapComparisonInput `pulumi:"comparison"`
	Key        pulumi.StringPtrInput    `pulumi:"key"`
	Value      pulumi.StringPtrInput    `pulumi:"value"`
}

func (FilterMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterMapFilter)(nil)).Elem()
}

func (i FilterMapFilterArgs) ToFilterMapFilterOutput() FilterMapFilterOutput {
	return i.ToFilterMapFilterOutputWithContext(context.Background())
}

func (i FilterMapFilterArgs) ToFilterMapFilterOutputWithContext(ctx context.Context) FilterMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterMapFilterOutput)
}

// FilterMapFilterArrayInput is an input type that accepts FilterMapFilterArray and FilterMapFilterArrayOutput values.
// You can construct a concrete instance of `FilterMapFilterArrayInput` via:
//
//          FilterMapFilterArray{ FilterMapFilterArgs{...} }
type FilterMapFilterArrayInput interface {
	pulumi.Input

	ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput
	ToFilterMapFilterArrayOutputWithContext(context.Context) FilterMapFilterArrayOutput
}

type FilterMapFilterArray []FilterMapFilterInput

func (FilterMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterMapFilter)(nil)).Elem()
}

func (i FilterMapFilterArray) ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput {
	return i.ToFilterMapFilterArrayOutputWithContext(context.Background())
}

func (i FilterMapFilterArray) ToFilterMapFilterArrayOutputWithContext(ctx context.Context) FilterMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterMapFilterArrayOutput)
}

type FilterMapFilterOutput struct{ *pulumi.OutputState }

func (FilterMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterMapFilter)(nil)).Elem()
}

func (o FilterMapFilterOutput) ToFilterMapFilterOutput() FilterMapFilterOutput {
	return o
}

func (o FilterMapFilterOutput) ToFilterMapFilterOutputWithContext(ctx context.Context) FilterMapFilterOutput {
	return o
}

func (o FilterMapFilterOutput) Comparison() FilterMapComparisonOutput {
	return o.ApplyT(func(v FilterMapFilter) FilterMapComparison { return v.Comparison }).(FilterMapComparisonOutput)
}

func (o FilterMapFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterMapFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o FilterMapFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterMapFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FilterMapFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterMapFilter)(nil)).Elem()
}

func (o FilterMapFilterArrayOutput) ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput {
	return o
}

func (o FilterMapFilterArrayOutput) ToFilterMapFilterArrayOutputWithContext(ctx context.Context) FilterMapFilterArrayOutput {
	return o
}

func (o FilterMapFilterArrayOutput) Index(i pulumi.IntInput) FilterMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterMapFilter {
		return vs[0].([]FilterMapFilter)[vs[1].(int)]
	}).(FilterMapFilterOutput)
}

type FilterNumberFilter struct {
	LowerInclusive *float64 `pulumi:"lowerInclusive"`
	UpperInclusive *float64 `pulumi:"upperInclusive"`
}

// FilterNumberFilterInput is an input type that accepts FilterNumberFilterArgs and FilterNumberFilterOutput values.
// You can construct a concrete instance of `FilterNumberFilterInput` via:
//
//          FilterNumberFilterArgs{...}
type FilterNumberFilterInput interface {
	pulumi.Input

	ToFilterNumberFilterOutput() FilterNumberFilterOutput
	ToFilterNumberFilterOutputWithContext(context.Context) FilterNumberFilterOutput
}

type FilterNumberFilterArgs struct {
	LowerInclusive pulumi.Float64PtrInput `pulumi:"lowerInclusive"`
	UpperInclusive pulumi.Float64PtrInput `pulumi:"upperInclusive"`
}

func (FilterNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterNumberFilter)(nil)).Elem()
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterOutput() FilterNumberFilterOutput {
	return i.ToFilterNumberFilterOutputWithContext(context.Background())
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterOutputWithContext(ctx context.Context) FilterNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterOutput)
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return i.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterOutput).ToFilterNumberFilterPtrOutputWithContext(ctx)
}

// FilterNumberFilterPtrInput is an input type that accepts FilterNumberFilterArgs, FilterNumberFilterPtr and FilterNumberFilterPtrOutput values.
// You can construct a concrete instance of `FilterNumberFilterPtrInput` via:
//
//          FilterNumberFilterArgs{...}
//
//  or:
//
//          nil
type FilterNumberFilterPtrInput interface {
	pulumi.Input

	ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput
	ToFilterNumberFilterPtrOutputWithContext(context.Context) FilterNumberFilterPtrOutput
}

type filterNumberFilterPtrType FilterNumberFilterArgs

func FilterNumberFilterPtr(v *FilterNumberFilterArgs) FilterNumberFilterPtrInput {
	return (*filterNumberFilterPtrType)(v)
}

func (*filterNumberFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterNumberFilter)(nil)).Elem()
}

func (i *filterNumberFilterPtrType) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return i.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (i *filterNumberFilterPtrType) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterPtrOutput)
}

// FilterNumberFilterArrayInput is an input type that accepts FilterNumberFilterArray and FilterNumberFilterArrayOutput values.
// You can construct a concrete instance of `FilterNumberFilterArrayInput` via:
//
//          FilterNumberFilterArray{ FilterNumberFilterArgs{...} }
type FilterNumberFilterArrayInput interface {
	pulumi.Input

	ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput
	ToFilterNumberFilterArrayOutputWithContext(context.Context) FilterNumberFilterArrayOutput
}

type FilterNumberFilterArray []FilterNumberFilterInput

func (FilterNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterNumberFilter)(nil)).Elem()
}

func (i FilterNumberFilterArray) ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput {
	return i.ToFilterNumberFilterArrayOutputWithContext(context.Background())
}

func (i FilterNumberFilterArray) ToFilterNumberFilterArrayOutputWithContext(ctx context.Context) FilterNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterArrayOutput)
}

type FilterNumberFilterOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterOutput() FilterNumberFilterOutput {
	return o
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterOutputWithContext(ctx context.Context) FilterNumberFilterOutput {
	return o
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return o.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterNumberFilter) *FilterNumberFilter {
		return &v
	}).(FilterNumberFilterPtrOutput)
}

func (o FilterNumberFilterOutput) LowerInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FilterNumberFilter) *float64 { return v.LowerInclusive }).(pulumi.Float64PtrOutput)
}

func (o FilterNumberFilterOutput) UpperInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FilterNumberFilter) *float64 { return v.UpperInclusive }).(pulumi.Float64PtrOutput)
}

type FilterNumberFilterPtrOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterPtrOutput) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return o
}

func (o FilterNumberFilterPtrOutput) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return o
}

func (o FilterNumberFilterPtrOutput) Elem() FilterNumberFilterOutput {
	return o.ApplyT(func(v *FilterNumberFilter) FilterNumberFilter {
		if v != nil {
			return *v
		}
		var ret FilterNumberFilter
		return ret
	}).(FilterNumberFilterOutput)
}

func (o FilterNumberFilterPtrOutput) LowerInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FilterNumberFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerInclusive
	}).(pulumi.Float64PtrOutput)
}

func (o FilterNumberFilterPtrOutput) UpperInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FilterNumberFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperInclusive
	}).(pulumi.Float64PtrOutput)
}

type FilterNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterArrayOutput) ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput {
	return o
}

func (o FilterNumberFilterArrayOutput) ToFilterNumberFilterArrayOutputWithContext(ctx context.Context) FilterNumberFilterArrayOutput {
	return o
}

func (o FilterNumberFilterArrayOutput) Index(i pulumi.IntInput) FilterNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterNumberFilter {
		return vs[0].([]FilterNumberFilter)[vs[1].(int)]
	}).(FilterNumberFilterOutput)
}

type FilterPackageFilter struct {
	Architecture    *FilterStringFilter `pulumi:"architecture"`
	Epoch           *FilterNumberFilter `pulumi:"epoch"`
	Name            *FilterStringFilter `pulumi:"name"`
	Release         *FilterStringFilter `pulumi:"release"`
	SourceLayerHash *FilterStringFilter `pulumi:"sourceLayerHash"`
	Version         *FilterStringFilter `pulumi:"version"`
}

// FilterPackageFilterInput is an input type that accepts FilterPackageFilterArgs and FilterPackageFilterOutput values.
// You can construct a concrete instance of `FilterPackageFilterInput` via:
//
//          FilterPackageFilterArgs{...}
type FilterPackageFilterInput interface {
	pulumi.Input

	ToFilterPackageFilterOutput() FilterPackageFilterOutput
	ToFilterPackageFilterOutputWithContext(context.Context) FilterPackageFilterOutput
}

type FilterPackageFilterArgs struct {
	Architecture    FilterStringFilterPtrInput `pulumi:"architecture"`
	Epoch           FilterNumberFilterPtrInput `pulumi:"epoch"`
	Name            FilterStringFilterPtrInput `pulumi:"name"`
	Release         FilterStringFilterPtrInput `pulumi:"release"`
	SourceLayerHash FilterStringFilterPtrInput `pulumi:"sourceLayerHash"`
	Version         FilterStringFilterPtrInput `pulumi:"version"`
}

func (FilterPackageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPackageFilter)(nil)).Elem()
}

func (i FilterPackageFilterArgs) ToFilterPackageFilterOutput() FilterPackageFilterOutput {
	return i.ToFilterPackageFilterOutputWithContext(context.Background())
}

func (i FilterPackageFilterArgs) ToFilterPackageFilterOutputWithContext(ctx context.Context) FilterPackageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPackageFilterOutput)
}

// FilterPackageFilterArrayInput is an input type that accepts FilterPackageFilterArray and FilterPackageFilterArrayOutput values.
// You can construct a concrete instance of `FilterPackageFilterArrayInput` via:
//
//          FilterPackageFilterArray{ FilterPackageFilterArgs{...} }
type FilterPackageFilterArrayInput interface {
	pulumi.Input

	ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput
	ToFilterPackageFilterArrayOutputWithContext(context.Context) FilterPackageFilterArrayOutput
}

type FilterPackageFilterArray []FilterPackageFilterInput

func (FilterPackageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPackageFilter)(nil)).Elem()
}

func (i FilterPackageFilterArray) ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput {
	return i.ToFilterPackageFilterArrayOutputWithContext(context.Background())
}

func (i FilterPackageFilterArray) ToFilterPackageFilterArrayOutputWithContext(ctx context.Context) FilterPackageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPackageFilterArrayOutput)
}

type FilterPackageFilterOutput struct{ *pulumi.OutputState }

func (FilterPackageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPackageFilter)(nil)).Elem()
}

func (o FilterPackageFilterOutput) ToFilterPackageFilterOutput() FilterPackageFilterOutput {
	return o
}

func (o FilterPackageFilterOutput) ToFilterPackageFilterOutputWithContext(ctx context.Context) FilterPackageFilterOutput {
	return o
}

func (o FilterPackageFilterOutput) Architecture() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Architecture }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Epoch() FilterNumberFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterNumberFilter { return v.Epoch }).(FilterNumberFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Name() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Name }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Release() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Release }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) SourceLayerHash() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.SourceLayerHash }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Version() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Version }).(FilterStringFilterPtrOutput)
}

type FilterPackageFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterPackageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPackageFilter)(nil)).Elem()
}

func (o FilterPackageFilterArrayOutput) ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput {
	return o
}

func (o FilterPackageFilterArrayOutput) ToFilterPackageFilterArrayOutputWithContext(ctx context.Context) FilterPackageFilterArrayOutput {
	return o
}

func (o FilterPackageFilterArrayOutput) Index(i pulumi.IntInput) FilterPackageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterPackageFilter {
		return vs[0].([]FilterPackageFilter)[vs[1].(int)]
	}).(FilterPackageFilterOutput)
}

type FilterPortRangeFilter struct {
	BeginInclusive *int `pulumi:"beginInclusive"`
	EndInclusive   *int `pulumi:"endInclusive"`
}

// FilterPortRangeFilterInput is an input type that accepts FilterPortRangeFilterArgs and FilterPortRangeFilterOutput values.
// You can construct a concrete instance of `FilterPortRangeFilterInput` via:
//
//          FilterPortRangeFilterArgs{...}
type FilterPortRangeFilterInput interface {
	pulumi.Input

	ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput
	ToFilterPortRangeFilterOutputWithContext(context.Context) FilterPortRangeFilterOutput
}

type FilterPortRangeFilterArgs struct {
	BeginInclusive pulumi.IntPtrInput `pulumi:"beginInclusive"`
	EndInclusive   pulumi.IntPtrInput `pulumi:"endInclusive"`
}

func (FilterPortRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPortRangeFilter)(nil)).Elem()
}

func (i FilterPortRangeFilterArgs) ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput {
	return i.ToFilterPortRangeFilterOutputWithContext(context.Background())
}

func (i FilterPortRangeFilterArgs) ToFilterPortRangeFilterOutputWithContext(ctx context.Context) FilterPortRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPortRangeFilterOutput)
}

// FilterPortRangeFilterArrayInput is an input type that accepts FilterPortRangeFilterArray and FilterPortRangeFilterArrayOutput values.
// You can construct a concrete instance of `FilterPortRangeFilterArrayInput` via:
//
//          FilterPortRangeFilterArray{ FilterPortRangeFilterArgs{...} }
type FilterPortRangeFilterArrayInput interface {
	pulumi.Input

	ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput
	ToFilterPortRangeFilterArrayOutputWithContext(context.Context) FilterPortRangeFilterArrayOutput
}

type FilterPortRangeFilterArray []FilterPortRangeFilterInput

func (FilterPortRangeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPortRangeFilter)(nil)).Elem()
}

func (i FilterPortRangeFilterArray) ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput {
	return i.ToFilterPortRangeFilterArrayOutputWithContext(context.Background())
}

func (i FilterPortRangeFilterArray) ToFilterPortRangeFilterArrayOutputWithContext(ctx context.Context) FilterPortRangeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPortRangeFilterArrayOutput)
}

type FilterPortRangeFilterOutput struct{ *pulumi.OutputState }

func (FilterPortRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPortRangeFilter)(nil)).Elem()
}

func (o FilterPortRangeFilterOutput) ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput {
	return o
}

func (o FilterPortRangeFilterOutput) ToFilterPortRangeFilterOutputWithContext(ctx context.Context) FilterPortRangeFilterOutput {
	return o
}

func (o FilterPortRangeFilterOutput) BeginInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterPortRangeFilter) *int { return v.BeginInclusive }).(pulumi.IntPtrOutput)
}

func (o FilterPortRangeFilterOutput) EndInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterPortRangeFilter) *int { return v.EndInclusive }).(pulumi.IntPtrOutput)
}

type FilterPortRangeFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterPortRangeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPortRangeFilter)(nil)).Elem()
}

func (o FilterPortRangeFilterArrayOutput) ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput {
	return o
}

func (o FilterPortRangeFilterArrayOutput) ToFilterPortRangeFilterArrayOutputWithContext(ctx context.Context) FilterPortRangeFilterArrayOutput {
	return o
}

func (o FilterPortRangeFilterArrayOutput) Index(i pulumi.IntInput) FilterPortRangeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterPortRangeFilter {
		return vs[0].([]FilterPortRangeFilter)[vs[1].(int)]
	}).(FilterPortRangeFilterOutput)
}

type FilterStringFilter struct {
	Comparison FilterStringComparison `pulumi:"comparison"`
	Value      string                 `pulumi:"value"`
}

// FilterStringFilterInput is an input type that accepts FilterStringFilterArgs and FilterStringFilterOutput values.
// You can construct a concrete instance of `FilterStringFilterInput` via:
//
//          FilterStringFilterArgs{...}
type FilterStringFilterInput interface {
	pulumi.Input

	ToFilterStringFilterOutput() FilterStringFilterOutput
	ToFilterStringFilterOutputWithContext(context.Context) FilterStringFilterOutput
}

type FilterStringFilterArgs struct {
	Comparison FilterStringComparisonInput `pulumi:"comparison"`
	Value      pulumi.StringInput          `pulumi:"value"`
}

func (FilterStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterStringFilter)(nil)).Elem()
}

func (i FilterStringFilterArgs) ToFilterStringFilterOutput() FilterStringFilterOutput {
	return i.ToFilterStringFilterOutputWithContext(context.Background())
}

func (i FilterStringFilterArgs) ToFilterStringFilterOutputWithContext(ctx context.Context) FilterStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterOutput)
}

func (i FilterStringFilterArgs) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return i.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (i FilterStringFilterArgs) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterOutput).ToFilterStringFilterPtrOutputWithContext(ctx)
}

// FilterStringFilterPtrInput is an input type that accepts FilterStringFilterArgs, FilterStringFilterPtr and FilterStringFilterPtrOutput values.
// You can construct a concrete instance of `FilterStringFilterPtrInput` via:
//
//          FilterStringFilterArgs{...}
//
//  or:
//
//          nil
type FilterStringFilterPtrInput interface {
	pulumi.Input

	ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput
	ToFilterStringFilterPtrOutputWithContext(context.Context) FilterStringFilterPtrOutput
}

type filterStringFilterPtrType FilterStringFilterArgs

func FilterStringFilterPtr(v *FilterStringFilterArgs) FilterStringFilterPtrInput {
	return (*filterStringFilterPtrType)(v)
}

func (*filterStringFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterStringFilter)(nil)).Elem()
}

func (i *filterStringFilterPtrType) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return i.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (i *filterStringFilterPtrType) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterPtrOutput)
}

// FilterStringFilterArrayInput is an input type that accepts FilterStringFilterArray and FilterStringFilterArrayOutput values.
// You can construct a concrete instance of `FilterStringFilterArrayInput` via:
//
//          FilterStringFilterArray{ FilterStringFilterArgs{...} }
type FilterStringFilterArrayInput interface {
	pulumi.Input

	ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput
	ToFilterStringFilterArrayOutputWithContext(context.Context) FilterStringFilterArrayOutput
}

type FilterStringFilterArray []FilterStringFilterInput

func (FilterStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterStringFilter)(nil)).Elem()
}

func (i FilterStringFilterArray) ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput {
	return i.ToFilterStringFilterArrayOutputWithContext(context.Background())
}

func (i FilterStringFilterArray) ToFilterStringFilterArrayOutputWithContext(ctx context.Context) FilterStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterArrayOutput)
}

type FilterStringFilterOutput struct{ *pulumi.OutputState }

func (FilterStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterOutput) ToFilterStringFilterOutput() FilterStringFilterOutput {
	return o
}

func (o FilterStringFilterOutput) ToFilterStringFilterOutputWithContext(ctx context.Context) FilterStringFilterOutput {
	return o
}

func (o FilterStringFilterOutput) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return o.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (o FilterStringFilterOutput) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterStringFilter) *FilterStringFilter {
		return &v
	}).(FilterStringFilterPtrOutput)
}

func (o FilterStringFilterOutput) Comparison() FilterStringComparisonOutput {
	return o.ApplyT(func(v FilterStringFilter) FilterStringComparison { return v.Comparison }).(FilterStringComparisonOutput)
}

func (o FilterStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type FilterStringFilterPtrOutput struct{ *pulumi.OutputState }

func (FilterStringFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterPtrOutput) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return o
}

func (o FilterStringFilterPtrOutput) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return o
}

func (o FilterStringFilterPtrOutput) Elem() FilterStringFilterOutput {
	return o.ApplyT(func(v *FilterStringFilter) FilterStringFilter {
		if v != nil {
			return *v
		}
		var ret FilterStringFilter
		return ret
	}).(FilterStringFilterOutput)
}

func (o FilterStringFilterPtrOutput) Comparison() FilterStringComparisonPtrOutput {
	return o.ApplyT(func(v *FilterStringFilter) *FilterStringComparison {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(FilterStringComparisonPtrOutput)
}

func (o FilterStringFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterStringFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterStringFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterArrayOutput) ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput {
	return o
}

func (o FilterStringFilterArrayOutput) ToFilterStringFilterArrayOutputWithContext(ctx context.Context) FilterStringFilterArrayOutput {
	return o
}

func (o FilterStringFilterArrayOutput) Index(i pulumi.IntInput) FilterStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterStringFilter {
		return vs[0].([]FilterStringFilter)[vs[1].(int)]
	}).(FilterStringFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilterCriteriaInput)(nil)).Elem(), FilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterCriteriaPtrInput)(nil)).Elem(), FilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterDateFilterInput)(nil)).Elem(), FilterDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterDateFilterArrayInput)(nil)).Elem(), FilterDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterMapFilterInput)(nil)).Elem(), FilterMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterMapFilterArrayInput)(nil)).Elem(), FilterMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterInput)(nil)).Elem(), FilterNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterPtrInput)(nil)).Elem(), FilterNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterArrayInput)(nil)).Elem(), FilterNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPackageFilterInput)(nil)).Elem(), FilterPackageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPackageFilterArrayInput)(nil)).Elem(), FilterPackageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPortRangeFilterInput)(nil)).Elem(), FilterPortRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPortRangeFilterArrayInput)(nil)).Elem(), FilterPortRangeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterInput)(nil)).Elem(), FilterStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterPtrInput)(nil)).Elem(), FilterStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterArrayInput)(nil)).Elem(), FilterStringFilterArray{})
	pulumi.RegisterOutputType(FilterCriteriaOutput{})
	pulumi.RegisterOutputType(FilterCriteriaPtrOutput{})
	pulumi.RegisterOutputType(FilterDateFilterOutput{})
	pulumi.RegisterOutputType(FilterDateFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterMapFilterOutput{})
	pulumi.RegisterOutputType(FilterMapFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterPtrOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterPackageFilterOutput{})
	pulumi.RegisterOutputType(FilterPackageFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterPortRangeFilterOutput{})
	pulumi.RegisterOutputType(FilterPortRangeFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterStringFilterOutput{})
	pulumi.RegisterOutputType(FilterStringFilterPtrOutput{})
	pulumi.RegisterOutputType(FilterStringFilterArrayOutput{})
}
