// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package inspectorv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CisScanConfigurationCisTargets struct {
	AccountIds         []string               `pulumi:"accountIds"`
	TargetResourceTags map[string]interface{} `pulumi:"targetResourceTags"`
}

// CisScanConfigurationCisTargetsInput is an input type that accepts CisScanConfigurationCisTargetsArgs and CisScanConfigurationCisTargetsOutput values.
// You can construct a concrete instance of `CisScanConfigurationCisTargetsInput` via:
//
//	CisScanConfigurationCisTargetsArgs{...}
type CisScanConfigurationCisTargetsInput interface {
	pulumi.Input

	ToCisScanConfigurationCisTargetsOutput() CisScanConfigurationCisTargetsOutput
	ToCisScanConfigurationCisTargetsOutputWithContext(context.Context) CisScanConfigurationCisTargetsOutput
}

type CisScanConfigurationCisTargetsArgs struct {
	AccountIds         pulumi.StringArrayInput `pulumi:"accountIds"`
	TargetResourceTags pulumi.MapInput         `pulumi:"targetResourceTags"`
}

func (CisScanConfigurationCisTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationCisTargets)(nil)).Elem()
}

func (i CisScanConfigurationCisTargetsArgs) ToCisScanConfigurationCisTargetsOutput() CisScanConfigurationCisTargetsOutput {
	return i.ToCisScanConfigurationCisTargetsOutputWithContext(context.Background())
}

func (i CisScanConfigurationCisTargetsArgs) ToCisScanConfigurationCisTargetsOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationCisTargetsOutput)
}

func (i CisScanConfigurationCisTargetsArgs) ToCisScanConfigurationCisTargetsPtrOutput() CisScanConfigurationCisTargetsPtrOutput {
	return i.ToCisScanConfigurationCisTargetsPtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationCisTargetsArgs) ToCisScanConfigurationCisTargetsPtrOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationCisTargetsOutput).ToCisScanConfigurationCisTargetsPtrOutputWithContext(ctx)
}

// CisScanConfigurationCisTargetsPtrInput is an input type that accepts CisScanConfigurationCisTargetsArgs, CisScanConfigurationCisTargetsPtr and CisScanConfigurationCisTargetsPtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationCisTargetsPtrInput` via:
//
//	        CisScanConfigurationCisTargetsArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationCisTargetsPtrInput interface {
	pulumi.Input

	ToCisScanConfigurationCisTargetsPtrOutput() CisScanConfigurationCisTargetsPtrOutput
	ToCisScanConfigurationCisTargetsPtrOutputWithContext(context.Context) CisScanConfigurationCisTargetsPtrOutput
}

type cisScanConfigurationCisTargetsPtrType CisScanConfigurationCisTargetsArgs

func CisScanConfigurationCisTargetsPtr(v *CisScanConfigurationCisTargetsArgs) CisScanConfigurationCisTargetsPtrInput {
	return (*cisScanConfigurationCisTargetsPtrType)(v)
}

func (*cisScanConfigurationCisTargetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationCisTargets)(nil)).Elem()
}

func (i *cisScanConfigurationCisTargetsPtrType) ToCisScanConfigurationCisTargetsPtrOutput() CisScanConfigurationCisTargetsPtrOutput {
	return i.ToCisScanConfigurationCisTargetsPtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationCisTargetsPtrType) ToCisScanConfigurationCisTargetsPtrOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationCisTargetsPtrOutput)
}

type CisScanConfigurationCisTargetsOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationCisTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationCisTargets)(nil)).Elem()
}

func (o CisScanConfigurationCisTargetsOutput) ToCisScanConfigurationCisTargetsOutput() CisScanConfigurationCisTargetsOutput {
	return o
}

func (o CisScanConfigurationCisTargetsOutput) ToCisScanConfigurationCisTargetsOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsOutput {
	return o
}

func (o CisScanConfigurationCisTargetsOutput) ToCisScanConfigurationCisTargetsPtrOutput() CisScanConfigurationCisTargetsPtrOutput {
	return o.ToCisScanConfigurationCisTargetsPtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationCisTargetsOutput) ToCisScanConfigurationCisTargetsPtrOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationCisTargets) *CisScanConfigurationCisTargets {
		return &v
	}).(CisScanConfigurationCisTargetsPtrOutput)
}

func (o CisScanConfigurationCisTargetsOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CisScanConfigurationCisTargets) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

func (o CisScanConfigurationCisTargetsOutput) TargetResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v CisScanConfigurationCisTargets) map[string]interface{} { return v.TargetResourceTags }).(pulumi.MapOutput)
}

type CisScanConfigurationCisTargetsPtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationCisTargetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationCisTargets)(nil)).Elem()
}

func (o CisScanConfigurationCisTargetsPtrOutput) ToCisScanConfigurationCisTargetsPtrOutput() CisScanConfigurationCisTargetsPtrOutput {
	return o
}

func (o CisScanConfigurationCisTargetsPtrOutput) ToCisScanConfigurationCisTargetsPtrOutputWithContext(ctx context.Context) CisScanConfigurationCisTargetsPtrOutput {
	return o
}

func (o CisScanConfigurationCisTargetsPtrOutput) Elem() CisScanConfigurationCisTargetsOutput {
	return o.ApplyT(func(v *CisScanConfigurationCisTargets) CisScanConfigurationCisTargets {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationCisTargets
		return ret
	}).(CisScanConfigurationCisTargetsOutput)
}

func (o CisScanConfigurationCisTargetsPtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CisScanConfigurationCisTargets) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

func (o CisScanConfigurationCisTargetsPtrOutput) TargetResourceTags() pulumi.MapOutput {
	return o.ApplyT(func(v *CisScanConfigurationCisTargets) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.TargetResourceTags
	}).(pulumi.MapOutput)
}

type CisScanConfigurationDailySchedule struct {
	StartTime CisScanConfigurationTime `pulumi:"startTime"`
}

// CisScanConfigurationDailyScheduleInput is an input type that accepts CisScanConfigurationDailyScheduleArgs and CisScanConfigurationDailyScheduleOutput values.
// You can construct a concrete instance of `CisScanConfigurationDailyScheduleInput` via:
//
//	CisScanConfigurationDailyScheduleArgs{...}
type CisScanConfigurationDailyScheduleInput interface {
	pulumi.Input

	ToCisScanConfigurationDailyScheduleOutput() CisScanConfigurationDailyScheduleOutput
	ToCisScanConfigurationDailyScheduleOutputWithContext(context.Context) CisScanConfigurationDailyScheduleOutput
}

type CisScanConfigurationDailyScheduleArgs struct {
	StartTime CisScanConfigurationTimeInput `pulumi:"startTime"`
}

func (CisScanConfigurationDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationDailySchedule)(nil)).Elem()
}

func (i CisScanConfigurationDailyScheduleArgs) ToCisScanConfigurationDailyScheduleOutput() CisScanConfigurationDailyScheduleOutput {
	return i.ToCisScanConfigurationDailyScheduleOutputWithContext(context.Background())
}

func (i CisScanConfigurationDailyScheduleArgs) ToCisScanConfigurationDailyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationDailyScheduleOutput)
}

func (i CisScanConfigurationDailyScheduleArgs) ToCisScanConfigurationDailySchedulePtrOutput() CisScanConfigurationDailySchedulePtrOutput {
	return i.ToCisScanConfigurationDailySchedulePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationDailyScheduleArgs) ToCisScanConfigurationDailySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationDailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationDailyScheduleOutput).ToCisScanConfigurationDailySchedulePtrOutputWithContext(ctx)
}

// CisScanConfigurationDailySchedulePtrInput is an input type that accepts CisScanConfigurationDailyScheduleArgs, CisScanConfigurationDailySchedulePtr and CisScanConfigurationDailySchedulePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationDailySchedulePtrInput` via:
//
//	        CisScanConfigurationDailyScheduleArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationDailySchedulePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationDailySchedulePtrOutput() CisScanConfigurationDailySchedulePtrOutput
	ToCisScanConfigurationDailySchedulePtrOutputWithContext(context.Context) CisScanConfigurationDailySchedulePtrOutput
}

type cisScanConfigurationDailySchedulePtrType CisScanConfigurationDailyScheduleArgs

func CisScanConfigurationDailySchedulePtr(v *CisScanConfigurationDailyScheduleArgs) CisScanConfigurationDailySchedulePtrInput {
	return (*cisScanConfigurationDailySchedulePtrType)(v)
}

func (*cisScanConfigurationDailySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationDailySchedule)(nil)).Elem()
}

func (i *cisScanConfigurationDailySchedulePtrType) ToCisScanConfigurationDailySchedulePtrOutput() CisScanConfigurationDailySchedulePtrOutput {
	return i.ToCisScanConfigurationDailySchedulePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationDailySchedulePtrType) ToCisScanConfigurationDailySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationDailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationDailySchedulePtrOutput)
}

type CisScanConfigurationDailyScheduleOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationDailySchedule)(nil)).Elem()
}

func (o CisScanConfigurationDailyScheduleOutput) ToCisScanConfigurationDailyScheduleOutput() CisScanConfigurationDailyScheduleOutput {
	return o
}

func (o CisScanConfigurationDailyScheduleOutput) ToCisScanConfigurationDailyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationDailyScheduleOutput {
	return o
}

func (o CisScanConfigurationDailyScheduleOutput) ToCisScanConfigurationDailySchedulePtrOutput() CisScanConfigurationDailySchedulePtrOutput {
	return o.ToCisScanConfigurationDailySchedulePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationDailyScheduleOutput) ToCisScanConfigurationDailySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationDailySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationDailySchedule) *CisScanConfigurationDailySchedule {
		return &v
	}).(CisScanConfigurationDailySchedulePtrOutput)
}

func (o CisScanConfigurationDailyScheduleOutput) StartTime() CisScanConfigurationTimeOutput {
	return o.ApplyT(func(v CisScanConfigurationDailySchedule) CisScanConfigurationTime { return v.StartTime }).(CisScanConfigurationTimeOutput)
}

type CisScanConfigurationDailySchedulePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationDailySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationDailySchedule)(nil)).Elem()
}

func (o CisScanConfigurationDailySchedulePtrOutput) ToCisScanConfigurationDailySchedulePtrOutput() CisScanConfigurationDailySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationDailySchedulePtrOutput) ToCisScanConfigurationDailySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationDailySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationDailySchedulePtrOutput) Elem() CisScanConfigurationDailyScheduleOutput {
	return o.ApplyT(func(v *CisScanConfigurationDailySchedule) CisScanConfigurationDailySchedule {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationDailySchedule
		return ret
	}).(CisScanConfigurationDailyScheduleOutput)
}

func (o CisScanConfigurationDailySchedulePtrOutput) StartTime() CisScanConfigurationTimePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationDailySchedule) *CisScanConfigurationTime {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(CisScanConfigurationTimePtrOutput)
}

type CisScanConfigurationMonthlySchedule struct {
	Day       CisScanConfigurationDay  `pulumi:"day"`
	StartTime CisScanConfigurationTime `pulumi:"startTime"`
}

// CisScanConfigurationMonthlyScheduleInput is an input type that accepts CisScanConfigurationMonthlyScheduleArgs and CisScanConfigurationMonthlyScheduleOutput values.
// You can construct a concrete instance of `CisScanConfigurationMonthlyScheduleInput` via:
//
//	CisScanConfigurationMonthlyScheduleArgs{...}
type CisScanConfigurationMonthlyScheduleInput interface {
	pulumi.Input

	ToCisScanConfigurationMonthlyScheduleOutput() CisScanConfigurationMonthlyScheduleOutput
	ToCisScanConfigurationMonthlyScheduleOutputWithContext(context.Context) CisScanConfigurationMonthlyScheduleOutput
}

type CisScanConfigurationMonthlyScheduleArgs struct {
	Day       CisScanConfigurationDayInput  `pulumi:"day"`
	StartTime CisScanConfigurationTimeInput `pulumi:"startTime"`
}

func (CisScanConfigurationMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationMonthlySchedule)(nil)).Elem()
}

func (i CisScanConfigurationMonthlyScheduleArgs) ToCisScanConfigurationMonthlyScheduleOutput() CisScanConfigurationMonthlyScheduleOutput {
	return i.ToCisScanConfigurationMonthlyScheduleOutputWithContext(context.Background())
}

func (i CisScanConfigurationMonthlyScheduleArgs) ToCisScanConfigurationMonthlyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationMonthlyScheduleOutput)
}

func (i CisScanConfigurationMonthlyScheduleArgs) ToCisScanConfigurationMonthlySchedulePtrOutput() CisScanConfigurationMonthlySchedulePtrOutput {
	return i.ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationMonthlyScheduleArgs) ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationMonthlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationMonthlyScheduleOutput).ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(ctx)
}

// CisScanConfigurationMonthlySchedulePtrInput is an input type that accepts CisScanConfigurationMonthlyScheduleArgs, CisScanConfigurationMonthlySchedulePtr and CisScanConfigurationMonthlySchedulePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationMonthlySchedulePtrInput` via:
//
//	        CisScanConfigurationMonthlyScheduleArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationMonthlySchedulePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationMonthlySchedulePtrOutput() CisScanConfigurationMonthlySchedulePtrOutput
	ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(context.Context) CisScanConfigurationMonthlySchedulePtrOutput
}

type cisScanConfigurationMonthlySchedulePtrType CisScanConfigurationMonthlyScheduleArgs

func CisScanConfigurationMonthlySchedulePtr(v *CisScanConfigurationMonthlyScheduleArgs) CisScanConfigurationMonthlySchedulePtrInput {
	return (*cisScanConfigurationMonthlySchedulePtrType)(v)
}

func (*cisScanConfigurationMonthlySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationMonthlySchedule)(nil)).Elem()
}

func (i *cisScanConfigurationMonthlySchedulePtrType) ToCisScanConfigurationMonthlySchedulePtrOutput() CisScanConfigurationMonthlySchedulePtrOutput {
	return i.ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationMonthlySchedulePtrType) ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationMonthlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationMonthlySchedulePtrOutput)
}

type CisScanConfigurationMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationMonthlySchedule)(nil)).Elem()
}

func (o CisScanConfigurationMonthlyScheduleOutput) ToCisScanConfigurationMonthlyScheduleOutput() CisScanConfigurationMonthlyScheduleOutput {
	return o
}

func (o CisScanConfigurationMonthlyScheduleOutput) ToCisScanConfigurationMonthlyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationMonthlyScheduleOutput {
	return o
}

func (o CisScanConfigurationMonthlyScheduleOutput) ToCisScanConfigurationMonthlySchedulePtrOutput() CisScanConfigurationMonthlySchedulePtrOutput {
	return o.ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationMonthlyScheduleOutput) ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationMonthlySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationMonthlySchedule) *CisScanConfigurationMonthlySchedule {
		return &v
	}).(CisScanConfigurationMonthlySchedulePtrOutput)
}

func (o CisScanConfigurationMonthlyScheduleOutput) Day() CisScanConfigurationDayOutput {
	return o.ApplyT(func(v CisScanConfigurationMonthlySchedule) CisScanConfigurationDay { return v.Day }).(CisScanConfigurationDayOutput)
}

func (o CisScanConfigurationMonthlyScheduleOutput) StartTime() CisScanConfigurationTimeOutput {
	return o.ApplyT(func(v CisScanConfigurationMonthlySchedule) CisScanConfigurationTime { return v.StartTime }).(CisScanConfigurationTimeOutput)
}

type CisScanConfigurationMonthlySchedulePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationMonthlySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationMonthlySchedule)(nil)).Elem()
}

func (o CisScanConfigurationMonthlySchedulePtrOutput) ToCisScanConfigurationMonthlySchedulePtrOutput() CisScanConfigurationMonthlySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationMonthlySchedulePtrOutput) ToCisScanConfigurationMonthlySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationMonthlySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationMonthlySchedulePtrOutput) Elem() CisScanConfigurationMonthlyScheduleOutput {
	return o.ApplyT(func(v *CisScanConfigurationMonthlySchedule) CisScanConfigurationMonthlySchedule {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationMonthlySchedule
		return ret
	}).(CisScanConfigurationMonthlyScheduleOutput)
}

func (o CisScanConfigurationMonthlySchedulePtrOutput) Day() CisScanConfigurationDayPtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationMonthlySchedule) *CisScanConfigurationDay {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(CisScanConfigurationDayPtrOutput)
}

func (o CisScanConfigurationMonthlySchedulePtrOutput) StartTime() CisScanConfigurationTimePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationMonthlySchedule) *CisScanConfigurationTime {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(CisScanConfigurationTimePtrOutput)
}

type CisScanConfigurationOneTimeSchedule struct {
}

// CisScanConfigurationOneTimeScheduleInput is an input type that accepts CisScanConfigurationOneTimeScheduleArgs and CisScanConfigurationOneTimeScheduleOutput values.
// You can construct a concrete instance of `CisScanConfigurationOneTimeScheduleInput` via:
//
//	CisScanConfigurationOneTimeScheduleArgs{...}
type CisScanConfigurationOneTimeScheduleInput interface {
	pulumi.Input

	ToCisScanConfigurationOneTimeScheduleOutput() CisScanConfigurationOneTimeScheduleOutput
	ToCisScanConfigurationOneTimeScheduleOutputWithContext(context.Context) CisScanConfigurationOneTimeScheduleOutput
}

type CisScanConfigurationOneTimeScheduleArgs struct {
}

func (CisScanConfigurationOneTimeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationOneTimeSchedule)(nil)).Elem()
}

func (i CisScanConfigurationOneTimeScheduleArgs) ToCisScanConfigurationOneTimeScheduleOutput() CisScanConfigurationOneTimeScheduleOutput {
	return i.ToCisScanConfigurationOneTimeScheduleOutputWithContext(context.Background())
}

func (i CisScanConfigurationOneTimeScheduleArgs) ToCisScanConfigurationOneTimeScheduleOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationOneTimeScheduleOutput)
}

func (i CisScanConfigurationOneTimeScheduleArgs) ToCisScanConfigurationOneTimeSchedulePtrOutput() CisScanConfigurationOneTimeSchedulePtrOutput {
	return i.ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationOneTimeScheduleArgs) ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationOneTimeScheduleOutput).ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(ctx)
}

// CisScanConfigurationOneTimeSchedulePtrInput is an input type that accepts CisScanConfigurationOneTimeScheduleArgs, CisScanConfigurationOneTimeSchedulePtr and CisScanConfigurationOneTimeSchedulePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationOneTimeSchedulePtrInput` via:
//
//	        CisScanConfigurationOneTimeScheduleArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationOneTimeSchedulePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationOneTimeSchedulePtrOutput() CisScanConfigurationOneTimeSchedulePtrOutput
	ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(context.Context) CisScanConfigurationOneTimeSchedulePtrOutput
}

type cisScanConfigurationOneTimeSchedulePtrType CisScanConfigurationOneTimeScheduleArgs

func CisScanConfigurationOneTimeSchedulePtr(v *CisScanConfigurationOneTimeScheduleArgs) CisScanConfigurationOneTimeSchedulePtrInput {
	return (*cisScanConfigurationOneTimeSchedulePtrType)(v)
}

func (*cisScanConfigurationOneTimeSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationOneTimeSchedule)(nil)).Elem()
}

func (i *cisScanConfigurationOneTimeSchedulePtrType) ToCisScanConfigurationOneTimeSchedulePtrOutput() CisScanConfigurationOneTimeSchedulePtrOutput {
	return i.ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationOneTimeSchedulePtrType) ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationOneTimeSchedulePtrOutput)
}

type CisScanConfigurationOneTimeScheduleOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationOneTimeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationOneTimeSchedule)(nil)).Elem()
}

func (o CisScanConfigurationOneTimeScheduleOutput) ToCisScanConfigurationOneTimeScheduleOutput() CisScanConfigurationOneTimeScheduleOutput {
	return o
}

func (o CisScanConfigurationOneTimeScheduleOutput) ToCisScanConfigurationOneTimeScheduleOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeScheduleOutput {
	return o
}

func (o CisScanConfigurationOneTimeScheduleOutput) ToCisScanConfigurationOneTimeSchedulePtrOutput() CisScanConfigurationOneTimeSchedulePtrOutput {
	return o.ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationOneTimeScheduleOutput) ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationOneTimeSchedule) *CisScanConfigurationOneTimeSchedule {
		return &v
	}).(CisScanConfigurationOneTimeSchedulePtrOutput)
}

type CisScanConfigurationOneTimeSchedulePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationOneTimeSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationOneTimeSchedule)(nil)).Elem()
}

func (o CisScanConfigurationOneTimeSchedulePtrOutput) ToCisScanConfigurationOneTimeSchedulePtrOutput() CisScanConfigurationOneTimeSchedulePtrOutput {
	return o
}

func (o CisScanConfigurationOneTimeSchedulePtrOutput) ToCisScanConfigurationOneTimeSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationOneTimeSchedulePtrOutput {
	return o
}

func (o CisScanConfigurationOneTimeSchedulePtrOutput) Elem() CisScanConfigurationOneTimeScheduleOutput {
	return o.ApplyT(func(v *CisScanConfigurationOneTimeSchedule) CisScanConfigurationOneTimeSchedule {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationOneTimeSchedule
		return ret
	}).(CisScanConfigurationOneTimeScheduleOutput)
}

// Choose a Schedule cadence
type CisScanConfigurationSchedule struct {
	Daily   *CisScanConfigurationDailySchedule   `pulumi:"daily"`
	Monthly *CisScanConfigurationMonthlySchedule `pulumi:"monthly"`
	OneTime *CisScanConfigurationOneTimeSchedule `pulumi:"oneTime"`
	Weekly  *CisScanConfigurationWeeklySchedule  `pulumi:"weekly"`
}

// CisScanConfigurationScheduleInput is an input type that accepts CisScanConfigurationScheduleArgs and CisScanConfigurationScheduleOutput values.
// You can construct a concrete instance of `CisScanConfigurationScheduleInput` via:
//
//	CisScanConfigurationScheduleArgs{...}
type CisScanConfigurationScheduleInput interface {
	pulumi.Input

	ToCisScanConfigurationScheduleOutput() CisScanConfigurationScheduleOutput
	ToCisScanConfigurationScheduleOutputWithContext(context.Context) CisScanConfigurationScheduleOutput
}

// Choose a Schedule cadence
type CisScanConfigurationScheduleArgs struct {
	Daily   CisScanConfigurationDailySchedulePtrInput   `pulumi:"daily"`
	Monthly CisScanConfigurationMonthlySchedulePtrInput `pulumi:"monthly"`
	OneTime CisScanConfigurationOneTimeSchedulePtrInput `pulumi:"oneTime"`
	Weekly  CisScanConfigurationWeeklySchedulePtrInput  `pulumi:"weekly"`
}

func (CisScanConfigurationScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationSchedule)(nil)).Elem()
}

func (i CisScanConfigurationScheduleArgs) ToCisScanConfigurationScheduleOutput() CisScanConfigurationScheduleOutput {
	return i.ToCisScanConfigurationScheduleOutputWithContext(context.Background())
}

func (i CisScanConfigurationScheduleArgs) ToCisScanConfigurationScheduleOutputWithContext(ctx context.Context) CisScanConfigurationScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationScheduleOutput)
}

func (i CisScanConfigurationScheduleArgs) ToCisScanConfigurationSchedulePtrOutput() CisScanConfigurationSchedulePtrOutput {
	return i.ToCisScanConfigurationSchedulePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationScheduleArgs) ToCisScanConfigurationSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationScheduleOutput).ToCisScanConfigurationSchedulePtrOutputWithContext(ctx)
}

// CisScanConfigurationSchedulePtrInput is an input type that accepts CisScanConfigurationScheduleArgs, CisScanConfigurationSchedulePtr and CisScanConfigurationSchedulePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationSchedulePtrInput` via:
//
//	        CisScanConfigurationScheduleArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationSchedulePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationSchedulePtrOutput() CisScanConfigurationSchedulePtrOutput
	ToCisScanConfigurationSchedulePtrOutputWithContext(context.Context) CisScanConfigurationSchedulePtrOutput
}

type cisScanConfigurationSchedulePtrType CisScanConfigurationScheduleArgs

func CisScanConfigurationSchedulePtr(v *CisScanConfigurationScheduleArgs) CisScanConfigurationSchedulePtrInput {
	return (*cisScanConfigurationSchedulePtrType)(v)
}

func (*cisScanConfigurationSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationSchedule)(nil)).Elem()
}

func (i *cisScanConfigurationSchedulePtrType) ToCisScanConfigurationSchedulePtrOutput() CisScanConfigurationSchedulePtrOutput {
	return i.ToCisScanConfigurationSchedulePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationSchedulePtrType) ToCisScanConfigurationSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationSchedulePtrOutput)
}

// Choose a Schedule cadence
type CisScanConfigurationScheduleOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationSchedule)(nil)).Elem()
}

func (o CisScanConfigurationScheduleOutput) ToCisScanConfigurationScheduleOutput() CisScanConfigurationScheduleOutput {
	return o
}

func (o CisScanConfigurationScheduleOutput) ToCisScanConfigurationScheduleOutputWithContext(ctx context.Context) CisScanConfigurationScheduleOutput {
	return o
}

func (o CisScanConfigurationScheduleOutput) ToCisScanConfigurationSchedulePtrOutput() CisScanConfigurationSchedulePtrOutput {
	return o.ToCisScanConfigurationSchedulePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationScheduleOutput) ToCisScanConfigurationSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationSchedule) *CisScanConfigurationSchedule {
		return &v
	}).(CisScanConfigurationSchedulePtrOutput)
}

func (o CisScanConfigurationScheduleOutput) Daily() CisScanConfigurationDailySchedulePtrOutput {
	return o.ApplyT(func(v CisScanConfigurationSchedule) *CisScanConfigurationDailySchedule { return v.Daily }).(CisScanConfigurationDailySchedulePtrOutput)
}

func (o CisScanConfigurationScheduleOutput) Monthly() CisScanConfigurationMonthlySchedulePtrOutput {
	return o.ApplyT(func(v CisScanConfigurationSchedule) *CisScanConfigurationMonthlySchedule { return v.Monthly }).(CisScanConfigurationMonthlySchedulePtrOutput)
}

func (o CisScanConfigurationScheduleOutput) OneTime() CisScanConfigurationOneTimeSchedulePtrOutput {
	return o.ApplyT(func(v CisScanConfigurationSchedule) *CisScanConfigurationOneTimeSchedule { return v.OneTime }).(CisScanConfigurationOneTimeSchedulePtrOutput)
}

func (o CisScanConfigurationScheduleOutput) Weekly() CisScanConfigurationWeeklySchedulePtrOutput {
	return o.ApplyT(func(v CisScanConfigurationSchedule) *CisScanConfigurationWeeklySchedule { return v.Weekly }).(CisScanConfigurationWeeklySchedulePtrOutput)
}

type CisScanConfigurationSchedulePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationSchedule)(nil)).Elem()
}

func (o CisScanConfigurationSchedulePtrOutput) ToCisScanConfigurationSchedulePtrOutput() CisScanConfigurationSchedulePtrOutput {
	return o
}

func (o CisScanConfigurationSchedulePtrOutput) ToCisScanConfigurationSchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationSchedulePtrOutput {
	return o
}

func (o CisScanConfigurationSchedulePtrOutput) Elem() CisScanConfigurationScheduleOutput {
	return o.ApplyT(func(v *CisScanConfigurationSchedule) CisScanConfigurationSchedule {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationSchedule
		return ret
	}).(CisScanConfigurationScheduleOutput)
}

func (o CisScanConfigurationSchedulePtrOutput) Daily() CisScanConfigurationDailySchedulePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationSchedule) *CisScanConfigurationDailySchedule {
		if v == nil {
			return nil
		}
		return v.Daily
	}).(CisScanConfigurationDailySchedulePtrOutput)
}

func (o CisScanConfigurationSchedulePtrOutput) Monthly() CisScanConfigurationMonthlySchedulePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationSchedule) *CisScanConfigurationMonthlySchedule {
		if v == nil {
			return nil
		}
		return v.Monthly
	}).(CisScanConfigurationMonthlySchedulePtrOutput)
}

func (o CisScanConfigurationSchedulePtrOutput) OneTime() CisScanConfigurationOneTimeSchedulePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationSchedule) *CisScanConfigurationOneTimeSchedule {
		if v == nil {
			return nil
		}
		return v.OneTime
	}).(CisScanConfigurationOneTimeSchedulePtrOutput)
}

func (o CisScanConfigurationSchedulePtrOutput) Weekly() CisScanConfigurationWeeklySchedulePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationSchedule) *CisScanConfigurationWeeklySchedule {
		if v == nil {
			return nil
		}
		return v.Weekly
	}).(CisScanConfigurationWeeklySchedulePtrOutput)
}

type CisScanConfigurationTime struct {
	TimeOfDay string `pulumi:"timeOfDay"`
	TimeZone  string `pulumi:"timeZone"`
}

// CisScanConfigurationTimeInput is an input type that accepts CisScanConfigurationTimeArgs and CisScanConfigurationTimeOutput values.
// You can construct a concrete instance of `CisScanConfigurationTimeInput` via:
//
//	CisScanConfigurationTimeArgs{...}
type CisScanConfigurationTimeInput interface {
	pulumi.Input

	ToCisScanConfigurationTimeOutput() CisScanConfigurationTimeOutput
	ToCisScanConfigurationTimeOutputWithContext(context.Context) CisScanConfigurationTimeOutput
}

type CisScanConfigurationTimeArgs struct {
	TimeOfDay pulumi.StringInput `pulumi:"timeOfDay"`
	TimeZone  pulumi.StringInput `pulumi:"timeZone"`
}

func (CisScanConfigurationTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationTime)(nil)).Elem()
}

func (i CisScanConfigurationTimeArgs) ToCisScanConfigurationTimeOutput() CisScanConfigurationTimeOutput {
	return i.ToCisScanConfigurationTimeOutputWithContext(context.Background())
}

func (i CisScanConfigurationTimeArgs) ToCisScanConfigurationTimeOutputWithContext(ctx context.Context) CisScanConfigurationTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationTimeOutput)
}

func (i CisScanConfigurationTimeArgs) ToCisScanConfigurationTimePtrOutput() CisScanConfigurationTimePtrOutput {
	return i.ToCisScanConfigurationTimePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationTimeArgs) ToCisScanConfigurationTimePtrOutputWithContext(ctx context.Context) CisScanConfigurationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationTimeOutput).ToCisScanConfigurationTimePtrOutputWithContext(ctx)
}

// CisScanConfigurationTimePtrInput is an input type that accepts CisScanConfigurationTimeArgs, CisScanConfigurationTimePtr and CisScanConfigurationTimePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationTimePtrInput` via:
//
//	        CisScanConfigurationTimeArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationTimePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationTimePtrOutput() CisScanConfigurationTimePtrOutput
	ToCisScanConfigurationTimePtrOutputWithContext(context.Context) CisScanConfigurationTimePtrOutput
}

type cisScanConfigurationTimePtrType CisScanConfigurationTimeArgs

func CisScanConfigurationTimePtr(v *CisScanConfigurationTimeArgs) CisScanConfigurationTimePtrInput {
	return (*cisScanConfigurationTimePtrType)(v)
}

func (*cisScanConfigurationTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationTime)(nil)).Elem()
}

func (i *cisScanConfigurationTimePtrType) ToCisScanConfigurationTimePtrOutput() CisScanConfigurationTimePtrOutput {
	return i.ToCisScanConfigurationTimePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationTimePtrType) ToCisScanConfigurationTimePtrOutputWithContext(ctx context.Context) CisScanConfigurationTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationTimePtrOutput)
}

type CisScanConfigurationTimeOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationTime)(nil)).Elem()
}

func (o CisScanConfigurationTimeOutput) ToCisScanConfigurationTimeOutput() CisScanConfigurationTimeOutput {
	return o
}

func (o CisScanConfigurationTimeOutput) ToCisScanConfigurationTimeOutputWithContext(ctx context.Context) CisScanConfigurationTimeOutput {
	return o
}

func (o CisScanConfigurationTimeOutput) ToCisScanConfigurationTimePtrOutput() CisScanConfigurationTimePtrOutput {
	return o.ToCisScanConfigurationTimePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationTimeOutput) ToCisScanConfigurationTimePtrOutputWithContext(ctx context.Context) CisScanConfigurationTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationTime) *CisScanConfigurationTime {
		return &v
	}).(CisScanConfigurationTimePtrOutput)
}

func (o CisScanConfigurationTimeOutput) TimeOfDay() pulumi.StringOutput {
	return o.ApplyT(func(v CisScanConfigurationTime) string { return v.TimeOfDay }).(pulumi.StringOutput)
}

func (o CisScanConfigurationTimeOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v CisScanConfigurationTime) string { return v.TimeZone }).(pulumi.StringOutput)
}

type CisScanConfigurationTimePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationTime)(nil)).Elem()
}

func (o CisScanConfigurationTimePtrOutput) ToCisScanConfigurationTimePtrOutput() CisScanConfigurationTimePtrOutput {
	return o
}

func (o CisScanConfigurationTimePtrOutput) ToCisScanConfigurationTimePtrOutputWithContext(ctx context.Context) CisScanConfigurationTimePtrOutput {
	return o
}

func (o CisScanConfigurationTimePtrOutput) Elem() CisScanConfigurationTimeOutput {
	return o.ApplyT(func(v *CisScanConfigurationTime) CisScanConfigurationTime {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationTime
		return ret
	}).(CisScanConfigurationTimeOutput)
}

func (o CisScanConfigurationTimePtrOutput) TimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfDay
	}).(pulumi.StringPtrOutput)
}

func (o CisScanConfigurationTimePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type CisScanConfigurationWeeklySchedule struct {
	Days      []CisScanConfigurationDay `pulumi:"days"`
	StartTime CisScanConfigurationTime  `pulumi:"startTime"`
}

// CisScanConfigurationWeeklyScheduleInput is an input type that accepts CisScanConfigurationWeeklyScheduleArgs and CisScanConfigurationWeeklyScheduleOutput values.
// You can construct a concrete instance of `CisScanConfigurationWeeklyScheduleInput` via:
//
//	CisScanConfigurationWeeklyScheduleArgs{...}
type CisScanConfigurationWeeklyScheduleInput interface {
	pulumi.Input

	ToCisScanConfigurationWeeklyScheduleOutput() CisScanConfigurationWeeklyScheduleOutput
	ToCisScanConfigurationWeeklyScheduleOutputWithContext(context.Context) CisScanConfigurationWeeklyScheduleOutput
}

type CisScanConfigurationWeeklyScheduleArgs struct {
	Days      CisScanConfigurationDayArrayInput `pulumi:"days"`
	StartTime CisScanConfigurationTimeInput     `pulumi:"startTime"`
}

func (CisScanConfigurationWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationWeeklySchedule)(nil)).Elem()
}

func (i CisScanConfigurationWeeklyScheduleArgs) ToCisScanConfigurationWeeklyScheduleOutput() CisScanConfigurationWeeklyScheduleOutput {
	return i.ToCisScanConfigurationWeeklyScheduleOutputWithContext(context.Background())
}

func (i CisScanConfigurationWeeklyScheduleArgs) ToCisScanConfigurationWeeklyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationWeeklyScheduleOutput)
}

func (i CisScanConfigurationWeeklyScheduleArgs) ToCisScanConfigurationWeeklySchedulePtrOutput() CisScanConfigurationWeeklySchedulePtrOutput {
	return i.ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i CisScanConfigurationWeeklyScheduleArgs) ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationWeeklyScheduleOutput).ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(ctx)
}

// CisScanConfigurationWeeklySchedulePtrInput is an input type that accepts CisScanConfigurationWeeklyScheduleArgs, CisScanConfigurationWeeklySchedulePtr and CisScanConfigurationWeeklySchedulePtrOutput values.
// You can construct a concrete instance of `CisScanConfigurationWeeklySchedulePtrInput` via:
//
//	        CisScanConfigurationWeeklyScheduleArgs{...}
//
//	or:
//
//	        nil
type CisScanConfigurationWeeklySchedulePtrInput interface {
	pulumi.Input

	ToCisScanConfigurationWeeklySchedulePtrOutput() CisScanConfigurationWeeklySchedulePtrOutput
	ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(context.Context) CisScanConfigurationWeeklySchedulePtrOutput
}

type cisScanConfigurationWeeklySchedulePtrType CisScanConfigurationWeeklyScheduleArgs

func CisScanConfigurationWeeklySchedulePtr(v *CisScanConfigurationWeeklyScheduleArgs) CisScanConfigurationWeeklySchedulePtrInput {
	return (*cisScanConfigurationWeeklySchedulePtrType)(v)
}

func (*cisScanConfigurationWeeklySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationWeeklySchedule)(nil)).Elem()
}

func (i *cisScanConfigurationWeeklySchedulePtrType) ToCisScanConfigurationWeeklySchedulePtrOutput() CisScanConfigurationWeeklySchedulePtrOutput {
	return i.ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i *cisScanConfigurationWeeklySchedulePtrType) ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationWeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CisScanConfigurationWeeklySchedulePtrOutput)
}

type CisScanConfigurationWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CisScanConfigurationWeeklySchedule)(nil)).Elem()
}

func (o CisScanConfigurationWeeklyScheduleOutput) ToCisScanConfigurationWeeklyScheduleOutput() CisScanConfigurationWeeklyScheduleOutput {
	return o
}

func (o CisScanConfigurationWeeklyScheduleOutput) ToCisScanConfigurationWeeklyScheduleOutputWithContext(ctx context.Context) CisScanConfigurationWeeklyScheduleOutput {
	return o
}

func (o CisScanConfigurationWeeklyScheduleOutput) ToCisScanConfigurationWeeklySchedulePtrOutput() CisScanConfigurationWeeklySchedulePtrOutput {
	return o.ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(context.Background())
}

func (o CisScanConfigurationWeeklyScheduleOutput) ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationWeeklySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CisScanConfigurationWeeklySchedule) *CisScanConfigurationWeeklySchedule {
		return &v
	}).(CisScanConfigurationWeeklySchedulePtrOutput)
}

func (o CisScanConfigurationWeeklyScheduleOutput) Days() CisScanConfigurationDayArrayOutput {
	return o.ApplyT(func(v CisScanConfigurationWeeklySchedule) []CisScanConfigurationDay { return v.Days }).(CisScanConfigurationDayArrayOutput)
}

func (o CisScanConfigurationWeeklyScheduleOutput) StartTime() CisScanConfigurationTimeOutput {
	return o.ApplyT(func(v CisScanConfigurationWeeklySchedule) CisScanConfigurationTime { return v.StartTime }).(CisScanConfigurationTimeOutput)
}

type CisScanConfigurationWeeklySchedulePtrOutput struct{ *pulumi.OutputState }

func (CisScanConfigurationWeeklySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CisScanConfigurationWeeklySchedule)(nil)).Elem()
}

func (o CisScanConfigurationWeeklySchedulePtrOutput) ToCisScanConfigurationWeeklySchedulePtrOutput() CisScanConfigurationWeeklySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationWeeklySchedulePtrOutput) ToCisScanConfigurationWeeklySchedulePtrOutputWithContext(ctx context.Context) CisScanConfigurationWeeklySchedulePtrOutput {
	return o
}

func (o CisScanConfigurationWeeklySchedulePtrOutput) Elem() CisScanConfigurationWeeklyScheduleOutput {
	return o.ApplyT(func(v *CisScanConfigurationWeeklySchedule) CisScanConfigurationWeeklySchedule {
		if v != nil {
			return *v
		}
		var ret CisScanConfigurationWeeklySchedule
		return ret
	}).(CisScanConfigurationWeeklyScheduleOutput)
}

func (o CisScanConfigurationWeeklySchedulePtrOutput) Days() CisScanConfigurationDayArrayOutput {
	return o.ApplyT(func(v *CisScanConfigurationWeeklySchedule) []CisScanConfigurationDay {
		if v == nil {
			return nil
		}
		return v.Days
	}).(CisScanConfigurationDayArrayOutput)
}

func (o CisScanConfigurationWeeklySchedulePtrOutput) StartTime() CisScanConfigurationTimePtrOutput {
	return o.ApplyT(func(v *CisScanConfigurationWeeklySchedule) *CisScanConfigurationTime {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(CisScanConfigurationTimePtrOutput)
}

type FilterCriteria struct {
	AwsAccountId           []FilterStringFilter    `pulumi:"awsAccountId"`
	ComponentId            []FilterStringFilter    `pulumi:"componentId"`
	ComponentType          []FilterStringFilter    `pulumi:"componentType"`
	Ec2InstanceImageId     []FilterStringFilter    `pulumi:"ec2InstanceImageId"`
	Ec2InstanceSubnetId    []FilterStringFilter    `pulumi:"ec2InstanceSubnetId"`
	Ec2InstanceVpcId       []FilterStringFilter    `pulumi:"ec2InstanceVpcId"`
	EcrImageArchitecture   []FilterStringFilter    `pulumi:"ecrImageArchitecture"`
	EcrImageHash           []FilterStringFilter    `pulumi:"ecrImageHash"`
	EcrImagePushedAt       []FilterDateFilter      `pulumi:"ecrImagePushedAt"`
	EcrImageRegistry       []FilterStringFilter    `pulumi:"ecrImageRegistry"`
	EcrImageRepositoryName []FilterStringFilter    `pulumi:"ecrImageRepositoryName"`
	EcrImageTags           []FilterStringFilter    `pulumi:"ecrImageTags"`
	FindingArn             []FilterStringFilter    `pulumi:"findingArn"`
	FindingStatus          []FilterStringFilter    `pulumi:"findingStatus"`
	FindingType            []FilterStringFilter    `pulumi:"findingType"`
	FirstObservedAt        []FilterDateFilter      `pulumi:"firstObservedAt"`
	InspectorScore         []FilterNumberFilter    `pulumi:"inspectorScore"`
	LastObservedAt         []FilterDateFilter      `pulumi:"lastObservedAt"`
	NetworkProtocol        []FilterStringFilter    `pulumi:"networkProtocol"`
	PortRange              []FilterPortRangeFilter `pulumi:"portRange"`
	RelatedVulnerabilities []FilterStringFilter    `pulumi:"relatedVulnerabilities"`
	ResourceId             []FilterStringFilter    `pulumi:"resourceId"`
	ResourceTags           []FilterMapFilter       `pulumi:"resourceTags"`
	ResourceType           []FilterStringFilter    `pulumi:"resourceType"`
	Severity               []FilterStringFilter    `pulumi:"severity"`
	Title                  []FilterStringFilter    `pulumi:"title"`
	UpdatedAt              []FilterDateFilter      `pulumi:"updatedAt"`
	VendorSeverity         []FilterStringFilter    `pulumi:"vendorSeverity"`
	VulnerabilityId        []FilterStringFilter    `pulumi:"vulnerabilityId"`
	VulnerabilitySource    []FilterStringFilter    `pulumi:"vulnerabilitySource"`
	VulnerablePackages     []FilterPackageFilter   `pulumi:"vulnerablePackages"`
}

// FilterCriteriaInput is an input type that accepts FilterCriteriaArgs and FilterCriteriaOutput values.
// You can construct a concrete instance of `FilterCriteriaInput` via:
//
//	FilterCriteriaArgs{...}
type FilterCriteriaInput interface {
	pulumi.Input

	ToFilterCriteriaOutput() FilterCriteriaOutput
	ToFilterCriteriaOutputWithContext(context.Context) FilterCriteriaOutput
}

type FilterCriteriaArgs struct {
	AwsAccountId           FilterStringFilterArrayInput    `pulumi:"awsAccountId"`
	ComponentId            FilterStringFilterArrayInput    `pulumi:"componentId"`
	ComponentType          FilterStringFilterArrayInput    `pulumi:"componentType"`
	Ec2InstanceImageId     FilterStringFilterArrayInput    `pulumi:"ec2InstanceImageId"`
	Ec2InstanceSubnetId    FilterStringFilterArrayInput    `pulumi:"ec2InstanceSubnetId"`
	Ec2InstanceVpcId       FilterStringFilterArrayInput    `pulumi:"ec2InstanceVpcId"`
	EcrImageArchitecture   FilterStringFilterArrayInput    `pulumi:"ecrImageArchitecture"`
	EcrImageHash           FilterStringFilterArrayInput    `pulumi:"ecrImageHash"`
	EcrImagePushedAt       FilterDateFilterArrayInput      `pulumi:"ecrImagePushedAt"`
	EcrImageRegistry       FilterStringFilterArrayInput    `pulumi:"ecrImageRegistry"`
	EcrImageRepositoryName FilterStringFilterArrayInput    `pulumi:"ecrImageRepositoryName"`
	EcrImageTags           FilterStringFilterArrayInput    `pulumi:"ecrImageTags"`
	FindingArn             FilterStringFilterArrayInput    `pulumi:"findingArn"`
	FindingStatus          FilterStringFilterArrayInput    `pulumi:"findingStatus"`
	FindingType            FilterStringFilterArrayInput    `pulumi:"findingType"`
	FirstObservedAt        FilterDateFilterArrayInput      `pulumi:"firstObservedAt"`
	InspectorScore         FilterNumberFilterArrayInput    `pulumi:"inspectorScore"`
	LastObservedAt         FilterDateFilterArrayInput      `pulumi:"lastObservedAt"`
	NetworkProtocol        FilterStringFilterArrayInput    `pulumi:"networkProtocol"`
	PortRange              FilterPortRangeFilterArrayInput `pulumi:"portRange"`
	RelatedVulnerabilities FilterStringFilterArrayInput    `pulumi:"relatedVulnerabilities"`
	ResourceId             FilterStringFilterArrayInput    `pulumi:"resourceId"`
	ResourceTags           FilterMapFilterArrayInput       `pulumi:"resourceTags"`
	ResourceType           FilterStringFilterArrayInput    `pulumi:"resourceType"`
	Severity               FilterStringFilterArrayInput    `pulumi:"severity"`
	Title                  FilterStringFilterArrayInput    `pulumi:"title"`
	UpdatedAt              FilterDateFilterArrayInput      `pulumi:"updatedAt"`
	VendorSeverity         FilterStringFilterArrayInput    `pulumi:"vendorSeverity"`
	VulnerabilityId        FilterStringFilterArrayInput    `pulumi:"vulnerabilityId"`
	VulnerabilitySource    FilterStringFilterArrayInput    `pulumi:"vulnerabilitySource"`
	VulnerablePackages     FilterPackageFilterArrayInput   `pulumi:"vulnerablePackages"`
}

func (FilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCriteria)(nil)).Elem()
}

func (i FilterCriteriaArgs) ToFilterCriteriaOutput() FilterCriteriaOutput {
	return i.ToFilterCriteriaOutputWithContext(context.Background())
}

func (i FilterCriteriaArgs) ToFilterCriteriaOutputWithContext(ctx context.Context) FilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterCriteriaOutput)
}

type FilterCriteriaOutput struct{ *pulumi.OutputState }

func (FilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterCriteria)(nil)).Elem()
}

func (o FilterCriteriaOutput) ToFilterCriteriaOutput() FilterCriteriaOutput {
	return o
}

func (o FilterCriteriaOutput) ToFilterCriteriaOutputWithContext(ctx context.Context) FilterCriteriaOutput {
	return o
}

func (o FilterCriteriaOutput) AwsAccountId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.AwsAccountId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ComponentId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ComponentId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ComponentType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ComponentType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceImageId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceImageId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceSubnetId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceSubnetId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Ec2InstanceVpcId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Ec2InstanceVpcId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageArchitecture() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageArchitecture }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageHash() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageHash }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImagePushedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.EcrImagePushedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageRegistry() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageRegistry }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageRepositoryName() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageRepositoryName }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) EcrImageTags() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.EcrImageTags }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingArn() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingArn }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingStatus() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingStatus }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FindingType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.FindingType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) FirstObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.FirstObservedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) InspectorScore() FilterNumberFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterNumberFilter { return v.InspectorScore }).(FilterNumberFilterArrayOutput)
}

func (o FilterCriteriaOutput) LastObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.LastObservedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) NetworkProtocol() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.NetworkProtocol }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) PortRange() FilterPortRangeFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterPortRangeFilter { return v.PortRange }).(FilterPortRangeFilterArrayOutput)
}

func (o FilterCriteriaOutput) RelatedVulnerabilities() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.RelatedVulnerabilities }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ResourceId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceTags() FilterMapFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterMapFilter { return v.ResourceTags }).(FilterMapFilterArrayOutput)
}

func (o FilterCriteriaOutput) ResourceType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.ResourceType }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Severity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Severity }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) Title() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.Title }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) UpdatedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterDateFilter { return v.UpdatedAt }).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaOutput) VendorSeverity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VendorSeverity }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerabilityId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VulnerabilityId }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerabilitySource() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterStringFilter { return v.VulnerabilitySource }).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaOutput) VulnerablePackages() FilterPackageFilterArrayOutput {
	return o.ApplyT(func(v FilterCriteria) []FilterPackageFilter { return v.VulnerablePackages }).(FilterPackageFilterArrayOutput)
}

type FilterCriteriaPtrOutput struct{ *pulumi.OutputState }

func (FilterCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterCriteria)(nil)).Elem()
}

func (o FilterCriteriaPtrOutput) ToFilterCriteriaPtrOutput() FilterCriteriaPtrOutput {
	return o
}

func (o FilterCriteriaPtrOutput) ToFilterCriteriaPtrOutputWithContext(ctx context.Context) FilterCriteriaPtrOutput {
	return o
}

func (o FilterCriteriaPtrOutput) Elem() FilterCriteriaOutput {
	return o.ApplyT(func(v *FilterCriteria) FilterCriteria {
		if v != nil {
			return *v
		}
		var ret FilterCriteria
		return ret
	}).(FilterCriteriaOutput)
}

func (o FilterCriteriaPtrOutput) AwsAccountId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ComponentId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ComponentId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ComponentType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ComponentType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceImageId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceImageId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceSubnetId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceSubnetId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Ec2InstanceVpcId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Ec2InstanceVpcId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageArchitecture() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageArchitecture
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageHash() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageHash
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImagePushedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.EcrImagePushedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageRegistry() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageRegistry
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageRepositoryName() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageRepositoryName
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) EcrImageTags() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.EcrImageTags
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingArn() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingArn
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingStatus() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingStatus
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FindingType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) FirstObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) InspectorScore() FilterNumberFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterNumberFilter {
		if v == nil {
			return nil
		}
		return v.InspectorScore
	}).(FilterNumberFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) LastObservedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) NetworkProtocol() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkProtocol
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) PortRange() FilterPortRangeFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterPortRangeFilter {
		if v == nil {
			return nil
		}
		return v.PortRange
	}).(FilterPortRangeFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) RelatedVulnerabilities() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedVulnerabilities
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceTags() FilterMapFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(FilterMapFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) ResourceType() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Severity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) Title() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) UpdatedAt() FilterDateFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(FilterDateFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VendorSeverity() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VendorSeverity
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerabilityId() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilityId
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerabilitySource() FilterStringFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitySource
	}).(FilterStringFilterArrayOutput)
}

func (o FilterCriteriaPtrOutput) VulnerablePackages() FilterPackageFilterArrayOutput {
	return o.ApplyT(func(v *FilterCriteria) []FilterPackageFilter {
		if v == nil {
			return nil
		}
		return v.VulnerablePackages
	}).(FilterPackageFilterArrayOutput)
}

type FilterDateFilter struct {
	EndInclusive   *int `pulumi:"endInclusive"`
	StartInclusive *int `pulumi:"startInclusive"`
}

// FilterDateFilterInput is an input type that accepts FilterDateFilterArgs and FilterDateFilterOutput values.
// You can construct a concrete instance of `FilterDateFilterInput` via:
//
//	FilterDateFilterArgs{...}
type FilterDateFilterInput interface {
	pulumi.Input

	ToFilterDateFilterOutput() FilterDateFilterOutput
	ToFilterDateFilterOutputWithContext(context.Context) FilterDateFilterOutput
}

type FilterDateFilterArgs struct {
	EndInclusive   pulumi.IntPtrInput `pulumi:"endInclusive"`
	StartInclusive pulumi.IntPtrInput `pulumi:"startInclusive"`
}

func (FilterDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterDateFilter)(nil)).Elem()
}

func (i FilterDateFilterArgs) ToFilterDateFilterOutput() FilterDateFilterOutput {
	return i.ToFilterDateFilterOutputWithContext(context.Background())
}

func (i FilterDateFilterArgs) ToFilterDateFilterOutputWithContext(ctx context.Context) FilterDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterDateFilterOutput)
}

// FilterDateFilterArrayInput is an input type that accepts FilterDateFilterArray and FilterDateFilterArrayOutput values.
// You can construct a concrete instance of `FilterDateFilterArrayInput` via:
//
//	FilterDateFilterArray{ FilterDateFilterArgs{...} }
type FilterDateFilterArrayInput interface {
	pulumi.Input

	ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput
	ToFilterDateFilterArrayOutputWithContext(context.Context) FilterDateFilterArrayOutput
}

type FilterDateFilterArray []FilterDateFilterInput

func (FilterDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterDateFilter)(nil)).Elem()
}

func (i FilterDateFilterArray) ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput {
	return i.ToFilterDateFilterArrayOutputWithContext(context.Background())
}

func (i FilterDateFilterArray) ToFilterDateFilterArrayOutputWithContext(ctx context.Context) FilterDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterDateFilterArrayOutput)
}

type FilterDateFilterOutput struct{ *pulumi.OutputState }

func (FilterDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterDateFilter)(nil)).Elem()
}

func (o FilterDateFilterOutput) ToFilterDateFilterOutput() FilterDateFilterOutput {
	return o
}

func (o FilterDateFilterOutput) ToFilterDateFilterOutputWithContext(ctx context.Context) FilterDateFilterOutput {
	return o
}

func (o FilterDateFilterOutput) EndInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterDateFilter) *int { return v.EndInclusive }).(pulumi.IntPtrOutput)
}

func (o FilterDateFilterOutput) StartInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterDateFilter) *int { return v.StartInclusive }).(pulumi.IntPtrOutput)
}

type FilterDateFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterDateFilter)(nil)).Elem()
}

func (o FilterDateFilterArrayOutput) ToFilterDateFilterArrayOutput() FilterDateFilterArrayOutput {
	return o
}

func (o FilterDateFilterArrayOutput) ToFilterDateFilterArrayOutputWithContext(ctx context.Context) FilterDateFilterArrayOutput {
	return o
}

func (o FilterDateFilterArrayOutput) Index(i pulumi.IntInput) FilterDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterDateFilter {
		return vs[0].([]FilterDateFilter)[vs[1].(int)]
	}).(FilterDateFilterOutput)
}

type FilterMapFilter struct {
	Comparison FilterMapComparison `pulumi:"comparison"`
	Key        *string             `pulumi:"key"`
	Value      *string             `pulumi:"value"`
}

// FilterMapFilterInput is an input type that accepts FilterMapFilterArgs and FilterMapFilterOutput values.
// You can construct a concrete instance of `FilterMapFilterInput` via:
//
//	FilterMapFilterArgs{...}
type FilterMapFilterInput interface {
	pulumi.Input

	ToFilterMapFilterOutput() FilterMapFilterOutput
	ToFilterMapFilterOutputWithContext(context.Context) FilterMapFilterOutput
}

type FilterMapFilterArgs struct {
	Comparison FilterMapComparisonInput `pulumi:"comparison"`
	Key        pulumi.StringPtrInput    `pulumi:"key"`
	Value      pulumi.StringPtrInput    `pulumi:"value"`
}

func (FilterMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterMapFilter)(nil)).Elem()
}

func (i FilterMapFilterArgs) ToFilterMapFilterOutput() FilterMapFilterOutput {
	return i.ToFilterMapFilterOutputWithContext(context.Background())
}

func (i FilterMapFilterArgs) ToFilterMapFilterOutputWithContext(ctx context.Context) FilterMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterMapFilterOutput)
}

// FilterMapFilterArrayInput is an input type that accepts FilterMapFilterArray and FilterMapFilterArrayOutput values.
// You can construct a concrete instance of `FilterMapFilterArrayInput` via:
//
//	FilterMapFilterArray{ FilterMapFilterArgs{...} }
type FilterMapFilterArrayInput interface {
	pulumi.Input

	ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput
	ToFilterMapFilterArrayOutputWithContext(context.Context) FilterMapFilterArrayOutput
}

type FilterMapFilterArray []FilterMapFilterInput

func (FilterMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterMapFilter)(nil)).Elem()
}

func (i FilterMapFilterArray) ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput {
	return i.ToFilterMapFilterArrayOutputWithContext(context.Background())
}

func (i FilterMapFilterArray) ToFilterMapFilterArrayOutputWithContext(ctx context.Context) FilterMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterMapFilterArrayOutput)
}

type FilterMapFilterOutput struct{ *pulumi.OutputState }

func (FilterMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterMapFilter)(nil)).Elem()
}

func (o FilterMapFilterOutput) ToFilterMapFilterOutput() FilterMapFilterOutput {
	return o
}

func (o FilterMapFilterOutput) ToFilterMapFilterOutputWithContext(ctx context.Context) FilterMapFilterOutput {
	return o
}

func (o FilterMapFilterOutput) Comparison() FilterMapComparisonOutput {
	return o.ApplyT(func(v FilterMapFilter) FilterMapComparison { return v.Comparison }).(FilterMapComparisonOutput)
}

func (o FilterMapFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterMapFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o FilterMapFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterMapFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type FilterMapFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterMapFilter)(nil)).Elem()
}

func (o FilterMapFilterArrayOutput) ToFilterMapFilterArrayOutput() FilterMapFilterArrayOutput {
	return o
}

func (o FilterMapFilterArrayOutput) ToFilterMapFilterArrayOutputWithContext(ctx context.Context) FilterMapFilterArrayOutput {
	return o
}

func (o FilterMapFilterArrayOutput) Index(i pulumi.IntInput) FilterMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterMapFilter {
		return vs[0].([]FilterMapFilter)[vs[1].(int)]
	}).(FilterMapFilterOutput)
}

type FilterNumberFilter struct {
	LowerInclusive *float64 `pulumi:"lowerInclusive"`
	UpperInclusive *float64 `pulumi:"upperInclusive"`
}

// FilterNumberFilterInput is an input type that accepts FilterNumberFilterArgs and FilterNumberFilterOutput values.
// You can construct a concrete instance of `FilterNumberFilterInput` via:
//
//	FilterNumberFilterArgs{...}
type FilterNumberFilterInput interface {
	pulumi.Input

	ToFilterNumberFilterOutput() FilterNumberFilterOutput
	ToFilterNumberFilterOutputWithContext(context.Context) FilterNumberFilterOutput
}

type FilterNumberFilterArgs struct {
	LowerInclusive pulumi.Float64PtrInput `pulumi:"lowerInclusive"`
	UpperInclusive pulumi.Float64PtrInput `pulumi:"upperInclusive"`
}

func (FilterNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterNumberFilter)(nil)).Elem()
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterOutput() FilterNumberFilterOutput {
	return i.ToFilterNumberFilterOutputWithContext(context.Background())
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterOutputWithContext(ctx context.Context) FilterNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterOutput)
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return i.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (i FilterNumberFilterArgs) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterOutput).ToFilterNumberFilterPtrOutputWithContext(ctx)
}

// FilterNumberFilterPtrInput is an input type that accepts FilterNumberFilterArgs, FilterNumberFilterPtr and FilterNumberFilterPtrOutput values.
// You can construct a concrete instance of `FilterNumberFilterPtrInput` via:
//
//	        FilterNumberFilterArgs{...}
//
//	or:
//
//	        nil
type FilterNumberFilterPtrInput interface {
	pulumi.Input

	ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput
	ToFilterNumberFilterPtrOutputWithContext(context.Context) FilterNumberFilterPtrOutput
}

type filterNumberFilterPtrType FilterNumberFilterArgs

func FilterNumberFilterPtr(v *FilterNumberFilterArgs) FilterNumberFilterPtrInput {
	return (*filterNumberFilterPtrType)(v)
}

func (*filterNumberFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterNumberFilter)(nil)).Elem()
}

func (i *filterNumberFilterPtrType) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return i.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (i *filterNumberFilterPtrType) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterPtrOutput)
}

// FilterNumberFilterArrayInput is an input type that accepts FilterNumberFilterArray and FilterNumberFilterArrayOutput values.
// You can construct a concrete instance of `FilterNumberFilterArrayInput` via:
//
//	FilterNumberFilterArray{ FilterNumberFilterArgs{...} }
type FilterNumberFilterArrayInput interface {
	pulumi.Input

	ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput
	ToFilterNumberFilterArrayOutputWithContext(context.Context) FilterNumberFilterArrayOutput
}

type FilterNumberFilterArray []FilterNumberFilterInput

func (FilterNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterNumberFilter)(nil)).Elem()
}

func (i FilterNumberFilterArray) ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput {
	return i.ToFilterNumberFilterArrayOutputWithContext(context.Background())
}

func (i FilterNumberFilterArray) ToFilterNumberFilterArrayOutputWithContext(ctx context.Context) FilterNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterNumberFilterArrayOutput)
}

type FilterNumberFilterOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterOutput() FilterNumberFilterOutput {
	return o
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterOutputWithContext(ctx context.Context) FilterNumberFilterOutput {
	return o
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return o.ToFilterNumberFilterPtrOutputWithContext(context.Background())
}

func (o FilterNumberFilterOutput) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterNumberFilter) *FilterNumberFilter {
		return &v
	}).(FilterNumberFilterPtrOutput)
}

func (o FilterNumberFilterOutput) LowerInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FilterNumberFilter) *float64 { return v.LowerInclusive }).(pulumi.Float64PtrOutput)
}

func (o FilterNumberFilterOutput) UpperInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FilterNumberFilter) *float64 { return v.UpperInclusive }).(pulumi.Float64PtrOutput)
}

type FilterNumberFilterPtrOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterPtrOutput) ToFilterNumberFilterPtrOutput() FilterNumberFilterPtrOutput {
	return o
}

func (o FilterNumberFilterPtrOutput) ToFilterNumberFilterPtrOutputWithContext(ctx context.Context) FilterNumberFilterPtrOutput {
	return o
}

func (o FilterNumberFilterPtrOutput) Elem() FilterNumberFilterOutput {
	return o.ApplyT(func(v *FilterNumberFilter) FilterNumberFilter {
		if v != nil {
			return *v
		}
		var ret FilterNumberFilter
		return ret
	}).(FilterNumberFilterOutput)
}

func (o FilterNumberFilterPtrOutput) LowerInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FilterNumberFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerInclusive
	}).(pulumi.Float64PtrOutput)
}

func (o FilterNumberFilterPtrOutput) UpperInclusive() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FilterNumberFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperInclusive
	}).(pulumi.Float64PtrOutput)
}

type FilterNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterNumberFilter)(nil)).Elem()
}

func (o FilterNumberFilterArrayOutput) ToFilterNumberFilterArrayOutput() FilterNumberFilterArrayOutput {
	return o
}

func (o FilterNumberFilterArrayOutput) ToFilterNumberFilterArrayOutputWithContext(ctx context.Context) FilterNumberFilterArrayOutput {
	return o
}

func (o FilterNumberFilterArrayOutput) Index(i pulumi.IntInput) FilterNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterNumberFilter {
		return vs[0].([]FilterNumberFilter)[vs[1].(int)]
	}).(FilterNumberFilterOutput)
}

type FilterPackageFilter struct {
	Architecture    *FilterStringFilter `pulumi:"architecture"`
	Epoch           *FilterNumberFilter `pulumi:"epoch"`
	Name            *FilterStringFilter `pulumi:"name"`
	Release         *FilterStringFilter `pulumi:"release"`
	SourceLayerHash *FilterStringFilter `pulumi:"sourceLayerHash"`
	Version         *FilterStringFilter `pulumi:"version"`
}

// FilterPackageFilterInput is an input type that accepts FilterPackageFilterArgs and FilterPackageFilterOutput values.
// You can construct a concrete instance of `FilterPackageFilterInput` via:
//
//	FilterPackageFilterArgs{...}
type FilterPackageFilterInput interface {
	pulumi.Input

	ToFilterPackageFilterOutput() FilterPackageFilterOutput
	ToFilterPackageFilterOutputWithContext(context.Context) FilterPackageFilterOutput
}

type FilterPackageFilterArgs struct {
	Architecture    FilterStringFilterPtrInput `pulumi:"architecture"`
	Epoch           FilterNumberFilterPtrInput `pulumi:"epoch"`
	Name            FilterStringFilterPtrInput `pulumi:"name"`
	Release         FilterStringFilterPtrInput `pulumi:"release"`
	SourceLayerHash FilterStringFilterPtrInput `pulumi:"sourceLayerHash"`
	Version         FilterStringFilterPtrInput `pulumi:"version"`
}

func (FilterPackageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPackageFilter)(nil)).Elem()
}

func (i FilterPackageFilterArgs) ToFilterPackageFilterOutput() FilterPackageFilterOutput {
	return i.ToFilterPackageFilterOutputWithContext(context.Background())
}

func (i FilterPackageFilterArgs) ToFilterPackageFilterOutputWithContext(ctx context.Context) FilterPackageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPackageFilterOutput)
}

// FilterPackageFilterArrayInput is an input type that accepts FilterPackageFilterArray and FilterPackageFilterArrayOutput values.
// You can construct a concrete instance of `FilterPackageFilterArrayInput` via:
//
//	FilterPackageFilterArray{ FilterPackageFilterArgs{...} }
type FilterPackageFilterArrayInput interface {
	pulumi.Input

	ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput
	ToFilterPackageFilterArrayOutputWithContext(context.Context) FilterPackageFilterArrayOutput
}

type FilterPackageFilterArray []FilterPackageFilterInput

func (FilterPackageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPackageFilter)(nil)).Elem()
}

func (i FilterPackageFilterArray) ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput {
	return i.ToFilterPackageFilterArrayOutputWithContext(context.Background())
}

func (i FilterPackageFilterArray) ToFilterPackageFilterArrayOutputWithContext(ctx context.Context) FilterPackageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPackageFilterArrayOutput)
}

type FilterPackageFilterOutput struct{ *pulumi.OutputState }

func (FilterPackageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPackageFilter)(nil)).Elem()
}

func (o FilterPackageFilterOutput) ToFilterPackageFilterOutput() FilterPackageFilterOutput {
	return o
}

func (o FilterPackageFilterOutput) ToFilterPackageFilterOutputWithContext(ctx context.Context) FilterPackageFilterOutput {
	return o
}

func (o FilterPackageFilterOutput) Architecture() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Architecture }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Epoch() FilterNumberFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterNumberFilter { return v.Epoch }).(FilterNumberFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Name() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Name }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Release() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Release }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) SourceLayerHash() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.SourceLayerHash }).(FilterStringFilterPtrOutput)
}

func (o FilterPackageFilterOutput) Version() FilterStringFilterPtrOutput {
	return o.ApplyT(func(v FilterPackageFilter) *FilterStringFilter { return v.Version }).(FilterStringFilterPtrOutput)
}

type FilterPackageFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterPackageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPackageFilter)(nil)).Elem()
}

func (o FilterPackageFilterArrayOutput) ToFilterPackageFilterArrayOutput() FilterPackageFilterArrayOutput {
	return o
}

func (o FilterPackageFilterArrayOutput) ToFilterPackageFilterArrayOutputWithContext(ctx context.Context) FilterPackageFilterArrayOutput {
	return o
}

func (o FilterPackageFilterArrayOutput) Index(i pulumi.IntInput) FilterPackageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterPackageFilter {
		return vs[0].([]FilterPackageFilter)[vs[1].(int)]
	}).(FilterPackageFilterOutput)
}

type FilterPortRangeFilter struct {
	BeginInclusive *int `pulumi:"beginInclusive"`
	EndInclusive   *int `pulumi:"endInclusive"`
}

// FilterPortRangeFilterInput is an input type that accepts FilterPortRangeFilterArgs and FilterPortRangeFilterOutput values.
// You can construct a concrete instance of `FilterPortRangeFilterInput` via:
//
//	FilterPortRangeFilterArgs{...}
type FilterPortRangeFilterInput interface {
	pulumi.Input

	ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput
	ToFilterPortRangeFilterOutputWithContext(context.Context) FilterPortRangeFilterOutput
}

type FilterPortRangeFilterArgs struct {
	BeginInclusive pulumi.IntPtrInput `pulumi:"beginInclusive"`
	EndInclusive   pulumi.IntPtrInput `pulumi:"endInclusive"`
}

func (FilterPortRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPortRangeFilter)(nil)).Elem()
}

func (i FilterPortRangeFilterArgs) ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput {
	return i.ToFilterPortRangeFilterOutputWithContext(context.Background())
}

func (i FilterPortRangeFilterArgs) ToFilterPortRangeFilterOutputWithContext(ctx context.Context) FilterPortRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPortRangeFilterOutput)
}

// FilterPortRangeFilterArrayInput is an input type that accepts FilterPortRangeFilterArray and FilterPortRangeFilterArrayOutput values.
// You can construct a concrete instance of `FilterPortRangeFilterArrayInput` via:
//
//	FilterPortRangeFilterArray{ FilterPortRangeFilterArgs{...} }
type FilterPortRangeFilterArrayInput interface {
	pulumi.Input

	ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput
	ToFilterPortRangeFilterArrayOutputWithContext(context.Context) FilterPortRangeFilterArrayOutput
}

type FilterPortRangeFilterArray []FilterPortRangeFilterInput

func (FilterPortRangeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPortRangeFilter)(nil)).Elem()
}

func (i FilterPortRangeFilterArray) ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput {
	return i.ToFilterPortRangeFilterArrayOutputWithContext(context.Background())
}

func (i FilterPortRangeFilterArray) ToFilterPortRangeFilterArrayOutputWithContext(ctx context.Context) FilterPortRangeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterPortRangeFilterArrayOutput)
}

type FilterPortRangeFilterOutput struct{ *pulumi.OutputState }

func (FilterPortRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterPortRangeFilter)(nil)).Elem()
}

func (o FilterPortRangeFilterOutput) ToFilterPortRangeFilterOutput() FilterPortRangeFilterOutput {
	return o
}

func (o FilterPortRangeFilterOutput) ToFilterPortRangeFilterOutputWithContext(ctx context.Context) FilterPortRangeFilterOutput {
	return o
}

func (o FilterPortRangeFilterOutput) BeginInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterPortRangeFilter) *int { return v.BeginInclusive }).(pulumi.IntPtrOutput)
}

func (o FilterPortRangeFilterOutput) EndInclusive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilterPortRangeFilter) *int { return v.EndInclusive }).(pulumi.IntPtrOutput)
}

type FilterPortRangeFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterPortRangeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterPortRangeFilter)(nil)).Elem()
}

func (o FilterPortRangeFilterArrayOutput) ToFilterPortRangeFilterArrayOutput() FilterPortRangeFilterArrayOutput {
	return o
}

func (o FilterPortRangeFilterArrayOutput) ToFilterPortRangeFilterArrayOutputWithContext(ctx context.Context) FilterPortRangeFilterArrayOutput {
	return o
}

func (o FilterPortRangeFilterArrayOutput) Index(i pulumi.IntInput) FilterPortRangeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterPortRangeFilter {
		return vs[0].([]FilterPortRangeFilter)[vs[1].(int)]
	}).(FilterPortRangeFilterOutput)
}

type FilterStringFilter struct {
	Comparison FilterStringComparison `pulumi:"comparison"`
	Value      string                 `pulumi:"value"`
}

// FilterStringFilterInput is an input type that accepts FilterStringFilterArgs and FilterStringFilterOutput values.
// You can construct a concrete instance of `FilterStringFilterInput` via:
//
//	FilterStringFilterArgs{...}
type FilterStringFilterInput interface {
	pulumi.Input

	ToFilterStringFilterOutput() FilterStringFilterOutput
	ToFilterStringFilterOutputWithContext(context.Context) FilterStringFilterOutput
}

type FilterStringFilterArgs struct {
	Comparison FilterStringComparisonInput `pulumi:"comparison"`
	Value      pulumi.StringInput          `pulumi:"value"`
}

func (FilterStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterStringFilter)(nil)).Elem()
}

func (i FilterStringFilterArgs) ToFilterStringFilterOutput() FilterStringFilterOutput {
	return i.ToFilterStringFilterOutputWithContext(context.Background())
}

func (i FilterStringFilterArgs) ToFilterStringFilterOutputWithContext(ctx context.Context) FilterStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterOutput)
}

func (i FilterStringFilterArgs) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return i.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (i FilterStringFilterArgs) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterOutput).ToFilterStringFilterPtrOutputWithContext(ctx)
}

// FilterStringFilterPtrInput is an input type that accepts FilterStringFilterArgs, FilterStringFilterPtr and FilterStringFilterPtrOutput values.
// You can construct a concrete instance of `FilterStringFilterPtrInput` via:
//
//	        FilterStringFilterArgs{...}
//
//	or:
//
//	        nil
type FilterStringFilterPtrInput interface {
	pulumi.Input

	ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput
	ToFilterStringFilterPtrOutputWithContext(context.Context) FilterStringFilterPtrOutput
}

type filterStringFilterPtrType FilterStringFilterArgs

func FilterStringFilterPtr(v *FilterStringFilterArgs) FilterStringFilterPtrInput {
	return (*filterStringFilterPtrType)(v)
}

func (*filterStringFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterStringFilter)(nil)).Elem()
}

func (i *filterStringFilterPtrType) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return i.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (i *filterStringFilterPtrType) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterPtrOutput)
}

// FilterStringFilterArrayInput is an input type that accepts FilterStringFilterArray and FilterStringFilterArrayOutput values.
// You can construct a concrete instance of `FilterStringFilterArrayInput` via:
//
//	FilterStringFilterArray{ FilterStringFilterArgs{...} }
type FilterStringFilterArrayInput interface {
	pulumi.Input

	ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput
	ToFilterStringFilterArrayOutputWithContext(context.Context) FilterStringFilterArrayOutput
}

type FilterStringFilterArray []FilterStringFilterInput

func (FilterStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterStringFilter)(nil)).Elem()
}

func (i FilterStringFilterArray) ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput {
	return i.ToFilterStringFilterArrayOutputWithContext(context.Background())
}

func (i FilterStringFilterArray) ToFilterStringFilterArrayOutputWithContext(ctx context.Context) FilterStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterStringFilterArrayOutput)
}

type FilterStringFilterOutput struct{ *pulumi.OutputState }

func (FilterStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterOutput) ToFilterStringFilterOutput() FilterStringFilterOutput {
	return o
}

func (o FilterStringFilterOutput) ToFilterStringFilterOutputWithContext(ctx context.Context) FilterStringFilterOutput {
	return o
}

func (o FilterStringFilterOutput) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return o.ToFilterStringFilterPtrOutputWithContext(context.Background())
}

func (o FilterStringFilterOutput) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterStringFilter) *FilterStringFilter {
		return &v
	}).(FilterStringFilterPtrOutput)
}

func (o FilterStringFilterOutput) Comparison() FilterStringComparisonOutput {
	return o.ApplyT(func(v FilterStringFilter) FilterStringComparison { return v.Comparison }).(FilterStringComparisonOutput)
}

func (o FilterStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type FilterStringFilterPtrOutput struct{ *pulumi.OutputState }

func (FilterStringFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterPtrOutput) ToFilterStringFilterPtrOutput() FilterStringFilterPtrOutput {
	return o
}

func (o FilterStringFilterPtrOutput) ToFilterStringFilterPtrOutputWithContext(ctx context.Context) FilterStringFilterPtrOutput {
	return o
}

func (o FilterStringFilterPtrOutput) Elem() FilterStringFilterOutput {
	return o.ApplyT(func(v *FilterStringFilter) FilterStringFilter {
		if v != nil {
			return *v
		}
		var ret FilterStringFilter
		return ret
	}).(FilterStringFilterOutput)
}

func (o FilterStringFilterPtrOutput) Comparison() FilterStringComparisonPtrOutput {
	return o.ApplyT(func(v *FilterStringFilter) *FilterStringComparison {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(FilterStringComparisonPtrOutput)
}

func (o FilterStringFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterStringFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterStringFilterArrayOutput struct{ *pulumi.OutputState }

func (FilterStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterStringFilter)(nil)).Elem()
}

func (o FilterStringFilterArrayOutput) ToFilterStringFilterArrayOutput() FilterStringFilterArrayOutput {
	return o
}

func (o FilterStringFilterArrayOutput) ToFilterStringFilterArrayOutputWithContext(ctx context.Context) FilterStringFilterArrayOutput {
	return o
}

func (o FilterStringFilterArrayOutput) Index(i pulumi.IntInput) FilterStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterStringFilter {
		return vs[0].([]FilterStringFilter)[vs[1].(int)]
	}).(FilterStringFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationCisTargetsInput)(nil)).Elem(), CisScanConfigurationCisTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationCisTargetsPtrInput)(nil)).Elem(), CisScanConfigurationCisTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationDailyScheduleInput)(nil)).Elem(), CisScanConfigurationDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationDailySchedulePtrInput)(nil)).Elem(), CisScanConfigurationDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationMonthlyScheduleInput)(nil)).Elem(), CisScanConfigurationMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationMonthlySchedulePtrInput)(nil)).Elem(), CisScanConfigurationMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationOneTimeScheduleInput)(nil)).Elem(), CisScanConfigurationOneTimeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationOneTimeSchedulePtrInput)(nil)).Elem(), CisScanConfigurationOneTimeScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationScheduleInput)(nil)).Elem(), CisScanConfigurationScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationSchedulePtrInput)(nil)).Elem(), CisScanConfigurationScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationTimeInput)(nil)).Elem(), CisScanConfigurationTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationTimePtrInput)(nil)).Elem(), CisScanConfigurationTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationWeeklyScheduleInput)(nil)).Elem(), CisScanConfigurationWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CisScanConfigurationWeeklySchedulePtrInput)(nil)).Elem(), CisScanConfigurationWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterCriteriaInput)(nil)).Elem(), FilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterDateFilterInput)(nil)).Elem(), FilterDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterDateFilterArrayInput)(nil)).Elem(), FilterDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterMapFilterInput)(nil)).Elem(), FilterMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterMapFilterArrayInput)(nil)).Elem(), FilterMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterInput)(nil)).Elem(), FilterNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterPtrInput)(nil)).Elem(), FilterNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterNumberFilterArrayInput)(nil)).Elem(), FilterNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPackageFilterInput)(nil)).Elem(), FilterPackageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPackageFilterArrayInput)(nil)).Elem(), FilterPackageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPortRangeFilterInput)(nil)).Elem(), FilterPortRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterPortRangeFilterArrayInput)(nil)).Elem(), FilterPortRangeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterInput)(nil)).Elem(), FilterStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterPtrInput)(nil)).Elem(), FilterStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterStringFilterArrayInput)(nil)).Elem(), FilterStringFilterArray{})
	pulumi.RegisterOutputType(CisScanConfigurationCisTargetsOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationCisTargetsPtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationDailyScheduleOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationDailySchedulePtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationMonthlySchedulePtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationOneTimeScheduleOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationOneTimeSchedulePtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationScheduleOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationSchedulePtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationTimeOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationTimePtrOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(CisScanConfigurationWeeklySchedulePtrOutput{})
	pulumi.RegisterOutputType(FilterCriteriaOutput{})
	pulumi.RegisterOutputType(FilterCriteriaPtrOutput{})
	pulumi.RegisterOutputType(FilterDateFilterOutput{})
	pulumi.RegisterOutputType(FilterDateFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterMapFilterOutput{})
	pulumi.RegisterOutputType(FilterMapFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterPtrOutput{})
	pulumi.RegisterOutputType(FilterNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterPackageFilterOutput{})
	pulumi.RegisterOutputType(FilterPackageFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterPortRangeFilterOutput{})
	pulumi.RegisterOutputType(FilterPortRangeFilterArrayOutput{})
	pulumi.RegisterOutputType(FilterStringFilterOutput{})
	pulumi.RegisterOutputType(FilterStringFilterPtrOutput{})
	pulumi.RegisterOutputType(FilterStringFilterArrayOutput{})
}
